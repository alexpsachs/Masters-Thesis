{
    "elinw": "Okay sorry about that; I realized that those abstracts were there because the build here and the hg one missed a sync.\n. OK will do, yes it does include a lot of the same. \n. Resubmitted as a branch\n. This seems to have superceded the earlier request. Sorry I realize after the fact that I should have branched.\n. This should apply cleanly now\n. ok got rid of he commits from realitykind and eddieajau which were introducing non doc block changes to he pull request.\n. The diff shows that your stuff is untouched. It's not your commits that are reverted, it's my commit of your commits.\n. Was it discussed somewhere on some list that we would post/document about BC breakage when we know about it?  Maybe start a wiki page if we don't have one already.\n. Great! Formatting we can always deal with. \n. Please take a look at my branch which includes validation for url ad tel. \n. It's not using parse_url to validate it is using it to break up and then validating each element separately.\n. That's a good idea. I'll do that in the next round.\n. http://docs.joomla.org/Joomla_1.6_technical_requirements  says 5.2.4 but other places it says 5.2+\n. Michael,\nThese have been added to the libraries on the CMS, is that right? Just asking in case committing both cases potentially causes conflicts.\n. This should update to reflect the changes in  27990fbfa237f2acfc8d   which had a lot of overlap with the changes in my pull request in terms of lines touched. As a result I had to do Add after reviewing and reconciling the files manually. I went through each file several times before adding.\n. well that's obviously a mess. I think you can pick.\n. There's one non doc thing in this, which is that Opensearch was missing an index.html file, so I've added that.\n. wrong branch\n. Andrew there was a one line change to module helper done in the platform and nt the cms that definitely should be in the cms. There was a commit in the cms that changed that method slightly as part of the loadmodule improvement that I'll check over since it was part of my patch I think. \n. Andrew do you mean this line?\nif ($plugins[$i]->type == $type && ($plugins[$i]->name == $plugin ||  $plugin === null)) {\nand these\nif ( !isset( $plugin->params ) ) {\n                        // Seems like this could just go bye bye completely\n                        $plugin = self::getPlugin($plugin->type, $plugin->name);\n                    }\nI'll try to figure out what was going on there.\n. These changes were made in the platform on 11/6/7 \ncommit 18d44a7a4904b896447ac3a478ff2aecb26378ff\n\"Correct some errors in the router and unit test\"\n. No that's wrong sorry, misunderstood the diff.\n.  11c7f43e9ef2857bcd3b8313eacc7ebf0b7dfb95\nJune 24\nThere was no parallel commit made on the CMS.\n. Andrew this issue in the CMS tracker http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=24537  has already been committed here so you will probably come up with a mismatch there unless we do the commit to the cms first.\n. http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26365   Has the changes for the plugin helper.\n. http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26366  is a CMS patch for the module helper difference.\n. http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=24285  was committed to the platform but not the CMS, I've asked for testing in JBS.\n. http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26241  This has been committed to platform but not CMS. \n. These take us up through July 7.\n. Actually there is one change I missed which is in database/table/user/php and at the moment i can't get that into the right place to add here.\n. Forget that, it has been committed by a different root which is why i wasn't getting a change.\n. According to comments in the CMS tracker this does not solve the issue and was closed ... can you please clarify if this is supposed to be close also?\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26288\n. You probably need to follow Ian's instructions for rebasing that were sent to the framework mailing list.\n. This should solve the conflicts\n. You definitely should not break the old api.\nParameters in fact can be passed, and it's quite important as working with loadmodule has been showing me. Many plugins that are display oriented pass parameters.\n. Should be okay now.\n. Merged up, got rid of a conflict.\n. oops\n. These tests are failing because when the replacement happens the results in the two fields replaces, which are hidden and spacer, are different than what happens when they are not replaced and therefore the actual and expected do not match. For example the non hidden element in the basic test is replaced with a hidden element which should not return html. \n. Yes the name attribute.\n. Ian Aaron posted a pull request for this.\nhttps://github.com/joomla/joomla-platform/pull/1069\n. Ok think this is cool now except that if I do exactly 2 then the comment after the return doesn't line up.\n. So the range checks would be a length if a string and a value if a number?  Checking datatype as a general issue makes a lot of sense to me because it seems here (and elsewhere) that we are having to do a lot just to do that and it should not really require separate rules, especially since that is just one small part of what you need to check for.  \nI like the positive, negative, zero idea which seems elegant even though i don't think it saves and code :).\nSo you are saying the maker of the form could supply a regex? I like that a lot also. That will save a lot of adding of custom fields.\n. Also, in thinking about this whole issue you'll notice I added logging for misconfiguration e.g. if the max was less than the min. I am wondering if that is something we should think about doing more generally in JForm (e.g. if you forget to put a value attribute for checkbox it will not save, so log when there is a save of checkbox with no value attribute). Also, what should the person filling out the form see in that case? Should the configuration options just be ignored if they contradict each other? Should save not be allowed (in which case you have to tell the user something or they will go crazy trying to save)? Or should it save null?\n. Hannes,\nAndrew suggested a more general approach so that's what I'm working on.\n. Well since you up the ante considerably :P it's not that close unfortunately. You can close it if you want and i'll reopen when i'm ready to push the newer version.  Hopefully I can get  a block of time to finish it up in the next few weeks.\n. There are supposed to be a minimum of two spaces as I understand the rule. \n. This needs to get added to the pull request that is in staging already.\n. No this was already committed in the platform a while ago.\n. see #1067\n. Could something similar be done for injecting baseline rules?\n. I believe that except for the reference issue this finishes off ParamNameNoMatch.\n. heh\n. There you go.\n. Not sure why this didn't upddate but the same commit is in the newer pull request.\n. I think it would be great if you would break these out into individual items.\n. The issue Christophe referenced has been closed ... what does that mean for this issue?\n. Please update your issue category on joomla code to platform synch and put a link to that commit.\n. http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=25962 is the reference that disappeared above.\n. added code based on tracker_item_id=25962\n. Oops this was against master.\n. Agreed about the original purpose of $content based on other things related to early versions of the custom module. I am going to copy this comment to the original issue and close it on the CMS tracker.\n. It says against staging at the  top???\n. Andrew, Christophe raised an issue in the CMS tracker that we don't necessarily know where there could be potential issues with this. What do you think?\n. Honestly I'm not sure, I think it is more hypothetical.\nWould you mind looking at this issue where there is a discussion about the same general topic http://code.joomla.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26298?\n. Should we also do something like you suggest for is_file?\n// Note: DirectoryIterator::getExtension only available PHP >= 5.3.6\nI think it won't solve the problems on the CMS side but it probably makes sense to do when possible.\n. Just noting that this is a separate issue from the fact that deprecation logging was causing errors. These issues are not visible in the CMS but are visible in other platform applications.\n. Actually there is still one remaining infinite loop issue that happens when the database is not present. I do not believe that has been fixed yet--Sam has a patch in the CMS tracker.  http://code.joomla.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26550  I'd like to ask you to reopen so this doesn't fall between the cracks but if it has been fixed can you show me where so I can update the CMS tracker with a patch? Thanks.\n. That actually makes the most sense to me to have as the fall back but then is that going to cause b/c issues for existingapps counting on the default? \n. Are we going to do something with this?\n. Ok, check for me tonight or tomorrow on IRC and we can look at it.\n. ok will look for you\n. If users are changing their own, it's working as expected is that right?\n. The main concern i have (not really knowing about this piece of code) is that JError is deprecated and i think you should be using the newer APIs. You might want to log the errors also.\n. Step by step that's the way, removing deprecated code is going to go library by library but we shouldn't be adding to it.  I'd like to hear more from Sam too.\n. Would you please use JLog and a $msg rather than using JError.\n. Exactly just to the JLog and I would say use category installation unless someone has another suggestion..\n JLog::add('Whatever you want.', JLog::WARNING, 'installation');\n. You don't want to log that Jerror is deprecated that will happen already whenever JError is used. \n. Updated to going back to setting that property even though it does nothing at this point since it is referenced in a few other places.\n. Sweet!\n. Ok will send that up in a bit. \n. See replacement pull request.\n. Replaced\n. Andrew I believe you have that module change wrong. $module->user is only not empty when there is a 1.0 style custom module, which is to say that it is type custom rather than mod_custom. So this in fact should never be  true in a current instance of the CMS. \n. Ok do not write comments on pull requests at 4 in the morning. Sorry about misreading that :P.\n. Replacing with new branch.\n. Has this been cleaned up in the meantime? \n. oooo I missed he session part.\n. Louis,\nShould the user just be set to null  if there is no user specifically available (either JUser or set explicitly in the application  or a default user?  Should there be any cases besides the user table where you have to have a userId and get an exception if you don't?  I was looking in JContent and it uses the idea of a default user as a fall back but what if there is no default?  I guess I mean to what extent is/should the platform (as opposed to application) setting required fields? \n. Just remake the commit but next time click on the part at the top where it says master and change it to staging.\n. NP .... just want to get under 200/500 :P.\n. Should be mergeable now\n. Ian, that's the message you get when you run the tests in the libraries folder instead of the joomla folder ... \n. What we have kind of been doing is for @return putting the name in some places ... but it is more readable if we put  \n@param object $child A JNode object to be added as the child node.\nbeause some of those object names are very long.. Sooner or later we will have to do a sweep to make this consistent.\n. Do you want to just send a pull request for this? Then you will probably get more feed back.\n. Hi Julio, \nWould you make your pull request against the staging branch please? If you are making the request via git hub just click on the box that says master and change it to staging. \n. Make a platform application with an error but don't tell it to echo the errors i.e let it use the default error handling that looks for an error page. Of course, don't have any error.php files avaiable in your application (as you usually would not in a cli app). \n. Is there a reason there are no unit tests for jerror? \n. Hm actually there are some in the trunk I guess it's more no one updated them, I guess I just dug myself a hole didn't i?\n. https://gist.github.com/1172723\n. replaced with new pull request\n. You have to go read the old  reports, people say that it happens if the user time zone is changed. \nYou can see there was quite a bit of back and forth on the original issue report.\nhttp://code.joomla.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=24532 where in the comments someone says how to reproduce. \nSubmitted By: Alex Yap\nAdddate: 2011-01-24 22:49:57\nYou can replicate the said error but calling the JFactory getDate function by\npassing in an time off set parameter. In Joomla 1.6 the time off set parameter\nis suppose to pass in as an object of DateTimeZone();\nFor example.\n$userTZ = $jConfig->get('offset');\n$newTZ  = new DateTimeZone($userTZ);\n$date   =& JFactory::getDate('now', $newTZ);\nAnyway I know we aren't supposed to bring issues over here until they are patched in the cms, but it just seemed odd to me and also I'm not sure how the original commit was lost, I guess somewhere in the merging back and forth.\n. we'll just pretend this never happened.\n. Oh it looks like the automated tester is broken. \n. Click pull request, then change the destination from master to staging (just click on the block where it says master and start typing, you'll get a drop down).\n. Puotr. why don't you use the github web ui to edit the file and send a pull request for this change?\n. I'm not sure what this has to do with sessions. You are getting that symptom because you logged in as a member of a user group that does not have permission to see \"special\" items. \n. Wow I think this is happening for me as well when trying to save a blanked out article. \n...\nActually I think this is because $updateNulls is set to false in the content table\nAlso #1077 although that has to do with a different table.\n. Okay I found the problem in JTableContent which is that it was using !empty rather than isset for a condition and that was leading to other consequences \n. The db schema is actually part of the application not the platform.\nIf you checkout the CMS Trunk you will see that the size of the session column has already been changed for 1.7.1.\n. I tried this in a grid in the CMS and it worked fine from what I could tell. It didn't change things when there was a task, and when i removed the last two arguments the icon wasn't clickable.\n. I'm not sure what the point of a default is if you can save without a value. I think you need to choose one or the other.\n. I think this is mainly a case where people are using default rather than preselect. For example in a list you can define which value is initially selected without making it the default. Then if the user changes it to something else that is null it can save as null. That's html/javascript. You can do it for checkboxes too.  Default is a special case of filter, something that happens later, on save, if no choice is made or no response is typed. It's similar to the integer filter which forces 0 even if the user left it blank.\n. By the way on checkbox there is an attribute checked which will preset the checkbox to checked but still allow save to null.\n. Andrew is that going to solve the infinite loop on missing database issue in the CMS?\n. In the system  we use the deprecation tag gives the earliest possible release on which something will be removed. So I would say that JBrowser will be around until probably 12.3 at the earliest and that gives far warning. \n. Just arbitrary but more than 3 months notice. I don't think we have a standard minimum notice but we've discussed before on list that developers need probably 6-12 months notice.\n. I would say minimum 12.2 then. 3 Months is not enough notice.  But I have absolutely no problem with removing deprecated items in 3.1 or even 3.2 with fair warning if it means that users and extension developers will be able to move to the newer version more quickly. It's like a short term legacy layer. We don't want to  make them prioritize removing JBrowser use over moving to UCM or making a Finder plugin.. \nAlthough that said, it could go into the CMS libraries until 3.0 is released--it really would have to. in fact since not having it available will break 2.5. extensions. \n. Actually in thinking about this some more I would add \n@note   Will be removed when PHP support is removed from the minimum supported version of PHP.\nSince we have no real idea when that will be and we are supporting 5.3 for the foreseeable future I think that's adequate even though it breaks the docblocks rules.\n. \n. I think that is an error in the check, it should be aligned. \n. Is this a variation of the same issue that is in the CMS tracker? \n http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26906\n. Is this issue impacted by the check for native support that was added?\n. Oh that is a messy pull request.\n. Christophe, \nThat idea was discussed several months ago and will happen eventually. As you can tell, the code I submitted alreay begins the process of looking in folders with the same names as the types.  Please note that this is not a refactoring this is a bug fix (getConnectors is looking in the wrong places for files, for the wrong class names, and so on) and attempt to add a field that is absolutely necessary to be in 11.3 if we are going to have useful multiple database support in any applications.  The bug fixes to getConnector are only consequent to making the field. In the future someone can take up refactoring including reorganizing the files but that is not what this is about.  Let's try to avoid scope creep on bug fixes.\n. Ok fixed the missing : and } . \n. Should we look for driver.php? It seems out of bounds to me at this point. \nIn other words are you saying just do $type.php and be done? \n. sigh i's going to be easier to close this.\n. Peter do you have phpunit installed? You can run the locally. There are instrutions on the wiki and here\nhttps://github.com/joomla/joomla-platform/blob/staging/docs/manual/appendices/analysis.xml.\n. The 453 are the same ones everyone has and have nothing to do with your code. But if the numbers go up it's due to your code.\n. This was something i was struggling with as I went through because there was so much inconsistency but I believe it is really not quite proper to have a constructor return something. You don't say $something = JSimpleCrypt so it's not exactly a return in the same way that a regular method is.\n. +++++\n. Might be easier to break this into 3-5 pieces rather than having to have it all 100% perfect.\n. Some comments, I had to change 5 lines not the 4 lines that Louis said on the other pull request, but this does now return the format for the connectors described in the docblock. The other issue is that this eliminates support for a file called driver.php in a folder. After some discussion with Ian, we concluded that such a file never existed in core and it is highly unlikely that it exists in an extension. However, when/if this is committed I will add a note about that to the potential backward compatibility issues document. For anyone with an existing driver.php file that is not covered by the newer drivers can easily rename that file and put it in the appropriate location. From my reading of the code the required class name needed to exist anyway so that is not a concern. \nThe field does not have a unit test but rather has a skeleton as for the other fields. However, I have tested this in the CMS in the following way.\nAdd the field and update the database library.\nIn the installation application fid the database.xml form. Change the database type field to something like\n            \nIncluding databases you do and do not have on your server. \n. A bit more style and other work while I was in that file.\n. As a note, you'll only get the error if you run the tests in a certain order. \n. That's exactly the issue, currently the method errors out if you do not have $this->tablePrefix  (either a string or null), but it fails silently on the last iteration of the loop  (unless you echo out the results). \n. https://gist.github.com/1326876  shows you why I came to that solution, most likely there is something better.\nNow you could say just do the factory where you are using it, which is what I did at first, but it seemed more likely to be error prone if you did that instead of putting it in the method. But I do think maybe the loop issue pushes the balance back in that direction.\n. :) Works perfectly, thanks.\n. The warnings are  there, the errors are not. For one thing it looks like @param only has one space after it in a number of locations. \n. But it's also true whether or not the rules say to spell things correctly you should spell them correctly, and you should always aim for the highest standards of code. It took more characters to argue about whether correct behavior is required in unitests  (not to mention time and energy of several people who have their own projects) than it would have to fix them.\n. Christophe, this is designed for a different purpose which is to display an image.  If  you lcook back to the change of mimetypes committed to the CMS you will see the use case for this as a field type. It's not the same thing as the media field. You can read back in the jbs chat on Friday for extensive discussion of this. http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26940\n. I think if you are going to open up to external sources you do need to have a way to limit those to a specific list. There is a lot of potential for abuse in letting users hot link to media external sites that were not designed for the purpose of rendering on other sites. It could easily be or be interpreted as an attack from your site on the site hotlinked. Also I would add an attribute something like INTERNAL so that if you say INTERNAL='True\" then you can limit the sources to internal folders only. Still it would be great to incorporate a general solution to allowing use of Gravatar type services.\n. Yes I know you didn't. I think what you are saying makes sense. \n. Nice\n. Hannes are you going to clean this up? I'd just make a new branch with only the deprecations in it. I'll do it if you don't feel like it, leave a note.\n. Thanks to Angie for finding this issue while working with the Flickr example application.\n. Ok I wasn't really that happy with what I had.\n. Thanks Gabriele!\n. Hannes deprecation is the release at which deprecation is announced and is a warning that it will be released in the future. That is how we use it thoughout the platform and the CMS.\nWe learned a long time ago not to predict when things will actually be removed but instead give a warning that removal is coming.\n. Those who forget the past are condemned to repeat it.\n. Right now they are still figuring out how to package the strings so in the CMS it will get put into the file what holds all the library strings.  Not much else to do about it right now.\n. Rebasing isn't necessary but running the phpcs can be helped by using ant. There is some documentation in the docs folder though not that much.\nIn terms of replacing \nhttp://book.git-scm.com/4_undoing_in_git_-_reset,_checkout_and_revert.html\n$ git checkout -- hello.rb  somehing like that\n. Docblocks use spaces, everywhere else uses tabs.\n. One thing I would like to emphasize since this is getting confusing is that for the platform work we need to simply focus on getting these two files fixed and unit tests successful. The CMS work is a separate issue, though it is nice to test the cms on postgres as a way to test the libraries we can't support in the CMS until the libraries are done.\n. Gabriele,\nI think if you git mv your files to the right location with Omar's structure then you can send him a pull request. \n. Right I don't know why that work was done in that way, but I think if you use git mv you will keep history as far as I know even though all the other history is gone.\n. Thanks Ian and Rob.\n.  Long run it might be better to set the options  array elements template, file, params individually so that applications don't have to repeat them, but I'll wait for feedback on that.\n. I think you might have the two tests failing that I do. It's because of not loading JRequest.\nI have just hesitated to do since it's deprecated.\n. Right because it must be imported when the suite is run. So the question is what to do about it, but let's make that a separate issue I guess. \n. I don't think it is from you, it is from something yesterday. It's showing up on  all of the tests.\n. Rofl.\n. This was failing for me too, due to \nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/factory.php#L856\nWhich is I think because there is no JRequest loading, but I thought it might make more sense to update the code not to use JRequest.\n. No you're right, I get yours when I run the whole suite and the JRequest when I run just the html.\n. I've asked about this a number of times on the platform list with no substantive response, so I'm just sending the request to take or leave.\n. Funny since there is no net change. \n. ok\n. Andrew the problem is that the object does exist but it is empty.\n. This is a better solution I think. \n. I looked at the build site and this checkstyle error is not related to the file this change is in.\n. oops closed by accident.\n. Yes I think I agree with that.  Will do a separate request.\n. Andrew it also causes failure as it is, so I remade the pull request with the original proposal which is just to additionally check that the $connection is not null in addition to checking if it is an object. No one ever responded on list with a better suggestion\n. We're not using index.html files in the platform.\n. :)  Really nice\nObviously you need to sync up with the current build of the platform and take out the index files etc but my bigger question is shouldn't each removed method be calling its replacement? Or is that being handled programatically (it's a lot of code, I could easily be missing something)?\n. Yeah, I have had pull requests like this before.\nI think you can rebase this branch onto another branch that you create  with a clean pull. You should be able to just use the \nhttps://github.com/orware/joomla-platform/commit/413e2321a686f62513123eb13a12a2dbcde51b23\ncommit.\n I'm not positive on all this but I also think it is better to use git mv to move files around.\n. hm I'm not sure which  I think is better.\n. As per Andrew's request https://github.com/joomla/joomla-platform/pull/570\n. I'm with Ian on that one. I think it is more readable also.  I'm wondering though about what was raised by Andrew about grouping all the MySQL derived ones together  https://groups.google.com/forum/#!searchin/joomla-dev-platform/drizzle/joomla-dev-platform/cUMgx-351wQ/E4MYobCicdUJ ... I don't know how much of a real issue/convenience that is for any other database but for MySQL we have MySQLi and Drizzle and probably others many of which just have a small number of specific differences but his example of the possibility of different versions is also potentially important. Also Louis had a somewhat different approach earlier in that thread.\n. It seems like we're adding an extra layer of hierarchy for  no reason that has been explained.  is there something else besides a folder named driver that would go into the actual database folder? I think the way it is now shows the problems with not enough hierarchy, but if there is not something else anticipated it doesn't make sense for me.\nThe bigger question is whether it makes sense to organize by database or object type. I think tifhere is something to be said for having packages by database if the idea is that eventually people will pick the packages they need and leave the rest.\n. Yeah I see how you are thinking and that structure doesn't have the extra level. Happy to lose the database/database.\n. Currently this pull request is out of sync with a number of impacted files. \nI would like to make the following proposal.\nThis should be broken into two  phases or steps.\nStep one should be the introduction of the new code in the present location, database/database.\nOnce those are merged do Step Two which would be to move all of the files to the new locations without making anadditional changes in the same action as moving.\nMerge those.\nThen we will not have to worry about regressions due to having to hand merge all f the changes from the current libraries not to mention the loss of history. Done carefully I think it can be seamless. Personally, if the code is good I have no way of testing) I have no problem at all with having additional classes and methods available in 11.4, but  I think rearranging thngs probably rightly should be done after 11.4. It just adds a level of complexity that is unnecessary in the short term.\n. Rouven i know that in my environment there are places where tests fail because JRequest is not loaded even though they pass the tests that jenkins runs, so I would be extremely cautious about this. \n. I do think in the long run filters should probably be broken out into their own folder.\n. Good catches\n. Actually I think a lot were due to having an extra tab on all of the lines in the method.\n. I wanted to mention that this is quite important for the CMS since currently there is all sorts of different kinds of solutions to forcing a protocol in the many different places where urls are expected (various components including weblinks, newsfeeds, content, contact, several modules and plugins, the url field in general (since we do have this field). I think it is a useful filter to have for web applications which do often have urls embedded one way or another. But if it's not useful for the platform I will propose to put it into the cms libraries so I can clean up that code. \n. To replicate the bug? You can just try to run Finder n mysqli with it not fixed. BTW I should say it is not a fatal error it is a Notice and it causes Finder to fail as I mentioned on the mailing list post where I raised it. Klas reports having seen it in other places too. Basically it is when you have already closed but then try to close again. It could be race conditions in some cases but it's not true in all cases. It's not a race condition in finder as far as I have been able to determine.\n. I'm sorry Andrew, but I posted a discussion on list before submitting this patch. I'm sure you read the thread which discussed it and then the follow up from Klas that he had experienced the same issue. Perhaps it IS bad code, but what is wrong with putting in a check to make sure there is a connection before closing it? Given that no one had any other suggestion this is the solution that solved the problem for me. Of course if someone had suggested another approach that would have been greatly appreciated. https://groups.google.com/forum/#!topic/joomla-dev-platform/fJ0NrW56qt8\nAnd yes of course I have pushed this \"upstream\" to Michel and myself and asked for advice from the original developers of Finder  but no one has come up with another solution.   Presumably it does not blow up in MySQL because it tests is_resource rather than is_object. There is no point in even including the is_object test since the object will always exist so we could also conceivably just drop the code but then again that might lead to other problems.\n. Exactly though about the get ... I spent really a whole day trying different approaches that seemed to make more sense, but the only thing I could find was that if I dumped out  get('connection') it would be null. That's NOT checking that it exists, it is checking if it actually contains anything. It exists always that is why is_object doesn't work. \nI will try what you said now. I really tried to dig around tonight and the one place I found that seemed likely was this:\n// Close the application.\n    JFactory::getApplication()->close();\nWhich is used in two different places having to do with JSON response. \n. Andrew, I think the issue is in that general area that I said, but also we have to keep in mind the mysqli functions don't always act like the similarly named mysql ones so like mysqli_connect  http://ca2.php.net/manual/en/mysqli.connect.php versus http://ca2.php.net/manual/en/function.mysql-connect.php\nThe issue in the Finder code is in this general area\nhttps://github.com/Finder-Integration/joomla-cms/blob/finder/administrator/components/com_finder/controllers/indexer.json.php#L259\n. So what I am seeing is that if the object exists and is null is_object is returning true not false.  Is me checking != null  as opposed to !== null  is why it is returning false? \nI think  what is happening is is exactly what you said, mysqli_close only nulls out the object it doesn't destroy it (which is said in one of the comments in the manual) . \nYes this is the back end indexer and what happens is that it starts then hangs. and you get the \"Warning: mysqli_close(): Couldn't fetch mysqli in /home/ian/www/finder/libraries/joomla/database/database/mysqli.php on line 160\" message.  http://pastebin.com/MWmv6cEV    You  are also right  about there being a whole bunch of destructors gong on and it looks like maybe the issue is actually something in jSession.  \nIt definitely could be finder in that there may have been a change in php 5.3 \nI will also say that searching on this error message shows that it is not an issue unique to Finder. \nNow this it is complicated, but i went back to the build as it was on November 30 which is the data I submitted the first report \n. Done.\nThanks for working this through with me. \n. ok should be good now\n. Mysterious new tabs removed, pull message updated, history squashed.\n. In deprecation notices if possible please state what to use instead.\n. I suggest closing this pull request. If  Andrew is really giving up then we can make a new one just based on Andrew's plus the code style clean up I did in my pull of Andrew's  branch, assuming that nothing works worse with that than what we have now. I think the messiness of  this is more about people not understanding how to work with git than any ill-intent.\n. Yeah we all understand that feeling.\n. That makes a lot of sense to me. I've written a bunch of rules and mixing the two together has always felt wrong to me.\n. I had a number of conversations with people at Joomla and Beyond with issues around javascript caching.\n@adriansi7 \nIf that particular fix works for you why don't you just fork and edit the file and send a pull request?\n@stutteringp0et  The fact is that the platform maintainers rarely read the issue list .... usually developers submitting issue reports would be working on code to correct the issue and if they weren't sure how they might post on the platform list. When their code was finished they would send it as a pull request but that has not happened in this case. If you want to have a general discussion of the topic the platform list is probably the way to go.\n. Given that it was only done for 11.3 which was only merged maybe a month ago, it's not suprising that the cms hasn't necessarily caught up perhaps.Date of commit to the platform is not really relevant if the platform hasn't been merged. :)\nHow about if we just get the CMS to commit the change?\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26635\n. Ok so we are making progress?\n. For some reason Andrea thinks the letter t matters in urls. Not to mention h and p. So fussy. Sigh.\n. David,\nThere has  been a huge ongoing discussion of this in JBS, would you want to join in on the discussion of solutions there? Then we can make one proposal that makes sense maybe.\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=27499\nhttp://groups.google.com/group/joomlabugsquad/browse_thread/thread/65bb9489b91b10ae?pli=1\n. @eddieajau  we never got a reply to our post to the platform list about what the expected behavior is.  So no it has not been dealt with.  It would be awesome if one of you would reply to that email.\nhttps://groups.google.com/d/topic/joomla-dev-platform/a0QirzNDaxI/discussion\n. Agree elkuku, really wondering about that one ... and why we don't just fix that?  :)\nThis diff shows the code that we are restoring\nhttps://github.com/beat/joomla-platform/commit/2aee17e10aa931a5a14ddd5e779bf862e0046102#libraries/joomla/application/component/helper.php\nSo no, in fact this is not a bug introduced by restoring the code, it was there long before.\nif (($path = JApplicationHelper::getPath('toolbar')) && $app->isAdmin())\n```\n{\n// Get the task again, in case it has changed\n$task = JRequest::getString('task');\n  // Make the toolbar\n  include_once $path;\n}\n```\nSo it should go back to this exactly and then if people want other changes that's great but a separate issue.\n. I actually want to add that I don't know if this belongs in the platform except to the extent that  it already integrates permissions. I'm not sure that category by itself shouldn't just be a list of categories and then somehow the user can apply permission rules to it. But it is what it is right now, it's paying attention to some permissions but not others and that is making it broken for the ways that it is used. Part of me thinks that the cms should just have its own field extended from the base category field that works in ways that make sense in context.\n. We have an issue in Finder with invalid UTF 8 which Chris fixed with $input = iconv(\"UTF-8\",\"UTF-8//IGNORE\",$input);.\nSeemed to work well. I think the issue might be related to debug as well.\n. I think what's happening is that it is returning the number of checked items/branches not the number of changed items.\n. Christophe.,\nI'm still waiting for anhyone to reply to my question about this on the platform list.\n. @Louis,\nNo one ever responded to the question about expecte behavior that I asked on the platform list which is why we couldn't move forward. It would be great to get a reply on that.\n. So as I discussed on the CMS tracker, I guess my feeling is that it is not possible in any way to list all possible databases that you don't support. At the same time if you are an advanced enough user to be testing database drivers shouldn't you be advanced enough to edit the places the field is used to add to the list? \nI think we need to understand that some applications will not support all databases and will have for example Oracle specific code or MySQL specific code not to mention non relational types. Now, I do think that adding a black list that would basically be used not for all hypothetical databases but for those databases for which there are drivers and which are supported on your server that are not supported by the application makes some sense. But that doesn't really deal with the scenario Nikolai proposed which is adding a new driver to the libraries.\nI very much like the idea of being able to easily add to  the default drivers, and maybe I'm overthinking though. \nI'm also wondering whether you are seeking a CMS focused solution in the platform. My feeling is that perhaps we can in the CMS have a way of designating certain drivers as experimental and not fully supported (i.e. we don't promise that they will work in all situations).  Even in a release we could say this driver is a beta. Right now the field is written in a way that if no supported databases are specified we assume all of the databases with drivers are allowed. As stated earlier, we currently support all of the drivers in the platform, so for now we could just leave off the supported element and solve this problem in the future more generally. I have no idea in the world how the CMS would test on Oracle to the standard of testing that we assume, we can barely manage on MS databases or PostGres.\n. Actually just wanted also to mention that as Nikolai acknowledged on the CMS tracker the current implementation does not return options that are not available on the server.\n. http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=27680\n. http://code.joomla.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=27702\n. Since this is a backward compatibility break can we please at minimum return to what was there before?\n. No I meant the problem was a break from 1.7.2.\n. So the change Matias referenced was done before 1.6. Has this issue been present throughout this release cycle?\n. Wouldn't you do it for the guest group and level?  Also #1474 relates to the issue of guest status staying in place after login in some situations.\n. Can we deal with #728 prior to doing this please. \n. http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=27722\n. This is a change in a CMS file so you should make a pull request in the CMS repository.\n. Good idea.\n. I thought about it and I think actually using null and 'distinct' make more sense. Null + any value make a Boolean, it does not have to be true/false 1/0, those actually make it three possible conditions, null, true and false. But more importantly I think $query->('something','distinct') makes for more readable code than $query->('something','true') although the latter will work as well.  I'm not wedded to it if people feel strongly otherwise, however.\nShould these be in a __toString test also?\n. Okay I think this will work for everyone :).\n. Our docblock style does not use that for @param, which if you think about it would really destroy the layouts. That's why we put the information in the description. We only put the class name as the type for the return. \n. I would only do that in the case  that there is a single @param tag. The goal is to have reading the source code directly easy and in an IDE as universal as possible. If we start catering to specific IDEs that is a long terrible road in which there will never be satisfaction since there will always be new ones and new releases of old ones we'd have to update thousands lof lines of doc blocks more or less quarterly.  Rather the goal should be to have the IDEs cope with Joomla correctly since that is what they are supposed to do.  If they aren't I would file a bug report there or even better work on Joomla specific plugins.\n. Andrew are we planning to do that in all of the files?\nBecause that is a style decision that should not be done piece meal but one big run through the whole code base. Also that change should be documented in the style docs?\nit's reading it in source that is the issue given that other params will now possibly be far far away from their types.\nAlso am glad to knwo that we are not asking people to make changes because of the stated reason of personal preferences of one individual as above. \n. Oh man where did that error come from.\n. Should be good now.\n. /headslap, i was thinking about multiple unions initially, got sidetracked.\nShould I also be adding Union to test__toStringSelect() ?\n. I'm going to change the test to use a data provider and not use the inspector, I think, but I believe the tests themselves are covering what they need to cover. I handled the multi union in a different way than Andrew suggested but I think that the expected results in the tests are what he was looking for and this is delivering them. Let me know if that isn't the case.\n. So I talked to Ian about this a bit and I think a data provider doesn't give a lot of advantage. Also, I think i will work on updating away from the inspector for the whole class as a separate pull request.\n. The easiest thing (from experience) is just to make another branch and do the commit again there.\n. IT's actually quite important that you not allow the first level name to be a folder because that will keep webmasters from being able to install another application on their domain in  a subfolder. You could say it is a bit paternalistic in preventing users from making mistakes but we know on the cms side that we get many but reports that are related to the user error of having the matching alias. \n. Ugh \n. I'm going to close for now.\n. I don't see how the installer can know that another extension is using a folder that specifically belongs to an extension. Having other extensions use the same folder seems like a very dangerous practice for just this reason.\nCompare with #287 there seems to be some debate about proper  behavior.\n. Couldn't we do this in a way that preserves history more completely? These aren't really new files for the most part. i.e. can't we create the new and then git mv the old?\n. I also have a question about the class names that include SQL. Is that going to fool the autoloader when it breaks things up by camel case? e.g. https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/database/database/mysql.php#L23\n. But should we just do that now as part of this clean up /reorganization? That's  the question. \n. Why don't you make a pull request for this? It's more likely to get a response that way.\n. Can someone clarify the status of this please.\n. I think when it is an (int) you don't use quote. \n. why don't you just make a pull request. It's really hard to get feed back from anyone when you don't have code and tests.\n. If you have a solution would you please go ahead and send a pull request? Thanks\n. If you're experiencing this in the CMS would you please check in J3.0 since simple pie is not being used any more?\n. I think you're really talking about a cms issue right now since the cms is using a version of JFeed, so you should probably put the report in the CMS tracker. What would be great is if you would look at the code in the JFeed pull request and see how it would be used to address this (or if there would be a problem interacting with cache.). \n. We're waiting for some code and tests to see how it would work.\n. Okay in that case you can close this issue and just leave that one open.\n874\n. Sometimes it is just easier to make a new branch and do a diff between the old and new, apply differences to your new. You do lose some of your own commit history that way but you only have one commit anyway. \n. Isn't there a difference between having a parent id of 0 and not being in the assets table at all? If an asset is not found  shouldn't it fall back to parent_id =1 and the default actions?\nAndrew, I think there is a huge question out there about what to do when the assets table has lost its integrity  there are many many instances where it happens in real life, not because of anything internal to the API but because of ways that people mess with their databases and sometime'ts try to get around the API (or haven't fully understood it). If the assets table is borked huge numbers of queries basically slow to a halt. I think there has to be some way that when a messed up asset table is detected rebuilding the tree is triggered (rather than simply skipping around the problem).\n. Actually i should clarify that the root has parent id of 0 in both the asset table and the categories table, so it is a valid value if it exists only once and really is the root.\n. Yes I saw that, I just wanted to claifyr what I said earlier because we have a really really serious performance impact of  problems related to that specifically when asset tables end up with 2 or more records with parent ids of 0 which seems to .be very common in migrated databases;. I hadn't really noticed that part of the code before but it explains some of the serious problems that we see.\n. We need to handle this as a b/c break and I don't think it has been documented at all has it?\n. Done\n. I might as well be completely annoying.\n. :)\n. Sweet, hits all the places I was worried about being impacted. :)\n. Shouldn't this be documented in the minor compatibility change list since it will potentially change behaviors of forms for people with existing checkbox fields?\n. See also https://groups.google.com/forum/?fromgroups#!topic/joomlabugsquad/CH5apeXluNs\nI really don't know what to say, I personally think this was an out of bounds change given that there are no tests and no discussion on list and no documentation,  but it's in a released version so by definition the maintainers accepted it as a valid change. \nI'm going to leave this open for someone else to decide, and suggest getting  Mark's take on it.\n. These are the basic rules I have used for editing comments.\n. Since this uses Git, you need to make a fork of the repository, edit it, and then make a pull request back. If it is just one file you can do it completely online (navigate to the file and click Fork and Edit). Since you are adding a new file, however, that really won't work.\nThis patch seems to include  a number of unrelated changes and CMS changes.  Only platform pieces should be submitted to this tracker.\n. Any update on this? See #1413 \n. The link is sending me to an invalid page.  Is there a reason this is a platform issue/solution if it is about fixin cms plugins? \n. Does that mean we can safely think about letting the CMS 2.5.x series use the 12.x platform? That would be awesome.\n. The CMS libraries that are just for the CMS would go into the cms folder, that's exactly right. But skip having to track what to migrate or not and duplications.\n. I think this is way better than an LTS version and more like what is seen in other frameworks, really good tolerant support that respects the fact that application development has different needs than library development. \nWhat downstream apps do is up to those apps and not the platform team. \nI do think it is worthwhile for the team to consider packaging releases as well as tagging. It's a slightly different experience to get the archive from the download tab than from the zips tab. \n. AND you can have those bleeding edge applications running right next to the CMS without having to have a second complete copy.\n. For a more detailed discussion see https://groups.google.com/d/topic/joomlabugsquad/CH5apeXluNs/discussion\nIf you think a different solution would be better please let us know.\n. Wow fastest merge ever :P\n. Andrew about the parentheses comment ...I was working with WHERE and I was wondering why it doesn't support where() the way some other elements to .. i.e. \nin some elementdng () to the end of it will automatically wrap the clause in parentheses. \nSo\n$q->where()(array('a=1',b=2'),'OR')\nwould be \n(a=1 OR  b=2)\n. The arrays are basically if you are using OR as the glue or if you have multiple clauses they save code. If you use AND as the glue you can leave out array since it defaults to AND. i.e if you are using AND normally you would just write\n$q->where('a=2','b=3');\nat least if you are trying to take advantage of jdatabasequery and not just use it as a wrapper for strings. Of course the cool think is you can indeed stay old school and have the string input. \nAnyway I think the element()  picking up that is supposed to wrap is  a really great  thing, it made it possible to do multiple unions with  ) UNION ( as the glue but for whatever reason it does not seem to work for where. \n. I was commenting on Andrew's suggestion (note the \"Andrew about the parentheses comment ..\" beginning of my comment specifically addresses his comment and him no one else) about extending the proposed solution.\n. @Naouak This has been sitting unmergable for a while. Do you want to rebase? \n. We've really moved to '/' but most likely there are still some residual workarounds from when it couldn't be used.\n. Note that the test for opera fails because of an issue in the platform detection for Opera since the version is not next to the browser name.\n. Okay the test passes now. What happened was that Opera as usual has to be different and was breaking our previous assumption that the browser name would only be present once in the UA string.\n. Could you add a test for the issue this solves please? Of if you  give me the string that passes/doesn't pass now I can do it.\n. w00t!\n. Has this been addressed by JApplicationBase? \n. I think the parameter just lets you give the current instance of an application a  name, it's not that you can go creating instances of other applications.   In the CMS we sometimes use the names to basically answer the question \"where are we?\" so that we can decide things like whether to run a system plugin (which we might run only when the name of the application is site). \nif the application is not running in the current instance how does JApplication even know where to get the information? If you look at say\nhttps://github.com/joomla/joomla-platform-examples/tree/master/web/detect-client\nand\nhttps://github.com/joomla/joomla-platform-examples/tree/master/web/flickr-feed\nSay from inside detect-client you went to find out what default template flickr-feed was using?  You could but you would probably most easily do it by maybe reading where that information is stored, not by creating an instance of the application.\nIf you want to know the default template of the site application of the cms I would honestly just get that from #__template_styles.\n. I do think moving forward we need to have easy ways for applications to share information and the platform should support that but some of that  may need to come from the application too or from plugins. But I haven't really thought that through at all.\n. Do you want to update this in light of the new MVC commits? Also, if you think there's a clear bug why no just send that as a separate pull request? But I think we're not using JText at all at for exceptions. \n. I'm sorry but the question of what happens if there is no database connection was never answered ... there needs to be a check for the existence of a connection.\n. :)\nHmm but probably PHP should be capitalized.\n. The autotester isn't running but his is failing a test\nJStringTest::testParse_Url\nLine: 629 Results should be equal\nFailed asserting that two arrays are equal.\n--- Expected\n+++ Actual\n@@ @@\n Array (\n     'scheme' => 'http'\n     'host' => 'joomla.org'\n-    'path' => '/mytestpath/\u00c3\ufffd'\n-    'path' => '/mytestpath/%C3%88'\n  )\n.../tests/suites/unit/joomla/string/JStringTest.php:629\n/usr/bin/phpunit:46\nYou should also probably add a test for the scenario in the issue report.\n. I'm confused are you losing all of history? \n. Somewhere deep inside this something is calling /tests/suites/unit/joomla/table/JTableCategoryTest.php\"  which is now in the legacy package.\n. Oh cool the tests ran again and it's not failing any more so whatever you were calling that was calling JTableCategory probably isn't any more.\n. @youjoomla  you could propose that as a patch on the 2.5.x tracker.\nIn the meantime as a platform issue this should be closed.\n. Hi Diana,\nEven though the rest of the test isn't implemented, would you add a test for AddAttachement?\nhttps://github.com/joomla/joomla-platform/blob/staging/tests/suites/unit/joomla/mail/JMailTest.php\n. Aaron also would you add this use case to the test?\nhttps://github.com/joomla/joomla-platform/blob/staging/tests/suites/unit/joomla/form/fields/JFormFieldIntegerTest.php\n. Doing my part to decrease PMD.\n. Christophe I don't understand the reference. Yes you have a pull request but from what i can tell first, you have not addressed this issue anywhere in your pull request (in fact JFolder and makeSafe both seem to have disappeared).  If you are asking Aaron to make a similar pull request against your repo that's fine but you need to explain that not expect people to figure that out. There's no problem with people touching the same files as long as everyone is using git correctly.\nIn the mean time this is a highly useful and important bug fix ( : for sure should not be in the regex).\n. So most of us can't read minds, it's important to explain what you mean when you paste a link.\nI'm not sure what the fact that it will be deprecated has to do with the bug fix though. \n. Aaron,\n It would be awesome to get this into the cms release, would you want to make the same pull request on the cms repo?\n. I actually came across this today but unsetting alias just means that I got an error with the next field. The real problem is that for some reason the category fields are attempting to save in the assets table. Are you instantiating JTableNested directly? \n. After you unset alias it will want you to unset path and then note and extension. The error message just tells you the first one that fails. \n. Do you have more fields in your table?\n. If you change it to not updatenulls it works okay?\n. So I have tried to reproduce the issue following your instructions in the CMS tracker on a clean database and I could not reproduce. That doesn't mean there is not a bug, just that that method couldn't reproduce it.\nI think one question that must be answered is where this save to the alias field is coming from. Alias is not a required field in JTableNested (a property yes, a field no).  Usually the field comes from something like JTableContent or JTableCategory and that is where it would be saved.  JTable manages saving the asset for you if $this->_trackAssets is true, it is not something that you should do directly. \nI have in fact gotten this error one time, as I mentioned in the CMS tracker. I can't remember exactly why I did it, but i had instantiated JTableNested and that was why I said the other day that I think JTableNested should be abstract. \n. So upon some investigation  in some of the cases where this has appeared it seems to be a case of a corrupted asset table. Can you please check your asset table in the case where you are seeing this error? Specifically you might look to see if there is mroe than one record with parent_id of 0. Also as mentioned the other reason this happens is if someone instantiates JTableNested directly which is why it should possibly be made abstract.\n. I think I found the place generating the fatal error the problem is definitely corrupt assets or trying to access the asset table directly in the getRootId() method of JTableNested if the table that is being evaluated does not have an alias field.  Property_exists is not an adequate screen here, we need to know if the column exists before attempting the query. We also might want to allow another column name to be used e.g. name as in the case of JTableAsset.\n. See #1665   @vietvh if you apply that change does it solve your issue?\n. The issue is not that the pull request can't be merged (that would be shown on the pull tester report with red)  All of the pull requests with ?? in them have the same failure. I'm not sure if it is because they all have a dependency on JHtml or not, but that is possible.  Those test reports were generated on May 5 and have not been updated since.\nAll of them show this as the failing line\nhttps://github.com/joomla/joomla-platform/blob/staging/tests/suites/unit/joomla/html/JHtmlTest.php#L896\n. Okay now you need to update your branch, since the pulltester has rerun and it says it is not able to merge cleanly.\n. @realityking  if the plugin is missing but you put the button in the field definition, I believe.\n@Buddhima will you please rebase this or close it until you get it rebased? \n. Niels, \nWhy not make the pull request?\n. Hi Niels,\nMaking a pull request means actually changing the code and asking for it to be merged, as Aaron did. For a small change all you need to do is go to the file, click the Fork and Edit button and then make the change. When you save you'll see instructions on how to make the pull request.\nElin\n. The pull tester says you have white space on three lines.\nhttp://developer.joomla.org/pulls/pulls/1095.html\n. This isn't merging cleanly anymore, will you please update your branch?\n. You can use the web interface to edit the file and send a pull request.\n. I would seriously just fix and send pull requests as you find things. If you do it a bit at a time and then someone says no this  is why we did that, it's not a huge loss. \n. See #1095, for discussion of how to handle the issue in 3c28b42.\n. Did you get a change to update this\n. @romacron \nAre you going to update this? Or make a separate pull request? Currently this will not merge cleanly.\n. Are you using ssl? \nI think https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/http/transport/socket.php#L243 should be handling but there seems to be a php bug if it is ssl\nhttps://bugs.php.net/bug.php?id=41631\nCan you check default_socket_timeout  in your environment?\n. Any update on this?\n. Thanks for doing these Rouven. Helps a lot.\n. I always think it is better to do at the method level the generated docs that often divide those into separate pages. It's not like someone would normally use non ascii in this case but on the off chance that they are trying to run down an error it would be helpful. \n. https://github.com/joomla/joomla-platform/blob/staging/tests/suites/unit/joomla/database/JDatabaseQueryTest.php\nCould you outline or propose a failing test that illustrates this problem? \nhttp://php.net/manual/en/mysqli.real-escape-string.php\nI think the problem is probably not the clone, it's probably the handling of mysqli_escape_string versus mysql_escape_string (which are different see above kubj) but this requires some digging. \nP.S. obviously you are using 11.4 not the current platform but this part of he code has not changed although it has been moved around.\nI think part of the problem is the error suppression here \nhttps://github.com/joomla/joomla-cms/blob/master/libraries/joomla/database/database/mysqli.php#L98\nwhich is creating a red herring.\n. See also closed issue #238. \nWhich session handler are you using?\n. That's actually the proper behavior according to W3C standards for forms.\nhttp://www.w3.org/TR/html4/interact/forms.html#h-17.2.1\n. see #901 also.\n. That's so so so helpful.\n. In other fields we would also allow the equivalent of disabled='disabled'  to mean true. \n. Don't get me started with the check boxes :P. \nI didn't really mean that other fields handled disabled differently I meant that in general when we have an attribute like that it works that way (like required)\n// Set the required and validation options.\n    $this->required = ($required == 'true' || $required == 'required' || $required == '1');\nTheory would say any value means Boolean true, but as pointed out semantically having something=\"false\" and something=\"0\" mean true is just terrible. It's good usability practice to make those mean false and to let disabled=\"disabled\" mean true  because it lets users use the format that they are used to or want to use  i.e. disabled=\"disabled\" is proper XHTML.\nIn fact, I would point out, as an example in calendar we have \n        if ((string) $this->element['disabled'] == 'true')\n        {\n            $attributes['disabled'] = 'disabled';\n        }\nBenjamin is right that there are important differences in how disabled and readonly are handled during processing (this this relates again to the specification for  handling of check boxes).  \nThe disadvantage of putting it in JFormField is that the attribute is not relevant for all field types according to the W3C standards which is why we don't have it for checkboxes.\nI ask because there's a related issue which is people think that readonly as an  attribute is protection from change but in fact readonly is NOT and  I think it would be good/educational to note this in the docblocks. Again theoretically everyone knows better, practically this is not the case. \nhttp://www.w3.org/TR/html4/interact/forms.html#h-17.12.1\nExplains what the difference between readonly and disabled means and should probably be referenced in any  docblock.\nAlso useful\nhttp://www.w3.org/TR/css3-selectors/#enableddisabled\nhttp://www.w3.org/TR/html4/interact/forms.html#h-17.2.1\nGood discussion\nhttp://kreotekdev.wordpress.com/2007/11/08/disabled-vs-readonly-form-fields/\n. I'm just saying it is a disadvantage not that we shouldn't do it. Just like we need to document that checkboxes require special handling we need to document that they don't have a disabled state and that unchecked is handled differently than  e.g a blank text field because documenting will reduce user confusion. If desired, we can even decide to handle user error by having disabled=\"true\" implement the correct behavior (which is to say act like the field does now)l to short circuit what might be a common error.\nAlso we need to document what required means for the media field in order to reduce confusion.\nOverall I think it's a good idea to encourage use of disabled rather than readonly whenever it is appropriate and will work since it's not susceptible to Firebug.\nAlso btw I have an old old tracker item http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=22954 in the cms tracker about editorarea not being able to be disabled and now I'm thinking  we might want to decide what to there. \n. Can you make a pull request for this please?\n. Looks good, now you can close this issue.\n. What do you think about doing a config default path if that is going to be the fallback structure?\n. Certainly not before 4.0 imo, it is very widely used in many places and by extensions.\nDeprecation notices are there to give people plenty of warning to change not to say changes are happening tomorrow. \nHow can reverting to what was present before create new problems?\n. http://developer.joomla.org/pulls/pulls/1209.html\nlibraries/joomla/session/storage/database.php:116\nPlease consider the /* */ style for comments that span over multiple lines.\nlibraries/joomla/session/storage/database.php:117\nWhitespace found at end of line\nlibraries/joomla/session/storage/database.php:119\nTabs must be used to indent lines; spaces are not allowed\n. Obviously you can just go look and see where the former line 131 is located. \nhttps://github.com/joomla/joomla-cms/blob/master/libraries/joomla/updater/adapters/collection.php#L131\nwhich has now moved to line 130 instead of 131\nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/updater/adapters/collection.php#L130\nAs far as I know from reading what Sam has said, client should always be referred to by name not a number. So that may be the issue.\n. I don't know if it would break things but this section of code is really mixing up cms stuff and platform stuff.  it's using JApplicationHelper::getClientInfo ... which is legacy and also the doc blocks for the getClient info method state that\n/**\n * Gets information on a specific client id.  This method will be useful in\n * future versions when we start mapping applications in the database.\n *\n * This method will return a client information array if called\n * with no arguments which can be used to add custom application information.\nSo i would say that probably that what is now line 130 should probably be conditioned on the existence of $client->id. $attrs['CLIENT_ID'] = $client->id; \nI assume the platform has  a newer way to identify things\n. This can be closed as the fix has been merged.\n. Is that something you could write some code for?\n. Hi, have you been able to do that? It's easy to send a pull request to fix one file by using the web interface here at Github. Don't feel you have to find all of them to fix--every fix is helpful.\n. If you add the new argument to the end it won't create backward compatibility issues.\n. This is showing up a not mergable, you probably need to update your repository to the current trunk.\n. Is that the same issue as # 267?\nDoes your cli set a user for the created_by_user value?  If there is no session and value set from the application should it be null?\noops I meant #276\n. @LouisLandry \nLouis would you mind taking a look at this whole set of issues and saying how much they all are part of the same underlying problem of JUser, JSession and JTable dependency?\n1356\n276\n1364\n1252\n227\nI even thing #245 might actually be approachable if some of these dependencies were cleared up.\n. @fastslack  What if we only created the JUser if there was a session?\n. I think you could perhaps check for a session_id. \nI think it would be useful in a number of places that I've been bumping into, most recently in writing some tests and having the JUser set up a null session before i can start running the tests for JSession. \n. @fastslack So I tried checking for session_id in two places in JUserHelper and it solved a number of the problems I' have been having with this.\n. So a legitimate bot will always have a url in its UA string, so we could just detect http and know that covers them.  This also characterizes some feed readers and link checkers but that seems okay to me.\nSome also have the strings 'spider' or 'bot' and it would be easy enough to check for them too.\n. We've had quite a big discussion on the platform list about how to store multiselect values, does this mean that the maintainers have reached consensus on this being the right approach?\n@Roveun\nI think in a list you would not have the same control name for all of the values, that's only for things like checkboxes and radio buttons.\nI would think you need a test with this.\n. https://groups.google.com/forum/?fromgroups#!searchin/joomla-dev-general/multiple$20field/joomla-dev-general/SVZxhtQN_II/7kI2u4w0Si8J  is one place. \nAs far as I understand what Sam said, the platform wants to stay neutral in deciding whether multiple values are stored as normal strings, json strings or something else and basically it's up to developers to implement. So I'm not against making it possible to do this, I just want to be clear on what is being done here. This is just about the rendered form, not about what is saved.\n I do think that it would be good to allow us to use the native html to use the selected element for multiple options but i'm not sure why we should call it preset when it is called selected in the standard and also why we wouldn't just add selected so that it matches conventional use rather than make up our own term.\nhttp://www.w3.org/wiki/HTML/Elements/select#Example_B\nhttp://www.w3.org/TR/html401/interact/forms.html#h-17.6.1\n. Check boxes and lists are extremely different\nIn text/textarea the idea of selected doesn't make sense since there is no select.\nIn a list you just should really put selected as an element of the option.  The problem with that is that you have lists that are generated from the database or something like the integer field which generates its own dropdown so that's why you really want to have it in the field definition or maybe let the form developer choose one way or the other.\nI'm not sure what you mean by selected=\"true\" it is a boolean so it is either present or not present if you are using it in that way. If you said selected = \"true\" it would preselect a value equal to true. \nWhat happens if the selected value(s) are not present in the list? Are they just ignored?\nSo the proper rendered html is:\n<option value=\"1\" selected>1</option>\n<option value=\"2\">2</option>\n<option value=\"3\" selected>3</option>\nCheckboxes shoudl render \nchecked=\"checked\"  rather than selected.\nhttp://www.w3.org/TR/html401/interact/forms.html\nhttp://www.w3.org/WAI/UA/TS/html401/cp0101/0101-CHECKBOX.html\nFor check boxes we already have the checked element  .\nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/form/fields/checkboxes.php#L67\nSo to me the only real issue is in lists. \n. I did a pull request to fix the preset (checked) issues in checkboxes specificially.  #1268\nAlso I fixed a problem with the checked in checkbox.  #1270\n. Any new thoughts or code on this?\n. @pweston92 since the CMS is at this moment still using JApplication not JApplicationWeb that is somewhat tricky, but there is discussion of using JApplicationWeb in CMS 3.2 and a branch to test. If you'd like to help with testing that it would be great and much appreciated.  Then even if the CMS core doesn't use these you can. \nhttps://github.com/joomla-projects/joomla-cms/tree/feature-app\nI think these notes are pretty much it on documentation, although there are a number of examples of applications using JApplicationWeb (or the new framework name for it) that might be useful to you).\nhttps://github.com/elinw/jwc2012-tasks/blob/master/src/demo/application/web.php#L127  shows a very simple use case.\nhttps://github.com/LouisLandry/tester/blob/master/src/classes/application/web.php#L97  uses  REST .\n. Can you update your branch please?\n. Actually I think you are very close, i spent some time testing yours but I think the issue is that \n$this->value should be $option->value\nand you should do this:\n\nred\nblue\n\nto get two checked boxes \nCOM_CONTACT_FIELD_INFORMATION_SUBURB_LABEL             string(3) \"red\"\nstring(4) \"blue\"\nred\n. Ok I have been testng this for a few hours and got some errors (you have to have your error reporting on development) and you are in my opinion SO SO close to what is wrong but not quite there.\n\n(array) $this->value\n\nThis should be\n(array) $option->value) \n\nThen \n\n \nred\nblue\n\n\nWill give you the correct HTML\n\nhttps://gist.github.com/2897660\n\n(so it doesn't render)\n\nNow, however the array is not saving which is actually what is expected because you need to customize the saving.\n. It must be an array that comes in from the xml and that is why the xml  must say \"(array) red,blue\"\n. Editing this because you explained it better while i was posting this\n\nYes, it's checking it is in an array and it needs to have an array to read but $this->value is not an array while $option->value  is an array if you have entered it as such.  It then is casting a string to be an array which is why if you enter red,blue it thinks it is an array with only one element.\n If it is set to an array it is saving as an array the casting does nothing, but you must tell it is an array.  If you just set it to 'red,blue' it thinks that you want to save 'red,blue' as the string and that it should be prechecked.\n\nlike\n\n <option value=\"red,blue\">red,blue</option>\n\nAlso it actually works to say checked=\"red\" or checked=\"(array) red,blue\" and that is more correct since it is not really setting a default it is setting checked. \n. Okay on looking at it even deeper I did this which has aspects of what each of us said plus a bug fix where checkboxes was not using the saved data. \nSo with this you would  say checked=\"red,blue\"   and the only real issue is that you cannot have a comma in any of your values since it messes up the explode.\nhttps://github.com/elinw/joomla-platform/commit/a6b59ba47e0b435f49a6cd89f29c98648c76933b\n\nI'm finishing up tests and then I'll send a pull request.\n. see #1268\n. So this was really resolved with #1268 but also then Cristophe has proposed completely redoing again in #1280, so this one can probably be closed.\n. Would you submit the code to fix this?\n. Yes we should :). So this is how it works (assuming I did it right)\nIf you have no value saved and no checked attribute you get an empty checkbox.\nIf you have no value saved and checked attribute you get a checked checkbox.\nIf you have a value saved  you get a checked checkbox.\nIf you have a value saved and a checked attribute you get a checked checkbox.  (redundant but it's the last combination).\n. Since you know the changes, why don't you make a pull request for them?\nI know we had another issue (not in routing) in the past that was related to the problem of not using the menu client_id.\n. Sure, but the cool think about Github is that you don't need any special software to propose a simple change, you just edit online and send a pull request. You'll get a lot more people looking at it if you include the code and it's your code, so you really should submit it. \n. Tables have been moved to their own package  libraries/joomla/table ... So the problem as I understand it will certainly be true, that many methods in JTableNested will fail if the nested part of the table becomes corrupted. If the api is used perfectly at all times and no non perfect data are ever imported we will never have this problem. However we sadly do not live in that world. So the problem might not only happens because of tangling together of branches from two clients.  So then the problem becomes whether some kind of sanity check should be routinely done and if it fails should rebuild() happen.  \n. By any chance do you have the same name for a menu in the front and back end? \nI agree it should be fixed but it's puzzling why this is happening.\nIs it possible that some of the extensions you are installing are not installing correctly?\n 143 and 103 have the same lft and rgt which should never happen. \n. So what you can do is just edit the file and make the changes needed (try to follow joomla coding style). Then make a pull request based on that.\n. @palcov \nIf you would browse to the appropriate file here in Github, click edit, and make the changes then save you will be able to send a pull request for this change. \n. @piotr-cz  Preset/selsected/checked is not the same as default. Default is what will save if the field is blank although it also shows when a user opens the form. A preset is selected already when the user opens the form for the first time but the user can unselect all and unless there is a default value can save blank.\n\nTHat said,  I obviously agree more with the general approach @piotr-cz  more than with this approach since his approach is close was implemented in checkboxes (except not using the default attribute) which would now be undone, changing the behavior of the field. \n. I have to say that on reflection I think it is a bug that an empty array rather than false is being returned. I think the intent is to act like the php functions and in that case it should return false. The question is, does fixing  that break anything?\n. And who knows what in the other half of the code.  So at least for now the doc block will match what actually happens, but this is something we probably should follow up on.\n. @dianaprajescu \nCan't you use the php parse_url if it is really working with urf8?\n. Is it separating into segments correctly? The way I handled this issue in the url input filter is to get the separate parts of the array as strings, validate them as strings, then put them back together.  If I do this:\nphp\n$x = parse_url('http://mydomain.com?url=http%3A%2F%2Ffoo.com');\n\nvar_dump($x);\n\nI get\n\narray(3) {\n  [\"scheme\"]=\n  string(4) \"http\"\n  [\"host\"]=>\n  string(12) \"mydomain.com\"\n  [\"query\"]=>\n  string(24) \"url=http%3A%2F%2Ffoo.com\"\n}\n\nSo maybe we could handle it somewhat similarly?\n. What if we added an argument with the option not to change percent encoding or that specifically allowed them in the query?\n. Stefan can we close this and the other one now?\n. I'm not sure why this is marked issue fixed when there is no code.\n. Diana do you want to close 1266?\n. Done.\n. @realityking  I agree about moving it back. I think in the end when JContent comes in we might want to change the name/rebrand/reconceptualize or something and maybe move it, but there has to be a way to place bits of content on pages and until there is something new for that, modules in positions is  something we have.  I just don't think it's a useful framework for building web applications unless you have some concept of a location of a page that you can assign stuff to display in.  That doesn't mean developers are in any way limited to how the CMS conceives of them.\n. @garyamort \nI think you need to make one big pull request with both the tests (passing) and the fix. Then when the pulltester runs it the tests will pass.\n. See #1218\n. https://github.com/joomla/joomla-platform/commit/003359dedadee117d8dcbd4d30b18514525b7c0c\n\nI think the code style error on this one has been fixed the other day but it's still showing up in the pull test.\n. @realityking I'm with you on the operators.\n. I want to mention to possible readers of this issue that despite the title this is not a security issue except in the sense that webmasters can hack their own sites by editing files and entering malicious  code. It is absolutely the case that if you give someone privileges to edit any file,including your template files, and they chose to destroy your site, they can.  That's why you should not give those privileges to anyone you cannot trust completely. \n\nAbout the exception, I would only even be considering these changes for CMS 3.0 anyway so that should be documented as a b/c change and we should take advantage of the fact that templates have a lot to deal with in 3.0 anyway. \n. P.S. This whole test needs to be refactored but this is really just phase one so it is possible to read the file easily and also to fix the situation where the same file being tested twice is causing tests to error out.\n. https://github.com/joomla/joomla-platform/blob/staging/docs/coding-standards/en-US/chapters/comments.xml#L53\n\nhttps://github.com/joomla/joomla-platform/blob/staging/docs/coding-standards/en-US/chapters/comments.xml#L94\n\nSigh.  And no comments about being pedantic please :). \n. @Denitz I'd like to see you post to the CMS list and general list (to catch module developers) for feedback.  It's a major change in behavior especially if there is no option to use to the 2.5 (and all of CMS history) behavior globally. I think it would require quite a lot of work for webmasters with existing sites potentially (depending on what they are currently doing) to have to change settings on many modules.\n  I think in general the CMS would introduce this in a manner that defaults to the existing behavior and maybe you could propose this in a way that deals with it comprehensively possibly adding a parameter to cache and possibly changing core and sample data (I haven't looked but if module instances are now going to have to pay different attention to the settings for this).\n. Can you show me the pull request/commit in the last two years that changed this?\n. I really think that it has been this way at least since 1.6 was released.\nThinking about this, obviously this won't impact 2.5 since that is in LTS (and had  a 1.6, 1.7 and the run up to 2.5 for people to identify and request changes) and developers and users have a right to expect stable behavior from an LTS.  But it could be reasonable to change the behavior.   I still would like to see a general way to allow webmasters to enable/disable caching for logged in users. It's hard for experienced users to remember that using cache at all is something that webmasters approach extremely cautiously but at the same time, it's good for us to encourage (similarly to SEF).  If we ever were to move to have caching on by default, it would be for guests only I would guess. So it would make sense to even think about how to implement this in some detail including the user interface. \n. My question is why isn't class a property?\n. Works for me in Chrome on Ubuntu.\n. We have the same issue in (and issue reports for) all of the other adapters   (see #901 and #1179)  Sam can you give me your take on those two issues? They have been sitting a long while.\n. Andrea proposed the patch. Here is her comment:\n\nThere really isn't enough room to increase the size when the screen is at the\nminimum size. It sounded like the main reason the Platform changed the format\nis they didn't want to make the call to the database class for the format. That\nformat is the same for everyone in all databases: Y-m-d H:i:s so we could just\npass the format instead. Then we don't have a b/c issue with the formatting.\n\nI uploaded patch 4 with the change. If we do this we will also want to get the\nplatform to make the change as well.\n. This is something that we needed in the CMS because sometimes you have such a high ratio of html to text that when you truncate retaining html you end up with almost no text.  It seemed like it might be useful for other people rendering on the web so I'm sending it along. \n. Okay fixed some bugs in Truncate and the truncate tests as well as getting all my tests to pass.\n. I'm not sure about the += versus ++ code style issue ... it's not an increment but maybe I should write out the a = a + 1; ?\n. Did you see the line? I just changed it to write out the equation. It's just adding 1 to a  variable one time.\n. Yes I know how increments work.\n\nNo that's not what I'm doing and that's why I am questioning Jenkins marking it as a CS error.\nI am doing\n$something = strpos(something);\n bla blah blabh\n\nwe now need to get $something+1 because we want to use it as a length not a position\n\n$something += 1;\n\nor \n$something = $something +1;\n\nas you show $something++; is not a good idea.\n. Replaced by #1413\n. #227 Also has to do with this I think. \n\nTwo related recent things. One is what if the \"user\" is a cli app?  \nAlso we had this discussion on the jbs list\nhttps://groups.google.com/forum/?fromgroups#!searchin/joomlabugsquad/session/joomlabugsquad/8mX-Zfe0hMI/lN72kxzAgGkJ\n\nAlso don't forget #740 \n. Also #276 and #1252.\nI think these are not literally the same bug but the whole set of issues (and also possibly the problem of changing session values)   that would be worth thinking about coherently. \n\nRouven fixed a bug the other day were two sessions were potentially starting #1353 and there is an old issue about \"When using database session driver and msqli driver for database sessions aren't closed properly and write is never performed\" \n. @pasamio \n\nCan you clarify if that is whole usage is utf-8 safe? Because there is quite a bit of conflicting information about the php parse_url function and whether it works with utf-8 segments. The php manual even with comments this spring is full with advice about how to solve lack of utf-8 support and we have jString:parse_url fo that reason, yet recent testing by a number of us seems to show that it is not a problem.  If it is a problem we should be using the uft8 friendly implementation since in the past in theory utf-8 strings have been treated as malformed urls without it. Alternatively, we were wondering if the JString Parse_url could be deprecated.\n\nhttp://php.net/manual/en/function.parse-url.php\nhttp://www.php.net/manual/en/function.parse-url.php#108787\nhttp://3v4l.org/kPADL\nhttps://github.com/joomla/joomla-platform/pull/1285\n. This is the kind of thing where a test would be really helpful. \n. I don't know if you have been following the discussions in the other pull requests and on lists but there is really some serious issue with the dependency on JUser. Is what you are going here going to address that?\nMost of the links are here #1356 it would be helpful if you would comment there.\n\nP.S. it would be nice to have some tests in general in here http://developer.joomla.org/coverage/joomla_session.html so as not to go from broken one way to broken another way. :)\n. +1\n. Further, I don't think this should be throwing an exception, are we really going to log every time a user makes a typo in their password?\n\nTo make this work in other places to at least use the string when the exception is thrown you need to also add\n                $message = JText::_($element['label']);\nafter 1890 \nalso I guess after 1842 similarly\n. There are other odd things but that docblock is just a copy of the previous one (addNode)\n. So it seems like PHP's parse_url is not really UTF-8 safe on all platforms. This being the case, I think what we should do is fix the problems in our parse_url but avoid making any b/c breaks.  \n. This would be such a great thing to have.\n. I think he is saying it expects exactly one character and that the character will be upper case.  More than a single upper case character.\n. can you please change the title to something describing the actual issue so it is useful for the change log?\n. Usually if it is your pull request you can just click on the pencil icon\n. @ianmacl  This can be closed now I think.\n. Oh for some reason I thought Rouven had done field(s) and rule(s) but it was just rules to rule.\n. Length is the maximum length allowed  and then we want to know if the first character of the  string (of unknown length) to be truncated to one character  is an open tag because if it is that causes some difficulty.  \n. Actually technically the ellipsis is one character even though we are creating it with 3.\n. http://developer.joomla.org/pulls/pulls/1414.html  looking good :).\n. Would you mind changing this title to something actually describing the change?\n. Yes we do have someone working on OAuth1. It's commonly used when data are public (e.g Open Street Map and large govt databases) and also for widgets that phone home\n. It's extending 1a pretty extensively since really 1a is 1 plus. That sounds like a reasonable approach to me.   I'd be happy to see what you're suggesting if  Diana thinks it is workable.\n. In terms of the protocols they are almost the same but 1a adds to 1 to deal with the session fixation issue which is not relevant for 1 users. http://oauth.net/core/1.0/  I recently read also that Dropbox uses OAuth1 not  1a.\nOpen Street Map apparently allows 1a to fall back to 1 and maybe others do too, which to me indicates that just letting it be a param makes sense. \n\nhttp://wiki.oauth.net/w/page/12238555/Signed%20Callback%20URLs\n\nI'm pretty sure the red summarizes the differences.\nhttp://wiki.oauth.net/w/page/12238535/OAuth%20Session%20Fixation%20Advisory\n\nYou an see from the above that the real reason people use 1 is that there are devices with no web browsers and and no keyboards or other input mechanisms so they need to use 1.\n. +1  and it opens up a lot of other possibilities.\n. Just follow Louis's instructions and send a PR to @dianaprajescu \n. Then wouldn't the autoloader be looking for a file named 2client?\n. I think I'd like to hear from the maintainers on this one.\n\nJust FYI Aaron needs to know about the patch() issue in order to know how to fix the unit test that has an error. \n. @pasamio can you comment on whether the class name should be JOAuth or  JOauth (my understanding is that the loader looks for non consecutive upper case letters which would make JOAuth okay.  Codestyle originally called for uppercase where appropriate (HTML ZXML) but we veered away from that with implementation of the autoloader.  We probably should aim for some consistency.\n. Combo box has been broken for a long, long time.\n. See https://github.com/joomla/joomla-cms/issues/179.\n. Well it should be false unless the id is 0.  But yes, do you want to make a pull request to fix load()?\nThat should really be part of the test if you want to update that. That test should be doing  more detailed checking of expected properties. \n. @stefanneculai  Will you close this one please?\n. These came up when testing bad urls. The challenge was that fsockopen() sends a warning when the uri is not there ... the sending of the warning was making it very difficult to handle problem so this was the solution I finally came to after going around in circles for a while.\n. Well .. I agree consistent is good and as you see I also came to the conclusion that silencing was the only option for fsocketopen().  The no conent condition is different than the bad url condition. I also think it's worth considering that there may only be headers and no body (or body and no headers) to cover all scenarios. \n. There was a reason for doing it twice but I can't remember what it was (although I will test again with your version and see if it copes with all of my cases).  I guess that it really doesn't matter that there are two different exceptions happening, one where the host is not foundand the other where it can't be opened for another reason.\n. Yes I was trying to remember why I did that and I think I just was avoiding touching the existing code for no good reason and really more focused on the empty $content problem.\n. Wow that was a not easy exercise in rebasing\n. Will you just make a pull request for this?\n. Just go here and clic edit to modify the file\nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/archive/zip.php#L120\n. And merged ... will you close this please? Thanks for doing this work.\n. Actually there's a difference between getting empty content and what you get from a bad url where in fact you are not going to get a normal repsonse code since there is no server. \n $return = new JHttpResponse\n\nI haven't tested it yet but I bet it isn't pretty if the $uri doesn't exist, it probably needs an exception and then JTransportCurl needs to handle that.  And yes the error issue is a problem because php is going to send a notice before any exception gets thrown.\n\nNeeds to catch that\n. Done\n. See I told you it wasn't hard!\n. I'm seeing more general set  of routing issues in some places  in the cms trunk ... and michael what you are mentioning sounds like the  id clashing we had a long time ago in which case it's a cms issue or at least a different issue.\n. So given where the failures are I wonder if this relates to https://github.com/joomla/joomla-cms/issues/179\n. There are definitely situations in which redirects should not be automatically followed and Facebook is following the RFC in what it is expecting. The question then becomes how to handle the different behaviors in the 3xx range (just like in the 4xx range which is also problematic). \n\nAlso, just from searching a bit about this do we have a problem with CURLOPT_FOLLOWLOCATION if safe_mode or open_basedir are on? The platform hasn't raised the minimum to 5.4 so I would think that needs to be accommodated annoying though it is.\n Also @dianaprajescu  isn't your practical issue about images? I read a post that images add the header to the return and therefore the usual solution when safe-mode is on won't work. \n\n@dianaprajescu I think people are talking themselves through this trying to come up with the best overall solution. Thanks for doing  so much careful thinking and research about this. \n. Sounds good to me.\n. So I'm sure this won't make me popular but both this and the original change should be documented as  b/c breaks and should be listed as such in the release notes when 12.2 is tagged. Rob's commit both, bug fixed a wrong behavior for most cases that wasn't being picked up by tests and it broke correct behavior in others that was not documented by tests. So with Andrew's approach and Sam's if we go that way we're maintaining b/c with what is there now which is ok but need to be documented.\n\nWe're not testing this at all either before or after but I don't think it's fair to say Diana has to write the tests for the whole series of events (though they would be nice to have) just to restore the part of the previously existing behavior that was right.  Technically the code is \"covered\" but we don't know that it is actually working as in producing the correct results which is why no one thought about b/c when the original commit was made.\nAnd I agree with Andrew about adding to the docblocks, @dianaprajescu  if you would do that it would be great. And it would be good to add a note about the open_dir and safe_mode use cases maybe here or maybe in the manual.\n. @pasamio  and @eddieajau  could you discuss and agree on which way to handle and then let us know? \n. So ... there were a lot of problems with this whole series of pull requests, responses to comments, non responses to comments, responses to responses. I would say overall, we could look at this whole history and see why Diana made the pull request she did (and how it was successful in getting people to pay attention to the impact of the earlier merge where her previous attempts to do that were not getting any attention) but also that in terms of the actual code it contained it should have been thought out better. It's frustrating when someone else breaks your code, but that doesn't make what they did necessarily something that should be reverted, just something that needs to be finished. And that's what ended up happening.\nSo working together with a lot of other people to make good code is sometimes hard, and sometimes things get heated.  Working on the web the heated stays in the Google cache forever, but hopefully in a few months you'll look back at this and say wow that was really intense and dramatic and now we're working together so well. \nI am commenting in part in case anyone reads this in the future and says \"What was that all about?\" will know that there have been (as Herman suggested) lots of private conversations about it, and that's probably the best way to close it out. \n. It would be good to add a comment about why this needed to be done or in a year we'll be thinking that turning it off means there is a problem instead of being a solution to the problem.\n. Would you please change this title to something that describes the issue? The title is used for creating the changelog.\n. Could you submit code for that and possibly a test?\n. I might put it in the docblock instead\n. @ramalama  Are you going to send a pull request for this?\n. It's kind of amusing to call curl stupid and make a grammar mistake while doing it.\n. Also would you change the title to be descriptive?\n. @LouisLandry Do you want JOAuth instead of JOauth?\n. http://developer.joomla.org/pulls/pulls/1488.html \nYou've got a failing unit test and some code style errors (don't worry the first 129 are not yours).\n. Would you close ths one please since it s the same as the other?\n. #1494 but that's closed instead.\n\nIsn't this repeated? \nhttps://github.com/mdobrinic/joomla-platform/blob/0ed0fd2442d66a2e5e110114fdba29c754605bbd/libraries/joomla/access/access.php#L340\n\nI really like the idea of being able to manipulate what groups a user is part of more easily and based on context.  For example that would have let us possibly handle guest differently or let us dynamically create a single-user group for each user.  But I'm not sure that I would do it this way because I'd want to know that I'm not going to end up with group id conflicts without a plan for handling them (ignore or replace? throw an exception?). I'm also not sure if that should be happening in JAcccess or JUser.\nMaybe there should be a method for adding a group that could manage some of these things.  \n. This is a longstanding discussion. You can find some advice about it here:\nhttps://groups.google.com/d/topic/joomla-dev-platform/aOTn5eE1wr0/discussion\n. http://developer.joomla.org/pulls/pulls/1494.html\n\nYou have a number of code style errors and a unit test failure. \nI'm not sure what the UT failure is about but it is probably the messy intertwining of user and session.\nWe use tabs and not space except inside docblocks. \n\nWait are these two the same?\n. If this one and the other one are the same will you close whichever one is not the one you want?\n. Would you mind closing this one?\n. Could we also do the same for view?\n. It's one of those unfair situations because it's not your fault that there are not tests (and if there were someone would have thought about doing this a long time ago) but if you could do a little bit of test writing that would be awesome.\nhttps://github.com/joomla/joomla-platform/blob/staging/tests/suites/legacy/model/JModelLegacyTest.php\n\n@pasamio now you know why I asked about view (even though we pulled that view anyway).\n. Would you please give this a meaningful title and description?\n. Somehow you have made this pull request against master rather than staging. You can redirect it by editing the pull request target I believe.\n\nAlso, in discover install the files are supposed to be in the right place already so you wouldn't need to copy. For example this happens when we update the core an install a new extension.  I think in your use case you might want to use install from directory instead.\n. So the environment question means what server and server version are you on, what php version you are on and similar items.\nAre you saying it works as expected until your session expires?\n. Thanks!\n. I didn't test it directly yet but the pull tester says you have a few code style errors but it's passing all the unit tests.\nhttp://developer.joomla.org/pulls/pulls/1509.html\n. Patience is a good thing :). \nBut I think the title makes it sound more confusing than it needs to be. Can you make it \"Correct docblocks in mysqli and pdo.\" \n. @yanncharlou Would you mind closing this issue if it has been resolved?\n. This is actually from the CMS library so it needs to go into the CMS tracker, but it's an interesting question.   There are ways to do  an acl check on an admin view from the front end (we do that with the media manager).  You could also make a custom field that just does the query and its own pagination rather than use the core field. Overall I suspect the cms would welcome a pull request to cope with this scenario. I don't know if the platform would want  a user field that is not entangled with com_user or use a layout but personally I think it would pretty useful field in many web applications.\n. Huge amounts of use of the Joomla CMS do not involve the core application but rather extensions to the application. There are many many things that are not used internally (why ship JImage?) but they are there for people extending the CMS to use. We strongly encourage extension developers to use the API rather than roll their own whenever possible.  These involve not just retail extensions but also tens of thousands of custom uses.\n. What can I say, it came up in the tracker :P\n. Does #1555 take care of it? If so would you close this?\n. Can you update the tests so they include order?\n.  @MarkRS-UK  The other tests all just were looking at the generated query strings. You may be able to piggy back on some of the datasets that are there already and that's probably preferable if possible. \n.  You need to have two complete queries to then UNION the results of.  This API basically you take a full query and append the UNION (another query ) to it.   I think you are looking for UNION(a.b) give a UNION b? is that right? that's not the API described here.  If the api is not working as described that's certainly a bug.\n\n```\n * Add a query to UNION with the current query.\n```\n\nIt would be cool to have UNION(a,b) but it's quite complex in fact. \n\nhttps://github.com/joomla/joomla-cms/blob/master/administrator/components/com_finder/helpers/indexer/query.php#L1293\n\nIs a place where we are using union in the cms.\n. It does accept an array, they are each appended to the original query with the ) UNION ( glue.  I have to look more closely at it which I  will try to do this weekend if possible. \n\nIt is actually not that easy to do what you are proposing in the context of complex queries built using JDatabaseQuery. Of course it is trivial if you just want to use two simple string queries.\n. @johnathanhair  Would you want to go ahead and send a pull request for this?\n. @compojoom  Do you want to close  this and then if you write a change as @eddieajau suggested do that as a pull request?\n. I guess if you had a naming structure for your tables you could find all of the tables that matched an element of that structure.\n. Checkboxes are mandated to be multiple according to the w3c so $forcemultiple essentially enforces this even if you don't write multiple=\"multiple\" because doing so is just redundant with declaring type =  \"checkboxes\" ... although it lets you break the rules too.\n. We actually had a debate about that on another issue #1188  you might want to look at the argument there. \n. Could this be closed in light of #1684?\n. Would you turn that into a pull request?\n. @bishnoi  You can just browse to the file, click edit and make the proposed change. When you save it will give you the option to make a pull request. \n. @tbela99 You can go to the file here on github, click edit and make the proposed change (reference #1545 in the comment).\n. The tabs and html parts have been added in the CMS  version of the platform ... could you take the mysqli work out and move to a separate pull request?\n\nWhat you need to do is to open a separate branch for the mysqli.   Since it is all in one file you could even just use the web UI for it -- go to the file, click edit and then github will automatically make a new branch for you to save to and then prompt you for a pull request.\n. Hi,\n\nYou have quite a few codestyle issues, but fortunately you can probably search and replace to fix many of them. They are listed here:\nhttp://developer.joomla.org/pulls/pulls/1555.html\n. Hmm it looks like it is running one level too high (should be excluding php mailer etc) \n. :) \n\n@ianmacl , @realityking   could you figure out what is going wrong with the pulltester?\n. Could you not use :: in the name of the branch since it makes pull confused.\n. I think it would be good to document the ways in which this is similar to/different from array_flip specifically\n\nDifferent: array_flip only will work with strings and integers. This uses is_scalar instead and casts booleans to integers and floats to integers (by truncating not rounding).\n\nSame: If there are multiple instances of a value only the last one is retained, the others are lost.  (We've had an issue previously where this came up and we had to change the return on a method not to use the values in order to not lose the elements with the same values.)\n\nIf you wanted you could add these to the data provider\n\n```\n        // Two values that are the same\n        'Case 3' => array(\n            // Input\n            array(\n                'New' => array('3000', '1500', '1750'),\n                'Used' => array('3000', '4000', '5000', '6000')\n            ),\n            // Expected\n            array(\n                '1500' => 'New',\n                '1750' => 'New',\n                '3000' => 'Used',\n                '4000' => 'Used',\n                '5000' => 'Used',\n                '6000' => 'Used'\n            )\n        ),\n        // Float as value\n        'Case 4' => array(\n            // Input\n            array(\n                'New' => array(1.1111, '1500', '1750'),\n                'Used' => array('3000', '4000', '5000', '6000')\n            ),\n            // Expected\n            array(\n                '1' => 'New',\n                '1500' => 'New',\n                '1750' => 'New',\n                '3000' => 'Used',\n                '4000' => 'Used',\n                '5000' => 'Used',\n                '6000' => 'Used'\n            )\n        ),\n        // Boolean as value\n        'Case 5' => array(\n            // Input\n            array(\n                'New' => array(false),\n                'Used' => array('3000', '4000', '5000', '6000')\n            ),\n            // Expected\n            array(\n                '0' => 'New',\n                '3000' => 'Used',\n                '4000' => 'Used',\n                '5000' => 'Used',\n                '6000' => 'Used'\n            )\n        ),\n    );\n```\n. ooops misread the name :)\n\nI actually think it's okay either way but either way it should be documented in the tests to prevent accidental changes in behavior in the future.\n\nSee #948  where we had this come up before.  \n. When we first started we had to do something to prevent the external stuff from being tested, which is why there is a probably out of date note from me about how not to test phpmailer and simple pie in the instructions for testing locally.\n. This can be closed\n. Cool. My only question is kind of a general one about the command line management ... should that be part of the repository? \n. Oh that make sense.  The phar builder would make sense too. I don't think you would want to ship apps that are not used in the development process but both of those would be. \n. See #1544.  Thanks!\n.  From the platform point of view is the application path  a  reasonable fall back assumption about where the root path is?  I don't think that location is the location where I would expect that to be in most applications. Because it seems to me that most applications will be in folders not at root. So if it were an emergency and you had no other information at all I would normally look at least one level up.  It has always seemed really strange to me that we don't have the cms  frontend code in a site folder so I don't think we should standardize on that structure. \n. I'm reasonably sure that the backward compatibility break introduced by adding type hinting was not intentional since there was no discussion about it. \n\nIn the absence of unit tests for both the original commit and the change I have tested this patch in a platform application that uses this class. \nSee also http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=29074\n. null\n\nCatchable fatal error: Argument 1 passed to JClientFtp::__construct() must be\nan array, null given, called in\n/home/bradm/public_html/github2/libraries/joomla/client/ftp.php on line 199 and\ndefined in /home/bradm/public_html/github2/libraries/joomla/client/ftp.php on\nline 139\n. Tried that, same result.\n\nDid you have another thought on this?   On the one hand, I feel that if there is an undocumented b/c break for no reason except code style then it should be put it back the way it was and then fix the issue properly so that the code style change can be implemented without the fatal error. On the other hand if it is easy to fix properly of course  let's fix. The issue happens on save of the configuration.php file when the ftp fields run a check to make sure the credentials are valid. This is mainly done in JClientHelper setCredentials although there are a lot of moving parts.   One thing that has no impact on the fatal error is whether ftp is enabled (well it's more complex than that but it is not a condition of checking the credentials that I can see) which means that once you try and fail at saving you are stuck with the credentials that triggered the error for the rest of the session. \n. yup yup yup. Okay we were right that the one null should be changed to array() but I missed that the fatal error was slightly different when just one was changed. The file system was also creating an instance using null instead of array(). \n. I like the idea a lot and I think it makes sense in the CMS libraries where we are doing some interesting things and have a couple of gsoc ideas that could use this plus we are not yet using JApplicationWeb so Louis's point about that also makes me think it makes sense to do given that we are potentially looking at 2.5 years of support for JApplication.  I pretty much always trust Andrew's instincts on what should extend what, but we have also added a folder /cms/helper that could work if it is a standalone helper.\n. I'm doing some work in JUserHelper.\n. #1694 includes full tests for the email rule.\n\nThe user helper tests were merged.\n\n#1745  adds some more user test cases .\n. :)\n. @okonomiyaki3000 Elijah, could you provide some code for the cms to test this in practice (just a query and a dump out of the query that can be put in a file somewhere for testing purposes is fine). You can just take the test data and use that if you want.  The cms issue for this is here: http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=30003\n. THat's fine, just say \"this assumes you are using mysql\"  ... we just need to have a couple of people do integration  tests  in the context of the application. It should not interfere with anything else from my reading of the code so I don't see a problem with doing it.\n. You might want to squash some commits.\n. I believe that JM sent a pull request to deal with the issue, so this issue can be closed.\n\n#1710\n. Would you send a pull request to fix this?\n. I like it; the older version of this is working great in the cms and this  rather nicely takes care of the issues we had to fix.\n. @eddieajau  Is that the main issue from your perspective?\n. Ok so since we've used it in the CMS already I can write up some docs based\non that.\n\nOn Fri, Jan 4, 2013 at 5:52 PM, Andrew Eddie notifications@github.comwrote:\n\n> Yes. I've no issue with the code being in good condition. But without\n> seeing how it's used, and especially as Louis will have no interest in\n> doing any further work on this, we need the documentation.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1622#issuecomment-11903640.\n. Do you think that this will be merged? As I've mentioned I'm happy to update the since tags etc, Otherwise I will  make a copy of this update the package in the cms library.  We've been using it since 3.0 with no problem and this version fixes some issues and would if we have a little time let us look at taking simple pie out of the factory. \n. Thanks Don!\n. Install phpunit and phpcs locally and you can run them there.  There are some instructions on the wiki linked above.I\n. Gabriele you have a unit test failure but I'm not sure why. \n. So in some indirect way this change is impacting OAuth2 the issue to figure out is how.\n. It would be so helpful to have create database.  The current importer is extremely limited and there is no sqlsrv support so just as a side consideration the idea of being able to create and actually potentially do a complete installation of an application including creating the database in the abstraction layer is very exciting.\n. I was thinking about this pr because I've been using the union method in a project. \nFirst, I'm a bit confused about the order issue. As described on the referenced page at mysql You can have order inside any of the selects, and you can add order after the last parenthetical union but you definitely cannot have an order by as part of the union statement, which is what is removed with the clear in the current code here.  As they say it has no effect, since any ordering must be done by the select or, of course, after you are done putting everything together. Now, what does have an effect is order + a limit (as discussed in the comments on the referenced page) so I guess I'm not against taking out the clear but I'd really like to also see the limit added although I'm not saying you should do it in his PR.\n\nI think it's great that you are solving the annoying problem of having to set up the first query in the series which is indeed frustrating. As long as it doesn't break anything in the current implementation I think that's a good contribution.\n\nBy the way here's the code I did that made me think about this issue and how helpful it would be to fix the first statement problem.\n\nhttps://github.com/elinw/joomla-cms/blob/tags2/components/com_tags/models/tag.php#L127\n\nHaving had to put the whole thing into a string then makes the surrounding parts less nice.\n. @rvsjoen Rune, the union works as expected for me, it should be returning UNION ( SELECT b FROM test)  is what you are expecting  for altogether SELECT a FROM test UNION (SELECT b FROM test)  right?  \n. It generates the query I expect which is set of unions.\ne.g\nSELECT id AS id,title AS title,state AS published,alias AS alias,created AS created_date,modified AS modified_data,introtext AS body,hits AS hits,publish_up AS publish_up,publish_down AS publish_down,access AS access FROM `rbg48_content` WHERE `id` IN ( 1,2,24 ) UNION ( SELECT id AS id,title AS title,state AS published,alias AS alias,created AS created_date,modified AS modified_data,description AS body,hits AS hits,publish_up AS publish_up,publish_down AS publish_down,access AS access FROM `rbg48_weblinks` WHERE `id` IN ( 11 )) UNION ( SELECT id AS id,name AS title,published AS published,alias AS alias,created AS created_date,modified AS modified_date,description AS body,hits AS hits,publish_up AS publish_up,publish_down AS publish_down,access AS access FROM `rbg48_newsfeeds` WHERE `id` IN ( 1 )) UNION ( SELECT id AS id,title AS title,published AS published,alias AS alias,created_time AS created_date,modified_time AS modified_date,description AS body,hits AS hits,null AS publish_up,null AS publish_down,access AS access FROM `rbg48_categories` WHERE `id` IN ( 36,19,27,17,32 ))\n\nSo it looks to me like the issue is really when people are using union inside of a chain, is that right? \nAnd no, union itself does not enclose the first query in parentheses, though it would be okay to figure out a way to do that.   The problem is basically you can easily put a set of parentheses after the names of many elements but you can't put the parentheses around the clause itself.   \n. Try this (updated)\n\n```\n    $q1 = new JDatabaseQueryMysql();\n    $q2 = new JDatabaseQueryMysql();\n    $q3 = new JDatabaseQueryMysql();\n    $q4 = new JDatabaseQueryMysql();\n\n    $q1->select('b')->from('test');\n    $q3->union($q2->select('a')->from('test'));\n            $q2->clear('select');$q2->clear('from');\n    $q4->union(array($q2->select('a')->from('test'),$q1));\n    echo ' $q1: ' . $q1 . '';\n    echo ' $q2: ' . $q2 . '';\n    echo ' $q3: ' . $q3 . '';\n    echo ' $q3->union: ' . $q3->union . '';\n\n    echo ' $q1 with $q3->union: ' . $q1 . ' ' . $q3->union . '';\n    echo ' $q4: ' . $q4->union . '';\n```\n\nYou can't really chain unions in that unions operate on complete queries, all it does it really take two complete queries and wrap a UNION  () around the second (and any additional) ones. Chaining is going to attempt to add to the original query.    UNION is an operator not a clause or a statement.   Would you put AND in a chain like that?\nBut to me the thing I had to work around is that if you feed it an array all of the elements are prepended with UNION ( and I wonder if  it shouldn't be changed to have the first element not prefixed with UNION ( but perhaps just with ( .  Since you end up having to concatenate anyway maybe it makes more sense just to do that. \n. You mean if you go through an array? As mentioned in the other thread I'd be happy to see that changed so you can run through an array of selects.  It's a non b/c change of the api but one that I think makes sense.  You don't actually need the first () but I think it makes it more readable. \n. It's not useless at all, as you can see in the linked code, it's very handy to have a generated array of selects and be able to use a foreach to union them to each other, which is why I like the idea of letting the first one not start with UNION.  UNION supports both array and chaining by the way.  How would you handle your use case if you did not know the number of selects in advance, you will still end up making an array.\n\nWhat that () does is with a given element if you put () at the end of the name it takes the name and then puts () around the whole thing.  Howevver that doesn't work for union because it's not that kind of element. It's an operator.\n. Not sure what you mean by \"get nothing\" it works as described in the doclbocks which is appending whatever is that if you feed it a query it will wrap UNION () around it and append it to the existing query. \nBut I agree with coming up with a way to make the first one in an array not have UNION at least optionally because then you don't need the first query. \n You have to remember that  UNION is a different kind of thing than the elements that go  inside of a SELECT because it encloses a select rather than being part of a select.  \n. Well the current implementation creates valid sql if you use it correctly but many people don't understand it and you are forced to do a toString one way or another.  I was thinking that what we should really do is add union() and unionAll() --similar to our usage elsewhere-- so that with an array of items they would be able to get the sql people want and it would follow our standard usage from elsewhere in the class. \n\nAlso in terms of using, we use is in com_finder in the CMS.  I was using unionAll in an earlier version of com_tags but it went away when we moved to the single table model instead.\n. never mind ...  @elkuku read my mind\n\nBut I think before the control structure consistency would be great\n. @elkuku :)\n. :)\n. @MDunkleSr  You can browse to the file and edit it, then propose the change. \n. Also close this this one please.\n. @MDunkleSr  You can just browse to the file, edit it and send the change as a pull request. Include #1649 in the comment so there is a link back to this.\n. Would you close this issue now? THhanks!\n. reopen please (let's see what else is wrong :P)\n. awesome\n. See #1652 this came as a new pr instead of updating the old one.  \n. Hi Don, I thought you were working in the legacy tree? There is a ton of clean up still needed there.  I've finished the whole main tree except for line length issues so it would be great to pull in your work on length there.  \nIf you would take a pull from my repository and rebase your branch over it hard  you'll be left with just the differences. \n. I'm actually running phpcs constantly and there are still a few things though. \n\nJPathwayTest.\nand a couple in jRequest\n. it's just 5\n\nJPathwayTest.php:36\n36\nHigh\nSpaceBefore\nWhiteSpaceBefore\nJPathwayTest.php:131\n131\nHigh\nSpaceBefore\nWhiteSpaceBefore\n\nJFilterInput-mock-general.php:40\n40\nHigh\nSpaceBefore\nWhiteSpaceBefore\nJFilterInput-mock-general.php:45\n45\nHigh\nSpaceBefore\nWhiteSpaceBefore\nJRequestGetVarTest.php:116\n116\nHigh\nSpaceBefore\nWhiteSpaceBefore\n\nThen it's just those hypocritical sniffs :P.\n. It means it needs a blank line before the if\n\nhttps://github.com/joomla/joomla-platform/blob/staging/tests/suites/legacy/request/JRequestGetVarTest.php#L116\n. @mbabker Do you want to backport #1317? \n. @ssv445  WHy don't you just make a pull request to the CMS 2.5.x branch to backport the fix?\nI''m not sure why \"as a component developer I can't fix\" what does that mean? I would think that component developers would be the biggest source of bug fixes and new code in the CMS.\n. Great thanks\n. Too many hosts do not support short tags.\n. I would think you'd want to make that optional, not change it. The ability to find them all seems very useful to me. \n. I just want to say that we do some complex nesting in some places  in the cms  and I wouldn't bet against any possible structure being used at least once. Still, I do agree that most of the time that would be for some kind of grouping and that in a lot of places (like the images field in content) where being able to group would be nice.\n. Remember that we are not normally extending JObject any more. \n. +1\n. Just so people understand, $forceMultiple exists in essence to solve a problem with checkboxes which is that they are required to accept multiples according to the W3C standard (the only field like this as far as I know). That means even if developers don't say multiple-=\"multiple\" multiple still has to be true.\n. I haven't played with it but I think it may make more sense to deal with the special needs of checkboxes in checkboxes, but maybe there is a more reason for this that I'm not aware of.  I'm not sure how many people are changing checkboxes to not accept multiple values given that checkboxes itself was problematic unless you extended it until not that long ago\n. Radio buttons are also a weird special case since if there is only one it can't be unselected and multiple is forced to be false. \n. @dongilbert I was thinking about this project when I was working with a field that won't let me update to blank once there is data. A number of people  have raised this before.  I wonder if we could come up with an attribute that would let us optionally allow this. \n. Only check boxes as far as I know. \nI agree about multiple storage being standardized though of course options would be nice.\n. Defnitely worth looking at.\nYou may have noticed that the update I did of the email field included multiple to the html5 standard. That calls for a comma separated string of addresses.  I tend to think that as a lowest common denominator that works.\n. @eddieajau would you please talk to @louislandry about this ... i believe that if you are just looking at the pull tester it is misunderstanding a squashed update\n. reopen\n. Yup there was a change to one of the files overnight\n. LOL when I read the title .. you probably want to fix that.\n. See #1307 for count modules\n. @aschaefferfr I promise, no hitting! Do you have some proposed code to change? Or do you need someone else to figure out that code?\n. I would say it's infinitely more tests.\n. There are definitely address standards and they are really detailed because I believe they are governed by the international postal union (I think it might have been when I first saw this package). I did some work on that before and it would be really powerful to have that generally available because it is super useful not just for commerce but for CRM and other types of applications. That's the kind of obsessively detail oriented project I don't mind digging into. \n\nhttp://www.upu.int/en/activities/addressing/standards.html\n\nApparently Google uses xNAL\n\nhttp://microformats.org/wiki/location-formats\n\nhttp://www.immagic.com/eLibrary/TECH/OASIS/XNAL_V2.PDF\n. Hi just FYI we have a PR now for OpenStreetMap so between that and the JGoogle map I may take a crack  at an address class.\n. This is an backward incompatible API change, how much is it going to break?  \n. Well we have no real idea of what is used by who out there, but it's certainly a reasonable supposition that it is used by few applications other than the CMS. I would say that if we are going to break it, we should fix the various pieces all at once rather than forcing people who are not paying attention to fix in dribs and drabs. I think it's probably preferable to put a log message in now for the next few months and then fix in 3.1 or 3.2.  4 wouldn't make sense since it won't use this cache package.  In fact if this cache moves to legacy before the 3.1 release we would need people to do updates anyway if the CMS chooses to sync with that (which is an open question).\n. We'd like you to merge this please.  See https://groups.google.com/d/msg/joomla-dev-cms/cTG3bIpxjPs/nPZmgp6qK_gJ\n. Would someone tag as a b/c break so it's in the change log?\n. Ok since we have an unresolved discussion I returned to the status quo. Eventually we will want to clean up.\n. Okay I think I got them all plus a few more things. I'm not claiming perfect files just steady improvement.\n. Why is phpcs not catching that one? Very odd.\n. @eddieajau I think I got them all now.\n. @ianmacl I think it should be okay now.\n. I should say this issue came up in writing some tests and getting 900 as the result of getExpire while the existing tests expected 20.\n. The downstream behavior in the CMS is just that, the default session is currently being set to 15 hours and the documentation in the form of the tooltip says it is being set to 15 minutes.\n. I really am not sure what to do. On the one hand we clearly have a situation where the logic is failing and the unit tests prove it (hence the other issue that Andrew closed was not resolvable). On the other hand, it certainly is an unstable change of behavior.\n\nI think I am going to call it close and fix in Framework when session is reconstructed and JCache is merged.  It's just too risky/too much in the way of potential unknown consequences right now.\n. @jan7923 would you put a note on your issue report in the CMS tracker that this is merged in the platform (and a pull request for the same fix to the CMS would be great).\n. I believe this has implications for #245.\n. I'm not sure what you mean by \" which is only valid when the user ID is null.\" I could move it up so it doesn't check new instances.\n\nif ($instance instanceof JUser)\n{\n    my code\n\n}\nelseif (is_null($id))\n{\n    $instance = JUser::getInstance();\n}\nelse\n{\n            $instance = JUser::getInstance($id);\n}\n\nI'm not sure about the UT error which I'm not getting locally. \n(Okay thought about the UT issue on the way to work, I think I need to make sure a session exists before destroying it.)\n. Yes, I think originally I was going to say this isn't really an ideal way to solve this.  I've been working on a less database intensive approach so I'm going to close this for right now.\n. That's an interesting idea since the main thing I have been doing is on save in JUser updating the session but that by itself will log the front end user out though they get the same session right back when they log back in (it's not a real logout and the session isn't destroyed). If the application had a nice \"you need to re authenticate\" UI that wouldn't be too bad but it's a bit of a kludge even when Google makes you d that.\n\nActually it's reallly not that the user is logged out, they would still show up on a list of logged in users. It's that the factory can't access the session data containing their JUser information at that point.\n. This is an updated different approach to the issue that also addresses some other issues such as forcing blocked users to be logged out.  This has fewer queries and only queries the session table.\n. This problem is a lot more complex than it seems on the surface which is\nwhy it has been in various trackers for over two years.  There probably\ndoes need to be a more fundamental look at how JUser and JSession are\ninteracting.\n\nIt's also a lot less new code than there was, so I figured I would push it\nup and see what you and others said.\n\nIf you are looking at the code :) a couple of things that came up in\nworking on it were that I was concerned about the issue of what is allowed\nto be updated without reauthenticating because of security issues. I talked\nto Alan about this, and we concluded that block and password should both\nforce reauthentication.\n\nIt's possible there is a race condition if there are numerous processes\nmodifying the session and/or the user record in quick sequence. Right now I\nguess that exists also but since the session isn't modified it would happen\nwhen some combination of front end user, front end user in a second\nbrowser, back end user, and code all could be modifying at the same time. I\nhave to say that I have not looked at that.\n\nOn Sat, Dec 1, 2012 at 10:10 PM, Sam Moffatt notifications@github.comwrote:\n\n> This still introduces a race condition as well as a whole heap of code I'd\n> need to look over a lot closer which seems overkill to solve the particular\n> problem.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1717#issuecomment-10925545.\n. It's definitely a  bug, and you can still write code to allow temporary user groups no problem at all unless you are doing in in some very obscure way. It does sound like a neat development tool that you have, maybe you would want to share it and then I could see what the problem you are anticipating is.\n\nSo, if you are using save() it is going to the database. That's a fact.  From what you are saying, you are not using save(). So what impact is this having? \n All this is changing is the session when the database is changed, it's not changing anything that happens in the database. If you aren't changing the database it has no effect. So in fact I would think this is good for you because you want to be able to change the session if the point is to be able to quickly and temporarily changing groups for a logged in user.  In fact it sounds like what you do is change the session without doing the save.  That would certainly be a nice feature to add and not just for developers, I can see a lot of practical use cases for a temporary add user to group. \n\nOne thing this will let us do in fact is allow for the possibility of opt in user groups that have immediate impact. \n\n@pasamio do you think #__user should have checkout?\n. I've put the unrelated tests at #1736.\n. So a null is going to throw an exception?\n\nActually following up on that, this changes the handling of integers and booleans as well, which would have just been quoted as if they were strings before as far as I can tell (and I've made that mistake plenty of times).   So I'm both tempted to say you should maintain the old api and quote them and even more tempted to  be in favor of  stricter typing  and say why not also test is_bool, is_int, and is_float and not quote in those cases? Maybe only throw an exception if is_object.\n. +1  Thanks\n. See #1733 for some new tests.\n. I wanted to mention about this that the removal of that $error was also done during thee 12.2 to 12.3 period (#1572), but clearly without being positive what the implications are. And not to be a harpie about testing but ... we should not be doing things like that without serious unit tests in place especially in the legacy folder where applications are particularly counting on stability.  \n. Hi @e-motiv \nYou have some code style errors:\nhttp://developer.joomla.org/pulls/pulls/1726.html\n. Go to your own repository and on the drop down select the branch that you are using which is patch-1. Then go to the file you need to fix and click on edit.\n\nhttps://github.com/e-motiv/joomla-platform/tree/patch-1\n. This makes a lot of sense to me.\n. Hopefully I did this in a way that will work with Andrew's pull request, but this documents the behaviors we were discussing (which were slightly different than I thought) so that we can be sure of having a stable api.\n. It's not some particular values, it is some particular data types (although it is good to document for example that true goes to '1' not 'true' and that false goes to  null and not '0' or 'false') are being converted to strings. Tests are one of the best ways that we have of documenting behavior especially non obvious behaviors and making sure they don't actually change when we change other things. So as we talked about the other day we could have an api that throws exceptions instead but we don't.   I mean sure you don't really need float and integer but why not be complete?   I was a little bit inspired by the http://php.net/manual/en/function.is-string.php is_string example in its thoroughness.\n. Well yeah a data provider will be the way in the end, but I didn't want to mess up your pr or have yours mess up mine :). \n. Okay can I do that after your stuff is merged so it doesn't have to be done twice?\n. Plugins need language files if they need configuration and also if they have to send any messages, and of course form plugins almost always will have labels and descriptions. Depending on the application they might have something like a success message on installation as well. So I think it's reasonable.\n. @eddieajau why do you think there will always be a com_plugin? But yeah you're right on that. I do think that the application probably has to implement a way to respond to triggers so you're totally right on the idea that it should handle the language for those kinds of things, but I will say that there will in general be language though so to +1 to this.\n. @okonomiyaki3000 Would you send this as a pull request to the cms?\n. :) So we can easily switch from php to phtml (and back)? +1\n. That's great; it's something that has been on my mind too.\n. There is one failing test on this pr which is the getExpire() test. The fact is the method works as expected but the expected value should be 900. If you dump out the object that is what is there, and that is what getExpire() returns.  The problem is that the test as written has expected value of 20 which is what you would expect if $this->object had actually been successfully defined at the top of the test class. However, when the full suite of tests is run this does not happen and instead the expiration is set to 900 which is the default of 15 \\* 60 as calculated in the factory.  Because of how sessions are managed changing this is complicated and it seems unnecessary since all we want to know is if the method is returning the value that the property has. So therefore I am thinking that I will change the expected to 900 and have all passing tests.  (When just some tests are run the test currently passes with a value of 20. We may or may not consider it a problem that the value is not changing to 20 but that is not the responsibility of this specific test.)\n\nYes we do have a default session length of 15 hours (see #1715) but that's not related to whether getExpire() works.\n. Just to be clear I don't actually think this is ready to merge because the fact is that there is something wrong with how this whole test is working, which may be a problem in the test or may be a problem in the class. It should not be the case that the expecteds change depending on whether you run the test by itself or if you run it as part of a full suite or if you add a new test to the suite. \nThe getInstance test actually illustrates exactly that you can't change the expired value using getInstance when there is an existing session just by using getInstance.  Dumping out the oldSession and newSession objects shows that they are both the same object and both have expire=900 despite what is set in the test. \nIf instead we started the test with \n        $this->object = new JSession('none', array('expire' => 20, 'force_ssl' => true, 'name' => 'name', 'id' => 'id', 'security' => 'security')); \nwe would see that the getInstance tests fail and we would also see the getFormTokenTest fail but the old getExpire test passes with expected of 20.   \n\nI'm reasonably certain that the getInstance test should be \n        $this->assertSame(\n            $oldSession,$newSession\n        );\n\nbut either way it is the same thing in terms of the test passing because it's just getting a default session i.e. expire=900 for both in  the current test.\n. Ok now if jenkins says it's ok I think these are ready.\n. I guess I'm not sure that I think it's configuration even though configuration files are handy places to put things in a development environment.  Configuration to me is something that ... you use to configure the application i.e. you might change it or people with different instances might have different values. But for a specific application I don't don't think it would normally be adding new libraries unless it's really a specific kind of application that's  for adding libraries.\n. I like the way that the CMS requires that libraries be installed into the extensions table (which I'd love to rename) in order to be used. In that sense when there is a replacement for the old installer classes we could think about still having discover install for libraries. The advantage is that people know what they are getting into have to make a conscious decision about as opposed to having whatever files happen to have landed there.  I can see a number of situations in  which there are side by side applications all using the same libraries folder and some needing one library (say the cms library) and some not. I'm not against doing something I just don't love the idea of doing in in the configuration file, which I think is real world going to be normally accessed by some kind of jform that loops through the variables.  Do we really want to resave that every time? Is it going to change? It's not like users will pick and choose. \n. +1 solves gigantic practical problems. \n. The test is failing right now but that's because the bug isn't fixed.  What you want to do is put your test into the same branch as the bug fix so that it passes when it is run on the patched code.\n. Am I right that we have been counting on JForm to do the checking for us and not dealing with the fact that it could be done in code?\n\nOther tests are probably somewhere calling bind.\n\nTry using one of the users in the xml file i.e. create the JUser with a specific known id.\n. No, I think it's good to do.  The save is happening here and you would want to make sure that it is right, and you see that obviously that was the intent at some point. I think you can just redo the test a bit, don't worry about  the matching just focus on the length issue.  Anytiime JUser is involved things are apt to be messy.\n. So what you want is to put in a string that is more than 150 characters and have it return the substring that is the first 150 characters.  That's how I would set up the test. \n\n```\n    $longString = '12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890';\n    $expectedPassword = '1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890';\n    $expectedUsername = '123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890';\n```\n\nAnd then see if what you actually get matches what you expected.\n\nha you beat me to it!\n. That's great, running and passing. :) My only suggestion is that you actually check the truncation to make sure you get the correct value and also that you add an example that doesn't need truncation. Then it will be a nice complete test.  Personally I think in usability terms saving a password that is different than what the user entered is a problem but mainly we catch that stuff in jform before the fact anyway.\n\nI remember a big debate about the length of both fields in 1.5 because i think there are some very long names, utf8 characters and probably some other issues.  \n. Beautiful :)\n. I don't know if you noticed that I have a pull request with a lot of JUser tests, but yay none of them are for save or delete. But you might want to look because we don't want to duplicate effort. #1736  This is great because there used to be 4% coverage and now we will be much higher.\n. I think there is just a backlog and people are on holiday. \n. lol i've had that one before.  Sooooo frustrating.\n. It's a little hard to read parts of that but it looks like if we can figure out why the root is returning incorrectly it would probably tell how to fix the rest.\n\nOne issue you may be facing is that because some of those tests are really many separate tests in one method, as soon as the first test fails the method stops, so you fix one thing and then that part passes and you get further along and a test that wasn't running before fails.  \n. The link doesn't work. Yes errors matter. \n. @dongilbert  Would you kindly send a pr for this to the cms?\n. Side issue but have you been wondering like me whether it would make sense to build out the filter class more along the lines of the thumbnails. Right now you need to fill in a lot of details like renaming and writing  etc.  \nhttps://github.com/elinw/jshell/blob/master/createthumbnails.php#L86  \nversus \nhttps://github.com/elinw/jshell/blob/master/filterimage.php#L85\n. I like the size postpended because then alphabetical listing still works. I don't find sorting by first digit of the size that helpful.\n. I'm not sure but when this happens to me (working locally not on jenkins) it usually means that I need to use reflection for something that I didn't use it for. \n. Kavith any updates?\n. I think the goal is to replace this with a native package.\n. Right now you can't add a user to groups because that triggers errors caused by going to JFactory.\n. Can't you have an empty $this->assetid when there is no $currentAssetId? In fact won't that always happen? https://github.com/betweenbrain/joomla-platform/blob/a1d8d1a1db9e09f6d6de48930af758213ee127b1/libraries/joomla/table/table.php#L698\n\nMaybe better either to actually define$currentAssetId for the other cases or to add a check for it being set to the second condition.\n. Exactly, setting it for every case makes more sense then eliminating the possibility of having the first condition of the block he's modifying never be met which defeats half the point of the code in the block.  Or as I said the other possibility is to add isset to the second condition. It's most likely less confusing for codebrowsers to set it  for everyone though.\n. Yes I believe that is exactly what I said in my first reply. It's  always set when the first condition is not true but it makes sense to do it because who knows what could happen in the intervening lines. \n. Now it needs to go back to dev right?\n. Actually I think this is a bug in the cms copy of the database package where the & has been removed. Since it really is a reference in this case can someone please clarify whether whatever happened to remove that was wrong or right? I'm going to look at history now.\n. My fault too :(\n. http://developer.joomla.org/pulls/pulls/1780.html\n\nYou need to tell your editor to trim trailing white space :P\n. sounds good to me.\n. ha that made it worse.\n\nOk i'm closing this.\n. @eddieajau  If you want to just copy the page from the docs wiki that would be fine.\nhttp://docs.joomla.org/Github_using_the_web\n. @Buddhima try doing a rebase over the current staging branch and see what if any conflicts you get. I think they should be limited to just that one area of your code that uses the OAuth. Then deal with the conflicts individually.  Then just check that everything still works.\n. Do you mean adding new fields with the same name as existing fields but where you don't want to replace the existing fields if they are present? \n$Replace=false doesn't work? I would consider that a bug.\n. Would you please also create an issue for this in the CMS issue tracker and place a link to the two pull requests?\n. See #1622\n. Please understand that in a CLI context there is no logged in user in general and JUser is designed to return information on ANY user by name or id as is clear in the documentation.\n. Should be good to go.\n. Can you let me know please if you are not taking this since I want  to be able to run queries for trending tags in 3.1 (as well as for some existing views) and I'll have to do a workaround for jdatabasequery to provide multidb support if you aren't taking it.   This is one space where the different drivers have important differences.\n. Thanks Andrew.\n. It's showing up not merge-able, you may need to rebase.\n. Thanks Andrew, I'll try to do that tonight.\n. Should be good now, I fixed a couple of typos in doc blocks while I was at it.\n. Hi Harald.  Would you take a look at #1629 please.  What is the invalid statement you are getting?\n. THere isn't such a function. YOu only approach the assets table indirectly. It can self heal if you have messed it up, but as long as you don't try to do anything directly to the assets table it won't get messed up.  Unfortunately that is not the actual nature of human beings using open source software hence he reason for application like assetFix.  The right way to heal the assets table is by stimulating the api to run by doing a save in all the tables you have that track assets.\n. We have very detailed email validation in jform that match html5 standards and the RFC from IETF. If you have something after @ (it is not necessary to to so) there must be at least two characters..  The first @home email address most certainly does meet standards., The others do as well as far as I know, but you can check the RFC and also the W3C standards documents which were the basis for the validation used.   I agree we need to add compliance with ipv6\n. Is there any idea that any application that isn't the CMS is using JInstaller?  The code seems so specific that I think we might want to move the whole package from legacy to cms so that it's easier to make it work correctly for the cms.\n. I thought we already merged it?\n. Thousands of developers use the CMS as a platfporm and use parts of packages that the CMS does not use.  These are both CMS developers and develoeprs working on the most widely distributed copy of the platform which is that distributed with the CMS\n. What you learn working with developers is that they have now built out workarounds around that.  Who knows what they are getting but they are NOT at this point getting the documented results unless they are 0.  So I would guess most of them are expecting to not get anything when the result is not 0, but who knows.  So just saying \"it is not used in the CMS\" is not a valid rationale for making an API change.  IF you want to say it is abug and won't break anyone who is now assuming the current behavior, fine, but saying that ddevelopers (and more importantly  end users who have installed work from developers ) who are not writing for the core cms don't matter is not okay.\n\nThat said it is certainly a goofy piece of code and a bug.  But it needs to be properly documented in the API and in where ever it is you are documenting b/c breaks this month.\n\nAnd the reason we have unit test, one of them, is to avoid undocumented changes in APIs.\n. Ok can you send a pr?\n. Is this an issue you are having in the CMS? Would you send this to the cms along with instructions on specifically how to reproduce the error? THanks\n. ignore\n. ignore\n. ignore\n. ignore\n. This should be 11.3.\n. I think this should be hasUTF not hasURF\n. Would you mind putting the @deprecated before the @since?\n. I'm not sure what parameters you might mean given that we are trying to pick up the databases dynamically from the file names.  The point being we don't know their names in advance.\n. It is better to do it that way than writing regex for those strings. \n. No, I don't think that is correct. We are just making a list here, not overriding.\n. This too?\n. and here\n. isn't search great.\n. and here\n. :)\n. :)\n. here\n. here\n. Comments should definitely be on their own lines above the code they refer to but afaik  the sniffs don't deal with that at all .... but there should no be a tab the { should align with the else.  \n. I have a pretty detailed set of rules that I used in proof reading all of the comments last spring.\n\nE.g. always a space after // \nalways start with capital unless it is something that is specifically lower case or a continuation of a sentence.\nAnd so on.\n. That comment should not have a tab, it should be aligned with the code it refers to.\n. Definitely should not be a tab there.\n. Improper alignmens ..t. add 2 spaces after @param, all of he descriptions with 2 spaces after the longes name.  Put 2 spaces after string.\n\nSame on the next line\n\nThat's 6/29. \n. Please see above, additional 6/29\n. concatenate should always have spaces\n. You need to make these align and after $ifEists there should be 2 spaces and then the description. Then align $table with that.\n. This should be 11.3\n. Needs an empty line and and @since.\n. Nees a full doc block. I'm not going to do the rest, you get the idea,.\n. I'm not sure why @since would change. \n. Why is this being removed? This was rather important for postgres support if i understand correctly.\n. I believe this has been moved.\n. I have a pull request in for this already, this should be is_resource I believe.\nupdate yes that change was merged.\n. The databaseconnection field should be updated to use this as part of this commit not only because it is cleaner but because moving the files .will break the field\n. Could just be \nif ($this->get('connection') != null)\nSince the object always exists.\n\nAlternatively we could just drop the condition completely since the current test will always be true.  In that case the tests in the other drivers should probably also be dropped. \n. https://github.com/eddieajau/joomla-platform/blob/sudhi-staging/libraries/joomla/database/database/sqlsrv.php#L1052\n\nLooks like a possible copy and paste issue.\n. Please change this to\n// Only load if not already loaded.\n\nNot taht this is not one f the check style errors.\n. Put a space after if and put the { on a new line.  also always spaces are around the ==\n\nif (class_exists($classname) == false)\n{\n. 12.1 I guess.\n. Don't have all these extra tabs.\n. }\nelse\n{\n. Same as above.\n. What does this have to do with the topic of the pull request?\n. Please put a space after the //.\n. You need spaces after commas in a bunch of places.\n. Instead of \"to iterate\" would you say \"iteration\" please.\n. Same as above \"iteration over\" instead of \"to iterate over\"\n. It also allows counting of pages.\n. rewound.\n\nEnglish is such a pain. \n. rewound.\n. You need to use tabs not spaces to indent these three lines.\n. Typo here\n. operation\n. When I tried this I got a warning saying that insert() requires two parameters. \n. Should this (MyView) match the name of the class?\n\nAlso this does not match the signature for JViewHtml is that is what it is supposed to be ... that takes only two arguments and the second own should be the splPriorityQueue.\n. I think you could make these two lines and make Jenkins happy.\n. Extra blank line here. 443 and 444  also have white space.\n. This line 574 has white space.\n. Would you make this mixed please. Also please spell out integer and boolean.\n. Looks like you have tabs here.\n. JViewLegacy?\n. JViewLegacy?\n. Yeah it's a bit confusing but I think it really is identical to the first code block in the mergeNodes and what I put  is based on the comment for the first code block. THat's why I said there were other oddities, because the code in mergeNodes is identical to that block.  \nAlso it is specifically an update not an add and the method only deals with attributes of an element not  the element. The addNode method adds the element itself.\n\nI think that whole block of methods could use some love but at minimum the docblock shouldn't be a copy and paste from another method.\n. Basically if you are truncating to one character when you have a string longer than one character you have some problems no matter what because we requre a ... to indicate the truncation, but in this case we are just saying look you have html here and you only want one character, we're just going to call that truncated totally and be done.   The real problem is if you just truncate to a <.  You could make an argument that if someone starts of with an  and they truncate to one character (which becomes ...) that we should include all of the html. We could do it but it seems extremely edge case. \n. Actually ...\nIf you look at the test at line 364 of the test changes you will see that in truncateComplex if there is only html, such as an image tag, we will return that even with a length of 1 whereas in truncate normal you should get either nothing in the mode that does not allow html which should then be turned to ...  or ... in the mode that does allow html because the $length doesn't give you room to close the tag (you really must have at least 5 characters to do something with valid html and that's pushing it since I don't know that there is a one letter self closing tag   / ).  So what was happening was when truncate was given this scenario it was doing the truncation (at line 55/60) and then seeing there was no > in the truncated string so it was returning the < as a character. I'm proposing here that we make the assumption the < in the first position of a 1 character string is an opening tag and handle it as such.\n\nI was really not intending to do a rewrite of truncate itself but I found there are some issues with short lengths. Also we're going to have to look at its assumptions again in light of some of the new tags from html5. \n. This should really have a blank line above the comment.\n. What you are doing here is different than what I did in my pull request which relate to the warning from fsockopen()  at line 256 similar to what you did with fopen() in stream.\n. Basically missing scheme is what causes parse_url in  php in general not to work correctly ( because it will mistake the host for a string if there is no scheme) but that doesn't necessarily mean that there is nothing to parse or worth parsing.\n. Would you make this \"let's\" not \"lets\" please while you're updating tis file.  \n. I don't know why I didn't notice this before but can you please spell out boolean. \n. We put opening curly brackets on new lines, can you please fix this here and elsewhere?\n. JEventDispatcher\n. Here and a few other places you have  GitHub not mediawiki\n. I'm pretty certain this should be \"file's\" not \"files/\"\n. spell out please\n. Spell out the word boolean. \n. 12.3\n. 12.3\n. 12.3\n. That's very odd.\n. Why?\n. Why? Why all these periods?\n. Only use periods when there is a full sentence\n. No period here\n. I think you mean an not and and also no period please\n\nI'm not going to mark all the periods, can you just please do a scan and fix?\n. its\n. This is a full sentence but the first line should not end in a period (since the sentence continues on the second line).\n. I'm not sure what you mean here exactly, but I'm reasonably sure you don't mean things possessed by JData instances.\n. Is there a reason for the extra space here?\n. I think this has extra spacing, also remember to add a space before the following if.\n. Why the indenting here?\n. Capitalize the first word in an inline comment please.\n\nWhy indented?\n. That is our code style in the manual.  A noun+adjectival phrase do not make a sentence. I'm really not going to rewrite the docblocks though if someone wants to do more descriptive work on the test tree I think that would be awesome.\n\nI would personally say if you want to add extra information you should say \"The mocked database object for use by test methods which is used to indicate something.\"   Or you could put the full sentence on a new line to clearly indicate that the first is essentially a label (which it is) and the second is supplemental descriptive text.\n. There is only one line in my repo, not sure what is going on here.\n\nIf I look at the full view there isn't a new extra line any more, so I'm not sure why it's not making this a \"commented on outdated diff.\"\n. See the other note, this is gone but it's not rendering in the pr for some reason.\n. These look misaligned.\n. put back the @return that was there before\n. That's certainly true.  Actually a lot of times the trouble is a missing noun but often in those cases we have imperatives which technically ARE sentences, and those have been bugging me because we really should be using stops and aren't. Of course just as easy to write a sniff highlighting the presence of periods in labels and titles e.g. on the same line as @param and the first line of a method.\n\nA long time ago I proposed to Louis and Andrew that they think of the docblocks as somewhat like a bibliographic reference (because we have title, date,  copyright), but they really didn't like it. Now in many systems of rendering bibliographic listings there are full stops used after a title as well as after date, author etc, basically each element.   Also we are not running all of the elements together, we are putting them on separate lines. It's many many periods to add though and I wonder if it is worth all those extra characters.  Either way it needs to be consistent in the tests and libraries trees. Looking through the codebase a bit it is highly inconsistent.\n. So we could say something like: The following tags always take a full stop: the title, @params, @return @note @deprecated  ... but not @since or @link maybe unless you really want full stops all over the place...  I think the rule could be stated as tags with labels, descriptions or comments take a full stop at the end of the label, description or comment. Tags that only have   a value with no additional information do not.\n\nUpdate: Actually does return always have a description? Definitely not when it is void, so we would need to account for that.\n\n@eddiejau That was my point about bibliographies.\n. Because I can.\n. I believe the rule is multiline arrays are on the same line, multi line functions on a new line.  I did run this through phpcs multiple times (obviously since that is how I know were the issues were).\n. jenkins says there is some white space here.\n. From the way I've been taught it's always better to have separate tests that way when one fails the later ones still run plus it's much easier  to trace failures.\n. Is this supposed to be part of the previous line? If not it should start with upper case. It seems like it might be a note actually and you may want a @note tag. Also, wouldn't it be best to have the option to clear or not clear if you are saying what is in the mysql manual doesn't apply any more?\n. I think we are moving to using PHP_EOL. \n\nWhat woudl happen if you had \n$q->select($db->qn('id)');\n$q->from($db->qn('a');\n\nrather than writing out the whole thing inside the select?\n. if (empty($this->asset_id) || (isset($currentAssetId) && $currentAssetId != $this->asset_id && !empty($this->asset_id)))\n\nwould be one option here. \n\nor you could add\nelse \n{\n    $currentAssetId = 0\n}\n\nwhere $currentAssetId is set for the cases where $this->asset_id is !empty.   Or just put it before and save 3 lines of code. \n. The pull tester says you have some blank space at the end of this line.  Can you update please?\nhttp://developer.joomla.org/pulls/pulls/1805.html \n. Test :)\n. What about doing this as a data provider. That way if one fails the rest of the tests still run.  Also I usually put a message so it's easier to figure out which test is the one that failed.  It isn't super important but it makes php unit easier to use.\n.",
    "eddieajau": "I've merged a heap of Docblock updates from the svn platform merge branch so I'm assuming that includes a lot of this work.  Can you pull from the master repo and see how it looks.  Thanks.\n. Found it.  Ok, I actually thought this was an interesting idea, but I'm not sure it's ready for a merge just yet.  I like the idea of dynamic columns.  I'd really like to see some wider discussion and use cases.  I think the full object is the right way to go, rather than a static JHtml helper - maybe even break it up into subclasses more JGridRow, JGridCell (hrm, go even as far as JHtmlTag??), and so on because I could see this baby blowing out in scope ultra quickly.  Would love to get some input from someone like Kyle Lebetter on this one because he'd like the developer to have less control over markup :)\nActually, the HTML package needs a rethink anyway so this could be a test case for that maybe?\nAlso, make sure you allow for heavy use of chaining (may require you to rethink the design a bit).  Could even make it mimic how mootools builds HTML so we dev's only have to learn one API to have a crack at both??\n. Application package changes pulled in.  Only oddities are in the module/helper.php file lines 351 to 356 in the CMS - they may need a double check.\n. Client package merged.\n. Thanks Elin - just need to know what change shouldn't be lost.\nThere's a patch in the CMS tracker by Rouven to improve syncing.  If I can get a few more good tests on that I'll get it merged.\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26346\n. Database package merged.\n. Error package merged.\n. Form, HTML, Language, Log, Mail, Plugin (*), and Registry packages merged and docblocks sync'd.\n(*) The Plugin helper class has some code differences that still need looking into.\n. I believe we are now all merged except for Cache and Installer packages.  Amy, did you get anywhere with the Installer package?\n. I think I would solve it this way.  Make a new abstract protected method in the JDatabase class and convert all the static methods in the child classes to that method.  Then have the static test method in JDatabase do something like this:\npublic static function test()\n{\n$class = get_called_class;\n$db = new $class;\nreturn $db->enabled();\n}\nThen the \"enabled\" method can be declared as an abstract protected function.\nHowever, that only works in PHP 5.3, and we don't want to add a PHP 5.3 requirement on this class, so I think your method, Rune, is the only workaround.  The only change I would suggest is to put a \"return false;\" in the body, or, you could possible explore whether an interface would work.\n. Yes. Something like that looks good. I'll have a better look next week. About to head to the USA. \n. Thanks should be fixed now.  Interesting what happens when you increment the version number :)\n. Sorry, forgot to push.  How are you getting those results?\n. Thanks.  Fixed now.\n. Rouven, could you just resync the pull.  Elin had a commit in the queue that included some of the changes in this request.  Thanks.\n. Thanks.  Wouldn't bind automatically so fixed them on the server (github and SVN).\n. Please resync with the master branch as this pull wipes out recent docblock work. Thanks.\n. Please resync with the master branch. Thanks. \n. I did some work in Session and Updater without seeing this pull, sorry. Can you update and re-issue - thanks.\n. Accepted the other pull against staging.\n. Please merge down from joomla-platform:master.  Thanks.\n. Elin, could you run code sniffer locally over your forms branch.  The rule at least will need a little reformatting. Thanks.\n. So, I'm thinking that JFormRule could be bolstered a bit because range checks could be applied to text elements as well (for string length).  So, maybe JFormRule should  have a few new methods:  checkMax (is aware of \"max\" attribute), checkMin (is aware of \"min\" attribute), checkDataType (which checks the type of data) and checkDataValue (which, by default, does the regex check and invokes checkMin and checkMax).\nThen, possibly, this new rule is called JFormRuleNumber which can handle integers or floats.  I'd probably suggest the \"integertype\" field is changed to:\npositive=\"\nThat should cover all the combinations that are needed.\nWe can then add a JFormRuleText that gives us an easy way to check for a string of certainly length, and maybe that includes an arbitrary \"regex\" field.\nThose are rough thoughts anyway.\n. Elin, how about we close this pull request for now?\n. Just want to let you know this looks really good, but I just haven't had time to do a live test of it yet.\n. Thanks Amy.  We've changed the system slightly since you last visited.  Can you make a new pull against the \"staging\" branch.  What happens is that will run the build and, if successful, it will commit those changes to the \"master\" branch.  We don't push directly against master anymore unless all our testing passes. It's just part of our QA process now (I'll make a note to get the README file updated to that effect).\nAlso, would you mind adding a list item to the changelog in the following file, describing the fix/issue, as well:\n/docs/manual/appendices/changelog.xml\nThanks in advance.\n. I've made some notes here about pull requests and a few other things:\nhttps://github.com/joomla/joomla-platform/wiki/Contributing-to-the-Joomla-Platform\nIf anything is unclear, please let me know.\n. Awesome.  Would you mind adding a list item to the changelog in the following file as well:\n/docs/manual/appendices/changelog.xml\nall I'll get that merged.  Thanks.\n. Looks good Rune.  Would you mind just pulling against master to fix up some of the code formatting and also add a line to the changelog.  Thanks in advance.\n. Almost.  Only thing that needs fixing a bit is that the opening if curly bracket needs to be on a new line.  Otherwise that looks great.  Thanks!\n. I've updated the docs to reflect our current standard.  Basically we changed if to suit the auto-formatters in most IDE's, but particularly Eclipse and seeing as the if block was the only exception, we changed it to be the same as any other block - so we need standard K&R braces.  The pull is still showing the lines in the changelog too, so just pull them out.\nSorry for mucking you around on this one.\n. Option B is the right way :)\n. Thanks Rune.  phpcs picked up a few other things we missed:\nhttp://build.joomla.org:8080/job/platform/158/checkstyleResult/new/?\nWould you mind fixing them up when you have time.  Thanks in advance.\n. Great patch!  Just a couple of house keeping things though.\n1. We need to pull against the staging branch, not master (that sets off our automated builds)\n2. I think you might need to update your branch against the original master. I seem to remember already fixing some of those DocBlocks.\n3. A few of the DocBlocks will break our sniff rules.\n4. Could you add a few lines to the changelog about your patch.  In particular, could you list each method that now supports chaining.\nSee this document for more information:\nhttps://github.com/joomla/joomla-platform/wiki/Contributing-to-the-joomla-platform\nThanks in advance.  This will be a great improvement.\n. Cool.  Would you also mind adding to the change log a short note on how a developer would use this feature.  You can use multiple paragraphs if you want. Thanks!\n. Rouven, would you mind adding a line to the change log file about this? Thanks.\n. Thanks :)\n. Awesome, thanks!\n. Hi Jonnathan. When are you seeing this error?\n. This actually works fine for me under PHP 5.3. I suspect it's something to do with PHP 5.2.  However, a better solution would be to change $query->qn('#__usergroups') to $db->qn('#__usergroups') since we already have the database object (JDatabaseQuery::qn is just a proxy back to it anyway).  The auto-formatter also made mince-meat of this block so if each chain could be put on a new line that would be great too.\nOne last thing.  Could you update the changelog with a short message (see https://github.com/joomla/joomla-platform/wiki/Contributing-to-the-joomla-platform for more information).  It's helps us all keep things up to date if we get in the habit of doing it with the pull request :)\nThanks in advance.\n. Ha! Yes, too close together.  Thanks for that - looks great.  Can you just merge down from joomla-master so I can auto-merge.  Thanks.\n. Reference link:\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26568\n. Nice catch.  Nic, would you also mind just adding a comment to the changelog file: /docs/manual/appendices/changelog.xml\nJust helps us keep track of what gets done as it happens.  Thanks :)\n. Hi Nic. Yeah, just send a new pull request when you have a spare moment. Thanks.\n. Did you really want this against master?\n. Is it worth adding anything to the change log for this?\n. Thanks. Could you put a line in the change log with your next pull request?\n. Thanks Nic.  Could you just do an update from joomla/joomla-platform - for some reason it doesn't want to automatically merge.  Thanks!\n. Thanks. Probably wasn't your fault. Branches can get put of sync fairly easily as we pull oth request. Fortunately though, without the pain that we used to experience in svn world ;)\n. This one has fallen off the radar for some reason - sorry.  Can you up update the branch against staging please?  Thanks.\n. I would be moderately well off if I had a dollar for each time I found a bug due to inline if statements ;)\n. Roland, can you add a line to the change log describing the fix?  See the wiki page on contributing for more info.  Thanks.\n. Thanks.  You could have actually just added that to the branch without making a new pull.  The pull request is against a whole branch, not individual commits. Something to remember :)\n. Fixed up cosmetic issues.\n. Added a bit more to the branch: getSetUpOperation and getTearDownOperation to support InnoDB tables with foreign key constraints (had to fix the JAccess tests - parent::setUp was not being run properly for all tests).\n. A few more bug fixes, plus ported JTableNested tests from the CMS.\n. Can we park this pending a complete review of the MVC?\n. Can you try something for me.  If you are having this problem in the backend, can you find /administrator/includes/framework.php and after the jimport('joomla.user.user') put:\nJLoader::register('JTableUser', JPATH_PLATFORM.'/joomla/database/table/user.php');\nAlso do this in the frontend /includes/framework.php file.  I think that may solve the problem.\n. Fixed in platform so closing issue.\n. I suspect the intention is (or was) that a module can return the content in a $content variable.  On that basis $content should be considered reserved.  This may be a hang over from a previous version and no longer used.  If that is the case, the feature needs to be deprecated, and not removed suddenly.  Not accepting the change.\n. This is a known issue and possible bug in PHP.  Use an if test on the date to check that it is valid {usually intval($date) will do} before using the JHtml method.\n. What are the potential issues?\n. This seems to be a bug further upstream.  The problem appears to be the path that is sent to the API, not the API itself.  While a sanity check on the path would still be advisable, it's not the root cause and would only mask the issue raised in the CMS.  I'm going to close this pull request as I think we can do better refactoring that method.\n. Michael, I've changed the system so we can generate the changelog from the pull request messages.  There's no need to add the changelog anymore.  Your branch will also need updating as git reports it can't be automatically merged.  Thanks.\n. @pasamio what do you think on this one?\n. Any progress on this? The pull as it stands isn't the correct solution - a database driver can't be able to close the session.\n. The way I train the other engineers to do it at work is like this.\nCreate a remote (as Nikolai says) to the other repo. I collaborate\nwith Louis a lot so I added his remote like this on the command line:\ngit remote add louis https://github.com/LouisLandry/joomla-platform.git\nThat's a read-only remote, but you could add a read-write version if you want.\nHe'll add a remote to my repo as well.  Then, find the branch that you\nwant to help with and you'd do something like this:\ngit checkout -b test_fix staging\n(create a new branch based on staging called \"test_fix\" based on your\nlocal staging branch)\ngit pull louis test_fix\n(pull in Louis's version of the branch)\n... apply modifications and commit ...\ngit push origin test_fix\n(push my local branch up to my account on github)\nNow I skype Louis and tell him I've added some new coded.  He'll have\nadded a remote to my repo and he'll do something like this:\ngit checkout test_fix\ngit pull andrew test_fix\ngit push origin test_fix\nHopefully it merges ok :)  Now, if Louis has made the pull request, my\ncommits will show up in the diff, like you can see here:\nhttps://github.com/joomla/joomla-platform/pull/428/commits\nDoes that help?\nRegards,\nAndrew Eddie\nhttp://www.theartofjoomla.com - the art of becoming a Joomla developer\nOn 21 October 2011 08:58, Nikolai Plath\nreply@reply.github.com\nwrote:\n\nYou can add someone elses fork/branch as a new remote and submit a pull request to his/her repo and if (s)he merges your pull it gets included - I did this in #417 and it worked OK.\nI am a gitnoob myself, so I'm not entirely sure that this is the right way but it worked ;)\nhope that helps\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/238#issuecomment-2482939\n. When you are in the same room, command line is quicker ;)\n\nAndrew\nOn Saturday, 22 October 2011, Matias Griese \nreply@reply.github.com\nwrote:\n\n@eddieajau: You can actually improve you process by making a pull request\nto Louis inside GitHub. I've done it few times and it has a few benefits\nover Skyping someone. :)\nFirst the owner will see that there's pull request to his branch (don't\nforget to @ mention his name). He can comment the pull request, you can\nanswer to his questions and you can update the code if needed (improvements,\nconflicts). It's just like doing the same with the master repository --\nreally cool and useful if you want to create feature together with other\npeople.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/238#issuecomment-2489029\n\n\nRegards,\nAndrew Eddie\nhttp://learn.theartofjoomla.com - training videos for Joomla 1.7 developers\n. I'm going to close this one for now - I really don't think this is the right solution.  Probably needs to be raised as a standalone issue if not already.\n. Fixed in https://github.com/joomla/joomla-platform/pull/292\n. Closing pull as it's made against \"master\".  Please make pull requests against the \"staging\" branch.  Thanks.\n. I think we fixed this.\n. I actually prefer Nic's way of handling that because it makes sense for the application to dictate what level of error handling is sane during it's execution path.\nI could even go with setting the defaults in JError as:\nE_NOTICE => array('mode' => 'echo'),\nE_WARNING => array('mode' => 'echo'),\nE_ERROR => array('mode' => 'die');\nThis is a better default state because not all platform apps have document output.  Given that JError is going to be deprecated anyway, and JApplication needs further de-coupling from the CMS, I think this is probably a smarter way to approach it.\n. I'm not aware of any apps that would be using that feature, and if there were, it's an easy change for them to include when they upgrade to 11.3.  I can add a note somewhere about it when we do the pull request.\n. I know I said to post this issue here, but in hindsight it's not something that is specifically for the platform to fix (in other words, it's still part of the coupling we want to get rid of).  I'm pretty sure there is an easy workaround in com_users but I've just never had the time to look at it despite the fact it annoys the life out of me.\n. Why wouldn't you just abort with a message, eg:\n$this->parent->abort($table->getError());\nreturn false;\n??\n. Yeah, we'll have to have a think about the transition.  The plan is not to drop JError until 12.1 which is the version that Joomla 3.0 will be using.\n. I think the raise-warning is the easiest of a bad bunch of options.  However, I'd remove the legacy check for now.  If it's to be included it should really have the following form:\nif (JError::$legacy)\n{\n    JError::raiseWarning(1, $table->getError());\n}\nelse\n{\n    throw new JInstallerException($table->getError());\n)\nbut since we don't have robust exception support yet, we'd loose any visual cue for the error.\n. I think you can use empty($module->user) instead of (!isset($module->user) || !$module->user ).  That will give the same effect and maintain the status quo.  I'm not sure what it's there for either so I'm with Rouven. Removing the check blindly is probably not a wise move.\n. I don't have any problem running the tests.\n. I definitely agree we are missing some error reporting here, but why wouldn't you just use a normal abort and put in:\n$this->parent->abort($this->getError());\nbefore the return false;?\n. I think just raise the warning for now.  Don't do the JLog because that will already be handled in JError.\nI think with the legacy check either remove it, or 'else' throw an exception.  But, since we don't have good exception support yet, and the Installer package is highly CMS centric at the moment, I think just remove the legacy check.  It'll have to go on the TODO list when we remove JError.\nDoes that make sense?\n. Hi Jonathan\nJust update your master branch.  The pull requests are done via branch so whatever work you push to them before they are merge will be reflected in the request.  Makes it very easy to fix stuff up :)\n. That looks fine to me.  You don't need to do anything else.  On to the next bug :)\n. As mentioned in the pull request, the workaround (and future format) is to register your classes using either JLoader::register or JLoader::discover.\n. Closing issue.  Please re-pull against the Joomla Platform's \"staging\" branch.  Thanks in advance.\n. I agree. We need to head towards using the spl autoload features more.  The addIncludePath is really a hangover from the PHP 4 days.  Thanks for working on a solution, but it's not quite what we are looking for so I'm going to close this issue on that basis.\n. What you need to add in your code is this:\nJLoader::register('MyTableUser', $pathToClass);\nor\nJLoader::discover('MyTable', $pathToTables);\nThat will fix your problem and be future proof.\n. I think this need merging with master as it's reverting recent changes in a few places.  It's probably best not to mix unrelated docblock fixes in pull requests like these.\n. I'm sorry but we aren't accepting issues for this repository any more. Please see http://developer.joomla.org/cms/report-an-issue.html for how to report and issue for the CMS Platform.\n. I like the general idea, but I'm wondering if it would be better to add a single, protected $columnAlias property which is an array of the custom mappings (note, protected properties don't have an underscore prefix).  The array could be empty by default and this also allows us to expand it at a later date without having to add new properties to the class.\nYou could also add two other protected methods, getColumnAlias (to use int, for example, the publish method) and setColumnAlias (to use in the constructor).\nI don't think you need a configuration option in the constructor.  Rather, force the developer to use that new setColumnAlias I mentioned above when they override the constructor in the child class (or they can just explicitly set the array in the class properties).\nWhat do you think?\n. I'm going to close this pull for now since there is a bit of work to be done on it one way or the other.  Open another pull when you've had a chance to look at the suggestions for how to improve the feature.  Thanks in advance.\n. I'm guessing it should be $row->$k.  In 1.5 it used to be\n    if (!$obj = $this->_db->loadObject())\nDo you want to have a stab at making a pull request on that and just double checking that code actually works?\nThanks in advance.\n. Amy, you up to doing a simple patch for this, or will I put it out on the mailing list for someone to do?\n. No great hurry - it's just an easy one to get out of the way :)  Obviously not many people use the feature.\n. Any luck getting that pull request together?\n. Any update?\n. Thank you. That's all I needed to know. Will do.\n. The standard doesn't say anything about it (yet), but I'll add that we should aim to include the correct object type, or at least a common ancestor.  This would be preferred to \"object\", but I was more worried about eliminating check style warnings on this one.\n. If you do\n@param JNode $child Description\nIDE's like PDT will give you type hinting and auto-completion on $child because it knows what class it is.\n. The installer is something we want to take out of the platform so while, yes, the code that needs to be fixed will be in the Platform currently, the CMS is the only one using and to determine a fix.  Once a patch is reviewed by the JBS, make a pull request here.  Thanks.\n. Closing as this is marked as a known issue in the CMS tracker.\n. How do you replicate this problem?\n. Can you please post some example code using pastie or similar. That ensures the testers have the best chance of seeing your exact problem. Thanks.\n. Hi Denitz\nA magic get was added to JDatabaseQuery back in June, and made it into 1.7.\nhttps://github.com/joomla/joomla-platform/blob/master/libraries/joomla/database/databasequery.php#L380\nHope this helps.\n. Hrm, I guess that would be ok, but the magic set would need to do some type checking.  In other words, if it's a field that is expected to be a JDatabaseQueryElement isn't, it should probably throw an exception.  Another option is to add JDatabaseQueryElement::remove so you can remove selected joins, eg:\n$query->join->remove($index)\nEither way, make sure the unit tests are updated in any pull request.  Thanks in advance.\n. Objects are returned by reference in PHP 5.\n. Oh, you are right. It's obviously been a long day.  I'd prefer a plain _ set (forget what I said about type checking) to compliment _ _get.  I actually don't know if & _get would work but my gut feel is it's not good practice.\nHaving said that, manipulation of queries like that is at your own risk!\n. It would help if you try to communicate what you are trying to achieve and why.  In the absence of that, the purpose of the protected properties is so you can't mess with them outside of the published API.  I'll turn the question around and ask why should I let your plugin (presumably?) alter queries in my extension?\n. Ok, thanks for that. Now I have some context.\nSo far my testing indicates that for a \"count\", clearing the select and then making it $query->select('COUNT(a.id)') or similar has a huge impact.  So does clearing the ordering clause.  I've found less improvement reducing joins less.  At this stage my thinking is to either leave the joins, or to complete rebuild the joins tuned for the total counting.  I'm working with some very large data sets and that seems to be working well.\nA longer term solution is to look at something like \"named\" query elements so that you can just excise specific query elements, but that still needs some thought.\nThat's my current thinking anyway.\n. Personally I think the effort to scan through the joins to work out which one is which, and then splice them back is roughly equal to the effort in rebuilding the joins that only apply for the count.  Usually, you'd be removing more joins (if not all) than you'd be keeping.  That's my experience anyway.\n. How do you reproduce the problem?\n. https://github.com/joomla/joomla-platform/pull/294\nRoot cause is that whoever fixed 1.6 didn't understand the actual problem.\n. error.php seems to have gotten mixed up in this pull??\n. Try removing the from method and just having:\n$query->delete($db->quoteName('#finder_taxonomy').' AS t');\n. Ok, I think that is a normal SQL error.  The trick with delete() is that it takes the table name.\nI'll close the issue for now but if you find something wrong in the future please let me know.\n. Looking good so far.  A couple more suggestions:\n1. Where we use columnAlias[$column] in getColumnAlias and setColumnAlias it's probably a good idea to strtolower the key of the array.\n2. I think we need to sanitise the return value of getColumnAlias, just in case someone puts in a silly typo.\n$return = preg_replace('#[^A-Z0-9_]#i', '', $return);\nshould be enough for now.\nWould you also like to have a go at doing a unit test for getColumnAlias and setColumnAlias (with help obviously)?\n. Ok, looking good. The next step is to flesh out the test stubs. The first thing you'll need in an inspector class for JTable. I've written up some notes here about how to build an inspector:\nhttps://github.com/eddieajau/joomla-platform/blob/documentation/docs/manual/chapters/testing.xml\nYou'll need to create JTableInspector.php that includes the magic __get and __set and also two public overrides for getColumnAlias and setColumnAlias.\nThen, you'll include the inspector class in the JTableTest.php file at the head of the file:\nrequire_once __DIR__.'/JTableInspector.php';\nYour tests will probably start something like:\n$table = new JTable('foo', 'bar', $this->getMockDatabase());\nsetColumnAlias is the easiest to test, something like:\n$this->setColumnAlias('published', 'state');\n$this->assertThat(\n    $table->columnAlias['published'],\n    $this->equalTo('state'),\n    'Tests that the alias was correctly added to the columnAlias array.'\n);\ngetColumnAlias is similar, but there are more cases to test:\na) where no alias is available\nb) where a good alias is provided\nc) where an alias is provided but has bad characters\nTo make that test, you'll do something like this:\n```\n$table = new JTable('foo', 'bar', $this->getMockDatabase());\n$table->columnAlias = array(\n    'published' => 'state'\n);\n$this->assertThat(\n    $table->getColumnAlias('access'),\n    $this->equalTo('access'),\n    'Tests that when no alias is available, the original column name is returned.'\n);\n```\nYou should be able to work out the assertion for the next two cases by yourself with that example :)  But, if you need any help, let me know.  We could also do the last test using a data provider but we can do that another day.\nYour next step, and this could be another pull, is to implement this in, for example, JTableContent and check that the alias handling works.  You should be able to remove the JTableContent::publish method from that class now.\nOh, and one last thing, you'll need to merge down from the platform's master branch because this pull won't automatically merge at the moment.  Thanks!\n. Fixes looking good!  How are you going with the two unit tests?\n. You get the mock database by $this->getMockDatabase in your test.  See the example I gave you above.\n. Looks like I got busy and forgot to follow up on this one.  Could you merge with staging and see if we can get this finished.  Thanks.\n. Hi Julio.  I'm very sorry but I just haven't had a chance to look at the ORM stuff (though, I know Rob Schley is looking at that casually at the moment so it might be worth pinging him about what he's doing).  However, I am interested in the inflector class.\nThere is a little bit of code here that we already use here based on Paul Osman's work:\nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/application/component/controllerform.php#L110\nWould you mind making that a separate pull and make sure to include some unit tests for it?\nThanks in advance.\n. Would you mind adding @since 11.3 to any new tests that don't already have it?\n. Ok, that's cool :)  I've got another pull in the queue to fix the unstable builds so I might wait for that to go through (I made it, so I can't merge it) before I pull this one.  Thanks though - every little bit helps.\n. Nice addition!  All tests passed here so we'll see what the build server says.\n. Rouven, would you mind adding a list of the paths that this is supposed to be looking for.  Then I'll have a think about how to craft a unit test for it.  Thanks!\n. Hi Jonathan.  Your branch needs updating.  However, is the CMS getting a patch to manually call addClientInfo?  We just need to synchronise carefully if that's the case.  Though it would raise a small backward compatibility problem so are we better marking that block of code with a JLog deprecated warning and removing the code in 12.1?\n. Nice work Michael.\n. Update from master and those tests errors should go away.  That problem was fixed in one of yesterday's builds.\n. Nice work again!\n. Nikolai, this is pulled against master, not staging. Looks good though.\n. No, but I don't have the admin rights to do it :)  I've left a message.\n. Thanks for cleaning up these edge cases. It's greatly appreciated.\n. Just a couple of house-keeping things.  \nThe tests and code should all follow the code-style rules we have set up.  You can find a PHP Code Sniffer standard in the /build folder or a text explanation under /docs.  \nIt would be better to overwrite the actual classes so that we can see what the differences are.\nThe unit tests aren't really unit tests.  They are of interests but we'd probably take them out before the final merge.  However, I'd like to see a full set of unit tests done, if possible, on the original classes first.  Then we can apply your changes and ensure nothing breaks backward compatibility or introduces a regression.\nOn a technical note, I don't think we should be specifying default events in the class itself.  They are very CMS centric and we are trying to reduce the tight coupling of the Platform with the CMS.  I would let the CMS of \"other app\" add those by hand as it's bootstrapping the framework (so that's a change you would make in, for example. /includes/framework.php in the CMS).\nThe most important thing in the short term though is take the '2' off the names so we can see the changes :)\nThanks in advance.\n. Thanks Hannes. A few house-keeping things.  You need to pull against staging, not master (that triggers a build on our CI server) - I have to close the issue on that basis, sorry.  You've got a few check-style problems that I can see.  It would be good if you can set up PHP Code Sniffer via PEAR, add our Joomla sniff and get it all formatted and docblocked correctly (if not, the coding standards are under the /docs/ folder and are 'reasonably' up to date).  At this stage the @since tags (all properties and methods need them) will be 11.3.  Last thing is the class needs a full set of unit tests.\nOnly technical suggestion is to use the magic __toString method instead of the render method.\nI would also make a post to the Joomla Platform list (not the Framework list as we are in the process of retiring it) to let people know your work is here to peruse - that's just a suggestion though.\nIf you can fix up the check-styles and have a full set of passing unit tests, I don't see any other obstacle in adding the code.\n. Well, technically, no, you are not banned any more because the period is well and truly passed.  However, whatever conditions have been attached for joining back into other lists or groups still stand (beyond my control), but as for the platform list, as long as we have an undertaking that you are prepared to keep things civil and professional (as you would expect to be treated in return), I don't see there will be any problem.\n. As mentioned before, we need automated check-style tests to pass and a full set of unit tests before we can consider merging.  Let us know when that's done and we can check the work.  Thanks in advance.\n. For the code style, are you using the Joomla sniff?\nphpcs --standard=Joomla \nNote, you'll need to copy or softlink the standard into the PHP Code Sniffer standards folder, or, add command line arguments to point phpcs to the right sniff.\nTest should also have their docblocks done including the @since tag, and while we don't run code-style checks over them, they should still comply.  There are some protected methods not being tested so you'll need an inspector to do those.  I've written some notes about there in this doc:\nhttps://github.com/eddieajau/joomla-platform/blob/documentation/docs/manual/chapters/testing.xml\nHope this helps.\n. Just another note, in tests you want to isolate the test as much as possible.  For example, when testing the constructor you have this:\n$this->assertThat(\n  $table->getTableOptions(),\n  $this->equalTo($options)\n);\nIt's better, in my opinion, to test the value of the protected $options variable.  If you use an inspector you'll get access to that and the test can become:\n$this->assertThat(\n  $table->options,\n  $this->equalTo($options),\n  'Checks that the options passed to the constructor are correctly set.'\n);\nAdding the note (the third argument) helps self-document and track down problems, particularly if there are multiple assertions in a test.\n. Hrm, sounds like it's defaulting to the PEAR sniff for some reason.  At any rate, have a look at any other class (take JCli for example), and you should be able to see the formula.\n. Thanks for adding the note on the Wiki page.  There appears to be a few bugs in the Sniff so could you fix up the following by hand:\n1) } else { should have the brackets and statement on new lines.  The sniff is configured that way but not picking it up.\n2) Can you put 2 spaces after each @return\n3) Can you put an @since 11.3 line into each of the property and method docblocks (3 spaces between since and 11.3)\nAs far as tests go, you are missing a bit of coverage on addRow ($special not tested), getRow (if $id !== false), getRows ($special not tested) and deleteRows (unsetting the special header and footer rows not tested).  Fix all that up and we should be right to merge.\nThanks in advance.\n. Close enough.  Thanks for that.\n. Yeah, I think that's the best of a bad bunch of options.  That area of the code is way too tightly coupled to the CMS and needs to be pulled out one day anyway.\nIf you could make a pull request with that change (it's line 567 in the platform file), or ask if someone else could do it for you, that would be great.\nThanks!\n. Basically the steps are fork the joomla-platform, clone it to your computer, edit file, commit the changes, push the changes back to your github fork, then issue a pull request against our staging branch.\nThere a bit of setup information here: http://docs.joomla.org/Working_with_git_and_github\nand also in the wiki here https://github.com/joomla/joomla-platform/wiki\n. I don't suppose you'd like to have a go at writing a unit test for _getJSObject would you?\n. Protected methods, while hidden from the public API, can still be used by derived classes by other developers so they need to perform as advertised.  Plus, it ensures that our own usage of the protected API performs as expected.  So, it would be great if you could have a go at it.  If you have any questions about it, I can give you a hand.\n. Branch is not merging cleanly.\n. Nice work Michael.\n. Nice work. Thanks for that.\n. I see what you are trying to do, and I think I agree, but wouldn't the change introduce a backward compatibility problem?\n. Ok, we don't want to break backward compatibility because I know a) CMS extension devs use the field type and b) they don't read changelogs :)  So I would deprecate the attributes and add new ones that make sense.  Maybe \"listvalue\" and \"listtext\"?  It wouldn't hurt to add some comments in the Docblock about what attributes are supported as well.\n. Thanks Denitz. I think the easiest think is to just make a pull request removing the jimport line from the callback controller.\n. Why is that better?  I'd probably just go for a ternary operator myself, eg:\nreturn isset($this->_items[$id]) ? $this->_items[$id] : null;\nThoughts?\n. I'm going to close this and ask that we review the MVC in Q1 of next year.  Thanks.\n. Would you mind just adding @since 11.3 to the docblocks.  Thanks.\n. I'd say the methods need to be changed to use $this->cursor.  Are you able to make the required code changes and make a pull request, or do you need help with that?\n. Going to close this issue since we have a pull request in the pipeline.\n. Thanks!\n. Would you be able to organise someone to make a pull request for this change?\nThanks in advance.\n. Thanks for the pull request.  I think that change might cause problems if you try to use a second (different) query and iterative with loadNext*.  I think you will probably have to check that $this->cursor is not empty and I also think a prerequisite is that you have to fire $db->query first, then loop over $db->loadNextRow (even for the first one).  Does that make sense?  That introduces a slight backward compatible issue but I don't see any other reliable way around the problem.\n. Ok, thanks.  I'll take a look when I can.\n. So, first off I can confirm the issue.  What appears to happen is the unpacking of the tar.gz falls apart - all the files are there, just looks like a cyclone has hit it.  OSX was, however, able to correctly unpack the archive.  I rezipped and command line tar zipped and both new packages worked ok.  So, my conclusion is that git hub makes the tar.gz files in a slightly peculiar way which manifests a bug in our unpacking code.  Given that command line archiving works, I think we'd chalk this up to a known issue for now until someone has the time and patience to trace through why github's tar.gz files are slightly peculiar.\nI recommend you use phing or similar to make you packages.  You can find an example that I use often here:\nhttps://github.com/eddieajau/artof-google-mini/blob/master/build/build.xml\n. Ok, keep us posted.\n. Nice work!\n. Oh, I prefer \"else if\" but \"elseif\" is valid PHP so I'm personally not fussed which way it goes.  A \"bad\" sniff file is an interesting idea, we'd just have to have it out of the main /libraries/ folder.\n. I have no direct objection to this, but could you discuss it on the CMS developer list first and make sure everyone is happy with this approach.  For instance, I think the name of the event should probably be \"onModuleBeforeLoad\" but see what people think. There are at least two other extension developers that I know would like to have input into this.  I'll close the pull until you've done that.  Thanks.\n. No problems.  Here you go:\nhttps://groups.google.com/forum/?fromgroups#!forum/joomla-dev-cms\n. Thanks Hannes.  This will probably take a while to dig into, and I'm aware other peers and stakeholders have ideas about how the router should work, and I'm not sure who's available for that yet, but here are a few initial comments/questions:\n1. Are the changes fully backward compatible with the current class?  If so, can you make sure there are unit tests in place to prove it.  If not, it will have to wait until 12.1 for consideration.\n2. Do you have full code coverage on the tests?\n3. Can you fix up your code style.  Most of the check points are on this page: https://github.com/joomla/joomla-platform/wiki/Contributing-to-the-joomla-platform  Note that while check style is not performed on the tests, we do expect them to have full docblocks and be well formatted as well.\n. I'd really like to see some buy-in and testing from the Joomla CMS or other major downstream stakeholders (like extension developers - the \"might have problems\" statement concerns me a little) before this gets considered for merging.  On that basis but mainly due to the lack of categorisation features in this issue tracker, I'm going to close this pull until this is done.\n. Yeah - rock and a hard place. I suggest try and keep the topic alive on the platform and CMS/JBS list.  The fact is pull requests don't give you much marketing value.\n. Hi Jonathan, can you write a test procedure (presumably using the change applied to the CMS) for this?  I assume it's as simple as installing a simple extension and watching for the appropriate changes to the menu system.\nThanks in advance.\n. Hi Jonathan.  Could you update the branch please and let us know about that test procedure?  Thanks.\n. Moved examples to a new home: https://github.com/joomla/joomla-platform-examples\n. Yeah, we could do this more consistently.  With the test inspectors we should be able to make JFactory's static properties protected as well, which would make me feel more comfortable :)\n. I'm sorry but we aren't accepting issues for this repository any more. Please see http://developer.joomla.org/cms/report-an-issue.html for how to report and issue for the CMS Platform.\n. Could you post a snippet showing how you are using JFile::delete (use gist if you like)? I suspect it's something to do with the FTP layer we have in there (sigh). Thanks.\n. Responding to WebMechanic, just to be clear, the auto-formatter was used to assist bringing 300,000 lines of code into line in a relatively short period of time (took about a solid equivalent week to do it).  That was a one off operation but one that at least made all the files consistent - you don't have to like the consistency ... I'll still sleep at night :)\nThe next thing, which is more important, is the Code Sniffer standard which we've tried to keep as close to PEAR as possible, because, like it or not (and I personally don't like some of it), that is an industry standard.\nNow, if you don't like the end result, that's your prerogative.  If you want to design a new sniff, rewrite the standards and apply them to our 300K line strong code base, be my guest :)  I've said in a number of places on the web before I think the current standard is a compromise based on the efficiency by which the code could be made consistent in the shortest period of time possible (and that was not a trivial amount of person-hours).  I'm totally open to considering changing the standard, but my only condition is it has to be applied consistently across the board at once as a package deal (more or less, but not a handful of files at a time).  Those wanting to take on that effort are most welcome.\nRouven, I'm happy with logentry, but I think most of the other changes will break sniff rules.  I can understand aligning on equals but if we do that I think we'd need to apply the same rules as docblock and use real spaces, not tabs - and that would get real messy.  However, I'm not happy with alignments within function argument lists at all anymore.\nHappy to hear other comment/suggestions/constructive criticism, but, lets respect that some people have already put some thought into the issue, tone down the usage of passionate language and realise that there are as many differences of opinion of formatting as there are lines of code.\n. Michael, I did a similar thing for work.  See: https://gist.github.com/1230563\nIs it worth combining the your approach with that code?  Looking at mine I'd also include another argument for the base date we are comparing to so that we can test the method better.\nI think we should flesh the unit tests out on this one as they shouldn't be too hard.  I can give you a hand crafting the basic structure.\nWe also need to put the language strings somewhere and we've been kicking around the idea of having a /meta/ folder for each package.  So I think, for now, we'd put them in ``/joomla/html/meta/language/en-GB/en-GB.html_html_date.ini\nWhat do you think?\n. Interesting.  Ok, what say we aim to add a \"diff\" override to JDate.  If PHP 5.3, it just returns the parent method.  If 5.2, we pull in the code that Kunena is using.  Then you can pull the best of the 3 approaches out and combine them into the HTML helper for displaying the date chunks.  It would be good to have an option to display the number of chunks.  One chunk would be the largest (\"1 minute ago\", \"1 week ago\"); two chunks would be \"2 hours 33 minutes ago\", \"4 days 12 hours ago\", and so on - though, thinking about it, one or two chunks would be the most common - three chunks at a stretch.\nWhat do you think?\nRegarding language files, here's what I've done as I've been rebuilding JHttp:\nhttps://github.com/eddieajau/joomla-platform/tree/jhttp/libraries/joomla/client\nI need to open up a thread on the platform list about this so we can agree on the best approach to cover everyone's needs.  Will do that soon.\n. Just following up, I think we'll go with Michael's original plans but we'll need full unit tests on it before we merge it.  Thanks in advance.\n. Michael, for the language, put them in /joomla/html/language/en-GB/en-GB.jhtmldate.ini for now.\nFor the testing, add a third argument, defaulting to null, that takes the comparison date.  If it's null, use \"now\".  Does that help?\n. Hi Michael.  Is this to help with the Finder integration?\n. Tests seem to be failing??\n. Ok.  I'm just thinking it might be better to leave heavy refactoring until 12.x and just bandaid the errors as best we can (unless, of course, this is the bandaid...).\n. Thanks Michael!\n. This is the intended behavior. If you want the ability to have \"nothing\", don't include a default.\n. Waiting for test confirmations from the JBS.\n. The reference is probably there to save on memory (JFile is notorious for consuming it).\n. Thanks. Would you mind fixing up the docblock for the class property before we pull this.  You can see an example of how we've done it in JDispatcher https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/event/dispatcher.php\nThanks in advance.\n. Christophe, would you mind splitting the line like it was originally so it obeys the line length check style (think it's max 130 characters).\nThanks in advance.\n. Thanks. Waiting on JBS testing.\n. Christophe, can you add a test case to getStr_ireplaceData in JStringTest to make sure we cover this change.\nThanks in advance.\n. Looks fine but waiting for JBS testing.\n. Nice work, but I'm going to put a hold on this one unit we establish unit tests to verify the change doesn't introduce any regression errors.\n. Branch not merging cleanly.\n. Hi Jeremy.  I've added the bulk of your comments to the contributing wiki page at https://github.com/joomla/joomla-platform/wiki/Contributing-to-the-joomla-platform and added a link in the README to that page as well.\nWe have actually deliberately set the minimum spec at PHP 5.3 because some classes (not used in the CMS) do require them, and we don't want to discourage people to write for PHP 5.3.  That said, anything we know is used in the CMS still needs to be compatible, at least until the CMS increases its minimum spec. (expected for 3.0).\nI'm going to leave off the MySQL version for now because that's really a function of apps build on top of the platform.\nI also left off the bit about extensions because that is very CMS specific and the Platform has a much broader audience.\nThanks for the extra words though - I think they are really helpful for others in the community that are not quite sure how to start.\n. I'd really like to see a unit test added to confirm this change works if that's possible.\n. Closing pull request until a new solution can be found.  Reopen when appropriate.\n. Hi Christophe. We talked it over and we'd prefer to leave the index.html files out of the platform repo because the end goal is to have it installable via PEAR or some other mechanism.  You can add them into the CMS and they will stay there when you drop a new version of the platform in.  We could easily add a script to check each folder has one.\n. I don't see how this pull request is fixing the problem in JText??\n. I'm not overly comfortable with the changes for a few reasons:\n1. I'd like to see some buy-in and testing/confirmation from the CMS, that this is the right way to do this.\n2. I don't know if onDisplayView is the right way to handle the event. I think that needs more investigation.\n3. I'm aware quite a few people want to revisit the MVC triad so I think it would be better to review these kinds of changes with that review.\nI'm going to close this pull for the platform for those reasons, for now, but it could be that they could still be applied to the CMS as a view class override which, to be honest, is a better place for these changes in my opinion (but I'm happy to be convinced otherwise in a peer review of the MVC API).\n. Hannes, which mailing list are you referring to?  On the platform list only Nic replied.  With all due respect \"a lot of positive feedback\" is hardly accurate.  If there is discussion elsewhere that I'm not aware of, I'm happy to peruse it.\nI'm not so much worried about the event name, but how/when/where it's executed.  You also have to realise that the platform is being used for more than the CMS.  A review of the MVC is independent of what is or isn't in Joomla 2.5.\nWhatever that case, closing this pull is just that.  It's not ready in my opinion and we don't have enough tools on this tracker to put it in a holding pattern.  It's nothing personal, it doesn't mean it can't go in, it just means it's off the pull request list for now.  That's all.\n. Hannes, I understand what you are saying, but I think you are into very application specific territory with your use-case.  Now, this might turn out to be a great solution, it might not, but I'd like to spend some time on having a plan for where MVC is going, not least of which is working out where new \"hooks\" should be placed, before we slap more things into it.  I think that's a fair and reasonable approach and I know quite a few people want to join that conversation.\n. Nikolai, this is great work but we're going to look at doing this in a new repo so that it can be used elsewhere (eg, for the CMS as well). On that basis I'm going to close this pull and we'll contact you when we have a new repo set up.\n. Yes, please update the standards documents. That would be great. Thanks!\n. I've got indentation set to 2, and max line length set to 130.\n. +1 for (a)\n. Nikolai, I've pulled this one because it's a good patch, but would love it if you can change the rule to check for the (a) case you show above.  Thanks again!\n. This isn't so much an issue in the platform as how the CMS uses it.\n. Thanks.\n. I wish we had a budget for \"best pull request of the month\" :)\n. Amy, would you be able to fix up the rest of the methods, adding public and also protected to those with the underscore prefix.  Thanks.\n. Thanks Nikolai. I hadn't got around to doing a hard test yet.  Yes, I agree - the overriding of get here is just plain wrong so I think we need to add change it to getFile and then deprecate get now and remove in 12.1, plus do what we have to to remove the strict error.\nAmy, you able to do that?\n. Good point ...\n. Thanks Amy.  Couple of things are breaking the unit tests and backward compatibility.  Could you change the constructor and destructor to public just in case someone is using the class directly (ie, $ftp = new JFtp).  Could you also change the other private methods to protected otherwise it becomes difficult to test them.\nFor the socket_set_timeout method, I'm not sure why phpStorm is complaining about the microseconds argument. It's listed as optional in the PHP manual.  What error is it showing?\n. Bizarre.  Yeah, the zero can't hurt.  Unit test (little as they are) pass now.  Thanks.\n. Amy, there was one checkstyle failure. We have a rule to have one new line at the end of the file.  I forgot to check that sorry. Could you add a new pull request to fix that minor issue - thanks.\n. Awesome, thanks!\n. Worked perfectly. Thanks!\n. I run on PHP 5.3 and I don't get any warnings. Is this a strict mode problem?\n. Ok, I'll close this issue and if it comes back to the platform in any way, let us know.\n. Christophe, can you give an example of a use case for this? I don't quite understand what problem is being solved.\n. I'm going to close this issue and ask that it be discussed on list. If a consensus can be reached, re-pull. It's nothing against the feature, just the lack of suitable workflow tools on GitHub.\n. Rune, would you mind adding a comment about this bug so that we don't accidentally put the cast back in sometime in the future?  Thanks.\n. Awesome. Thanks.\n. Branch won't merge cleanly.  Needs to be updated.\n. I agree with the premise, but if you are talking the md5 out of JSession, you need to put it back into the storage classes.\n. Mmm, ok, but I think the bigger problem is we have no code coverage to detect a regression. I don't \"think\" there would be a problem, but there's no way to prove that at present.\n. Another possibility is to simply JController::getInstance and move most of its smarts into a controller/MVC factory. That's probably the best way to handle it.\n. Any followup on this issue?\n. Yep. Just needs a pull request to clean that up.  The HEAD version\nshould be kept.\nRegards,\nAndrew Eddie\nhttp://www.theartofjoomla.com - the art of becoming a Joomla developer\nOn 23 October 2011 05:00, Jonnathan\nreply@reply.github.com\nwrote:\n\nI think that someone forgot to resolve a conflict before commit\nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/html/toolbar/button.php#L41\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/issues/457\n. Peter, I think all we need is the unit test to validate the changes.  Thanks in advance.\n. Jonathan, can you check the tests on this one please?  Thanks.\n. Yeah, that's mostly my fault.  The method strictly does not return anything so it should be void.\n. Ok, scouting around I think you are right.  Seems the consensus is to not use @return in constructors - I'm fine with that.\n. Awesome work Michael. Really appreciate it.\n. Thanks Hannes. Just on the code style side of things we need a new line at the end of the files now (there's a new sniff for that), and also for the new code that is going into JDispatcher and others, can you make sure the protected properties don't have the underscore.\n. Hannes, I just noticed JEditor and JAuthentication also extend JObservable.\n. Doesn't merge.  Please leave the tests in until the classes are removed. Thanks.\n. Dang it, so close!  Hannes, the offending check-style is:\n\nFILE: ...itories/github/joomla-platform/libraries/joomla/user/authentication.php\nFOUND 1 ERROR(S) AFFECTING 1 LINE(S)\n 490 | ERROR | Please end your files with an empty line.\nCould you fix that and we'll get this fella knocked on the head once and for all.  Thanks.\n. Thanks\n. I think this is fine but given the volume of changes, I won't be able to get to it until well after the weekend (beside work, have a JDay to prepare for).\n. I haven't seen this error in practice. The magic get should take care of it. See https://github.com/eddieajau/joomla-platform-examples/blob/master/web/detect-client/index.php\n. Amy I think you need to rely less on what php storm says and more on programming principles. I'm really unimpressed about he false positives it's throwing.\n. Amy, you can still report them if they make sense. I just ask that you don't put blind faith in what phpStorm says which, in this case, was very obviously wrong.\n. An empty table prefix is a valid value - not every database will have them. Also, calling the factory method, which I don't think is a good idea, within a loop will potentially lead to recursion, or at best performance degradation.\n. What's the error?\n. Try JFactory::getDbo()->replacePrefix('#__somename');\n. If you turn on strict errors if will tell you that you can't call a non-static method statically - because it gives you unpredictable results, as you found out.\n. Suhdi, I'm going to close this pull until it's in better shape to look at.  You need to update your branch against the current master.  There are also a lot of code style issues that need to address.  Please look at installing PHP Code Sniffer via PEAR and using the Joomla standard in the repo (or just look at how the existing files are styled).  Ping me if you have any other questions.\n. My practice is to apply coding standards to all code.  It's good practice to have the unit tests conforming to the standards even if we don't enforce it.\n. Nikolai, can you update the branch please.  Thanks.\n. Doh, sorry. It's early :)\n. I think it's best to leave things as for now.\n. Github needs a +1 button :)\n. Matias, you might want to have a look at what I've done here:\nhttps://github.com/eddieajau/joomla-platform-examples/tree/sockets/web/socket\nIt's based on the work here:\nhttps://github.com/jam1401/PHP-Websockets-Server\nStill a bit of cleaning up to do :)\n. There are no plans, but it would be a desirable feature :)\nJust a note, any socket package will require extensive unit tests.  Because of that, and since there are at least 2 solutions in branches I'm going to close this pull request for now.  Can you start a thread on the platform list and we can continue the discussion there (more people can get involved).\nThanks in advance.\n. Hi Yama.  I understand the problem you are trying to fix, but, unfortunately, it means we are doing a regex on every query whether it's a create statement or not.  I would prefer to see developers fix their queries.  It's also possible a developer might be trying to connect to an older version of MySQL (doubtful, but possible). On that basis but I'm not going to accept this change.  Sorry.\n. Pull not merging cleanly.\n. That sounds more like a problem with the unit test assertion.  Probably just need a test helper to fix paths before any comparison is made.\n. Just separate out the coverage code into a different request.  On the constants, I hear what you are saying but I don't think what you've done is going to be reliable, and it introduces some really wierd code (eg, $ds).  I think you are better off running the tests and giving us the failure report to we can work on a better solution for the windows tests.\n. Pull not merging cleanly.\n. Pull not merging cleanly.\n. Pull not merging cleanly.\n. Any process on getting the tests to work properly?\n. Good idea, but I'd prefer to see this done programmatically, something like:\nif ($this->get('themes.base'))\n{\n $options['directory'] = $this->get('themes.base');\n}\n// Fall back to constants.\n{\n $options['directory'] = (defined('JPATH_BASE') ? JPATH_BASE : dirname(__FILE__)) . '/themes';\n}\nThis allows for the theme path to change on the basis of input (eg, auto-switching on subdomains, etc).\nUnit tests will also need to be updated slightly to check this new feature.\n. Perfect!\n. Would it be possible to combine this work into Omar's branch #610 ?\n. Thanks Beat.\n. :) Github is awesome (except for the little things that really annoy me, hehe).\n. Michael, can you change the method name to truncateTable (that leaves us room to use a truncate method to nuke the whole db).  Otherwise that's a good add.\n. Thanks Michael!\n. Good one.  I didn't know you could do that.  Thanks!\n. Michael, I'm going to close this one for now, and suggest we kick it around the mailing list for a while.  I'm honestly not sure about which is the best way to go.\n. Not merging cleanly.\n. Hi Jeremy. Could you fix up the code style errors please.  Thanks.\n. Thanks Jeremy. Can you put a note on the CMS tracker that it's fixed on this side.  Thanks.\n. Should we do this now or after 11.4?\n. Let's leave it till after 11.4 (whoever merges, remove annotation in title please).\n. I know it's the PEAR standard, and it probably made sense when using PHP4, but I'm starting to wonder whether it makes sense to have the underscore rule for private variables.\n. Yes, remove the underscores.  I came across a case where I was using some smart get methods, but it wouldn't work with private method name because they \"had\" to have an underscore prefix.  Probably a discussion for the list for another day.\n. Yes.\n. Thanks Michael.  That's awesome work.\n. I think it would be better to add $connection in JDatabaseMySQLi as a class property then it always exists.  Something like:\n/**\n * The database connection resource.\n *\n * @var object\n * @since 11.4\n */\nprotected $connection;\n. I've merged, but I think it's still worth declaring that connection property explicitly in the class.\n. Going to have to revert this as it causes a regression failure in the CMS.\n. Good stuff.\n. Just a side note, I'm fixing up all the missing \"public\" stuff in the functions.\n. Sounds good.\n. Nice one.  That's been annoying me.\n. Michael, I apologise in advance. Ian's been working on a revised format that we can publish and I needed to pull that first.  Subsequently, I've thrown you pull out of whack.  Also, with the changelog, since we've got good HTML docs now I think what we'll do is just change that to a \"revision history\" page and link out to the changelog articles on developer.joomla.org for the full version.  How does that sound?  I'm sorry if this means some/a lot of your work has been wasted.\n. Thanks - merged. I'll fix up that changelog later.\n. Looks like a winner to me.\n. Done, thanks.\n. Done, thanks.\n. Thanks - merged. I think ultimately we need to make that more configurable because the idea of JPATH_ROOT is only directly applicable to the CMS.\n. sigh I need to clean my glasses.  Can my logic is correct with this change:\nif (constant('JPATH_ROOT') && strpos($path, JPath::clean(JPATH_ROOT)) !== 0)\n. I was just as blind :)  Nic, can you make a new pull to fix this.  Thanks.\n. Done. Thanks.\n. If we are moving the file, do you want to fix up the \"z\" as well?\n. Is there trailing space or something causing that one checkstyle error?\n. Thanks. Merged.\n. Thanks.\n. Rouven, would you mind adding the test skeleton file with this pull.  Otherwise a very smart idea.\n. Jenkins reports 1 test error.\n. I'm pretty sure all the methods are supposed to be used statically.  Would you mind doing that and fixing up all the methods if that is the case.  Thanks in advance.\n. Thanks. Merged.\n. Got there in the end :) Thanks.\n. Do we introduce any significant backward compatibility issue with this?\n. Note added to title (remove on merge). We won't consider this until after 11.4.\n. Thanks. Merged.\n. That's an awesome start Julio.  Here's some initial comments:\n- Code-style needs to be fixed up a bit (run it through phpcs with the Joomla standard)\n- subpackage needed in file docblock\n- @tutorial is not needed (it doesn't exist anyway)\n- @link needs to got to JStringInflector (not JInflector - does the page exist?)\n- Should be a concrete class, not an abstract class with static methods (much easier to test) or static properties. It's probably worth adding a string factory to create the concrete classes in the string package though.\n- We use en-GB for coding so change the \"ize\" to \"ise\" please :)\n- In the method docblocks, you are using @var instead of @param (should be @param [3 spaces] vartype [2 spaces min] $varname [2 spaces min] Var description\n- countable, singularise, pluralise and add (I'd rename add to addRule) should be public methods.\n- I'd make matchRegexRule private and rename it to just _match. I think you can make the loop more efficient by checking for if ($regex[0] == '/') ... do the regex. That means you aren't doing a regex on plain words that will be replaced.\n- add/addRule should check that the ruletype is valid, or use an alias (eg, singular|plural|countable)\n- I'd rename countable to isCountable and add matching isPlural and isSingular\n- What do you think about renaming singularise and pluralise to toSingular and toPlural ?\nMight also be worth looking at cakePHP's inflector to see if there are ideas to borrow:\nhttps://github.com/cakephp/cakephp/blob/master/lib/Cake/Utility/Inflector.php\nAt the very least, there are some extra rules we can borrow.\nOtherwise, it's a good start :)\n. I've been working on some refactoring to this.  Will push up when I can.\n. Julio, I sent you a pull request for some refactoring.  See https://github.com/eddieajau/joomla-platform/tree/inflector\n. Can you update your master branch against staging and I'll see what I can do.\n. Julio, I can't see where you've merged my branch in.  Would it be easier for me to make a pull request from my branch?\n. Julio, would you merge my inflector branch into this branch (your master branch), and then push your master branch up to the server.\n. Thanks. We'll wait for Jools to test it.\n. Passed.  I'll need someone else to merge as I've had a hand in this one.\n. I have a preference for private properties unless someone gives me a good reason why they want to make it protected.  It's easy to change private to protected, but we have, many times, had the case where developers have been using protected variables inappropriately.  So it's just a conservative approach to take when releasing new API (I don't want people messing with bits that I don't want them messing with).\nI'll fix up the little formatting issues (could have sworn I ran phpcs, but maybe I didn't).\nI use one array in the form \"singular word\" => \"plural form\".  It actually saves a lot of duplicate data storage doing it that way.  You can use two arrays but you have to use a completely different methodology for the lookups (you will end up storing twice as much data).  If you want to do it that way, fine by me, but someone else can do the hard work :)\nYes, we can use LSB now so I'll make that change.\n. There's a test error there.  You have to keep the same method signature:\n/**\n * Method to delete a node and, optionally, its child nodes from the table.\n *\n * @param   integer  $pk        The primary key of the node to delete.\n * @param   boolean  $children  True to delete child nodes, false to move them up a level.\n *\n * @return  boolean  True on success.\n *\n * @link    http://docs.joomla.org/JTableNested/delete\n * @since   11.1\n */\npublic function delete($pk = null, $children = true)\nThat should fix the check style violations as well.\n. Do you have a test plan to replicate this?\n. So, the translation of that is I have to get the Joomla CMS (trunk presumably?), then install Finder (from where?), then replace the CMS libraries with the latest platform, then \u2026 do what with Finder?  I'm not trying to be difficult but \"just run Finder\" doesn't give me any assistance in trying to isolate the problem nor replicate the conditions where you are seeing the problem.  Also, have you pushed this issue upstream to the dev's doing Finder because maybe they have a logic error in their code (because, in the absence of any better information, the fix make absolutely no sense)? If not, then that's the first port of call.\nThanks in advance.\n. I don't like fixing code when I can't see the root cause.  The problem with putting in a test that the class property exists is that it must exist by definition.  In other words, the fix makes no sense at all and is just masking a deeper issue.  If the connection property of the class is going away, someone or something is doing something crazy to make that happen. \nKlas's case is a bit different because it involved session closing, which makes at least makes this kind of cause plausible, but no less easy to track down.  And, to use his words \"what happened before?\".  What's the backtrace on the warning?  Does it happen randomly anywhere in the execution?  Does it happen after a specific query?\nIt seems more likely that Finder's code is inadvertently closing the SQL connection somehow but possibly the DB driver is not cleaning up the connection.  Soooo, on that note, you could try this:\npublic function __destruct()\n{       \n    if (is_object($this->connection))\n    {\n        mysqli_close($this->connection);\n        $this->connection = null;\n    }\n}\n. Grasping at straws, see if Finder does anything like unset($db) anywhere, or just throw a print_debug_backtrace in the destructor and see if it's being destroyed prematurely.\n. All JObject::get does is checks if the class property is set and is not null.  It's exactly the same as if ($this->connection !== null).  Therefore, the only reason why the is_object would fail is if the driver connection has been severed, but $this->connection is holding an \"old\" object.  There is nothing wrong with the is_object check as far as I can see.\nJFactory::getApplication()->close() is just a proxy for exit, but that is going to kick off session saving and a whole swag of destructors.\nActually, my suggestion to nuke the connection property is inane because we are in the destruct method anyway.  Maybe Finder's tripping some odd garbage collection bug in PHP??  So, I'm assuming that this is in the backend indexer code?  Does it start indexing, then stop, or what?  Are you seeing this error in the CMS as well, or only the ajax response (and if so, how are you seeing the error)?  I really need to you to describe as much as you can about your setup and how the issue is manifesting, otherwise all I can do is throw it back and say Finder is doing something dumb.\n. Elin, if your $this->get('connection') equates to null, then is_object($this->connection) must equate to false.  \nOk, if the indexer starts then stops, I suspect then it's probably something to do with how it's iterating.  The \"cause\" is going to be somewhere further upstream.  Whether it's in the platform or not, I couldn't say at this stage (my guess is it's more to do with the session if anything).  Maybe ask Rob if he's encountered this problem before in 1.5.\n. ZF2 does the equivalent of this (which you could try but I think you'll get the same result):\nif ($this->connection instanceof \\mysqli)\nSo, basically, the platform code is right, but something else is causing the connection to drop.\nThe other thing is I checked and the get method doesn't in the latest copy of the platform.  The problem seems common to all web portals.  I'm leaning towards it's more a server-driver problem beyond our control.\n. Ah, that makes sense.  So the patch just needs to change the conditional to:\nif (is_callable($this->connection, 'close'))\n. We'll just wait to see if jools is happy with that\n. Jools is unhappy about something.\n. Thanks. Might be worth letting Nooku know since they have the same bug ;)\n. Why are we quoting dot notation?\n. Why is this line:\n$query->where($db->quoteName('c') . '.' . $db->quoteName('rgt') . ' <= ' . (int) $this->rgt);\nnot just:\n$query->where('c.rgt <= ' . (int) $this->rgt);\nIt doesn't necessarily affect this pull, but I'm just wondering why all the extra work for a known case. It seems overkill.\n. I think the method name should be toSql, but other than at it looks fine. \n. Actually, can we also change all of the instances of toMysql to toSql in the platform code, so it's full deprecated in the API?\n. Awesome, I like it!\n. Does this allow us to get rid of the JFormHelper::loadFieldClass('list'); code as well?\n. Ok, we can attack that another time then.\n. I haven't finished reviewing the work from Sudhi, I was just getting it into a condition where it was reviewable.  Don't merge yet - it's not ready.\n. Ok, can you pull from my sudhi-staging branch.  It should be all up to date.\n. Errors\nlibraries/joomla/database/databasequery.php:810\nThe comments for parameters $table (1) and $increment_field (2) do not align\nlibraries/joomla/database/databasequery.php:810\nMissing comment for param \"$increment_field\" at position 2\nlibraries/joomla/database/table/usergroup.php:217\nExpected \"foreach (...)\\n...{\\n\"; found \"foreach(...)\\n...{\\n\"\nlibraries/joomla/database/table/usergroup.php:231\nConcat operator must be followed by one space\nlibraries/joomla/database/table/usergroup.php:231\nConcat operator must be preceeded by one space\nlibraries/joomla/database/table/usergroup.php:231\nConcat operator must be followed by one space\nlibraries/joomla/database/table/usergroup.php:231\nConcat operator must be preceeded by one space\n. I give up.  The hooduku commits put back a heap of stuff that was unnecessary or wrong.  Please revert them.\n. 88d7b8a and 18c9d57 need to be taken out of this branch.  Nothing you did or can do.\n. Um, let me be clear. \"I give up\" is meant in terms of exasperation.  I have spent significant spare time on this already but don't have any bandwidth left to sort out whatever has happened this close to Christmas.  Sorry if that doesn't suit but that's the way it is.\n. I think we should go a bit further with this.  validateRule should have @throws added to the docblock and allow for logic exceptions, such as changing:\n    return new JException(JText::sprintf('JLIB_FORM_VALIDATE_FIELD_RULE_MISSING', $type), -2, E_ERROR);\nto\n    throw new LogicException(JText::sprintf('JLIB_FORM_VALIDATE_FIELD_RULE_MISSING', $type));\nJRule should throw a LogicException on an invalid rule, and be marked to throw RuntimeExceptions otherwise for failed validation and change the return false to throwing a RuntimeException.  Similarly change the derived rule classes to throw and exception rather than returning false.\nWhat do you think?\n. Actually, that example is better as an InvalidArgumentException.  For failing rules, I'd use a RuntimeException.\n. Closing. I'm pretty sure we settled on returning exceptions, not throwing them.\n. The other way to look at it is does it matter because I don't know that the component helper belongs in the platform anyway. We should probably excise it in 12.1.  Just an alt point of view.\n. Merged.\n. Thanks.\n. Done. Thanks.\n. Done. Thanks.\n. Except for that one query, I think this looks right now.\n. Thanks for the extra set of eyes on this Christophe.\n. sigh had one of those stuck-brain moments.  Fixed.\n. Sounds like this has been fixed.  It not re-open or resubmit the issue.\n. Are the unit tests running ok your end?\n. Just need to remove a space getDbo())<remove space>); to keep Mr Jenkins happy.\n. Awesome.  Thanks for that.\n. Known issue.\n. Closing as a duplicate issue.\n. I think JNode and JTree should also move to the legacy tree.\n. Let's update the branch, move it to the legacy tree and make them for removal in 12.3 unless we hear otherwise.\n. I'm pretty sure we decided we'd just use JLog for this and the application would implement a listener for it (compare what we did with dealing with JError::raiseWarning and JError::raiseNotice).\n. Fixed by #733\n. I agree with Sam, it's not worth worrying about, and I agree with Amy, it's not worth worrying about.  The file should move to the CMS anyway, so I'm fine with it not being my problem anymore :)\n. Closing as it sound like the CMS dealt with this. Reopen or resubmit if the issue persists.\n. Nikolai, I've patched up a few things and removed the need for the inspector class here:\nhttps://github.com/eddieajau/joomla-platform/tree/elkuku-sqlexporter\nWould you like to merge that into this branch?\n. @elkuku in terms of renaming the classes, I'd put something on list because there are a few different thoughts the I know of regarding how that should be done (I don't care which one, just that we can all decide on one, hehe).  Regarding the installation app accepting XML, that would be awesome.  I originally created the import/export format for extension developers so they can just include the XML with their latest version of the extension, and the importer will just work out the diff without having complicated incremental upgrade files.  I expect the CMS could do the same thing (I'm not sure if the new repair db feature uses it or not, but it would probably become almost obsolete if the XML import/export was used).\n@chdemko would you mind reviewing this pull as both Nikolai and I have worked on it?\n. Personally, I'd like to see all the javascript removed from the platform because it belongs in the implementation of the application.  In other words, it's not the Joomla Platform's job to support jQuery, but if the Joomla CMS wants to support it, that's awesome, and they should provide that support in their application.  Likewise, if I'm building an application that needs Dojo or YUI, it's my responsibility to implement that, not the platforms.\nSo, I'm not a fan of this proposal but only because I think we should remove all client-side media from the platform and I think the CMS should own the discussion.\n. On 21 August 2012 09:11, beat notifications@github.com wrote:\n\nHi Andrew,\nThanks for clarifying. Just to understand correctly:\nSo Joomla Platform is a PHP-only library, not a web-applications platform (i am not aware of any modern web-application which doesn't use heavily Javascript and Javascript libraries) ?\n\nI am (aware).  They are called web services.  A few little sites run\nthem (Facebook, Twitter, Github \u2026 ).\n\nAnd a question:\nWho/which body is making such decisions which span platform and CMS ?\n\nIt's my opinion.  You don't have to like it.\n\nAs a matter of fact, as contributors, we don't care who implements or makes the decision, but it would save all of us all lots of time that a final decision is being finally made in time for Joomla 3.0 CMS and corresponding Platform.\n\nIrrelevant. You can go ahead with this plan within the CMS independent\nof what the Platform does in my opinion.\n\nThe Javascript workgroup gathered together at JAB12, and made number of decisions, but i'm not yet seeing support for their decisions. So it's a very confusing contributor's situation. Happy to see this decision or discussion elsewhere as it is broader as just this pull request. ;-)\n\nI'm only guessing, but I would say the workgroup was making decisions\nin the context of how to make things happen in the CMS.  Anyone using\nthe Platform to build a ground-up application probably won't be\ntouching any of the current JavaScript with a barge pole.  I also\nbelieve your only concern is for the CMS so, with due respect, what's\nthe problem with petitioning the CMS to add this?\nRegards,\nAndrew Eddie\nhttp://www.theartofjoomla.com - the art of becoming a Joomla developer\n. On 21 August 2012 09:27, beat notifications@github.com wrote:\n\nThanks for the feedbacks. Adding to the list of rejected Joomla contributions without any directions or decisions for design and/or improvements.\n\nNot a terribly accurate spin on the outcome.  I believe the direction\nis bump it up to the CMS (because, and let's be completely honest and\ntransparent, this is the application where it's going to be used).  As\nI've already said, anyone building standalone applications won't be\nusing this feature (they will select a single UX platform and just\nload that in their template, or put it in their JavaScript stack to be\npackaged and compressed).\nRegards,\nAndrew Eddie\nhttp://www.theartofjoomla.com - the art of becoming a Joomla developer\n. On 21 August 2012 09:15, AmyStephen notifications@github.com wrote:\n\n+1 @eddieajau - in fact, one could make the argument it doesn't belong at the platform layer or the application layer but rather the presentation layer bundled with a theme.\n\nSure.  My point was that it's the responsibility of the application\n(pick whichever layer suits the design requirements) to provide those\nsorts of features, and this can be done with a heck of a lot less code\nthan this patch.\nRegards,\nAndrew Eddie\nhttp://www.theartofjoomla.com - the art of becoming a Joomla developer\n. On 21 August 2012 17:15, Nick A. notifications@github.com wrote:\n\nAs I recall, Andrew \"asked/challenged\" Beat to contribute code to address\nthis issue.\n\nThat I did, but since then I have changed my mind about what the\nPlatform should support and think we should throw ALL client-side\nresources out - they belong to Joomla CMS, Molajo, Project-X or\nwhatever application you are building on top of the Platform.  We've\nalso gone through a lot of review about what is Platform and what is\nCMS code in that time as well.  ON top of that, we've seen UI\nframeworks like Bootstrap come of age and they are changing the way we\nthink about application design.  It's one of those unfortunate\ncharacteristics of time moving forward that perspectives and\ntechnology change.\n\nThis entire thread and the corresponding discussions on Google and elsewhere\nis a great use case for the - much abused term Joomla community - to see how\nunguided, unmanaged (or mis-managed) volunteer (and some externally funded)\nresources transform themselves into a brick wall against contributions.\n\nThe following point seems to be missed or misunderstood. There is\nnothing lost in terms of what Beat can add to the CMS, where I think\nthis belongs anyway.  I honestly doubt that the \"idea\" will be a hard\nsell to get into the CMS.  I have some concerns, like others, that\nBeat's implementation is over-engineered and overly complex but that's\nneither here nor there.\nThe bottom line is that new platform applications are not going to\nneed to support both Mootools and jQuery.  Let's not mention the fact\nthat we have new initiatives like AngularJS.  The CMS, however, does\nhave a need (whether I agree it's a good idea or not), to support\nblending of Mootools and jQuery (and I'm already on record as saying\nyou should pick one or the other, not try and be all things to all\npeople because that just leads to inefficiently designed websites).\nThat's where the code should live, in my opinion.\nThis is not rejection.  This is not a brick wall.  I accept that for\npeople just developing CMS extensions it would seem to be a\nfrustration, and it may feel like you are being bounced from pillar to\npost (I get it), but it's about putting the right code in the right\nplace.  Please try and take a step back and see the big picture - and\nit's possible that that is a scary thought for some people.\nRegards,\nAndrew Eddie\n. Hi Beat\nOn 22 August 2012 10:09, beat notifications@github.com wrote:\n\nThanks for your answer, Andrew.\nI understand and respect your point of view, and i think it deserves also a friendly answer. I agree to disagree and to think that ignoring the Javascript browser-side parts and their tight integration with the server-side in a Joomla Platform is a huge shortfall for \"selling\" the Joomla Platform for web-applications.\n\nIf the sole purpose of the Platform is to serve the CMS, I'd agree,\nand I'd also make the point that it was a complete waste of time to\nseparate it from the CMS in that case.  However, the \"web\" and \"web\napplications\" are changing (have been for a while).  If there is a\nmarketing problem, and I don't agree there is (I find, generally, that\nthe direction the Platform is taking is in general accord with the\nguru's of the industry - I recommend you peruse the many videos\nproduced by Apigee), the solution to making the Platform attractive\nfor web application is not just adding jQuery support.  The solution\nis building a JavaScript application from the ground up.  Now, as it\nhappens, many people are already doing that already outside this\nproject so it makes sense not to favour any one of those for the core\n\"Platform\".\nBetter yet, have Joomla start a third new initiative for client-side\nUI resources (JS, CSS, media, and so on) that does indeed dovetail\nwith the Platform as it's server-side companion.\n\nThank you for respecting my point of view too. Agreeing to disagree on this :-)\nTo reply to your statement:\nBeat's implementation is over-engineered and overly complex but that's\nneither here nor there.\nI need to reply that it's neither over-engineered nor over-complex to solve\nthe problem that has been clearly defined in the Google-group discussion\n(where extensions provide various proposals for JS code and not the Joomla\nPlatform, and Platform needs to bring consistency in).\n\nIt would be helpful to reference discussions when you want to quote\nthem as a primary source.  Though I've been out of the loop per se for\na few months, I've not seen any discussion from people building\nstandalone applications on the Platform that not having jQuery support\nis a problem.\n\nHowever as the problem to solve seems to have changed, it is of course easy\nto criticize it as now \"over engineered\", specially in the light of many parts of\nJoomla CMS and Platform which are heavily over-engineered.\n\nThat's exactly why we presented an alternative, lightweight MVC, among\nother things to streamline and improve the code base.  It is the\nnature of this project to improve things, knowing full well the code\nwe commit today, we'll look back on and think \"what were we thinking\".\n\nAs the CMS has taken a different route, there is no need to lobby CMS for this code.\n\nThat would only reinforce my case.\n\nThe proposed CMS pull-request by mbabker is certainly not more efficient nor using\nJoomla's API for JS files inclusions, and doing a whole 1-line js file include with its\nhttp request just for adding a single line of js code, that with proper API of Platform\ncould have been outputed just after the file inclusion as required (that small API change\nhas been proposed here in a part that actually reduced at same time existing line count\nand added consistency, and separately by Joseph in another pull request with minimal\nlines changes, both refused to my knowledge even though independant of JS library).\nBut as Joomla Platform's API doesn't want this change he had no other choice than\ndoing it that innefficient way. Additionally, jQuery plugins are not handled properly yet there.\n\nThat's really something to take up with the CMS.\n\nFollowing changes that are fully independent of jQuery in the first 3 files of this\npull-request still make full sense for the Platform and not for the CMS in the\ncommit proposal https://github.com/beat/joomla-platform/commit/73eeffdd270190911dffb0841afbe6110eb7efae\n\nThen you should possibly consider splitting up your pull request.\n\nadding defer javascript statement and pre- and post-scripts in file libraries/joomla/document/document.php\nbug-fix in file libraries/joomla/document/html/html.php\nconsistency improvements and pre- and post-scripts in file libraries/joomla/document/html/renderer/head.php\n\nThat's a completely different topic.\n\nBut I guess that as the individual change proposals in this pull request have not been\nlooked at, \"those 3 kids are being thrown out with the bath water\" too.\n\nThat's the risk everyone takes when they submit a pull request.  Many\na pull request has been refused (where \"refused\" carries no malicious\nintent) even though \"parts\" of it are good.  May I remind you that the\ntitle of the pull request is \"Adding 'behavior.jquery' \u2026\".  Your\nsupporting discussion also only references the positive outcomes for\nthe CMS in terms of adding jQuery support.\nThere is no problem in making code changes that help you with custom\nimplementations.  \"Those 3 kids\" are probably reasonably general to\nconsider separately - that doesn't mean I agree with how you've coded\nit, but I'm prepared to discuss the direction you want to head.\nThough, I'd like to see more use case information about the pre and\npost script functionality.\n\nSo, as this discussion here won't lead to an improvement to the javascript support in\nthe Platform, i'm stopping my own timewaste here on this as long as someone has\nnot actually read through the code and understood at least the first 3 files of the commit of this pull-request.\n\nLike I said, take those out and put them in there own request and roll\nthe dice.  I also think you should provide Unit Tests for those\nchanges, though it may be worth getting agreement on the architecture\nfirst.  And running your files though phpcs would also help.\nI hope that clears up some confusion for you.\nRegards,\nAndrew Eddie\n. On 22 August 2012 21:13, Azrul Rahim notifications@github.com wrote:\n\nThe engineer in me agree with Andrew, a clear saperation between php code and the UI layer is a much cleaner approach.\nHowever, the more practical side of me agree with Beat. The craziness of multiple JQuery include in Joomla! CMS over the years (REALLY) need to stop. At the moment, I don't see mootools/javascript ever going to be removed from Joomla!-platform,\n\nPeople also said the Platform would never happen :P  There's no hurry\nbut it makes a lot of sense.\n\nhence whatever logic used to justify its inclusion in the first place (however faulty it may be), can/should be applied to JQuery as well.\n\nAllowing the Platform to perpetuate, in fact encouraging the craziness\nis an equally bad idea.\nRegards,\nAndrew Eddie\nhttp://www.theartofjoomla.com - the art of becoming a Joomla developer\n. On 24 August 2012 11:06, beat notifications@github.com wrote:\n\nBest would be for you to post those comments to pull request 1359\n\nI suggest you also follow your own advice Beat - but you did challenge\nMichael in this thread so I think he has the right of reply.  And\nfor what it's worth, Michael's comments are right on the money so I\nsuggest you take heed.\n. Need to update this branch.\n. Rock on :)\n. I think at the platform level we want to allow developers to use raw SQL.  Not every application is going to want to use the query object.  A simple CLI may not want to bother with the query object.\n. Yes, please replace \"object\" with the correct class name.  I don't know of any IDE's that will have a problem when you use the correct class name (and if they do, stop using it).  The current practice is to add hinting to the params as well in the newer code as mentioned above.  @AmyStephen I assume phpStorm handles that ok?\n. Yes, a note in the style manual is appropriate as is progressive updating of docblocks where applicable.\n.\n. Some general comments:\n1. I don't think you need the unionDistinct variable (the alias method is fine).\n2. I think the union method should return $this to support chaining.\n3. I think the union method should add the element to a stack, e.g. $this->union[] = new ... to allow for multiple unions.\n. Yes, would be worth adding it to the test.\n. So, do we have agreement that the current patch is ok for all databases?  @infograf768 there is no urgency to commit.  The next release of the platform is 12.1 at the end of March.\n. Ok, so as far as the platform is concerned (CMS 3.0 will probably run on the 12.x series of the platform anyway), we should reject this patch?\n. Guys, this is the Platform, not the CMS.  It's got nothing to do with 2.5's or 3.0's.  The CMS is just one downstream user.  We are currently in the 12.x version and if that is the one that the CMS would be using anyway.  If you are \"fixing\" it anyway, I don't need to apply this patch - that is my understanding.\n. Can we put this topic on the mailing list and I'll close this pull until we have a clear direction on how to solve this issue.\n. Are there differences in the way different databases handle the date parts?\n. Ok, in that case I agree with Christophe.  I think it would be better to add the extra methods.\n. Nice job. Merged.\n. Good stuff!\n. The fix looks good.  Since this is a CMS only field, would you also mind moving it from /libraries/joomla/ to /libraries/cms/.  Thanks in advance.\n. -1 don't support this one at this time.\n. There is no reason why modules can't use jview. In fact, I've started doing it in custom work. \n. It's just good encapsulation practice and it's easier to train a layout designer, not necessarily familiar with the importance of all the arguments in htmlspecialchars, nor familiar with the difference between that and htmlentities, to use $this->escape($foo). Bottom line is it allows the view to upgrade the escaping technology without changing layouts in whatever application is using the platform. It's immaterial whether cms modules do or don't use this, I just think it's a valid part of the view and one you see in many frameworks and textbooks.  Aside from that, if you want to use htmlspecialchars with three arguments go for it, it's opt in, and, there are far more important things to be debating about the mvc paradigm than this little method. \n. That may be, but it's something to take up with the cms. \n. @realityking my only issue is that I think it's premature to do this given we are going to completely review the mvc anyway. \n. Actually, to be more specific, yes I agree with killing the setEscape method and just have escape as an alias for htmlspecialchars.\n. Do you mind if we park this for now?\n. Thanks.\n. Thanks.\n. Thanks\n. Good catch. Merged.\n. I really like the idea in principle, but I'm feeling like we need to do the iteration on a result set and not the db object (and that gets around your cloning problem).  To be honest it would also be nice to be able to iterate over \"pages\" of data as well.  I'll have a think about it because I need this for work :)\n. The whole menu table is not required on the platform.  Most, possibly all, can move to the /cms/ tree.\n. They will be moved to the CMS, so you can grab a copy from there, but they won't be specifically in the platform.\n. Branch needs a re-sync.\n. Closing this issue since there has been no follow up for 5 months.\n. There's probably a case for a user form field, but this one is so tightly coupled to the CMS it's not funny.\n. Good stuff! Thanks.\n. That JFormFieldCheckboxesTest is really doing nothing anyway. Not hard to put it back in at a later date.\n. Merged.\n. Just trying to understand what's being proposed.  Why would you use a callback function when you can just as easily make your own logger class?\n. Ok, fair enough.  I'm not sure I'd use it, but I can see where you are coming from.  You have some testing errors to fix and we'd want some additional unit testing to verify it all works as advertised :)\n. Oh, and if you can give me some explanatory text, I'll put it in the dev manual (http://developer.joomla.org/manual/chap-Joomla_Platform_Manual-Log.html) unless you want to have a crack at that as well.\nThanks in advance.\n. Done.\n. Thanks\n. The only thing I disagree with is deprecating JObject::__toString.  We have some changes in the UCM stuff that propose changing it to return a JSON representation of the object (helps with caching and serialization).  Otherwise, happy with the rest of it.\n. It's stuff we've worked on since, and yes it would be a breaking change, technically (though, the end result of a breaking change and deprecation is more or less the same in the long run).  However, the toString only returns the name of the class which is next to useless but allows for a workaround in existing and future code.\n. Actually, I'll merge it and then we can haggle over reinstating __toString :)\n. The (OR a.parent_id=0) is causing slow queries (like home page is totally inaccessible) on sites with a large number of groups (100 or so). The table indexes are not tuned for it and it would be helpful to know why the condition is there because a 0 parent_id means the whole asset table has lost integrity.\n. @elinw I think the long term solution is to move away from the asset table and bring the permissions into objects, which is what we are trying to do in UCM.  I think the asset table was a good step in the process, but it has it's problems.  In the mean time the way to restore integrity is basically to open up each \"content\" and save it again.  It's certainly not practical to do, and I'm not sure if that's practical to automate.  A stop-gap could be that anything where the asset name is like, for example, com_content. and has a parent id could be re parented to the component's asset entry.  Not perfect but more easily automated (just select all the components {parent == root}, then select all their assets with parent_id = 0; fix the parent_id; delete what's left).\n. Closing this pull. See #906\n. I think this is fixed now. If not reopen or resubmit.\n. Oops, fixed.\n. Can we wait until the database refactor is finalize before doing all this stuff.  I want to get into DB improvements myself, but it will be complicated if the goal posts keep moving :)\n. Christophe, I like where you are heading with.  I've made a slight adjustment to separate the result set (I call it a cursor) more. See:\nhttps://gist.github.com/1874789\nThe driver would still be responsible for executing the query, but once it has done that, you can access the cursor object however you want.  What do you think?\n. Ok, ping me and we can discuss.\n. Actually, thinking about it, why don't we have the iterator always use the assoc array or object return, and then the load* methods can do a conversion on the fly\n. Ok, I've dropped the gist back to just supporting objects (https://gist.github.com/1874789). The reason is I think converting the result on the fly is better than having all the nested conditions, for example:\nforeach ($dbi as $key => $object)\n{\n    // But I want an array.\n    $array = (array) $object;\n}\nThat leaves the engine specific iterator to duplicate just the fetch object and the free result methods which I think is acceptable.  The driver methods loadColumn, loadAssocList and loadObjectList can be converted to use the iterator, but the loadResult, loadAssoc and loadObject methods can remain unchanged.\n. That looks a lot better.\n. @mbabker has some fixes here:\nhttps://github.com/mbabker/joomla-platform/commits/database\n. Oh Rob, you read my mind!  I hit this yesterday!\n. @AmyStephen great questions. The LTS versions are fine, there's no problem there and they should most definitely lock into a version of the platform. The problem we have is we want to make some breaking improvements/changes in 12.1 that are fine for the platform, but would cause harm to Joomla 3.0 if it chose to upgrade (every extension developer could have to rewrite their MVC since it's on the list for a major overhaul - probably not an easy sell). So what we are doing is adding a second cushion for the 2.5 -> 3.0 scenario's. \nAnother way to look at it is we are providing a two-stage deprecation strategy. The platform purists get to work with the latest and greatest code and upgrade frequently. Downstream users building aircraft carriers, as Andy puts it so well, have the chance to buffer the fast-track changes by using the legacy tree.  Eventually \"stuff\" would be completely removed from even the legacy tree, but that can be done now at a more leisurely pace and those using the legacy tree can call the shots on that.  There is also no reason why bugs can't be fixed in the legacy tree by those that need them fixed.\nBut keeping the platform still as one package means that, for example, Joomla 3.0 can maintain B/C via the legacy tree (and still have it's own /cms/ tree to boot), but still take advantage of new work like JCrypt or other API that has maintained full B/C (like the database refactor) etc.\nI think it's the best of all worlds really.\n. Thanks.\n. Can you give me an example of the use case? The method was included specifically to allow for compatibility in the MSSQL driver. It wasn't intended to be used outside the driver class.  That said, if there's a good reason to change it, it can be.\n. Just a thought - I think you can use getTableKeys instead and modify the loadObjectList call to:\n$keys = $this->loadObjectList('Key_name');\nand change the docblock to:\n@return  array  An associative array of the index specifications for the table in the form, keyed on the index name.\nThen you could do something like this in your component:\nprivate function dbIndexExists($table, $index) {\n   {\n        return array_key_exists($index, $this->db->getTableKeys($table)))\n    }\nThe only other driver that implements this is Oracle so we'll have to work out how to get the index name for it.\nHow does that sound?\n. I like where this conversation is heading. Here's my \"thinking out loud\".\nI think we should consider the \"glue\" to apply to how \"this piece\" glues to the \"last piece\", not the glue for all pieces.  There is a risk that could introduce a B/C issue if someone had accidentally mixed glues (but it never worked because only the first one was honored).  So if that was the case the following query:\n$q->where('a=1')\n    ->where('b=2')\n    ->where('c=3', 'OR')\n    ->where('d=4')\ncould render as:\n    WHERE a=1 AND b=2 OR c=3 AND d=4\nThe next step could be that we add a third argument to enclose an array in ( )'s, for example:\n$q->where('a=1')\n    ->where('b=2')\n    ->where(array('c=3', 'd=4'), 'OR', true)\nmight render as:\n    WHERE a=1 AND b=2 OR (c=3 ?? d=4)\nThe obvious problem their is what should ?? be - AND or OR. Ok, we could add a fourth argument (sigh):\n$q->where('a=1')\n    ->where('b=2')\n    ->where(array('c=3', 'd=4'), 'OR', true, 'AND')\nmight render as:\n    WHERE a=1 AND b=2 OR (c=3 AND d=4)\nGetting messy so let's start over.  So, what if we had some new gluer methods called and and or that supported multiple arguments, and did something funky like this:\n$q->where(\n    $q->and(\n        'a=1',\n        'b=2',\n        $q->or(array('c=3', 'd=4'), 'e=5')\n    )\n);\nrendering to:\n    WHERE a=1 AND b=2 AND (c=3 OR d=4) OR e=5\nthe special rule being that an array is always enclosed in ( ).  The above should actually be equivalent to:\n$q->where('a=1')\n    ->where('b=2')\n    ->where( \n        $q->or(array('c=3', 'd=4'), 'e=5')\n    );\nor, if we changed the \"glue rule\" as I mentioned initially (which is probably a good thing to do anyway), we could have:\n$q->where('a=1')\n    ->where('b=2')\n    ->where( \n        $q->or(array('c=3', 'd=4'))\n    );\n    ->where('e=5', 'OR');\nJust throwing it out there.\n. Do you mean to say the \"result\" is ambiguous to MySQL, or the result it's different from what you'd expect given the code example?\nWhatever the case, you can construct your entire string by hand if you want - it's all opt in for dev's that see a need for it. But I've come across cases where building nested OR's with implodes and explodes of arrays is just painful to do, not to mention unreadable.\n. Operator precedence is well defined otherwise the whole shebang would fall apart ;)\nhttp://dev.mysql.com/doc/refman/5.0/en/operator-precedence.html\n. I'm going to close this pull request a) because it's not mergable, and b) because I don't think there is a clear consensus on how this problem should be solved.  I suggest, to move the idea behind the pull request forward, a thread is opened on the platform mailing list to see if we can reach an agreement on how to do AND and OR nesting/grouping and then write the code from there.\n. I'm going to close this pull request so we are just evaluating on solution, and 956 got in first. Amy's right that we need to limit the ambiguity, but there is merit in finding an API to do that.\n. No, we don't choose features on who was first - but I don't want to be talking about the same issues in two places, that's all :)  I think your solution is good but let's see if there are other ideas to make it better.\n. I'm not quite sure what you did either. There seems to be a lot of check style errors introduced. I think it might be easier to start with a new branch. Not sure why JControllerAdmin is showing such a dramatic change.\n. A lot of the assertions disappeared in the JTableNested tests I rebuilt from scratch. Overall code coverage was increased but some methods like \"store\" are a bit less on an individual level.  The reason was those tests where designed to work on the whole 1.6 sample data tree for categories (everyone knows how huge that is) and I replaced that with an 8-node tree. I don't think it's worth putting more effort into JTableNested because it's been beaten around by CMS specific additions and I'd like to replace it with a more generic mapper pattern (just not today).\n. A fews little things in there to look at but otherwise a nice job.\n. Ooops. Thanks. Fixed.\n@AmyStephen that would be great if you can go through the other thrown exceptions.\n. Merged. Thanks.\n. Fixed.\n. Whoot! Nice to see this finally in the tree. Well done :)\n. Closing this issue because, in future, we would want the application to take more control over which controller it loaded rather than the controllers trying to be way too smart for their own good.\n. A test on two different string lengths would be good to add I think.\n. Merged. Thanks.\n. Nice to get rid of that annoying workaround finally.\n. Thanks and merged. I've got a funny feeling there might be some check style errors but we'll see what the report says.\n. No problem at all, that was a good job. Tests all passed locally - hopefully the build server feels the same way.\n. I'm sorry, I don't understand the problem.  Please re-open the issue if you can provide more information.\n. Merged. Thanks.\n. Done\n. Merged. Thanks.\n. How about both of you stop being defensive and work the problem.\n@AmyStephen, I've had lots of syntax errors and never encountered a problem.  Do you have some code and/or conditions that can reproduce the problem (my gut is telling me it's a particular edge case that not everyone may have - I vaguely remember having a similar problem but can't remember the circumstances)?  All the usual suspects like PHP/MySQL version etc would also help.\nThe bad form is that PHP echo's warnings or errors and that's the reason we need to suppress them (the PECL SOLR connector is another painful example; it'll throw an exception but also generate PHP notices et al - seriously?).  We won't need to do that when PHP gets it's act together and throws exceptions properly one way or the other.\nReferences: \nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=29345\nhttps://github.com/joomla/joomla-platform/pull/1554\n. So, as far as you are aware, this in only reproducible in the CMS (3.0?).  Do you know if it's occurring in standalone platform apps?  And just for good measures, what are your PHP and MySQL versions?\n. I can't reproduce the problem.\n/Joomla 3/administrator/components/com_content/models/articles.php\nChanged 'from' clause to $query->from('#__contentX AS a'); to introduce a syntax error.\nGoto http://localhost/joomla/joomla-cms/administrator/index.php?option=com_content\nAn error has occurred.\n 500 SQL=SELECT a.id, a.title, a.alias, a.checked_out, a.checked_out_time, a.catid, a.state, a.access, a.created, a.created_by, a.ordering, a.featured, a.language, a.hits, a.publish_up, a.publish_down,l.title AS language_title,uc.name AS editor,ag.title AS access_level,c.title AS category_title,ua.name AS author_name FROM jos_contentX AS a LEFT JOIN `jos_languages` AS l ON l.lang_code = a.language LEFT JOIN jos_users AS uc ON uc.id=a.checked_out LEFT JOIN jos_viewlevels AS ag ON ag.id = a.access LEFT JOIN jos_categories AS c ON c.id = a.catid LEFT JOIN jos_users AS ua ON ua.id = a.created_by WHERE (a.state = 0 OR a.state = 1) ORDER BY a.title asc SQL=SELECT a.id, a.title, a.alias, a.checked_out, a.checked_out_time, a.catid, a.state, a.access, a.created, a.created_by, a.ordering, a.featured, a.language, a.hits, a.publish_up, a.publish_down,l.title AS language_title,uc.name AS editor,ag.title AS access_level,c.title AS category_title,ua.name AS author_name FROM jos_contentX AS a LEFT JOIN `jos_languages` AS l ON l.lang_code = a.language LEFT JOIN jos_users AS uc ON uc.id=a.checked_out LEFT JOIN jos_viewlevels AS ag ON ag.id = a.access LEFT JOIN jos_categories AS c ON c.id = a.catid LEFT JOIN jos_users AS ua ON ua.id = a.created_by WHERE (a.state = 0 OR a.state = 1) ORDER BY a.title asc LIMIT 0, 20 SQL=SELECT a.id, a.title, a.alias, a.checked_out, a.checked_out_time, a.catid, a.state, a.access, a.created, a.created_by, a.ordering, a.featured, a.language, a.hits, a.publish_up, a.publish_down,l.title AS language_title,uc.name AS editor,ag.title AS access_level,c.title AS category_title,ua.name AS author_name FROM jos_contentX AS a LEFT JOIN `jos_languages` AS l ON l.lang_code = a.language LEFT JOIN jos_users AS uc ON uc.id=a.checked_out LEFT JOIN jos_viewlevels AS ag ON ag.id = a.access LEFT JOIN jos_categories AS c ON c.id = a.catid LEFT JOIN jos_users AS ua ON ua.id = a.created_by WHERE (a.state = 0 OR a.state = 1) ORDER BY a.title asc\nLatest master branch; Debug: On; Error Reporting: Maximum; PHP: 5.3.10; MySQL: 5.5.18\n. For what it was worth, it was fixed a month ago when reported :)  That said, I accidentally tested on 3.0 Beta 1 myself but still couldn't replicate no-message so go figure.\n. Oh I see what you mean now.  Got it.  I'm just so used to looking at those messages I know what's going on :)\n. If we left this to the auto-loader, wouldn't /libraries/json/serializable.php \"just work\".  If it's PHP 5.4, the autoloader wouldn't be invoked (I'm assuming), and if it's PHP 5.3, the auto-loader will just pick it up??\n. That's unfortunate (the J thing).  I'm not sure how I feel about this one.\n. Works for me.\n. Checkstyle errors are in libraries/joomla/html/html.php\nSee http://developer.joomla.org/pulls/logs/1030checkstyle.xml\n. Merged. Fixed up removal version manually.\n. It's in SQLite format.  Don't try and run that in MySQL - it won't\nwork.  The DB specific DDL's are in /tests/suites/database/stubs/\nHope that helps.\nRegards,\nAndrew Eddie\nhttp://www.theartofjoomla.com - the art of becoming a Joomla developer\nOn 25 March 2012 06:27, Amy Stephen\nreply@reply.github.com\nwrote:\n\nCannot be used to create a database.\nhttps://github.com/joomla/joomla-platform/blame/staging/tests/schema/ddl.sql\nAUTOINCREMENT should be AUTO_INCREMENT\nTEXT fields are used for what should be char fields (and index builds fail.)\nDDL\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/issues/1035\n. Thanks.\n. Merged. Thanks.\n. Good stuff, thanks.  Merged.\n. Merged. Thanks.\n. Awesome. Thanks.\n. Pull tester choked on this one.\n. Oops, sorry, didn't see your comment there Rouven.  The class seems to be loaded obscurely in the FTP client but never used.  Seems to be a left over from a by-gone era?\n. I think that's appropriate.\n. Merged. Thanks.\n. For now, it will hold a JUser object, but later on it will hold a generic \"identity\" from which JUser will be derived (think UCM for users and groups).  So this could be the logged-in user for a CMS, it could be an authenticated identity using oAuth, it could be a system (\"root\") user used by a command line application, or it could be ignored completely.  The reason it's going into JApplicationBase is because both JApplicationCli (imagine a backend scheduler service that acting on behalf of actual user accounts, so it injects \"your\" identity to run as if it was \"you\") and JApplicationWeb could use it (any number of uses there).\n\nDoes that help?\n. Merged. Thanks.\n. Just wondering, why is the return false being changed?\n. Merged - not pretty, but it will get us out of trouble for a while.  Thanks!\n. We should have a pull for the new MVC this week (cross fingers) and all of this stuff will move to the legacy tree, if that helps.\n. I think if there is a desire to accept the new MVC pull, it probably puts this to bed.\n. Let's not use JException. I think most of the cases should be UnexpectedValueException and if you can do the sprintf thing that would be great.\n. No probs.  I think we only need to do the class_exists trick if we are returning a JError.\n. Merged. Thanks.\n. Merged. Thanks.\n. Adding failure note for easier reference:\nJLogEntryTest::testDefaultValues Line: 53. Failed asserting that two strings are equal.\n --- Expected\n +++ Actual\n @@ @@\n -'2012-03-31T21:20:57+00:00'\n +'2012-03-31T21:20:56+00:00'\n .../tests/suites/unit/joomla/log/JLogEntryTest.php:54 /usr/bin/phpunit:46\nVery odd.\n. Roger that.\n. Really good job overall Amy, just a bit of nuance to fix.\n. Merged. Thanks.\n. Merged.  The CMS is going to have to add things like this:\ntry {\n    $installer->install();\n} catch (Exception $e) {\n    $installer->abort($e->getMessage());\n}\nI also think it's worth doing a progress log but that's something that can be added later.  This pull addresses the immediate problem of getting JError out of the way.\nThanks again Amy.\n. There are a lot of style errors in this file.  Have a look at this report:\nhttp://developer.joomla.org/pulls/logs/1095checkstyle.xml\nSearch for the following line:\n\nAny error that is not complaining about an underscore needs to be fixed.  Thanks.\n. Nice one. Thanks.\n. @Chraneco just following up.  Update the platform and have a look at what we've done with the MVC (now in separate packages).  They should be really easy to use standalone now but if you've got any other suggestions we'd love to hear them.\n. Merged. I think this one is pretty safe.\n. Merged. I think this one is reasonably safe.  Anyone extending it knows what they are doing.\n. Let's leave this one for now.\n. I'm pretty sure a few people fiddle with the document package so we might park this one for now.\n. I'm just going to close this one for now (sorry). The cache package needs a major simplification and overhaul and we'll probably just move this version off to the legacy tree or deprecate it.\n. I think let's park this one for now (unforeseen consequences).\n. Let's just get a pull request for move these two classes to the legacy tree and deprecate them (12.3 is fine).\n. It's so you can use the interface for type hinting, for example:\npublic function __construct(JModel $foo = null);\nor\nif ($foo instanceof JModel)\nIf JModel is an interface, it can be any base class (could be extended from JDate or SplFileObject for all we care).  If JModel is a concrete class, it restricts the flexibility.  We felt is was important that type hinting used JModel, JView, etc (neater than JModelInterface, JViewInterface, etc), so for maximum flexibility we made them interfaces (particularly for dependency injection and composition architectures).\nDoes that help?\n. @nikosdion I respect your point of view (one I shared until the idea in this proposal grew on me), but I think the B/C argument is a different conversation. We implemented the legacy tree in the platform for the very purpose of buffering major changes in the CMS for at least another major cycle.  However, I don't think it's fair to ask the platform to slow down even further just so extension developers can write one extension that supports both CMS 3.5 and 4.0, or 5.0, or whatever versions without any change.  The reality is the CMS can choose to or not to implement so it's a conversation you need to be having on the CMS list when major versions (3.0, 4.0, etc) are being considered and we've implemented a way to make that pill easier to swallow for downstream users (with the express purpose of making the life easier for the extension developer).\nTo directly counter one of your arguments though, there is nothing stopping the CMS adding JModelBase to 3.0 and telling developers to extend all models from that (heck, they could add it to 2.5 if they wanted as well).  If they do that, they will be ready for 4.0.\n@AmyStephen I don't understand exactly what you mean by views as controllers either. I think a gist would be helpful.\n. Let's stick to commenting on technical merit and not people's places of employment, nationality, religion or anything else you'd like to throw in to make a point or don't like the fact that people might disagree with you.  Please stay on \"technical\" topic and keep your ad hominem comments to your personal blogs where I don't have to care about or respond to them.\nSo on that note ... @HermanPeeren, obviously you can't have a circular reference, so JModel*** would be a concrete class that emulates the interface but doesn't implement it.  See Louis's example.  Whatever the case, this is all speculation because nobody knows when or what parts of the Platform the CMS is going to upgrade in any future version (fortunately not my battle to fight).  Additionally, whether JModel is a class or an interface doesn't address the issue that the refactoring of \"JModel\" and co will result in B/C problems anyway, and downstream developers (not \"users\") will need to touch their code \"somehow\".\nNow, the facts are if this pull is accepted, it will likely not come into effect in the CMS until at least March 2014 (4.0), in which time the platform has moved on in a lot of other places (and probably so has the CMS) and it will be but one thing 4.0 developers may have to worry about, but I doubt it would be the most significant.  I say this not to trivialise concerns about changing names (I respect people can having a differing opinion to me - in fact, you aren't raising any questions I haven't already put to my peers), but to put the pending doom and gloom into perspective.  It's not suddenly going to affect millions of users.  It will affect possibly a few thousand developers but as a part of a laundry list of things they need to change 2 years from now.  That's if the CMS decides to move on newer aspects of the platform and I certainly hope that discussion is conducted with maturity and courtesy (I don't like their chances personally).  My understanding is that CMS 3.0 will be using Platform 12.1 legacy, so nobody's model, view or controller classes are suddenly going to break.\nWe implemented the legacy tree in the platform to deliberately take the concerns of the CMS into account, to buffer the changes in 12.1 yet balancing the desire for other contributors to move on from some really old code.  I would say that's the kind of approach that avoids screwing millions of people, but that fact seems to be conveniently ignored.  Frankly, if you don't want breaking changes to occur at all in the CMS, that's something to take up with the CMS maintainers.\nSo with all that in mind, for me, when I want to pass a variable that's part of a MVC triad probably by composition or dependency injection, I prefer calling a spade a spade, and that is a model, a view or a controller, which in Joomlaland translates to a JModel, a JView or a JController.  The fact that those are interfaces makes the design process for me as a developer far more logical and convenient.  \nAs for \"standards\", well, no, one doesn't exist because this is the first real foray into interfaces. I think a rough standard should come out of it and I would say where it's reasonable to predict a package is going to be used for composition or dependency injection, the most natural \"name\" should be reserved for the interface, not the concrete class, if that's the sensible thing to do (it won't be for all packages, for example, JObject should be a concrete class because it follows the value-object pattern).  Please see how I did this in a proposed reworking of Joomla's access package (https://github.com/eBaySF/joomla-platform/tree/content/libraries/joomla/authorisation).  That's a package with multiple interfaces and should highlight how the \"interface\" suffix would get clunky (to me anyway).  That code has been there for a long while now with no negative comments.  For what it's worth, it's a pretty good example of the strategy pattern, but I digress.\nIn conclusion, I hereby certify that my \"preference\" for naming convention comes from my capacity to use my own brain as a sentient member of the human population on this planet - neither my employer, my dog nor anyone related to me actually has a say in it, just in case anyone was worried I'd become a zombie ;) (zombies rock btw!)\n. @nikosdion I'll take that as a sort of apology for your outburst ;)\n\nIf JModelBase implement JModel (an interface), how can the CMS provide another \nJModel class which extends from JModelBase?\n\nIf can't but see Louis's example for how to work around this.\n\nAre there plans in the works to use PHP Namespaces in the Platform and the 3.0 \nversion of the CMS which would address that concern, enabling developers to use \ne.g. the JCMS namespace for the CMS libraries?\n\nThere are plans once all classes follow the auto-loader convention but I doubt that will be ready for CMS 3.0. It's a conversation to have but we aren't ready to have it.  It could, however, be a reality for CMS 4.0 - your problem dissolves then.\nYou do understand what the legacy tree is doing in the platform don't you?  I somehow feel you don't and that you are worried about a problem that we have already discussed and solved.\n\nI was under the impression that you said that backwards compatibility breaking without \ndeprecation was considered a bug. Did that change at any point, or that was never really \nthe case? The thing is,what exactly is the policy regarding backwards compatibility?\n\nThe MVC refactor was always going to be a breaking change - that's been no secret.  However, we implemented the legacy tree to be able to do this \"safely\" and allow the CMS and other downstream users (developers) the choice of when to make the move.  The old MVC still exists, but you have to bootstrap with import.legacy.php which is what the CMS should be doing in 3.0.  A lot of thought has been put into how these types of situations can work were everyone wins.\nTo be perfectly honest, the new auto-loader allows you to now override any core class at all, so in that respect, the concern is moot, but that doesn't mean I'm not trying to listen to what you are saying.  Developers can be using 2.5 code well into 7.0 or 8.0 for what it's worth.\n\nFor the \"how the classes should be named\" question, is the official answer \n\nNo, that's just my opinion - you can assign whatever weight you like to it expect \"official\" (that comes from the PLT alone and I am most certainly not PLT).  You have the liberty to disagree and I promise I will not use how you are employed or how you make your money against you ;)\n\n\"we'll be adding \\interfaces with the same name as existing concrete classes\"? \n\nThat, again, is my personal opinion and it has to be looked at case by case.   This topic has not really been discussed on list yet but likely will as a result of this pull.  The way we do it in the platform is someone makes a pull request, and if the maintainers feel that insufficient comment is being made, they'll ask the person to discuss it a bit on list first to take the platform community's temperature.  It's all very open and organic and, most importantly, public.\n\nSince this is a matter of coding style, I'd like to see that (or whatever the convention you \nwant to use is) written in the coding style documentation. If there is a policy, make it \npublic. If there is no policy, create the policy and make it public. Don't startle us.\n\nI won't startle you if you don't make irrational claims (yes, we can all see what you put on Facebook).  Fair?  I don't know if you follow the platform list, but if you do, you'll see a good history of being open and transparent about various issues and semi-regular reports about decisions that have been made internally.  We always try to point out pull requests or changes that are going to be potentially controversial either on list or some other social media (and there's always pull RSS for the really serious players).  Nothing's changed on my end and nothing is cast in stone.  This is the first pull request that actually touches interfaces in a serious way so it will likely precipitate a standard.\nBut let me say again, because this seems to be lost in the conversation, this won't affect the CMS extension developers until at least March 2014 if timing is still on track for CMS 4.0 and if the CMS decides to change it.  This is because we implemented a legacy tree to delay the effects of breaking changes (even though we have every right to do them with a major increment).  This was promoted heavily at the time and widely accepted.  I'm struggling to see why this measure is now being treated with hostility.\n. @HermanPeeren \n\nNow, when we just use one view and several layouts, the classical role of views is taken over by layouts.\n\nThat's only in JViewHtml because it's still useful to follow the paradigm we use in the CMS.  JViewBase doesn't have any layouts at all so there's basis for your \"classical\" solution.\n. @nikosdion \n\nIn pure technical terms, there is no way that the CMS will not continue \nusing the latest version of the Platform. At some point PHP 5.3 will be \nEOL, 5.4 will be deprecated and the next version (6.0?) will most likely \nintroduce even bigger changes.\n\nJust on that point, we are trying to follow the version of PHP support on Ubuntu's LTS.  When it moves is probably when the Platform will allow upward movement.  But even so, the CMS can, today, set the minimum spec to PHP 5.3.2 and it will all work (it has to for 3.0 anyway).  The version of PHP won't affect the ability to support a legacy and non-legacy tree.  PHP EOL is something the platform has no control over but we'd have to respond to it as best we can, just as the CMS will have to do.  However, speculating on the arrival date of PHP 6 has no bearing on considering the technical merits of this pull request, in my opinion.  But I can assure you we aren't trying to pull a Nooku, where the only thing you can be sure of is something will break in a big way.  Give us a bit of credit ;)\n. @nikosdion \nMy concern with your comments is that you chose to malign where people work for a living, and you continue to dance on the edge of personal ridicule to embellish your arguments.  Please keep your replies technical and objective so they can't be misinterpreted - I don't want to have to ask a third time.\n\nSo, I take it that using PHP Namespaces is not an option, at least not for the foreseeable future. \nOf course you wrote that reply in a way that the Oracle of Delphi would be envious of. It can mean \nthat they may be used, maybe they won't, maybe you'll discuss about them, maybe you won't. \nA simple \"we have no idea yet\" would have been more clear, I guess.\n\nIf I had no idea I would have said so.  Let me put this another way that is hopefully clearer for you.  So my answer was that name spacing is on the table (yes, it is an option), but it is not worth having the discussion until all the classes in the platform conform to the auto-loader conventions (a clear and definable goal).  I certainly can't give you a date as to when that will be.  That relies on community contribution which has been happening steadily over the past few months but I'm not going to force anyone to do anything they don't want.\nI am very much in favour of using namespacing but I am not in favour of doing it piecemeal.  If we do it, we do it, not pick one package here or there at a time.  That would be truly insane.  I would hope it's something we can drop into 13.1.\nIf you want to start that discussion now on the platform list, you are most welcome but we (the maintainers) felt it wasn't the most important discussion for us to be leading at this precise moment.  When everything auto loads, it should be a relatively short conversation and a couple of pull requests and we are done.\nHaving said that though, adding name spacing does not necessarily equate to \"no change required for extension developers\".  It's another layer that needs to be understood and managed.  It will address the ability to use different implementations of the same classes/interfaces in the one execution, but that's not to say it isn't without it's fair share of gotcha's.  There's nothing to say the standards we come up with for name spacing won't still require you to change your code in, for example, Joomla 4.0.  I guess we'll have to wait and see what comes out of the discussion when we have it.\n@HermanPeeren \nJust some additional clarification.  The /joomla/ tree and the /legacy/ trees are still all the one platform.  However, when you bootstrap with \"import.legacy.php\" it tells the autoloader to look in /legacy/ first, then in /joomla/.  In that case, when you write $model = new JModel it will look in /legacy/ and find that JModel class and use that.\nWhen you bootstrap with \"import.php\", the auto-loader, by default, knows nothing about /legacy/ and so JModel will be an interface (on the basis of this pull), but it won't find JModelForm in the legacy tree because it has not been told to look there at all.\nThe auto-loader is actually quite powerful (you can see that in Louis's plugin) and I have on my todo list to add some more documentation about it.\n. @nikosdion thanks for that reply.  It's really helpful.\n\nThe way the MVC transition is being handled does not harbour the conditions \nfor graceful deprecation of the old, concrete MVC classes.\n\nCorrect, that's why we've moved the old code to the legacy tree.\n\nIt merely drops the problem on the feet of the CMS, which has to provide its own \nMVC implementation (at this point it's no longer clear to me if this should happen \nin the legacy or the cms tree, or a new one).\n\nThe intention is that the CMS will still use the legacy tree.  It can implement whatever it wants, but it doesn't have to, nor is there a pressing need to.\n\nWe are essentially telling people to start using a deprecated API which will most \nlikely get removed / break hard in the not so distant future. \n\nWe can rename the /legacy/ folder to something more palatable.  I understand your concerns but I don't believe that in 2 years time, this will be the biggest issue extension developers face, nor the only one.  I'd actually be very concerned for the well-being of the CMS if that wasn't the case (in other words, development has probably stagnated).\n\nThere are no guarantees that the CMS will maintain these classes forever \n(and if you ask me, it shouldn't - I believe we all agree on that). When that happens, \nexisting extensions will have to be refactored with the new classes in order to work at all.\n\nThere is nothing to suggest they won't have to do that anyway.  You may disagree, and it's speculation, but it's equally valid.  I'd gladly take a 20-point search-and-replace list for my extensions than forcing CMS users to go through another painful migration to 4.0.  But even worse would be if 4.0 has no significant benefit over 3.x - but that's really off topic for this discussion.\n\nYet, code migration is a huge issue. If you have to do a huge amount of work \nto get extensions written for J! 3.x to do as much as run on 4.x I can safely \nassume that it will take significantly more than 2 months.\n\nThat's really an issue for the CMS to decide (for 3.0).  However, if this pull is the only forced change imposed on you in 4.0 (which I sincerely doubt), you'll complete it well within 2 months and there are already strategies here to make that near painless.  I'm hearing what you are saying (I am listening), but I don't think the imposition on developers is unreasonable, and it's certainly allowed for in the development strategy.\n\nAnd that's the root of my concern. I don't want to see a Joomla! version released \nwith no compatible extensions. This is bad for the Joomla! CMS, bad for the \nPlatform and bad for 3PDs.\n\nI agree completely.\n. @nikosdion thanks for your reply (and you are excused).  Appreciate it.  I've added auto-loading and namespacing to the roadmap if people are looking for things to do :)\n. @AmyStephen great comments/questions.\n\nI agree with you that the JViewHtml is elegant, simple, easy to extend, lovely code. \nBut, I very much believe it's a Controller.\n\nWell, it is sort of.  I guess it depends on how far away from the existing Joomla paradigm you want to shift.  I think it's important to at least support the current paradigm in principle.  In theory (and I don't advise this), you could drop this MVC into Joomla 3.0 and while the conversion would be a pain in the butt, developers would still be able to logically map controllers to controller classes, models to model classes and views to view classes.  To tell them to start mapping views to display controllers, I feel, would be inflicting too much pain.\n\nA controller is the only structure in the triad that should be directing logic.\n\nIn a classical approach, yes, but the classical approach was invented for stateful applications (Java apps) where the controller broadcast instructions hither and thither (and views were objects that updated form controls and things, and you could argue they were controllers of sorts as well).  We don't have that luxury in a stateless web world necessarily so the classical paradigm has shifted a bit.  I asked Stefan Priebsch about this last year at ZendCon and that was the essence of his reply.  All that means is that it's ok for the view to have access to the model to go get the data.  The important thing is to ensure the separation of duties, even if the view is kind of bending the rules a bit.  Like all things, the design patterns are there to assist, but \"bending\" them to is also permitted.  Having said that, your own application can be as strict as it likes - there's nothing preventing you from doing that (just opt out of using the view package).\n\nThe reason this matters is that properly separating the three elements creates a \ngreat deal of flexibility. That's what is missing in Joomla's architecture and I very \nmuch believe a large part of that inflexibility is due to incorrect definition of the View.\n\nNo, I don't think it's the incorrect definition of a view, it's certainly an \"accepted\" implementation, but I think the tight coupling to the \"extension\" paradigm, and not an \"application\" paradigm is where the road block is.  This proposal does away with all that baggage.\n\nWhere Joomla's architecture falls short is reuse of code and poor information sharing between extensions.\n\nCorrect. Hopefully we'll see some good examples of platform applications that show how this can be done better, architecturally at least, and the CMS can follow suit when it can.  Were all classes in the CMS, including extensions, to follow the auto-loader convention, it would make life a lot easier.\n\nTake JViewHtml and make it JControllerDisplay and have it extend JControllerBase.\n\nI think that's too big a jump but, as I've said, there's nothing stopping you from developing a proof of concept around the idea of JControllerDisplay and I actually believe this pull request would help you do that.  As I said, I think we must keep the views more or less in line with how Joomla expects them to behave (just a lot cleaner) ... for now.  I think it's easier to talk with code so throw an example together and let's all see what we think about it and making sure we are debating the same idea.\n\nConsider a central place for sharing Views (Layouts) that can be used by any extension.\n\nThat's already possible.  Note the SplPriorityQueue that holds paths (have a look at the unit tests and you'll get a feel for how amazingly powerful that is).  So, for example, you can inject a \"common\" path at a low priority into the path queue (maybe at the framework level, maybe via a plugin), and your extensions can add their own, or even provide overrides for the common layouts.  It's layout overrides on steroids and a very cool and very simple solution to what is a very complex problem in the CMS today.\nDoes that help?\n. @ssv445 \n\nWe should not mix two different purpose with a single class name. \nEven if we do search-and-replace, we cannot maintain one codebase for multiple versions.\n\nThat depends on how many versions of Joomla you want to support.  I don't think one codebase to work on 2.5+3.0+4.0 is realistic.  The CMS should aim to make 2.5+3.x workable, and the same with 3.x+4.x.  But any other combination is your responsibility in my opinion.  Rouven's CMS idea should allow you to do either.  But remember, this is not the only change that will be required by the time we get to 4.0.\n\nWhile deprecating, please provide a programmable path rather then force us \nto separate the code base for different versions. Thats double-up the work for ANY developer/designer.\n\nWe almost always do in the platform, but the CMS is on a longer upgrade cycle so you will have to talk to them about when they will deprecate code.  I cannot stress enough that you need to be having this conversation with the CMS, not the platform (because the CMS ultimately decided how long they delay the changes).\n\nInitial comment regarding negative vibrations for Joomla by @nikosdion, \nis very true and still holds. The breaking changes will only broadcast negative \nvibration (thats my personal opinion obviously). Smaller the change, easier the adoption.\n\nI actually agree and that's why we implemented a path for the CMS to delay these changes for at least 2 years.  That's a very fair period of time, and as I've said, it won't be the only change you have to manage when moving into Joomla 4.x - but that's something for you to discuss with the CMS team.\nDoes that help explain the situation better?\n. @piotr-cz already done :)  One of the luxuries we have is the time to put documentation together during work time (a wonderfully pleasant change).\nhttp://developer.joomla.org/platform-manual.html\nSee: 1.2.2. Legacy Platform, and 2.5. The Model-View-Controller Packages\nIn terms of differences it was far easier to document what the new classes did rather than list out all the things they didn't know do.  If you are using the CMS, there will be no change in terms of accessing them because the CMS will bootstrap the legacy platform first.  If there are any notes you want me to add just let me know and I'll be more than happy to put them in.\n. @piotr-cz you can't access both MVC's in the same script, but yes, you could write a CMS component using the old MVC (actually probably just a view), and a web services platform using the new API to actually do all the work. Keep an eye out for one of the GSOC projects which will cover that topic to some degree.\n. Ok, I've made a note to do that.  If you happen to have time to do a pull request yourself that would be great.\n. These changes introduce 2 failures.  Is that the intention?\n. Merged.\n. Yeah, you need to make a new branch and put just those changes in there, and then make a new pull request.  Avoid making changes to you fork's master or staging branch.\n. Merged. Thanks.\n. Can you redo this pull so that the change in libraries/joomla/installer/adapters/file.php is not present.  Thanks.\n. One check style error to fix up.\n. Merged. Thanks.\n. I get what you are doing but I'm not sure counting a database driver class makes sense.\n. One check style error.  Plus, would you like to move JObject to it's own package as well?\n. 1 cs error and one ut error.\n. I'm sorry but we aren't accepting issues for this repository any more. Please see http://developer.joomla.org/cms/report-an-issue.html for how to report and issue for the CMS Platform.\n. Merged.  Thanks.\n. Merged. Thanks.\n. 2 unit test failures.\n. Amy, I see what you are trying to do, and I don't totally disagree with it in isolation, but on the point of consistency I don't know if I would want to standardise this across the board.  The Platform does assume that JFactory is inherently available.  You can choose not to use it, but I'm not sure I'd penalise the whole platform for your choice.  Do you follow what I'm saying?\n. @ianmacl it wasn't really designed with non-ascii support in mind.\n. This gives you a couple of extra cpu cycles back as well:\n   public static function toUnderscoreSeparated($input)\n    {\n        // Remove duplicate underscores.\n        $input = preg_replace('#[ \\-_]+#', '_', $input);\n\n        return $input;\n    }\nSame principle could also be used in toSpaceSeparated and toDashSeparated.\n. @chdemko does JStringNormalise::fromCamelCase do the job?\n. Ok. Probably best to upgrade the one in normalise.php and deprecate the JString one.\n. Closing. Rebooted in #1162.\n. I think this is fixed now. If not, re-open the issue.\n. Merged\n. Odd, I wonder what's causing that error.\n. Looks good to me.\n. I'd suggest posing the question on the CMS list.  Ideally all sources (with the exception of layout files - they are currently problematic) distributed by Joomla should conform to the standard, but it'll take a few people to just dive into the CMS and do some bulk updates.\n. Merged. Thanks!\n. What's update_cron.php?\n. Have you reported the issue on the CMS bug tracker?\n. Well, I think you are going to have to report it to the CMS because\nthey aren't using the current platform.  Line 131 is a blank line.\nThere's a remote possibility that the bug has already been fixed in\nthe platform as well.\n. I'm sorry but we aren't accepting issues for this repository any more. Please see http://developer.joomla.org/cms/report-an-issue.html for how to report and issue for the CMS Platform.\n. How are you thinking of instantiating the cache objects (or are we not there yet)?\n. I was just wondering if you wanted to include a getInstance($driver) convenience method.  I'm just thinking of the case where the driver type is coming out of a configuration setting.\n. Or we add a factory class...\n. Closing this PR as it is incorporated into the new Joomla Framework.\n. Thanks for looking into the problem. I'm going to close this PR for now since we don't have a mergable solution.\n. Julio, this pull request is really only of use to the CMS, so I feel it's better added to the CMS codebase. \n. Is it worth updating the description of this pull request to list the fields that are moved (for the sake of the change log)?\n. Couple of thoughts:\n1. Should we use session_regenerate_id(true)?\n2. Should we provide some opt-in backward compatibility to use the \"old\" way (but deprecate it) just in case we find some edge case where sites break?\n. Yeah, that's fine. Just asking the question ;)\n. I believe it's a tad faster as well. Merged.\n. Ian, how about we do this in the FW?\n. @dianaprajescu do you have any developer documentation for this PR?\n. @dianaprajescu could you consider writing some documentation about how to use this package please. For those of us that are new to oAuth (like me), it would be helpful to see how you intend developers to use it.  A markdown file in /docs/manual/en-US/chapters/packages would be ideal.  I certainly appreciate the work you have already put into this but for me I don't know how to review this because there is no documentation of any kind (you probably just need to recycle some of your blog posts from GSOC).  \nAlso, a brief introduction in the description of this pull request would be helpful as the changelog is automatically generated from this information.\nFor what it's worth, Louis needs to do the same in his pull request ;)\nThanks in advance.\n. Thanks @dianaprajescu. Do you do any examples of connecting to real services during GSOC (like an example of connecting to Twitter)?\n. I'm not seeing a clear decision here. If there are still fixes to be made please issue a pull request against the CMS repo. If it proves stable, we can incorporate it into the Framework.\nThanks.\n. Ditto. The description is shown in the changle log we automatically generate - just helps people be aware of what has changed.\n. Can you add a reference to where this is being used in the CMS?  We need to make sure this type of thing is agnostic (for example, not every platform application will necessarily have a message queue).  On a technical note, I'm not sure this adds a lot to JResponse but I'd certainly like to see this class extending it if it's to be used at all.  It's probably worth looking at this GSOC project for how a JSON response is handled: https://github.com/stefanneculai/Web-service-API (look at the application and the controllers in particular).\nFor now I'm closing this pull request because it cannot be merged cleanly and some further thought needs to be given to the strategy presented. Please rebase, push up the changes and re-open the pull request so we can review it again. Thanks.\n. Merged. Thanks.\n. Apart from a few code-style issues, I don't like the way the trigger is done.  I'm going to close this PR and suggest you raise the issue on the mailing list to get a consensus on how to solve your problem.\n. I'm going to close this one mainly because I have no idea what the problem is you are trying to solve.\n. Is there any reason why you can't remove the regex and use the same technique as in JViewLegacy?\n. Should be a \"Reopen\" button at the bottom of the page?\n. So, turns out only maintainers can re-open sigh Best laid plans of mice and men and all that :)  Re-opening.\n. @dongilbert Can you edit the pull description and make a note of the BC incompatibility (automagically gets put in the changelog). Thanks.\n. Merged. Thanks.\n. Nick, can you change the title to \"Joomla CMS #27397 \", add the problem the patch fixes and also a link to the tracker item.  Just makes for a more informative entry in the changelog (and helps we reviews get to the info quickly).  Thanks.\n. What you've done is perfect, thanks!\n. You would need to create that query manually, or suggest a change to\ngetTableList to account for it.\nRegards,\nAndrew Eddie\nhttp://www.theartofjoomla.com - the art of becoming a Joomla developer\nOn 24 September 2012 17:35, Daniel Dimitrov notifications@github.comwrote:\n\nOk, that is cool! However how do you do:\nSHOW TABLES like '%something'\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1542#issuecomment-8809448.\n. Wouldn't you use the native 5.3 support in favour of JArchiveZip?  See http://php.net/manual/en/book.zip.php\n. The command line app is required to build the test files for the unit tests; that's the main reason it's included in the pull request, but there's an obvious value in having it there so people can actually create data to use the package out of the box.  There's also additional value there because it's yet-another-platform app that we can refer people to.  To be honest, I'd like to see @LouisLandry's phar builder in the /bin/ folder as well :)\n. Closing in favour of #1578\n. Just a reminder to change to 12.3 \"dev\".\n. Closing in favour of #1579\n. Spring merged :P\n. I like the idea, but what if exclude was implied by prefixing the category name with bang (!), for example:\n\nphp\n$logger->addLogger(array(), JLogger::ALL, array('included', '!excluded'));\nThat way you could mix white and black lists?\nAlso, we'd want to see the unit tests adjusted for this change (whatever its final form takes) and also I'd like to see the description of the pull request filled in with some details about the change and how a developer could use it.\n. You are absolutely right.  Ok, if you can attend to the unit test adjustments and the PR description we can keep moving this forward.\nI'm closing this pull request for now until the requested changes are uploaded. Please re-open the pull request at that time so we can review it again. Thanks.\n. You'll use @since 12.3.\n. @florianv would you mind taking a copy of this file:\nhttps://github.com/LouisLandry/joomla-platform/blob/manual/docs/manual/en-US/chapters/introduction.md\nand making a gist or similar for with with additional documentation explaining the new namespace support and how developers can use it.  We can merge it later when we redo the docs.\nThanks in advance.\n. No, don't replace it.  A gist will be fine for now.\n. Thanks.  We've just converted all the docs over to markdown so just update\nyour branch and make the change to the appropriate file.\n. This file:\nhttps://github.com/joomla/joomla-platform/blob/staging/docs/manual/en-US/chapters/introduction.md\n. Ok, so you can re-open your own PR is you actually close it?\n. Mmmm, probably not helpful to us but good to know.\n. @Chraneco I think what you are describing is a stand alone helper that's been design very much with the CMS in mind (or in other words, it's application specific).  There's nothing wrong with that, but in terms of the Platform, I'm just not seeing it as generically useful (and I go back to my comments that the message queue is a 'CMS thing').  Maybe I'm looking at the problem it's trying to solve the wrong way, but I just don't get how it give the controller any added value over $this->app->setBody(json_encode($data));.  Whatever the case, I do feel strongly that if a class such as JResponseJson is to exist, it should extend JResponse and add value to that base class.  I also think that errors should not be coupled to the response object - the error/exception handler should set the response (not the response set the error).\nI'll leave this open for a while longer to see what others think. \n. @laoneo given the changes between Platform and Framework I'd make this request against the CMS tree. I don't think it makes sense putting anything new in this Platform as we are about to freeze it.\n. Yes, make a new pull request against the CMS repo. No, this pull request can't be moved.\n. I'm sorry but we aren't accepting issues for this repository any more. Please see http://developer.joomla.org/cms/report-an-issue.html for how to report and issue for the CMS Platform.\n. Diana, let's have a talk someday about getting these package into the Framework too.\n. There's no hurry Diana. In terms of time frame I'm thinking sometime before the end of the year. If you want, put an issue on the tracker and we can schedule if for Q2, Q3 or Q4.\nSee https://github.com/joomla/joomla-framework/issues/milestones\n. Closing because this PR cannot be merged. \n. I'm sorry but we aren't accepting issues for this repository any more. Please see http://developer.joomla.org/cms/report-an-issue.html for how to report and issue for the CMS Platform.\n. I'd like to see some docs on how it's used.\n. Yes. I've no issue with the code being in good condition. But without seeing how it's used, and especially as Louis will have no interest in doing any further work on this, we need the documentation.\n. There are still some code style errors in this package.\nhttp://developer.joomla.org/pulls/pulls/1624.html\nIf you can fix them over the weekend I'll merge the code.\n. The JDatabaseImporter classes are already handling schema manipulation.  My personal preference would be to continue to do this outside of the driver itself, maybe even starting some sort of ETL layer (which I had hoped to do someday myself) or schema helper, and moving stuff like dropTable in there as well. \n. I'm going to close this because I really want to see database manipulation handled in another class.\n. This branch can't be merged.  Please update.\nI'm closing this pull request for now until the requested changes are uploaded. Please re-open the pull request (just post a reply with \"reopen\" in the message) at that time so we can review it again. Thanks. \n. Thanks Don. Merged.\n. Obviously a bit of work to do, and some backward compatibility issues to think about, but I like where this is heading.\n. @florianv, I'm going to close this PR but I'd like you to keep working on this package for the new Framework. Thanks!\n. On 9 November 2012 19:37, HermanPeeren notifications@github.com wrote:\n\nA Data Transfer Object (DTO) is a better name for what you try to do here\nthan a Value Object. The latter name is used quite different nowadays (and\ncauses confusion when used for this JObject). See Fowler's PEAA, page\n486-487 (Value Object) and 401-413 (Data Transfer Object).\nI think JObject is fine to consider as a Value Object.  The Data Transfer\nObject is next on my list.\nA downside of overusing this kind of objects is a data-oriented focus. So\nit should be handled with care if you want OOP. It can be handy, but I\nwonder if it is a good choice as a kind of basic-object, like JObject was.\nYes, this is definitely about changing JObject so we can get to the real\ndata, not use some adhoc rules about the class properties (which may or may\nnot be data related).  For example, it's a better way to handle things than\nassuming that all the class properties in a JTable class map to database\ntable fields.\n\nRegards,\nAndrew Eddie\n. On 9 November 2012 23:41, HermanPeeren notifications@github.com wrote:\n\nBut: none of the methods of the current JObject survives platform 13.1 in\nthis proposal.\nWell, you can propose a different time scale, but honestly who would rather\nuse $object->get('property') over $object->property.  I don't understand\nthe push back on using standard PHP nomenclature.\nThe new JObject serves a different goal (has a different\n\"responsability\"). In fact: it is a totally different class, with the same\nname. Is that strictly necessary?\nI'm sorry, I don't see how you can say that.  It's performing the same job\nbut doing it in a PHP 5 way instead of PHP 4.\nI cannot see that \"This pull request refactors JObject (...) in a backward\ncompatible way\".\nI think that's a pretty simple statement.  It means that JObject will\ncontinue to work as expected.\nDoes the name JObject tell us something about it's use? You want an object\nto store data in it. Wouldn't JData (and JDataList) be a better name?\nPossibly, but the name JObject was chosen a long time ago.\nOr something else; anything better than \"JObject\": that suggests a basic\nobject from which you extend other objects. From an OOP point of view, this\nclass is not good for that; too data-centric.\nI really don't get your point.  JObject IS data centric and it's consistent\nwith the way I've used it, and what I consider it was supposed to be used\nfor, for many, many years.\n\nRegards,\nAndrew Eddie\n. On 9 November 2012 20:33, HermanPeeren notifications@github.com wrote:\n\nA.E.: \"I think JObject is fine to consider as a Value Object\". I think it\nis better to stick to the generally used definitions: that improves\ncommunication. What is your definition of a \"Value Object\" as used here?\nAn object that needs to hold properties but does not require persistence.\n JObject can obviously be extended to go beyond that but that's where it\nstarts.  Whatever the case, we should talk about the changes to the code,\nnot philosophical differences of opinion.  The main change it leveraging\nthe magic methods and it's fully backward compatible.  Do you not approve?\nConcerning mapping: that is why I use a ORM. No need to reinvent that\nwheel.\nI'm just telling you how we use it.  You can use Symfony or whatever takes\nyour fancy, just don't force me to use it too.\n\nRegards,\nAndrew Eddie\n. On 10 November 2012 08:30, HermanPeeren notifications@github.com wrote:\n\nJObject was a base object, to extend most other objects from. Hence it's\nname. It provided some functionality that was not available in PHP4; that\nis why it is not necessary anymore in current Joomla: PHP5 provides\neverything we need from a basic object. We don't need another basic object\nfor general use anymore.\nI understand your opinion, I just don't agree with it.\nIf you want to provide some specific behaviour in an object, then\nproperly name that object, so it's use is obvious. JData, JStore,\nJContainer, can't you think of a name describing the kind of object? Or do\nyou want to go back to a general basic object from which most other objects\nare extended? Thought we had passed that idea long ago.\nI think JObject is just fine - JData, JStore or JContainer are just\nsynonyms with equally obscure means for me.  The fact is, we have a pattern\nfor a Value \"OBJECT\" (<- note \"object\" is used in the pattern name) so\nJObject fits.  I read Folwer's book last night (the book, not the summary\non the web site) and it fits the pattern \u2026 in my opinion and you have to\nrealise that patterns have a subjective element to them.  I'm totally fine\nwith you disagreeing, but I don't see any problem with bringing JObject\ninto PHP 5 land rather than inventing a new name just for the same of\ninventing a new name.\n\nRegards,\nAndrew Eddie\n. I read and re-read the entire chapter on Value Object and, to me, it's fits\nwith the description.  Regardless, functionally it's the same as the\ncurrent JObject that all Joomla developers are familiar with.  We don't\nneed to invent something new to do the same job.  I don't mind if you don't\nagree with calling it a value object, but I'd don't see how upgrading the\nclass to the PHP 5 way suddenly changes it (when it's completely backward\ncompatible).\nRegards,\nAndrew Eddie\nRegards,\nAndrew Eddie\nhttp://www.theartofjoomla.com - the art of becoming a Joomla developer\nOn 10 November 2012 09:03, HermanPeeren notifications@github.com wrote:\n\nYou call it a Value Object and even refer to Fowler, but the JObject you\npropose here does not have the same function: a small simple object, like\nmoney or a date range, whose equality isn't based on identity (and yes I\n've reread the whole book often since 2004). A Value Object is used\neverywhere for instance to contain money (the amount and the currency\ntogether). No identity means: it doesn't matter if it is this 5 dollars or\nthat; it's just 5 dollars.\nI won't bother you with my arguments anymore. Good luck with your platform.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1673#issuecomment-10247881.\n. @HermanPeeren on reflection, I'm happy to concede we are not religiously following the Value Object pattern (it really depends on the data you push into the object).  If you like, I can change the docs to say something like \"modelled on the Value Object and other patterns\".  That said, there is absolutely no intention of deprecating JObject in the short, medium or long term.  What has happened is the we've stopped deriving from JObject just because we can.  I've also always considered JObject as a data object, a replacement for JParameter and other things even if other people have had different ideas about what it's real purpose was or is - so that could also be where we have differing views on what the \"right\" way is.\n\nThat said, this PR doesn't change the API (in a backward incompatible way) so I think it's fine to merge and makes the class more useful - you don't have to use the class if you don't want to ;)\n. Code style and version numbers fixed up.  Docs consolidated per the new format.\n. Closing this pull request.  See #1703.  I think that forms a reasonable compromise to move forward with.\n. Looks fine to me.\n. To be fair, DocBook is far more descriptive than Markdown, and Pandoc converts it readily.  However, I'm also glad we are going to this format :)  It lowers the barrier of entry for people writing docs (or, to put it another way, gives them one less excuse to argue why they shouldn't bother, hehe).\n. Ah, perfect.  I was wondering how this was going to work.  @elkuku the menu isn't automatically generated, that's why it's included by hand.  If you add a new chapter, you'll have to adjust the menu.\n. @elkuku Go for it.  Maybe list it under the Appendices?\n. Well, for that matter, do we really need the manual container?\n. Probably best to ask @ianmacl  what he wants to do.\n. Merged.\n. Thanks. Merged.\n. This branch is not mergable.\n. Github says it's not.\n. Any basic docs to go with it?  Also compare with #1422\n. @dongilbert fixed.\n. Screwed the branch up - going to have to rebuild it.\n. First off, I'm all for getting a commerce package into the platform.  However, would it be worth taking a few steps back and starting with a wireframe (powerpoint slide, google docs, whatever) to see what all the pieces are and how they wire up rather than diving into code first?  I'm a visual person and I think it's important to establish the flows first.\nJust one simple observation though. I don't think an \"address\" is necessarily tied to \"commerce\".  I'm pretty sure there are address standards out there so it is probably worth considering making a separate package for that.\n. @garyamort is this PR still useful for the CMS do you think?\n. That cache controller is only used by the CMS.  It's your call what to do with it and I think you are between a rock and a hard place.\n. Fixed since #1703:\n- PHP strict problem in JDataSet\n- Recursive dumping on JData and JDataSet objects changed to JDumpable\n- Improved documentation verbiage\n. def removed.\n. @florianv that would be fine. Either make a pull request against my branch or you could make a pull request after this is merged.\n. Ah ok, sorry, I missed the email for that somehow.  Since it's merged, would you mind making it against the this platform, and also, would you mind fixing up that \"instanceOf\" in JDataSet that Don found?\nThanks in advance.\n. Thanks.  I'll just wait for the pull tester to roll over.\n. +1 from me.\n. There is 1 code style error in this PR. @malkowitch would you be able to fix this over the weekend so we can merge it? Thanks in advance.\n. Merged. Thanks.\n. I have no problem with the change, but will this affect downstream behaviour?\n. I'm not sure how to call this fix? Is the CMS going to be ok if we merge it?\n. Doesn't appear to be a clear consensus on this one so I'm going to close it. The CMS can fix it locally if need be.\n. Fair point. Fixed.\n. @garyamort, I don't understand what $updateStrings is in the example.\n\n$sqlUpdate = ' set objectStats = CONCAT_WS( implode(',', JDatabaseDriver::quote($updateStrings, $checkType));\n. My personal rule-of-thumb is 120 characters (which gives me a bugger between 120 and 150 if I really need it).  The reason is that 120 chars fits really well in the github code windows.\n. Oops (blush). Merged. Thanks.\n. Thanks Don. Would you mind adding a page to the docs, probably namspacing.md under the Code Standards heading, which outlines what we need to be aware of when writing, and obviously reviewing, code?\n\nIt makes sense for the platform, but I think this could potentially give the CMS some grief with extension developers that want to retain support for PHP 5.2 on CMS 2.5 yet maintain a dual 2.5+3 version package.  I don't have a problem with the change but it's probably worth giving the CMS dev list a heads up that we are talking about this.\n. Thanks. I think it's better for it to be highly visible and I think it's easier to point to a single page on the topic when fielding questions (or criticism {cough}) about it.\n. Compat. layer sounds good. I can get behind that if that's something we need (we should do some more clean up and shunting to the /legacy tree before we finalise it).\n. Bumped to 13.1.\n. Just a thought.  Why don't you add the code checking in isSupported into the constructor of JImageFilter?\n. Merged.  Thanks a bunch.\n. Merged. Thanks. \n. I'd probably go further and suggest JFactory as a whole is not something we need in the core platform anymore.\n. I'm just suggesting it's not needed in the core platform anymore.  I would probably argue against dropping it from the CMS.\n. Right, it's definitely a bigger job.\n. I think most of it is ok; it's perfectly reasonable to assume an application is going to need configuration out of the gate. The only problem I have is what to do with fetchConfigurationData.  I don't think that should be in Base, and looking at it, I'm not sure it technically belongs in Web and Cli.\n. The loadConfiguration method is fine.  I'd be happier if fetchConfigurationData in Base was abstract.\n. What are you concerned might happen if we don't have these tests? To me, it's just testing that some particular values are being correctly converted to strings.  We could just as easily do the following to enforce that:\nphp\nreturn '\\'' . ($escape ? $this->escape((string) $text) : (string) $text) . '\\'';\nMaybe I'm missing the point?\n. I'm not convinced it's necessary, and I would be inclined to roll them into one test with multiple assertions anyway.  If others think it's necessary I'm fine with it.\n. Ok.  I'd have no issue with a data provide pattern.\n. Is there any reason why this couldn't be done via the $config array?  Also, is it worth moving JPlugin to the legacy tree?\n. > Loading the language isn't something that should be at the user's discretion generally.\nI guess not, but then I'd argue it's at the discretion of the plugin developer.  It honestly doesn't bother me, I just wouldn't include it because plugins don't usually have to load language files.\n. > plugins almost always will have labels and descriptions\nYes, but those language files are handled by com_plugins.  Otherwise I just don't think it's a big deal for developers to have to load the language on demand.  But like I said, it doesn't bother me.\nI'll get you a determination on whether the maintainers want to move this package to the legacy tree (/libraries/legacy/plugin) as soon as I can.\n. Deal!\n. It's not perfect but it's a first step.  The thing it solves is you having to completely duplicate the getPath method which is what you have to do at the moment to get around this.  More could be done in the future but this scratches and itch.\n. Fixed, but please merge https://github.com/joomla/joomla-platform/pull/1737 first.\n. Merged #1740\n. I don't suppose you're able to do the unit test for the bind method while you are at it?\nhttps://github.com/joomla/joomla-platform/blob/b4c34af90a8ea35a510eebfb49fdf7baa8bf990d/tests/suites/unit/joomla/user/JUserTest.php#L394\n. https://github.com/garyamort/joomla-platform/blob/bc57b93e3f7ae274721df01d2e886111b9752a32/libraries/joomla/language/language.php#L814\nWould it be better to put the ksort here?\nReally interesting analysis though.  Well done.\n. Works for me, and nice addition!\n. This PR is no longer mergable.\n. Thanks Sam.  All fixed.\n. Oh that's just ridiculous.\n. Closing. I'll add this to the Framework.\n. Doesn't appear to be a resolution here. Closing.\n. @AmyStephen we will have information coming out soon. No need to panic or cause unnecessary concern. Just be patient. Thanks.\n. @dongilbert is this worth merging or shall we fix it in the FW?\n. @garyamort is this something you think CMS 3.1 will need/want?\n. Since there has been no response I'm going to close this one.\n. Merged.\n. If you want to make a singelton, then the constructor should be protected. If not, there's no need for the getInstance. At the moment we are half-and-half and I think we should be one or the other. I'd side with Ian and get rid of the getInstance altogether. If that's satisfactory, let's just do that in the FW and leave this code as is (?).\n. I'm sorry but we aren't accepting issues for this repository any more. Please see http://developer.joomla.org/cms/report-an-issue.html for how to report and issue for the CMS Platform.\n. Please discuss here:\nhttps://groups.google.com/forum/?fromgroups=#!topic/joomla-dev-platform/yn6hDI4eZOc\n. Changes with the FW make obsolete.\n. Ok, so that would be:\n13.1 end of March (because we've already set it)\n13.2 June\n13.3 October\n14.1 February 2014\nOn the maintenance release, yeah that's the downside of not using strict semantic versioning. I guess the expectation with the platform is you are supposed to keep up. In terms of fixing 12.3, I don't have a problem with releasing either 12.4, or 12.3.1 for a security fix or major bug.\n. We don't have a coordinated approach to security advisories between the\nPlatform and the CMS in terms of shared code (I actually hadn't given that\nangle a thought to be brutally honest). That's a good point for the PLT to\ntalk about.\nIn terms of what information to share, it's already outlined here at\nhttp://developer.joomla.org/security\n. > Right, but what JSST shares is not sufficient for patching a code base. I\n\nassumed the JSST provided services to both the CMS and the Platform. Is\nthat not so?\nThe JSST is for the project as a whole. I think, to date, the CMS makes its\npatches and patches for the Platform at the same time. But as I said, I'll\nhave to check because I don't know if have we specifically thought out all\nthe scenarios.\nBut, the problem is how long does each release stay valid? Two years?\nThree? Considering there could be four releases every year, it starts to\nget a little unmanageable. (To me, even one year is a lot and that short of\nperiod of time probably wouldn't help many applications.)\nThere is no long term support available or planned for the Platform at this\nstage. We only have a deprecation strategy. \"Support\" per se is the\nresponsibly of the downstream user.\n\nThe idea behind asking for timings is just to give some sort of guide as to\nwhat might be in a given release (as opposed to it's ready when we feel\nlike it). If we have to do an unscheduled release, we'll just have to\nadjust numbers accordingly. If we get so many security issues that this\nbecomes a problem, we'll have to rethink that strategy.\n. Changes with the FW make obsolete.\n. @Buddhima this branch needs to be updated. If you can do that soon, I'll merge it. Thanks in advance.\n. Don, first off, thanks for putting the work in so far. However, understand we must put this through the refiners fire so I'm just going to say stick with it as we field comments. This is also, probably, going to be an iterative process. So, a couple of points.\n\nI have personally committed to maintaining\n\nI get what you are saying but this is an RFC and we should keep the text second or third person. I think it's best that you change split that block of text and create a new section called \"Backward Compatibility\". Then you propose to introduce the change en masse in 13.1 to be deprecate the compatibility layer in 14.1. Just thinking out loud though, another way to handle this is to say that the compatibility layer will be introduced in 13.1 but will be \"frozen\" after 13.3. That would mean that any new work must be referenced by namespace; and old classes could referenced by the old class names ad infinitum. The compatibility layer could also be opt in, you have to explicitly turn it on much like you have to explicitly add the legacy tree.\nYou haven't mentioned anything about how file names work. If there is no change to file and folder structure, this should be mentioned explicitly. If change is required, you also need to map out what the changes are.\nI think the experienced Platform contributors will tend to get the impact of change from the examples you've given. However, I don't think the average CMS component developer is going to get it. It's probably worth adding several examples revolving around how this would affect CMS developers IF the CMS decided to adopt 13.1+ at some time in the future. Obviously we can't predict what the CMS would do, but we need to have a go at providing all the information we can so that any downstream user can make an informed decision (it will certainly affect what I do at work this year big time).\nI think the dot points under \"Benefits of Namespacing\" need a sentence or paragraph after each point to further explain what is meant by, for example, \"Eliminate ambiguity\". What does that mean to an average downstream users that has never heard of namespacing. Remember, we are dealing with developers that kicked up a huge stink over dropping the DS constant - this is going to blow their mind.\nCurrently we have a system of overrides in the loader. I can create my own JApplicationWeb and have that override the Platform's core class. It's worth explaining how that feature would be supported under name spacing or how that feature has to change.\nObviously the task breakdown is going to be huge for this effort (the unit testing for this is probably going to be daunting, and we may have quite a number of dependencies like absolutely getting rid of lingering CMS code). Hopefully David will have Jira up by then :) In the absence of the Jira, I think it's worth starting the \"task list\" in the RFC just so we know the full impact of what we are signing up for. I know you are going to shoulder a lot of the work, but you are going to need help :)\nAlso, once we are happy with the state of the RFC, we are going to need to publish this widely and will probably need to do a voting response survey like we did for the LGPL.\n. Task I see should be in the mix:\n- 100% code coverage for loader related classes, including the compatibility layer\n- 100% skeleton coverage - by that I mean we should at least have skeleton tests for all classes that includes the fully namespaced classes.\n- All changes are well documented in the Platform Manual.\n- Review and move lingering CMS classes to the legacy tree (JDocument, JPlugin, etc)\nAmy, yes, a standing goal should be to design the Platform with dependency injection in mind. However, I don't know what you mean by \"services container\".\n. Bugga. It's worth noting that will be a required change in the file system. That's not a particularly bad one, but one we need to make clear.\n. On, and might be better to include a more translatable word instead of \"anathema\". Fitting, but not common :)\n. JFactory is a separate discussion in my book. I think it's scope creep for\nthis discussion.\nRegards,\nAndrew Eddie\nhttp://learn.theartofjoomla.com - training videos for Joomla developers\nOn 5 January 2013 14:26, AmyStephen notifications@github.com wrote:\n\n@eddieajau https://github.com/eddieajau Good resource is from Fowler\nhttp://martinfowler.com/articles/injection.html#ServiceLocatorVsDependencyInjection\nMainly a question of what you want to do with JFactory, thinking there is\nplenty already to do, as it is.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1787#issuecomment-11909815.\n. So, correct me if I'm wrong, but PSR-0 requires that underscore must be converted to a directory separator, but it doesn't preclude you from having any other rules that you desire. You could, for example, make each character of the class name a folder and you'd still comply with PSR-0, no?\n. By inspection of the code, the RFC is not going to be PSR-0 compliant:\n\nhttps://gist.github.com/221634#file-splclassloader-php-L131\nIF that's what the PSR meant - and it probably did. It's not what the PSR\nsays and this was done before the group implemented the MUST's and SHOULD's.\nIt just means we aren't going to fully compatible (but we will be fully\ncompliant to the letter of the law) in terms of people wanting to consume\nthe Platform with other PSR-0 underscore split code.\n. @Amy, the gist I referred to is what is in PSR-0 \"standard\".\nhttps://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md\nSee the very last link.\nIn terms of compliance, PSR-0 does not say definitively that underscores are the only way you can determine how to form the real file system path. Whether that is what is intended or not is neither here nor there, PSR-0 is silent on the matter. On that basis I think we can rightly say we will be able to \"comply\" to the letter of the law with PSR-0, but that does not necessarily mean we will be compatible with everyone. It's a deficiency in PSR-0. The bigger problem we have is breaking on camel case because some libraries, like Zend, have files like /Foo/Bar/GooCar.php.\nAs for changing the PSR, I'm happy to take a case to the group but I don't want to own the processing of making \"our\" case. Amy, maybe you'd like to run with doing the work of making a draft and getting our community to discuss it. If the consensus is that we need to propose a change to PSR-0, I can take it to FIG. If nobody is interested in forming a case for change, we'll just keep on doing our own thing (maybe I need to say something about that on the mailing list).\nJust on that point I just want to make it clear I only have time to be a voting member of issues that interest this community. I don't have time to keep you up to date with what they are discussing etc and so on. You can subscribe to the mailing list yourself for that :) And as I've said, not every PSR is going to fit what we do - the PSR's are about normalising the average, not necessarily about being innovative and bleeding edge which is more where I'd like to see the culture of the Platform head.\n. Ok, so I've been a bit confused and that is all clear up now. In summary, what we can do is say:\na) the Platform will conform to PSR-0 in every way\nb) BUT, we will enforce some style rules\nThe style rules will be that we must manually namespace every class to generate the effect of the camel case being a folder/file break.\nWe generally won't allow underscores in the class names UNLESS the class name would start with a number. In that case, the crypt ciphers would be Cipher_3des, Cipher_Blowfish - a one-in-all-in deal. We could support Cipher3des or CipherBlowfish but, in my opinion, it's better to have those in their own folder.\nEnd result, I'm all good with PSR-0, aside from the work it obviously generates :)\n. Slow down Florian :) Composer is another conversation we have not had yet. One step at a time please :)\n. > https://gist.github.com/452055 https://gist.github.com/45205599\n\nI think that might be better presented as a new page in the Coding\nStandards section of the manual. We should probably get into the habit of\nusing the MUST/SHOULD RFC as well.\n\n\nRegards,\nAndrew Eddie\nhttp://learn.theartofjoomla.com - training videos for Joomla developers\n. I think it is better to draft the standards earlier than later. We can be\nratifying them while the coding effort works on in parallel.\n\nRegards,\nAndrew Eddie\nhttp://learn.theartofjoomla.com - training videos for Joomla developers\n. Don, you probably need to add another check box to the task list and that\nto polish and expand \"the pitch\" (the RFC text). I think we need quite a\nfew examples of how this change will impact the code (that should be\nrelatively easy to pull out snippets from the actual changes, but we just\nneed to home in on typical \"simple\" and atypical \"complex\" cases); how\nsomeone in the CMS (if the CMS choses to embrace the NS'd platform) might\nleverage it alongside non-NS'd code; how overrides will work in practice;\netc.\n. I think we can safely say we have this in hand now.\n. I'm going to close this one only because the CMS is going to take over maintenance of the Platform. Please resubmit against the CMS repo. Thanks.\n. I'm going to close this, not because the idea doesn't have merit, but the way it's done just doesn't fit into what the platform should be offering. For example, we don't want to be adding anymore JS to the platform, and we certainly don't want to add CSS files. I think you'd be better trying to offer it directly in the CMS, but I share Amy's concern that you are duplicating some existing functionality.\n. I'm going to close this one only because the CMS is going to take over maintenance of the Platform. Please resubmit against the CMS repo. Thanks.\n. I'm going to have to close this one because there is a failing test.\nhttp://developer.joomla.org/pulls/pulls/1793.html\n. This is a -1 from me but we can see what others say. I appreciate the idea behind this, but it does lead to unintended consequences. In other words, the code will fail because it is deprecated, not because it doesn't work. I don't have any problem with coupling deprecated classes to JLog and, to me, configuring a logger to pick up the notices is easier than writing an error handler.\n. For me, interrupting the output is a major drawback. With JLog, you can add a deprecation logger and do a full run of the application and capture everything in a log file (say, loading the home page of the CMS).\nWith trigger error, you have to either inspect the output (not always convenient) or you have to override the application's own error handler (PHP only allows you one custom error handler doesn't it?). You also force the developer/tester to add an evil custom error handler where they may not want on(we are in an age of throwing exceptions after all).\nSo, to me, the end result is more inconvenient.\nOn the other hand, it's no less inconvenient than testing with full error reporting on to weed out PHP problems, but that's not something we have any control over.\n. > If people want to use more sophisticated handlers they could aways use\n\nsome of :\nhttps://github.com/Seldaek/monolog/tree/master/src/Monolog/Handler\nBut we already have that capability (for extension) in JLog. Why would you\nwant to take that away?\n. Yeah, but complying with an interface doesn't mean we have to rip out\nperfectly good functionality. All you need to do is add the interface and\nproxy the required methods back to our existing functions.\n. You wouldn't copy it into the Log package. You'd copy it into a FIG (or yet to be agreed) vendor /libraries/FIG or maybe it will be /libraries/PSR (which I think is preferred but it's bit like making RFC a vendor ... huh?). But for it not to be included, we'd have to talk about modifying the documentation to tell people how to build the Platform. I'm still not convinced we should put all our eggs in the one basket and rely only on Composer (in other words, include the PSR interface anyway).\n. Wasn't this where Jira was going to come in, or has that idea fallen by the\nwayside already?\n\n\nRegards,\nAndrew Eddie\nhttp://learn.theartofjoomla.com - training videos for Joomla developers\n. Well, the way I'm thinking is that the additions to our standards/policy\ncan happening a separate pull, combining Don's RFC. If we hone that it\nmakes it easier to present for wider community consultation, and it is\neasier for the PLT to discuss and ratify. In the mean time, those\ncontributing to the code can be ironing out issues.\n\nRegards,\nAndrew Eddie\nhttp://learn.theartofjoomla.com - training videos for Joomla developers\n. On 16 January 2013 15:50, AmyStephen notifications@github.com wrote:\n\nI had to build my own Theme/Rendering/MVC environment since the JPlatform\nclasses are directly tied to components, modules, templates, and so on.\nJDocument is all about the CMS.\nJPlatform will need a replacement, or at least an interface to Mustache or\nTwig.\nIt doesn't necessarily \"need\" a replacement. It would be sufficient to\ndemonstrate how to replace the functionality using other means, if that is\nan appropriate direction to take (in which case, we could deprecated the\npackage with a clear conscience). I'm not quite sure what the end result\nwould be, but my guess is it would involve moving on some of the\nfunctionality of JDocument into the Platform, probably in the form of a\n\"Response\" package and the application would push whatever \"view\"\ngeneration strategy it likes into it.\n\nThe other option is we just make a call to deprecate it outright and the\nCMS can just copy it into their application stack. I wouldn't be opposed to\nthat because JDocument is not exactly convenient to use outside of the CMS.\nRegards,\nAndrew Eddie\n. Let's leave the Platform as is and increase the minimum on the Composer repos.\n. I'm going to merge this because we have other codestyle issues in the Platform currently anyway.\n. I'm sorry but we aren't accepting issues for this repository any more. Please see http://developer.joomla.org/cms/report-an-issue.html for how to report and issue for the CMS Platform.\n. I'm going to close this one only because the CMS is going to take over maintenance of the Platform. Please resubmit against the CMS repo. Thanks.\n. This branch needs to be updated, then it's fine to merge.\n. @elkuku, can we move this effort to the Framework? Feel free to raise and \"Improvement\" issue with your TODO list. I'll close this in the mean time.\n. I think this is fine if you change the docblock to @return  mixed  The return value of the controller executed. I wouldn't want to restrict it to 'output'. That is just one possibly scenario. It could also return another controller in an HMVC setting I would imagine.\n. Would be great if you could add tests, but the actual change is fine.\n. I'm going to close this one only because the CMS is going to take over maintenance of the Platform. Please resubmit against the CMS repo. Thanks.\n. @fitorec there appears to be a unit test failure.\nhttp://developer.joomla.org/pulls/pulls/1833.html\nCould you look into that please. Thanks.\n. I'm going to close this one but will say can you work with @elkuku and his branch and let's get it updated in the Framework.\n. I'm going to close this one. If can be fixed against either or both the CMS or the new Framework.\n. There are a few code style problems with this PR. Would you mind fixing them. Thanks.\nhttp://developer.joomla.org/pulls/pulls/1838.html\n. I have this funny feeling this fix is going to break a lot of sites that have the directive included.\n. > That said it is certainly a goofy piece of code and a bug. But it needs to be properly documented in the API and in where ever it is you are documenting b/c breaks this month.\nIssue has been labelled as a \"Backward Incompatibilty\". If we decide to tag 13.1, it will show in the changelog.\n. It's a backward incompatibility \"just in case\" someone has this lying around in their template laying domant and suddenly it starts to work as advertised. I'm not saying it's bad, I'm just flagging it because it took 5 seconds to do it and I couldn't be bothered arguing the coin toss. I'm on your side - I merged the PR after all. It's a bug. It's fixed. Done.\n. I did tag it. I have no idea what all this fuss is about. Can we please move on.\n. I'm sorry but we aren't accepting issues for this repository any more. Please see http://developer.joomla.org/cms/report-an-issue.html for how to report and issue for the CMS Platform.\n. Arlen, if you register the class using the loader, does that help?\n. > Even if you don't believe I wrote this, why would you ignore the bugfixes?\nThere is no disputing you probably own the code in the patch, but I'm pretty sure you aren't the original owner of our code (because you said \"When you refactored my code\").\nIf you want us to consider this patch, then you need to follow the instructions here:\nhttps://github.com/joomla/joomla-platform/blob/staging/CONTRIBUTING.markdown\nMake sure you sign the JCA. Part of the deal with Joomla is that we don't attribute in the code itself. If that's a problem for you, I understand and we'll miss you.\n. Make sure you add extra unit test cases to cover the bugs you are fixing. Thanks.\n. Thanks. We'll take a good look at it. For what it's worth, you do get atttribution in the changelog for any accepted pull requests (just not in the code).\n. Patrick, we've tried to do a bit of archeological hunting in the mean time and we can't determine if the code we used is derived from yours one way or the other. It may have been; it may have been inspired by someone else that copied and modified your snippet; it may have been a mashup of many different snippets; it may have been derived from first prinicples independently - we can't say for sure.\n. I think we should do both. Let's get this one reviewed first. I apologise I've had the week from hell (no pun intended) adn haven't had a spare moment to review this yet.\n. Merged. Thanks.\n. I'm sorry but we aren't accepting new code into the Joomla Platform anymore. Please consider making a pull request against the joomla-cms or the joomla-framework repo's.\n. I'm sorry but we aren't accepting new code into the Joomla Platform anymore. Please consider making a pull request against the joomla-cms or the joomla-framework repo's.\n. I'm sorry but we aren't accepting pull requests for this repository any more. Please see http://developer.joomla.org/cms/report-an-issue.html for how to report and issue for the CMS Platform.\n. I'm sorry but we aren't accepting issues for this repository any more. Please see http://developer.joomla.org/cms/report-an-issue.html for how to report and issue for the CMS Platform.\n. I'm sorry but we aren't accepting pull requests for this repository any more. Please see http://developer.joomla.org/cms/report-an-issue.html for how to report and issue for the CMS Platform.\n. We'll shut down the issues after we tag and release 13.1. The changelog generator uses them.\n. I'm not sure I understand what is gained. If JTestConfig does not exist we are still going to get an error, no?\n. Need to align the description of the type param.\n. Check there are 2 spaces after $content\n. Check there are 2spaces after string\n. Check there 2spacesafter string\n. Check there are only 2spaces after mixed.\n. Check for 2spaces after string\n. Can you drop the spacing line after the @since. The last block should be all together.  Thanks.\n. For a @param, code sniffer requires exactly 2 spaces between the type and the var name.\n. Remove this spacing line.  Thanks.\n. Yes, because the platform isn't loading language files yet. Once it does, we can add those tests.\n. I think it would be better to move this line into error.php itself.  That keeps import.php as light as possible.\n. No need to update the changelog anymore.  We can get this automatically from the merged pull requests.\n. Fixed.\n. We need an @since 11.3 tag here.  Make sure you line things up properly (look at the docblock above as an example).\n. Docblock is needed for this method and the next.  The @since tag will be 11.3.\n. Code formatting is not to standard.  Look at how we do if-blocks in other parts of the code.\n. Wouldn't it be better to mock JFactory::getConfig here?  For example:\n```\n// Temporarily override the config cache in JFactory.\n$temp = JFactory::$config;\nJFactory::$config = new JObject(array('secret' => 'foo'));\n$this->assertThat(\n    JApplication::getHash('This is a test'),\n    $this->equalTo(md5('foo'.'This is a test'),\n    'Tests that the secret string is added to the hash.'\n);\nJFactory::$config = $temp;\n```\nJust a thought.\n. Minor check-style problems in this DocBlock - need 2 spaces between return and void, then line up \"string\" and \"11.3\" on that.  Also need 2 spaces after string, and two spaces after $columnAlias.\n. Check-style: Need one space after the if before the bracket.\n. Check-style: need two spaces after $column.\n. Would it be slightly better to have this?:\nif (is_dir($path) && is_readable($path))\nAlternatively we could swap to using a directory iterator like we do in JLoader::discover.  That would be much better because we can just catch an exception if there are any problems.\n. Just some minor code style issues on this line.  Can you change it to:\nelse if (JFactory::getLanguage()->hasKey($format))\nThanks.\n. Protected class properties don't have an underscore.\n. Could you add the @return void and @since 11.3 tags please.\n. Could you add the @return void and @since 11.3 tags please.\n. Setup method is not really needed in this case (not doing anything special).\n. Could you add the @return void and @since 11.3 tags please.\n. Could you add the @return void and @since 11.3 tags please.\n. Could you add the @return void and @since 11.3 tags please.\n. Setup not really needed here.\n. Because there is more than one assertion in this method, can you add the comment in the third argument, eg \"Tests for US format\", \"Tests for EPP format\", etc.  The problem is if one assertion fails, you won't always know which one it was without the comment.  Thanks.\n. Yes please. Any new work should match the current check-style rules.  Thanks.\n. Based on previous cases, this should be void (it's the __construct method).\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. Should be return void\n. I think we need to keep the JError here until we remove it next year.  The CMS will still use this version of the platform.\n. Does this change in charset affect us at all?\n. Is this going to cause a problem with backward compatibility?\n. This file needs to be removed from the branch.\n. I'd prefer you argument the existing getTableList method by adding an optional $dbName argument, or just leave this method out.\n. When do you need to use this method?\n. Why do we need a fixed command for this?\n. Can we just add this to the \"ucfirst\" method?  \npublic static function ucfirst($string, $delimiter = null, $newDelimiter = null)\nIf $delimiter is not null, explode on it (and use the utf8 version of the function).  Also, use camelcase for the name of the last arg.\n. Maybe it's just me, but I don't like the space where it applies to a negative number.\n. Should be 2 spaces after @since\n. Aye. Should remove the @throws.\n. Need to fix some code-style in this docblock:\n- 3 spaces after @param.\n- \"The\" and \"True\" in the variable descriptions must line up (padding with spaces but with a minimum of two after the variable name).\n- Need a blank comment line after @return\n- \"JTableNested\" needs to line up with \"boolean\"\n- Need to add an \"@since 11.4\" after @see (line up \"11.4\" with \"JTableNested\")\n. Curly brace must be on a new line.\n. Can you add 11.4 here please (I think that's the one check-style error) and change the at-since tag on any new methods to 11.4 please?  Thanks.\n. One minor thing:\npublic function toSql($local = false, JDatabase $dbo = null)\n. Probably isn't any use for it anymore.\n. Did you try what I suggested?\nYou don't need to use the get method because we know the class property exists.  If that makes a difference (i.e., causes the warning to go away), there is something fundamentally wrong that we are missing.\n. Fixed in my branch.\n. I missed this one in my review - I don't know the use case of this argument.\n. s/unlock/lock/\n. I get that, but I'm not sure how it can be used in practice.  Either way, would be nicer to have the variable in camel case \"autoIncrementField\"\n. You don't - it's a typo that someone, probably me, missed.\n. Because that's how it should be.  See:\nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/database/database/mysql.php#L378\n. Yes, line 407 is wrong too.\n. Why are you not supporting chaining with the return values?\n. I think you need to discard this branch and just start again.\n. Oops.  Will have to fix that.\n. After the fact, but this method doesn't return void.\nhttp://php.net/manual/en/function.include.php\nSee example 5\n. Could you put the all the PHP_EOL changes into a separate pull? I think that will fix up some problems we are having with windows testing in general and I'd like to get those in while your pull is being reviewed.  Thanks! \n. This if block can be removed because the driver will throw an exception before it gets to it.\n. This call to JLog isn't in the other drivers so let's remove it.\nStrike that - it's all over the place so let's include it in all the drivers in the same location.  Thanks.\n. Any of these checks on $db->getErrorNum() can now be dropped because an exception is already thrown.\n. @AmyStephen yes, remove to the JLog message.\n. I agree, let's not worry about the getErrorNum stuff in this pull.  As for catching, it's the responsibility of the developer to add the try-catch.  It's just something you need to learn to handle when working with an OOP framework.\n. Amy, I just noticed we are turning warnings and notices in a few places.  Can you revert those cases and I'll work out how to fix them.  Thanks.\n. Sorry, I meant \"returning\".  See how this line is return JError:: ....  So, just leave those as return JError::raiseWarning( ... ) etc.\nCan't change my username sorry ;)\n. Just a friendly follow up on how this is going. No pressure :)\n. I try to avoid abbreviations like \"repo\".  I think it's better to use the full word.\n. Just need to change to @since 12.1\n. This is a change in behavior that will affect B/C.  I think what we'll have to do is this:\nif (class_exists('JError'))\n{\n    return JError::raiseNotice(500, JText::_('JLIB_MAIL_FUNCTION_DISABLED'));\n}\nelse\n{\n    throw new RuntimeException('Send function cancelled because mail is disabled.');\n}\nIf the legacy platform is loaded, it will still return a JError.  If it's not loaded, it will throw an exception.  @return can change to \"JError only  if the legacy platform is loaded, otherwise an exception is thrown.\".\n. Actually the installer will need some more thought, because you need to rollback changes. The installer is notorious for not giving good error messages so I think we'll need a different strategy.  I think the DB error message will be enough to pinpoint failure, but rather than logging the error, I think it would be better to JLog the successes so that a developer can trace through the point of failure.  So, every time we do something, we could do a:\nJLog::add(JText::_('JLIB_INSTALLER_LOG_SOMETHING'), JLog::INFO, 'jinstaller');\ncom_installer can then add a message queue and possibly file log listener and then a big try-catch (where catch will rollback).\nDoes that make sense?\n. I would throw this as an UnexpectedValueException like this:\nthrow new UnexpectedValueException(sprint('%s::getFieldAttribute `xml` is not an instance of JXMLElement', get_class($this)));\nThat way it's easier for the developer to home in on where the error is.  Ditto for the other cases.\n. I think we can throw an InvalidArgumentException here.\n. I think we should throw an UnexpectedValueException here.\n. We should return an InvalidArgumentException in this and the next case.\n. I think we should change this to:\nreturn new InvalidArgumentException((string) $element['label']);\nThe exception type takes care of the \"invalid field\" in the former message.\n. I think this should \"throw\" and UnexpectedValueException (there is an error in the XML - do not pass Go or collect $200).\n. I think this should \"throw\" an UnexpectedValueException as well, but you can also put a type hint in the method arguments, e.g.:\npublic function test($element, $value, $group = null, $input = null, JForm $form = null)\nThis is unfortunate design in hindsight because $form should really be mandatory, but we can't do that because it's at the end of the list.\n. Let's do the class_exists('JError') trick.  If JError is present, turn the JError, otherwise throw the exception.\n. It should be fine because after validdateField is called, we do this check:\nif ($valid instanceof Exception)\nSince JException extends Exception we should be fine.  The extra arguments in JException will certainly be lost but I think we can cope with that.\n. I think we negotiated with Rouven to remove JError in 13.1 on the condition we could put it in the legacy tree.\n. Just need to fix up this return information.\n. and we should probably send the $this->ErrorInfo back as the exception message.  Nearly there :)\n. I'm not sure this change is wise.  I seem to remember some databases require quoting of numeric values if the column is a string type (DB2 maybe?).\n. I think you have space indenting on these two lines.\n. Space needed after the if.\n. This should be an InvalidArgumentException\nthrow new InvalidArgumentException('Width or height cannot be zero with this scale method.');\nAlso adjust the DocBlock.  Thanks.\n. There's still a return false in load, and the DocBlock would need to be changed.  Is there a risk the chaining here will cause a false positive in terms of backward compatibility?\n. Check is often called and return value checked.  I think this might cause a few problems ... you think?\n. Store has quite a few return false statements so I'm not sure we can chain it.\n. Same in the save method.  return false and other methods like delete.\n. Would this be better as \"Merges a new element into a source  element.\"?  Just going by the description in the next method (mergeNodes).\n. For now, would it be ok to just change this to:\nphp\n$options[CURLOPT_FOLLOWLOCATION] = (bool) $this->options->get('curl.followLocation', true);\nIf we can support it in the other transports it won't be hard to support it with a generic option.  It would be good to document the options that are available, probably in the this class constructor Docblock.\nDoes that get you out of trouble?\n. Should key be mixed?\n. Have you looked at using an SplPriorityQueue for the $priorities?  Would that work?\n. Ironically, I think your new JEvent would benefit from my proposal to change JObject.  See https://github.com/joomla/joomla-platform/pull/1673/files#diff-3 (you can use the \"properties\" of JObject as your \"arguments\").  We could also add the Countable interface to the new JObject since that is related to IteratorAggregate.  That would trim this class down a bit.\n. Could have sworn that worked before.  I'll fix that up.  Thanks.\n. You need a period at the end of your first sentence :P I'll do a scan for what I think is reasonable, but in critiquing grammar it would be helpful to make clear, unambiguous statements.  It took about ten goes to work out the correct phrasing of \"I think you mean an not and and also no period please\" to make sense of it:\nI think you mean \"an\", not \"and\", and also no period please\nwould have been better ;)\n. I'm not a fan of removing all the periods for these types of cases.  For example, say you wanted to added some extra information; you'd need to add a period to separate it.\nThe mocked database object for use by test methods. Say something else about it.\n. Need a new line before the comment otherwise the code style checks will complain.\n. Bibliographies are a good example of \"text\" that is terminated by a period yet not forming a proper sentence.  If consistency is the issue, my votes goes to using periods.  That is my practice and it's an easy rule for the developer to remember.  Anything less falls into subjective territory because punctuation rules vary even between English speaking countries.\n. There are a few trailing spaces in this file.\n. I have a feeling the length of this line is just over the limit.\n. @malkowitch if you can make this small fix we can get this merged.  Thanks in advance.\n. Still two trailing spaces in this file that I can see.\n. Probably should put the closing paren' on a new line.\n. I would change this to:\npublic function store($data, $id, $group = null, $wrkarounds = true)\njust to be completely consistent with the parent.\n. I get what you are saying, and that method has been suggested to me as well, and I certainly use it and deliberately ignore to fit the occasion.  The tests here were so trivial it's not worth breaking them up.  Whatever the case, the test case is valid in it's own right anyway (assert an initial condition; do some incremental work; assert; do final work; assert).  If the initial set is not empty, no point in proceeding.  The second assertion is more or less redundant.\n. Note to self: add php format.\n. Done. Should be ready to merge now.\n. I'd probably prefer to see this variable in camelCase $loadLanguage. We should only use underscore separators in things like column names.\n. Seems to be one too many indents here?\n. ",
    "LouisLandry": "Great stuff Jonnathan, thanks.\n. So the BC stuff is noted, but that is one really good example of the juice being worth the squeeze.  Thanks for this one.\n. I think this is a cool idea ... and I like it, but I'd really like to see Unit Tests written for new libraries that we add.  It is really the only way for us to track regressions and know that what is here actually works.  Can you work on getting at least some basic testing done for this and we'll get it merged?\n. Cool stuff :-)\n. Great work here.  Love the completeness and the thoroughness of the inline commenting.  Thanks for building out those tests too .. will make things far better moving forward.\n. So the destructor in JFTP I am happy to merge, but I don't think we've altered the minimum requirements for the platform yet from 5.2.0 ... and if that is the case I'm not comfortable making the adjustments to JXMLElement quite yet.  Hopefully that makes sense.\n. Hrm.  I'll go with the docs wiki then.  Happy to do that.  Let's just move forward.  Thanks for the thoughts guys.\n. Cool deal.  Thx.\n. It would seem that this solution is a bit cleaner and leaner than yours Ramindu.  Do you mind confirming that it solves the same problems yours do?\n. Decided we'd go with: https://github.com/joomla/joomla-platform/pull/41  which appears to be a cleaner solution.  Thanks a bunch for the work though.  We appreciate it.\n. Thanks Arlen.\n. Thanks for this Arlen.  Here's hoping this one gets fixed upstream.\n. Cool stuff.  Thx.\n. Christophe, in your issue you claim there is a performance improvement.  If it takes up 20% before, what does it take up after?  I tend to agree with Hannes here, unless we can assert that the object coming out of the stringToObject() methods is always acceptable as the internal data structure of a JRegistry object.  If that is the case then we are indeed doing double work.  Perhaps that is something worth exploring?\n. Generally speaking I think this is fine.  Are there any other areas where we are casting a JDatabaseQuery object that are problematic for you?  Additionally, does it also make sense to have a __set() method added to JDatabaseQuery?  I'm not sure that I have a well formed opinion on that.\nI'd like to get a comment from Andrew on this as well since he authored much of JDatabaseQuery.\n. Thanks Arlen.\n. Awesome.  Thanks a bunch :)\n. Thanks Geraint.\n. Awesome!  Thanks for all the work on these things. :-)\n. Your repository needs to be rebased according to: https://groups.google.com/d/topic/joomla-dev-framework/WpDQzYe5yRs/discussion\nOur apologies but the longer we waited the worse it got.\nCheers.\n. This actually means it goes the other way around.  For the 11.2 release of the platform we want to make sure that we account for anything that snuck into the CMS libraries without getting added to the platform.  As for what 1.7 will be based on I suspect it will really be 11.1 with some minor tweaks here and there.  It isn't being dense, things are a little non-normal at the moment, but after we get through august things will be much more settled and clear I think.\n. Your repository needs to be rebased according to: https://groups.google.com/d/topic/joomla-dev-framework/WpDQzYe5yRs/discussion\nOur apologies but the longer we waited the worse it got.\nCheers.\n. Your repository needs to be rebased according to: https://groups.google.com/d/topic/joomla-dev-framework/WpDQzYe5yRs/discussion\nOur apologies but the longer we waited the worse it got.\nCheers.\n. Your repository needs to be rebased according to: https://groups.google.com/d/topic/joomla-dev-framework/WpDQzYe5yRs/discussion\nOur apologies but the longer we waited the worse it got.\nCheers.\n. Your repository needs to be rebased according to: https://groups.google.com/d/topic/joomla-dev-framework/WpDQzYe5yRs/discussion\nOur apologies but the longer we waited the worse it got.\nCheers.\n. Love it!\nLet's do it as soon as 11.2 is out.  Great stuff as always.\n. Your repository needs to be rebased according to: https://groups.google.com/d/topic/joomla-dev-framework/WpDQzYe5yRs/discussion\nOur apologies but the longer we waited the worse it got.\nCheers.\n. Your repository needs to be rebased according to: https://groups.google.com/d/topic/joomla-dev-framework/WpDQzYe5yRs/discussion\nOur apologies but the longer we waited the worse it got.\nCheers.\n. Your repository needs to be rebased according to: https://groups.google.com/d/topic/joomla-dev-framework/WpDQzYe5yRs/discussion\nOur apologies but the longer we waited the worse it got.\nCheers.\n. Looks like a great idea.  @pasamio, you have any objections to this?\n. you forgot to jimport JInput.\n. Hey Amy,\nI'm not sure what the specific problem is on this.  Can you give me an example of how this is causing problems?\n. OK, thanks a bunch for the explanation.  I think i'm gonna just close this one for now.  I'd rather spend a little time making sure the impact before I change something like this.  Thanks though!\n. There were issues and so we made a better one :-)\n. Rock and roll :-)\n. So, I pulled this, but please in the future make your pull requests against staging instead of master.\n. Yes please. Thanks.\nOn Jul 29, 2011, at 4:48 AM, realityking\nreply@reply.github.com\nwrote:\n\nAh sorry, forgot all about that. Should I change the two other pulls?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/147#issuecomment-1680606\n. I think that makes sense Ian, are there any other characters that you think would be important to have?  I mean ultimately the method is designed to provide a least common denominator across platforms for a safe path.  That being said the colon is probably not a great thing to have in that character class anyway.\n. @pasamio can you take a look at this?  It seems like a great idea, but I'd like you to give it a once over.\n\n@vietvh any chance I could get you to run the code sniffer over your pull and make sure you aren't violating any of the existing sniff rules?  Thanks a bunch for the work!\n. Let's just pull everything against staging for consistency.  We may want to create some codesniffer rules against JS and such in the future and it is best to just keep it simple and the same IMO.  Great stuff as always sir.\n. So I get the idea, and I don't disagree with the concept, but lets talk through a better solution here.  I really would rather not add another static method to JURI, and also you don't need to go through JBrowser to get that SSL information.\n. Awesome yet again Rouven.  Can you change the deprecated tags to mark deprecation at 12.1 so that people know that is when we'll remove it.  Love the work, thanks!\n. Can you send this against staging instead of master please? :-)\n. Hi Nic, thanks for the fix, but can you re-send this pull request against the staging branch instead of master? You can read https://github.com/joomla/joomla-platform/wiki/Contributing-to-the-joomla-platform for more info on that.  Thanks again!\n. LOL ... this one is still against master :P  I can't tell you the number of times i've done that.\n. w00t!\n. This has been fixed along the way.  Closing it.  If we have a regression feel free to re-open.\n. I'd much rather see this approached simply by deprecating the addIncludePath method and using JLoader::discover() instead.  That will give us a much better ability to override classes and provide a much cleaner loading mechanism as well.  http://api.joomla.org/Joomla-Platform/JLoader.html#discover\n. The issue is that the JTable bone is connected to the JUser bone ... and the JUser bone is connected to the JSession bone... and in a CLI application where you may want to edit/store content but don't have a session this causes problems.  We need a way to inject a JUser object into JTable classes  to be used instead of calling JFactory::getUser().  Perhaps something like JTable::setUser(JUser $user).  It can still default to asking the factory, but there should be an option to inject the user dependency.\n. Needs to be updated again so it can be merged.  Apologies :-)\n. Awesome .... thanks for that, but can you remove the example daemon script from your branch so that I can just pull the fix?  If I'm not mistaken the example is in another of your branches anyway.\nCheers!\n. Closing this one since you opened another request against staging.\n. No one ever wrote them :-)\n. Awesome.\n. Hi Rune, if you don't mind take a look at: https://github.com/LouisLandry/joomla-platform/tree/rune_media\nI pulled your work on top of the latest master and did some work to get it pretty well covered in unit testing.  This one required a little creativity to test, but JImage is over 80% coverend now and looks to work very well.  If you are cool with those changes and such I'll ask someone else to review it and I think we can get it merged in soon.\n. OK, I created a separate pull request for this so going to close this one.  Thanks for all the help on this one Rune ... really appreciate it.\n. I'm not a big fan of this branch.  IMO, the concept described here violates the separations of concerns.  A view is not supposed to in any way manipulate the state in a model.  Have a look at http://www.phpwact.org/pattern/model_view_controller for some pretty good reading on the concepts.  Specifically a brief discussion about this relationship at http://www.phpwact.org/pattern/model_view_controller#model_view_relationship.\nIt isn't the job of a view to set \"options\" as it retrieves information from the model.  The model should simply be a readonly object to the view.  I believe it is the job of the controller to set whatever options are relevant to the model so that things are executed and rendered properly.  If there are two separate data structures that can be returned by a model, then that model should implement getters for those different data structures.\nI understand the desire to make things more flexible at every turn, but sometimes things are structured in a certain way for a reason.  It wasn't an oversight that arguments can't be passed into the model getters with the Joomla MVC.  It is a way of enforcing that separation between domain logic and presentation logic.\n. I understand your situation very well, and I have come across it in many situations.  There are two approaches that I've taken.  \nIf it is an either/or case where you only will ever want one or the other, then you can use the controller (which is designed to set state in the model based on the input/request) to set something in the model to make it behave as you want -- either getting everything or just the published methods.\nIf it is an and case where you want to be able to get both a list of everything as well as a list of published only methods, then I add those methods explicitly as you listed above: getPublishedOnly, getEverything.  This actually creates a more expressive and explicit public API for your model, and will be easier for people to know exactly what they are getting when they make a call into your API.  Even someone who doesn't understand code well.\nI do understand your frustration -- I've been there.  That being said I also believe firmly in the separation of presentation and domain logic, and lots of experience has reinforced that belief.\n. This has been sitting for over 2 months without update and is not currently mergeable.  I'm going to close it for now.  If you want to continue the discussion please rebase the branch against current master and re-open the pull request.  Cheers.\n. I'm going to close this since we don't have good information on it.  In the future please add more information on what the problem is so that we can diagnose.\n. JRequest has been decoupled from JSession which was the symptom here.  If you run into this issue again please feel free to re-open or open a new issue.  Thanks!\n. We should really consider finding/writing a sniff that will handle this sort of alignment.  As @eddieajau mentioned, what was done with respect to all the files was in the name of consistency and having a solid baseline.  We also have much to do to build out a great set of sniffs and would certainly welcome the help if you want to participate @WebMechanic.\nAdditionally, I've seen MUCH more disgusting code in the last 20 days or weeks than what was produced by the auto-formatter.  I'm absolutely envious if you haven't.\n. Christophe, is this really what you were wanting to do?  Remove the rel tag and associated JSON object with relevant data for the list item?\n. Would you be interested in helping us move to use JLoader::discover() instead of this include path stuff?  That would be a much cleaner and saner solution moving forward.\n. I'd much rather see this feature not depend upon a static method like that.  I'd much rather it be a configuration value that can be interacted with in other ways.  In JWeb I added: https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/application/web.php#L1160 which attempts to solve the same problem you are trying to solve here but by using a different mechanism. \n. Heh.  Happens to all of us from time to time. :)\n. Fantastic!\n. So I think if you look at the current version of this method in staging: https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/database/database.php#L161\nThere are really only three lines that need to change here: 176, 188 and 195.  Every other aspect of this method should work very well as expected.  The form field I am fine with, but as for the JDatabase::getConnectors() method I don't think it requires memory caching or that much change.\n. I feel like this may be better suited for it's own repo.  I love seeing tools like this coming to life, and I am incredibly supportive... but I'm not sure that this really belongs in the main repository.  What do you think?\n. This rocks.  Thanks a bunch!\n. I actually think I like (a) better, and agree fully that all of the multiline stuff should be consistent regardless of which we choose..  Also, I'd like to remove the \"file is being conditionally included\" sniff altogether.  I don't think there is a cut and dry way to verify what is good/bad there so it doesn't make sense for the code sniffer to look for it.\nThanks a ton for the work on these things.  It makes a huge difference.\n. These changes appear to also have been in a separate pull request that was pulled in.  I'm going to close this one since it seems to be unnecessary.  If there is something I missed please feel free to open a new request.\n. Great point Hannes.  I have some other ideas I'm gonna exercise on this thing too.\n. OK, I've restructured a few things and am now using the SPL exceptions where they seemed most appropriate.\n. You absolutely ROCK!\n. Why even have JFTP extend JObject?  Just remove that dependency and if there is anything it actually uses (I doubt it) ... move them into JFTP itself.  There is absolutely no reason to extend JObject there, we are on php5+ now.\n. Great catch Andy!\n. This has been fixed.\n. It doesn't add to the coverage unless you actually test the class.  And the way it measures that is whether or not the code in the class was executed.  Just adding skeletons is helpful, but it doesn't improve test coverage.  I'll take a look at testing this soon and we can see about pulling it in.  Thanks!\n. This has been sitting for over 2 months without update and is not currently mergeable.  I'm going to close it for now.  If you want to continue the discussion please rebase the branch against current master and re-open the pull request.  Cheers.\n. Hi Peter, interesting problem.\nI'm not sure I'm clear on it though, because you are referencing two classes that don't really have a relationship with one another.  JForm and JParameter don't share any members or ancestry.  If there is a problem with JForm, it really (to the best of my knowledge) couldn't be caused by something in JParameter.\nAdditionally, I don't know that we want to really perform any modifications to a deprecated class like JParameter.\nFinally, couldn't you solve your problem by having your class setup with the autoloader by using JLoader::register();?  If your class is already available, then it won't even try to search for one.  Simply do something like:\nphp\n<?php\nJLoader::register('JFormFieldB_Categories', '/path/to/categories.php');\nJust a thought.\nI'm quite aware of the limitations of that JPath::find() logic and is one of the reasons we've included the new JLoader::discover() method in the platform.  Hopefully we can get all of the relevant classes using it sooner rather than later.\n. No, I agree with you.  I was giving you a workaround for now.  Ultimately you are correct that the problem needs to be solved more elegantly and at a lower level.  Class loading is something we definitely need to be more consistent on, and I don't think there is any disagreement that it should be handled by JLoader, it is just a matter of when it is all gone through and cleaned up to do so.\n. I'm generally fine with that provided that it works and we have a unit test that proves that it doesn't cause a regression.  As for your former question I don't know is the best answer I can give you on time frame.\n. fork the platform, write it up, and send a pull request :) \n. Best I can tell this is all good.  Going to merge it now.  Thanks Peter.\n. Well done. :-)\n. Gracias.\n. Deprecated and replaced.  In doing so I did go through and clean this up.  Thanks for reporting it though Amy.\n. Nope, this is done this way on purpose.  The magic __get() method allows for read-only access to these properties without allowing anyone to write to them.  This is an example of PHPStorm just not understanding the logic it's looking at.\n. OK, I've made some adjustments based on comments here and conversations elsewhere.  Essentially I've made the method private and added a JLoader::setup() method which is called from the Joomla Platform import script that sets up the autoloader callbacks.  I've also removed some unnecessary checks since PHP automatically takes care of those things as it iterates through the autoloaders and the _autoload() method cannot be called from outside of the class anymore.\n. Great!  Thanks Hannes.\n. Thanks a ton Rouven!\n. We could always just change protected $_foo to protected $foo and create a public function __get() / __set() that handles the deprecated usage.\n. I'm fine with this.  Will let others comment.  In fact I'd like to nuke the entire base package.\n. I'm with @eddieajau on this one.  Good find though, and good thoughts on the fix.\n. Any chance I could get you to write a unit test for this so that we make sure we don't get any regressions?\n. This has been sitting for over 2 months without update and is not currently mergeable.  I'm going to close it for now.  If you want to continue the discussion please rebase the branch against current master and re-open the pull request.  Cheers.\n. Is this going to allow for people to have assignment operations line up?\nphp\n$foo    = 'bar';\n$foobar = 'snafu';\n$bar    = 'high';\n?\n. Great, thanks.  Is it worth going over things and also fixing all the new issues here?  There appears to be at least one error.\n. I really like this approach.  Hopefully I can take a deeper look at it soon and get it merged in, or one of the other maintainers can do the same sooner than I can get to it.  I just have limited time this week.\n. I dig it.  Thanks.\n. This is fantastic.  Can you give me an idea of what you were running into problems with in the form package?  I may be able to help.\n. Ah.\nThat probably needs to be rewritten to look more like:\n<?php\n    // Attempt to validate the field.\n    try\n    {\n        $this->validateField($field, $group, $value, $input);\n    }\n    // There was an invalid field due to unexpected value, etc.\n    catch (RuntimeException $e)\n    {\n        array_push($this->errors, $e);\n        $return = false;\n    }\n    // There was a problem actually validating the field.\n    catch (LogicException $e)\n    {\n        JError::raiseWarning(0, $e->getMessage());\n        return false;\n    }\nWhat this would require is that form fields actually throw exceptions instead of returning them.  I don't know that we can just do that right now, but we can certainly mark some stuff deprecated and start handling that case.\n. Yep, this is good stuff Julio.  The tests don't appear that they will work because you have things like: \n/**\n * Method to test JStringInflector::countable().\n *\n * @return  void\n *\n * @dataProvider  isCountable\n * @since   11.3\n */\nand the actual data provider method is:\npublic function seedIsCountable()\nFix that and we are ready to merge I believe.\n. When running the tests for the string package on this branch I get:\n```\nFFF............................................................  63 / 184 ( 34%)\n...................................SSSSSS.....SSSSSSSS......... 126 / 184 ( 68%)\n..........................................................\nTime: 2 seconds, Memory: 12.25Mb\nThere were 3 failures:\n1) Warning\nThe data provider specified for JStringInflectorTest::testIsCountable is invalid.\nMethod isCountable does not exist\n2) Warning\nThe data provider specified for JStringInflectorTest::testToPlural is invalid.\nMethod toPlural does not exist\n3) Warning\nThe data provider specified for JStringInflectorTest::testToSingular is invalid.\nMethod toSingular does not exist\nFAILURES!\nTests: 184, Assertions: 169, Failures: 3, Skipped: 14.\n```\nYou need to fix that up.  Also, after running the code sniffer on the string package I get:\n```\nFILE: ...ents/Code/Joomla/Platform/sandbox/libraries/joomla/string/inflector.php\n\nFOUND 2 ERROR(S) AFFECTING 1 LINE(S)\n247 | ERROR | Expected 1 space before \"==\"; 0 found\n 247 | ERROR | Expected 1 space after \"==\"; 0 found\n\nTime: 1 second, Memory: 17.75Mb\n```\nThat will need to get fixed up as well.  Otherwise I think this is good enough to get merged.\n. Let's keep that a separate topic from this pull request.  There is really no need to put them together that I can see.\n. Hotness.\n. Man, this is awesome stuff.  I'm not a huge fan of the @covers stuff or some of the other assorted things that the skeleton generator spits out, but this is fan-damn-tastic.  Thanks a ton!\n. Thanks for taking the time to submit this.\n. Let's pull this right after 11.4 has been tagged... what do you think?\n. This looks good to me.  @pasamio would you take a look at this and pull it if you feel comfortable with the implementation.  Thanks a bunch @vietvh.\n. Why would this go into the component helper class?  Also, if we were going to add this I'd really like to see some unit tests to ensure that the code works as expected into the future --- and to document expected behavior.\n. That's valid as well.  I am happy to merge this if that is the approach we take.\n. The only issue I see is that what we are talking about (filtering text based on user/application settings) has nothing to do with a component.  Granted it is a common place to put that logic, but I would expect that to be either tied closer to the user object, or the application object.  Again though, I don't have a problem with it being here because ultimately this is a construct of the CMS and I expect that this class will end up out of the platform and into the CMS in the near future.\n. Some since tags need to be adjusted for 11.4, but this looks great. \n. Fixed in a separate pull.\n. So there are several things at play here.  Firstly, @stutteringp0et my apologies for the non-responsiveness.  As @elinw points out we've not been too good about keeping track of the issue list.  Secondly, one of my major problems with the Joomla caching package is that it tries to do entirely too much.  In doing so it creates a whole world of problems that are really challenging to work around.  So challenging in fact that we have a actual class methods like setWorkarounds, etc.\nMost of the maintainers (I can't speak for all) are looking for a more simplified approach to caching where we really only deal with get() and set() kinds of things, and leave the application logic to the application.  Because of this I'm much less likely to make a change to an existing \"legacy\" section of the code and potentially introduce regressions.  That being said I'd be happy to review a pull request if any of you find a relatively clean way of dealing with this problem.  It just isn't going to be more of a priority than actually reworking the cache package itself.\nI'm going to close the issue, and if any of you want to take a crack at a pull request to fix this please feel free.  Again, I'd be happy to review it.\n. This has been sitting for over 2 months without update and is not currently mergeable.  I'm going to close it for now.  If you want to continue the discussion please rebase the branch against current master and re-open the pull request.  Cheers.\n. So we've adjusted it all to use the autoloader now so it is very easy for developers to add their own filters, etc.  Thanks for the thoughts!\n. This has been sitting for over 2 months without update and is not currently mergeable.  I'm going to close it for now.  If you want to continue the discussion please rebase the branch against current master and re-open the pull request.  Cheers.\n. This has been sitting for over 2 months without update and is not currently mergeable.  I'm going to close it for now.  If you want to continue the discussion please rebase the branch against current master and re-open the pull request.  Cheers.\n. This has been sitting for over 2 months without update and is not currently mergeable.  I'm going to close it for now.  If you want to continue the discussion please rebase the branch against current master and re-open the pull request.  Cheers.\n. This has been sitting for over 2 months without update and is not currently mergeable.  I'm going to close it for now.  If you want to continue the discussion please rebase the branch against current master and re-open the pull request.  Cheers.\n. This has been sitting for over 2 months without update and is not currently mergeable.  I'm going to close it for now.  If you want to continue the discussion please rebase the branch against current master and re-open the pull request.  Cheers.\n. Why not?\n. This is kick-ass. :+1:\n. Thanks a bunch for this work you are doing Michael.  It's very much appreciated -- and we'll get through the other requests as soon as we can.\n. Thanks a bunch!\n. This appears to be all tidied up so I'm closing it.  Thanks a bunch @fastslack \n. It is expected behavior that the installer remove media folders that it creates during an uninstall.  If you are looking for some sort of additional feature to allow the installer a flag to choose not removing a media path, then you should submit that to the CMS feature tracker.  The installation libraries, while they exist in the platform today, are being relocated into the CMS repository because they are very CMS specific as they are built now.\nThanks!\n. @ebitester1 would you be interested in creating a pull request for this?  Ideally we could get a couple of unit tests to make sure we don't have any regressions as well.\n. Ya, I'd love to review a pull request on it if you feel like making that change.\n. @okonomiyaki3000 I think this is a great idea, and I would go with option B for simplicity.  If you put a pull request together I'll happily merge it.\n. Can you add a JLog::add() entry in the deprecated/moved JApplicationHelper::parseXMLInstallFile so we can get this thing merged?\n. Can you give me a couple of examples that will fail with the current regex and pass with the updated one?\n. Well, that's an interesting example actually.  A class called className wouldn't pass our coding standards for class names, so it wasn't considered in this way.  All of our classes have a prefix capitol J then camel naming starting with a capital letter such as JModel, JController, JApplicationWeb, etc.\n. Don't be sorry.  Thanks for caring enough to bring it up and discuss it.  We need more people like you to do exactly that.  It also reminds me that I wanted to add 0-9 to the first character class in that regex.\nThanks again.\n. Would you mind rebasing this?\ntry: git pull --rebase git://github.com/joomla/joomla-platform.git master\nThat will likely clean up the odd file changes and also get rid of the merge commits.\n. OK, I'll take a look when I get home.  @eddieajau would you take a look at the access changes for me.\n. If you fix up the checkstyle issue I'll merge this.\n. Can you please drop the dependency on JObject?  There is absolutely no reason for it to exist.\n. Very nice Michael... very nice.\n. Christophe, would you mind rebasing this?  That is a ton of merge commits for not a lot of real commits. :-)\n. Beautiful.  Thanks guys.\n. You can't reference $this in a static function.  Also, it is not a good trend to make these things static when they don't have to be.  A better way to solve the strict error would be to not call the methods statically.\n. This still isn't tracking file history appropriately.  I'm gonna take a crack at it and see if we can get that done a little better.\n. :heart:\n. @chdemko You forgot to remove the getPages() method from JDatabaseDriver.\n. Well, I purposefully didn't redesign the tests because I wanted to ensure as much backward compatability as possible, and one great way of doing that is to maintain the same tests and swap out the implementation.  That's what we have here.  I think once we get this thing merged we can do a whole lot of things to improve upon stuff ... that's always the case, but that was my rationale on this for now.\nQuite honestly when it is time to redesign I'd like to get rid of the inspectors all together and use reflection for accessing non-public members.  I'd like to add new tests for classes that have been rearranged as well.  I do think however that it makes a lot of sense for us to keep the old DB tests around in as original a format as possible until the 12.1 release simply to ensure that we don't go and break backward compatibility on a fundamental part of the code base more than we have to.  And to be honest, referencing old class names is a part of that in my opinion.\n. Good catch @chdemko.  @mbabker, I pulled in your fixes.  Thanks.\n. OK, that is much better.  Thanks for the reminder @jonnsl \n. @ianmacl The issue is that the exporter needs more than just the name of the field to put together an XML document describing the schema.  By default the second argument is true which means that the result will not include whether the field is nullable, what the default value is, etc.  Explicitly setting the second argument ($typeOnly) to false, we get the rest of the field information out of the DB, which allows for correct XML being generated.\n. This stuff looks really good Gabriele.  \nI'd like us to avoid creating things like:\ntests/includes/JoomlaDatabasePostgresqlTestCase.php\ntests/includes/JoomlaPostgresqlTestCase.php\nWhy do we need those things?  That sort of defeats the purpose of the abstraction layer unless I'm missing something.\n. OK, I guess that's how it is for now, but I think we need to rethink how this part of the platform is tested long term.  That doesn't seem like it's built well enough if it requires extended classes like that.\nAs an aside, I installed Postgres on an Ubuntu VM I have (Postgres 8.4 was the default) and ran across a singular error.  \n```\nlouis-laptop:sandbox louis$ phpunit tests/suite/joomla/database/\nPHPUnit 3.6.10 by Sebastian Bergmann.\nConfiguration read from /Users/louis/Documents/Code/Joomla/Platform/sandbox/phpunit.xml.dist\n...............................................................  63 / 391 ( 16%)\n..................................................III.I.....II. 126 / 391 ( 32%)\n.......S....................................................... 189 / 391 ( 48%)\n..............................................II....I..I.I...I. 252 / 391 ( 64%)\n..II......II.III......I....II...II......II.II........I..E...I.. 315 / 391 ( 80%)\n.............................I............S...SSSSSSSSSSSSSSSSS 378 / 391 ( 96%)\nSSSSSSSSSSSSS\nTime: 12 seconds, Memory: 32.50Mb\nThere was 1 error:\n1) JDatabasePostgresqlTest::testGetTableSequences\nRuntimeException: JLIB_DATABASE_QUERY_FAILED\nERROR:  column info.start_value does not exist\nLINE 1: ...me\" AS \"column\",\"info\".\"data_type\" AS \"data_type\",\"info\".\"st...\n                                                             ^\nSQL=SELECT \"s\".\"relname\" AS \"sequence\",\"n\".\"nspname\" AS \"schema\",\"t\".\"relname\" AS \"table\",\"a\".\"attname\" AS \"column\",\"info\".\"data_type\" AS \"data_type\",\"info\".\"start_value\" AS \"start_value\",\"info\".\"minimum_value\" AS \"minimum_value\",\"info\".\"maximum_value\" AS \"maximum_value\",\"info\".\"increment\" AS \"increment\",\"info\".\"cycle_option\" AS \"cycle_option\"\nFROM pg_class AS s\nLEFT JOIN pg_depend d ON d.objid=s.oid AND d.classid='pg_class'::regclass AND d.refclassid='pg_class'::regclass\nLEFT JOIN pg_class t ON t.oid=d.refobjid\nLEFT JOIN pg_namespace n ON n.oid=t.relnamespace\nLEFT JOIN pg_attribute a ON a.attrelid=t.oid AND a.attnum=d.refobjsubid\nLEFT JOIN information_schema.sequences AS info ON info.sequence_name=s.relname\nWHERE s.relkind='S' AND d.deptype='a' AND t.relname='jos_dbtest'\n/Users/louis/Documents/Code/Joomla/Platform/sandbox/libraries/joomla/database/driver/postgresql.php:600\n/Users/louis/Documents/Code/Joomla/Platform/sandbox/libraries/joomla/database/driver.php:1086\n/Users/louis/Documents/Code/Joomla/Platform/sandbox/libraries/joomla/database/driver/postgresql.php:456\n/Users/louis/Documents/Code/Joomla/Platform/sandbox/tests/suite/joomla/database/database/JDatabasePostgresqlTest.php:537\nFAILURES!\nTests: 391, Assertions: 1177, Errors: 1, Incomplete: 31, Skipped: 32.\n```\nIs this a postgresql version difference perhaps?\n. I'm not sure yet what has caused the merge error, but GitHub shows the branch as not mergable as well.  \nAs for PostgreSQL 8.4 being old, that may be true.  It was originally released July of 2009.  The minimum MySQL version we support is 5.1 however, and it was first released November of 2008.  Is the PostgreSQL 9 series that much improved that we want to not support 8.4 even though it is still officially still supported by the PostgreSQL project?  Just wondering what your thoughts are.\nI'll take a look at the branch later today and see if I can figure out what is causing the problems.\n. Thanks!\n. Thanks a bunch for getting this cleaned up and in a workable state.\n. Two things. 1. Can we move this lib to the CMS tree?  2. Can you write a small unit test to make sure we don't get another regression?\n. Ok, this has been simplified greatly.  Looks good.  Thanks Rouven.\n. Convention-wise we've always had ->def() for this behavior.  Not that I think that's necessarily better, but it is worth noting.\nAlso, it would be great to add a couple of small unit tests just to make sure the functionality doesn't get lost somewhere down the line.\n. Closing this since the unit testing tree has been completely revamped.\n. @andreatarr, I don't think there is a singular answer to that question.  I would imagine that certainly applications could be written in such a way as to use the platform with the legacy libraries or not, but in some cases it may not work.  \nThe obvious example to me would be something like reworking our MVC classes.  Most of us would agree that there needs to be a bit of a rethink of some of those things, and I know that some preliminary work has gone into that by several parties.  Obviously we'd want to have as much API compatibility as possible, but sometimes you just have to make a breaking change for the sake of a better solution.  If that were to happen then (for example) the JController class and children as we know them would live in the legacy tree, and the new JController class would live in the standard platform tree.  It's hard to know how easy or hard it would be to write code to work with either depending upon the situation without knowing the specifics of the differences.\n. @AmyStephen, I never mind questions so long as the discussion doesn't devolve into pointless bickering and posturing.  That said, your questions are great.\nYou are correct in your assertion with respect to why the split was put in place, and my goals around it.  The expected process for the CMS (or any downstream application) is as you suggest, to select a platform version for a given release and stick to it.  Whether or not the CMS project wants to update that within STS releases is entirely up to them.\nTruth be told this change is as much for us as a platform team as it is for downstream users.  We want to be able to move forward quickly.  We also want to maintain as much backward compatibility and change management as is reasonable.  We won't always succeed in making people happy, but we can strive to be thoughtful and considerate to as many users/developers as possible.  I believe this will allow us to live up to our own expectations around backward compatibility while enabling us to really make innovative and impactful improvements to the platform.  Simply, it's a little breathing room.\nI personally am not at all supportive of the platform maintaining long term support for versions.  I think (at least for me) it is counter to what I want to drive with the platform.  That being said, downstream projects could provide that level of support and we'd certainly try to be helpful in situations where its needed.  Hopefully that answers your questions.\n. Hi Gabriele,\nI spent some time last night and rebased your branch over master, along with squashing all of your commits into one.  In doing this I also moved things around quite a bit to line up with the current test scaffolding.  We still have work to do generally on making the joomla testing tree more robust and such, but that is a much larger task.\nYou can see my work here: https://github.com/LouisLandry/joomla-platform/compare/merging\nThe one thing I didn't do was really test the PostgreSQL driver itself.  I didn't have a postgres instance setup and didn't wanna go through that last night.  Every other test case class passes completely though, and it is all lined up with how things are in the test tree now.  You've done a masterful job with the postgresql support... well done.  If you are OK with what I've done here, you could pull it down, make sure the driver tests are working (You'll need to uncomment the postgresql DSN string in phpunit.xml in the repository root), and submit it as a pull request.  If you want to simply use it as a reference to get everything lined up yourself that's fine as well.  I just know that you've been working on this a long time and trying to get it done against an ever moving target.  I know that can be frustrating, so I wanted to put in some effort to help you out.\nWe are very close.\n. Yes, I know it's frustrating.  You had the unfortunate situation of coming in with this at a time when the database package was being re-thought/re-built and also the unit tests being reworked.  Interestingly, the entire year before that part of the codebase was very stable and would have been easier to do probably.  I don't know.  Ultimately it is what it is, and hopefully we are in a better place moving forward.\nI'm not aware of a problem with the access package stub off the top of my head, but all the tests are running and passing for me now.\n. Everything except the driver tests themselves (which actually connect to pgsql/mysql/etc) are in the main test suite: tests/suites/unit/joomla/database/database/.\nThe driver test itself is at: tests/suites/database/driver/postgresql/JDatabasePostgresqlTest.php.\n. OK, merged the other one.  Thanks a ton.\n. Thanks Amy.  Good catch!\n. Code coverage is not greatly reduced at all.  \nWith this pull request coverage for elements comes out to roughly 43.5%.  That is actually slightly lower because Jenkins/jools hasn't been setup with the constant or environment variable to run the JHttp tests.\nCurrently (without this pull request) coverage for elements comes out to roughly 44.3%.  That includes the JHttp tests.\nThere were a lot of unnecessary duplicate assertions that were removed as part of a reworking of the tests for JTableNested as well as some general cleanup.  I'm quite confident there is an improvement to the quality of our tests and coverage, not a loss.\nI'm really excited about the lower barrier to entry for people to run the unit tests.  The only requirement now is having SQLite3 (which is available by default for PHP 5.3+ http://www.php.net/manual/en/sqlite3.installation.php) installed for PHP.  In fact, you don't even have to have MySQL installed to run the test suite.\n. I've got some more work to do on this to increase the stability and overall robustness of our unit tests.  I'm going to close this for now, since there is no reason to do it half-way.\n. Actually, the real reason it was done the way it was done ... and generaly speaking either are valid is because of the extended classes.\nI didn't think it was a good idea to do something like\n``` php\n<?php\nclass JDatabase extends JDatabaseDriver {}\nclass JDatabaseDriverMysql extends JDatabase {}\nclass JDatabaseDriverSqlite extends JDatabase {}\n```\nMeanwhile, we'd have to do the following for backward compatibility classes:\nphp\n<?php\nclass JDatabaseMySQL extends JDatabaseDriverMysql {}\nclass JDatabaseSQLite extends JDatabaseDriverSqlite {}\nAside from the somewhat awkward hierarchy established there, it means that I now have to edit N files for N drivers when it's time to drop JDatabase.  Doing it the way we've done it means that we edit one file and drop one file: JDatabaseDriver and JDatabase respectively.  Ultimately the way it's done now seemed cleaner.\n. @danyaPostfactum This is no longer mergeable.  Can you rebase this so we can take another look?  @realityking would you have another look at this and talk it through with the CMS folks as well so we can make a call?\nI'm going to close this for now.  @danyaPostfactum once you have rebased this so that it will cleanly merge again please re-open it so we can finish the discussion.  My apologies for the delay in getting a decision made on it.\n. @gpongelli You'd just create a new pull request.  I'd really rather find a way to not have separate drivers for database versions if we can avoid it though.\n. Ofer, two commits for one net line change seems unnecessary.  Would you mind rebasing this and we'll get it merged.\n. Thanks!\n. @oc666 I'd love to see this get merged.  Would you mind putting together a few test cases so that we can verify that everything works as expected?  I do think that we may have an issue with multibyte characters, but trust that you can/will test that out for us.  I'm going to close this until we get a couple of tests to ensure everything works and we don't have any regressions down the road.  Please re-open this when you get that sorted out.\n. Awesome.  Thanks!\n. Thanks!\n. @piotr-cz would you mind rebasing this so we can potentially getting it merged?  I'm gonna want to give it a test drive for sure, but I'd love to have consistency here.  Can you think of a way we might be able to test it?  \nNote: I'm closing this until it is mergeable again, not because I'm rejecting the work.  Please re-open the request when you get it ready to go.\n. This has been revamped to use a JHttpFactory class for wiring up the transport so I'm gonna close this.\n. Thanks!\n. Move the file if it is going to continue to be called JGrid IMO.  I'm tempted to say move that to the CMS tree as well ... but I'm not quite sure yet.\n. Thanks!\n. Lovely.  Thanks Amy.\n. In general this is great progress Amy.  I left you a couple of line notes with respect to docblocks.  That'll need to get rinsed and repeated all over, but the work is good.  Thanks.\n. Thanks Aaron!\n. What are the odds of getting you to write unit tests for this?\n. This was merged manually.  Thanks Amy.\n. I'd vote for closing this one for now.  I don't know that I think it makes sense to be throwing exceptions instead of returning false in these cases, and there isn't a real issue needing to be solved here.  Let's think it through fully before we make a move.\n. @Buddhima the library in question has been removed from the platform and added to the CMS tree.  I'd suggest you submitting this to the CMS repository since it is a very smart and correct change in behavior.  I'm closing this since it is no longer relevant for the platform.  Apologies for not getting to it sooner.\n. This looks good.  @pasamio would you mind looking over this again?\n. Thanks!\n. I'm assuming you are referring to the MVC classes.  It's been on our roadmap for a while https://github.com/joomla/joomla-platform/wiki/Roadmap to revamp the MVC foundational classes.  What we have is very much coupled to the CMS and it's conventions.  There are at least 3 different incarnations of simplified MVC classes that I'm aware of.  My hope is that we'll get something in before the 12.1 release, but if not there's no harm because you couldn't use the current ones without loading the legacy tree anyway.  \nI've got a set of MVC classes that we've used at eBay that we'll be publishing in the next day or so for review if nothing else.  They are very basic and not prescriptive by design so that any application can take them whichever direction it wants to go.  I've no doubt that something will work itself out though.\nAs for the other classes, they are obviously tightly coupled to the CMS and really didn't belong in the main Platform tree.\n. @gnomeontherun I personally feel that the most foundational definition of what constitutes a model, view or controller is defined by the interface not an abstract base class.  To me, the abstract base is obviously something to be built on, but shouldn't be the only thing that is considered a model.  Let's look at a set of examples and hopefully you'll start to see my point of view.  I don't claim that it's the only one, but it's the one I hold for now and why it's done this way.\nLet's assume that we have a library Foo that we want to use as a model in our MVC based application.  In some languages we could use multiple inheritance to achieve this by having our model class extend both the base model class as well as Foo.  There are several ways of approaching this, so let's start with the basic case using JModelInterface as the interface.\nCase A\nphp\n<?php\nclass MyModelFoo extends Foo implements JModelInterface\n{\n    // ...\n}\nSo this will structurally work for sure, but I personally think it's a bit convoluted to ask if MyModelFoo is an instance of JModelInterface.  I think it makes more sense to ask if MyModelFoo is an instance of JModel.  This goes back to my belief that the most foundational definition of a model class is its interface, not its abstract implementation.\nCase B\nphp\n<?php\n// Case 3\nclass MyModelFoo extends JModel\n{\n    // ...\n    public function setFoo(Foo $foo)\n    {\n        $this->foo = $foo;\n    }\n}\nAnother option would be to use our friend composition as above.  Basically in this example I get to ask if (MyModelFoo instanceof JModel), which is much simpler and more clear to me.  What I don't get, however, is unfettered access to protected members of Foo.  That might be OK, but it also might be problematic.  Ultimately we don't know enough about Foo to know whether or not that might be important.  Perhaps Foo is abstract, or perhaps it is simply meant to be customized in a child class.  Another thing I don't get to do is ask whether or not (MyModelFoo instanceof Foo)  There are ups and downs to this, but ultimately if we choose the following Case C we could still take this approach of composition for Foo if it is appropriate.\nCase C\nphp\n<?php\nclass MyModelFoo extends Foo implements JModel\n{\n    // ...\n}\nHere my model has access to all protected properties and methods of Foo and basically allows me to turn Foo into a model with very little trouble.  Additionally I can easily and semantically ask whether or not MyModelFoo is a JModel (MyModelFoo instanceof JModel) as well as ask whether or not MyModelFoo is a Foo (MyModelFoo instanceof Foo).  To me this is the best of the scenario.\nUsing one of @eddieajau's examples we could say the same thing for JDate instead of Foo.\n``` php\n<?php\nclass MyModelDate extends JDate implements JModel\n{\n    // ...\n}\n$isModel = (MyModelDate instanceof JModel);\n$isDate   = (MyModelDate instanceof JDate);\n```\nNow my instances of MyModelDate can be used anywhere that a JModel or a JDate are expected, which is pretty cool.\nThere are lots of fun discussions about interface naming conventions out there.  The three most common are what I'd call hungarian notation-esque IModel with accompanying JModel, JModelInterface with accompanying JModel and JModel with accompanying abstract implementation (JModelBase or JModelAbstract or JModelImpl, etc).  We can get into a deeper conversation on why I prefer the last convention, but I don't know that it would be best done in this venue.  Either some other channel or over beers at JAB works for me. :)\nThe reality here is that the Model, View and Controller interfaces and classes proposed here are very basic.  They are done that way on purpose actually.  It's my belief that these classes should be as simple as they can be, and let more feature-rich child classes be built at an application level.  If we want to entertain more specific child implementations down the road that's fine, but the foundation implementations should follow a famous quote by Einstein, \"Everything should be made as simple as possible, but not simpler.\"\n. @nikosdion For naming convention commentary take a look at my previous answer to @gnomeontherun.  I share your concern for backward compatibility.  It is one of the reasons that I created the legacy tree in the platform.  Another reason is that I believe very strongly that we have to manage backward compatibility with a steady push towards forward progress in architecture and implementation.\nIf we were to call the controller interface JControllerInterface and the abstract base JController it still would require a change for developers if/when they are leveraged in the CMS.  There are things missing from the new JControllerBase implementation that are present in the legacy JController class.  Things that largely don't belong in a foundational class like that.  What I would expect is that for compatibility the CMS will likely create something like:\n``` php\n<?php\nclass JControllerCMS extends JControllerBase\n{\n    // Add all of the things found in the legacy controller for backward compatibility and smooth transition.\n}\n```\nWhat this means is that CMS extension developers will need to do a search and replace on JController and JControllerCMS respectively.  Not an incredibly onerous change.  Additionally if they do any sort of checks like ($controller instanceof JController) they would still return true or false in the same way they were done in the past.  Alternatively the CMS could simply define JController as a concrete class and ignore the platform's interface definition.  The autoloader will handle that gracefully actually since once it's found the class it won't look further and it would first look for classes in the CMS tree.\nI don't think you are fear mongering at all, but I do think you may be overreacting a bit.  I understand that these are really important, foundational things.  I understand that there are a lot of stakeholders as well, with lots of different use cases.  I firmly believe however that making this move does not tie our hands to handle backward compatibility in a graceful way.  It does give us a lot more flexibility in using the platform in different ways moving forward though.\n. @HermanPeeren I'm glad you like it.  You are correct on the use of interfaces thus far (or lack thereof).  We've supported PHP4 for a long time, and while interfaces aren't necessary for everything they do provide some really useful benefits so I would expect you to see more of them crop up over time.  Ultimately the answer to why they haven't been in there since 1.6 is because no one has taken the time to do the work and submit it.\nAs for the use of JObject.  It was as you guessed initially used as a bridge between PHP4 and PHP5.  It allowed us to write PHP4 code using the __construct() and __destruct() methods among other niceties.  I'd like to see JObject morph into a foundational value object in the future, and not a base class to be inherited by every other class in the platform.  Some work has been done on that in my team at eBay, but we aren't quite ready to share it yet to see what people think.  Hopefully we can do that soon and you'll get an idea of what I mean.  Obviously I'd love to hear others' thoughts on it, but I really don't see value to continuing to extend JObject everywhere.  It's about as semantic as <span> and not useful for what it was originally intended any longer.\nYour question about the view class having an instance of the constructor, that might have simply been a case of overzealous dependency injection.  I'd be happy to remove that since it isn't really a classical MVC dependency.  Thanks for the find!\n@AmyStephen I don't really agree that our views are actually controllers.  I do think in some cases views are misused in Joomla code, but I don't agree that the concept of what we have as JView is actually a controller.  You will also note that in our implementation we have a JVewBase that doesn't involve layouts at all.  This is because in its simplest form a view wouldn't need one.  JViewHtml is where we've allowed for layouts, but it is still simpler in my opinion than the existing implementation of JView.  I'd be open to a different name for JViewHtml if something more semantic can be found, but I am sorry I just don't think JController is that name. :)  It's an interesting conversation though, and we should have it if others are interested... probably not in this thread though.  I'm glad you seem to be liking what you see here though, I think this lays the groundwork for some really great things going forward.\n. @nikosdion and @HermanPeeren I understand your point, and respect it.  I do not however think that there isn't a solve for it .  If we were to say that as of 3.0, three classes were added to the CMS called JControllerCMS, JModelCMS and JViewCMS.  Those classes essentially contained the existing legacy implementations of what we know as JController, JModel and JView.  We can give all CMS extension developers a clean transition using (as we discussed earlier) search and replace from JController to JControllerCMS, etc.\nThat solves things going forward.  Hopefully we can agree to that -- I think we have.  What it doesn't solve is previous released versions of Joomla as you have pointed out.  Well, that could be sorted out quite simply with a plugin that looks something like https://github.com/LouisLandry/plugin-compat in concept.  1.6+ you could even package it with your extension and have it install along side your extension.  Now obviously there is a little nuance to the plugin required for the different versions of Joomla and such, but forgive me I only put 5 minutes into the thing to illustrate the concept.\nI don't think it is reasonable to say that the platform can never re-use class names when things need to be reworked or improved.  I also don't think it is reasonable to just leave developers out in the cold with respect to backward compatibility.  We must find the right balance, and I'm sure we can manage it.\n@AmyStephen I made the change.  Thanks.  As for your previous removed comment shoot me an email and we can discuss it separately.\n@ All, Thanks for a great discussion on this.  This is exactly why I wanted to start the platform project. :)\n. @nikosdion  With respect to a naming convention, it should be based on use rather than whether something is an Interface or Class.  The only time when it really matters is when you instantiate objects or syntactically in the class definition (extends vs implements).  Once an object is instantiated all that matters is the object's type, and in this case there is no difference.  In general, the notion of some namespace prefix or postfix declaring something an interface is unnecessary.  If you are unsure whether you have to extend or implement a type then you probably shouldn't be using it yet.  That's what documentation and to some degree IDEs are for.\nSerializable, ArrayAccess, Iterator are all native PHP interfaces among others.  I think each of them are reasonably named interfaces and none of them adopt a prefix or postfix to indicate that they are namespaces.  In reality it doesn't matter that they are interfaces.  What matters is that they describe the objects which implement them.  \nSerializable is obviously describing a property of an object (sometimes called a \"marker interface\").  This is actually a very common use of interfaces as adjectives to describe something about an object.  ArrayAccess is also describing a property of an object.  It's really more of a verb than an adjective, but it still fairly clearly describes something about the object that implements it.  I think there could be potentially be improvement there in maybe changing ArrayAccess to ArrayAccessible so that it better reflects the fact that the interface is describing a property of an object, not the type of object.\nIterator is a slightly different animal.  It is still an interface, but it is describing slightly more than just a property of the object in my opinion.  Sure, it could have also been called Iterable I suppose, but I think there's a little more to it.  I think Iterator gets a little closer to describing the type of thing (even though admittedly the concept of what is an iterator is very abstract).\nIf you look at work I did a couple of months ago around streams, https://github.com/LouisLandry/joomla-platform/tree/streams/libraries/joomla/streams (that admittedly isn't quite done yet), you'll see something similar though I didn't follow the *able naming convention with the interfaces that define the properties of a stream (so it's closer in concept to ArrayAccess).  There are a lot of interfaces in that package.  Most of them are marker interfaces, but there is one\u2026 one special one.  JStream is an interface.  I think of it in the same way I think of Iterator.  If an object implements JStream than you can trust that it is a stream handler.  Similarly if an object implements JStreamSeek then you can trust that you can seek along the object as a stream.\nThis is not dissimilar to a model.  Inherently a model is essentially what it models.  In the physical world if I were to ask you to create a model of a chair, and you did a good job, the model would be hardly distinguishable from an actual chair.  In OOP if I were to ask you to create a model of an document, and you did a good job, it would be simply an object representation of the document.  Because of this, calling it a JModel makes a bunch of sense to me.  Calling it a JModelInterface is like me calling you a human being instead of just a human.  It's wordy, repetative and ultimately unnecessary.\nI certainly didn't make this way of thinking up, I just happen to agree with it.  There are lots of conversations all over the web about how interfaces and classes should be named and how they should relate to each other.  For what it's worth Martin Fowler agrees with me (http://c2.com/cgi/wiki?DontDistinguishBetweenClassesAndInterfaces) though he is hilighting a reason I haven't touched on here that I also happen to agree with.  It's OK if that doesn't mean anything to you, but as one of the leading minds in OOP design and architecture I thought it was worth mentioning.  It isn't something out of the blue that we came up with to make people's lives harder.  The idea is driven by a hope to keep names simple and semantic, and be as forward thinking as possible as we make iterative improvements.\n. Yes, please just send pull requests for improvements like that.  In some cases for loops are better than foreach (sometimes you just need an incremented value as you go over an associative array) but I'd be happy to look at, and merge, pull requests fixing these things up.\n. @nprasath002 would love to get this merged into 12.3 if you have the time for the little cleanup necessary.\n. OK, @nprasath002 this has been marked for including in the 12.3 release (about 2 months out).  If you can find the time to make the adjustments listed above we'd love to merge it.  If you have questions about how to do any of it please feel free to either ask in this thread, or ask on the platform mailing list.\nFor now I'm going to close this pull request until you've got it cleaned up and ready for further review.  When you get that done please re-open it and we'll get it sorted out then.  Thanks a bunch for the work on this, it will prove very useful!\n. I feel the same way.  Isn't this simply returning the number of queries that have been executed?  That doesn't really seem like an intuitive use of count() to me.  Clever though.\n. All good except the countable interface.  Going to close this and we can revisit another time.\n. Wouldn't it make more sense to just use __destruct() and have people unset($image) when they want the resource freed?\n. This cannot be merged cleanly.  Additionally I'd really like to see a unit test case proving that the change actually works so that we don't run into regressions down the road.\n. Why not move JDispatcher into a dispatcher.php file in the legacy tree so that it can be autoloaded?\n. Since I just merged #1158 can we close this one, or are there still outstanding problems?  My week from hell is almost over and am just trying to get up to speed on what's changed.\n. 2 Sounds like the path of least resistance to me and a needed change anyway.  You mind taking a crack at that?  I'm sitting in an airport terminal with really spotty connection on an iPad or I'd tackle it myself.\n. @AmyStephen, the use of the bitwise operator (http://php.net/manual/en/language.operators.bitwise.php) & instead of logical && is on purpose.  It is so you can mix and match the different priorities a logger handles.  We have pretty good tests for that method working, can you maybe give me a couple of cases where findLoggers() isn't working for you and we can work through them to see where the failures are?  Most of this looks good though.\n. OK, I'm gonna close this one then.  If you want to re-submit the other stuff that's great, if you'd rather wait that's fine too.  The exceptions would be especially nice to get sorted out sooner than later.  Thanks for the effort.\n. Looks good.  A couple of code style issues to clean up: http://developer.joomla.org/pulls/pulls/1159.html\nAlso, I think we can get rid of the Test class for LogException.  It doesn't do anything and adds no value.  There isn't anything to test.  As soon as the style issues are cleaned up I'll get it merged.  Thanks for the work Amy.\n. Beautiful.  Thanks again.\n. To be honest I'd rather see us throw an exception than die in a case like this, but for the sake of removing coupling I'll allow it this time ;-)\n. I dig it.  I can honestly say that I didn't think about having something like that, and I should have.  It would be perfect as a catch for those really high priority events that get logged.  I think it would be neat to explore using the message in the subject line as well, or a truncated version of it.\n. Don't have time to do anything thorough on this with you right now, but instead of making it public you just need to use reflection.  We've added a helper to make that easy for you in the test classes.\n``` php\n<?php\n// Invoke a non-public method.\n$result = TestReflection::invoke($object, 'methodName', $arg1, $arg2);\n// Get a non-public member.\n$value = TestReflection::getValue($object, 'memberName');\n// Set a non-public member.\nTestReflection::setValue($object, 'memberName', $valueToSet);\n```\nThat helper makes it much easier to test non-public aspects of your classes.  You are on the right track with mocking out the mailer, though I don't think you need to put that much effort into it.  You really just need a mock object that will validate the methods that are called, More along the lines of our TestMock* classes.  You'll find that stuff in https://github.com/joomla/joomla-platform/tree/staging/tests/core.\n. Please open it again.  I think given the autoloader changes that Rouven made we may need to adjust a couple of things, but it is just as relevant ... just hasn't been on the top of my list to deal with recently.\n. Just a few code style issues to clean up and we can get this merged.  Thanks!\nhttp://developer.joomla.org/pulls/pulls/1169.html\n. Thanks for this.  Some good catches.  There's one code style issue to clean up.  http://developer.joomla.org/pulls/pulls/1171.html\nGet that sorted out and we'll get it merged.  Thanks again!\n. It automatically happens.  Thanks!\n. Ya, this is expected behavior from a checkbox.\n. I like the implementation as it stands today in this pull request.  I'd like to get comments from another maintainer before merging it though.  @eddieajau, @realityking what do you think?  I went ahead and marked it for merging into 12.3 pending a second opinion.\n@benjaminpick are you able to rebase this and squash the 9 commits down to one?  It seems a bit much to have 9 commits for a total change of 26 lines of code.  I understand why it ended up that way, but would be much cleaner IMO if we could get that squashed.\n. Closing in favor of #1592\n. @rcorral this pull request is no longer mergeable.  While I am personally indifferent to the feature, I'm happy to merge it if others are positive towards it.  I would probably want to see a couple of unit tests so that we can avoid regressions and confusion about the feature down the road though.\nFor now I am going to close the pull request.  This isn't because I'm rejecting it, but because it really isn't in a reviewable state right now.  If you still want to pursue it please rebase the branch so that it is mergeable again and re-open the pull request.  If we can get some interest from other developers that will certainly help.\nThanks a bunch for the initiative and work!\n. I generally agree with this.  I'd rather let the input objects encapsulate the array... and in this sense that would be best served by copying it.  Keeping a reference to the array would only make sense if the expectation was that we wanted people using these super-global arrays and the fact is we do not.\n. Thanks Gary!\n. Ya, I tend to be with @ianmacl on that.  The XML based stuff in Joomla was written in a time when 4.3 was the minimum requirement and we didn't have really good XML parsing in PHP natively.  That really isn't the case anymore, and I would lean towards deprecating all of it for removal.\n. You aren't wrong to use 12.1 ... it is just a bug in 12.1 that slipped through the cracks and was fixed more recently.  You should be safe using master I believe.\n. Would you mind sending this request against https://github.com/joomla/coding-standards instead?  When I get a moment I'm going to submodule out the phpcs standard in this repository to use that.\n. Good questions.\nFirstly I'd reiterate that these routers aren't meant to be all things to all people so they aren't really intended to solve for all of these various options necessarily, but I'll comment on your examples... they are good ones.\nMultiple Resources.\nExample: GET articles/7,42\nThis is actually a great question and while I think it could be handled in the router if you wanted it to, that isn't how I've written these foundational routers.  It wouldn't be difficult to do for sure, but it would also be just as easy in your controller to do the following:\nphp\n<?php\n// Get a list of article ids from the request input.\n$ids = explode(',', $this->input->get('article_id'));\nThis would allow the controller to handle translating the actual request input into action which is just my personal preference.  It could be that in some cases you want to support a syntax like that where in others you don't.  Simply depends on the implementation.  For foundational platform classes I'm always in favor of writing to the least common denominator.\nHTTP Methods -> Class methods\nThis is also an option.  It isn't how I've been running with the MVC structures I'm writing against the new classes because I'm much more interested in controllers handling relatively atomic tasks.  It makes it ultimately easier to chain them and execute them in a nested fashion.  That being said, if it was something you wanted to support it would require simply overriding two quick methods in the router to achieve it.  I'd guess somewhere on the order of 20 lines of code.\nNested Tasks.\nI'm not sure that I understand the question here.  There are several different ways to think about that route.  I'll try to illustrate two examples of how you might want to structure it.\nRouter map users/:user_id/vcard => MyControllerUsersVcard\nThis would be where you use the router as is to map to a particular controller to handle that exact task.  One advantage of this approach would be the verbose control, and also the fact that your controller is designed to just do one thing and do it well.  It could be re-used very simply in various flows and use-cases with minimal setup.\nRouter map users/:user_id/:format => MyControllerUsers\nTaking this approach would mean that the users controller looks at the format variable from the URL to determine how it reacts.  This is also valid, supportable without changing the router.  It can decide whether or not it understands format => vcard and go from there.  It could even decide to instantiate and execute a subcontroller based on the format.\nObviously those are not the only two ways to solve that problem, but they are the first two that come to mind.\nFiltering Options (Query string variables).\nI firmly believe this is something that could/should be handled by the controller itself.  You could easily have a base controller, MyControllerFilterable that has a helper method to process filters and set input values based on those, or setup a state object for a model, or whatever other things need to happen.  Then all of your page or service controllers would extend MyControllerFilterable and inherit that functionality.  Again, that's off the top of my head.  I'd certainly be open to adding a few such things to the platform if we could agree on some guiding (and broad) principles and conventions that would be supported.\nInput variable support for extended HTTP Method set.\nThis is actually just a deficiency in JInput.  Essentially it needs to understand what the situation is with respect to the HTTP method that it is wrapping input for, and run it do pretty much exactly what you put here to populate that array.\nIncidentally I have another JInput class that I've been using called JInputJson which does exactly that except it parses JSON input using json_decode.  I would love it if you (or others) could put together a pull request to fix that issue elegantly.\n. @piotr-cz,\nHave a look at https://gist.github.com/2896715.  There is a readme at the bottom that will help explain my thoughts there.  One my major design goals for these routers is for them to determine the controller and then get out of the way.  I don't want them to do anything fancy in evaluating input because invariably that stuff just becomes limitations down the road.\nI've certainly looked at backbone.js as well as Ruby/Merb and many others when it comes to routers.  I tend to be a little obsessive in researching what others do when designing something like this.  I absolutely want to introduce splats (*) at some point, but there are several ways that they can be used and I wanted to get a solid baseline then iterate.  The introduction of something like this doesn't mean it cannot be improved, but the simpler we start the easier it'll be to reach consensus and move forward.\nI believe that regardless of our approach here the CMS will need to extend the router(s) if they are to be used at all moving forward.  It could be that the CMS takes an entirely different approach.  I'm trying to design and build towards that lowest common denominator first and then we can build on it if appropriate.\n@chdemko,\nI like the way you did the matching in your gist.  I'd be interested to see some sort of performance characteristics just out of curiosity.  I purposefully didn't involve regular expressions in my first iteration here because it seemed like an overhead that wasn't necessary given my initial goals.  I'd want to break out a couple of helper functions so that we can more easily unit test the process, but love the direction there.\n. OK, the router has been updated to leverage the work that Christophe did.  It now handles a much wider set of route patterns, but is just a touch slower in adding maps.  The tradeoff seems worth it, especially given that if needed the pre-compiled pattern regular expressions could be cached.\nI've updated the original pull request description with information about how to use splats.\n. I'm going to close this since it can no longer be merged, and there appears to be consensus around a different approach.  Thanks a bunch!\n. Very nice.  This was an oversight on my part.  Thanks!\n. Good stuff, but why not treat it like the other detect methods and have it proxied through the magic get method?\n. Well done.\n. I'm closing this in favor of #1307.  Please add these tests into that pull request and we'll get them merged in all at once.  Thanks a bunch for this!\n. @garyamort my apologies for us not getting this all sorted out sooner.  It'd be fantastic if you could rebase (cannot be merged) this and add the unit tests from #1303 into this pull request so that we get the tests and changes all in one go.  Once you get that done we can get this thing one last check and merged into the platform.  I really appreciate the effort and initiative working this problem.  It would also be great if you could provide a little more descriptive title/description on the pull request for our changelog.\nI'm marking this for the 12.3 release.  Additionally I'm closing it for now, but not because it is rejected.  It isn't in a state where it can be reviewed further or merged so I'm closing it so that it doesn't stay in our review queue.  Once you get things cleaned up please re-open it and we'll get it sorted out.  Thanks!\n. I certainly think it's clever, but not really necessary.\n. Ya, let's just not use it as much as is possible.\n. That's an interesting idea @florianv ... I honestly hadn't thought of that.\n@mahagr I agree that in general that is a need.  I'll take a look at it, but that wasn't really the exercise here.  Mostly I am trying to get a feel for how people see the simplification and straightforward approach.  I think we've always been too complex in how we deal with cache with all these controllers and handlers and such.\nThanks for the feedback guys!\n. I was thinking something like $cache = new JCacheApc;.  What do you think?\n. Looks like you have an error executing the unit tests with this change.  Should be a simple fix when you get a moment.\n. There are several test errors.\n. All good, had a leftover file I forgot to clean.\n. @klas The reason we moved away from having method statics is because it is impossible to test with them because you cannot access the array in any way to modify it -- even from within the class or it's children.  Is it possible what you are seeing is a side-effect of late static binding or something?  The code definitely seems to work as it is now.  Can you put together a small POC gist or something that shows things not working we can look at?\n. @mahagr This change makes sense to me.  Can you quickly let me know, does it actually solve your problem?  There is a bit of a confusing back and forth.  You seem to indicate that some other change needs to happen as well, is that the case?\nI'd just like a little clarity before I merge it.  Thanks!\n. @mahagr Thanks!\n. I agree, should put it back to make things as smooth as can be.\n. I'm honestly not real excited about having an event triggered there.  There are ways we can get some test coverage done for JSession, but not without doing some real thinking about the way it's structured and create wrapper functions around the PHP functions so that they can be replaced with a mock.\n. You need to change the doc block if you want to do this.\n. Thanks!\n. Great stuff as always.\n. Love the direction all of this is going. :-)\n. Yet another reason why the JavaScript needs to not live in the Platform repository.\n. Would you be interested in taking that up?  You'd need to submit a pull request to the CMS to move the JS there, and once that is done we can simply delete it all from the platform repository.  Game?\n. Thanks Michael.\n. This is no longer mergeable.  Additionally I have reservations on the silence operator being used on the mbstring settings.  If errors, notices, or warnings are suppressed for that we don't have any sort of backup to know what went wrong in using the mbstring functions.\nI'm going to close this one for now until you can get it rebased @realityking.  Do that and we can continue the discussion.  Remove those supression operators on the ini_set() calls for mbstring and I'll just merge it.  Reopen when you are ready, thanks!\n. @realityking I'm really feeling like we need to move the installer and updater libraries to legacy en route to the CMS tree.  Given that I'm not inclined to really merge this change, but would rather suggest you run with it in the CMS tree.  I'm happy to be overridden by @pasamio if he wants to run with it here, but that's my feeling.\nIncidentally either way it is no longer mergeable and needs to be rebased if we were to merge it.  I'm closing it for now until it is mergeable again.  If you guys want to get it into the platform I'll leave it up to you.\n. sigh .... can we please get these things into the CMS tree and out of the platform tree. :-)\n. Don't understand how the title of this PR lines up with the changes.\n. I got the email for your comment, but never saw it online.  It was right around the time they started experiencing database issues, so perhaps it's being missing is related.  Maybe you are the one who broke GitHub ;-)\n. @florianv this pull request isn't mergeable any longer.  Would you mind rebasing it (and maybe even squashing the two commits into one) so we can finish the discussion about it.  I'm inclined to merge it, but I want to play with it a little bit and see what the overall impact on performance may look like.  I really love the initiative in doing this though.\nI'm going to close the pull request for now.  Once you get it rebased (double check code styling please) please re-open it so we can finish the conversation.  Thanks a bunch!\n. I'm quite comfortable with that.\n. The short answer is yes, we really do.\n. @Octobit this pull request is no longer mergeable.  It seems we have a consensus that the changes are something we would like to include, but perhaps a little cleanup is in order.  Would you mind rebasing your branch so that we can get this merged?  I'm going to close the pull request until it can be rebased.  Once you've gotten that sorted out please leave a comment here asking us to reopen the pull request and we'll get it reopened and merged.  I really appreciate your work and patience!\n. Why wouldn't you just use JViewHtml to support this functionality?  You have layouts and overrides just built into that.  It's very lightweight as well.  It then keeps the clear separation of presentation responsibilities independent of the event handling system.\n. Have we also adjusted JHtml to not \"include\" the previous path as a location to look for helper classes?\n. @bembelimen this doesn't change that behavior at all.  All it does is make the initial call to JHtml::addIncludePath() unnecessary.  @ianmacl you need to rebase so that it is mergeable.  Do that and I'll merge it this weekend.\n. Have we also removed the \"include\" paths here so that it isn't trying to add an include a folder full of things that doesn't exist.\n. Doesn't look like it can be closed to me.  This is still an issue it seems -- unless i'm missing something.\n@ianmacl can you rebase this and double check on the include paths bit please?\n. @ianmacl when you get this fixed up re-open please.  Marked for 12.3 release.\n. @romacron I'd like to get this work merged, so would appreciate it if you could do the following:\n1. Rebase the branch (hopefully squashing the extra commits).  7 commits for 24 lines changed seems a bit much.\n2. I'd like you to use __destruct() instead of destroy().\n3. Using the classes destructor means you don't need to throw the exception if the handle is not yet loaded.\nIn it's current state the branch isn't mergeable, and if you can get those things done we can get this work merged into the platform pretty quickly.  I'm going to set it for the 12.3 milestone in a couple of months, so hopefully you can get to it by then.\nThanks!\nNote: I'm going to close the pull request for now.  That doens't mean I am rejecting it, just that you need to fix it up before we can review it further.  As soon as you have it fixed up feel free to re-open the pull request and we'll get it sorted out.\n. @dianaprajescu the pull request I have opened does not conflict with this one.  It is only implementing the server side of OAuth1.  What you may see as a client class in that package is actually representing a \"client application\" from a server perspective.  It is true that I would generally like us to take a slightly different approach on the OAuth clients.  I spoke with Aaron about those ideas briefly at the Joomla World Conference.  In short, I'd like the OAuth authentication piece be injected into a JHttp class instead of wrapping a JHttp class to allow OAuth authentication for requests.  I would like for us to support this type of authentication in the JHttp class similar to how we support basic auth today.  I'm very sorry that I haven't had/made the time to give more constructive feedback on this, but c'est la vie.\n. Good cleanup.  If you can rebase it so that it merges cleanly I'll get it merged in this weekend.  Thanks a bunch Elijah.\n. This looks good enough.  Thanks.\n. This is great work @aaronschmitz ... really great.\n. Thanks a bunch @aaronschmitz.\n. @ramalama this pull request is no longer mergeable.  It would be great if you could rebase it (and maybe squash some of the commits) so that it is mergeable again.  Apologies for the long delay in response.  Once you get it cleaned up we can take a quick look at the internationalization issues brought up and hopefully get it merged into the platform.\nNote: I'm closing the pull request for now.  This isn't because I'm rejecting it, but because in its current state it cannot be reviewed.  Once you get it rebased and cleaned up please re-open the pull request and we'll finish the conversation on getting it merged.  Thanks!\n. A quick look at http://www.w3schools.com/tags/att_standard_id.asp shows that there are some restrictions on ID attribute valid characters.  Additionally, while in some versions of HTML/XHTML accented characters as well as period . and colon : are allowed, those characters have proven to be problematic for several browsers over the years as well as some JavaScript frameworks/libraries.  If we can assert that opening it up won't cause undue harm in those situations then I'd be happy for us to remove the restriction.\n. In my initial look-through I have a little bit of concern over the use of SimpleXMLElement for processing XML for GData feeds simply because it is a very memory intensive method of parsing/processing XML.  Not as bad as DOM, but the memory usage gets unwieldy quickly for moderate to large XML strings.  If we aren't going to try to parse large data files with that though, it could be a non-issue.  Have you noticed any sort of memory spike in your usage?\nAdmittedly I only gave it a quick look-over tonight.  I'm going to give it another look hopefully tomorrow if I can find the time.  I'm hoping I can also look deeper into some of the other JSOC pull requests... time is just hard to come by at the moment.  I need to digest this a little bit before I can give you any more detailed feedback.  I left you a couple of line notes after a first pass, and I think we should consider expanding the manual stuff a bit given the sheer amount of functionality that you have added in this pull request.  \nThat being said, dude you absolutely KILLED this thing.  I'm incredibly impressed at the code quality, the structure, and the thoroughness that I am seeing in here.  I personally cannot wait to get this into the platform and even more so I can't wait to find a reason to use it in one of my projects.  You clearly put a lot of thought, time, and passion into this work and it shows.  Well done.\n. I tend to use a hybrid SimpleXMLElement and XMLReader technique when I have to deal with potentially large XML strings.  You can see a pretty good writeup on the issue at http://posterous.richardcunningham.co.uk/using-a-hybrid-of-xmlreader-and-simplexml.  You can see how I did this for my JFeedParser class at https://github.com/LouisLandry/joomla-platform/blob/feed/libraries/joomla/feed/parser.php.\nThe principle is fairly simple, you use XMLReader to stream parse over the larger XML string/file and only use SimpleXMLElement for the sub-elements where you really need that fine-grained control and flexibility.  If you are dealing with a long list of \"entities\" then you stream parse the list and use SimpleXMLElement for processing each \"entity\" in the list so that you don't end up with massive memory usage.\n. The memory usage curve is essentially the same for smaller xml strings as it is for larger ones.  Obviously it isn't as impactful for smaller ones, but the concern is the same.  I created a very simple test script and 3 sample XML files (trivial elements) with record counts of 200, 2000 and 20,000 to test memory usage.  Something like:\nxml\n<entities>\n    <entity>\n        <entity_id>1</entity_id>\n        <code>AJV11QPL5JS</code>\n        <email>Integer.aliquam.adipiscing@Suspendissesagittis.com</email>\n        <description>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Curabitur sed tortor. Integer aliquam adipiscing lacus. Ut nec urna et arcu imperdiet ullamcorper. Duis at lacus. Quisque purus sapien, gravida non, sollicitudin a, malesuada id, erat. Etiam vestibulum massa rutrum magna. Cras</description>\n        <color>violet</color>\n    </entity>\n    ...\n</entities>\n- What I found was that with no XML processing the memory usage peaked at 768KB.\n- Processing 200 entities memory usage peaked at 768KB as well.\n- Processing 2000 entities memory usage peaked at 1.75MB.\n- Processing 20000 entities memory usage peaked at 8.5MB.\nNow the interesting thing about this is that there was no real depth to my XML.  If the XML starts adding extra levels of depth at the entity level then this memory footprint starts to get larger pretty quickly.  I'd say that we aren't talking about a deal breaker, but Joomla is supposed to be built for the least common denominator from a hardware requirements perspective... at least as much as is possible.  That would indicate that it is something to consider.\n. OK, that's fair.  I'd rather err on the side of getting this merged than worry to much about it, but I think we will want to have a go at optimizing that at some point.  Your use of JResponse is the only thing giving me pause here then.  Is there a way we can just use JApplication::redirect() instead?  JApplicationWeb doesn't rely on JResponsebut encapsulates that logic in it's own header based methods.\n. OK, I'm pretty much ready to get this merged into 12.3.  There are two things I'd like done before we do that ... hopefully you have a little time @aaronschmitz.  The first is that I need you to change all of the 12.2 to 12.3 obviously.  Secondly, I would really love it if you could squash some of these commits.  Not all, but some.  Whatever seems logical to you. It feels like 116 commits is an awful lot of \"cruft\" for this.  I know it is a ton of work, not questioning that, but it would just be cleaner that way.\nI'm going to close the request for now.  It's been marked for 12.3 inclusion so I'm obviously not rejecting it.  Once you've got the @since tags sorted out (and hopefully a little commit squashing) please re-open the pull request and we'll get it merged.  Thanks a bunch for all the work that went into this.  Totally looking forward to using it.\n. I've reopened it.  Once i get a positive result from the pull tester I'll merge it in.  Thanks!\n. I rebased and merged this manually.  Thanks a bunch Aaron!\n. Cool.  You should change the PHP requirement to 5.3.1+, and also would you mind squashing those two commits into one?\n. This is the same as what other one?\n. This is a known issue.  We are moving away from the addIncludePath and towards leveraging the autoloader for these sorts of things now.  Thanks for the report.\n. @dongilbert for what it's worth I really like the change.  I look forward to reviewing this when you get the tests sorted out.  If you need help getting those done please feel free to ask either on list or in this pull request any questions you may have.\nI'm going to close this request for now while we wait for you to get those tests sorted out.  Please note that this isn't due to rejecting the request, but just a matter of keeping our pull request queue free of things not actively needing review.  When you get the unit tests sorted out just re-open the request and we'll go from there.  Thanks a bunch for the initiative and the work.\n. I tend to just set mine up with the directions at: http://jenkins-php.org\nThat gets pretty much the full compliment of tools I use for static analysis and testing (including PHP_CodeSniffer).  As for dependencies the only think I can think of that you may need to install extra is phpunit/DbUnit.  I don't remember if it comes packaged or not.\nYou can follow the instructions in the readme at: https://github.com/joomla/coding-standards to install our standard once you have PHP_CodeSniffer installed.\n. I think you are on the right track.  One of the principles of good unit testing is to really isolate the exact \"unit\" of code you are testing.  In this case really you are wanting to test the class name evaluation, so if you can avoid having to create a whole bunch of test classes, etc then that is the preferred path.\nFor this pull request we only really need tests for the changes being made on this pull request.  If you wanna have a go at the rest, my suggestion is to do them separately in a separate branch so as to not let that work get in the way of getting this stuff done and merged.  That being said, if you want to just go for it that is entirely up to you.\n. Try running phpunit -c legacy.xml.dist to have it run the legacy suite.\n. Also, you need to merge your new commits into the jmodelfix branch and push it up to github so that they show up in this pull request.\n. All passes!  Thanks a bunch for your patience and work through this @dongilbert.\n. It takes two clicks to merge it ... not too much.\n. @nicksavov thanks for putting this together.  I've marked it for the 12.3 milestone (a couple of months out).  If you can get the style issues sorted out and the JError usage adjusted we'd love to get this merged into the platform.  If you need help with anything feel free to ask here, or on the platform list.\nI'm going to close this pull request for now.  That doesn't mean it is being rejected, just that you need to work on it a little more.  Please re-open it once you've got those things fixed up and it is ready to be reviewed again.  Looking forward to getting it merged.\n. I think it's actually very important that we keep the $tpl argument to the display method.  It is used quite a bit by several extensions that I have worked with over the years, and I feel that if this change is going to be made it needs to be communicated and people given some time to adjust.\n. @realityking love the direction on this.  Can you get it cleaned up and rebased so we can merge it?  Do we still have an issue figuring out the problem with the unit test failure?  Please re-open it when it is cleaned up.  Thanks!\n. These types of pull requests make me smile. :-)\n. shrug\n. @realityking I agree with @ianmacl on this one.  I like the idea of JUser moving to using JCryptPassword, but if we are going to do that there needs to be a way of injecting that dependency so that any object compliant with the interface can be used.\nI'm closing this for now.  If you want to make those adjustments please re-open it so we can review it further.\n. This should be taken care of with #1555.  I'm going to close it in favor of that.  If it still is a problem after #1555 is merged please re-open it.  Thanks!\n. @MarkRS-UK this is a great improvement.  As @elinw requested I'd love to see a couple of additions to the unit tests so that we can verify that things work as expected and queries are being built correctly both now, and in the future when further changes are made to the class.\nAlso, I'd appreciate it if you can change the title to be a little more descriptive of the improvement/fix you are making so that it shows up in our change log appropriately.  I'm going to set this for the 12.3 milestone (a couple of months).\nI'm closing this pull request for now.  That doesn't mean I am rejecting it, I'm just keeping it out of our active queue until you can make the adjustments mentioned above.  When you have the tests added please re-open it and we can get things merged then.  Thanks a bunch for the work!\n. @MarkRS-UK I certainly understand your point on the unit tests.  I don't know that you need to use a database to test the functionality, you could simply test by exercising the affected code and evaluated the resultant SQL against what is expected.  In fact I would think this preferable since we've removed any external dependencies in the tests.\nWe have the capability to test against an actual database as well if that is something you feel strongly about, but I am not sure that it will increase the robustness of the validation.\n. Thanks, closing.\n. @nprasath002 I'd love to get this ready for merging.  Can you get the unit test and code style issues sorted out for us so we can give it a proper once over?\nNote: I'm closing this pull request for now until the requested changes are uploaded. Please re-open the pull request at that time so we can review it again. Thanks. \n. @obsidev this pull request is no longer mergeable.  It would be great if you could rebase your branch so that it can be cleanly merged again.  I've marked this for merging into 12.3, and will be happy to merge once that is sorted out.  Thanks a bunch for the fix!\nNote: I'm going to close this pull request for now.  This is just so it is no longer in our reviewable pull request queue until you have it mergeable again.  Once you get that fixed up please re-open the pull request and we'll get it merged.\n. I do think we should be looking into going \"native\" where possible, but this appears to simply fix a regression.  Thanks a bunch Roberto!\n. Nice.  Thanks!\n. There's a unit test error that we need to take care of before this can be merged.  http://developer.joomla.org/pulls/pulls/1567.html\n. Actually this won't work.  I mean, yes it removes the notice, but it doesn't solve the problem.  In this particular code block it is looking for the constant JPATH_SITE to be equivalent to the root path of the Joomla CMS instance.  Now obviously the whole shebang needs a rethink to avoid that problem, but simply setting it to be the string literal 'JPATH_SITE' is problematic because there are very likely no files at a local filesystem path JPATH_SITE.\n. So I'm going to close this.  I think we need a more complete look at this particular bit of code to find a better answer.  Please feel free to re-open it if you get a more comprehensive fix put together.  Thanks!\n. Looks good to me.  Thanks!\n. Damn.  This is incredibly impressive Nicholas!  Thanks a TON.\n. This looks great @okonomiyaki3000.  Thanks for sticking with it.  One day we'll get you sorted out on rebasing and forced pushing branches.\n. This is fantastic!  Thanks for putting it together.  I'm marking it accepted for 12.3 and will give it a day or so for other comments.  All we have to do now is get you comfortable with rebasing and such so you don't have to open new pull requests every time you make a change ;-)\n. Great stuff.  You can improve the bit where you are testing the exception a little by looking over: http://www.phpunit.de/manual/current/en/writing-tests-for-phpunit.html#writing-tests-for-phpunit.exceptions\nAlso, for extra points you can fix up all the code styling and docblocks, etc to take after: https://github.com/joomla/joomla-platform/blob/staging/tests/suites/unit/joomla/model/JModelDatabaseTest.php\n. @nprasath002 thanks a bunch for doing this.  It's really great.  Since the GitHub package has really great test coverage it would be a shame for it to drop because of this pull request.  Would you mind adding tests for the new methods?  There are plenty of examples to look at in writing them out.  If you have questions feel free to ask on list, or in this thread.\n@ianmacl would you look over this as well and make sure I didn't miss something?\nNote: I'm closing this pull request for now until the requested changes are uploaded. Please leave a comment to re-open the pull request at that time so we can review it again. Thanks. \n. @florianv would you please migrate the documentation in the description from #1400 over to this one so we have it all here?  The change log is generated based on merged pull requests so it's nice to have it all in one place.\nAlso, I wonder if you'd entertain a thought I've had on JLoader.  I think something like:\nphp\n// Setup the Joomla Platform autoloader.\nJLoader::setup($enableJimport, $enableNamespaces);\nThe idea being that those two boolean flags would decide whether we even add the different autoloader methods.  For now we would need to default the first argument to true and the second to false, but it would let any application using the platform decide which of those are loaded.  Hopefully we can get to a point in the near future where the first one is defaulted to false and we are reconsidering the second one.\n. @florianv I think your solution is probably the more \"academically correct\" one.  That being said, the class is static and the way it is currently used I am not sure that I think there'd be much benefit in changing that behavior.  As for the parameter ordering I actually think I agree with you.  How about we do something like:\n``` php\n<?php\n/\n * @package    Joomla.Platform\n \n * @copyright  Copyright (C) 2005 - 2012 Open Source Matters, Inc. All rights reserved.\n * @license    GNU General Public License version 2 or later; see LICENSE\n /\ndefined('JPATH_PLATFORM') or die;\n/\n * Static class to handle loading of libraries.\n \n * @package  Joomla.Platform\n * @since    11.1\n /\nabstract class JLoader\n{\n    // ...\n/**\n * Method to setup the autoloaders for the Joomla Platform.  Since the SPL autoloaders are\n * called in a queue we will add our explicit, class-registration based loader first, then\n * fall back on the autoloader based on conventions.  This will allow people to register a\n * class in a specific location and override platform libraries as was previously possible.\n *\n * @param   boolean  $allowMixedCasePaths  True to allow class paths to use mixed case paths that match class names.\n * @param   boolean  $enableNamespaces     True to enable PHP namespace based class autoloading.\n * @param   boolean  $enableJimport        True to enable legacy jimport() based library loading.\n *\n * @return  void\n *\n * @since   11.3\n */\npublic static function setup($allowMixedCasePaths = false, $enableNamespaces = false, $enableJimport = true)\n\n// ...\n\n}\n// Setup the Joomla Platform autoloader.\nJLoader::setup($enableJimport, $enableNamespaces);\n```\nThis has the advantage of not forcing a change in method signature down the road.  At some point the $enableJimport flag will be deprecated most likely so we would want it last.  Similarly at some point we likely will only support namespace based class loading so the $enableNamespaces flag will be deprecated as well.\nThe one we end up keeping is the flag to allow the mixed case paths.  I actually like that you have that option in there, but I'd rather not incur the cost of an extra filestat on every load if it is just completely unnecessary and all paths are lower case.\nDoes that make sense?\n. I wouldn't say we have plans one way or another, but we do plan to explore our options.  I like the possibility of using it regardless of the path we take for the core platform libraries going forward.\n. This is great @florianv.  I'm going to give you one last nit-picky thing then I promise I'm going to merge it.  Would you please add JLoader class constants for your JLoader::setup() $caseStrategy argument?  It's JLoader::setup(JLoader::NATURAL_CASE) is more immediately understandable than JLoader::setup(2), even if the latter is more verbose.\n. Awesome @florianv, you are the very model of a fantastic contributor... thank you!\n. Thanks a bunch @benjaminpick.  I'm going to leave it open for a day or so in case anyone wants to comment and we'll get it merged in.  Is there a chance that later on when you get more time you could go through and clean up the field implementations you mention?\n. If you move the package into the legacy tree then I'd be supportive of merging it.\n. Upon thinking this through I think it best if this pull request is sent to the CMS tree anyway.  We plan to deprecate JResponse in the near future in favor of just using the methods built into JApplicationWeb.  This is one of the major functions of the new web application class.  In terms of the CMS landscape I do think the idea and implementation has merit, but it isn't really in line with where we are wanting to go with the platform for the reasons I've already discussed. \nBecause I think this should be submitted to the CMS instead, and because it is no longer mergeable I'm going to close this.  Thanks for the time, thoughts, and work regardless!\n. Correct.\nhttps://github.com/joomla/joomla-cms/tree/master/libraries/cms is where I would put this stuff.  I don't disagree with the notion of having JResponseJson extend JResponse though, Andrew is on to something there.\n. @dongilbert Just one thing to fix up and this is ready to go.  Thanks a bunch for the effort and initiative!\nNote: I'm closing this pull request for now until the requested changes are uploaded. Please leave a comment asking to reopen the pull request at that time so we can review it again. Thanks.\n. @dianaprajescu I'm excited about this addition to the platform.  As such I've marked it for inclusion to 12.3.  I haven't had an opportunity to really go over the contents, but will try to do that very soon.  I do want us to re-think how we are using the OAuth client classes.  It's something I'd like to revisit in the Google package as well actually.  That being said, at first glance this looks very well put together.  Hopefully others will chime in as well.\n. @dianaprajescu, quite simply I suck.  I'm sorry I haven't found the time to dig into this, I promise I haven't forgotten about it.  I've been beyond busy with work, moving house, and preparing for the Joomla World Conference.  I really appreciate your patience, and the work you put in ... I just need a little more time before I can give you meaningful feedback.  Hopefully we can get some others to look things over and give their thoughts.\n. Would you mind double checking the code style on this?  The pull tester shows 2 more issues than most other ones, and I'd like to be sure.  Marked it for 12.3 regardless.  I'd also like to leave it open for a few days in case others want to comment.\n. Can you reopen this?\n. Can you pppppplease reopen this?\n. So what I do in this sort of situation is:\n$ git checkout origin jtablefix\n$ git pull --rebase upstream staging\n$ git push -f origin jtablefix\nThat makes sure you are on the correct branch, rebased your changes in the correct branch on top of the upstream staging branch, and then force pushes the result up to GitHub.  Your mileage may vary, but try that.\nNote: I'm closing this pull request for now until the requested changes are uploaded. Please leave a comment asking to reopen the pull request at that time so we can review it again. Thanks.\n. So, I'm merging this, but the addIncludePath method really shouldn't be used any longer.  It would be much better to use the autoloader for making sure that classes are available.  The addIncludePath methods in JTable, JModel, etc, etc, were implemented before we had real autoloading available as an option.\n. JDatabase::loadResultArray() was deprecated in favor of JDatabaseDriver::loadColumn().  You should use that instead.\n. Fantastic work as always Michael.  Any chance I could interest you in adding support for the hooks api? http://developer.github.com/v3/repos/hooks/\n. Do you have a solve for SQLite ?\n. @florianv I'm certainly interested in where you are going with this, but obviously changing something this low-level in the system will be delicate will have to be considered carefully.  I'm just back from a week long holiday so my head really isn't in the right place to go through things bit by bit.  I'd love to hear what any others have to say on your proposal and hopefully next week I can spend a little time playing with it.  In the meantime, can you rebase this and get it mergeable again so we have something we can actually tinker with?\n. You are correct, but this kills the unit tests.\nPHP Fatal error:  Class 'JLoggerCallback' not found in /var/lib/jenkins/workspace/pull-requests/tests/suites/unit/joomla/log/loggers/stubs/callback/inspector.php on line 23\nrequire_once() /var/lib/jenkins/workspace/pull-requests/tests/suites/unit/joomla/log/loggers/JLogLoggerCallbackTest.php:11\nIf you can fix that up I'll get this merged.  Thanks a bunch Nikolai!\nI'm going to close this until it's fixed.  Please leave a comment to reopen it when you have updated the branch and we'll reopen it and get it merged.\n. LOL, thanks for your patience @elkuku ... I really appreciate it. :+1: \n. Thanks a bunch for doing this Michael!  Clean those things up and we are good to go.\nAsk for a reopen when you get it fixed and we'll get it merged.\n. Thanks a bunch @oc666.  There are a couple of things that need to be cleaned up for the code sniffer.  You can see a report at http://developer.joomla.org/pulls/pulls/1632.html.  I would encourage you to just run phpcs over the http package when you are done to validate that all is well.  You can find our standard and installation instructions at https://github.com/joomla/coding-standards.  \nAlso, I'd appreciate a blank line before the return statement even though that isn't a sniff we have at the moment, just makes things more easily readable for me.  Not a huge deal.\nNote: I'm closing this pull request until you've made the necessary changes.  Please leave a comment on this pull request with the word reopen when you've pushed up the updates and you are ready for us to review the branch again.  Thanks again!\n. @elkuku I like it.  Would be happy to look at it as a PR against joomla/coding-standards :wink: \n. Thanks!\n. Holy newline batman!\n. The latter one I'm fine with.  The reason I am not a fan of your first attempt is because it is valid to have <fieldset><fields><field /><field /></fields><field /></fieldset> and I believe it would have unwanted behavior.\n. Thanks!\n. It will come as no surprise that I'm a fan of the direction.  Just a few things to clean up and you get a :+1: from me.\n. I can't help but feel like we should find a way to include the changes that have been made.  I'll take a look.\n. OK, there is nothing of importance that is lost.  Just need to convert the outstanding things and fix up a couple of TODO lines.  I'm going to merge this so we have a solid place to work from.  The DocBook is dead.  Long live the Markdown.\n. Hi @aschaefferfr, I think your suggestion is sound, but if I'm not mistaken this is really just a messaging problem in the UI which could/should be handled by the CMS.  Have you discussed it with the JBS or posted the issue in the CMS tracker by chance?  http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemBrowse&tracker_id=8103\nI'm going to close this and redirect you to the CMS crew for fixing the problem, but if something comes up where the platform is making this problem difficult to solve we'll revisit it then.  Thanks a bunch!\n. Why wouldn't we just use a destructor for this?\n. Completely agree with this.  Will leave it open a little while to see if we have dissenting opinions worth a discussion.\n. I feel like you should add a false as the second argument in those class_exists() calls.  See: http://php.net/manual/en/function.class-exists.php\nOtherwise great catch.\n. This is great stuff @mbabker.  I agree that JFactory is something that we need to think about.  Going forward I want to see us using the application object for getting most of the things we used to get from JFactory and inject the application object into places where it is needed as a dependency.  That will allow us a lot more flexibility and testability down the road.\n. Yep, I agree with @eddieajau on that.  I am fine assuming that all apps will have configuration, but I think I'd rather have the fetchConfigurationData method be abstract.  Continuing that it would make sense that it remain abstract in JApplicationWeb, JApplicationCli and JApplicationDaemon.\n. Ya I thought about that.  Realistically you can't build anything useful without extending them, so I'm fine making them abstract.\n. I must admit I prefer using JLoader to register the class paths you are going to use explicitly.  I don't really like the idea of blind includes based on a path.  Especially in a startup part of application execution.  I'm immediately drawn to quite a few attack vectors just by putting a file in a specified place.  Your app doesn't have to even ask for it, it gets included anyway.\nAll that being said, I am open to it if this is something that a lot of people want.  I just don't know that I would use it in my own stuff.   I'd be very interested to hear what others think on the matter.\n. @dongilbert What is so different about:\n``` php\n// Bootstrap the Joomla Platform.\nrequire_once DIR . '/libraries/import.php';\n// Include other dependencies.\ninclude JPATH_PLATFORM . '/swift/setup.php';\ninclude JPATH_PLATFORM . '/stripe/setup.php';\ninclude JPATH_PLATFORM . '/moustache/setup.php';\n```\nor even\n``` php\n// Bootstrap the Joomla Platform.\nrequire_once DIR . '/libraries/import.php';\n// Include other dependencies.\nJLoader::registerNamespace('Swift', JPATH_PLATFORM . '/swift');\nJLoader::registerNamespace('Stripe', JPATH_PLATFORM . '/stripe');\nJLoader::registerNamespace('Moustache', JPATH_PLATFORM . '/moustache');\n```\nthan \nphp\nclass JConfig\n{\n    ...\n    protected $autoloadLibraries = array(\n        'swift',\n        'stripe',\n        'moustache',\n        'joomla' // just throwing the idea in here.\n    ); \n}\nI mean, in either of those cases you have to add 3 lines of code to a file.  I dunno if using a configuration file makes a ton of sense.  We are not really talking about configuring the application in any way, we are talking about importing library dependencies.  What happens to the app if I go in and remove the line to autoload stripe from the configuration file?  Does it then use some other payment processor library or have I just fatal error crashed the application?  In my way of thinking it is likely the latter, but I may be mistaken.\nTo me, configuration needs to be things to flip switches and pull levers such that the application changes it's behavior, not loading dependencies like that.  I feel like if my application depends upon those packages then it should be OK for my bootstrap file (index.php or whatever) to require or register them with JLoader.  We really aren't talking about any extra work.  Unless I'm missing something...\n. I think this makes a ton of sense, and I would consider it an oversight on my part that it doesn't already behave that way..  :+1: \nThat being said, I'd like to leave it open for a day or so to see if we get any strong dissenting opinions.\n. I believe this should be covered now with a separate pull request that was merged.  If you update the platform and look at line 24 of this file you will find a conditional in the setup method that marks the test skipped if the PCNTL extension isn't loaded.  Can you verify that this problem is fixed with that change and if so we can pass on this addition.  I feel it is a more complete solution given that nothing in JDaemon will work without PCNTL.\n. Shouldn't this be instantiating a new JMySQLTestConfig ?\n. We need to also add a deprecation warning here.  See: https://github.com/joomla/joomla-platform/blob/master/libraries/joomla/log/log.php#L214 for an example in JLog.\n. Shouldn't this just be jimport('joomla.log.log'); ?  I don't know why you'd need to import the JLogEntry class specifically.  Things look good otherwise.\n. You completely removed the @var tag here... we still need it.\n. I'm fairly certain you didn't mean to have a bunch of dots between $node and JSimpleXMLElement\n. Which part?  I don't think we have any rules against using the ternary operator, unless you are seeing something else that is problematic.\n. Some array offsets are only available for some image formats, so sometimes the value at the offset isn't set therefore it would raise a notice.\n. Ya, that's a copy paste error.  Technically the second opening brace should be in front of the get_resource_type call to wrap that != expression.\n. This is deprecated usage of JLog.  You'll want to have a look at JPATH_PLATFORM/joomla/log/log.php.  The syntax is something like:\nphp\n<?php\nJLog::add(sprintf('Session ID %s update is identical to current record', $id));\n. Yep, I can actually.  Additionally I can probably get rid of the if (!class_exists()) call above this block as well.  Will need to test it to make sure obviously.  \nThe check there was in case the thing was called directly not by the autoloader, but I guess we can make a reasonable assumption that it won't be.  I've even heard rumors that the spl autoloader can call private methods which would mean I can guarantee that it is never called directly.  Thanks for the note.\n. This probably shouldn't just reference JRequest::getURI() ... it should reference the entire class.\n. Pretty sure you want (bool) $from[2] instead of (bool)$from[2]\n. I'd also like to see the $cache_timeout changed to $cacheTimeout.  We should be using camelcase for everything.\n. typo: preivous -> previous\n. The point is both a common ancestor as well as a place to put common functionality as we develop it into the future.  Consider it a downpayment on a better architecture.\n. Fixed.\n. Good point.  Fixed.\n. Removed.  Thanks.\n. Not that I can remember off the top of my head.  I actually wrote this a couple of months ago.  Do you have a specific reason to use one or the other?\n. Ah ... solid point.  I'll fix this stuff up.  Thanks.\n. isset() is substantially faster than array_key_exists() ... and this function may get called a few times in an execution cycle.  Might consider changing it.\n. You need to put a spacer line after @return just like after the @param group.\nAlso, I don't think it's going to return an exception, but rather throw it.  If this is the case simply having:\n```\n@return  boolean  True on success.\n@throws  InvalidArgumentException\n```\nShould get it done.\n. The @throws tag should come after the @since tag.  That last grouping is in alpha order.\n. Nice use of semantic exception here.\n. Didn't you want these to be SimpleXMLElement ?\n. This isn't OK.  If you look a little closer you will see that for the SysLog logger, there are different values for the priorities.  This is because they are used to derive constants which are expected by the SysLog function (http://php.net/manual/en/function.syslog.php).\n-- Sorry for not catching that earlier.\n. This seems somewhat random for this pull request.  Can you explain what this is for?\n. Nevermind, I looked a little deeper.\n. Looks like you may have gotten a junk character in here.\n. I just didn't see a need to offer chaining here.  By all accounts execute() would be the last link in any chain.  After the router has been executed there is really nothing else left to do.  Do you really think that's useful?\n. Solid point.  I'll adjust that.\n. It isn't strictly necessary but I think it makes it more readable.  I'm happy to adjust if we are standardizing one way or another.\n. On that note you just discovered a bug. :-)  The docs even show that there should be a return $this.\n. That's an intersting point.  I think a better solution would be to allow escaping of the : if you intend it to be used in a non-variable capacity.  I'll have a play with that.  I'd rather not use double colons if I can avoid it.\n. Fixed in 4d777d2\n. Fixed in 4d777d2\n. I changed it in 4d777d2\n. Solid point Sam.  I had forgotten that.\n. This isn't really a dependency.  It simply looks to see if the incoming value is a JObject and acts accordingly.  You sure you want to get rid of it?\n. Would you add the u modifier to the regex so that it becomes UTF-8 safe (just in case) and I'll merge this.\n. I'm unclear as to why this is necessary instead of just using json_encode()\n. I would love to see this using JApplicationWeb  and it's response management instead of JResponse, or perhaps optionally using JResponse.\n. Ah yes, that makes sense.\n. ,\n. And by that he means 12.3 ;-)\n. These I'm not sure I like.  The others I'm fine with.\n. This class needs to be broken out into its own file.  We really want to have a 1:1 relationship between classes and files everywhere unless there is an incredibly important exception to be made.\n. Any particular reason you are dropping the type hinting here?\n. Nitpicky I know, but would you just remove this line instead of commenting it out.  Everything looks like it passes so we will get it merged when you clear that out.  Thanks a bunch!\n. There are three spaces instead of two after $user, which the code sniffer is throwing back as an error.  The same for the other @param tag lines.\n. I don't think this are particularly necessary, but not a big deal.\n. Why are we changing this?  The class has still existed since 11.1\n. Let's get rid of the translation bit with this exception message.\n. Why ask why?\n. I really don't think there is a need to have def() for this object.\n. Oops.\n. Oops.\n. Extra new line isn't necessary.\n. Extra new line isn't necessary.\n. Double period?\n. Because they are the Best. Descriptions. Ever.\n. That can be fixed. :wink: \n. ",
    "realityking": "New pull request is here: https://github.com/joomla/joomla-platform/pull/11\nHad to slightly change the way I use github.\n. I think you broke sth here. Our two commits are still part of the pull request but now there are two additional commits reverting our changes.\n. I just checked again and I'm pretty sure my JS implementation matches the PHP implementation in JDocumentRendererMessage. (which was the set goal)\n. Andrew has now added the JDocumentTest. Easiest is probably if someone just cherry picks the second commit.\n. Started one: http://docs.joomla.org/Potential_backward_compatibility_issues_in_Joomla_1.7_and_Joomla_Platform_11.1\nNot sure about the formatting, but at least we won't loose stuff this way.\n. I've added a unit test and fixed a small oversight. (Still had the wrong MIME type in from testing)\n. I should have been a little clearer, the issue isn't the _once but the use of required instead of include inside a conditional.\n. I hate to be a prick but parentheses for statements aren't allowed either. (I didn't notice that you used them before, sorry)\n. Ok, I taught the platform would have the same requirement as the CMS (5.2.4). Do you want to do it manually or should I prep a new pull request?\n. Please don't pull this just yet, testing with the CMS revealed an underlying issue with JHtml that we need to handle first.\n. I updated this the same way as the patch on joomlacode. From my perspective this is good to go.\n. This has been committed to trunk today.\n. This has been committed to trunk today.\n. This has been committed to trunk today.\n. Updated.\n. Older Webkit browsers is an euphemism. The issue in Webkit was only closed in march this year. That means current Safari and current Safari on iOS are effected. Not to mention all the smaller webkit browsers used in handheld devices. (Chrome 11 is most likely also still affected)\nAs much as the workaround sucks, I don't think we can get rid of it just yet. Maybe for 1.8.\nThe IE fix looks good.\n. This probably shouldn't be pulled until after 11.2 but I wanted some feedback ;)\n. Ah sorry, forgot all about that. Should I change the two other pulls?\n. Sure, let's talk trough this.\n1. I used the static function to keep the same style as JURI::root() because most of the time this will be used it will replace a call to JURI::root(). I know this is problematic for unit tests, but isn't this better addressed in one go with the other static methods of JURI?\n2. I could of course inline the code from JBrowser::isSSLConnection() - but why?\n. It's quite possible that a site owner only has a SSL certificate for the full URL (www.example.org) so it doesn't include subdomains. With two variables in JConfig it is possible to only use a different (sub-)domain when using a non secure connection.\n. You're right, didn't pay attention. I'll make a new pull after we've discussed how it should look like.\nBTW It would be awesome if you could contact Github and ask if they could add the feature to define the default branch for pull requests on a repro, maybe they'd do it for a project as big as Joomla :)\n. Closing to start a new pull against staging.\n. Done. Also fixed the deprecated tags already in the file.\n. Sure, I'll include it in my next pull of a number of smaller things.\n. I added it as part of this pull: https://github.com/joomla/joomla-platform/pull/196\n. Sorry, I was to trigger happy. New pull is here: https://github.com/joomla/joomla-platform/pull/198\n. Closing, will open a similar one in a sec.\n. Next error:\nFatal error: Call to undefined method JRegistry::getValue() in /Applications/MAMP/htdocs/joomla-platform/libraries/joomla/log/log.php on line 251\n. Since no follow up and no one else reported this issue in the last 6 months I'm going to close this issue.\n. The pull request doesn't merge anymore. I'll assign this to Andrew but without this being mergeable he's unlikely to do anything.\n. Sorry, took me a little bit longer.\nWithout this patch paths like this are used:\nIf the task contains a dot, e.g. articles.save (only the part before the dot is used):\nBASE_PATH/controllers/articles.format.php\nIf the task doesn't contain a dot:\nBASE_PATH/controllers/controller.format.php\nThe BASE_PATH is JPATH_COMPONENT if not overwritten.\nFormat can be XML, JSON and so on, if it is HTML it is omitted.\nNo with the pull we change the behavior when the task doesn't contain a dot:\nIf BASE_PATH/controllers/controller.format.php doesn't exist but BASE_PATH/controllers/controller.php does we use the later.\nIs that we you need?\n. Wrong branch and one code, I shouldn't work this late. Will make a new pull tomorrow.\n. This issue appears to have been fixed.\n. I tried going down the json_encode rule as well (which is significantly faster) but after doing some reading up I too had to realize that JSON only covers a subset of JavaScript objects. Notably JSON can only contain data, not code, which kinda makes sense.\n. I tried to use the unit test that used to be in there but it wouldn't pass for me.\n. Right, because we're not actually trying output JSON but a JS object. What we could do is just get the serialization of a couple objects and test against those. This way we'll know when something breaks but we won't discover if anything is broken now - still better than nothing thou.\n. Not sure what's the best way to go here, checking for JDocumentHTML, the format parameter to be HTML or whether the method getHeadData exists (like in this pull).\n. Unfortunately not.\n. Issue has been fixed a month ago with the above pull request.\n. Fine with me but could someone cherry-pick e2288773? Or should I make a new pull request for it\nIt's a fix I'd really like to see in 1.7.2.\n. Fixed the tabs.js fix and update Core to 1.4.1\n. This pull request has had More 1.4.0.1 from the beginning.\n. MooTools: http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26805 (not yet updated to 1.4.1)\nTabs: http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26481 (doesn't contain the last small fix)\nI'll update both when this gets finally pulled.\n. Thanks Andrew :)\n. Why 12.3?\n. IMO 12.1 is totally fair for these parts(!) of JBrowser. I don't think we should remove stuff in 3.1, this way it won't be in 3.0.\n. grr Why am I not allowed to align the deprecated tag with the others?\n. Closed in favor of #493.\n. Closing as fixed. Thanks!\n. If this is ok code wise someone would need to look at the unit tests, one of the mock objects doesn't behave nicely with this.\n. Good point, fixed.\n. Merging this manually wouldn't be a big issue, but someone else should decide on the merits of this change. I just don't speak regex.\n. Has been fixes a while back.\n. This should fix all your comments. I probably should fix as much as possible in the autoformatter too, but who has the time ;)\n. Inspired by this discussion I've ran the autoformatter (with the rules so far pulled to the platform code) on the unit tests too. The result can be found in #486.\n. I still like the idea, but I wonder how we can make it more general purpose. One thing would be to be able to override the URL.\nThe other question is that I don't quite understand the point of the directory attribute. Could you elaborate on that one?\n. I didn't say I want to be able to directly use external URLs (that certainly wouldn't be good)\nWhat I do want is to put the Url portion into a separate method so I can easily override it in a subclass and still take advantage of the other code. Kinda like JFormFieldList is subclasses dozens of times only overriding the getOptions() method.\n. I'm closing this as won't fix.\nWe don't see this as generic enough to be in the platform. \n. BTW we need a sniff for the new line at the end of file rule.\n. I haven used phpcs in months. I was just surprised that jenkins warnings/errors didn't decrease by this pull request.\n. Sorry I was mixing up stuff (hey it's late)\nWhat I was really wondering is that check style reported 453 warnings and 44 errors, the same number as in many other pull requests.\n. I feel spammed...\n. I'm not Nikolai but done ;)\n. This should lower the PMD warnings a bit.\n. This doesn't yet included the changed sniff, I will add that later.\n. Oh what I forgot to mention: This is much closer to the CMS code style. IMO it's desirable that we share a common code style.\n. Adding some numbers:\nA diff between my branch and 11.2 has about 18% less lines than a diff between 11.2 and the current head.\n. One argument against pulling up the else and elseif behind the closing bracket is that some text editor that support collapsing blocks seems to have some trouble with this (TextWrangler for example)\n. Is that actually needed? PHP should handle that itself unless we're comparing paths someplace.\n. Why are you adding the jimport calls for JLog back? We just removed them.\n. I talked to Louis about it, JLog should be loaded from the unit tests. In the long term jimport() calls should all but disappear from the main code.\n. @Elin didn't we just change it a bit back to say the release win we remove stuff and not the release in which it was first deprecated.\n. @gpongelli\nWhen you're trough addressing comments could you rebase this into one commit?\n. Code Style and unit test report: http://elkuku.github.com/pulltester/pulls/532.html\n. For the code style stuff phpcs is used (https://github.com/sebastianbergmann/phpcs-sebastian)\nAs for rebasing, here's dome documentation on it: http://help.github.com/rebase/ But that should be the last thing to do after all is fixed.\n. Something went wrong here, this pull contains several commits that are already part of master.\n. Did you happen to rebase you branch? that may have gone wrong.\nMaybe Ian knows a way to fix this, if he don't I suggest creating a patch from this pull request (https://github.com/joomla/joomla-platform/pull/532.patch), applying that to a fresh branch and making a new pull request from the new branch.\n. I'm closing this for now. I'll reopen one like this after 11.4.\n. I also added a small deprecation notice for some Joomla 1.0 compatibility stuff.\n. Any idea why they tests don't execute? Apparently they work on Nicholia's machine: http://elkuku.github.com/pulltester/pulls/555.html (I believe those fails are due to his set up)\n. Sorry for getting your name wrong ;)\nI've never gotten around to properly setting the stuff up on my machine so it's a really bad point of comparison (for now).\n. Finally. Fixing the unit tests was more work than the work on the libraries themselves.\n. It is the right place, however since the CMS hasn't catched up to the platform yet you'll have errors in the CMS that are already fixed in the platform.\n. This has indeed been fixed a while ago.\n. I'll leave that for you guys to decide. The autoloader should pick up the new location without issues, but anyone who has a require or include for that file would be out of luck.\n. Well it hasn't made it to the CMS until a week ago.\nIMO the question is how many people use require instead of jimport()\n. Not sure if this is a good idea (and it's kinda cheating too). IMO we should deprecate them when we know whatever we wanna make them private or if we wanna rename them. Just adding the note we'll do this or that really isn't helpful for devs and just hides the problem.\n. Did you use git mv to move the two files? It'd be good to keep the history on those files intact.\n. Weird, github isn't registering this as moved files. And the history for the new files have just one entry (https://github.com/chdemko/joomla-platform/commits/filter/libraries/joomla/filter/input.php)\n. Maybe we'll have to do those in two commits, sucks loosing history.\nOn a related note, do we rally need those stubs? I really wonder how many people use require instead of jimport().\n. I think your branch is based on the repro before it got rebased. Ian may know how to fix it.\n. I added the same tests that we had for JFormFieldEditors. I hope they work.\n. I'm a bit lost here where the three checkstyle errors come from\nAccording to http://elkuku.github.com/pulltester/pulls/603 they are:\nlibraries/joomla/form/fields/plugins.php:18\n@package tag comment indented incorrectly; expected 4 spaces but found 4\nlibraries/joomla/form/fields/plugins.php:19\n@subpackage tag comment indented incorrectly; expected 1 spaces but found 1\nlibraries/joomla/form/fields/plugins.php:20\n@since tag comment indented incorrectly; expected 6 spaces but found 6\nwhich just doesn't make any sense.\n. Should be fixed now.\n. Have you tested this with the CMS? JException seems to offer some methods Exception doesn't, I wonder if they are actually used.\n. @mbabker\nIt should have helped. The code I substituted is 1:1 what is in JError::isError()\n. How about this for 11.4:\n```\n// Attempt to validate the field.\ntry\n{\n    $valid = $this->validateField($field, $group, $value, $input);\n// @deprecated 12.1\nif ($valid instanceof JException)\n{\n    JLog::add('JFormRule subclasses should not return JExceptions. Instead either a RuntimeException or LogicException should be thrown. ', JLog::WARNING, 'deprecated');\n    switch ($valid->get('level'))\n    {\n        case E_ERROR:\n            JError::raiseWarning(0, $valid->getMessage());\n            return false;\n            break;\n\n        default:\n            array_push($this->errors, $valid);\n            $return = false;\n            break;\n    }\n}\n\n}\n// There was an invalid field due to unexpected value, etc.\ncatch (RuntimeException $e)\n{\n    array_push($this->errors, $e);\n    $return = false;\n}\n// There was a problem actually validating the field.\ncatch (LogicException $e)\n{\n    JFactory::getApplication()->enqueueMessage($e->getMessage(), 'warning');\n    return false;\n}\n```\n. Could you please rename the file from stringinflector.php to inflector.php. This way it will be picked up the autoloader.\n. The last comment from jenkins looks ok (254 warning 0 errors)\n. No, that's the entire platform. Your code seems to be fine.\n. Also the since tags need to be changed to 12.1\n. The form.php stuff got added with #604.\n. Unit tests don't go trough import.php, so this shouldn't affect unit tests.\nThe unit test with JRequest issues probably need a require_once to fix them.\n. Urgh, don't hit enter when the cursor is still on the title.\nThe two jimports() are not required anymore thanks to #604.\nMoving JStringNormalize should be done now since it's a pretty new class and not many people will have it used yet.\n. You got the wrong one for the since tag, $type should have 11.1, getInput() 11.4.\nI think most of those 54 code style errors are du to missing spaces in string concats.\n. $opt['useStorage'] = (isset($params['useCookie']) && $params['useCookie']) ? null: 'false' ;\nThat should work, shouldn't it?\n. The above pull request has been fixed 2 moths ago.\n. Looks good to me.\n. What do you mean, Andrew?\n. Ah, gotcha.\n. Yes please! :)\n. I don't think so. For this we'd have to rename the fields folder to field.\n. I pulled in the work from your branch and hopefully fixed all the the code style errors.\n. I agree. But wouldn't the example Andrew gave better be a RuntimeException?\n. Ok I think I've done it as Andrew suggested. Note I haven't tested the code yet, but I'd be grateful if someone would check if my approach is sound.\n. I realized I handled the legacy JExceptions in the wrong place but this should be good. I haven't tested this in the wild yet so please don't merge quite yet. I'd be glad thou if someone looked over the code.\nBackward compatibility should be maintained with this unless one is directly using the (protected method) JForm::validateField() or is directly using JFormRuleEquals (which is hardly possible) so I think we're pretty safe.\n. Please don't mess with JParameter. It's legacy code that will probably be dropped rather soon, no need to change anything there.\n. JElement and it's subclasses (part of the JParameter system) are also deprecated.\n. Can't really check. My unit test set up is somehow broken, I really need to fix it.\n. Is that from after my last push?\n. The actual issue is that $this->name has been introduced without wiring it up.\nIs _name supposed to be private or protected? Either way we should use it the way we want to use it in the long term and use __set() and __get() for b/c for 2.5.\n. This has been fixed in #1144 in a different way. Thanks for contributing!\n. Couple of points:\n1. JNode is referenced in docblocks in JCategories. Those should probably be removed.\n2. Does it really make sense to ignore code coverage for deprecated classes? Seems a bit like cheating\n3. Could you add the deprecation logging?\n4. The CMS uses JTree once in JAdminCssMenu. Could you take a look at cleaning that up? That would be great.\n. re No. 4. I think that's fine however you'll have to open an accompaning issue on the tracker too.\n. I don't think this is the right solution.\nFor charset we already have a dedicated function. We just need to get a HTML5 switch for the renderer to take care of the new ways.\nAs for itemprop, that would be more interesting. Personally I'd kinda like to take the wait and see approach on the Microdata/RDFa stuff and come up with a more unified approach until we start modifying API.\n. Right, I didn't get to add that (very simple) code in time for the PBF event. I got sidetracked by RL stuff and had other priorities on my J! work.\nSince I had to do a JDocument pull request today anyways I've added the code for it there. It's #386. If we get lucky it gets merged in time for 2.5.\n. Slightly different implementation that keeps me from finding out how to mock that thing on short notice.\n. Instead of this #697 and #699 should be merged. I'll fix this one up with the remaining stuff when those are merged.\n. I split everything except the bug fix off so we can deal with each separately.\n. Any news on this?\n. Since the repro is now PHP 5.3 and up we can use LSB now.\nSomehow your pull request got bad, you're original commit is gone but you got a dozen commits in here that are already part of the platform. Could you make a new pull request or fix this one? Thank you.\n. I'm gonna close this since the commits in the pull have nothing to do with the description and the author doesn't respond anymore.\n. self won't work as Christophe pointed out, you'll have to use static. Could you open up a new pull request for that?\n. Somehow sometimes _name is used and sometimes name. This will confuse quite a few people. We should come up with a fix that maintains b/c.\n. This looks good to me except for the commented line of code. Do we still need that old code for reference? If not please remove it.\n. Why did you change them to always return true instead of allowing to chain them with other methods?\n. Could you line out what changes are needed so we could discuss them before you spend a lot of time implementing it? I hate it when people spend a lot of time on implementing something that can't be accepted for some reason.\n. I misunderstood your comment - I suppose so did Christophe - but I was more asking about the lock/unlock table thing since that's the context of this pull request. Some of the other things on your list sound interesting as well but we gotta be careful with backwards compatibility, there's just now a big discussion about it on one of the CMS lists. \n. @piotr-cz\nWhat do you mean be simplify script elements? I don't think they can be simplified with HTML5.\nFor the link element you probably mean to take off the \"/\". I'm kinda against this because someone may wanna use the platform (or even the CMS) to output XHTML5 - and it doesn't really hurt either.\n. Sure. We can back port it to the CMS if we want to later on.\n. I don't really wanna go into a lengthy discussion about the CMS stuff here so just a couple of points:\nThe way I see it the isHTML5() check is mainly for platform related stuff, including JForm. However we have to be careful that everything keeps working when isHTML5 returns false. So I'd like to take us the conservative approach. One things that we could due for starters is output the required attribute when isHTML5() returns true.\nI really don't see this used for components or modules. I think template overrides are way better here. Of course nothing stops an extension dev from using it in this way.\nIf this gets committed I'll submit code for JApplicationSite and JApplicationAdmin that lets you set the value trough a parameter of the template. I originally had that code right in JDocument but it couples the platform to tightly to the CMS. The global configuration (JConfig) is a really poor place for it since you may have both HTML5 and XHTML templates (e.g. one admin one site or two different site templates)\n. Any news on this?\n. The pull is not in a mergeable state.\n. I know it was this way before but we can prevent running some code when we write it this way:\nif ($app->isAdmin() && $path = JApplicationHelper::getPath('toolbar'))\n. This was fixed on the CMS side. There actually is a proxy that allows you to keep using the name JRules (for now)\nThe problem was that extensions didn't import all the classes they used but relied on other classes importing them. When those imports were removed because of the autoloading stuff started breaking.\n. any way to know what characters cause these issues? can we filter them out before?\n. Does this actually work\n    return iconv($from_encoding, $to_encoding . '//IGNORE//TRANSLIT', $source);\nOr is the //TRANSLIT part ignored by PHP?\n. If you change your commit message to include Closes #342 the issue will be automatically closed :)\n. First of all the issue is due to this code that is actually in the list view (the layout to be precise).\n<?php if ($item->language=='*'):?>\n    <?php echo JText::alt('JALL','language'); ?>\n<?php else:?>\n    <?php echo $item->language_title ? $this->escape($item->language_title) : JText::_('JUNDEFINED'); ?>\n<?php endif;?>\nSince we can't change all them we have to move further up and the first thing they'd all have in common is indeed JModelList. If we don't wanna couple the platform to the CMS in this way (on prevent iterating over the items twice) I think it would actually be an acceptable solution to just change all the core layouts. Extension will have to be adapter for database abstraction anyways.\nSince this difference in behavior is common to all fields that are char(mysql)/nchar(mssql) maybe it should be fixed at the database driver level? This would mean modifying JDatabaseSQLSrv::fetchObject() and probably JDatabaseSQLSrv::fetchAssoc() and JDatabaseSQLSrv::fetchArray() too trim all fields.\nThis would make using MS SQL Server more transparent for developers, but I suspect there are performance implications.\n. Would it be possible to support both, a whitelist and a blacklist? (mutually exclusive)\nIf I write an app that only supports mysql and mysqli I shouldn't have to change my forms every time the platform adds a new driver.\n. I fixed the conflicts.\n. This post is delicate to write since I'm not very fond of jQuery (nor including it into the platform) and I'd like to lay out my concerns with this code. It my tone gets a bit harsh please excuse, I don't mean to insult you solution (which obviously went a lot of work into).\n1. It only solves the problem of including multiple jQuery versions, not the problem of including both jQuery and MooTools. I still maintain that the best solution would be a system plug-in that the major jQuery consumers agree on. This plug-in should override JHtmlBehavior with a version that also includes behavior.jquery but more importantly could replace other behaviors with jQuery equivalents (keepalive, noframes, captions, multiselect are the low hanging fruits, especially captions would be loved by many since it's often the reason why mootools is still loaded)\n2. This is a lot of code. We don't do any sort of version tracking for other javascript and I don't think we should start - it just adds quite a bit of complexity I don't see this warranted.\n3. I'm not sure I wanna add prescript/postscript. The platform and CMS all but stopped using the $() function (only mootree and the uploader remain) - I may get to them before 2.5 too. So the problem will be reduced to 3rd party code very soon and eventually solve itself.\n4. What's the use case of JHtml::isCallable_()? I don't see it used in your code.\nI'm probably gonna bite my tongue on this but if we do wanna provide a solution to the jQuery problem (I still maintain it could be solved by a plug-in, see above) I wonder it wouldn't be better to just include behavior.jquery (and the necessary jQuery files) into the platform. Seems like less hassle than to add (and maintain) 350 lines of code just to load a javascript framework.\n. Wow that was quick.\n1. I worded my comment badly. From the Joomla forum it seemed to me many people's issues with jQuery and MooTools is that they don't wanna load MooTools at all. That's why I think that such a plug-in would be good.\n2. Apparently we mean something different by version tracking. I think it's bad to start keeping track of the version of an external script we load. I think you mean by not tracking that we don't have to put jQuery into the repro, correct?\n3. For this \"deep no conflict\" you're doing, yes it's necessary. The question is if this is really desirable. This could still mean loading 3-4 JS framework. (which could be less than before admittedly). For normal noconflict a much simpler solution would suffice. While I can see the beauty of this code I really think it encourages bad behavior.\n4. Ah this makes sense. Might indeed by a good idea until we switch JHtml::_() to throw exceptions. I do kinda suspect this fixes mostly a community builder problem - no other extension I know supports so many Mambo/Joomla version with just one package. Everyone else could probably rely on things being present since they only support two versions. (Not a reason not to include it!)\nSecond list\n2. I have to admit to not know much about jQuery (I only used it when absolutely necessary) but isn't one of the major advantages over MooTools that's it has better backwards compatibility? So shouldn't it be sufficient to just include the latest version that is loaded.\n1. I suspect here lies the true problem we have. For a variety of reasons (preference, existing script, MooTools incompatibilities) we have lots of people wanting to use jQuery. Since the CMS never made that a real option we now have the situation where extensions are all over the place and careless site builders may end up with MooTools and several jQuery versions loaded. I appreciate that you're trying to fight the worst symptoms of the situation with this but I really think a more radical solution would be better in the long run (if we really need one in the core, I have to admit I'm not totally sold on it but I try to separate this from my other concerns.)\n. Got another question on the \"deep noconflict\" (the concept is new to me).\nHow do you handle it when you have some piece of javascript code in your layout and you need access to jQuery? How do I get the right one? Or does this only work for JS added to the head?\n. So this doesn't work at all when I'm mixing JS into my HTML correct (in layouts in particular)?\nWe tell people who use MooTools to suck it up and to use whatever version comes with CMS (basically). I don't see why jQuery would be any different.\nTaking the CMS hat off your point regarding limiting the platform to one JS library is true. Maybe we should discuss if all that JavaScript stuff (and with it most of JHtml) actually belongs into the platform. While it is nice to offer an \"integrated\" solution we do kinda limit platform users in this regard.\n. I can see how this breaks but I wonder why would you access JUser::getAuthorisedViewLevels() or JUser::getAuthorisedGroups() in an event that fires before the user is logged in?\n. Updated the branch.\n. +1 from me\n(Just of of curiosity, why the many commits?)\n. Instead of passing 'int' you could pass 'none' if you don't want any filtering. I'm gonna close this, if there's still an issue please post.\n. As Elin pointed out this seems to be a CMS issue.\n. It think it should be just true/false too. If I'm reading the code right, setting false would actually mean true right now.\n. We do that in a number of places (for the benefit of some IDE), take the JHttp package as an example. But yes with such long classes it won't be the prettiest thing.\n. What I'm not understanding what about this code is breaking the CMS now but not in the future?\n. Looks fine to me.\n. The currently plan is not to actually move these files until Joomla 3.0. We just move classes we consider cms to the libraries/cms folder inside the platform repro.\n. TBH I didn't expect to start this kind of debate. Andrew, is your issue with the entire patch or would you be OK with JView::escape() just calling htmlspecialchars() with the appropriate parameters?\n. Sorry I didn't respond earlier, yes I'm fine with tabling this.\n. Yay!\n. Any news on this?\n. Not remove it, supplement it with the legacy error handling. I just had a quick glance at the plug-in adapter, I think we gotta fix that one too.\n. Here's an example of using both methods: https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/database/table.php#L528 (up to line 546)\n. I know, I haven't had time to figure out why they fail.\n. Thanks for looking into this. Could you explain why my approach isn't working. As far as I can tell JDate should be able to handle the timezone change.\n. I'm closing this for now, might pick it up later again.\n. @Dj83 If you fix the code style issues (http://elkuku.github.com/pulltester/pulls/791) that were found we can get this merged.\n. This is fixed in Joomla 3.0 alpha 1. If you need the fix in an older version please file a bug on the CMS tracker and link to this pull request.\n. Woult it make sense to start with a baseline that is supported by JApplication, JApplicationCli and JApplicationWeb?\n. Do we really want this? Personally I think it's annoying to handle CR or CRLF files.\nBut this does make the code prettier ;)\n. Cool stuff Christophe! I do have one small concern. Should we really take away access to the fetch* methods without warning? Maybe it's better to add a deprecate note that access will be protected in release X. (I wouldn't add it do the deprecated log since the methods will be called hundreds of time's from inside JDatabase.)\n. To me keeping this separate makes sense. I can see us using other interfaces (e.g. countable, serializeable, jsonserializeable, maybe even array access) here as well.\nMaybe we should have something like a JDatabseResult object and a method in JDatabase that returns that object. One could than either use JDatabase::setQuery() and make another function call to get the result object or use the API originally proposed by Christophe.\n. Good catch. Actually we can remove that entire line since JDatabaseException is loaded by the autoloader when necessary.\n. Ok. Let's see this as a minimum solution in case the other doesn't work out for some reason. (This one should be 100% B/C BTW)\n. Thank you!\n. urldecode() wasn't added for beauty but for backward compatibility. The output of Joomla 1.5 (which couldn't use http_build_query()) had to match that of Joomla 1.6.\n. Didn't mean to close this, sorry.\n. You can configure the net beans code style to closely match the one we mandate but there's no replacement of actually running phpcs.\nAlso could you please add a stub for unit testing of the two new classes. Thanks.\n. I only found 8 warnings\n```\nFILE: ...AMP/htdocs/joomla-platform/libraries/joomla/cache/storage/memcached.php\nFOUND 8 ERROR(S) AND 3 WARNING(S) AFFECTING 11 LINE(S)\n50 | ERROR   | Expected \"if (...)\\n...{...}\\n...else\\n\"; found \"if\n     |         | (...)\\n...{...}\\n...else \"\n  65 | ERROR   | Expected \"if (...)\\n...{...}\\n...else\\n\"; found \"if\n     |         | (...)\\n...{...}\\n...else \"\n  74 | ERROR   | Please consider the / / style for comments that span over\n     |         | multiple lines.\n  76 | ERROR   | Please put a space between the // and the start of comment\n     |         | text; found \"//$servers    = (isset($params['servers'])) ?\n     |         | $params['servers'] : array();\"\n  80 | ERROR   | Please consider a blank line preceding your comment\n  81 | ERROR   | Expected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...)\n     |         | ...{...} ...else \"\n  85 | ERROR   | Instanciating new classes without parameters does not require\n     |         | brackets.\n 207 | ERROR   | Please start your comment with a capital letter; found \"//\n     |         | prevent double writes, write only if it doesn't exist else\n     |         | replace\"\n\n```\n. Couple more things to fix:\n```\nFILE: ...P/htdocs/joomla-platform/libraries/joomla/session/storage/memcached.php\nFOUND 2 ERROR(S) AFFECTING 2 LINE(S)\n107 | ERROR | Please put your comment on a separate line preceding your\n     |       | code; found \"// $this->_db->close();\"\n 214 | ERROR | Please start your comment with a capital letter; found \"// set\n     |       | prune period\"\n\nFILE: ...AMP/htdocs/joomla-platform/libraries/joomla/cache/storage/memcached.php\nFOUND 1 ERROR(S) AND 3 WARNING(S) AFFECTING 4 LINE(S)\n82 | ERROR   | Please consider a blank line preceding your comment\n```\n. Thanks!\n. You're almost there. phpcs reports 20 style errors, I could spot only one from looking at it. I placed a comment there.\n. Here you go\n```\nFILE: ...Applications/MAMP/htdocs/joomla-platform/libraries/joomla/http/http.php\n\nFOUND 9 ERROR(S) AFFECTING 6 LINE(S)\n40 | ERROR | The variable names for parameters $transport (2) and $adapters\n     |       | (3) do not align\n  40 | ERROR | The comments for parameters $transport (2) and $adapters (3) do\n     |       | not align\n  40 | ERROR | Expected 2 spaces after the longest variable name\n 191 | ERROR | Expected 2 spaces after the longest type\n 191 | ERROR | Expected 2 spaces after the longest variable name\n 198 | ERROR | Opening brace should be on a new line\n 208 | ERROR | Please start your comment with a capital letter; found \"// check\n     |       | if there is available http transport adapters\"\n 213 | ERROR | Expected \"foreach (...)\\n...{\\n\"; found \"foreach (...) ...{\\n\"\n 226 | ERROR | Whitespace found at end of line\n\nFILE: ...ns/MAMP/htdocs/joomla-platform/libraries/joomla/http/transport/curl.php\nFOUND 2 ERROR(S) AFFECTING 2 LINE(S)\n183 | ERROR | Whitespace found at end of line\n 191 | ERROR | Opening brace should be on a new line\n\nFILE: .../MAMP/htdocs/joomla-platform/libraries/joomla/http/transport/socket.php\nFOUND 2 ERROR(S) AFFECTING 2 LINE(S)\n235 | ERROR | Expected \"if (...)\\n\"; found \"if (...) \"\n 264 | ERROR | Opening brace should be on a new line\n\nFILE: .../MAMP/htdocs/joomla-platform/libraries/joomla/http/transport/stream.php\nFOUND 1 ERROR(S) AFFECTING 1 LINE(S)\n188 | ERROR | Opening brace should be on a new line\nFILE: ...tions/MAMP/htdocs/joomla-platform/libraries/joomla/installer/helper.php\nFOUND 3 ERROR(S) AFFECTING 3 LINE(S)\n49 | ERROR | Instanciating new classes without parameters does not require\n    |       | brackets.\n 57 | ERROR | Expected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...)\n    |       | ...{...}\\n...else\\n\"\n 59 | ERROR | Whitespace found at end of line\n\nFILE: ...htdocs/joomla-platform/libraries/joomla/updater/adapters/collection.php\nFOUND 1 ERROR(S) AFFECTING 1 LINE(S)\n229 | ERROR | Instanciating new classes without parameters does not require\n     |       | brackets.\n\nFILE: .../htdocs/joomla-platform/libraries/joomla/updater/adapters/extension.php\nFOUND 1 ERROR(S) AFFECTING 1 LINE(S)\n167 | ERROR | Instanciating new classes without parameters does not require\n     |       | brackets.\n\nFILE: ...cations/MAMP/htdocs/joomla-platform/libraries/joomla/updater/update.php\nFOUND 1 ERROR(S) AND 3 WARNING(S) AFFECTING 4 LINE(S)\n287 | ERROR   | Instanciating new classes without parameters does not require\n     |         | brackets.\n\nFILE: ...ations/MAMP/htdocs/joomla-platform/libraries/joomla/updater/updater.php\nFOUND 1 ERROR(S) AFFECTING 1 LINE(S)\n215 | ERROR | Please end your files with an empty line.\n```\n. Another round\n```\nFILE: ...Applications/MAMP/htdocs/joomla-platform/libraries/joomla/http/http.php\n\nFOUND 2 ERROR(S) AFFECTING 2 LINE(S)\n191 | ERROR | Expected 2 spaces after the longest variable name\n 228 | ERROR | Whitespace found at end of line\n\nFILE: ...cations/MAMP/htdocs/joomla-platform/libraries/joomla/updater/update.php\nFOUND 1 ERROR(S) AND 3 WARNING(S) AFFECTING 4 LINE(S)\n287 | ERROR   | Instanciating new classes without parameters does not require\n     |         | brackets.\n\n```\n. One last thing, we discussed this and the change to JHttp should go into a separate factory.\n. Sorry for the confusion, we discussed this on Skype. The reason why it should be done right in the first place is that if we move it after it's been in a release we'll have to keep the old API around. Don't want that.\nNot refactoring, factory. (http://en.wikipedia.org/wiki/Factory_method_pattern) It essentially means to add another class the package called JHttpFactory that deals with creating the class with the right options. It's kinda like the JFactory just for one package.\nThere isn't really an example of a factory (besides JFacotry) in the platform right now, so you couldn't know. It's a design pattern we'll slowly move to. The only example I can think of is the JContentFactory (https://github.com/eBaySF/joomla-platform/blob/content/libraries/joomla/content/factory.php) but that one is quite a bit more complex.\nIf you need any more infos just shout.\n. Sorry, took me a while to get back. In the middle of my exams, but today is Joomla day ;)\nI'd really prefer to get this right the first time so we don't have to lug around a legacy API.\nWhat would you use JObjectFactory for?\nAnyway you'd need to move getHttpTransports() and getAvailableDriver() to JHttpFactory.\nLastly add a method like this:\npublic static function getHttp(JRegistry $options = null, $adapters = null)\n{\n   return new JHttp($options, self::getAvailableDriver($options, $adapters));\n}\n. @piotr-cz I stumbled about the same thing when I took a stab at implementing direct to file downloading. My thinking would be that the arguments for timeout and userAgent should be removed and be dealt with in the options (the transports of an options object too). I was also wondering why the options are a JRegistry and not an array like most classes. I suggest to bring this up on jplatform so the original authors of that package (Louis and Ian if I remember correctly) can chime in.\n. @oc666 \nCode looks good to me, I'm gonna pull this as soon as you fix the style errors.\n```\nFILE: ...lications/MAMP/htdocs/joomla-platform/libraries/joomla/http/factory.php\n\nFOUND 4 ERROR(S) AFFECTING 3 LINE(S)\n30 | ERROR | Expected 2 spaces after the longest type\n 30 | ERROR | Expected 2 spaces after the longest variable name\n 31 | ERROR | The comments for parameters $options (1) and $adapters (2) do not\n    |       | align\n 34 | ERROR | Missing @return tag in function comment\n\nFILE: ...Applications/MAMP/htdocs/joomla-platform/libraries/joomla/http/http.php\nFOUND 1 ERROR(S) AFFECTING 1 LINE(S)\n40 | ERROR | Superfluous doc comment at position 3\n. Yes I mean the google Group.\n.\nFILE: ...lications/MAMP/htdocs/joomla-platform/libraries/joomla/http/factory.php\nFOUND 1 ERROR(S) AFFECTING 1 LINE(S)\n33 | ERROR | Return comment requires a blank newline after it\n```\n. Thanks for sticking with this :)\n. Haven't really looked trough it yet, but for started some of the @since tags should read 12.1, not 11.3.\n. I agree, moving stuff without preserving the history isn't good.\n824 would take care of the query classes, since this is collapsed into one commit now anyways it should be easy to create a new pull for this after merging #824.\nOn a different note, do we really wanna rename JDatabase to JDatabaseDriver? Somehow that doesn't feel right.\n. As for the configuration, I don't see a way to do that in a backwards compatible fashion. JApplication uses the set() and get() methods from JObject which serve a completely different purpose. We can't change that without deprecating them first.\nFor the charset stuff I propose we just add them as abstract methods and leave the implementation to the subclasses, as far as I can tell they all need a slightly different implementation anyways.\nAlso after talking to Rob I added the loadDispatcher() method back to JApplicationBase and changed JApplication to use it.\n. I have MooTools high on my list, I wanna do the update together with the dropping of the 1.2 compatibility layer.\nAs for simplepie, can't we just remove it from the platform? We don't really use it but for one method in the factory, I'd just leave it up to the CMS to include it.\n. I'm gonna go ahead and merge this myself so we can get our unit tests back to work.\n. A couple of things\n-There are multiple public methods removed that weren't deprecated before. Moving them to JInstaller - which makes sense to me - should happen in a backward compatible fashion, like you did with parseXMLInstallFile().\n-Removing the toolbar code in JApplicationHelper is one of the things we wanna do, but I'd like to know where in the CMS it's gonna end up (which class, which method) before we remove it.\n. So far we've tried to avoid to remove methods without prior warning, I don't see the harm to keep getPath() around as a deprecated method.\nAs for the toolbar, I realize this gotta move to the CMS. I'd just prefer to know where before we scratch it out. (I maintain a fork of Joomla that keeps working with the current platform)\n. Ok I figured out where to put the toolbar code.\n. I dove some more into this and discovered that this is actually a legacy feature back from Joomla 1.0 and should probably be completely dropped.\n. I agree, lets try that. We'll have a CMS 3.0 alpha and if lots of stuff starts breaking we could still revert and add a deprecation notice instead.\n. Assigning to Louis since he wrote the autoloader.\n. I agree that there's a bug nut I'd love to see some benchmarks on a site with a lot of modules since all modules are loaded in that query if I read it correctly.\n. It's not in a mergeable state due to other changes made, you have to update it.\n. I missed that there was one. Fixed.\n. Yay, 7 warnings less. One more when we remove the deprecated method.\n. Why are you removing JFormFieldCheckboxesTest? Otherwise great stuff.\n. @mbabker \nThere's both a JFormFieldCheckbox and a JFormFieldCheckboxes.\n. You have to run phpcs on your own computer. The code style definition is in the build/phpcs folder.\n. This tracker is for issues related to the joomla platform. For end user support please use the Joomla forum at http://forum.joomla.org .\n. Sorry, I don't know the module and this really isn't the place to ask.\n. I got a pull request in the works that deals with JObject for a number of classes (https://github.com/realityking/joomla-platform/commit/665f971efe8605c7a5b001e5821ee0429c121605), didn't even think about it when I made this pull. Changed that ;)\n. I noticed this comment:\n// Try for Joomla 1.5 type queries\nI've seen it in some of the other adapters too. Is that still accurate? Do we want to keep that code?\n. The merge commits are still there.\n. Damn I knew there was a reason why it isn't static when I looked the last time. When I looked today I missed the $this.\nI'm closing this pull request until I come up with a better fix.\n. Wouldn't that be a breaking change anyways? Also as far as I've seen the UCM stuff doesn't even touch or extend JObject.\nI talked to Rob about this a while back and he meant everything in JObject is fair game.\n. I was so bold to merge this myself since this fixes only failing tests and doesn't touch shipping code.\n. This will be awesome to have!\n. Commits for both my proposed changes:\nPages: https://github.com/realityking/joomla-platform/commit/9a2e68acf417f274fe38cabc3f9a797829bd12bf\nIterator: https://github.com/realityking/joomla-platform/commit/5b8a465685437e32889e3d5e4887152ada66beb4\nFeel free to cherry pick them.\n. The ApplicationException doesn't exist anymore so we don't need a test for it.\nAlso JInput has move to its own package and the unit tests should go into the corresponding folder.\n. Still got 3 test failures.\n. Thanks!\n. Certainly didn't expect this to be tested.\n. The commit that caused this is https://github.com/joomla/joomla-platform/commit/297caf113d4c7261104a7c79c06d3624ee015dc5\nThis was a fix for the following issue: http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=27046\n. Closing, this is dealt with in #931.\n. Opening a pull request automatically opens an issue too so I closed #930.\n. 1. JDocument depends on this (JDocumentHtml to be exact) I don't see how we could decouple it without breaking B/C.\n2. My environment is beyond repair as far as db dependent unit tests go but maybe someone else can step in.\n. Why do you wann load a GUI calendar when it's read only?\n. After a brief discussion with JM we figured out the issue isn't actually the JHtml::_('date', $value) call (which is done without this patch too) but that the date conversion for those other calendars actually happens in JS, so when we don't load the JS it isn't converted.\nThe whole system is very ugly, but I can come up with a better one. Anyone else wiser?\n. Either works for me. I followed how JRequest worked but I'm open to change it if we agree on def() as a convention.\nI'll whip up some unit tests when I'm back home.\n. Either works for me. I followed how JRequest worked but I'm open to change it if we agree on def() as a convention.\nI'll whip up some unit tests when I'm back home.\n. The code mentioned by JM was now removed in #1386. So I'm closing this one.\n. I understand the intention but I think we should try to standardise these things more instead of making them configureable. Convention over configuration.\n. We currently have no interest to do this so I'm closing here.\n. Does the path actually break or does it just look weird? PHP should automatically change / to \\ when accessing the filesystem on Windows.\n. That's a valid question and I suspect it's not needed. Since I don't have a windows environment set up I can't test things like this but it would be great if someone did.\n. Since there seems to be no issues I'm going to close this. It'd be great if someone could confirm whether that workaround is needed or not.\n. Why even explode it?\nMy hunch would be that this would work just fine:\n$this->parent->setPath('extension_root', JPATH_PLATFORM . '/' . $group);\nIf you output the path at some point it may not be pretty on windows, but I'm not sure if JPATH_PLATFORM is either.\n. Rouven likey. This runs fine on my Mac whose configuration is FUBAR for MySQL testing.\nThe thing that worries me a bit is that we're slashing the assertions jenkins runs to a third. Won't that greatly reduce our code coverage?\n. If you base your pull request of a branch and not of a commit you can keep pushing into it to update your pull request.\nWhat are those .idea files? They weren't in the other pull.\n. I'm not sure what you're saying. JDatabaseDriver extends JDatabase so any type hints and checks for instanceof JDatabase keep working, it won't stay around forever.\n. Sorry if I was unclear, JDatabseDriver is not going to go away, JDatabase is.\nDeprecated properties/methods should probably move over to JDatabase, it would be consistent with earlier work.\nAs for the rest I don't quite understand what you're saying.\n. I think the reason why JDatabaseDriver extends JDatabase and not the other way around is that we can have JFactory::getDbo() and possibly similar code adapted to how it should look like. In theory we'll have to do no changed at all when we drop JDatabase outside the database package.\nCan this issue be closed?\n. Could you explAin your reasoning? We just removed the JHtml::core() method.\nAlso this is not backwards compatible, there's a ton of code relying on core.js being loaded when MooTools is.\n. I just saw you send me an earlier, I'll respond in the morning ;)\n. First of all I'd be very interested in your jQuery plug-in. Do you host it somewhere?\nNow back to topic.\nThe code in core.js has depended on MooTools at least since Joomla 1.6, also at least since 1.6 JHtmlBehavior::framework() has loaded core.js, this used to be done by calling JHtml::core(). I just simplified the code since calling either one used to load both files.\nI don't quite get what your concern is? That some extension the uses parts of core.js will call JHtml::_('behavior.framework')? How is it going to help you if we accept this pull request, JHtmlBeavhior::core() would still include MooTools.\nI'm not saying I'm opposed to it, I'd just like to understand the problem first.\n. I'll respond in a bit, between JSST and our state parliament disbanding itself today I'm kept pretty busy ;)\n. Haven't completely thought this trough but two three that came to my mind reading trough it:\n1. We'll have to add the JHtmlBeavhior::core() method, no doubt about it. We'll just have to add another file when we start extending MT objects (I have a rough cut of Request.Joomla laying around that was supposed to go into core.js)\n2. Can you really override JHtmlBehavior partly? So far I've alway overridden the complete JHtmlBehavior class - but then I've never tried it differently. I kinda like the self::framework() calls. That whole JHtml::_() method hides valuable information from IDEs so it should be avoided where possible.\n3. I'm very much against removing the MooTools code from core.js. I'd actually prefer if we could move some of the smaller files (e.g. multiselect) into core.js so we don't have to load that many files. But even if we can't do that, we got a framework in the core, why don't use it?\nWe should probably deprecate that JHtmlBehavior::framework() loads the core.js file. That will mean we'll have to add quite a bit of code but I really don't wanna be stuck in no framework mode in core.js.\n. A big :thumbsup: from me. :smile:\n. Sorry, I still don't get it. Why should the visual representation depend on what database you've selected? What happens if you haven't set up a db connection? Why display a different format in the title and in the input?\n. Pulling this broke jenkins due to style errors: http://build.joomla.org/job/platform/660/checkstyleResult/new/\n. We have since removed the dependency on the database, there really was no reason for it.\n. Wouldn't it make sense to always support multibypte characters? (without the argument)\nAlso I wonder if phputf8 doesn't have some function that could help you.\n. I don't even know what your change does, I don't speak regex ;) That's why I haven't pulled it either.\n. You'll probably have to close this pull and make a new one. I recommend making a branch for every pull request you want to make. I'm closing this one so nobody else stumbles over it. Thank you.\n. I added the test.\n. Good point, fixed.\n. I think you've run into some line ending issue (LF vs CRLF most likely) and are rewriting the entire file. Could you fix that?\nI'm fine with pulling this, but I wonder why the other transports don't work? We should try to fix them.\n. No worries, just fix it and add a comment here. I'll be notified by github.\n. I'm going to merge this to get the build running again, we can fix JFolder in another pull.\n. Looking good. Thank you.\n. You have a style error: http://developer.joomla.org/pulls/pulls/1015.html\n. We'd need to upstream this too https://github.com/CBeloch/mooRainbow\n. Last time I forgot to check, all pull request have to be made against staging not master. I'm closing this one, please open up a new one against staging.\n. Merged, thanks.\n. This has already been fixed in master. Closing.\n. Why the change of approach from #1009? Also the code style is off.\n. You'd have to put it into /libraries/son/serializable.php (note the missing J in json) and you'd have to change the case from what is used in the php documentation (to JSonSeriazeable) - not sure that's worth saving 3 lines.\n. Fine with me. Any preference to where to put the interface (which folder/subpackage)?\n. Done as suggested.\n. All tests should pass now, was just a typo.\n. You have a few code style error you'll need to fix: http://developer.joomla.org/pulls/pulls/1026.html\n. We wanna do 1), just no one has gotten around to writing it.\n. For timeout I tend to agree, for userAgent - why? IMO we should drop that argument completely.\n. That's what I mean, sorry if I was unclear. The userAgent should be settable trough the options, just not necessarily as an argument.\n. Could you register the new class locations in import.legacy.php please. Otherwise existing code would have to be updated for the new location.\n. Looks good to me, I'll just wait for the pull tester to run over it.\nOne last concern (we can address that after the merge, no biggie): deprecated 12.1 makes no sense, this would mean it won't be present in the next release and we might as well delete it now. IMO it should be 12.3.\n. Something fishy is going on with the pull tester, could you push something else in to the branch? You could set the deprecated tags higher for example ;)\n. It's not so much the errors but the 4 \"missing\" warnings that left me wondering.\n. That's what I'm thinking but I'd like to be sure ;)\n. Those are leftovers from when staging was tainted, just pushing something into the branch should fix it.\n. Thanks!\n. Thank you!\n. I stumbled on that one a couple of days ago too: https://bugs.php.net/bug.php?id=61483&thanks=4\n. This actually makes trouble in the CMS since we started relying on the autoloader for the CMS. Shouldn't we just move JGrid to a different package where it can actually be autoloaded?\nAlso I think it's time to phase out the dynamic nature of JHtml::_. Thanks to the autoloader it's now fairly easy to overwrite classes one by one - we'd loose the overriding of individual methods thou.\n. A bit more agressive proposal . not suitable for 2.5 thou - we could rip out the links and use the button element instead. Than we wouldn't need to worry about the href attribute and it's probably more semantic too.\nI just tested that and it just requires changing a single line of CSS (plus the JButton subclasses of course)\n. Thanks for following up!\n. Would you do me the favor and document all these here after they've been pulled: http://docs.joomla.org/Potential_backward_compatibility_issues_in_Joomla_3.0_and_Joomla_Platform_12.1\nThanks!\n. Yeah, forgot to change the tests to match the code. Hope it works now.\n. Dependency on JError has been removed in #1104, so I've taken that part out.\n. That one if fine with me thou ;) Merged.\n. Yeah, I'm gonna get the backward compatibility club out on this one. Since this is a public member IMO it warrants some B/C treatment (which most likely means __get and __set)\n. If that's the case shouldn't we just deprecate it and remove the entire class at a later date? (move to legacy now)\n. I just checked and it's actually used quite a bit in JClientFTP so moving it to legacy is not an option.\n. Could you explain a bit more what $identity is for? Is it supposed to always hold an object for the current user?\n. Yes it does :)\n. Thanks!\n. Good catch, I found those a few days ago too and got a different fix in #1052: https://github.com/joomla/joomla-platform/pull/1052/files#diff-0\nI'll leave this open in case mine doesn't get accepted.\n. The changes look good to me. One thing that \nWe do have some testing of exceptions just very little and unfortunately not all can even be tested - at least I don't know of a way.\nA couple of suggested changes:\n-Could you also change JInstallerHelper::unpack() to expect exceptions? Currently it expect false to be returned when an error occurs.\n-Please add @throws tags to all methods that throw exceptions\nAnd a question, why are you using LengthException for 'Invalid Zip Data'?\n. Awesome work!\n. Hi Amy,\nthanks a lot for working on these. 2 points:\n1. Docblocks ;) We need the throws tags\n2. JUpdater also extends JAdapter, I haven't checked but I suspect it needs to be changed as well.\n. Thanks Amy!\n. Thanks! Small tipp for the future, it would be great if you could align the throws tag with the other docblock tags.\n. That would be preferable yes, but I should have checked http://developer.joomla.org/pulls/pulls/1076.html before I pulled it so this is my fault.\n. Thanks!\n. Should JModelAdmin, JControllerAdmin, JModelForm, JControllerForm etc. be even changed? IMO they belong into the CMS and should move to the legacy folder.\n. Now we have the next problem, your pull isn't mergeable anymore because #1096 was merged. Could you update it? Thanks.\n. Actually the merge looks pretty good but I'll use #1097.\n. For some reason unit tests are failing on this: http://developer.joomla.org/pulls/pulls/1088.html\n. This still doesn't merge cleanly. Also I'm wondering under what circumstances this would be triggered.\n. You identified a valid problem but a solution is already in progress. We are going to get a new MVC package soon (hopefully later this week according to Andrew) and even if we don't we'll most likely move the CMS specific classes to the legacy folder.\nI'm going to close this pull request for now, if all else fails we can reopen it.\n. I feel with you and I'll keep this pull in mind in case the bigger project doesn't work out.\nI agree we need to find a better way to communicate bigger projects to the community.\nIn the future I suggest before you undertake a bigger task, to ask on list for feedback on it. I realize that isn't a great process, but it's the best I can come up with right now.\nBest regards\nRouven\n. Can't we just remove it?\n. Thanks you guys for fixing my mistake.\n. I have to say I'm not a big fan on changing these in classes that are so commonly extended. This change for example will break both editor plug-ins shipping with the CMS and probably all 3rd party ones as well.\n. I'm not sure how commonly JAdapter is used in 3rd party code but considering the classes are only useful if they are extended I'm not sure this is a good idea.\n. I think these are going to be deprecated and moved to legacy. If we're eventually dropping them I see no reason in changing them now.\n. Hi romacron,\nthe pull request isn't mergeable and also has some style issues. Could you please separate it into multiple pull requests? Thanks.\nAlso please try to use a meaningful title and description for pull requests, we use those to generate a change log.\nI'm closing this one.\nRouven\n. Yes, they were good. Thanks!\n. Nik: This doesn't really adress your comment, but as a point of clarification I think it's highly unlikely that the CMS will use the new MVC in 3.x.\n. I don't wanna get into the whole name debate - I don't care all that much TBH - but there are ways to ease the transition even with conflicting names. Joomla 3.0 is still 5 months off. We could add aliases to the current MVC classes called JViewLegacy, JControllerLegacy and JModelLegacy. That either with 3.0 or 4.0 (I'd leave that up to debate) the old class names wouldn't be supported anymore giving developers access to the new MVC classes/interfaces.\nSo the question would come down to this: Would it be reasonable for extensions that support 3.0 to not work on 1.6 to 2.5.4 but work with 2.5.5 and up?\nI do think we should move this discussion to a better venue, since at that point it becomes only relevant for the CMS. I'd like to see more discussion on the code than just about the name of three interfaces.\n. @AmyStephen \nI can answer that one. It's due to how the autoloader works. Otherwise we'd have to either special case these classes in the autoloader or use much uglier class names.\n. @mahagr \nWe already do that in the CMS for the J prefix, we look in both libraries/cms and libraries/joomla - in Joomla 3.0 the solution will be more elegant. The Platform actually does the same with libraries/legacy and libraries/joomla.\nHowever to have JModel, JController and JView being in the same folder (let's call him mvc) under libraries/joomla like this\nlibraries/joomla/mvc/model.php\nlibraries/joomla/mvc/controller.php\netc.\nWe'd either have to register the classes individually or add some sort of special logic to the autoloader just for the MVC classes.\n. @nikosdion \nMy plan is to submit a patch for JViewLegacy & Co. as soon as this is merged. (I'm using Legacy because we'll likely wanna build some CMS specific classes on top of the new MVC interfaces that may or may not be compatible with the current classes and I don't want another name collision ;) )\nThat said I think we should seriously consider dropping the old class names (JView, JController and JModel) to allow extensions to use the new Interfaces/Classes if they want to. But that's really a discussion for the CMS list and doesn't belong here.\n. @nprasath002  Could you fix these as per Ian's comment. Would be great if you could rebase them into one commit as well.\n. I think you have some problem with github. This pull request has changes that have nothing to do with the description and isn't mergeable.\n. Thanks!\n. Has been fixed.\n. Unit tests don't pass on this: http://developer.joomla.org/pulls/pulls/1137.html\n. @romacron Are you still interested in fixing this?\n. Thanks, closing this one since #1418 supersedes it.\n. @LouisLandry\nDone.\n@eddieajau\nJObject is already its own package, Rob did that weeks ago ;)\n. I changed the type hints to SimpleXMLElement because of #1141.\n. Updated.\n. Thanks. They should be fixed now.\n. I left the tests intact for now to demonstrate B/C, we can change the later.\nThe 3 files you mentioned I didn't change because that would be a (small) B/C break, if we wanna do that we can do it in a later pull request.\n. Thanks for the comments! getCmd() isn't really needed since cmd is the default filter, I opted for the shortest syntax possible while preferring get() over the magic methods.\n. I not sure about most of these yet but I'm not a fan of moving getIterator() the factory. The way I see the API is that you get a JDatabaseDriver object from the factory for your connection, you query something from the DB and than get the iterator to use the results. I don't see why I should get the iterator from the factory instead of the JDatabaseDriver object, it also means I'd have to keep track of two objects to query the database.\n. I don't follow. JDatabase is still in the type hint for backwards compatibility reasons, the method used (getDateFormat()) isn't deprecated.\nI also don't understand what the $format parameter is for. Why not use JDate::format() directly?\n. I see the general goal your after - decoupling JDate from JFactory and the database package - but I still don't quite see where you'd use the $format argument. Do you plan on changing JLoggerDatabase after this is merged?\n. Looks fine - except for the the dozen or so style errors you just introduced :P\nMaybe the $format part can be done in a different pull, I just don't see the use for it yet.\nThe code could be made a bit shorter (untested):\nif ($dbo === null)\n{\n    if (class_exists('JFactory'))\n    {\n        $dbo = JFactory::getDbo();\n    }\n    $format = $dbo->getDateFormat();\n}\nelse\n{\n    $format = 'Y-m-d H:i:s';\n}\nActually not sure if that's better and I'm tired so take that with a grain of salt.\n. Yeah I realized that and changed the code again, though I had managed to fix it before you look ;)\n. Ah I think we're getting closer. Your not supposed to pass in the the JDatabaseFactory but your JDatabaseDriver object. That should work.\n. Right you obtain a database object from JDatabaseFactory and that database object is what JDate expects.\nAs for the type hint, I think we can change it to JDatabaseDriver since you can actualy instantiate JDatabase on its own.\n. That won't work. A JDatabaseFactory object doesn't have the getDateFormat() method JDate needs, that's in JDatabaseDriver.\n. Yes it does :)\nI just opened #1158 I hope that gets you at least part of the way.\nAs for the problem with JLoggerDatabase, how about we change this line https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/log/loggers/database.php#L126 to:\n$entry->date = $entry->date->toSql(false, $this->dbo);\nSince JLoggerDatabase keeps track of its own DB object that'd would make sense to me. This would also cover the use case of using a different database type for logging than for the main application data. (Not sure anyone would actually do that but one could)\n. Could we add to the docblocks that this class works only with ASCII strings?\nAlso at least toKey() would use mb_strtolower() when mbstring is enabled. Is that still to slow? toVariable() would also mostly use mbstring functions.\n. @robschley \nSomething like \"The methods in this class only work with ASCII strings. Unicode strings are not supported and should not be used with this class\" at the class level would be fine with me.\n. When you deal with the code style changes, I got one last request. Could you move LogException to legacy and register it in import.legacy.php? Thanks.\n. 3 code style errors: http://developer.joomla.org/pulls/pulls/1178.html\n. Otherwise looks good, will test with the CMS after the adjustment is made.\n. Thanks for the fix. You now have a code style error on line 534 (whitespace at the end of a line)\n. Thanks!\n. Couldn't test locally so I hope the unit test run trough ;)\n. There was a unit test error caused by this that spread to all other pull requests so I closed this. I'll reopen it when I get a chance to fix the error.\n. You got an unit test error: http://developer.joomla.org/pulls/pulls/1186.html\n. Since disabled is a very common argument we should consider moving it to JFormField (like the check for required). This could save some duplicate code and make sure the fields behave the same.\n. Yep, that's how I imagined it :)\nNow we'd only need to change the fields to use $this->disabled.\nNext release will be 12.1 but this pull probably won't make it before 12.2.\n. This doesn't merge cleanly. @benjaminpick could you please fix it? Thanks.\n. Nice one! I wonder if we should move JRouter to its own package as well.\n. This actually creates a new set of problems for the CMS. We wanna keep supporting JRequest for 3.x because there's no other transition strategy in place. However this requires that both JInput and JRequest share the same data source. One way around this would be to make JRequest a wrapper for JInput but I'm kinda afraid we're creating a new set of bugs this way.\nThoughts?\n. @piotr-cz \nThat's why I wrote we wanna keep it around in 3.x. My plan is to drop using it in 3.0 (or 3.1 if we don't get done) and remove JRequest as a class not before 4.0. However that's not a final decision by anyone - just my plan.\n. Oh I was unclear )or misread the change not sure anymore), the change itself doesn't create a problem. But if we decide to go the route Louis suggested for the $_REQUEST object as well we'll get the problem I described.\n. Still 3 code style issues: http://developer.joomla.org/pulls/pulls/1209.html\n. Didn't mean to remove Sam's comment but I removed the change to JInstallerAdapterComponent because I'm not sure myself. The issue was discovered by @mbabker and I asked him to take another look. I'm leaving the JText change since that's a fatal error.\n. I thought about that too. The only advantage I can see is that the error handling is mostly done for you - the rest is just fluff. What do others think?\n. Superseded by #1239.\n. I took of the first commit so we can just deal with the update.\n. Fixed.\n. I think this one is already fixed. Please confirm.\n. I removed the JLog part since you covered everything that was important in you PHP 5.4 pull request. I'll leave this one for the two remaining issues since they're both one liner.\n. One CS error: http://developer.joomla.org/pulls/pulls/1250.html\n. Cool. What did you change in logo.tar and logo.zip?\n. Thanks. The pull looks fine to me except that it seems like you're using spaces for indentation but we use tabs. Could you fix that? Thank you.\n. Gotcha. Thanks again!\n. If we keep the old ones around please deprecate them.\n. Thanks. We fixed this in other pull requests so I'm closing this one.\n. Thanks!\n. Thanks!\n. I'm not sure about this. According to this PHP bug parse_urls behavior may be platform dependent: https://bugs.php.net/bug.php?id=52923\nI'd like to a see a source or some testing across PHP versions and platforms before we merge this.\n. Ha, I just realize that comment is from Mark Dexter, I'll ask him about it.\n. Great idea to finally add this. But isn't filemtime rather slow?\n. Fair point. For Joomla itself we could use a hash of the version, but that wouldn't help extensions.\nMaybe someone else has a bright idea?\n. Great idea! We probably have to generate that file on the server and not beforehand to prevent version disclosure but that's a CMS detail.\n. Fair warning: If no one has anything against this or a better solution by the end of the week I'll pull it.\n. Well that won't work in the (admittedly rare) case where the file size doesn't change on updates. That would probably only happen when fixing typos thou.\nQuestion is if that's a compromise we wanna make.\n. Indeed I overlooked the date/time. Sorry.\nWhy even add the file size than?\nfilemtime is also quite slow (and not cached by PHP) so I'm not sure that's not worse than reading that file.\n. Thanks!\n. That's a lot of code :(\nHow about we only use eval() when there's actually an expression used and just tell people that's a feature they can't have if their host disables eval?\n. Also I wonder how this compares in performance? This code is possibly executed a number of times on each page load.\n. You also have a few code style errors: http://developer.joomla.org/pulls/pulls/1298.html\n. You also have a few code style errors: http://developer.joomla.org/pulls/pulls/1298.html\n. True. But at least for JApplication I'd prefer people not using it since it will eventually disappear.\n. Great stuff!\nA couple of things:\n1. We don't accept failing tests. (I know we should but it's not possible in our current process)\n2. Could you rebase to get rid of the merge conflicts?\nAlso your patch revealed one of the interesting things that happened with the legacy package. JDocumentHTML actually depends on JModuleHelper but the later is in legacy and thus not available in unit tests. I propose to move it back since it's really an integral part of the templating system we have. What do other think?\n. I talked to Louis about this. Please add the test to the legacy test suite. That will work fine. You just have to move the file to a different folder for that.\n. Any news on this?\n. @garyamort Could you fix this up as per my comment? Thanks.\n. You have a few code style issues but the report isn't up yet. You'll see it on http://developer.joomla.org/pulls/index.html when it has run.\n. What do others think about deprecating the use operators in countModules()? Templates can use them right in their code, it's only a tiny bit of more code for them and would save us the headache of the eval().\n. @garyamort \nThe pull tester agrees with me and sees 6 code style issues ;) http://developer.joomla.org/pulls/pulls/1307.html\nAs for the security or not security debate: If you're passing user input to that function it's your responsibility to filter it. If it was considered a security issue just checking for an uneven number of terms wouldn't be a complete solution either. Anyway, it's not treated as a security issue but we still wanna fix it so I don't think it's a big deal.\n. @garyamort \nThe pull tester agrees with me and sees 6 code style issues ;) http://developer.joomla.org/pulls/pulls/1307.html\nAs for the security or not security debate: If you're passing user input to that function it's your responsibility to filter it. If it was considered a security issue just checking for an uneven number of terms wouldn't be a complete solution either. Anyway, it's not treated as a security issue but we still wanna fix it so I don't think it's a big deal.\n. Indeed. Thanks, I've fixed.\n. That's actually intentional, otherwise we'd hide all the XML errors. Since of all these deal with local files shipped with the app or extension I don't think we need to handle them.\nWhen accepting XML that's non local or user supplied that's a different matter.\nThe alternative would be adding this (from JFactory::getXML()) everywhere:\n```\nlibxml_use_internal_errors(true);\n$xml = simplexml_load_file($data);\nif (empty($xml))\n{\n    JLog::add(JText::_('JLIB_UTIL_ERROR_XML_LOAD'), JLog::WARNING, 'jerror');\nJLog::add($data, JLog::WARNING, 'jerror');\n\nforeach (libxml_get_errors() as $error)\n{\n    JLog::add($error->message, JLog::WARNING, 'jerror');\n}\n\n}\n```\nor using error suppression. I don't think either is necessary.\n. Good catch.\n$this->_input is the correct solution since our code style says to use the underscore prefix for private variables.\n. Works for me.\n. I have to say I'm not a big fan of that syntax, but lets see what other are thinking.\n. Added some fixes for things I overlooked the first time. We really should catch these exceptions in JApplication. Now we'd be able to deal with JMenu::getInstance() throwing exceptions as well, but I'm not sure of the B/C impact. \n. Backwards compatibility. I was considering moving it to legacy and only using it when legacy is loaded. Do you think we should just not use it?\n. Updated to remove JXMLElement from everything but JFactory::getXML().\n. Guess that what you get for relying on the unit tests. Thanks!\n. Could you add some unit tests for this so we don't regress on this?\n. I think you misunderstood me. I meant to add a test for this behavior to https://github.com/joomla/joomla-platform/blob/staging/tests/suites/unit/joomla/JFactoryTest.php\n. Not sure what you mean, JFactory::getXML() doesn't use JError.\n. Ah sorry, now I understand the confusion. JError is also a class thats quite hard to unit tests, and this is indeed not used here.\nI just looked at the code again and it looks like the actual return value for the method is correct. It's just the log messages you want to remove, correct? In that case I'll pull this as is.\n. Thanks.\n. Closing since JToolbar has been moved to the CMS.\n. Thanks.\n. Is there a reason you don't do the same change in line 881 and 875?\nAlso in the future, please use a more descriptive title for pull requests. They are used the automatically generate change log.\n. I'm merging this now but I'd really be good if someone submitted unit tests for this,\n. Thanks, should be fixed now.\n. One alternative I originally had for the CMS is putting it in a event (the onAfterSessionStart event trigger will be added in the next pull request) but that's not really a solution for the platform.\n. I discussed this with Louis and I think we came up with a better solution. I'll be back.\n. Don't merge this just yet, legacy phpunit fails right now.\n. Ok, all clear :) Easier than I thought.\n. Hmm, I'm not getting any. Could you post the failures you're getting?\n. Indeed they were failing - but only if you have Xdebug.\n. What app is that? Eclipse?\n. I'd be fine with this, what do others think?\n. This doesn't address the issue form #1356, it maintains the current way while allowing lazy sessions.\nAs for unit tests, yes that'd be nice but it's pretty hard because obviously we can't start a session when running the unit tests. (the CLI SAPI might not even have the session methods). We could mock all the PHP methods out and make sure we cll them with he right arguments but that's probably it.\n. @LouisLandry\nDo you have an alternate suggestion for the event? I was planning to use the same event to move the who's online stuff from JApplication to a plug-in.\n. Updated with some suggestions from Louis.\n. Thanks!\n. Thanks! Merged.\n. Good point. Done.\n. Indeed, it should be session_regenerate_id(true). I had that in an earlier version but apparently it got lost. Fixed.\nAs for B/C, could we wait if something breaks?\n. We don't have any of the other bootstrap modifications in the platform yet and thus it would actually use different markup than JDocumentHTMLRendererMessages.\nI'm going to close this for now, we'll have to see how we'll handle bootstrap with the platform when the CMS is ready to merge.\n. I'm not sure about this, see my response in #1285.\nI suggest we keep the discussion there and than decide which approach we wanna take.\n. Yeah I found that info too but the absolute time is still insignificant.\n. Thanks a lot! Got a small comment and have to wait on unit tests to run but all looks good :)\n. +1\nJust waiting for the pull tester to run.\n. You also got a bunch of unit test errors. This commit should fix it: https://github.com/realityking/joomla-platform/commit/55a352512733c7ec216df6b1fd58a97257de1f7a\nCould you cherry pick it into your branch? Thanks.\nI'd really like to merge this tomorrow so it can make its way to the CMS.\n. Your patch is breaking the unit tests. The commit I linked is the fix, you just have to cherry-pick that commit into your branch and we should be good to go.\n. Thanks. Merged.\n. I agree we'll never be able to completely get rid of them (at least not with PHP's current error capabilities). But there are a number of places where we wouldn't need them if we'd use a isset() or other checks like that. That's why this would only add a warning, not an error.\n. Not sure we really want this in the platform, it's more application logic to me. Also the would make JImage depend on JFolder and JFile which I'm pretty sure we don't want.\n. Right, that's doable. The question is if we really want this in the platform, I'd be interested what other think about that.\n. We wanna start limiting the dependencies between packages to those that are really required. This should make it easier to just use certain packages from the platform. We also made the decision not to expand the FTP support to new functionality so there's less need for JFolder/JFile.\n. I didn't say it was a rule. It's my opinion. Note I didn't close this since I wanted to let other people weight in ;)\n. Thanks for that. You're on the right track. I'll look trough it a bit more later.\n. One bigger question left as well: I see you're both storing the thumbs on the disk and returning the JImage instances for them. I think that's too much for one method. If both functionalities are desired I suggest splitting it into two methods, one to generate them and one that generates and stores them depending on the first. This would adress @piotr-cz's use case.\n. Not quote I was thinking more along the lines of a generatThumbs() methods that does all the generating but doesn't bother with the filesystem and a createThumbs() method that calls generatThumbs() but stores the result to the disk.\n. Somewhere along the way you changed the permissions of the file:\nlibraries/joomla/image/image.php 100644 \u2192 100755\nPlease undo that.\n. @pasamio @mbabker Could one of you review this? Thanks.\n. At the very least we should move the stuff not actually used by the platform :)\n. The attempt to keep supporting test() didn't work correctly and would rarely be required so we might as well drop it.\n. Yeah the class name in the title was nonsense.\n. Wouldn't it be better to add a PSR-0 (https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md) mode?\n. Close and code added to #1399.\n. Interesting stuff. But wouldn't that be better as new driver? (Mysqlpdo for example)\n. We do? Mysqli has a couple of nice things (asynchronous queries mostly) that PDO doesn't (yet) offer that could be useful in the future. From what we use right now there not really a problem with PDO's feature set thou.\nPrepared statements can be done with mysqli thou, we need to abstract the statement class thou. I like the approach of Doctrine DBAL that emulates a (large) subset of the PDOStatement library for mysqli.\n. Thanks. Fixed.\n. I don't know much about PHAR but do we really need to duplicate the import file in a 3rd and 4th location? This is just young to get out of sync.\n. Hmm, is there a fix without perfuming a regex?\nIn some testing I did the time spend in _autoload started to get significant. (It's called so often) Not sure it's smart to make it more complex.\n. @pasamio @mbabker Could one of you take a look at this? Thanks.\n. No we shouldn't. The whole point of deprecating and removing DS is to force people to just use slashes. We saw a measurable performance increase in the CMS when we dropped using DS because we require far less string concatenations.\nIf we need to compare paths - the only real issue with slashes - than there's JPath::clean().\nIf there's an actual issue on Windows please report it or submit a patch, but we won't use DIRECTORY_SEPARATOR generally.\n. @okonomiyaki3000 \nMissed your post. Yes DS was deprecated and it is removed in Platform 12.1 and Joomla 3.0. It's fairly trivial to add to your extension if you need it. I'd recommend investing the time thou.\n. There's no WISWiG editor in the platform, you probably ended up in the wrong repository.\nThe Joomla CMS usesTinyMCE (https://github.com/tinymce/tinymce) as its default editor, if that's the editor you mean I recommend you report your issue there.\n. I agree we should stick to JHtml::_() for now but it still makes sense to make the classes autoloadable since it simplifies a few things. The legacy JHtml* classes are already autoloadable and so are those the CMS keeps around, so far we haven't seen any problems with it.\n. Good idea!\nYou got a couple of style issues thou: http://developer.joomla.org/pulls/pulls/1414.html\n. Pull request can't be merged. Please update it.\nAlso some CSS changes to mooRainbow made their way into it. I guess that wasn't intentional so please revert those too.\n. This pull request can't be merged right now according to GitHub. Also you have style errors: http://developer.joomla.org/pulls/pulls/1420.html\n. This looks pretty great already. You got a couple of uni test errs thou: http://developer.joomla.org/pulls/pulls/1422.html\n. Looks like you rebased or something.\nAs for the JavaScript, that's part of the platform as well. Take a look at the media/system folder.\n. Does this keep working with behavior.combobox?\n. It does that only when the commit message is formatted in a certain way so you have to be careful if you want that behavior.\n. Thanks Mark!\n. Why would we remove the use of \\? The whole reason that method exists is to support data types beyond those that are handled by JSON.\n. Closing since this is fixed. Thanks.\n. Since JPATH_ROOT should always be the absolute path to your application I wonder under what circumstances it became an empty string.\n. It wasn't supported in 5.2 at all AFAIK. But we don't support PHP 5.2 anymore ;)\n. Works just fine in my testing.\n. Thanks Mark.\n. I can see how this is useful but I'm afraid of the performance implications. In some testing I did we spend up to 20% of the execution time in the autoloader. If we add more it certainly won't help.\nI let other s judge whether it's worth the trade off, but frankly I don't see the big deal with following our folder strcuture. We could put the factory into a factory folder and it would be autoloadable too. \n. Well it is for all legacy classes. For example in the Joomla CMS we have 3 autoloaders for J prefix so this code would be executed twice in the worst case.\nAnother thing that just occurred to me is that with this patch we don't have a 1:1 mapping of class names and file paths anymore. Again not a big deal but something to consider (and document).\nEdith: The thing is also not the variable but the file_exists() call.\n. Could you change both @ since tags to 12.2? Thanks.\n. I wonder if we should just remove that check. Anyway, merged.\n. Sorry for the many questions, I'm a bit afraid we break something.\n. Another vote for option No. 1. \n. Could you explain a bit why these changes are needed for postgres?\n. Thanks.\nMaybe I should be a bit more specific, the question I have is what's different about postgres that we need those changes. I'd just like to understand so we can avoid them in the future.\n. Code style error: http://developer.joomla.org/pulls/pulls/1460.html\n. How do the other transports behave in this regard?\n. Maybe someone else could confirm. I think it'd be good to be consistent between the transports.\n. @dianaprajescu \nYou're quite close. What people are requesting is that you use a transport agnostic name (like you just did) and handle in the different transports. At least JHttpTransportSteam has an option called follow_locationthat should map to the one you just introduced. (Also the defaults should be that we follow redirects)\nThanks for going trough with this!\n. Looks good to me, just waiting on the pull tester.\n. Are you sure about //TRANSLIT,IGNORE? I can find no reference for that online.\nAlso according to the PHP documentation with //IGNORE added no error should be thrown. Is that a PP bug? If so what version are affected?\n. Thanks for the link to the test script. I had to add the correct header for UTF-8 for it to work but here are my results:\n//TRANSLIT,IGNORE: no output. Error message: Notice: iconv(): Wrong charset, conversion from UTF-8' toASCII//TRANSLIT,IGNORE' is not allowed\n//IGNORE,TRANSLIT: no output. Error message: Notice: iconv(): Wrong charset, conversion from UTF-8' toASCII//TRANSLIT,IGNORE' is not allowed\n//TRANSLIT//IGNORE: Correct output, no error\n//IGNORE//TRANSLIT: Correct output, no error\n//TRANSLIT: no output. Error message: Notice: iconv(): Detected an illegal character in input string\n//IGNORE: Output is with both UTF-8 charters gone so that's correct\nPlain: no output. Error message: Notice: iconv(): Detected an illegal character in input string\nPHP version: 5.4.4 on OS X\nConclusion: //TRANSLIT,IGNORE and //IGNORE,TRANSLIT seem to not work at all and are not recognized at all. All others behave as expected. If the option contains //IGNORE there's no error message generated.\nMy hunch:\nAs so often the PHP documentation probably already has the information we need:\nNote that the iconv function on some systems may not work as you expect.\nIn such case, it'd be a good idea to install the \u00bb GNU libiconv library.\nIt will most likely end up with more consistent results.\n. Apparently the main issue is libiconv vs glibc's implementation of iconv. While it's highly discouraged by PHP to create implementation specific code using that information I'm afraid we'll end up with that.\n. Is still still working with the JS calendar? With non-gregorian calendars?\n. I suggest you talk to JM about non-gregorian calendars, he knows most about it.\nYou also have code style issues and a unit test failure to address: http://developer.joomla.org/pulls/pulls/1468.html\n. Also it'd be great if you could take a look at refactoring JUser::getCryptedPassword to use the new classes.\n. Sorry, I had not noticed this got out of sync.\n. Are you a cli user? Try git rebase -i upstream/staging and set all the commits but the first one to fix.\n. Picking up @ianmacl's point. For what do we even need the IS_MAC constant? Can we remove it and just use IS_UNIX on OS X?\nWe only use it in JClientFTP to decide for the line ending, since OS X also uses LF we probably do it wrong over there anyways.\n. We should probably keep it around in the import.legacy.php marked with an @deprecated for backwards compatability. (and set both IS_UNIX and IS_MAC to true on OS X).\nWould you do these changes?\n. Not quite, you need to remove the use of IS_MAC in JClientFtp.\n. Could you squash all these commits into one as well? Thanks.\n. Uh not quite. The old commits are still there. Try a forced push (git push -f on the CLI) after squashing.\n. Closing because there's some bug in here.\n. Thanks!\n. Thanks, fixed.\n. Response from the CMS wasn't very large but positive so this can go ahead.\n. onContentPrepareForm gets passed a JForm object. Each form has a name (JForm::getName()) to identify it so you can make sure you only modify the form you want to.\nThe disadvantage of your approach is that I may wanna modify two or three forms and I'd need one method for each form. With the current approach a simple in_array() check is sufficient.\n. You got style errors: http://developer.joomla.org/pulls/pulls/1514.html\n. I'm closing this one since it's a bug in a CMS library.\n. For reference here's the discussion on the CMS list: https://groups.google.com/forum/?fromgroups=#!topic/joomla-dev-cms/D8FiWlqataA\nI was probably a bit quick in submitting this. I'd be curios how you have used it? From a quick grep it looks like we don't use it at all in the CMS.\n. Of course we can lave the parameter - but what's the point when we don't actually use it internally. If anything we'd have to add the parameter to the render method as well.\n. Thanks. This has already been fixed.\n. It's an issue alright.\nThat said, maybe we should define an interface for JVersion and allow injecting it. That way the platform can pick up the name and version number of the application where necessary.\n. The issue is even worse than that. We're using this value to set session.gc_maxlifetime (https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/session/session.php#L934) which is measured in seconds (http://php.net/manual/en/session.configuration.php#ini.session.gc-maxlifetime).\n. Code wise this looks fine to me. We need to document all these constants better though. Would you mind adding docblocks for all of them or at least for the one you're adding that descibe what each mode does? Thanks.\n. Wouldn't it be better to add required=\"required\"? In most browsers (the notable exception being IE8) this is mapped to the corresponding ARIA state. In the CMS we already have a JS based fallback for this.\n. The Memcache(d) changes look fine. We should look into sharing some code between the Memcache and Memcached implementations.\nI'm not a big fan of the \"external session storage definitions\" for now I think our API using a the abstract JSessionStorage is fine. Eventually (PHP 5.4ish time) I think this should be refactored towards a DI pattern where all we need is an (instantiated) SessionHandlerInterface. Making sure the handler is supported would then fall onto the application.\n. This all looks pretty good to me - except one thing: Performance of the compatibility layer is going to stink. It will load every single platform class. In an environment not using a bytecode cache (and probably even in those using one) that won't be nice - especially when you consider you'd still be doing that on cached pages when using the Joomla CMS cache.\nI haven't thought much about it but I think we could use JLoader to out advantage here. If JLoader can't find a class it could look up the class in the array, define the alias and try loading again. I'm not a 100% sure that's a better or even a good idea, but I wanna put it out there so other can think about it too ;)\n. It's not about executing some code but because the resulting error results in an information disclosure issue.\nIn a perfect world platform classes would never live in a web accessible space (there are framework with that assumption).\n. Just as an FYI, I wrote this a couple of days ago: https://github.com/realityking/joomla-platform/compare/psrlog#diff-11\nIt provides a simple class implementing the PSR-3 interface that internally uses Joomla's logging mechanism. It's not complete but it should serve as an example how it could be done.\n. Didn't read this until today.\n@AmyStephen The code is quite complete, I'll have to add the context stuff before it's worth testing. I'll try to get to that this week.\n. Done.\n. I was wondering the same but I oriented myself on the file you gave me as an example. Will fix it up.\n. Fixed.\n. Fixed.\n. I don't, but the code styler sniffer does.\n. Done. You actually found a bug in the process ;)\n. Actually just 4 ;)\n. I think it can call private methods, but only if you use spl_autoload_register() inside the class.\n. In a way it's part of the API too since people may have extended a class.\nThat's why I'd like to use privates where it makes sense. This way we can change those methods and variables as we see fit without causing API issues.\n. Call is not needed because of the autoloader.\n. Line is not needed because of the autoloader.\n. Same as line 15? If so please remove.\n. Looks like a bad merge to me.\n. Same as above, bad merge please fix.\n. Not needed because of the autoloader.\n. Both jimport() calls not needed because of the autoloader. Bad merge.\n. Not needed because of the autoloader.\n. Please make sure not to add unnecessary whitespace.\n. Same as line 14? If so please remove.\n. IMO you don't need to add that method at all. Anybody writing with PostgresSQL in mind shouldn't expect it to be present.\n. Sams as line 12, please remove.\n. Sams as line 12, please remove.\n. We don't really want commented code, is there a reason to keep this around?\n. Ups, good point. Maybe we should remove that from JDatabase? What do others think?\n. You don't need to import JLod. The autoloader should do it.\n. This one should be picked up by the autoloader too. Worth a try.\n. Yes and no. Calling it dynamically works, but you'll probably get a E_STRICT warning.\n. You're right, the class actually has the right name, just the wrong file name. I think Louis is working on stuff like that.\n. That's what you get for doing a bad copy & paste job. Fixed.\n. As far as PHP is concerned that's absolutely fine. http://php.net/manual/en/language.oop5.typehinting.php\n. fixed\n. fixed\n. Fixed.\n. Fixed.\n. I'd be fine with that, but let's do that in another round.\n. The exception is never actually throw is it? It's just returned.\n. Since this will always be just one line this can be simplified quite a bit.\n. This makes this useless for my needs (Gravatar plug-in) since I need to include an image from a remote host. I'd suggest a second method getSrc(). This way I could subclass it at least.\nOn the other hand, no sure if that's really worth it. Right now my getInput() method only has 3 lines of code.\n. Gosh darn. Should be fixed now.\n. Allright, let's try that.\n. Yay, that worked!\n. Not sure what you mean. What needs escaping? On the JS or the PHP side of things?\n. Duh. I'll take it off again ;)\n. I read this up. Calling it dynamically doesn't cause any warning, so there's no backwards compatibility issue.\n. Ah I missed the \" in your 1. post. Probably won't hurt adding them, I'll do that tomorrow.\n. MAybe I'm just dense - but where? I couldn't find it. (Note that getHash was moved from JUtility to JApplication)\n. Du we still use anything from JFormFieldText? If not this should not be extended from it.\n. Missing space.\n. Should be 11.4\n. Should be fixed now.\n. What's the use of this variable now? The code in this class doesn't use it.\n. I don't think we wanna throw JException in new places, it's deprecated.\n. Thanks, fixed.\n. Fixed.\n. This needs to align with the param below it.\n. The equal sign needs to be surrounded by spaces.\n. Missing space behind the if, opening parenthesis must be on a new line.\n. Opening parenthesis must be on a new line.\n. When concating string the . operator must be surrounded by spaces.\n. Same as above.\n. Fixed. Thanks.\n. Fixed. Thanks.\n. Why does this line check if the argument is actually a string and line 55 not? they basically do the same thing.\n. Comments have to be changed to reflect the new code.\n. Kinda a different topic :)\n. Either way works for me, it should just be written down some place so we eventually get a consistent code style. (The good thing about private variables is however that we can rename them at will)\n. It's actually removed in this pull, he probably overlooked it. the replacement is setDebug().\n. It would be helpful to some IDEs to put JDatabaseQuery instead of object here.\n. I'm a big fan on type hinting so I'd put JDatabaseQuery in front of $query but that's just me.\n. It would be helpful to some IDEs to put JDatabaseQuery instead of object here.\n. My comment above about type hinting applies here too.\n. You need a space after the if and the { goes on a new line.\n. Same as above.\n. Could you add the type hint for $query? All new API uses it now.\n. Nitpicking, you probably mean get not great.\n. Please add the type hint here too.\n. Please use 12.1 for all new classes/methods/members.\n. In JArchive we use isSupported(), probably good to be consistent here. Also please add a @since tag. Last but not least I think we standardized on having the access keyword first, so in this case it should be\npublic static function isSupported();\n. This is useful far beyond updating/installing. Maybe this should be placed in a factory (or JFactory) or JHttp. I bet others will have a stronger opinion on where to put it.\nAlso you're missing the docblock here.\n. Not your fault but all filles should have a new line at the end.\n. I don't think the transports are supposed to be used independent of JHttp.\nWhile I looked at that I noticed that JHttp's constructor is a bit weird, you actually have to pass it the transport object. Maybe that's something worth improving.\n. This can be simplified to\n$basedir = __DIR__ . '/transport';\n. Is this necessary? I'd think the autoloader would pick up the classes-\n. Since we're using PHP 5.3 now we can just call the static method on a variable class (http://php.net/manual/en/language.oop5.static.php) Just have to remember to change this back when back porting to the CMS.\n. Gosh, darn. Fixed. Thanks.\n. Fixed.\n. The same as line 244 applies here too. Also why are you checking it twice?\n. Isn't the check in getAvailableDriver() enough?\n. I'll leave it to the other wether this belongs into JHttp or a separate factory, I'd be fine with this.\n. The docblock comment for $default is missing.\n. Thanks. Fixed.\n. Since the rest of the package is type hinted so should probably $parents.\n. I just noticed that, why are you hardcoding a server configuration?\n. Alright, Rouven just can't read ;)\n. Is this piece of code even needed? All classes will already be loaded by the autoloader due to the class_exists() call in line 196.\n. Since JDatbaseDriver extends JDatabase this message can't be avoided, it probably makes more sense to rely on the messages inside the methods.\n. Since JDatabaseFactory is  completely new class do we actually need legacy error handling?\n. What's the point of this class if there are no methods or members defined? Wouldn't an interface make more sense anyways?\n. You missed the @ before return. This probably caused the last two errors.\n. Could you change these to be paths off JPATH_PLATFORM. Else this is maintenance heel when we move files around.\n. You'd be undoing a recent fix with this, please use def().\n. Should we throw an exception here?\n. Why is JDatabase::getDateFormat() used here? We're not storing anything in the database.\n. Is that right? Doesn't make sense to me.\n. If we'd make this protected instead of private we wouldn't have to pass the cursor to fetchCount(), fetchObject() and freeResult(). Not sure if there's a benefit to this approach I'm overlooking.\n. Same as above but only applies to fetchObject().\n. Do we actually need subclasses of this? All the concrete implementations are empty, the database specific work seems to be abstracted into the Iterator.\nTo get the correct iterator we could pass the iterator object to JDatabasePages in JDatabaseDriver::getPages().\nOf course if there's database specific stuff that will be added later to JDatabasePages than this approach makes more sense.\n. I think we should use foreach($attachment $key => $file) instead of the for loop and document that $attachment and $name have to have the same keys. This way the keys don't have to be numerical and without gaps.\n. This doesn't fit the method signature of AddAttachment():\npublic function AddAttachment($path, $name = '', $encoding = 'base64', $type = 'application/octet-stream') {\n. You'll need to fix the docblock on the method if we don't return a boolean anymore.\n. Not sure about this one. I suspect the idea was to mimic the behavior of PHP when the property doesn't exist. With your change I'd have to add a try catch (while catching BadMethodCallException) around simple property accesses like $key->something. That seems weird to me and would probably be more confusing than helpful.\n. Is there a reason you added this? We removed all of them a while back because doc generators are capable of seeing the strict keyword before function declarations and don't need this tag anymore. It just means we have to maintain the same information in two placed.\n. This won't work since error.message is never set. I think this was complimentary to line 155/156:\n$this->set('error.message', 'Unable to decompress data');\n return false;\nI think you can simplify the whole thing to just this:\n$this->_getTarInfo($this->_data);\nThe exception will just fall trough than.\n. You're missing the throws tag on this method.\n. You're missing the throws tag on extract() and _getFilePosition() in this file.\n. I'd must leave this at return false so we don't change the API. (A message which is a non-empty string would evaluate to true)\n. You forgot the docblock.\nBTW the logic is reached when I try to access some property that just doesn't exist.\n. I don't think that's the correct exception. From the PHP doc:\nException thrown if a callback refers to an undefined method or if some arguments are missing.\nThe bad thing about semantic exceptions is that we can argue about the semantics :P\nMaybe this should be an UnexpectedValueException since it will most likely occur when an unknown value for $type is set. If a file is missing it should probably be a RuntimeException.\nArgh. Just do what you think makes sense ;)\n. Please change the type to boolean.\n. UnexpectedValueException is great here but I don't think the message is accurate. This should only be thrown if no cache handler is set at all.\n. Is there a RuntimeException thrown in this method? I don't see it.\n. I think the message is inaccurate, the message from the lang files is the following:\nJController::getName(): Cannot get or parse class name.\n. See above.\n. Not sure here, do we need to catch the db error to maintain the same behavior?\n. CMS error is this:\nJModel::getName(): Can't get or parse class name.\n. See above.\n. Would it make sense to throw a new exception with this as the message?\n. Same as above.\n. Thanks! Fixed.\n. Again, don't we loose information if we don't pas the phpMail error along?\n. You're right. Fixed.\n. Done.\n. Done.\n. Done.\n. cmd is the default filter so we don't have to add it explicitly.\n. Not sure what ideam means but I think I fixed what you mean.\n. Same as above, cmd is the default filter.\n. Same as above, cmd is the default filter.\n. see above\n. I'll fix those up in the next batch.\n. Fixed. Thanks.\n. Fixed.\n. Since the loggers aren't an argument of this method I wonder if this is the correct exception.\n. I'd leave this one around. Since we don't catch the RuntimeException that could be thrown by JDatabaseDriver::getInstance() it would look from the outside like it throws a RuntimeException. The other alternative would be to catch & rethrow the exception.\n. I wonder if this was originally done for the benefit of the CLI?\n. We should really try to make these autoloadable, good first step thou.\n. Makes sense to me.\n. We'd have to rename them to something like JLogLoggerFormattedtext etc., but lets do that in a later pull.\n. Please don't make assignments inside conditionals. We want to move away from that kind of style since it's a source of bugs and confusion.\n. Why did you make this change?\n. I explained it in the commit message: \"We don't need a proxy file for JObject since it has always been autoloaded.\"\n. They certainly haven't. But at least Chrome users (biggest group of WebKit users) update very fast and I don't think we should penalize the users of newer browsers.\n. How does this work? If they all have the same name I'd think only one would get send to the server.\n. No, at runtime they behave exactly the same. As a matter of fact they are even stored the same way. The only different is if they're defined at runtime (define) or at compile time (const) the latter being a tiny bit faster with opcode cacheing. (I read that Drupal saw an overall performance increase of 1% but they have far more constants than we do).\nthe more important point is that this is more consistent with how we define class constants.\n. This looks like garbage.\n. Fair point, I'll leave it out for now.\n. Since the rest of JSession is not chainable (and not easily made so) wouldn't that cause more confusion that utility?\n. As noted in the comment above it DirectoryIterator::getExtension was only introduced in PHP 5.3.6. Since some LTS server distributions ship with an older version of PHP 5.3 I didn't feel comfortable just changing that in a random pull request. All the other places we also use the substr() workaround.\nPersonally I'd be fine with raising the limit further, but we should be aware of the impact.\n. Done.\n. Not sure what you mean, the file is still in the joomla suit.\n. I think we can cop out here if the count is only one since that means no expression has been used. Or am I missing a corner case here?\n. 2 is an error, I agree. But what would you gain by moving the check for one further up? You still have to count the modules for that position.\n. \"The defer and async attributes must not be specified if the src attribute is not present.\" (http://www.w3.org/TR/html5/the-script-element.html#the-script-element)\n. How would the $file argument work? As far as I can tell the first caller wins. How did you see this being used?\n. Nope, inline scripts will be executed as soon as they are encountered. Async really shouldn't be used to load frameworks. An earlier draft of HTML5 actually allowed defer on inline scripts which made sense to me but was dropped for some reason.\n. Wouldn't that mean that activating such a plug-in causes jQuery to always load?\n. I don't think that's a behavior we should be encouraging. I think we can come up with a better way to support CDNs so I'd suggest leaving this out for now.\n. I'd throw an InvalidArgumentException here.\n. I agree that we can't do it in 2.5. But throwing an exception will make it much easier for devs to even notice their error so I think that is preferable for 3.0.\n. I think either we shouldn't do this or do the same with JUtility to be consistent.\n. Yeah we do. We could move the to the import.legacy.php folder, make them aliases of IS_WIN and IS_MAC and deprecate them. What do you think?\n. Thanks, fixed.\n. That's intentional. If you look in the old code for the 3 classes, JPathway and JRouter used to return a JError object but JMenu returned null. Without this the CMS installation actually fails to work.\nWe could deal with this in JApplication of course, I thought this was desirable for B/C but I wouldn't mind changing it.\n. Wasn't the formatting of the date the reason this piece of code was added? (for non-gregorian calendars)\n. Could you remove that line? Thanks.\n. Please remove the spaces around you argument. We generally don't use them. (same in line 769 and 767)\n. I didn't make it static in JApplication to facilitate us eventually moving to JApplicationWeb. and removing JApplication. So I'd be fine doing it here, however I think that's potentially confusing. Maybe we should make it static after dropping JApplication?\n. Small nitpick, could you move to the assignment out of the function call? I think that'd be more readable. There are more of these in other lines below.\n. Thanks, fixed.\n. Fixed.\n. You're missing the ; at the end of the line.\n. However you want, it's not needed but personally I don't mind it.\n. It was missing the .php so it screwed up the include :P\n. You're right, I accidentally removed the onclick attribute. I'll add it back.\n. Fixed.\n. I got a typo, it says JViewLeacy. I'll fix it in a bit.\n. Fixed.\n. This doesn't need the by reference. Please remove it.\n. Useless comments should be removed as well. Thanks.\n. Where are the coming from? #1362 had a change just like that.\n. It has been called body from the start. Maybe they were missed by the switch to JHttp.\n. Can you remove the blank line? We don't usually put a blank before closing }\n. Why are you removing this? This increases the chance of breaking things when something is added to the JHttp constructor that is required.\n. Please change these to 12.2.\n. I think this can be simplified to just the empty() check.\n. Same as above.\n. We don't actually need a JObject here. A generic object will do. Also please don't base you comment based on CMS use but be generic.\n. You'll have to replace JFactory with self, or you'll get a code style error. Also the convention right now is to use $input, that isn't really important thou. \n. You got an extra space before the second comma.\n. Use $this-> pagesCurrent instead. The get() method is deprecated.\n. The jimport for JUri isn't necessary anymore.\n. Please keep using the tenary operator. It's much compacter.\n. Nitpick: Useless new line. Can you remove it? Thanks.\n. Wouldn't it make more sense to error out right after the call to parse_url if it returns false? Or am I missing a usecase?\n. That's an API change, why do we wanna do that?\n. The only change here is removing the unescaping for \"%\", correct?\n. Why is this needed?\n. Please use spaces to align assignments, not tabs.\n. Please add @ since 12.2\n(without the space after the at)\n. Same as above.\n. And spaces again.\n. I'd remove the mkdir part. I'd let the calling method deal with creating the folder.\n. Shouldn't we just require a folder to be specified?\n. Ok. It's certainly not something I very insensitive about. My main concern (besides doing too much in a method) is that this will fall flat when there's more than one directory to be created (i.e. the path passed is /var/www/images/collection/thumbs but the folder /var/www/images/collection doesn't exist)\n. Why did you solve this using a switch a not trough inheritance?\n. Please add a constant for cropping (like there are for the scale methods) and change the default values to the corresponding constant.\n. Same here.\n. Please make this 13.3.\n. Is there something breaking by having the keys quoted?\n. Thanks, fixed.\n. I'm missing something. What's wrong?\n. Thanks! Could you submit a pull request to fix these?\n. Only platform will be fine. We merge the platform changes in bigger batches back to the CMS.\n. We don't use JError in the platform anymore, instead use the JLog workaround. (There are a number of examples for this)\n. Reverted.\n. Because I'm a chicken. I know that this implementation was reviewed by at least one paper - to me that makes this the default choice.\n. This is the most dead simple implementation to use the new API so we can deprecate the old one. It's not particular nice - I agree. But I have us rather think out carefully how we set up the password hashing than do a quick shot we later regret.\nAlso I'm still not sure if the current JCryptPassword interface is the ideal thing. If next year the new \"supercrypt\" algorithm should be used to do some flaw in blowfish a platform consumer has to inject a new object and define a new constant for it which the consumer needs configure into JUser or some other place. Also he probably needs to duplicate at least the verify and detect parts from JCryptPasswordSimple (or possibly inherit from it). That said I haven't come up with a better idea ;)\n. Can we solve this more elegantly with late static binding?\n. Sorry, forgot all about this during the holidays. Basically I'd remove the static methods from the subclasses and use this code in JApplicationBase (untested):\n``` php\nif (empty(self::$instance))\n{\n    if (class_exists($name) && (is_subclass_of($name, 'JApplicationCli')))\n    {\n        self::$instance = new $name;\n    }\n    else\n    {\n        self::$instance = new JApplicationCli;\n    }\n}\n```\n. As I said untested :P I actually didn't do any modification, I just copy and pasted from above and when I was done fighting with GitHub JS and Safari I forgot to actually change the code..\nLets try again:\n``` php\nif (empty(static::$instance))\n{\n    if (class_exists($name) && (is_subclass_of($name, 'JApplicationBase')))\n    {\n        self::$instance = new $name;\n    }\n    else\n    {\n        self::$instance = new static;\n    }\n}\n``\n. Actually the sever configuration may have changed this to something else. Maybe we should provide JSessionStorageFiles and rename this to JSessionStorageDefault?\n. Shouldn't this beclass_exists('\\PDO')`?\n. That's a really good point. I wonder if we can find a solution for this.\n. ",
    "Paladin": "OK, so I added another fix, this one for the crash caused by lack of JTestConfig in JDatabaseMySQLTest\n. \"IF you want to say it's a bug?\" IF?????? I reference http://api.joomla.org/Joomla-Platform/Document/JDocumentHTML.html#countMenuChildren:\n\"return: Number of child menu items\"\nIt didn't do as it was documented to do. It was like checking the time on a stopped clock. What, pray tell, is the definition of a bug if not that?\nAnd the only possible effective workarounds a developer could build for that could not possibly be affected by this change, since the only way to work around it is to write your own routine to do your own counting. Wouldn't be surprised if some did (as the code itself shows, it's a trivial exercise) but so what? This change doesn't affect them.\nLet's talk \"API change\" for a minute, since it's a valid concern. I reject the idea this is an API change. It's a fix. The API was documented to do x and it failed to do x. Dismally. Completely. Making the API work as advertised isn't changing it; making it do something different from what it's documented to do is changing it. If anything, this was restoring the correct API behavior, reverting whatever change made it stop behaving as advertised.\nAnd, like you, Amy, I really don't want to speculate about a developer who gets upset because we actually made some code we're releasing behave as documented. If doing that is a problem, what does that say for the product we've been delivering?\nI'm skeptical about \"backward compatibility,\" Andrew. Unless every bug fix is also a backward compatibility issue. Because every bug fix changes current behavior of a documented API call. And if we're going that far, it seems the term is being stretched beyond all utility. But I'm in full on agreement about showing that it's now fixed in the changelog. All changes, including bug fixes, belong there.\nAs for your earlier remark, Andrew. I think you may be right. Wouldn't surprise me at all if people had cargo culted some template code which had that in it to place a contextual menu on a page, and never saw what the actual appearance of the menu would do to their design, because it was never triggered. But since the template was designed to do that (why else would that code be there? Because someone wanted a long way to write \"0\"?) and they're using that template, it's hard for me to worry much about it. And I'd tend to worry more about all those potential customers we cost our users because a function they depended on didn't work properly. If someone depends upon buggy, undocumented behavior, they should expect to have to change their code. That's the nature of the industry.\n(Sorry about the length, was busy fixing JTable and didn't have time to check in on this thread earlier. BTW, you'll be happy to know the fix doesn't really change JTable, beyond making it come back more often with the right answer. Everything that used to work still works, and now, it even compensates for some sloppy developers, like the ones developing an extension I have to use. But that will be a different thread.)\n. Sorry, guys, forgot it was here as well. Have to admit the CMS currently is far more relevant to my day-to-day than the Platform/Framework, so I'm spending more time there. If the bug is beneath the CMS, I try to post a PR in both places, to make sure whoever wants it, gets it.\nTo answer:\nRe register and autoloader. The class that wasn't getting loaded properly was a core class. This was happening because a 3rd party component I had to use created a class named the same as the core class (but without the \"J\") and added it to the include paths process. (I'm away from the office at the moment, but IIRC the classes were JTableContent and TableContent. The system was looking for JTC and found TC first in the included files, so quit.)\nAdmittedly, the component wasn't written well at all, but the issue itself I thought was worth the raising, in case it might arise under better circumstances. I patched my own core, simply because I don't have time to fix the component at the moment. Essentially they're using TC to reference the same database table as JTC, for their own purposes. Job requires its function, so I did this to move on to more serious issues; it'll come back on my radar in a few months, and I'll rewrite the component then.\nApologies for the style errors, Don. Have to admit I never looked much beyond the issue at hand. My bad.\nAs for reopening, not sure if it's worth it. Like I said, the change was made necessary for me in large part because of a badly-written extension, this is simply an adjustment to compensate for the extension. It could very well be the best answer from your (meaning the platform/framework maintainer) point of view is to rewrite the component. That sounds like the consensus, anyway.\n. Yes, but....\nThe severity of the error changes. The original code crashed my testing system completely at this point with a PHP Fatal error if the config.php file wasn't there; no further tests were executed. This code merely errors out of the tests in this file while letting all the subsequent tests in the suite execute.\nLong term it's probably not the best solution. I was putting this code in place as a stopgap, to eliminate the crashes so I could see the \"big picture\" of the testing. It's the same code someone else used in JLoggerDatabaseTest. \nIf you want a different fix for it, you might add this else clause at line 66 to the class_exists test (both in this file and for that matter in JLoggerDatabaseTest):\nphp\nelse\n{\n    $this->markTestSkipped(\"These tests require a test config file be present, and I can't find yours.\");\n}\nwhich will still keep the db tests from running but also kill the \"Undefined variable\" message for these tests. I decided against this idea because the error message, while not blocking further test execution, calls attention to a problem in the setup of the testing system. An even better solution might be to come up with a \"standard\" default set of config params and use them when the test config isn't present. I'd planned on addressing that question later, after dealing with the unwritten tests; this was simply a means to get the all the tests to run in the meantime.\n. Feel free to reject this commit, then, if you've put a better solution in the tree since I wrote it.\n. Shows when I last looked at the drivers. Last time I checked there were only mySQL drivers available. I'm not sure how to parse \"I'd err on marking it as skipped\" -- you mean you'd rather it was an error than a skip? (I agree, BTW.) As for setting up separate suites with and without db tests, that's beyond the scope of what I was doing. (I'm following the principle of test first, pretty later. You want to create those suites, feel free. I see a few thousand tests I'm going to have to write yet before then.)\n. Good catch. I should have caught this when I changed it to separate db testing configs. I'll close, fix and resubmit.\n. Let me rephrase that. Please close this pull request (can't seem to close it myself, oddly enough). I've resubmitted this as pull request #45.\n. ",
    "piotr-cz": "There's a problem when rendering messages in language other than English using Joomla.renderMessage().\nThe DT element classname and content is being set to message type (ie. 'warning'). While it's fine for the class, message header is then forced to be a lowercase English text.\nOn the orher hand when message type is supplied in document language just like message body, then it won't match relevant class defined in system.css, this is not a solution.\nOne way how to go around it is to switch DT content from type to Joomla.JText.(type, type)_. Developer will have to add appriopriate JText strings in JS.\nAn other would be to change the parameters for renderMessage function, so it would be called\n\nJoomla.renderMessages({\n    'error': ['B\u0142\u0105d', ['Nieznany b\u0142\u0105d']]\n});\n\ninstead of\n\nJoomla.renderMessages({\n    'error'     ['Nieznany b\u0142\u0105d']\n});\n\n. realityking:\nthere's one difference I'm talking about:\nlibraries/joomla/document/html/renderer/message.php @L 58 should match media/system/js/core-uncompressed.js @L 100 so in in core-uncompressed.js (function Joomla.renderMessages)\nhtml: type \nshould be \nhtml: Joomla.JText.(type, type)_\n. I've described few ideas about structuring JSON output in Google groups topic here:\nhttps://groups.google.com/group/joomla-dev-platform/browse_thread/thread/ae2f8dda1d8ee91d\n. Thanks elinw, I just did so: https://github.com/joomla/joomla-platform/pull/728\n. MooTools 1.4.1 is now available (http://mootools.net/blog/2011/10/06/mootools-core-1-4-1/).\nThey say it's fully backward compatible with 1.2 & 1.3\n. Thanks!\nCould we have More upgraded to 1.4.0.1?\n. +1\nI find message queue is extemely useful in applications based on Joomla Platform.\nWith JP 11.4 when you use <jdoc:include type=\"message\" /> in theme/ buffer\nJDocument calls JWebapplication::getMessageQueue but fails with PHP errors.\n. great!\nwhat do you think about more html5 stuff like simplified < script > and < link > tags?\nThat doesn't add much in terms of functionality but html is more readable & elegant :)\n. yes, I've had in mind exactly what bigbangireland gave example of, now since we have html5 switch (is it going to be set in plugin/ configuration.php/ somewhere else?).\nI'd also love to use some of the html5 forms functionality in JForm (I found the placeholder attribute extremely handy) but this would require proper discussion and probably it doesn't hurt to implement it later this year when more users move to html5 compatible browsers (ref: http://www.html5rocks.com/en/tutorials/forms/html5forms/). Anyway this isn't part of this pull request\n. Question: from where to switch the $html5 variable? For me it would make most sense to use JConfig, as it's now in the platform.\nbigbangireland > I've been thinking about exactly this for a while, I guess we could start a discussion on Platform group to share implementation experiences and thoughts (Sorry to write it here, but it's not possible to message you on GitHub).\n. realityking > Thanks this explanation, I get it now. You are correct about not using JConfig.\n. realityking & elinw > thanks, this is my first commit on GitHub\n. @elinw Please add a link to the topic on platform group\n. Hi, I've found one issue related to JHttp and this is kind of related to this pull request. Let's say I'm using JHttpTransportSocket.\nWhen sending JHttp::post(), there is no way to choose timeout (defaults to null), so all connections are returning errors immediately (tested on slower connection).\nNow, I'm a bit confused about JHttp::options and JHttpTransport::options. In case the first one would be intended to hold timeout and userAgent options, all commands in JHttp should pass them (kind of like in interface JHttpTransport):\npublic function post($url, $data, array $headers = null)\n    {\n        return $this->transport->request('POST', new JUri($url), $data, $headers, $this->getOption('timeout'), $this->getOption('useragent'));\n    }\nShould I create new pull request? Or I'm completely wrong somewhere?\n. @realityking Do you mean Platform development Group?\nYeah, In my opinion this is a typical misuse of JRegistry. I hate that you cannot unset it's keys.\nSo timeout and userAgent options should be passed to constructor of JHttpTransport.\n. Sorry for confusion, please ignore the reference.\n. In case of JHttpTransportStream, \nPHP shows a Warning:\nWarning:  fopen($invaliduri) failed to open stream: HTTP request failed!  in ~libraries\\joomla\\http\\transport\\stream.php on line 125\nBut I'm not sure if it's the right thing to supress the errors\nEdit:\nAs I'm thinking about it, fopen should supress any PHP warnings.\nTypical scenario may be when the response (after processing) is going to be output as JSON. Any PHP warnings are then appended to the response body, deforming the JSON output. \nThe check for no HTTP response that I added is supposed to handle it anyway\nsee: http://php.net/manual/en/function.fopen.php\nIf the open fails, an error of level E_WARNING is generated. You may use @ to suppress this warning.\n. There is 1 error in Unit test (http://developer.joomla.org/pulls/pulls/1022.html) but seems like it's triggered by something strange outside this PR\nDoes this PR have any chance to be merged? There are few other issues in JHttp package but I decided to wait so this one can be still merged\n. JHttpTransportCurl fixed by #1438\n. Thanks for answering.\nI can submit a patch, however I think it makes sense to allow setting timeout and useragent for each request (with fallback to Instance options). Points 1) and 2) in my Issue description are actually two things I'd like to see in the patch (not one or another).\nScenario:\nI decide to ping an uri (using HEAD) to see if webservice is available or uri is correct before I send out the requests. \n$JHttp      = JHttpFactory::getHttp(JRegistry(array('timeout' => 30)));\nFor ping, I decide that there is sufficient timeout 5s:\n$isAlive = $JHttp->head('http://google.com', null, null, 5);\nFor other more heavy requests I leave out the option as I already set when creating instance.\n$response1 = $JHttp->post('http://google.com/API', $data1);\n$response2 = $JHttp->post('http://google.com/API', $data2);\n. Supposedly some services require user agent string in request.\nMost likely its meaningless to have an option to set it for every particular request like timeout, but I think it should be possible to set it at least in transport instance options.\n. I'll wait till monday in case somebody would have something to add and then add a pull request.\n. @aaronschmitz \nI've made a patch on local machine but didn't have to submit a pull request (It's a tax return time in my country).\nI'll do it today and appreciate if you take a look at it.\n. I've just added pull request (https://github.com/joomla/joomla-platform/pull/1101). Sorry for delay.\n. I think you may also close the Issue #1027, which is the initial description for this pull request.\nI didn't update the docs though: https://github.com/joomla/joomla-platform/blob/staging/docs/manual/en-US/chapters/classes/jhttp.xml\n. If those classes are going to be in legacy tree probably deprecated in future, what is going to replace them?\n. Thank you for your explaination.\nI'm curious to see refactored MVC architecture. I failed to use current one in standalone application.\n. I suggest that authors of this PR will write an article at http://developer.joomla.org/ describing how to access legacy MVC methods, the differences to new MVC and link the documentation\n. @eddieajau \nThanks, Is it possible to somehow use new MVC with legacy MVC in one component?\nLet's say I'm using legacy CMS as user interface but access external APIs for other where new MVC seems much better way.\nBTW, good work on documentation.\n. @realityking \nWhen is JRequest supposed to be dropped? It's marked as deprecated in CMS since 1.7\nI believe many developers learn from CMS codebase so in my opinion it should be swapped by JInput first in there but still stay as deprecated for 1 STS afterwards\n. @garyamort\nPlease correct the checkstyle errors: tabs for indent and comments starting with capital, see http://developer.joomla.org/pulls/pulls/1209.html for details\nWe really need this fixed :)\nWithout this Joomla crashes on multiple concurrent requests (ajax/ thumbnails for image galleries etc).\nI've added this fix as a separate Storage storage handler 5 months ago to my app and didn't notice any new issues.\n. I decided not to use JFactory::getXML() in project because I need to catch exeptions on creating the object and ignore one of libxml parsing errors.\n. I guess you should encode html characters, so colon becomes &#58;:\nphp\n$tooltip = htmlspecialchars($user_input_value, ENT_COMPAT, 'UTF-8') . '::' . JText::_('JLIB_HTML_CHECKED_OUT');\nBut when you look at com_content/helpers/icon.php/edit It's done different way which should be buggy IMHO\n. While thinking about it, best place escape colons are indeed Views and  Template. If you find a place in the current codebase where it's not, please submit PR.\nEncoded html characters should appear just like any onther text in the browser.\n. @benjaminpick :\nI still think you should not unescape whole tootip, because Javascript won't be ale to separate tootlip title and body (see my example above). This is how it's done in mentioned JHtml::tooltip and this should work.\nPlease give an example of exact case of your issue with.\nI've seen in the basecode that usually tooltip is generated directly, without mendioned class and might be that code contributor forgot to escape non - JText values.\n. As I wrote before, I believe this is not a bug.\nAnyways, Twitter Bootstrap uses different format to for tooltips (there's only body) and popovers (title + data-content) so this becomes irrelevant.\n. Thanks, this is great initiative!\nSome questions/ideas:\n- What about operating on multiple resources,\n  like getting multiple articles: GET articles/7,42 ? I know that it should be a new resource but this quite explicit\n- Isn't better to map HTTP methods to  class methods (MyControllerArticles::Create, MyControllerArticles::Delete)\n  instead of having a class for each (MyControllerArticlesCreate, MyControllerArticlesDelete)?\n- Nested tasks, where doesn it map? GET users/62/vcard\n- Filtering a collection of items, GET articles/?filter_user=[7,42]&filter_since=1339106644\n- Support for variables in HTTP methods other than GET and POST parse_str(file_get_contents('php://input'));\n. @LouisLandry \nThank you for answers!\nI must admit, that I have no real experience with building REST API, just using the existing ones.\nI've tried to build one and thus have been researching options to utilize existing JRouter to fit my current needs, but at this point it is not critical for my project.\nI hope there will be good discussion on this PR to craft well the package. I mean, this is something quite important for webapps built on Joomla Platform.\nYou may consider extending patterns with asterisk * so it will be possible to catch continents/*place (see http://documentcloud.github.com/backbone/#Router-routes), \nMultiple/ Aggregated Resources\nA full example in my case would be GET articles/7,42/authors to get authors of selected articles or DELETE articles/7,42 to remove articles in fashion like JControllerAdmin::delete does.\nI guess you are right, if this is handled in the controller developer can count with all the different scenarios and base class stays clean. I just wanted to make sure that segments won't have too many restrictions, like at the moment ID / cid in JControllerAdmin is restricted to an integer/array of integers.\nHTTP Methods -> Class methods\nI'm in favor of having one subcontroller handling multiple CRUD tasks because:\n- It's compatible with established current philosophy of CMS components (I've mapped HTTP methods to subcontroller tasks: GET => display, POST => save, DELETE => delete and PUT => save2new)\n- It's very convenient for me to navigate trough code, less subcontroller files, don't have to switch thinking CMS/Platform?\n- I can may share protected methods (helpers) for these subtasks in scope of one subcontroller\nBut of course curious about experience of fellow devs.\nNested tasks (subsubtasks)\nI'll give an example: in my prototype GET my/users/:user_id/vcard is executing MyControllerUsers::displayVcard, outputting JSON, class and method built like: \nComponentName 'Controller'. SubcontrollerName::mapped_HTTP_method . ucfirst( subsubtask ). This is how I do it at the moment but yeah, probably this shouldn't be in the base but this case is not uncommon at all.\nIf there would be 1 controller per task, I'd have to have 4 MyControllerUsers CRUD controllers and 4 MyControllerUsersVcard CRUD controllers\nFiltering Options (Query string variables).\nThanks, this sounds fine!\nMaybe there should be an abstract class in the package for this, not reaaly sure.\nWhen inspecting Joomla Admin code (JModelList), I came to the conclusion that I'll count with all url variables starting with filter_ as these are related to current controller list state.\nInput variable support for extended HTTP Method set.\nTrue, this should be done by JInput. But I wasn't sure if making such PR won't make it drift away from JRequest too far\nFormats\nI'm outputting everything in JSON and actually haven't been thinking yet how to request other resources formats. At the moment, JP is determining format based on format url var, but I think that for REST API proper thing should be to count in with HTTP Accept header.\n. @LouisLandry\nThanks for preparing the examples, this is very helpful.\nAt the moment I'm most comfortable with 'one.pattern.monolithic' pattern, but I guess that the default 'multiple.patterns' is best match for new simplified MVC\n. Why not default=\"1,3\" or default=\"1|3\", This seems more natural to me?\n. @elinw Thanks for explaining. I'd be for same approach that has been implemented in checkboxes.php because of simplicity (can't think of real life cases for selected attribute).\nBut I'm not sure which one would feel generic if I'd like to alter default field value programatically?\n. Yes!\n. I'm quite happy with JCache shipped with 12.1.\nBut few things I've been missing:\n- not possible to overwrite some of the cache options (which are set based on CMS settings).\n- I'd like to save in image in cache before start to manipulate it using JImage. Manipulated image should be stored in cache as well until User decides to save it in image format and not JCache format. I ended up doing it without JCache.\n. What is the html structure of current messages?\nWhat are available types? till 2.5 these were message, notice, error\nBTW from reading the code it seems that all message types are injected with same id ('system-message').\nIf it's true, I think the type should be present in id as well, or some UID at least.\nhtml\n<div id=\"system-message-container\">\n    <div id=\"system-message\" class=\"alert alert-{type}\">\n        <h4 class=\"alert-heading\">{type}</h4>\n        <div>\n            <p>{item}</p>\n            <p>{item}</p>\n        </div>\n    </div>\n    <div id=\"system-message\" class=\"alert alert-{type}\">\n        <h4 class=\"alert-heading\">{type}</h4>\n        <div>\n            <p>{item}</p>\n        </div>\n    </div>\n</div>\n@LouisLandry\nIf you want to move JS out of platform, don't forget JForm is using javascript classes\n. @vietvh \nYou are right that the problem was in the javascript renderMessages function. However it seems that using\n$app->enqueueMessage in php (at least in Joomla 2.5) produces correct html:\n``` html\n\n\nError\n\n\nerror description\n\n\nMessage\n\n\nmessage description\n\n\nNotice\n\n\nnotice description\n\n\n\n\n```\nI we were to fix the renderMessages function, it should not have big impact on current templates, as the incorrect html have been produced only by Javascript.\nHowever IMHO each message type should be wrapped by a class 'system-message-{type}` (quite similar to what your script produces); this is much easier DOM structure to work with (appending new messages to existing queue using JS/ removing them, etc).\nNow It's good opportunity to do so, as the templates have to be refactored anyway\n. @vietvh\nI see, where you want to get. I've been using system messages in client-side app, and came to these conclusions:\n- Client-side generated messages should not be stacked together by type, pop out in own box at the time when occured (newest on top).\n- It doesn't make much sense from UX standpoint to dismiss messages by stack type (dismiss all errors, all warnings etc) but one-by-one with an option to hide automatically after passed time (except errors, which are pinned).\n- This is a bit different than server-side messages. These were stacked together in Joomla, as where triggered at same time.\n``` html\n added client-side at the time of occurance \n\nNotice\nNotice message #1\n\n added client-side at the time of occurance \n\nNotice\nNotice message #2\n\n error messages don't dismiss automatically (pinned) \n\nError\nError messages here\n\n rendered server-side, stacked together \n\nWarning\nWarning message #1\nWarning message #2\n\n```\nWhile there are many ways to do it and the look & UI functionality should be up to the template developer, probably it would help if system messages structure could have been overwritten by template overrite as you suggested in here\n. It makes sense to me to have such functionality in the platform. There is more than 1 native extension that could use thumbnails (com_articles, com_media, com_contact, com_banners, com_users, com_templates) and really any extension that works with images.\nQuestion is if the default place for thumbnails is the /thumb folder where these could be overwritten or /cache/[extension].\n. @phproberto \nYou are right, the developer should decide on naming strategy to manage thumbnail files (maybe md5($this->getPath());).\nBut how to apply sharpen filter before thumbnail is being saved? Perhaps the method should return a new image object that can be further manipulated. Then it would not make sense to add new JImage method but handle it other way.\nLet's see what other think\n. I've been very happy to see this method as you guys.\nI use to sharpen thumbnail images in the image editor as mostly after resampling these lose some sharpness. To use this method I'd have to resave each thumbnail image and so double compress.\nI'd like to have noSave parameter, so I can use the returned array to further manipulate each resource and save using the path variable.\n. @phproberto Thanks for considering my comment. @realityking got good idea about splitting method into two, this seems better than noSave param.\nI suggest that generateThumbs would return an array of thumbs file paths, while createThumbs an array of resources\n. I guess plugins were meant to not output any HTML, so there was not override functionality built in (this has been discussed few times already), but there are exceptional cases.\nMost JoomlaWorks plugins have this functionality built in since Joomla 1.5 and it's great.\nI'm for this to be in core.\n@phproberto: Consider replacing DIRECTORY_SEPARATOR with /. I think this is the convention in the platform as PHP deals perfectly fine with both types of slashes in paths and this makes code more readable.\n. Just hope it's not too late to include it in the 3.0 trunk. Probably most forces are on Bootstrap integration.\n. Why not use magic __destruct() for method name instead?\nSee LouisLandry comment in previous PR\n. Thanks, this looks great!\nGreat advantage for template developers that don't want to use Bootstrap or want to enhance layout/ functionality without hacks.\n. Some time ago I've send a PR #1022 that was addressing this issue across all transports ( fix for Curl has been merged yesterday in #1438).\nI think it's important to keep same convention across all transport and throw an exception in the same place (probably request function).\n. @elinw \nMore descriptive exceptions are always welcome.\nBut there are some cases (authentication to external REST service) when there are multiple requests exchanged and every saved request counts.\nBesides in my opinion in your previous code both assertions for fsockopen had same result and passing first would mean passing second as well.\nThanks for taking time at it.\n. Please take a look at my PR #1022.\nThis is addressing same issue across all JHttpTransports\n. Thanks, in my opinion this class is extremely important for webapps.\nI've prepared almost same class (based on com_languages/JJsonResponse) for my project and realized that I should have done so long time ago.\nMy only concern is whether to include application messages queue handling.\nLe'ts say the client-side doesn't have an ability to render messages received in the response (or messages have been added to the queue by other part of application and are irrelevant at the moment). However using JResponseJSON (JFactory::getApplication()->getMessageQueue();) resets the queue server-side so messages will be lost. I'd add an optional argument ignoreMessages = false to the consturctor.\n. @eddieajau \nGood point about the message queue, default value for $ignoreMessages should be then true.\nReferences in CMS:\n- Origin is from Languagese component -> JJsonResponse.\n- similar in Installation package InstallationJsonResponse\n- Some of functionality is present in FinderIndexerResponse\n- Component controllers in Joomla 3.0 have saveOrderAjax method\nIn mentioned GSOC code there's no such separate class, in each controller there is similar pattern repeated to handle it.\nShortened example of controller code:\nPHP\nif ($result == true)\n{\n    $returnedContent = new stdClass;\n    $returnedContent->id = $comment_id;\n    $this->app->setBody(json_encode($returnedContent));\n}\n// Throw error\nelse\n{\n    $this->app->errors->addError('202');\n    $this->app->setBody(json_encode($this->app->errors->getErrors()));\n    $this->app->setHeader('status', $this->app->errors->getResponseCode(), true);\n    return;\n}\nvs com_languages -> strings.json.php:\nPHP\necho new JJsonResponse($this->getModel('strings')->search());\nOf course, there are differences: Joomla JSON controllers usually echo the response directly (to avoid malformation by content plugins).\n. Since MooTools 1.3 most of Hash functions has been moved to Object (which is part of Mootools Core) and documentation discourages using Hash class (When possible, please use the Object type!).\nA while back I refactored the Validator script to act as a wrapper to MooTools native Form.Validator and optionally use HTML5 validations.\nThe code is heavily commented, contains backward compatibility methods to current version of validator.js and is simpler.\n. This hasn't been tested much, just few forms on frontend and backend in joomla 2.5. \nThe question howewer is JS framework. Code is tightly coupled to Mootools. \nDescription what I wanted to achieve\n. @awc737:\nI've tried registration on Joomla demo and looks like validation passed fine, fields receive classname invalid but there's no css styling attached to it so user has no easy change to pick up what's wrong. Is this what you are after?\nIf no, maybe we should move the discussion to Google groups..\npasamino is right, there's kind of confusion with javascript supplied with the platform. If platform is to be as slim as possible, these assets should move to the CMS. Besides Joomla 3.0.x is running on Platform 12.2, but current platform version is tagged 12.3.\n. @awc737 In my opinion it should immediately change border-color of invalid fields to red, like it has been happening in previous Joomla versions (maybe that's something that has been overlooked?).\nAnyway as pasamino suggests, this can't be fixed here as this is a template thing and platform is not being shipped with templates. Try to add an issue or pull request in the CMS tracker, I'm pretty sure that more people are annoyed with this behavior.\nQuick fix could be to prepend input.invalid, textarea.invalid, select.invalid, in template.css or if such behaviour works in the admin, replicate it for protostar template. Or check if/ how it's done for beez template.\nWe are discussing something quite different here: in some cases validator dependecies are not loaded/ how to make it lightweight.\nEdit: This commit probably fixed invalid input filelds styling\n. I'll just add that the advantages of having such class shows up when you have more than one JSON controller or outputting JSON response in different places: one client-side parser will understand response from any extension/ application\n. @LouisLandry \nYou mean /libraries/cms/response/ ?\n. Maybe it will become clearer 'why' when I attach a chunk of simple application.\nIf I'm doing it completely wrong, please let me know but at the moment I really think it's quite convenient when JApplicationWebRouter returns controller output.\n``` PHP\nprotected function doExecute()\n{\n    // Initialise the application\n    $this->initialise();\n// Dispatch the application\n$this->route();\n\n}\npublic function route()\n{\n    // Initialise variables\n    $document   = $this->getDocument();\n    $router     = $this->getRouter();\n// Execute the task.\ntry\n{\n    $contents   = $router->execute( $this->get('uri.route') );\n}\n// Mop up any uncaught exceptions.\ncatch (RuntimeException $e)\n{\n    echo $e->getMessage();\n    $this->close($e->getCode());\n}\n\n$document->setBuffer($contents, 'component');\n\n}\n```\n. I'll try to.\n. @eddieajau \nI'll try to, but I'm quite busy with work at the moment and I'm completely fresh to unit testing.\n. Do you think filter_var with FILTER_VALIDATE_EMAIL or FILTER_VALIDATE_IP would help?\nPHP\nfilter_var($domain, FILTER_VALIDATE_EMAIL);\n. @fitorec\nI think this is perfect example of moving Platform methods to use native PHP ones.\nInitial method was pretty complex, I think best thing to prove it may be simplified to such extend is to make sure this passes JMailHelper Unit tests.\nYou might add some more cases for test (with IPv4 and IPv6 as domain). Results are in Pull Tests Results.\nI won't help you with running unit test locally, still have to learn how to :)\n. @fitorec \nI'd be interested in knowing which test cases failed.\nPHPMailer 2.2.1 and 2.2.3 and thus JMail is using filter_var($address, FILTER_VALIDATE_EMAIL) already when being instantiated by JFactory\n. @AmyStephen \nOne comment at php manual mentions, that FILTER_VALIDATE_EMAIL validates emails according to standards, but rules for creating addresses are up to organizations.\nMaybe solution would be to give a strict option to method: JMailHelper::isEmailAddress($strict = false).\nWhen enabled, we'd use filter_var. When not, use current method with patch @fitorec prepared.\n. in case rules are more benevolent than current FILTER_VALIDATE_EMAIL, than situation could lead to false positives when email validates, but doesn't phpmailer (which uses it) returns exception.\nI'm not an expert in emails but on the other side Joomla might be installed in intranet and admins are not restricted by strict standards.\n. Agree with @dongilbert.\n+1 to the standard.\n. Pleas take a look at the code quality, as these are the first test I've ever written.\nI was going to write one more for JDocumentHtml::mergeHeadData() but I'm confused, as this method is using internal methods (setMetaData, addStyleDeclaration) whilte setMetadata is setting values directly.\nIs this how it's supposed to work?\n. What about non-latin characters (ie. \u011b\u0161\u010d\u0142\u017c), those are permitted in filesystem?\nI discourage using them by all means, but I know some people will do it anyway - I have such experience with CMS users who have permission to use media folder.\n. definitely :)\n. Thanks, fixed.\nI don't understand why there is a typecast to boolean in JSession->isActive and I repeated the style. Should I remove these?\n. Lets keep it then\n. I've tested all transports against invalid url and var_dump'ed the result:\n- for socket it was: \"\"\n- for curl and stream: false\nSo I've checked for empty response in the request method to be able to throw an exception in about the same place as in other transports.\nProbably emphasizing an convention may not be optimal here as every transport is different.\n. @return  boolean  True on success.\n. I'll need your guidance on data provider.\n. ",
    "rvsjoen": "Well, the reason I came across this in the first place was looking at using JLoader::import() instead of require_once to load component-specific files inside a component, such as a helper using something like JLoader::import(\"content\", JPATH_COMPONENT_ADMINISTRATOR.DS.'helpers'); which in turn fails with a \"class redefinition\" error if the helper class is already loaded.\nI doubt this is desired behavior as there isn't really a reason as far as I can tell to ever load a file twice.\n. Ah, that actually makes more sense, I do not mind rewriting the commit to do include_once instead of require_once.\n. Alright, third time is the charm\n. Either way is ok by me, the only reasons I can think of to keep it is for documentation purposes, and to enforce a uniform function signature across the database classes.\n. Something like this ? I would prefer separating the interface into a separate file though, but this is just a proof of concept.\n. I would not mind putting that into a separate file, but we need a filename/directory/naming convention for interfaces.\n. Added the proposed code from Christophe to the pull request\n. Ok, what about using the phputf8 library for this, see updated diff\n. I would probably be a good idea to clean up this branch a bit and remove the commits that do not involve libraries/joomla/updater/adapters/collection.php\n. There are a couple of ways to do this, the easiest is perhaps to simply create a new branch and use git-cherry-pick to pick the one commit you want (45c11fa2) into this new branch, followed by a git commit and a new pull request on that branch.\nAnother way is to do a interactive rebase against master (using 'git rebase -i upstream/master) and delete the commits that you do not want, followed by a 'git push --force' to your 45c11fa branch.\nA third way would be to do a mixed git-reset to master, which will leave your changes in the working index, add only the files you want and do another commit.\n. Sorry about the insane font size, no idea how that happened...\n. I will do that, and I will also as per Ian's request modify it to not use the deprecated JError but instead use JLog.\nWill update it shortly.\n. Alright, now it should be good. JLog is new to me so you'll have to verify that i've used it as it should.\n. Done, see if its better now\n. This is from the docs/coding-standards/chapters/php.xml file in the platform, and is the reason why I put the opening brace on the same line for if control structures.\n\"\"\"\nWhere the control structure is an if, the if and else keywords are put on newlines and the \ncontrol logic is indented. The opening brace is included on the same line as the if or else and \nthe closing brace is on a new line.\nFor all other control structures, such as do, for, foreach, try, catch, switch and while,\nboth the keyword starts a newline and the opening and closing braces are each put on a new line.\n\"\"\"\nShould I not be looking at that file ? And if no, are there other places with more up to date information on coding standards ?\n. Updated\n. Ok I am really confused about the braces at this point. I modified a piece of code to have all opening curly brackets on a newline, and now the code style checker is whining about that. Again I turn to the docs/coding-standards/chapters/php.xml which still says that \n\"For all all control structures, such as if, else, do, for, foreach, try, catch, switch and while, both the keyword\n    starts a newline and the opening and closing braces are each put on a new line.\"\nSo....\nOption A.\nif (true) {\n    /* scratch myself /\n} else {\n    / keep itching */\n}\nOption B.\nif (true)\n{\n    /* scratch myself /\n}\nelse\n{\n    / keep itching */\n}\nWhich is it, if any ?\n. Ok, lets try this again :-)\n. The pull request will keep up to date with your remote tracking branch, in this case 'patch-1' so as long as you push or force push to that branch, the pull request will update itself.\n. In that case you should probably do that in the pull request so the unit tests can be executed. If you move them to their correct places in your branch and push, the pull request should update automatically.\n. Great, looks good to me, go for it!\n. I suppose I could give that a shot, but does it make sense to unit test protected functions ?\n. Ok so I added a commit that shows how this can be done, the only problem is that apparently _getJSObject() does not spit out valid JSON. Not sure how to handle that, I guess I could patch it so that it does, although in that case I have to say I don't understand why something like json_encode() is not used in the first place.\n. After a quick look at this, json_encode() does not allow function calls, which would kill the functionality in for example passing fullScreen = true, to a modal. Since it is based on the value 'window.getSize().x' snippet being passed in the JSObject. I think this is very important behavior in the modal, which is also why I wanted to add auto-scaling in one direction in the first place. \nSo this leads me to believe this cannot be done using 'valid' JSON but still valid javascript syntax, and that the unit test will have to be adapted to this scenario instead of reverting to json_encode().\nI will look a bit harder.\n. The merge conflict should be fixed, the unit test went down the drain.\n. It didn't pass because the unit test was using json_encode to create the control set. Only problem is that the \"json\" that is output by this function is not valid. Not sure about the best way to handle it and I don't feel like writing a unit test that actually does custom parsing of some set of invalid json\n. It will, the fix is relatively simple though for people who actually bother to read the changelog. \nI only know that I pulled a hair or 300 trying to figure out what the heck I was doing wrong when the value and key were swapped.\nI do not see any other way of doing it, other than possibly rename the 'value' to something else, and keep a backwards mapping into 'value'. Like, 'name' or 'string' or 'text'\n. I think this is a nice and simple feature that will unify how to access media for a component. Although you can most certainly argue that static methods are evil, JURI::media() is likely to replace JURI::root() on a 1:1 basis, and it makes it simpler to move to another (non-static) approach later since it will be easy to separate between media access and other file access.\nIn short, I think the benefits outweigh the drawbacks of adding yet another static function to JURI.\n. Done\n. +10 from me, the current constructs are annoying.\n. This updated version does not use regular expressions and seems to me to work correctly. The basic idea is to check whether or not the next character after the prefix being searched for is an uppercase character (To denote a word boundary in a CamelCasedWord).\n. There seems to be an issue with the unit tests here, looking into that\nhttp://developer.joomla.org/pulls/pulls/1406.html\n. The unit test are running ok now, also got rid of a notice if the prefix we're testing against happens to be the same length or longer than the class name.\n. After some digging I discovered the root of this behavior, and it is not that the loader doesn't handle prefixes that are longer than a single character. \nOne example is that if the prefix 'J' is registered (like it is) then if I register a \"Jcms\" prefix it won't care, because it finds the J prefix first, and then assumes that the \"cms\" is part of the path. so checking whether or not a class name starts with the prefix currently being looked for is not enough, we also have to check if the next character is an uppercase character.\nThe patch takes are of this by making sure the \"whole\" prefix is used  (meaning the first word in a CamelCasedString) even if a smaller part of the string matches another prefix.\n. So that makes the original description a bit wrong in the way that it describes only the way the issue manifested itself when I tried to register a Jcms prefix in addition to the core 'J' prefix.\n. This union is not working as expected, the following query is returned\nsql\nSELECT a FROM test\nA brief look at the code indicates that the \"type\" value is not set to \"union\" when the member is called, and as a result the object is not treated as a union member. I have not tested the proposed fix but it does seem to address the problem with the missing query type.\n. You are right indeed that the problem occurs when call-chaining. I used the following piece of code for testing.\nphp\nclass Test extends JApplicationCli\n{\n    public function execute()\n    {\n        $q1 = new JDatabaseQueryMysql();\n        $q2 = new JDatabaseQueryMysql();\n        $q2->select('a')->from('test')->union($q1->select('b')->from('test'));\n        var_dump($q2->__toString());\n    }\n}\n. ",
    "jonnsl": "I forgot to mention that some regex are from mootools\n. @elinw according to the php manual \"This function (parse_url) is not meant to validate the given URL, it only breaks it up into the above listed parts. Partial URLs are also accepted, parse_url() tries its best to parse them correctly.\"\nso I guess that is not a good idea to use this function to validate urls\n. Why don't you just use a protocol-relative URL instead of having two separate variables in the JConfig?\n. I'm getting this error under php 5.3.1, anyway... I updated the changelog and did some code formating.\nPS: I hate this 'Comment & Close' button.\n. done\n. Before someone merge this pull request, I need some help converting the unit tests for the tel and url validation rules and creating new tests for the color and nospace validation rules, for some weird reason the tests that I made/converted freezes the phpunit when there's a failure but works fine if there's no failure.\n. updated\n. Fixed.\nI think this should be allowed:\n    if ($condition) doSomething();\n. I will wait until the pull request #636 get commit them I will update my branch, squash some commits and open a new pull request.\n. It would be nice if someone change the default branch to stagging instead of master https://github.com/blog/421-pick-your-default-branch\n. Test instructions:\n1. Copy libraries/joomla/installer/adapters/component.php to the cms\n2. try to install and uninstall some components\n3. everything should remain the same, just a little bit faster\n. I think that this is more correct\n$id = preg_replace('/(^[^a-z]|[^\\w:._-])/i', '_', $id);\n. @chdemko\nsee http://www.w3.org/TR/html401/types.html#type-name\nHTML5 is even more permissive http://mathiasbynens.be/notes/html5-id-class\n. You just need to escape the special characters http://mathiasbynens.be/notes/css-escapes\nhttp://jsfiddle.net/6262B/\nhttp://mathiasbynens.be/demo/html5-id\n. :+1:\n. you could have squashed into a single commit.\n. :+1:\n. this wouldn't break the old URL, when a article is re saved?\n. @fastslack\ngit checkout tables\ngit reset --hard HEAD~1\ngit push origin tables --force\n. Indeed the parseXMLLangMetaFile method was not supposed to be remove, my mistake.\nThe JApplicationHelper::getPath is not used anymore since 1.6, in favor of the new MVC pattern, so I think that there is no need to deprecate that before remove it.\nThe toolbar code in JApplicationHelper wont be moved to the cms, it was some legacy code to generate the toolbar before the mvc pattern.\n. what about this (another 1.0 legacy code)\nI think that this should be replaced simple by\nphp\n$path = JPATH_COMPONENT . '/' . $file . '.php';\n. done\n. try:\ngit checkout patcher\ngit reset --soft HEAD~27\ngit commit -a -m Implement a file patcher\ngit push origin patcher --force\n. you definitely need to change your text editor.\n. never mind, I thought you changed the indentation to spaces. my mistake.\n. why? slashes works fine on windows and linux.\n. It's separated because its not part of the basic menu structure, its part of the parent menu item.\n. This will probably  cause error in the store method because it will try to store this variable into the database https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/database/database.php#L783\n. If someone create some content(create a new article for example) with \"#__\" somewhere, it will be replaced by the prefix, and that is a serious security issue.\n. return $this->$doTask();\n???\n. http://php.net/manual/en/functions.variable-functions.php\nI was trying to say that you don't need to store the value returned by the function in a variable just to return that value on the next line, you can do in just one line\nphp\nreturn $this->$doTask();\n. Any reason to use ECB instead of CBC?\n. I'm not a security expert but I think that CBC is safer (http://www.adayinthelifeof.nl/2010/12/08/encryption-operating-modes-ecb-vs-cbc/).\nand by the way, ECB don't need an initialisation vector so this line is useless \n. ",
    "klas": "e2d0497 contains fixes for #24285\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=24285\n. @mahagr those are unrelated issues which are both are solvable in 1.6. by component/module developer. See com_content controller for example how to disable cache on POST requests, certain views etc. The same can be done for modules using owncache. Check my JAB11 caching workshop http://vimeo.com/23840973 for some more details\n. Just one comment about system cache plugin - imagine it as a high speed train. It runs very fast and moves people from one station to next one in a  very efficient way, but it's not easy to stop it or make turns with it. When more flexibility is required we just use a bus or a car. The same thing goes for different cache types.\nAnyway - please, let's not discuss any more things not related to issues in pull request. We can continue this on alltogether or via email (in profile), I'll be more than happy to try to help.\n. a1e0864 is incorrect and partial approach to fixing cache strict errors.  \nCaching library uses polymorphic overloading and this by definition means each method's signature will be different so this requires a wider refactoring to get it work with STRICT and keep backwards compatibility at the same time. \nWorking solution is available for testing at git://git.forkito.org/cache.git \n. Are you getting this with platform or CMS? AFAIK it was fixed in platform some time ago\n. If head doesn't get cached any modules adding to the head will get unfunctional when they use cache. \nThis can be fairly easily solved by having few checks in document addScriptData / mergeHeadData methods to check for duplicates. \n. Yes, Eclipse. \n. After some thought - only proper solution is to remove all this inside class variable cachings and move them to a  factory class. In second phase it would be probably wise to also move all instances creation methods to separate factory classes. \nThe easiest and short term solutin - add new generic / abstracted JFactory  method  that would take class name as a parameter and would take care about instances creation for all classes, for now just call classes existing getInstance methods and cache them in static variable array. Something like\n```\nclass JFactory {\n  static $instance = array();\n ...\n ...\n  createInstance( $classname, $parameters)  {\n$instance[array($classname, parameters)] = $classname::getInstance($parameters);\n\n}\n ...\n ...\n}\n```\nFinal goal would be to have abstract JFactory and then implement separate factories for platform subsections (.e.g by current subfolders) with concrete methods for each class in folder, replacing current getInstance methods currently residing inside classes.\n. Hi,\nI don't think it is a sideeffect - it makes sense as class static variable has the same value across instances so when you create an instance and store it inside a class you start an indefinite loop.\nI found this as my debugger (XDebug) kept on crashing - I presume debugger tries to trace all variables independently while PHP interpreter obviously has a way to break such loops as I haven't found any noticeable differences in memory usage or timings. \nAs I see it, the way to properly solve it is to either use method scoped static variable or - this would be much better imho - for now use factory class to create and store instances for all platform methods and in the future add abstract factory class to avoid modifying factory each time new classes are addded.\n. @dongilbert @mbabker @phproberto  this issue still exist (in all major classes, not just JForm). My proposal in the PR comment was to create a generic factory - just for creating and storing joomla class instances, something like code here  https://github.com/joomla/joomla-platform/issues/1354#issuecomment-9157110\nCould any of you take another look at this?\n. ",
    "AmyStephen": "Louis - \nWould you mind responding to this issue? Is it under consideration - or is a portion of this to be considered? I'm interested in these fixes and would prefer to see them in core than to override the caching environment. Will do so if necessary but just wanted to hear if you were considering this, or not.  Thanks much.\n. The very simple reason I am asking that this pull request be considered is that it is now impossible to even activate PHP Strict in development because the $_handler is incorrectly defined as a static variable.  Any reference to the caching causes the application to fail -- and that's with caching turned off. \nI understand core does not support PHP strict at this time. But, it is helpful to use the setting during development in order to keep those errors down for when core is ready. Caching is referenced in so many places that this one single small bug prevents the use of PHP strict for development and testing.\nAgain, Louis, thanks for considering.\n. Thanks Louis \n. Not seeing how to attach a patch file -\nIndex: joomla-platform/libraries/joomla/utilities/date.php\n--- joomla-platform/libraries/joomla/utilities/date.php (revision b17ea87563f139c494e32626b4dc299b62e56501)\n+++ joomla-platform/libraries/joomla/utilities/date.php (revision )\n@@ -411,7 +411,7 @@\n     \n     * @since   11.1\n     /\n-   public function setTimezone(DateTimeZone $tz)\n-   public function setTimezone($tz)\n  {\n      $this->_tz = $tz;\n      return parent::setTimezone($tz);\n. Issued a pull request since I can't attach a patch.\n. Louis - will 1.7 be based on 11.2? Is that what this means? (Sorry to be so dense.)\n. k - thanks Louis. I think I am finally catching up here. Exciting times :)\n. Louis - would it safe to assume that the two repositories were square on May 10th when Mark Dexter applied changes from the platform project to the SVN? (SVN Revisions 21325-6) I'm going to try to apply the SVN patches since that date (beginning from Revision 21347, on) and see how that goes. \n. Yes, my Installer pull request was processed by Louis a week ago. It works just fine, thanks Andrew.\nPlanning on going with 11.2 for Molajo Alpha.\n. Resynced with the master branch and redid the pull request https://github.com/joomla/joomla-platform/pull/103\nClosing.\n. Klas - \nWould you please issue a pull request with your changes? \nGlad to set this aside in favor of your pull request. \nAndrew -\nI'll close this for Klas.\n. The component path I was sending in is mixed case while the value I have in JPath is stored in lower case.\nNaturally, that means this statement will fail even though the edit is intended to check for out of bounds situations and such is not the case. \nif (strpos($path, JPath::clean(JPATH_ROOT)) !== 0) {\nBy changing the comparison to stripos, the intended testing works, even with strings not treated the same for case.\nIt just seems a little more flexible for devs without compromising the edit. \n. BTW - it's not a big deal if you prefer not to make that change. I do get it that ThisPath and thispath are different on certain platforms and maybe in some obscure way, changing it could introduce a million and one vulnerability. :-P I've already cleaned up my path handling. It just seemed a little restrictive and I suspect it'll bite others as they build apps on the platform.\nNot worth a lot of time.\n. This bug has been fixed. If the database connection fails, the error is now trapped in JFactory.\n. @aaronschmitz In Joomla, the User session namespace is used for the current logged on user. It's created in JFactory https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/factory.php#L213\n- When the administrator is logged on changing ACL data, it is that person's data stored in the user object. \nWhat you want to do is force an update for the User session namespace for the visitor whose ACL data was changed.  So, you have to try to make that happen for that user during their next page load.\nWhich means you have to create some kind of indicator that is used by Joomla when the visitor makes their next request that signals it is time tto refresh their JUser Object (and therefore update their Session data). \nHow you do that is probably something that the Platform Team will be interested in discussing since it could be a performance issue. \n- Maybe you can update the Users Session table row? (I would be very nervous about that.) \n- Maybe a check can be made to see if the user's last updated date on their user record is after their last visit date (and if so, refresh the JUser object -- without forcing a logon).\nSessions are always very tricky, will be good to see what @LouisLandry or @eddieajau think about a best approach or even if it's a viable option.\n. @aaronschmitz - re-read your comment. I kind of doubt the Platform team will want to add a column to the table for this. Wonder if you can do something with the time column -- set it to spaces, or something, and use that to prompt the refresh? Maybe look at the Application checkSession method and see what you can do there. \n. @aaronschmitz Users have one session per application. The approach I suggested could be used to prompt each application session to refresh, as you are rightly indicated is needed.\nYou can try a new field, I'm just saying I am not certain it will be viewed as worthwhile considering the 'cost' of the change (upgrading the table and migrations are complicated with DDL changes.) If there is a way to do this without changing the DDL, it will make your proposal easier to accept, IMO. (I don't get to choose, it's just my observation.) \n. @aaronschmitz OK, but still trying to understand why that means there needs to be a new column added.  Wouldn't  you simply update all rows for a user whether you use the existing time column or a new column? In either case, all sessions would need to be updated - and each could be since the related data for that session would have a hook.\nIf (session time == '') {\ndo a refresh;\n}\n- or -\nif (session time earlier than new column) {\ndo a refresh;\n}\nSame thing?\n. @aaronschmitz - You would have to write a little code to handle logic for a new column, right? My point to you is you could modify the code to respond to different values in an existing column. \nLots of ways to do this. In the end, what the maintainers are willing to accept is really all that matters. Since I am not a maintainer, and since you are now approaching this from the right \"side\" -- this will be my last response.\nThanks for taking time to make Joomla better. \n. Interesting. What is the problem?\nhttps://github.com/joomla/joomla-platform/blob/master/libraries/joomla/database/table/content.php#L247\n. If you can wait until after this weekend, I'll take care of it. Right now, I'm slammed so understand if you find someone else. \n. No update Andrew - didn't mean to close the issue, though. Maybe best to put it out for others, as you suggested earlier. I've been very busy and it's not subsiding.\n. Going to close this since Andy has it fixed.\nThanks Andy.\n. Probably best to see if there are other issues.\nI added a warning to our readme and included your resource for packaging. Thanks for the resource - should be very helpful to folks.\nGoing to close this issue for now.\n. Just my opinion, but, a core framework class like JView should not have logic in it specific to a single component/view. Abstracting this concept out so that it is applicable to any component/view would be best.\n. Hannes - my apologies, I see now that you are sharing an example of usage -- not a hardcoding 'content.article' in JView.\n. Hannes - Since this approach calls for a plugin, I'm just not understanding how it's any easier than simply overriding the view using a system plugin. I'd be more inclined to support it if it actually made it easier for frontend devs to change the layout, but they are not likely to have these skills. I've looked a few times at this but I end up just sort of scratching my head on how it's better.\n+1 on looking at the MVC triad more deeply. Now that we have some experience with it, I think there are good gains to be found.\n. Also, added a zero for the missing microseconds parameter -- showed as an error in phpStorm.\nsocket_set_timeout($this->_conn, $this->_timeout, 0);\n. It certainly does appear to be optional.\nhttp://www.php.net/manual/en/function.stream-set-timeout.php\nHere's what phpStorm is saying:\nhttp://img163.imageshack.us/img163/3919/screenshot20111018at104.png\nStill in the patch - can't hurt, I suppose. I'll pull it out if you prefer.\n. I accidentally created a new pull request - not sure what I did. \nhttps://github.com/joomla/joomla-platform/pull/438\n. Thanks for fixing this, Andy. I wasn't certain how to test it. Apparently, it's not being used but it's good to see it fixed.\n. @garyamort - It would be good to get this fix in-it continues to be reported as an error, especially on high-volume sites.\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=28510\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=28249\n. Two more...\nThe method _xorString  has a similar issue:\n(string) $s1 = implode('', $ac);\nAnd _xorCharString returns $ai;\nThe _xorString is used in the \"Remember Me\" login in the Joomla Plugin. \n. Yea, not sure, Andrew. \nPHPStorm is pointing it out the following two lines as \"Member has Protected Access\" \n414 $encodings = array_intersect($this->client->encodings, array_keys($supported));\n584 - elseif (!$moved and ($this->client->engine == JWebClient::WEBKIT))\nFurther, 584 line has a second error \"Element Script doesn't have required attribute type.\"\nWas going to share a link to an offer for PHP Storm for free for Joomla - but I see you posted in on that note. In case you want to try it and haven't - the error reporting is incredibly handy.\nhttp://groups.google.com/group/joomla-dev-general/browse_thread/thread/e1396f4fc6f4616%28Message-ID\n. I will not report these in the future. \n. +1 on this change and agree with Hannes on pulling the else in, as well.\nif (this) {\n  do it;\n} else {\n  don't;\n} \nThis makes it easier for me to read the code.\n. If I am understanding correctly, this patch should correct the code so that it complies with standards as published on the Joomla Wiki: http://docs.joomla.org/Coding_style_and_standards Or, are those the current official standards? If not, is there a better resource that defines the standards?\n. Thank you. :)\n. @ianmacl \nThe str_replace two lines down filters the alias to ensure alphanumeric values and therefore will replace those values with dashes absent that line. \nhttps://github.com/infograf768/joomla-platform/blob/97fac72366a5bbe88b47a24c63603a2058c78ff7/libraries/joomla/filter/output.php#L98 \nSince it is possible to use a OnSave plugin to substitute values, and since the replacements are in no way universal or standard, I also question it's existence in core.\n. This patch makes it possible to override JMenuClient by adding a check in JMenu to first see if the application menu class is already loaded before including the core file. \n. Override http://en.wikipedia.org/wiki/Method_overriding\nNot Overload http://en.wikipedia.org/wiki/Method_overloading\n. Or to add a real menu to the Administrator. There are lots of reasons developers override core classes. In fact, in Louis and Mark's new developer book, there is a whole chapter devoted to how to do so. \nShyam - thanks for taking time to patch this.\nSam - if you were creating a new application, then you would also be creating the child class for the menu and you wouldn't have to override it in that case.\n. Sam - \nWhy do you see this as a problem? The patch is backwards compatible and if it results in more flexibility. I'm really not sure why you see this as anything other than a bug fix. \nIf it's not allowed, developers are still able to override JMenu, make this fix, and then override the application class.\nIsn't Joomla designed to be capable of overriding? Louis and Mark's book has a chapter devoted to it entitled \"Using Plugins to Override Core Classes\" - http://my.safaribooksonline.com/book/web-development/joomla/9780132780841/extending-joomla-with-plugins/157#X2ludGVybmFsX0ZsYXNoUmVhZGVyP3htbGlkPTk3ODAxMzI3ODA4NDEvMTcx\nI am not saying I am right on this, but I am confused by your response. Is there a standard for when a core class should be overrideable? Or, is the design intended to allow overriding anything? Is this include statement intentionally written to error out? \nIt might help if you were able to share some of the criteria used to make these calls and the underlying thinking the project has on overriding core functionality, when it is to be allowed and when it should be discouraged.\nThanks. \n. Sam - \nA plugin trigger is not going to replace the static query results provided by the client menu class that are then used in the application class for ACL considerations and active menu decisions and within the menu module. It would not change the current menu used in the template, and so forth and so on. By preventing this very simple override, you are not stopping this, but forcing the override of additional core classes or preventing the flexibility a developer is hoping to introduce and making Joomla less viable for their use.\nPreventing this might be valid, I don't know. It depends on what the PLT is hoping to accomplish with the architecture. It would be helpful if the PLT adopted a policy on overrides, whether the ability is to do so is considered to be important to the value of the architecture, or in what cases doing so should be discouraged. Sharing that understanding of how the PLT sees this issue would help build a common understanding of what constitutes a bug fix (restoring preferred behavior) or a could pose a \"threat\" to the architecture (and, in those cases, would be deemed harmful.)\nThere is no reason for me to respond further on this so I thank you for considering my comments.\n. Sam -\nChanging the include to an include_once would still result in an error as it would not be including the same file, it is defining the same class. That's the resulting error and the proposed patch is the appropriate fix.\n. I'm sorry, Sam, do you mean because of the autoloading the entire statement can be removed? I'm still not certain how the autoloading works, so that certainly could be possible. \nAgree that the menu belongs to the CMS.\nThanks for hearing me.\n. So, are you saying if this pull request is allowed - and the IF statement is then put in place - that the include_once could be changed into an include? \nIf so, yes, fine, okay, makes sense.\n. While I agree with @pasamio 's points, the problem is that it is completely off-topic and, while I am certain it wasn't Sam's intention to derail an issue that was important to a community developer, unfortunately, that seems to be what happened. \n@ssv445 - I agree with your bug fix and would have included it, right away. But, you do have other options without hacking core. You can override JMenu, put in your bug fix, and then load your own JSiteMenu. It's not ideal, but it will work.\n. It's good to see the project recognizes many site builders want to use jQuery with Joomla.\nHaving said that, I do not believe it's wise for the project to include jQuery with core unless the templates or widgets shipped with core require it, and that is not the case. I also wonder about the wisdom of adding core code to mitigate the conflicts that might result from installing different versions of the same non-core library. It seems to me that might be asking for a whole lot of drama.\nI wonder if it might make more sense to treat this as a JED issue? (Grandfathered in - so folks have time to adapt.) If the following rules were used on JED, it might help bring some sanity to this area:\n1. A copy of the JS framework (of ANY flavor) cannot be packaged with the extension. \n2. The extension must work with a simple CDN inclusion of the JS framework to be listed and to continue to be listed.\n3. The extension should be tested with MT loaded in the normal way - and then classified as MT friendly or not MT friendly. \nCombined, those policies should help encourage version standardization and staying up-to-date. It should also help to inform users as to possible conflicts they might find with MT. That information and open choices are the very best the project can do. From that point forward, it really is the responsibility of users to live with the consequences and benefits of their decisions (and the decisions of those they hired to make these calls on their behalf.)\n. 12.1 is the next Joomla Platform release - expected in the next few weeks. \n. @softforge Recently, an announcement was made that both jQuery and MT's would be included in 3.0 http://ux.joomla.org/forum/Visual-Design/481-UI-Options-and-Bootstrap?limit=8&start=136#636\n. +1 @eddieajau - in fact, one could make the argument it doesn't belong at the platform layer or the application layer but rather the presentation layer bundled with a theme.\n. @beat - \nHere's three good articles regarding the importance of separation of concern and how to best architect placement of logic within the most appropriate layer.\n1. IBM - SOA: Insights and Best Practices - https://www.ibm.com/developerworks/mydeveloperworks/blogs/AliArsanjani/entry/ajax_sits_in_the_soa?lang=en Good diagram that talks about best placement of certain types of logic.\n2. Presentation Layer Best Practices http://www.welterlin.com/whitepapers/presentationLayerBestPractices.php - Discusses the separation of semantic, hierarchical HTML mark-up from CSS style sheets and JavaScript behavior and what benefits adopting that methodology offers \n3. Presentation Layer Accessibility http://www.razorfish.com/.../PresentationLayerAccessibility.pdf Offers good argument as to why properly separating your presentation layer makes it easier to support interfaces approaches used by those who require assistive support.\nI agree wholeheartedly with @eddieajau that the JS implementation should not be implemented at the framework level. This is consistent with comments I've made for a number of years. It is how I am using JS in Molajo. It is my belief that the best flexibility can be achieved in our applications by deploying JS in the thinnest most shell of the application layer. In terms of a Web application, that layer is more frequently implemented in a theme/template. \n. @nickanti Sorry about that! http://www.razorfish.com/img/assetsTemp/PresentationLayerAccessibility.pdf\nTo me, a good recent example of separation of concern can be found in products like Twitter Bootstrap and Foundation. Those \"template frameworks\" emerging today can be applied to any environment, be it a CMS, or PHP, or Ruby, etc., because the code has been abstracted out to the presentation layer. Imagine if it were instead coded in the lower layers of a specific CMS -- then, it would only be helpful to those using that CMS. Further imagine if someone wanted to use a different, yet to be released solution for that CMS and a conflicting option was already hardwired to the codebase.  \nAnyway, I definitely agree it can be frustrating to contribute to Joomla or any open source project. I don't believe anyone is immune to the frustrations that come from participation. How anyone stays encouraged is sometimes a mystery to me. \nBut, we are all talking in the open, we just aren't all agreeing. I see clearly mentioned that this PR could be more properly directed to the CMS and many of us seem to agree with that notion, although it's unfortunate that is seen as discouragement. Door isn't closed on this, near as I can see. Maybe take it to the Joomla CMS list?\nThanks @beat.\n. @azrul \nWith respect, I disagree with the notion that we should continue doing things that we now understand are not best practices simply on the basis that we have always done it that way before and I rather doubt you believe that either, or Jomsocial wouldn't be as successful as it is. Right? \nThis problem can be fixed - it has only been said that the PR should be made of the CMS. \n. Both PR's under discussion are closed. \n. @realityking - agree, it's also an approach I see @LouisLandry taking in his newer work. \nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/application/web.php#L27 \nIt ends up being very helpful as you are coding due to object property and method hints which are getting to be an industry norm in better IDEs.\n. Yes, as @mbabker indicated above, it works fine with phpStorm.\nThanks.\n. I'd probably go ahead and deprecate this and either add a method to JFactory that can be access by Templates and Modules, along with Components, or just use the PHP methods. This method being available for only components probably isn't a good thing.\n. @AndrewEddie - \nCouple of questions, then. What benefit is there to JView::escape over the two native PHP methods htmlspecialchars() and htmlentities()? (Is it for defining unicode-friendly escaping?) \nAnd, if JView's escape method can be used and there is benefit beyond the native PHP methods, should the CMS do so? A problem I see is, with the exception of the module class suffix which is escaped using htmlspecialchars, there is no escaping in any of the Joomla core modules. This is true for 1.5 and 1.6. Since modeling core code is a recommended learning approach, this practice then is followed with many community extensions. \nBottom line, it would be good to settle on one way of escaping output and making certain rendered output is always escaped in that manner.\n. Module output is not escaped at all. \n. Done. https://github.com/joomla/joomla-cms/issues/95\nThanks @eddieajau and @realityking \n. The change is in core. https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/log/log.php#L259\n. +1\n. Louis - \nI am a bit confused on this so I hope you don't mind my questions. Wasn't the split put in place in part to build a cushion between the platform and the CMS so that the platform team could accelerate changes and cushion the CMS from the rate of change? I had understood that the CMS would select a platform version to use for the N.0 release and stick with it for 18 months. That would ensure the API only changes in N.0 and provide stability for CMS users and developers.\nWould it be possible to mark that release for all who want a platform release with long term support (3 years in total) knowing it would only have significant bug and security fixes? To me, that would take care of a lot of issues and free things up for the platform team to accelerate change and break whatever needs rebuilt -- but keep things nice and stable for production use.\n. Thanks @LouisLandry and @eddieajau for those responses. You've got my full support to break whatever needs rebuilding in the framework -- I believe in what you are doing. \nThe CMS team plays such a critical role in building support for the work the platform team is doing by demonstrating that the mission is one of stability and that the CMS is not trying to keep pace with the platform. \nMy sense was a \"specifically numbered release\" might more clearly send that message and help the CMS not 'feel the pressure' of exposing new platform capabilities, but if this is the best way to buy room for improvements, then so be it. \n. Above, it is mentioned: \n$q->where(\"a = 1\")->where(\"a = 2\",\"OR\")->where(\"b = 1\",\"AND\");\ngenerates:\nWHERE a = 1 OR a = 2 AND b = 1\nMy concern is that the results produce an ambiguous where clause. It's not clear if the developer intended:\nA. WHERE (a = 1 OR a = 2) AND b = 1 ?\nor\nB. WHERE a = 1 OR (a = 2 AND b = 1) ?\nEach are very different queries.\nRight now, there is a way to specify connectors in an intentional manner within the same where clause.\nA. $q->where(\"((a = 1 OR a = 2) AND b = 1)\");\nor\nB. $q->where(\"(a = 1 OR (a = 2 AND b = 1)\");\nUnless I am missing something, I think Joomla has a better approach for developers to use right now.  Maybe I am not understanding, though.\n. @Naouak said: \"AmyStephen:\nWith the old version you weren't even able to set a query with multiple AND and OR. The where in your query would have been either with only AND or OR.\"\nHere's how I do a complex where statement with JDatabaseQuery:\n$db     = JFactory::getDbo();\n$query  = $db->getQuery(true);\n$query->select($db->qn('id'));\n$query->select($db->qn('title'));\n$query->from($db->qn('#__categories'));\n$query->where('(id > 6 OR (id < 4 AND title = \"Uncategorised\"))');\necho $query->__toString();\n$db->setQuery($query);\n$results = $db->loadObjectList();\nThat produces this query statement (and you can see both the OR and the AND are present):\nSELECT id,title FROM #__categories WHERE (id > 6 OR (id < 4 AND title = \"Uncategorised\"))\nAnd, it returns the following expected results (plain Joomla 2.5 installation with no sample data):\narray(3) {\n  [0]=>\n  object(stdClass)#134 (2) {\n    [\"id\"]=>\n    string(1) \"2\"\n    [\"title\"]=>\n    string(13) \"Uncategorised\"\n  }\n  [1]=>\n  object(stdClass)#116 (2) {\n    [\"id\"]=>\n    string(1) \"3\"\n    [\"title\"]=>\n    string(13) \"Uncategorised\"\n  }\n  [2]=>\n  object(stdClass)#156 (2) {\n    [\"id\"]=>\n    string(1) \"7\"\n    [\"title\"]=>\n    string(13) \"Uncategorised\"\n  }\n}\nGive it a try and see if that works for you.\n. No, the other parts of the query do not need to be written together and my example doesn't do that, nor does it require it.\nWhen it comes to the WHERE clause and combining OR's and AND's (and NOT's), then it is logic, not JDatabaseQuery, that requires the statement be expressed as a whole in order to produce expected results.\nYour first patch produces ambiguous results, so I would be disappointed to see that introduced to core. \nYour second patch attempts to address that problem but, in my thinking, presents a far more complex approach to developing the query that many developers will find difficult:\n$q->where(array(\"a = 1\",\"a=2\",array(\"b=1\",array(\"b=2\",\"glue\"=>\" AND \")),\"OR\");\nWhereas the existing method is pretty straightforward:\n$q->where('(a=1 OR a=2 OR (b=1 AND b=2))');\nAnyway, that's just my 2 cents on this. \nMaybe what is missing is the ability to define parenthesis for grouping statements? That could be handy.\nThanks for working on this. Please don't be discouraged by my comments. It's just how I see it. No big deal. :)\n. @gpongelll - if I am understanding correctly, my response is https://github.com/joomla/joomla-platform/pull/956#issuecomment-4302563 \n. @Naouak said \"If you for example put OR as a glue on your first call, then the where parameters would be only composed of \"OR\" and you couldn't change that.\"\nThat makes sense to me since predictable results can be produced by always using an AND or always using an OR in a set of WHERE clauses where there is no parenthesis. \nDo this IF a or b or c or d. \nDo this IF a and b and c and d.\nBoth are clear. It's when you vary the AND and the OR that you must provide a grouping mechanism for the where clauses.\nThis is just logic. \n. rendering to:\nWHERE a=1 AND b=2 AND (c=3 OR d=4) OR e=5\nAndrew - after staring at it awhile, it dawned on me that the result you shared in your example is also an ambiguous where statement. \nIf bringing this improvement is a goal, though, maybe we should look at what others are doing? I have not looked very closely at the class, probably should do that.\nIn all honesty, I'm not unsatisfied with the current approach. JDatabaseQuery is very easy to work with and part of it's beauty is that is should be easier for even frontend folks to pick up. Hate to see it get overly complex, either.\nThanks for looking into this (and for building it.)\n. No, just simply that in the example shared it's not possible to know for certain what the developer intended:\nWHERE a=1 AND b=2 AND (c=3 OR d=4) OR e=5\nI suppose MySQL would interpret the results as this (I think, didn't test):\nWHERE (a=1 AND b=2 AND (c=3 OR d=4)) OR e=5 \nMaybe that's good enough? I suppose the tool doesn't have to prevent ambiguous SQL? I might be overthinking this. They can build bad joins - ask for columns that don't exist, and so on.\nAnyway, I use JDatabaseQuery all the time. Rarely have I had to break out into native SQL. It's useful because it's simple and powerful. I would just be careful not to lose that.\n. Of course. Good night.\n. At the very least, what Elin is proposing should produce predictable and accurate results.\nPersonally, I think $q->where('(a = 1 and b = 2)'); is far more intuitive, but maybe there is a use case for the array approach in very complex queries. \n. @elinw - \nYour comment makes me wonder if maybe you have identified a new issue.\nThis issue is intended to allow a developer to change the glue between WHERE clauses, thus combining OR's and AND's. \nThe challenge we were discussing was how to do so in a predictable way. \nAfter reading your second post, it now sounds like maybe you are discussing another issue related to the WHERE clause - but not related to changing the glue. If so, it's probably a different issue.\n. @gpongelli - \nAppreciate your efforts on this. Unfortunately, even with system tests that cover an intended use, it still is possible for developers to unknowingly create ambiguous where clauses. \nThis approach unfortunately has this type of problem:\nhttps://github.com/joomla/joomla-platform/pull/956#issuecomment-4302563\nMaybe give some thought to creating a grouping mechanism? \n$q->where('begin')->where('a = 1')->where('b = 1', 'OR')->q->where('end')->where('c = 1', 'AND');\ncould translate to:\nWHERE (a = 1 OR b = 1) AND c = 1\nThat type of approach could be useful and produce predictable results.\nAn idea, anyway.\nThanks, again, for all of your work.\nUpdated note: even with this type of approach, a developer could still use the glue incorrectly to create ambiguous where clauses. But, there would at least be a way to create logical groupings correctly. That would put a solution at par with working with native SQL in that it could be used correctly - or incorrectly. To me, that would be satisfactory.\n. @gpongelli said: \n\"Actually there's not a really need for this patch, because you can always write\n$q->where('a = 1 OR (b = 1 AND c = 1)')\nit works, it's portable to each driver, it's faster, it's the simplest solution.\"\nWe are in agreement, then. That's what I think too. https://github.com/joomla/joomla-platform/pull/956#issuecomment-4306363\n. I know why JControllerAdmin is showing the change -- I used the \"Format\" option to see if it would clear the problem up for that specific file. It changed all the lines (which is odd -- typically, it would only correct lines not properly formatted).\nThe one thing I did differently than my usual approach is that I used the \"Export to Mac\" option after I forked. \nI guess I'll start over, try a line, and see.\nThanks.\n. I'm going to redo this since those idea files got in there.\nRouven's changes will be in the new PR.\n. Sorry - thought these were combined. Created a new PR without the idea files.\n. @LouisLandry - \n@ElinWaring indicated the two of you are already working on this. https://groups.google.com/d/msg/joomla-dev-platform/eH1E0vFbrUo/LtQNa9VLmmoJ\nCan you use this work? Or, should I just close this PR?\nThanks!\n. In case there is a question, this PR should be ready to use. If there are other issues, please let me know. When the request is either processed or closed, I can use the fork to help with https://github.com/joomla/joomla-platform/pull/973#issuecomment-4443039 \nAppreciate an update, either way.\n. I'm going to start over on this.\n. Awesome.\n. @eddieajau - good to see this, it answers one of my questions about the separation. If you want help doing this in other packages, I am happy to do so.\n. @eddieajau Great - will do so as soon as my fork spot is available when this pull request is either processed or closed. https://github.com/joomla/joomla-platform/pull/970\n. Or, now that I think about it, why not just have JDatabase extend JDatabaseDriver and call the parent method?\nThat would still allow the transition and complete removal without impacting the new class.\n. Along the same lines, it might be better not to start the new class with the deprecated method getUTFSupport.  \nIf it stays, then the comment is wrong:\nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/database/driver.php#L732\n. Wait - are you saying JDatabaseDriver and JDatabase both go away? \nIf so, I am very confused as to what the direction is here. \n. This is what I am suggesting be done instead, Rouven:\nclass JDatabaseDriver \n{\n  function no_deprecated_methods_only_new_ones () {}\n}\nclass JDatabase extends JDatabaseDriver\n{\n    function leave_deprecated_methods_in_the_old_class () {}\n}\nWith this approach, existing type hints and instanceof checks for JDatabase still work, right? \nWhen it's time for JDatabase and it's deprecated methods to go away, simply remove it from the package. \nThe new class: JDatabaseDriver (and the developer API) then reflect where we are going and no changes will be required to the new class when the old class and deprecated methods are finally removed. \nJust trying to point out as a developer using the Joomla framework code, I find this approach confusing. Flipping things around helps to send a clear signal as to where the codebase is heading and therefore where I, as a developer, should focus my work.\n(Again, that is if the JDatabaseDriver is where it's all going, if that's not the case, then I am just lost. :-P ) \n. Rouven - no reason to apologize, appreciate your responses.\nSounds like you and I agree on the methods/properties. That's a big part of what I found confusing.\nThe only other confusion was that, IMO, it makes more sense for JDatabase to extend JDatabaseDriver (rather than as it is now where \"permanent\" class JDatabaseDriver extends the deprecated class, JDatabase.)\nGood enough. Thanks again for your feedback. :)\n. Thanks for the explanation. :)\n. @LouisLandry - \nI am sorry, but I didn't see your comments before I responded. I see what you are saying. \nMight have been enough to just have JDatabaseDriver extend JDatabase without also including the deprecated methods (or have just done one or the other) -- but I get it now. \nI appreciate your response. It helps me learn. Thanks for taking the time to help me understand.\n. Are you sending in \"admin\" - or \"administrator\"?\n. @tbela99 - Ok, I see what you are asking. In Joomla, there is only one application that runs at a time, so, that would be expected behavior. The application is a static instance.\n. @tbela99 - if you removed the parameter, how would be able to determine which application has been requested?\nDon't use JFactory if you want to create a new instance of another application. The intention and purpose of JFactory is to provide static (one time) instances of objects that are only to be created one time per page load. If you need something else (like figuring out something for another application that isn't current), don't use JFactory. Just create the instance yourself.\n$otherApp = JApplication::getInstance('site');\n$router = $otherApp->getRouter(); \netc.\nWould that work? (Actually, not even sure you can do that given paths, etc., but that would be worth a try.)\n. @tbela99 - \nWe are going in circles, here. This isn't my code and I am not defending it, just explaining it. \nFor better or worse, the purpose of JFactory is to create an instance of various application objects ONE TIME - and then store that instance as a static object, making it available for later calls within the application.\nSo, the first time the application invokes JFactory::getApplication('site') - it needs the parameter. From that point on, JFactory  returns whatever application object it stored in the static variable. \nThat's how JFactory is intended to work, for better or worse. In fact, many times, you'll not see the application name in the JFactory::getApplication() call because it's known that the current application will be returned. \nI understand your point that sending in a parameter should return an object that corresponds to that parameter value -- but, it's always wise to review the code to see what really happens.  \nTry my suggestion above (don't get the application object from JFactory) -- see if that works. I don't know that it will since it's possible paths and other constants won't be established properly. I've never had any reason to use multiple applications at once so probably can't help more.\nBut, this is not a bug, it's just how JFactory works. (I do understand it's not how you'd like to see JFactory work and I get your point -- but it doesn't change the fact that it is how works, nonetheless.)\nG luck.\n. JFactory is not broken. It works exactly as it's intended to work.\n. Well, you can do a PR and see if the platform team accepts it. I don't control that so maybe they'll agree. \nHope my explanation helped. Going to disable notifications since I have nothing else to offer. \nGood luck.\n. I most definitely will be studying the documentation, appreciate you doing that.\nIn this package, there is only one external dependency: \n+jimport('joomla.utilities.xmlelement');\nWondering if the single method needed could be included to remove even that dependency? It's a great stand-alone package and something that will be needed time and time again by developers. Having no external dependencies at all will make it that much easier to use - good, good work. Appreciate it very much.\n. Thanks for having mercy on me. :-P\n. Not sure what problem you were trying to solve but suppressing MySQL error messages is bad form. Just takes a lot longer to debug problems for those of us using the Joomla Database package. \n. Yes, I can read Rob's comments, Sam. \nThe assumption that it's a connection problem is invalid. For me, a simple syntax error where a selected column didn't exist in the table was the underlying problem. \nSince the assumption is it's a connection issue, that error is thrown away, a connection is attempted and if all is not cool (like maybe you have a syntax error), it will error on having no cursor. \nWhen the error is thrown, the application returns a zero error code and no message - because the original error is long gone and the connection wasn't a problem.\nYou get an error. You have no code, no message, no clue.\nIf you are trying to trap connection errors, better look at the error to make certain that is indeed the problem. If it's not, let the error be thrown so that the application gets good messages on the real problem.\n. Here are some links to the patch that might help explain:\n1. The workaround applied for a dropped connection was to suppress the error message (my error was a syntax error): \nhttps://github.com/robschley/joomla-platform/commit/1971fcbdbe274d0e5f7ba77cf9c481d547ed462e#L0R451\n1. and then silently attempt a reconnect to recover (my connection was fine). \nhttps://github.com/robschley/joomla-platform/commit/1971fcbdbe274d0e5f7ba77cf9c481d547ed462e#L0R457\n1. If the connection is not a problem (which it wasn't for me), it falls into the throw error logic  \nhttps://github.com/robschley/joomla-platform/commit/1971fcbdbe274d0e5f7ba77cf9c481d547ed462e#L2R399\n1. Which should be okay except the real error was suppressed in case it was a connection problem (which it wasn't).\nLooks like the CMS reported similar problems a month ago. \nHope that helps.\n. I have no intention of wasting another minute of my life arguing with defensive Joomla developers.\nUnsubscribed\n. @eddieajau - \nYes, it's pretty easy to reproduce. \nI put a quick gist together that you can use MySQLI Database Driver class, execute Method (libraries/joomla/database/driver/mysqli.php ).  https://gist.github.com/4042212\nTo create a problem just introduce a syntax error in any of the CMS queries.\nThe displays I added to the execute method in the gist will demonstrate what I explained previously.\nThanks for the background on the problem you were trying to solve. I understand the need to bury notices one can't avoid. Perhaps testing for the specific code that a connection problem presents might be all that is needed to ensure the other errors are caught, not overwritten.\nThanks.\n. @eddieajau -\nIt's not just the CMS. I am producing this out of Molajo, but since I use the database package differently, to make things easier for the Joomla team to reproduce, I tested using the latest version of the CMS. \nYour results are exactly as I would expect -- you have a generic 500 error and a copy of the SQL -- but no clue as to what went wrong.  Try it with my gist and then those echo's I shared should help explain what the issue is.\nSpecifically, for my test, what I did was add a column that didn't exist to the SELECT (a.nope) to the Admin Articles List query:\n$query->select(\n        $this->getState(\n            'list.select',\n            'a.id, a.title, a.alias, a.checked_out, a.checked_out_time, a.catid, a.nope, ' .\n            ', a.state, a.access, a.created, a.created_by, a.ordering, a.featured, a.language, a.hits' .\n            ', a.publish_up, a.publish_down'\n        )\n    );\nThe results I got from the test, are as follows:\n```\nAfter $this->cursor - display the untrapped error before it is overwritten by the next DB operation: \nCode: 1064:\nError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ' a.state, a.access, a.created, a.created_by, a.ordering, a.featured, a.language,' at line 1:\nThere is no cursor and errors are still available since no more DB operations have taken place.\nCode: 1064:\nError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ' a.state, a.access, a.created, a.created_by, a.ordering, a.featured, a.language,' at line 1:\nThe connection is fine. The errors are now gone because the last DB operation -- $this->connection() -- was successful and overlaid the error codes.\nCode: 0:\nError: SQL=SELECT a.id, a.title, a.alias, a.checked_out, a.checked_out_time, a.catid, a.nope, , a.state, a.access, a.created, a.created_by, a.ordering, a.featured, a.language, a.hits, a.publish_up, a.publish_down,l.title AS language_title,uc.name AS editor,ag.title AS access_level,c.title AS category_title,ua.name AS author_name FROM j_content AS a LEFT JOIN j_languages AS l ON l.lang_code = a.language LEFT JOIN j_users AS uc ON uc.id=a.checked_out LEFT JOIN j_viewlevels AS ag ON ag.id = a.access LEFT JOIN j_categories AS c ON c.id = a.catid LEFT JOIN j_users AS ua ON ua.id = a.created_by WHERE (a.state = 0 OR a.state = 1) ORDER BY a.state asc: \n```\nAs you are noting, obviously, the query is going to fail.  The problem is that the actual error code of 1064 and the specific error message are missing. So, you have a generic 500 error - but a code of 0 which should mean all is well, and a partial copy (depending on how long it is) of your SQL.\nHope that helps.\n. Yes, @ianmacl - you are absolutely right - that does patch does fix the problem. My test now looks like this:\n```\nAfter $this->cursor - display the untrapped error before it is overwritten by the next DB operation:\nCode: 1064:\nError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ' a.state, a.access, a.created, a.created_by, a.ordering, a.featured, a.language,' at line 1:\nThere is no cursor and errors are still available since no more DB operations have taken place.\nCode: 1064:\nError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ' a.state, a.access, a.created, a.created_by, a.ordering, a.featured, a.language,' at line 1:\nThe connection is fine. The error code is zero now gone because the last DB operation -- $this->connection() -- was successful and overlaid the error codes.\nCode: 1064:\nError: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ' a.state, a.access, a.created, a.created_by, a.ordering, a.featured, a.language,' at line 1 SQL=SELECT a.id, a.title, a.alias, a.checked_out, a.checked_out_time, a.catid, a.nope, , a.state, a.access, a.created, a.created_by, a.ordering, a.featured, a.language, a.hits, a.publish_up, a.publish_down,l.title AS language_title,uc.name AS editor,ag.title AS access_level,c.title AS category_title,ua.name AS author_name FROM j_content AS a LEFT JOIN j_languages AS l ON l.lang_code = a.language LEFT JOIN j_users AS uc ON uc.id=a.checked_out LEFT JOIN j_viewlevels AS ag ON ag.id = a.access LEFT JOIN j_categories AS c ON c.id = a.catid LEFT JOIN j_users AS ua ON ua.id = a.created_by WHERE (a.state = 0 OR a.state = 1) ORDER BY a.state asc: \n```\nMy apology for not checking trunk. That definitely retains the error and message and throws the right values.\nAppreciate everyone's help.\n. If you look at my examples, you'll see, there is indeed a message. The problem is that the original, more descriptive message is gone and the error code is missing. But, a generic \"something is wrong\" message is returned.\nRegardless, it is fixed in the platform and the test confirms that the patch retains the original message and code.\nFor clarity and for what it's worth, it is not fixed in the CMS master which is what I used in my testing example and Ian pointed out as not consistent with the platform. https://github.com/joomla/joomla-cms/blob/master/libraries/joomla/database/driver/mysqli.php#L529\n. Also, I can't seem to find a config.php-dist file (or a config.php file) in the distribution.\nI am trying to follow this documentation:\nhttps://github.com/joomla/joomla-platform/blob/staging/docs/manual/en-US/appendices/analysis.xml#L38\nBut, it really doesn't seem to be related to the platform repository.\n. Thanks, Michael. I guess my bigger question is where are the instructions I should follow to set up unit testing? \nI started by looking at the Wiki - http://docs.joomla.org/Unit_Testing But that's outdated.\nSo, I remembered the discussion with Andrew and Chris on documentation and looked at the book, but that apparently isn't current, either. https://github.com/joomla/joomla-platform/blob/staging/docs/manual/en-US/appendices/analysis.xml\nDo you have pointers on where newbies should get started with getting Joomla unit tests set up?\nThanks so much.\n. Thanks guys - that helped a lot. Went ahead and did a PR to update the doc with your instructions.\nhttps://github.com/joomla/joomla-platform/pull/1037\n. Agree, @eddieajau - new PR here https://github.com/joomla/joomla-platform/pull/1039\n(Had already reforked the repository)\n. closed https://github.com/joomla/joomla-platform/pull/1037 and redid PR\n. I have read a brief comment about changes coming for JTable but nothing more specific, so I not sure what the thinking is in that area. To me, JTable classes are best redefined as models. I agree with separating JTable from the JDatabase package. In my thinking the database package should have no specific table or column names or \"trigger\" actions. Would prefer to see it more cleanly defined as a utility of database operations, nothing more.\n. @realityking changed those length to runtime exceptions. (Used length due to the checking of the file string length, but your comment made me realize that was silly.) Hit the docblocks, throw tags and adapted returns, as needed.\nPlease look at the InstallerHelper and let me know if there is a better approach.\nThanks :)\n. Thanks for the feedback -- getting this first one right will serve as a useful pattern for me for the others. Will get this updated later today when I get a few moments.\n. Please use https://github.com/joomla/joomla-platform/pull/1071\nThis PR will be closed.\n. Arg. Closing.\n. The updater does use the setAdapter - but it issues a CONTINUE if it the adapter is not set. (So, don't think it needs change.)\nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/updater/updater.php#L95\nGot the docblock and accidentally pulled in a cache change. Patience while I try to remove that. =)\nThanks!\n. Well, look at me. I do believe I have learned how to rebase. That will come in handy since I make a lot of mistakes. ;-)\n. No, it's not pretty (but I really appreciate it - thanks!)\n. Good point, happy to fix those if you find more little problems like that. I am using branches and have figured the rebase out so feel free to send those back for me to fix. \nThanks for your direction.\n. So, before I issue a PR, run the unit tests. Is that what I should be doing?\n. Thanks @chdemko - should be ready now.\n. @realityking - done, thanks\n. Thanks @chdemko - I believe this is ready now.\n. Should be ready with @chdemko and @elkuku 's corrections.\n. @realityking - I agree with your comment that they belong in the legacy folder. In fact, I think the entire MVC should go there since it is to be rebuilt (if I understand correctly).\n. @realityking - Thanks for your feedback, changes made. Let me know if you decide specifically on the Helper, left comment for you on that, but no change.\n. Should we go ahead and close this one? \n. OK, I will do that, thanks @eddieajau \n. Made the JException changes.\nBut, just now thinking, I'm guessing we're going to want to go back thru this and add the legacy JError class check. Not up for it tonight but if it's needed, I'll try to get it tomorrow night (along with any other feedback that might appear).\nThanks for your patience.\n. Done. Thanks @realityking \n. Yea, that doesn't look good. I did a fetch/merge from the upstream remote http://help.github.com/fork-a-repo/\nWhat should I have done?\n. Not sure how to do a merge (apparently), so for now, please use https://github.com/joomla/joomla-platform/pull/1097 instead \nI am closing this PR.\n. So, that merge was okay? I guess I didn't expect to see all the files changed in the main repository. \nI'll reopen this then, make the fix, and close the other after I commit it. \nthanks.\n. OK - I think Mail is ready. It has both the legacy and new approaches. \nThanks for the feedback and help.\n. That is weird - the tests run fine on that branch for me. \nThe removal shouldn't have made any change at all since we are simply removing logic that will not be reached anymore due to the changes made in the database package.\nTime: 19 seconds, Memory: 157.00Mb\nOK, but incomplete or skipped tests!\nTests: 3339, Assertions: 4996, Incomplete: 698, Skipped: 313.\nAmy-Stephen:joomla-platform amystephen$ \n. When I echo the results inside of the test - this is what I get. So, not sure why but it's passing in my local environment.\n$tmp->date->toISO8601()                   2012-04-01T14:05:12+00:00\n$this->equalTo($date->toISO8601()    2012-04-01T14:05:12+00:00 \n. Tried a new PR with recently merged core. \nUnit tests worked before and after the change. \nWill close this in favor of https://github.com/joomla/joomla-platform/pull/1100\n. All right, I think I have this one updated for @eddieajau 's feedback.\nThanks Andrew.\n. Please use this instead of https://github.com/joomla/joomla-platform/pull/1087\n. Sorry for the confusion. I'll close this new one (and reopen the old) since the merge was fine. \n. @chraneco - Link to the Joomla Platform list: https://groups.google.com/forum/#!forum/joomla-dev-platform - that's the best way to see if you have the platform team's buy-in before investing a lot of time.\n. @blueboar2 - \nI'd probably just make it false (if $row isn't an instance of JTable, then it's not checked out).\nif ($row instanceof JTable)\n{\n$result = $row->isCheckedOut($userid);\n}\nelse\n{\n$result = false;\n}\n. I am glad to see HMVC and chaining in the description. I'll hold other comment until I've had a chance to play with the code. Glad to see the good documentation. Appreciate that.\n. While the sensitivity to change due to BC is not lost on me, building on @HermanPeeren 's comment - @LouisLandry - would you consider making what Joomla calls views - Controllers? That would allow what Joomla calls Layouts to be, IMO, properly identified and used as Views. \nCombining that with HMVC and chaining and Joomla becomes very flexible and powerful.\n. Removed my comments. \nI need to play with this before commenting further.\nThank you for sharing this work.\n. @eddieajau I agree - that's exactly why I removed my followup comment. No sense in all of us saying stuff - @LouisLandry put up some code so we ought to do the same, in response.\n. @LouisLandry - you might want to change the default on the eBay repository to MVC. Otherwise, folks need to know to do so with their fork. Merging to the content branch isn't clean.\nThanks!\n. +1 @realityking\n. @LouisLandry - \nGlad to see the controller serialized with its input - that certainly takes care of a major weakness with the current MVC implementation and opens the door for chaining and HMVC. \nI do not understand why the application itself is passed into the Controller. Could you please expand on the benefits or provide examples that highlight how this might be useful?\n. @HermanPeeren Thank you for helping to explain my point on the \"What should a View really be?\" question for a MVC application.  And, how it's my opinion that the View should be what we call a layout, and what we call a View should be a Controller. \n@eddieajau Your response to Herman suggests this other way of looking at it might not be clear. So, first, just to see if we can get to an understanding without saying one way is right or wrong. From there, it will be easier to think about the pro's and con's of each. I agree with you that the JViewHtml is elegant, simple, easy to extend, lovely code. But, I very much believe it's a Controller. \nA controller is the only structure in the triad that should be directing logic. It should be asking the model for data, not the view. The simple fact that this new rewrite is passing the Controller into the View is an indication that the View is a Controller. \nHere are two very good examples of what Views look like - note how these look like what we call Layouts in Joomla:\nhttp://msdn.microsoft.com/en-us/library/dd410123.aspx\nIn this MVC Tutorial - please look for the phrase \"Now let's look at some views\" - http://www.thecoderush.com/mvc-tutorial\nThe reason this matters is that properly separating the three elements creates a great deal of flexibility. That's what is missing in Joomla's architecture and I very much believe a large part of that inflexibility is due to incorrect definition of the View.\nAs I study what is going on with Drupal 8, it strikes me that Joomla's strength is it's JDoc statements. I think JDocument needs simplification, but even in it's current form, it's pretty awesome.\nWhere Joomla's architecture falls short is reuse of code and poor information sharing between extensions. I hope that you'll take a bit of time to think about the \"View as a Controller' - play with it. Take JViewHtml and make it JControllerDisplay and have it extend JControllerBase. Consider a central place for sharing Views (Layouts) that can be used by any extension. I have personally found things open up in surprising ways when that takes place. \n. Good, we're on the same page in terms of concepts.\n\nIn a classical approach, yes, but the classical approach was invented for \nstateful applications (Java apps) where the controller broadcast instructions \n\nAgree. However, you solved the problem of maintaining state within the MVC with serialization. \n\nThat's already possible. Note the SplPriorityQueue that holds paths (have \na look at the unit tests and you'll get a feel for how amazingly powerful \nthat is\n\nYes, I did see that (and should have mentioned it). Big thumbs up. Another problem solved.\nAbove in the description, Louis said: \n\nwe strongly recommend considering using one controller to one action moving forward.\n\nI totally agree with that. Combined with the Controller serialization, it sets up chaining and HMVC neatly. \nBut, 'display' is a nothing more than task, just like create and update and delete. Consider, you wouldn't have to inject that View with the Controller if you just let it be the JViewHTML be the Controller it wants to be. Sets up RESTful applications nicely, too.\n\nI guess it depends on how far away from the existing 'Joomla paradigm'\nyou want to shift. I think it's important to at least support the current \nparadigm in principle. \n\nI'm confident from your response that the platform team understands the point and it sounds like this has been considered but believed to be too much of a change to thrust on the existing developer community. \nI do not envy the job of balancing those competing goals of keeping software viable for new development and mitigating the cost of keeping pace with the API and alienating the existing Joomla commercial developer market. \nThe one question I would ask those who are resisting platform change in the name of not killing the CMS, are you certain which  poses a bigger danger? Change? or a lack of it? \nConsider, there is absolutely no reason for an extension to have code specific to an application (and therefore be split into administrator and site components). Should architectural constraints that force redundant code be retained so that current extensions don't need to be changed? \nWould a goal of achieving codeless components driven by parameters be a good goal or something that should be blocked at any cost? Which is better for the CMS?\nThe CMS does not have a captive audience, folks. The market naturally shifts to better solutions. The first priority must be ensuring Joomla is in that position and the big gains are going to come from the platform. Don't fight 'em - they are helping you.\nThank you for your response @eddieajau - I'd like to see the View step taken. I hear the concern on how much change to introduce. I believe you understand the point. So, you guys gotta do what you think is best. I can respect that.\n. @LouisLandry - also, why separate the classes into their own folder? It'll be easier to use independently of other platform packages if contained within a single MVC subfolder/package. (And, I can't imagine wanting to use one element of the triad without the others.) Thanks.\n. Makes sense, thanks @realityking \n. Removing my non-code related response. :-P \nIf someone wants to discuss the topic of change, let's get a discussion going somewhere outside of the PR. I'm happy to join in.\n. Now that we have had a bit of time to consider this, it's become clear that the only impact on existing components in the Joomla CMS is that the phrase \"extends JView\" will have to be changed to \"extends JViewCms\" some time in the next couple of years. It really turned out to be a very minor impact.\nMy sense is there are no objections, anymore. Does anyone object to this PR? I think it can be merged, given the documentation changes proposed above.\n. +1 @nikosdion \n. Just as a reminder, two of the classes are buried in the framework and extensions are not impacted by the name change. \nThe only change that impacts Components is the 'extends JView' literal where 'JView' needs to be changed to 'JViewLegacy'. \nDevelopers have a couple of years to make this change.\nThe patch that @RealityKing is putting in will allow developers to make that change to their extensions now so that the same names work in 2.5.x as in future releases. \nTruly, this ends up being a very low impact change. \n. Actually, I'm trying to get it to where there is only one object -- instead of many -- and most importantly, that the connection information is only sent one time and then reused.\nRight now, if I understand this correctly, you would instantiate your JDatabaseFactory class:\n$factory = JDatabaseFactory::getInstance();\nThen, save $factory -- since you'll need it later for queries, etc\n$savefactory = $factory;\nUse the saved factory to create the database connection:\n(get the configuration file and load the $options array);\n$db = $savefactory->getInstance('mysqli', $options);\nNow, you need to save the name and options and the factory since those are used for queries, export and import:\n$savename = 'mysqli';\n$saveoptions = $options;\nThen, when you use factory to create the query, you have to send all of that back in;\n$query = $savefactory->getQuery($savename, $saveoptions);\nIt's too much, IMO. \nNow, if you are saying you want to get the iterator directly from JDatabaseDriver, you have to save that $query connection, too.\nIMO - it's easier to only interact with the Factory class -- and only send that information in one time, creating a static instance of that connection for later reuse.\nNow - I will use it that way in Molajo, so, I'm not going to throw down on this. I can work around Joomla here. I just think it's a little complex - and unnecessarily so.\n. I should say ($name, $db connection) must be saved so that they can be used as parameters (not name and options). \nIn addition, as I said above, JDatabaseFactory connection, too.\nI've made my own database factory, so, it's not a concern for me, but I do think this is a bit cumbersome and it might be easier to fix now before it starts getting used.\n. Going to close this - hope to do some documentation on this package and if it still seems odd to me, I'll have a more sensible explanation and PR.\n. JLog::findLoggers is broken -- The single ampersand needs to be two equal signs\nhttps://github.com/AmyStephen/joomla-platform/commit/b7237655bc69925f50e30734bbee75000d526d35\nJLog does not work correctly right now. (There is no priority checking).\n. Two tests are failing. One is failing due to the Exception name change and I don't know how to fix it. \nThe second is changing due to the findLogger logic and I am not certain how to review the input so that I can determine why the test failed. (It is very possibly an incorrect test.)\n. I am going to break this up into easy to understand pieces.\n. Let me explain why this code is a problem for me, specific to using JLoggerDatabase class.\n- JLoggerDatabase::addEntry \nIt calls toSQL -- if I changed that method (below) to the JDate::format - then I would have to assume the default date option would work for everyone. (And, if that were true, we could simply remove the toSQL method.)\n$entry->date = $entry->date->toSql();\nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/log/loggers/database.php#L126\n- JDate::toSQL \nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/date/date.php#L437\nJDate::toSQL expects one of two things:\na. JDatabase object - the hinting isn't the problem - it's accessing the referred method. I have an object for the specific driver -- this has changed a bit with the JDatabaseFactory approach.\nb. JFactory\nI have neither. I am not using JFactory (nor will I), and I am using my own factory class to create the Driver connection, etc. So, I use the JDatabase package, but not the JDatabase object.\nThis way, by adding format - those who are in the same situation as I am in, but don't default to the format I provided, can pass in their database format. Otherwise, the defaults will work for me and there is no backwards compatibility issues for current use. \nThat helps to separate it better for those of us trying to use the platform - but aren't the CMS.\nDid that help?\n. I added it for those who can't use the default format -- and aren't using JFactory. (In reality, the only database driver with it's own method for date format is Oracle, so if it makes more sense to just default the format, it won't bother me at all to remove the $format parameter - and simply do a default when the JFactory class isn't present). \nI do have a separate PR for the JLog package https://github.com/joomla/joomla-platform/pull/1153\nThere will be no changes to JLogDatabase for this, though. This $entry->date = $entry->date->toSql(); will stay the same.\n. @realityking - removed $format - this certainly is enough for me. Is this better?\n. Where the heck did those come from? My IDE is showing External change. Good grief. \nNo, @realityking - that won't work. If the $dbo is passed in, it should be used. \n. Yea, that'd do the trick, too. OK, I'll repull from the core repository and use that.\nThanks. \n. Actually, after testing that @realityking - it didn't work. What that code does is tries to run getDateFormat on a null $dbo object. So, I think the way it is - is probably the best approach (or, at least it works.)\n. Here's what's happening - I'm using JDatabaseFactory since JDatabase is deprecated and I am not using JFactory, I have my own application controller process. \nWhen you pass a JDatabaseFactory object into this JDate method, it gives you a \"Catchable fatal error\" indicating it must be an instance of JDatabase. \nSo that it's clear, this call to JDate prevents me from using JLoggerDatabase. That's a bit ironic since the JDatabaseFactory object works just fine with the logger and it's the logger that is doing the heavy hitting with the database, not JDate. \nWould you settle for removing the JDatabase hint on the JDate call?\n. @realityking -The database object obtained from JDatabaseFactory, not JDatabaseFactory => https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/database/factory.php#L54 \nHaving said that, I am hacking all of the packages for namespacing and I did remove the JDatabase class completely since it's deprecated. That's probably the problem. \nI'm in the office right now, later, I'll add JDatabase back in and see if that fixes it. I probably made a bad assumption thinking that deprecated means you can remove it.\n. Changing the hint to JDatabaseDriver would solve this problem for me -- plus, it would get rid of the deprecated class. Is that a good solution?\n=> EDITED. SORRY!\n. @RealityKing - Let me try again. I am not passing in the JDatabaseFactory object. That would be silly. It's not a database object. I am passing in the object that I linked to above that is created using the JDatabaseFactory. It is a JDatabaseDriver object. So, if the JDate hint is changed to JDatabaseDriver from JDatabase, it will solve my problem.\nThe only reason I even mentioned JDatabaseFactory is that I wanted to point out to you guys (Andrew in particular) that I am trying to use the current, not deprecated approaches as one might expect other platform developers to do. \nDoes that clear it up?\n. @realityking - yes, that's fine if the type hint is changed. (In fact, attempting that as a possible solution is exactly how I discovered the type hint failed.) So, combined, those two changes would work for developers who are using a JDatabaseDriver object with the JLog package, but not using JFactory or JDatabase. (Which I believe describes where the Platform team is heading.)\nNow, that's not going to work for any database outside of JDatabaseDriver, but I feel like it's only fair to expect that using the JPlatform database package would be expected if you are trying to use another JPlatform package with database interactivity. To me, that's reasonable. If someone wants to use another database package, then they can create a custom Log class. That works too. \n. No, unfortunately not.\nWe can either:\n1. Do the PR I submitted (here).\n2. Change the JDatabase Hint to be JDatabaseDriver and then make the change @realityking is recommending https://github.com/joomla/joomla-platform/pull/1155#issuecomment-5181405\n3. (Or, I'll just hack JDate a bit - in addition to the namespacing hack I did.) \nAny one of those three will work (although I'd prefer to keep my hacks to the namespace).\n. @LouisLandry - yup, glad to do it. I'll get it tonight after work. Thanks :)\n. Actually, now that I look at  #1158 - @realityking already made the database hint change for JDate. So, I'll close this issue and include the JLoggerDatabase SQL change in my next Log PR. Thanks guys.\n. Thanks @LouisLandry - as I was reviewing the tests, I realized there was something fancy going on. Thanks for the link and explanation, I'll read up on that, get another test case added, and resubmit this later. \nAppreciate the feedback.\n. I'll do it yet this week, maybe later this evening.\n. @realityking - with the exception of the autoloading, I (believe I) have addressed your points. \nI added an option for using a break tag -- defaulting to current behavior so as to not change the output for existing CLI apps. Do you think this is an acceptable approach? \nThanks for your feedback and direction.\n. That was fun =) \nThink it's working now. Thanks guys.\n. Hm. Closing this one - I think I missed the boat here. \n. @LouisLandry - Good point. Listen - you are the one with the big picture in mind, so throw it back with direction or close it if it's not right. I appreciate the direction as it helps me understand what \"uncoupled\" means to the platform team and some of the finer points of what you are working towards in the framework. So, that type of feedback (should) help me be more useful. ;-)\n. Good. Need to think about the testing. The Mailer testing doesn't appear to be filled out yet. Maybe I should start there and then go back to this class and do the testing? \nI'm brand spanking new at PHP Unit testing, so, it'll be good to learn.\n. closing this for https://github.com/AmyStephen/joomla-platform/commit/1a30064c0dbc4ed7998fd2d5b99c2509ff618ec6 (I do not believe I can use this issue for my PR).\n. Perfect, very helpful. TestReflection::getValue was just what I needed.\nMy mock class is only those methods called. The only \"fancy\" thing I did was set an array of values but that was because I didn't want to create a test method for each value. Otherwise, that mock class is nothing fancy.\nAppreciate your time. I think this ready for consideration.\n. Since it's been over two months, I'm going to close this.\n. If $client->id is not set coming out of JApplication getClientInfo, there is a problem. Using an \"isset\" only prevents the error message from display, but it doesn't address why Joomla is unable to determine what Client it is running. \nIt's probably more of a developer issue in that the application was not correctly initiated.  \nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/legacy/application/helper.php#L73getClientInfo\nNot so sure it's a good idea to add this code since it seems to suggest it's acceptable to not be able to identify the client.\n. This makes good sense, to me. It's just one more step towards getting rendering more flexible. Probably dozens of ways to do this but this looks suitable to me, inline with how other output rendering is handled. Even if a new approach is used with the new Integrated Content system, having this for 3.N series would be good.\nThanks Roberto!\n. Core code needs to be inline with architectural directions. \n. @dianaprajescu - first, major kudo's for hanging in there over six months and keeping this PR current. You appear to be someone who does not discourage easily. Tenacity comes in handy with open source. =)\nAlso, I've learned in many years of sometimes being confused as to why something is or isn't happening to pick up on subtle hints which, more often than not, are usually shared once. As I look back through this history, I can't help but wonder if you have you had a chance yet to address @LouisLandry 's concerns? If not, that might be helpful. It might also be useful to review Louis's code on the other PR (which was closed). Maybe there are ideas on approach you might borrow?\nThank you for your work, Diana, and for hanging in there. \n. @dianaprajescu Please don't do so on my account. Maybe a maintainer can comment on what they might be looking. I am just guessing. \n. @dianaprajescu Another idea is to post on the platform list and ask what might be needed to get this code in. If you don't have time, we could try to find someone to help. Getting some exposure on list could help get all the pieces moving right. If you do, I'll look for your post and see if there is something I might be able to do to help or if I can find something.\n. Might be worth joining the discussion Diana started on list a couple of days ago. \nhttps://groups.google.com/d/topic/joomla-dev-platform/xddM8195hpo/discussion\n. Really great to see this. Wondering if it makes sense that the Joomla project be the entity that manages the composer package -- and do so as a normal step of the official release process? IIRC, the composer instructions state it is preferred (if not required?) that project maintainers submit/maintain these packages.   \nPart of the benefit to this could be that as the separation process is more complete, the project might see start packaging individual components and perhaps even comply with PSR-0, at least for the individual packages. Right now, I do those steps manually so that I can use Joomla platform components, along with other software, and comply with those standards. \nGlad to see this - it's a good way to share some great code with the broader PHP community.\n. @eirslett Don't get me wrong, I am happy to see this but I do believe it is best if this should is set up on the packagist.org website by someone acting in an official role for the project who then has control of the account. I understand that to be strongly encouraged by packagist, if not required. \nPart of the problem is, I don't believe there is any way to change the package name once it has started being distributed (so the Joomla project would not be able to use \"joomla-platform\" to handle this after your account first did so) and to the best of my knowledge - transfering ownership of a package is not possible. \nAgree to get it going, but the right way, which would be following the same approach used by any web service used by the project - that it be established by someone acting in an official role, much like how the github resource is managed, and for that matter, the Twitter and FB accounts, etc.\nThanks for getting this started! I know it sounds silly but best to do it right from the start than to lose options later. \n. Perfect. Thanks @eirslett. I think this means of distribution will prove to\nbe very useful.\nOn Tue, Aug 21, 2012 at 4:24 PM, eirslett notifications@github.com wrote:\n\nChanging ownership of a package is no problem! If Joomla has a packagist\naccount, I add that account as maintainer for the package and then remove\nmyself.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1481#issuecomment-7916839.\n. @dianaprajescu This does look great, much appreciated. \n\nA thought occurs to me as some of these new packages start to appear, it might be a good opportunity to start thinking about packages that are offered as JPlatform options. The same could be done with the github library. Eventually, as the subsystems are uncoupled, just about every subsystem could be packaged separately. \nIf we were to do so now with new packages, it could help create discussion/agreement as to what coupling is expected between packages, and, even think about how to package and distribute. \nEventually, it would help clarify the core JPlatform distribution, encourage more packages, and avoid bloating for those options that maybe aren't needed for everyone.\n. /me worried one of those \"baby steps\" lectures is next, but realizing @dongilbert is right, concedes the point. =)\n. @redcomponent Are there capabilities you are missing from Joomla's event system? Interested in understanding that, esp. from an ecommerce POV.\n@florianv - few questions.\nI think events are a particular challenge for uncoupling. What approaches would you advise to prevent a dependency on JEvent and yet still ensure an object is able to schedule events or register plugins? (Can dependency injection help here?)\nAlso, interested in hearing how do you see Interfaces as potentially helping. Do you see Interfaces as potential \"filters\" (like tags) that could be used in addition to registration for a specific event? And, in regards to the coupling, what impact does type hinting have on coupling?\nAlso (as long as I am here!) - if we are going to modify the Event system, should we add criteria to the dispatcher where an event could be scheduled \"until first failure\" or \"until first success?\" That would be very useful for stepping up the game of JEvent to help out as a workflow engine.\nYour examples are very helpful. Takes me time to think it all through, and my head is not completely around this yet, but do like the potential I am seeing.\nAlso, \n. Do you have any unit tests for that code? (Man, can he code quickly!)\n- It appears the above is your response to \" interested in hearing how do you see Interfaces as potentially helping\", and your answer is essentially that it is very wide open, people can use interfaces as they wish, even to the point of building a Dispatcher independent of JDispatcher but compatible with JEvent. \nSo, is that basically what you are saying?\n- Regarding this comment you made: \"An object that needs to notify listeners depends on the dispatcher.\"\nExactly, so, how can we better control which object is dependent and prevent JModel, for example, from dependence on JEvent -- but still get those Events scheduled?\nWould the use of closures/anonymous functions, for example, on a JModel method parameter where the callback was outside of the class -- be an alternative to directly naming JEventDispatcher in the code? \nAny ideas of that nature how to keep from coupling those together but still keep the capability?\n- What do you think of adding these capabilities to the JEvent?  \"until first failure\" or \"until first success?\" \n. What is unfortunate is that everyone missed @ianmacl 's message at the time. Looks like he saw this right away.\nBut, in all fairness, the application was better off after the patch. It fixed one of two problems. Removing the second undefined variable basically turned in one warning for another. Still, +1 in the overall count. ;-)\n. And, this is what I am worried about. Can this be automated somehow? \nWe've already had people complain because they have been requested to share their fix with the CMS after they shared it already with the platform. Given that means they have to post to three repositories in order to share one improvement with the same project, that does make the Joomla project look very dysfunctional. \nIf this can't be automated, then it would be best to turn it into a job for volunteers to comb through these improvements once a week and create the patches desired. But, please do not do this by posting in after contributors have shared their improvements and ask that they do so again (and again). \n. It's not just you. The project needs a process for handling this that does\nnot involve contributors doing this three times.\nI'll post on list.\nOn Sun, Mar 17, 2013 at 9:21 PM, Don Gilbert notifications@github.comwrote:\n\nDoes it need a tracker item for updating to latest platform version of the\nfile?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1751#issuecomment-15036391\n.\n. Posted https://groups.google.com/forum/#!topic/joomla-dev-cms/9NqpezPCg2k\n\nThanks.\nOn Sun, Mar 17, 2013 at 9:24 PM, Amy Stephen amystephen@gmail.com wrote:\n\nIt's not just you. The project needs a process for handling this that does\nnot involve contributors doing this three times.\nI'll post on list.\nOn Sun, Mar 17, 2013 at 9:21 PM, Don Gilbert notifications@github.comwrote:\n\nDoes it need a tracker item for updating to latest platform version of\nthe file?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1751#issuecomment-15036391\n.\n. I agree, statics are evil. But, I think you are throwing out the baby with the bath water here. \n\n\nWhat is amusing as I watch this discussion is knowing there are OO puritans who believe an approach of using a front controller, which instantiates system objects and then injects child objects with these values, is no better than using singletons, globals or statics. Makes you wonder, is there really \"a way?\" And if there is, why aren't more people blogging about it instead of what they think is wrong?\nThere will always be data and functionality with global scope. Session handling, database access, application configuration, user object, and so on. These objects are - by their very nature -- globals. (gasp at the word.)\nIn an application development framework, like JPlatform, a developer expects a way to configure data and functionality as having a system-wide scope - and expects there is an API available that can be used to access that data and use that functionality throughout the application. \nJFactory performs that function for the Joomla framework. It is a very easy tool for even novice developers to use so that they can determine if SEF is activated, add a CSS lnk to the list that must be loaded in the head, or determine if a registered user is logged on, and so on. If anything, I would like to see JFactory (or it's replacement) be customizable so that developers can define new data and new functionality for global use.\nAlso, I'm not so sure I agree with some of the conclusions above. For example, why is the Application class relegated to a singleton status in Joomla? I disagree that it is because JFactory uses statics. It's because the index.php file instantiates JFactory, and it instantiates JApplication using a static and calls to JApplication are then resolved by and routed through JFactory. That's where the limit occurs.\nNow shift the sequence. Have the index.php instantiate JApplication, and have JApplication use a static (gasp) to instantiates JFactory and now, you can create Application objects until the cows come home. JFactory can continue to instantiate those objects with Application-wide scope (without using statics), and the benefit to easy access to application-wide data and features for developers remains. \nI'd have to understand more about why it's \"better design\" to force the Application class to instantiate system wide objects and then inject each of it's child objects with the complete list (and those objects have to do the same, and so on). Such an approach is certainly not DRY. It also forces objects to be instantiated in anticipation of use -- if they are shared -- instead of adopting more of a lazy load approach. More importantly, though, in trying to \"avoid doing it wrong\", capability is simply not provided which starts to diminish the value a developer gets from using even using JPlatform. \nIf they have to code it all themselves, why not recommend PHP and a good book on OOP? Or, maybe we are conceding that Rasmus Lerdorf is right. Frameworks are not helpful, they are limiting. http://toys.lerdorf.com/archives/38-The-no-framework-PHP-MVC-framework.html\nA good application development framework is going to be opinionated, a great framework will be very opinionated, no framework will stand up to academic debate. Much more important to set clear goals on the purpose of JPlatform, to think very specifically on why developers should choose it over PHP alone, and then measure what you are doing against that standard, keeping in mind development principles, but not limiting yourselves to correctness.\nThere are many things that were implemented incorrectly in 1.5 and those decisions have created in some places very severe limitations. But, the other side of that is the architecture actually has all the right big concepts to become a very powerful development tool. There is a lot of good thinking to work with in there. \n. And @mbabker that's the rub. If one were to create a new instance of the Application, then they would not be able to reference any of the properties or functionality in the existing instance. \nThe Application Class really is a Front Controller. http://www.martinfowler.com/eaaCatalog/frontController.html \nIt manages all application-wide properties and functionality.\nIf you instantiate JFactory inside of JApplication and you store the JFactory instance as a static in JApplication, then you can use that static as an entry point to access objects instantiated in JFactory.\nKind of a hack ?, I'll grant that, I suppose, but, a very handy one, IMO.\nA must read article by Martin Fowler on Dependency Injection. The \"Using a Service Locator\" section and \"Service Locator vs Dependency Injection\" are very good.\nhttp://www.martinfowler.com/articles/injection.html\nRelated code I shared a couple of weeks ago: https://gist.github.com/4189804\nThere's always a tradeoff.\n. I think this is the point that someone comes in and says \"This is an Application issue.\" \nAnd, I'd almost agree with that -- except first, I wonder if it is it worth considering that JApplication is acting as both a Front Controller and an Application Class? And if it is, does it make sense to split that cleanly so that each is focused on their function and data? \nThen, would it be helpful for applications using JPlatform to have a class like JFactory that is instantiated within the Front Controller that could be used to define global sharing of objects? Having that option would not preclude injection so it would at least provide a choice to developers without issuing a judgement.\nAnother factor that fits into this is JRegistry which is also \"suspect\" as it serves as global memory space when coupled with JFactory. What is the intended future for this class and practice?\nI know from phrases and half sentences I've read on list or in the issue queues that the platform team is aware of the issues around statics, it's also apparent there is a desire to move away from this practice, but it really would be good to hear what the larger strategy is for access to application-wide data and functionality within JPlatform. \nBad day to ask for that, given recent resignations.\n. @HermanPeeren \nFirst, only one static is called for in my suggestion and that is a static defined within the frontcontroller (Application class) for the JFactory (replacement) instance. It's only purpose is to create a nice entry point back into the Frontcontroller/JFactory instance. \nI'm maybe not seeing how the Anti-pattern article fits here. \nThe point I see raised is that the dependency to the Service Class is not clear -- the IDE will not provide a hint that an instance is required to a necessary class, for example to the Database class or the Messages class. What the author points out is that the lack of hint will cause developers to  merrily go forward using the resource without first creating an instance to the database or messages class and therefore encounter runtime errors. Am I understanding that correctly?\nIf so, that's not a problem that is relevant here. There is no instance required in the developer's code to get an instance to the database or message class. The Application's instance of JFactory will hand off the request to a process that will create that instance for the developer and return it for their use. So, no runtime error will result. \nBut, maybe I missed something? If so, it would help if you explained a bit more how you see this as fitting.\nRelated to better communicating breaking changes, though, there's another benefit to a Services Layer approach. If the API is offered within a controlled layer, and direct access to core classes is discouraged, you begin to have a lot more flexibility with changing things without impacting your developer community. In many ways the API doesn't really change - read a file, run a query, get an extension, render this output, and so forth, are stable functions over time. It's how you do it is that evolves. Those kinds of changes can be masked if there is a layer for the API that is separated from the core code.\n. @mbabker If there is interest in putting an optional services layer together, in addition to using dependency injection, I'm willing to help with that and have some starting code we could use. Just let me know.\n. I agree with @HermanPeeren - there is no limit imposed here and @mbabker should move forward.\nHerman - you really are missing the point. Interestingly, the Symfony2 response to Anthony's post appears to be trying to make the same distinction. Maybe it's just something you gotta play with to see, but suffice it to say you can use DI to create and share \"globals\" and you can create a service layer that only returns new objects. \n. Would it be possible to release security advisories? \nI agree that those using the platform should manage their code base and release cycles. It's also true that keeping up isn't always possible since the platform isn't following Semantic Versioning and not all applications will be able to pop-in a new release. It's a fair point that security and/or serious bugs are a gap in this strategy. \nThinking out loud, the platform team really is aware of applications with large deployment and therefore special care could be taken to ensure those projects have lead time to manage their release cycles. But, following a reasonable period of time after notifying those projects, publicly sharing these fixes in some manner, be it an email to those registered or something as simple as using a tag on the issues queue, could fill that gap. \nKnowing is always going to be better than not knowing and after a certain period time, it simply isn't a disclosure anymore. To me, such a step would be sufficient. No reason to complicate the platform versioning approach. \n. @eddiejau Right, but what JSST shares is not sufficient for patching a code base. I assumed the JSST provided services to both the CMS and the Platform. Is that not so? \n@mbabker Your proposal for 12.3.1 is ideal from an application user standpoint. If releases are to be used to share security fixes, that's the only to go since the platform isn't using a Semantic Numbering approach and change could make the next release unfeasible. So, definitely like your suggestion. \nBut, the problem is how long does each release stay valid? Two years? Three? Considering there could be four releases every year, it starts to get a little unmanageable. (To me, even one year is a lot and that short of period of time probably wouldn't help many applications.)\n. @eddieajau Understood. My last paragraph was also in response to @mbabker re: his proposed x.xx.N strategy \n. Full support. Already, very encouraged by comments on Twitter, not only from Joomla devs who will certainly welcome this, but maybe even more importantly from some of the hard-core PHP devs whose involvement would be awesome. \n. All  good points @eddieajau - as an aside, it's a lot easier to complain about DS because it's easier to understand. Given your observation, I think this effort might just get ignored. ;-)\nDon and I were just talking about how one approach to implementing NS can result in flexible overrides using DI, or dependency chains that are very hard to override.  https://gist.github.com/4458255/ The approach does indeed make a difference - glad you raised that point.\nThe other issue to work out is a decision on whether or not (or how) a services container might fit in as it can provide some relief with NSing. Andrew - Do you think it's the right time to decide on this? In conjunction with the NSing? Or, do you think it's better to wait on that? Dealing with JFactory in some way will be impossible to ignore.\n- Good current discussion on such an object in Symfony2 - https://t.co/nrOsNkzg\n- @dongilbert shared Laravel 4 video on their Service Locator pattern http://vimeo.com/53009943\nThis effort will drive a lot of good direction, really glad to see you guys have been working on this.\nI'll ping @dukeofgaming this weekend, see if he's around.\n. @eddieajau Good resource is from Fowler \nhttp://martinfowler.com/articles/injection.html#ServiceLocatorVsDependencyInjection\nMainly a question of what you want to do with JFactory, thinking there is plenty already to do, as it is.\n. I'm not so sure that's true. The idea is that a common class loader be usable for work from various authors/projects. \nIt might even be worthwhile to use the Classloader that comes with composer (if you don't include your own). That's going to be the best way to verify compliance. \nhttps://github.com/composer/composer/blob/master/src/Composer/Autoload/ClassLoader.php\n. Agree with the goal aspect of Don's response. Unfortunately, I don't see ambiguity in the rule. The PSR-0 also states \"You can test that you are following these standards by utilizing this sample SplClassLoader implementation which is able to load PHP 5.3 classes.\" Following that statement is an Autoload function with code. \nSo, bottom line is, if that code loads our classes, given our NS strategy, we're in compliance. If it doesn't, we're not. I really do think it's as simple as that.\nhttps://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md\nWe might consider adding unit testing that brings in the shared class loader, if JLoader is maintained. I wonder if it makes sense for the platform to simply use the class loader from Composer? If JLoader is needed for the CMS during the deprecation period, would it be better to move it into the CMS branch? An idea, anyway.\n. @eddieajau - I can't see an issue with Joomla's compliance. I only know of one class - and that's the numeric class name in the Crypt package. Other than that, I am not seeing any challenge to compliance. Sorry to be so dense but I am not seeing the problem. What problems are you seeing?\n. It really is a little frustrating that there are some many PSR-0 class loaders that are pointed too as the \"official\" standard enforcer. @eddieajau - the one you are pointing to was a very early copy and it doesn't appear to have been updated in a long time. Maybe that's the code problem you are referring too? (I hope)\nThe one I believe we should be most focused on is the one provided with Composer. \nhttps://github.com/composer/composer/blob/master/src/Composer/Autoload/ClassLoader.php\nAgain, sorry to repeat, but if there are compliance issues for Joomla, let's identify very clearly why we cannot comply. If it's only a matter of providing time to deprecate old names, that is not a compliance problem. The CMS will have to have a different autoloader for a period of time. That would be expected.\nBut, if there is something we can't do and there is a valid reason for us doing it a certain way (meaning, not just a preference, needs to be a valid reason) then we should fork the class loader, adapt it, so it works for everyone else and for us, and have Andrew, as a voting member of the PSR group, present our case and request adaptations needed.\nBut, again, I just don't understand yet what the problem is. What @dongilbert has presented is in compliance, if I understand things, and if it's not, I would appreciate an explanation. I am just not getting seeing the problem.\n. Good. \n. @eddieajau This has been confusing to me, as well, I've used a lot of Don's time trying to follow. I am concerned you might still have a slightly different understanding when you say this:\n\"The style rules will be that we must manually namespace every class to generate the effect of the camel case being a folder/file break.\"\nI guess I'm not clear on what you mean by that. In reality, every class is namespaced, but how you feed the class loader is by registering a namespace and associating it with a folder location. Then, those registered namespaces are used to search for classes. \nI believe Don's plan is to register the namespace for each package. In my Autoload, I would have statements like the following for each package I want to use from JPlatform:\nrequire_once VENDOR . '/symfony/Component/ClassLoader/UniversalClassLoader.php';\nuse symfony\\Component\\ClassLoader\\UniversalClassLoader;\n$s = new UniversalClassLoader();\n$s->registerNamespace('JPlatform\\Crypt', BASE_FOLDER . '/Vendor');\n$s->registerNamespace('JPlatform\\Database', BASE_FOLDER . '/Vendor');\n$s->registerNamespace('JPlatform\\Log', BASE_FOLDER . '/Vendor');\nand so on.\nFor the log package, only one namespace would be registered with the class loader. \nTaking the entry class as an example: \n1. it would have a single namespace line at the top of the file for the namespace that represents the folder containing the file. It might be a registered namespace, but if the files are in a subfolder for the package, it will be the registered namespace + the name of the subfolder(s). That is true for each and every file -- it must have a namespace line -- that must be the first (non-comment) line - and that just PHP.\nNow, this next point I was confused on and I am thinking you might be, as well. \n1. The class name defined within the file will change. Instead of having a class named JLogEntry -- which translates to joomla\\log\\entry, the class will be named Entry. And that's good, because the file is named entry.php. (Although we might need to uppercase the first letter of those filenames.)\nSo, the top of the JLogEntry file will look like this:\nnamespace JPlatform\\log;\nclass Log\n{\netc.\nIf I wanted to use this class in another class, I would instantiate it as:\n$class = 'JPlatform\\log\\Log'; \n$instance = new $class();\nor I could define a use statement on the top of the page (don't recommend doing it this way as overrides become difficult):\nnamespace in\\my\\class\\folder;\nuse Jplatform\\log\\Log;\nThen within a method:\n$instance = new Log();\nIs that your understanding, too? Or, are you thinking the old JLogEntry class name will continue to be used for the class definition? (because that is not the plan - and it was a point of confusion for me until Friday.)\n. Given all the great work that has been started on this project, it became apparent there might be benefit to further defining the approach to namespacing so that the top of the page can be used at a glance to identify the requirements for the class (outside of the current namespace) and so that the code, itself, is not cluttered with namespace data. Don and I talked about this and agreed on some guidelines. Here's a link to a gist that helps clarify those guidelines.\nhttps://gist.github.com/4520559\n. I don't believe I can fork this RFC, can I? At least, I can't see how. Might have to have @dongilbert update the examples after downloading the gist. \nAs far as the Coding standards, I agree. @eddieajau Do you want that done now? Or, should we wait until we have the project somewhat complete, and have hopefully encountered all the various issues that might impact the standard? Either way, glad to help do that.  \n. Makes sense. @dongilbert if you want to include those gists as updates to the standard (I do believe they are likely more relevant than the early examples), you can download the gists and copy them into your RFC. If I can be of assistance with any of the writing, let me know. I don't believe I can fork it, or change it unless we use a different approach. I think Don can, tho.\n. @florianv When you get a chance, will you please review https://gist.github.com/4520559 and make modifications needed for the classes you had worked on? There is also a response I left on your PR that talked about issues that will need to be fixed. Ping me or Don if you have questions. \nThanks for your work guys!\n. What a huge job you took on @dongilbert  Much appreciated.\n. :( \nWell, at least the pay is good! \n. Well, I guess those aren't a big surprise, huh? ;-) If you can hold off until this evening, and if Florian hasn't looked at the examples and my earlier feedback so that he can redo his classes, I'll help get those fixed.\n. You are single-handedly taking care of things these days. \nThanks very much @dongilbert \n. Don - do you see any value in creating a collection of \"reserved\" aliases? https://github.com/laravel/framework/issues/95\n. Along those lines, what would help would be to explain why this approach is better than the existing approach. Does it offer more flexibility in terms of what JS frameworks can be used? How does it (does it?) better separate the presentation layer? Is it more extensible? and so, on. \nAlso, unit testing. \nI think one of the problems with getting good patches, and flat-out features, as is the case here, considered and into core is that nothing accompanies the code. The more the developer is able to quantify the benefits and clarify why we can't live without, the better your chances. \nI believe the presentation layer is far too embedded into Joomla core, it seems many agree on that point. So, this is an area where ideas and code might be welcome. But, you'll have to make your case and it's entirely possible other ideas will come out and a working group could form where those interested, code in hand, help build the next generation.\nLastly, kudos for putting this up. Tweeted it an hour after it was shared. It's an area of need and a generous offering. Thanks!\n. Anyway to address it more on a application-wide level, perhaps in the framework file?\nhttps://github.com/joomla/joomla-cms/blob/master/includes/framework.php#L38\n(there are also include folders and framework files for the administrator and installer)\n. I don't know, Andrew. I don't know that there would be an impact of concern, but I agree that it's worth looking at the various logic paths to see for certain if there is an impact. \n@florianv Are you able to draw up a logic matrix with possible options for:\n1) JLog setting - limited to a) reports the deprecation error and b) currently does not report the deprecation error, \n2) CMS Configuration setting for error reporting level again - a) display on for this PHP level option or off;\n3) PHP Custom Error Handler (no handler defined, one defined that handles this level, one defined but it ignores this level, one defined that handles E_USER_DEPRECATED and passes those on to JLog). \nOf those Andrew mentioned, I don't think there is a difference since the CMS already has that Custom Error code @florianv is proposing (I think @realityking put it in during the JError/JException project.) and the CMS Error Handler uses JLog. So, it should behave as before. \nNow, I agree, that there could be unintended results. But, after playing with this, I think it would be limited to those who: 1) use JPlatform 2) outside of the CMS 3) have full error reporting on 4) have stupidly defined their custom error handler to automatically throw an exception for an E_ALL reporting level. (And, because of this thread, I've now fixed that bug. :-P )\nIMO, it's still worth pursuing to see if the dependency can be lifted, but it would be good to take a careful look at the various possibilities to build better assurance of what could happen.\n. Awesome guys. OK, maybe we don't need three interfaces for the platform to the same package. \n@realityking  - looks like you have taken care of things. Would it make sense for us to test out your work and issue PR's (if needed) on your fork? \nAssuming that's acceptable, I'll update the discussion on list about moving forward with the JLog interface that Rouven has this covered and where those interested can participate. \n. Actually, I think he's waiting on feedback. I know he's put a great of time into setting up the application. He walked me through it a week, or so, ago. Following that, I saw he had posted on list but I don't believe there was a response. I asked if he'd be your right-hand man on this and stay with it, he assured me that was the plan.\n. I had to build my own Theme/Rendering/MVC environment since the JPlatform classes are directly tied to components, modules, templates, and so on. JDocument is all about the CMS.\nJPlatform will need a replacement, or at least an interface to Mustache or Twig.\n. +1 You just said what I said. @eddieajau \n. Very nice of you @dongilbert - @ced1870 - it gets easier each time. Thanks for your patch!\n. I think a little more info might be helpful.\nYes, since 1.5, Joomla has saved the checked_out_time field with null date (along with other date fields). Obviously, data has been updated in many tables using JTable since that time without any problem. \nI can see you are getting an error, but how? What application are you using? How can we reproduce the error to see what might be happening? \n. Have been digging around, trying to figure out where that setting is in MySQLBench. I used to have that problem working but it's been a long time. \nhttp://dev.mysql.com/doc/refman/5.1/en/connector-j-reference-configuration-properties.html\n@malkowitch are you using a MySQLi driver? If not, try that (unless you know where to change your connection string.)\n. JUser is specifically designed to provide data on the user currently logged in. \n. I am so sorry, I am wrong on that. JFactory creates a static instance of the class, but it has an array of ID values. So, it certainly can be used for more than the current user.\n// Check if the user ID is already cached.\n    if (empty(self::$instances[$id]))\n    {\n        $user = new JUser($id);\n        self::$instances[$id] = $user;\n    }\nAs far as how it's used in the CMS, not at all sure since obviously I didn't know this was possible. Thanks for the link, sorry for the confusion.\n. I don't know. It sounds like maybe JUser was changed for purposes of the CLI. I have no idea if example 2 is for every application. I can't imagine why, for example, a guest would need to look up IDs.\nI would be hesitant to change the behavior of the guest zero ID in JFactory without a platform maintainer's involvement. It's all tied together with the user, session, authentication, etc.\nHopefully, @ianmacl or @eddieajau will weigh in.\nThanks for your work!\n. That's absolutely what's happening. He's now returning an object for a new user but I don't think that's what is needed.\n. It looks good to me, @elinw - saw it when you first posted it, it would be handy, IMO. \nIf you are aggregating and trending, it's essential. \n. A while back Fotis provided a patch http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=20256 \nIs that still working?\n. +1 @piotr-cz on using filter_var. \nThere are flags for both IPv4 and 6, too http://www.php.net/manual/en/filter.filters.validate.php\n. Clever, nice and simple. =)  Works good, had to try it out. \n. That is a spectacular patch.\n. I saved them -- was going to look at them when I get a few minutes this week: The first one you can see is wrong. The next three I needed to look up - but they could very well be correct, too. (For example, the escaped failure -- was wondering if maybe PHP tests unescaped, not sure.).\nEmail addresses are not easy and I trust PHP to do this better than our collective best guess. Frankly, if we find PHP's edits to be wrong, we should bring a patch to them. I hope we go back to @fitorec's PHP filter patch.\nThe previous errors: \n```\nJMailHelperTest::testIsEmailAddress with data set #1 ('joe@home', true)\nFailed asserting that false matches expected true.\n.../tests/suites/unit/joomla/mail/JMailHelperTest.php:298\nJMailHelperTest::testIsEmailAddress with data set #14 ('~joe@bob.com', false)\nFailed asserting that true matches expected false.\n.../tests/suites/unit/joomla/mail/JMailHelperTest.php:298\nJMailHelperTest::testIsEmailAddress with data set #15 ('joe$@bob.com', false)\nFailed asserting that true matches expected false.\n.../tests/suites/unit/joomla/mail/JMailHelperTest.php:298\nJMailHelperTest::testIsEmailAddress with data set #17 ('o\\'reilly@there.com', false)\nFailed asserting that true matches expected false.\n.../tests/suites/unit/joomla/mail/JMailHelperTest.php:298\n```\n. An organization, to me, would be like a business that needs to ensure their domain is used for the email address, or something like that. I can't imagine why Joomla and PHP would not follow the same standards.\nRegardless, the real question is - are those four errors really errors? The first one is clearly not an email address, and the PHP edit threw it out. I think PHP is right, don't you? \nI'm not sure about the other three. But, if those are valid email addresses, who are we to argue? But, if they are incorrect, it would be better to submit as issues to PHP, add an edit following the PHP edit, and then link to the issue report so we can remove the edit when it makes it into the minimum PHP version supported.\n. To the best of my knowledge, the (W3C datatype for email)[http://www.w3.org/TR/html-markup/datatypes.html#form.data.emailaddress] has not changed:\ne-mail address\nAny string that matches the following ABNF production:\n1*( atext / \".\" ) \"@\" ldh-str 1*( \".\" ldh-str )\n...where atext is as defined in RFC 5322, and ldh-str is as defined in RFC 1034.\nWhat standard are you referring to? Wondering if perhaps you are talking about the WeC HTML 5.1 email state? For email user agents, it is acceptable to enter alias values that then look up the email address. If so, that's a different data element and would require a new field and edit.\nBut even in that standard, it states the value itself must conform too - and it links to the standard above.\nIt would help to have links to the standards you are referring to for review.\nThanks.\n. @elinw \nTonight, I looked at a number of other PHP filters, across the board, I'm seeing FILTER_VALIDATE_EMAIL used. \nI do believe it is appropriate to use. But, if there is reason to believe otherwise, my suggestion is to create an issue report for PHP so that the problem gets fixed. Then, if needed, we can add an edit following the PHP edit, linking to the issue report with PHP. That will allow us to rely on PHP core, as much as possible, document the problem so everyone understands why we are deviating from PHP, and then remove it, once our minimum PHP level is met for the fix. That's what we ask of our users and we should probably do the same for those projects whose software we use. \nDo you agree with that approach?\nDrupal 8\nphp\n/**\n * Verifies the syntax of the given e-mail address.\n *\n * See @link http://tools.ietf.org/html/rfc5321 RFC 5321 @endlink for details.\n *\n * @param $mail\n *   A string containing an e-mail address.\n *\n * @return\n *   TRUE if the address is in a valid format.\n */\nfunction valid_email_address($mail) {\n  return (bool)filter_var($mail, FILTER_VALIDATE_EMAIL);\n}\nWordpress \nThey have a preg filter for those sites with less than PHP 5.2\nphp\n  /**\n   * Check that a string looks roughly like an email address should\n   * Static so it can be used without instantiation\n   * Tries to use PHP built-in validator in the filter extension (from PHP 5.2), falls back to a reasonably competent regex validator\n   * Conforms approximately to RFC2822\n   * @link http://www.hexillion.com/samples/#Regex Original pattern found here\n   * @param string $address The email address to check\n   * @return boolean\n   * @static\n   * @access public\n   */\n  public static function ValidateAddress($address) {\n    if (function_exists('filter_var')) { //Introduced in PHP 5.2\n      if(filter_var($address, FILTER_VALIDATE_EMAIL) === FALSE) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return preg_match('/^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9_](?:[a-zA-Z0-9_\\-](?!\\.)){0,61}[a-zA-Z0-9_-]?\\.)+[a-zA-Z0-9_](?:[a-zA-Z0-9_\\-](?!$)){0,61}[a-zA-Z0-9_]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/', $address);\n    }\n  }\nA few others, the first is Anthony, the second is Respect Validation, a very popular library, the third is from a respected PHP dev\nhttps://github.com/ircmaxell/filterus/blob/master/lib/Filterus/Filters/Email.php\nhttps://github.com/Respect/Validation/blob/develop/library/Respect/Validation/Rules/Email.php\nhttps://github.com/vlucas/valitron/blob/master/src/Valitron/Validator.php#L256\n. I did a search on \"don't use FILTER_VALIDATE_EMAIL \" and came across discussions on problem validations. \nThe name@localhost is one of those. I'm guessing (?) the example one is the same type of thing? \nIn a localhost situation, an IP address resolves for localhost, so the email server can handle it. I have not found a standard that identifies it as \"valid\" email address but it will function properly on a computer since it resolves to an IP address. \nAccording to RFC2821 and RFC2822, 7 bit ASCII characters are allowed in Internet mail addresses.  That explains why the following addresses validate as TRUE with PHP's edit. I believe Joomla's edits are incorrect\n'~joe@bob.com'\n'joe$@bob.com\n'o\\'reilly@there.com'\nWe need to see what @elinw has in terms of a standard on the @example email addresses. But otherwise, I believe this is better than what Joomla has now.\n@piotr-cz How would we possibly provide a test for situations where the standards don't apply? What rules would we use? In those cases, people can override the function. I think that is all that can be done. But, maybe I didn't understand?\n. @fitorec @piotr-cz @dongilbert @mbabker @elinw \nDifferences of opinion can sometimes result in wasted time and I want to avoid that with this path. \nOur code of conduct states \"The important goal is not to avoid disagreements or differing views but to resolve them constructively.\" I'd really like to see us pull together on this patch and get an agreement, based on standards, for this patch.\nTowards that end, I provided links and excerpts of standards, I reviewed the source from five other applications, providing code examples or links to code examples that supported my position.\nI recommend using the PHP edit patch. \nFurther, I recommend a practice of reporting problems found to PHP and linking to that issue report in the code. That way, we can anticipate removing the extra filter code when the the earliest version we support is current.\nSeems like this has maybe stalled. I don't know what to do. The code of conduct says \"When you are unsure, ask for help.\" So, I am asking for help.  What is needed to get this in core? What do you want of me? Etc.\n. @elinw probably not, the paths are so mixed in, I wasn't able to use it.\n. Nope. Makes sense to me.\n. @elinw - this is a method that always returns 0, isn't executed anywhere in the CMS or the platform, and has been that way for over two years. Not only is this a \"valid rationale for making an API change\", it's a valid reason to search down and find any developer who complains that it fixed. I want talk to them and fully understand their concern. =)\n. @Paladin Agree on both points about it not being an API change or a backward compatibility issue.\n@eddieajau That's not to say you shouldn't tag it, warn people. \nNot suggesting @elinw shouldn't warn against the impact of change, either. \nThis issue gives me a little hope, actually. There has been so much drama about change, sometimes it has felt like there is no way to get a handle on things. Maybe just getting back to those industry basics, seeing the API as it is, a description of how the code should behave, using the API when coding, and so forth. Knowing, as devs, that if the code doesn't behave like the API states, it's on us to report it, etc., maybe, we might stand a chance of reducing angst. To me, that builds a little hope. =)\n. No one said you didn't tag it. There is no fuss. There was a discussion of\nterms. Yes, moved on.\nOn Fri, Mar 8, 2013 at 8:02 PM, Andrew Eddie notifications@github.comwrote:\n\nI did tag it. I have no idea what all this fuss is about. Can we please\nmove on.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1844#issuecomment-14656016\n.\n. Hm. Looks like I accidentally removed the RuntimeException.\n. Andrew - \n\nThis makes me wonder. Really, this type of fix probably should have gone with the \"throw error\" work. As I search the core code fro $db->getErrorNum, some are associated with JError Exception/Warning and other times, not.\nAs an example, JFactory has the $db->getErrorNum IF statement in the createDbo method, but there is no JError::Warning statement at that location. If $db->getErrorNum() has no bearing due to the throw error inside the database class, what should be happening at that location instead? Is it possible that since there is no catch processing, this might explain why Joomla gets that looping when the database connection doesn't succeed? It is also appears in ModelList, Database, etc., without the JError.\nI can certainly remove it but -- stepping back, I wonder if there is a bigger issue here? How and where should catch processing take place? It might make sense to some recommendations/standards in place and then to walk through the code and make certain error handling consistently treated. Right now, I suspect you would really like catch processing where these JError statements were. If we remove them, then we also lose that marker.\nShould we get this PR in, and then follow with a catch processing PR? \n. Definitely. That was a mistake I made. Just waiting to see if Louis is already working on this.\nThanks Rob.\n. OK, what I removed was the JError side, which is okay.\nWhat remains still has a RuntimeException:\nif (!is_object($this->connection))\n{\n    JLog::add(JText::sprintf('JLIB_DATABASE_QUERY_FAILED', $this->errorNum, $this->errorMsg), JLog::ERROR, 'database');\n    throw new RuntimeException($this->errorMsg, $this->errorNum);\n}\n@robschley are you saying that log entry should be removed?\n. @eddiejau - \nThe execute method only appears in three of the drivers (mysql, pdo, and sqlsrv.) I changed two (pdo and sqlsrv) removing the JError side of the logic -- and now it matches the MySQL method. (which has both the log and the throw error, as I posted above for Rob.)\nAll other drivers extend one of these three and therefore have the same code in the execute method they use.\nUnless I am missing something, I think this is consistent for every driver (after this PR).\n. @eddieajau - Happily - except, I am afraid I don't know what you mean by \"turning warnings and notices?\" Sorry about that - but if you can explain it for me, I'll certainly try. :) \n(+ your nick is hard to type. Why not use AndrewEddie or bring back Masterchief? Do we get to vote on this? ;- ) )\n. Gotcha! Yup, that's not good. Will try to get those lines out of the commit a little later today, Andrew. \n. I tried to get rid of those, but admittedly I was in autopilot mode, just copying messages there.\n@eddieajau - thanks for doing this. Getting closer to getting codesniffing and testing in place. With phpStorm v 4, we can use codesniffing in the IDE. That'll be very helpful. I have the beta installed but have not got the Joomla standards in place yet. https://plus.google.com/109030869001230031837/posts/A2BeQNsXheR\n. Totally forgot docblocks, thanks.\n. Wondered about that. Good.\n. Well, the other thing is, I really don't think this logic can ever be reached given how the object class is identified as a property of the method call parameter.\nI'll go ahead and remove it based on your point.\n. Probably just thought it was missing. Will remove that - thanks for clarifying.\n. Thanks.\n. Excellent.\n. Check.\n. Good point, Rouven.\n. Definitely agree, UnexpectedValueException is a better fit. \n. I also changed the exception - will change that back.\n. You are right, it needs to go.\n. Nope. They will never be executed. Good catch.\n. Thanks @elkuku :)\n. I'll change it back but that's message is too technical IMO for the reality of the problem. \n. Nope. Not in there. Removed Docblock line.\n. If it's an empty query, it'll be returned and get the empty instance logic.  (I think it's consistent with other usages where we have simply been removing these.)\n. Put geeky-tech-what-the-heck-does-that-mean? message back.\n. Not sure, that's something that should be discussed though. Everywhere that these $db->getError msg/num values are - an Exception has already been thrown in the database. I assume the thinking is that the originating process will trap for exceptions. \nI'll add a post on list - I think this needs some discussion.\n. Yup. You are right. Will change that.\n. Of course, thank you for seeing this. My apologies.\n. @eddieajau - \nThat brings up a question I have. JError is deprecated 12.1 \nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/legacy/error/error.php#L32\nDoesn't that mean (I am not certain) that we take out all JError code at that time?\n. @eddiejau - \nI didn't replace any of the JExceptions since those will end up changing the API (I believe). I put a question on list asking how you wanted to handle those. (The only change I made for the JExceptions was to simply replace the JText.)\nI'll change this to InvalidArgumentException, just wanted to make you aware of the bigger question I have. \n. Ok.\n. OK on both.\n. Missed this one. Fixing now.\n. Missed this one, too, fixing now.\n. Great, thanks @eddieajau \n. JFactory::getApplication()->input->getCmd('option') even.\n. RuntimeException? \n. I wonder about that since we've not done that elsewhere. Not saying it's not a good idea but it should be consistent and part of the standard. Having a few scattered throughout the source code in methods that do not actually throw the exception seems confusing.\n. That is likely (now that you mention it). It'd be nice to have an echo for both. Wonder if we could pass in a parameter for the create logger method for the break tag or the new line (defaulting to /n.)\n. How would we do that? \n. I'll add it back for the SysLog class - so glad you spotted this, @LouisLandry Sorry for not being more careful. \n. @LouisLandry Done - moved it back into the Syslog class https://github.com/AmyStephen/joomla-platform/commit/8eb5ad5b1b48ea29ae9a05f85ec3f58c962e86c0#diff-7\nI assume it's still okay to abstract out the others? (I did not change back the other two.)\n. Probably not a big deal, but I disagree, @realityking I think it's almost a defacto standard, at this point, that the image resizing process also create the subfolder, if that location does not exist.  \nIf the calling routine wants to create it first, nothing is stopping it, but causing an error when it doesn't exist seems like an unfriendly way to deal when a folder can simply be created and the application continue on it's merry way.\n. Agree on raising an exception if the parent folder doesn't already exist.\n. ",
    "mahagr": "I discussed about similar issue with Sam Moffatt.\nJoomla caching in general has an issue where content gets cached and there's no way to prevent caching from happening -- leading to similar situation: breaking functionality or showing wrong information to guests who should not see it.\nFor example Kunena has discuss plugin, which allows users to comment articles. It works without any major issues until user is a guest. If user is a guest, the first issue you run into is that there's no way to turn off view or module caching once the parent component or module has decided to do the caching. As all the content from plugins and modules get added into the main content from the component, also they will be static or cached. To make forms and any dynamic output to work for guests, there needs to be a simple way to turn off caching in current scope. Same method could be used inside component or module itself to decide that: \"no, this output shouldn't be cached even if i first thought it should be\". I often find myself being in helper function when I decide not to cache and thus needing some tricks to prevent caching. In my case this works as some pages cannot never be updated by guest and some can always be updated.\nSecond huge limitation is in System - Cache plugin (page cache). It should be possible to turn the page cache off for example when the page shows notification messages like: \"Your session has expired. Please log in again.\" If cache expires just before guest is shown a message like this, all guests will see that message for the next 5 to 30 minutes.  Also extensions like Kunena Discuss may want to disable page caching to make the the forms to work and to keep some content up to date. Or they may want to disable page caching (maybe limited time to allow cache to be updated) only from the current guest (flag in the session) to show updated content after user has submitted the form.\n. @klas: I missed your workshop in JAB11 and didn't have time to watch it just yet. I'll do it right now, thanks!\n. @klas: so you're the one behind Joomla 1.5/1.6 caching, that's good to know. \nThe issues I mentioned are not solvable in components or in the modules -- not easily at least. The basic issue is that you cannot prevent caching from happening if you are inside (content) plugin. I mean that there is no way to tell the view that there's dynamic content generated by module or by plugin.\nThere is also no way to turn off page cache -- JDispatcher needs object to detach plugin from the events and you can only access the System - Cache instance from the plugin itself. It only has two events: onAfterInitialise and onAfterRender. Easiest way to prevent it from caching would be to set a variable (which is then fetched by the plugin) or to add new event to the plugin to detach itself.\n. Great to know that deprecated functions will still work in Joomla 1.8 -- it will allow Kunena 1.6 to keep on working in it, as we are only moving to use the new API in Kunena 2.0.\nThis is really great news to all extension developers as it gives them possibility to re-factor their code in the next major version, thus giving more possibilities and wider version support (J1.5-J1.8).\nKudos!\n. You can pull changes to your own tree (or branch) and do the changes in there. When you're ready make pull requst to the author of the original pull (or if the author isn't available, do it against main tree).\n. @eddieajau: You can actually improve you process by making a pull request to Louis (for example) inside GitHub. I've done it few times and it has a few benefits over Skyping someone. :)\nFirst the owner will see that there's pull request to his branch (don't forget to @ mention his name). He can comment the pull request, you can answer to his questions and you can update the code if needed (improvements, conflicts). It's just like doing the same with the master repository -- really cool and useful if you want to create feature together with other people.\n. Actually this is feature (or issue) in bind() function itself, which prevents updating values that do not exist.\nIn PHP isset() returns false either if the value doesn't exist or is null. It's very useful for example when you may have optional input fields, which do not always come from GET or POST (are set but not defined). Changing this undocumented feature could potentially slightly break many extensions (and core) which rely on this feature.\nIf table needs some other behavior, I'd rather override the function with a version that works better for that table. Forcing bind() change to all tables may have catastrophic consequences on many extensions as it's breaking the current API.\n. @eddieajau: This code only works in PHP5.3+:\ndate_create('now')->diff($date);\nI have also similar function, but it also works in PHP 5.2 (and J!1.5) and extends JDate class, so you can use it without JHtml class. You can find it from here:\nhttps://github.com/Kunena/Kunena-2.0/blob/master/administrator/components/com_kunena/libraries/date.php\nFunctions are diff() and toTimeAgo()...\n@mbabker: Language strings do not prevent you from making unit tests. Just load default language and compare translated strings. At least that's what I do in my component.\n. The code I'm using came originally from php.net comment (as I say in the code), but it has been heavily modified. I'm not sure why it's not PHP5.3 compatible -- if I remember correctly I just converted my own class to extend JDate without modifying the variables..\nI agree, we should add diff() override for PHP5.2 and deal the rest in jHtml helper. \nBTW: My code shows up to 2 chunks, but only shows chunks that aren't 0 and ignores seconds. So you get:\n1 month 3 weeks ago\n1 month 2 days ago\n1 month 21 hours ago\n1 month 52 minutes ago\n1 month ago\nAnother related subject: I really like the way github deals with the same issue by using JavaScript. So if we are creating helper from this, why not give option also to use JavaScript?\n. Regarding to @WebMechanic comment on supporting \"last week\" and \"tomorrow\", I think that it would also be great addition when rendering absolute dates (we already handle today and yesterday in Kunena and it would be great to ditch our class and use JDate and JHtml helpers instead). But our current subject \"x time ago\" or \"x time to\" doesn't need to handle tomorrow or yesterday as there is no yesterday or tomorrow between relative times. Yesterday can be 1 hour ago or 23 hours ago depending your current time.\nAlso my code handles only past dates -- in a forum you don't usually have future dates. That said, it should be very easy to implement support for both past and future dates, as DateTime::diff() already supports it and in my class it's only one new variable that needs to be added.\nI'm also wondering what to do with short time periods: should we use \"just now\", \"few minutes ago\" or similar terms to make the fast changing times more fuzzy? There's no point of saying \"1 second ago\" as that time has already passed when the user sees the time.\n. FYI: There's already Mootools script that does what we want:\nhttp://mootools.net/forge/p/prettydate\n. I think that we need to have both php and javascript version of the same class. I'm currently using also php version, but there are some downsides with it.\nOne of the biggest downside is that you cannot easily cache a page with relative times, but you can do that if you only use absolute times + javascript. I'm having this issue in Kunena where I have a lot of static data in a page that takes some resources to render (mostly links into categories/topics and bbcode). Caching individual entries makes it a lot faster, but then I need to replace dates with placeholders and render them by using regexps. It works for normal users, but not if you're guest and more static (page/view level) caching is enabled.\n. The issue with html5  is that IE7/8 doesn't support it. But I agree that there needs to be a way to choose the granularity so that \"just now\" or \"about 15 minutes ago\" becomes something like \"less than hour ago\" to avoid the issues with caching.\nBut I would still prefer using dynamic time for example in a busy forum, because of that tells you right away how long ago you updated the page.\nThis is what I would do:\nLet's first fix the PHP version and only after that add a new option to show the relative dates inside javascript. Are we all OK with this?\n. But it has no word from translation capabilities.. :) But well, it's good to know that there's something official for this, too.\n. I've also hit this \"feature\" when trying to create dummy html file into empty directory. It works perfectly in J!1.5 but not in J!1.7, which makes the function not to be backwards compatible -- and there's no documentation that the API has changed.\n. Personally I like more compact coding style and everyone uses it in Kunena. To add readability we add empty lines where there's clear change of scope:\nif (this) {\ndo it;\ndo more;\n...\n} else {\ndo something else;\n}\nSo the same rule is used to all curly brackets, but if the code looses readability, we can always add some empty lines to separate things from each other. Also comments can be used for the same purpose (empty line before comment).\nSo you gain readability in both simple and complex constructs.\n. :+1:\nI've added autoloader to Kunena 2.0 a while ago and removing all kimport()'s. There was measurable and surprisingly large performance improvement and at the same time I got rid of a real annoying source of bugs -- people (including me) forgetting to import all the needed classes.\nI have one question, though: should every component have their own autoloader or should we make the autoloader to allow mappings like Kunena -> administrator/components/com_kunena/libraries (and using the same rules after that)?\nFYI: my autoloader can be found from here: https://github.com/Kunena/Kunena-2.0/blob/master/administrator/components/com_kunena/api.php\n. @ianmacl: I can fully agree on that, I just had a thought that we should somehow allow auto-loading also from other locations.\nHow about the class overrides (inside plugins etc)? Do we still use the old registration method in those?\n. For example having system plugin that calls:\n    JFactory::getUser()->getAuthorisedViewLevels(); \n    JFactory::getUser()->getAuthorisedGroups(); \nWILL break login from your site as it makes Joomla to think that the user has only guest access levels and user groups.\nIn the real life, this bug breaks login inside Kunena when CB integration has been enabled. The bug was introduced in here: http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=23336\nThere are also some other ways to fix this bug, like clearing cached values from the user object during JApplication::login() or creating a new object for registered user (later one may cause other troubles, though).\n. I'm not sure how patch from @krileon breaks backwards compatibility. It does the same as Joomla 1.7.2, but fixes ACL caching that broke the old behavior in 1.7.3.\n. Authentication loads the new user like this:\n/plugins/user/joomla/joomla.php:\n$instance = JUser::getInstance();\nif ($id = intval(JUserHelper::getUserId($user['username'])))  {\n    $instance->load($id);\n    return $instance;\n}\nI don't understand why the code is getting instance from the current user (usually id=0, but nothing prevents it from being existing user), as JUser object seems to contain no variables that will be kept from guest to the logged in user -- except these new protected variables (and isRoot), which will give user the wrong access levels and groups.\nSo to me the code should have: $instance = new JUser; which makes login to be effective only after current request. But...\nGetting instance will change JUser::getInstance() to contain the new logged in user, but on the other hand it also affects JUser::getInstance(0) inside the current request. If this behavior is needed (Joomla seems to store new values into session), it's much safer to clear cached values inside JUser::load().\nThe last option seems to be the best one: if we change JUser::load() to clear cached/calculated values, the effect is the same as in this pull request, but without extra layer of caching. It will not introduce any backward incompatible changes (from J1.7.2), as the result is the same as with no caching, which was the old behavior.\n. The issue has been present from Joomla 1.7.3 -- at least we haven't got any bug reports before Joomla 1.7.3 and Kunena 1.7.1 went out -- now there are a few. In Kunena the logic has been the same from Kunena 1.6.3, which was the first version that run on Joomla 1.6.\nWe have worked around the bug in the upcoming Kunena 1.7.2, but the issue is clear -- you cannot call these functions before you login:\nJFactory::getUser()->getAuthorisedViewLevels();\nJFactory::getUser()->getAuthorisedGroups(); \nas Joomla will clone the cached information to the new user. Also emergency root account flag gets copied, so I see that this is a potential security bug.\nSo which way to fix this bug? There are currently 3 proposals. @LouisLandry, @eddieajau?\n. Pull Request #1356 is separate issue to this pull request. This issue is just present only during authentication as cached values aren't cleared from the JUser object when user id changes.\nAnother pull request deals with issue where JFactory::getUser() doesn't return user at all. But both bugs seem to have introduced at the same time -- when the function was changed to allow better caching.\n. I'n this case it was a 'mistake' in a plugin that called a function which happened to call the JUser functions. But I still consider this to be a bug, as it is perfectly legal to call JUser::getAuthorisedViewLevels() in a plugin -- for example in advanced caching solution. \nAs several extensions handle login by themselves (including CB and Kunena) such caching solution has no way to know that user is getting logged in just after the event fires.\n. Commit #1474 doesn't fix this particular issue, but is related to this one.\nAll the issues come from reusing existing JUser object instead of creating a new one. Whenever someone adds a new feature (= caching) to JUser object they do not assume that object will remain the same before and after login -- or between two requests. So if you forget to clear the new protected variable during login, there is no guarantee that those variables have the correct values for the current user. \nMaybe JUser object should have a function called cleanCache() to make sure that all protected variables (and session) reset their values to the default?\n. As part of this issue, one use case I've trying to find out is how to use JRoute for the site from the backend. Or how to get site menu structure and find out the right Itemid in a logical and standard way.\n. I have to join the discussion (even if it took 2 days to write it). The new MVC implementation looks very cool and I would love to use it, rather sooner than later.\nThat said, I must agree with Nicholas, Herman and the others that backwards compatibility to the previous version (both CMS and Framework) must be kept at all cost. In this case the whole issue could be easily avoided by using different, but non-optimal naming.\nLike @gnomeonterun said, having two different implementations from the same class will never work in practice. This is because of Joomla loads more than just the component: there are plugins, modules, libraries, language and templates and any of those can depend on legacy classes. As a result you cannot have both legacy and new extensions in the same page as you will likely end up loading the wrong implementations of the classes. Components are also often using models from other components -- if nothing else, many of the public APIs are using models to do the real work. \nThis means that there will be a lot of dependencies, where you end up on upgrading every extension in your system in order to get your site back up and running. As there's no dependency management, migration to the next Joomla version will likely break up your site (if not right away, the first component upgrade can do that). Even if Joomla had the best possible dependency management, most Joomla sites would be forced to run deprecated software for a prolonged time, waiting for the new releases that will be compatible not only with the new Joomla, but with all the other extensions they have installed into their sites.\nI'm sorry to say this, but the names JController, JModel and JView are reserved words from the earlier versions of the framework and cannot be reused until they have been properly deprecated. Doing anything else will -- in my eyes -- be considered as being a critical bug.\nI also disagree that this is only a CMS bug. This is incompatibility in the Joomla Platform itself -- my current platform code cannot be made to work in both the current and the next version. As Nicholas says, applications are always at least one version back in their development compared to the framework (or CMS), and that is the best possible scenario.\nChanging a few class names with a global replace is not an issue for developers. It can be done in a few minutes, no big deal. But changes like this become easily very expensive for the companies which create sites for hundreds of customers with small maintenance budgets.\nI'm doing a contract work for a company, which is now in the process of migrating ~100 relatively small sites to Joomla! 2.5. Migration will cost them $50-80k and it will still take something like 4-6 months to get everything up and running on the new version -- and we started conversions 2 months before Joomla! 2.5 was released. Migration from J!1.0 to J!1.5 was easier, mostly because of they are now relaying more on the framework, mootools and highly customized templates. As the result they are not using any 3rd party components, Joomla! Framework or Mootools anymore (for the new sites) and now they are considering of moving to another CMS/platform, which is cheaper to maintain.\nIn short: \nI'm not that worried about the extension developers. I'm much more worried of the end users (individuals, small organizations and companies) who have tight budgets and limited resources.\n. I just saw the newest comments, so my last reply may look a bit \"old\". It looks like we could have a working solution:\n+1 @realityking That partly solves the deprecation issue in CMS -- it's the best solution so far if using new names for the classes is out of the question. I don't think that there are optimal solutions for this discussion, but that's something I could accept as being an extension developer. It would leave us clean naming conventions for the future, too. \n. @realityking \nIn my own autoloader we allow class to be in 2 different places: libraries/kunena/myclass.php or libraries/kunena/myclass/myclass.php. It's pretty easy to archive that in the autoloader without needing any special cases (it's one check more, though).\n@AmyStephen\nFor going forward question, I would prefer going forward, but during the transition Joomla should offer the old way for those extensions which haven't yet been updated. Preferably the old code should keep on working without making any changes (same code working on the current and the next version), because of it allows people to upgrade to the next Joomla version right away -- without needing to wait months for all the installed extensions to catch up. So while going forward is mandatory for project to stay alive, so is keeping the current users.\nIf upgrading Joomla means that you (as a site administrator) have to wait 6 months your favorite extensions to catch up or build your site from scratch every time, that's barely a solution. All my code has been running from Joomla 1.7 upwards, but I still cannot install Joomla! 2.5 into any of my sites because of issues in some other extensions I'm using.\nSo if I'm resisting the change, that's not because of as a developer I don't want to maintain my own code -- it's because of as a site administrator I'm relaying on other developers who haven't done the same. I could port the code by myself or replace those extensions, but I'd rather deal with it later when I have some extra time (hoping that there will be an update before that).\nI'm also not resisting the change itself. On contrary, I cannot wait to be able to use it. I have even considered of taking the new code into my own component and start using it in Joomla! 2.5. The only reason why I so strongly opposed the change was that it was replacing existing classes instead of creating a new API, which could then be used alongside with the old one.\nFor my part I'm very happy on the proposal that adds class aliases to Joomla! 2.5. I would be even happier if no changes to the existing code was needed, but in reality it would just postpone the issues with non-maintained code to the next Joomla! release.\nNow I'm going to take another look into the proposed code itself. :)\n. There's a related feature I've really would like to see in Joomla platform: reconnect/retry if database query fails because of the connection was cut by the server timeout. The most common reason is JInstaller extracting a large zip and trying to insert component without checking if the connection is still there.\n. I've never seen any module caching contents for registered users unless the developer has done the caching manually (which we had to do back in golden Joomla! 1.5 times -- and our code hasn't changed since).\n. I agree that the module should decide when to cache and how. You cannot compare static content with a module that updates every few seconds.\n. The issue with Joomla caching is that you are generally either caching the content for time x or you're not. If we want to add support for module caching, it needs to be done so that module can have more power on it.\nFor example module may want to update output only when something has changed (by making a simple query). That is useful for example if the module is displaying activity stream or forum posts. Module may also want to display different content based on viewlevels or it could be for that user only -- or the content could be identical to all users. I have also module that has small parts which are dynamic -- for example to mark if user has already visited the item. And the list goes on...\nSo very careful thinking is needed before adding caching for different users as there are many different requirements how the caching should be done. \n. +1 for the simplification -- except that there's really a need to clean up the whole cache. For example in Joomla! 1.5 there was no way to clean up APC cache, which in many cases meant that you had to disable caching and put it back on after few hours to make changes visible. Or you needed to log in the server and do it from command line. Fortunately it's possible in Joomla! 2.5. :)\nThere's also a need to free up disk space when using file cache, otherwise unused cache entries will slowly fill up the disk.\n. I find shorthands easier to read. Just be careful when using those inside for loops and inside functions as they may have different meaning than you expect.\n$i++ and $i-- first calls the function and only after that increases the value. If you want to increase value before calling the function, you must use ++$i or --$i instead. \nOh, almost forgot to say that $i+=1 works like ++$i...\n. No, I didn't see that one. I just meant it as general note your comment as:\n$i = 0;\necho $i++; // 0\necho ++$i; // 2\nAlone it works like you expect it to:\n$i = 0;\n$i++;\necho $i; // 1\n. Looks like the bug doesn't exist in Joomla! 1.5, but it does affect both J! 2.5 and Platform.\nSee also:\nhttps://github.com/Kunena/Kunena-2.0/issues/976\n. It solves the problem, yes.\nBut I do see a 'problem' with that change: doesn't user object contain some extra ACL information, even for guests? If there is anything that gets loaded from the DB or calculated during the request, your proposal would mean extra load to the server.\n. I can answer to my own question: I should have read the code before answering as I remembered it wrong.\nI'm afraid that empty() doesn't work because of then $id = 0 returns current user instead of creating new object.\n. My original change combined both if and else into one slightly more complicated if(), but it also required a small change in JUser::getInstance(null) handling as the code currently tries to find username.\nHere is the proposal for JFactory::getUser():\nif (!($instance instanceof JUser) || (!is_null($id) && $instance->id != $id))\n{\n    $instance = JUser::getInstance($id);\n}\nIt's slightly harder to understand and as I said, it requires a change to JUser as well. On the other hand current handling of NULL in JUser::getInstance() doesn't make any sense to me... Users without name are guests and do not need extra DB check.\n. @elinw: \nYes, there are at least 3 related issues, but to me they seem to be separate bugs and not symptoms from a one bug. I've worked around #740 by being sure that certain functions are not being called during login and logout. In there the issue was different -- user object was fine except for some cached values in it. But your message in bug squad list says that variation of the same bug can be seen in the backend.\nThis issue is slightly different as JUser doesn't exist in the session or has been changed into something else. I have no idea what causes this -- but it seems to happen sometimes for some users when user has been logged off, is logging off or if user suddenly becomes a guest (session corruption?). I've never been able to reproduce the issue in my tests or in any site I have.\n. @LouisLandry Current code works and solves my problem (we currently have workaround for it).\nLater I was simply trying to say that if JUser::getInstance() would have written in a slightly different way, I could have simplified if/else structure in JFactory::getUser() to just two lines of code. This is because of JUser::getInstance(null) currently makes a query to find a user who has empty username, which makes no sense to me.\n. @elinw Found my fix, but it's not included in Joomla CMS. Do I create a new pull for this?\n. Thanks! I've been playing with some other optimizations as well, but they still need some live testing and discussion of what's the best way to implement those.\n. Generally in OO it's perfectly legal to add new parameters to the inherited functions -- as long as the function can be used in the same way as its parent. So I would leave the parameter as well as I do know that it's used by a few components.\n. It happens on every non-standard file name. They are perfectly accepted during the installation, but Joomla fails to find them during uninstall. It's a bit annoying as many extension developers end up thinking that their extension works even if it doesn't.\nI would either force everyone to use fixed file or fix the code to work with any file name.\n. We are doing the same, but we are renaming (moving) the manifest file on postFlight() to match the Joomla naming.\n. Oh, forgot to mention that (else)if ($i == $this->pagesCurrent) can be removed without changing meaning of the code:\nif ($i != $this->pagesCurrent || $this->viewall) { ... }\nelseif ($i == $this->pagesCurrent) { ... }\n. Removed TODO comment to remove &limitstart=0 from URL. Almost a year ago I had the same idea in my own JPagination override, but I quickly learned that it's not going to work.\nReason is that the backend keeps current page in the state and URLs without &limitstart=0 have different meaning -- they are pointing to the last page visited by the user and not the first page.\n. Sorry, project settings were wrong. Now it should be better.\n. Nice -- but as we are on it, I would like to allow one more use case, which is using \"foreign key\" as a primary key. For example UCM could be implemented by extending a table with another table using the same key.\nI would also make a small feature to allow table to know if item already exists in the table. We have implementation of this feature in Kunena and it would be really easy to add into here, too. Basically you need to add:\n```\nprotected $_exists = false;\npublic function exists($exists = null)\n{\n    $return = $this->_exists;\n    if ($exists !== null)\n    {\n        $this->_exists = $exists;\n    }\n    return $return;\n}\n```\n.. and some logic to set the variable when the item gets loaded, saved or removed.\nhttps://github.com/Kunena/Kunena-2.0/blob/master/administrator/components/com_kunena/libraries/tables/kunena.php\nAbove code also prevents extra lookup to the database if the item was fetched earlier. If you want to handle both, I would set $_exists = null at first and use true/false when you want to know the status of the object (also change the code to make SQL query if state is unknown).\n. @ianmacl Our house is currently under repair (water pipes...), which unfortunately has a small distracting effect on everything I (try to) do. \nAre you coming to world conference?\n. On very quick look this looks good. The only question remaining is if it will be possible to use the old class over transition time or if the new class is backwards compatible enough to replace the old one?\n. Just curious: Are you (at some point) going to propose a better way to install extensions into platform applications? Because of I think that even platform applications could benefit from easy updates and possibility to extend them by extensions.\n. Yes, I'm aware of the plans, but I'm curious as well. I'm also interested if there's a plan to get the new installer class into the platform.\n. Maybe there should be warning if someone is trying nested transaction (flag idea) saying that it's not supported in MySQL? That warning should display/be logged even in other engines...\n. +1 for the change. The reason is that there are really weird bugs causing random white pages on PHP 5.2 and PHP 5.3 that just go away by using later version of PHP 5.3. \n. I might know what's going on in here: $instance may not contain JUser object if user is guest...\nIf you're not interested to get currently logged user, use JUser::getInstance($username) instead as it's faster anyway.\n. I would just figure out how to use autoloader instead... For now I'm just making sure that the filenames are unique.\n. ",
    "svanschu": "@klas your caching workshop is nice. But can I ask you to bring that into docs.joomla.org? I think a lot of people miss that, because they don't knew your video.\n. Bug: removeUserFromGroup did not work, because it tries to unset a array item with the value as key. \nFix: getting the key, so the unset can work\n. ",
    "mbabker": "Yes, this was committed on the SVN already.  I don't believe I've seen a syncing commit yet here though.\n. In the extensions that I work with, nor in the core, could I find a use case where parameters were being passed.  Theoretically, the order of the variables could be changed and those instances which pass no parameters could then just define '' in that spot.\nIn working on migrating my own site to 1.7, I took a plugin that was built for 1.5 and migrated it myself for use.  With this plugin enabled, all instances of mod_custom were having their content removed and it wasn't until I'd stepped through the code site wide several times before I caught that it was this specific plugin that was the culprit.  Within the plugin, I can't filter on $context currently because the category and featured views of com_content pass this generic context that I am suggesting we allow to be defined, so I have to check that certain properties exist after I retrieve the full $article object from the database.  It was in this step that I was losing mod_custom data, so I had to add an additional check to get around this.\n. As I said, I couldn't find an instance in places I looked where $params was passed, and I looked through several 3PD extensions as well as throughout core.  Either way, it is a simple change here to move the context to be defined after $params.\n. Parallel CMS Feature Request - http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26475\n. Umm... Not quite sure what happened here, but I'll recreate the pull request later on.\n. I'll take the example code that is already in the SVN and tweak it to use these changes.  Give me a day or so to get that done.\n. I've branched the SVN trunk and tweaked the package already there to demonstrate all the features that I'm aware for this extension type.  The scriptfile includes a working example of what I'm proposing with this pull request on postflight.  Since I've got the branch going there, I'll hop through each of the extensions and clean them up then get that merged later.  The branch is at http://joomlacode.org/svn/joomla/development/branches/sample_exts/\n. I've merged to master and in the merge I pulled my changelog entry since it conflicted anyways.  Should be good to go now.\n. Still getting SQL errors about what looks to be the AS t part, but it looks a bit more correct now.\nYou have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'AS t LEFT JOIN jos_finder_taxonomy_map AS m ON m.node_id = t.id WHERE t.parent' at line 2 SQL=DELETE FROM jos_finder_taxonomy AS t LEFT JOIN jos_finder_taxonomy_map AS m ON m.node_id = t.id WHERE t.parent_id > 1 AND m.link_id IS NULL\n. That test is actually a straight up copy of the one for the deprecated JUtility method.  I'm still learning how to build tests, so I'm sure it could be done better.\n. And I'll keep throwing commits on here in the mean time for every little bit I'm able to improve on.\n. It's definitely worth combining the two approaches.  Obviously, if each of us has our own methods for setting a relative date, there's probably others with the same and creating a single approach would be beneficial for all.\nThe only reason I didn't work out a unit test for this is because the language string dependencies.  But, creating tests won't be difficult I'd say.\nComing up with a location for language strings would definitely be helpful.  Be it a centralized language folder or a folder for each individual package.  Truth be told, I like the concept of the individual packages better and have been moving my own code to follow that approach; it's just that much easier to find the language files.\n. +1 for JS type class.  And I like the 2 chunks code also.\nOn 9/24/11 10:25 AM, \"Matias Griese\"\nreply@reply.github.com\n wrote:\n\nThe code I'm using came originally from php.net comment (as I say in the\ncode), but it has been heavily modified. I'm not sure why it's not PHP5.3\ncompatible -- if I remember correctly I just converted my own class to\nextend JDate without modifying the variables..\nI agree, we should add diff() override for PHP5.2 and deal the rest in\njHtml helper. \nBTW: My code shows up to 2 chunks, but only shows chunks that aren't 0\nand ignores seconds. So you get:\n1 month 3 weeks ago\n1 month 2 days ago\n1 month 21 hours ago\n1 month 52 minutes ago\n1 month ago\nAnother related subject: I really like the way github deals with the same\nissue by using JavaScript. So if we are creating helper from this, why\nnot give option also to use JavaScript?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/370#issuecomment-2185117\n. Unless I FUBAR'd the implementation, that JS class is about as practical as the PHP I've been using.  It doesn't auto-update the time like Twitter or GitHub do.\n. OK, I've started building a test case, but I'm not quite 100% sure how to handle everything.  For starters, I still don't have a language file pushed which contains the language strings for this; where should I put that?\n\nNext, how should we handle the $diff variable in the relative function since it depends on PHP's time() function?  To test consistently, we'd need to set time() to be something static.\nI'm sure there's more than that to address, but for me, those are the two big items right now.\n. Reworked things a little bit, the only test case that is failing locally for me at the moment is the one for right now.\n. The only failure I'm getting on the tests locally is the one for the \"Less than a minute ago\" string.  It appears that the call to JFactory::getDate('now') in the test suite is done at the beginning of running the tests, so when that test is actually run ~2-3 minutes later (on my system), it fails.  Went ahead and commented it out for now.  Otherwise, should be clear from the code style and test failures.\n. This one is in part to help with integrating Finder and additionally\nmaking the highlight behavior available to other components without\nneeding to duplicate code.  On the Finder repo, I've started working on\nconverting the system plugin that handled it previously into a content\nplugin acting onContentPrepare which could be offered into the CMS before\nFinder if completed and working OK.\nOn 9/21/11 2:32 AM, \"Andrew Eddie\"\nreply@reply.github.com\n wrote:\n\nHi Michael.  Is this to help with the Finder integration?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/371#issuecomment-2150399\n. Closing in favor of #608\n. Made the changes.\n. As I look over the test suite, I'm doing what I can with what I know and have looked at elsewhere to actually write tests or implement tests that may not be reporting accurately, such as with these JFormField tests.  In cases where I'm finding no tests or skeletons for the classes, I'm generating skeletons so the class will report test coverage (even at 0%), and for me, that helps to figure out where I should devote some time on the tests.  Who knows, maybe it'll convince others to join in too.\n. So what's \"correct\"?  There's no consistency right now with the constructor @return statements.  In the couple dozen I've just looked at, there's a mix between void, the class name, and no return statement at all, and it seems to lean closer to being a majority class names.\n. I think an argument can be made for making the @return tags consistent one way or another here.  Personally, I'm in favor of either using the class names or not including a @return tag on constructors.\n\nRunning phpDocumentor locally on my own component using @return void, @return ClassName, and no @return statement produces different results in the output (this is pretty much the default, so unless the API's implementation has been tweaked in such a way to do something different, it should apply).\nvoid __construct( [array $config = array()]) - constructor with @return void\nPodcastManagerTableFeed __construct( object &$db) - constructor with @return PodcastManagerTableFeed and class name linked to self\nPodcastManagerModelFeeds __construct( [array $config = array()]) - constructor with no @return statement\nThough the method does not explicitly return something, it does create an instance of a given class, and it seems @return void isn't the correct answer for the constructors.\n. I'll handle the @return statements tonight and tomorrow.  Question - Will this require a change to the code sniffer, and if so, do you think you could handle it @elkuku?\n. Request updated removing the @return statements.\n. FWIW, if the test suite is going to be included in the code style report, the docs should be updated to reflect that and the task taken on and completed.  Otherwise, I'd update the pull tester to follow the guidance suggested at https://github.com/joomla/joomla-platform/blob/staging/docs/manual/appendices/analysis.xml#L87 and only check J! code.\n. Can you remove the file at libraries/joomla/database/.DS_Store?  It shouldn't of been committed.\n. +1 on the DDL.\nI'd also suggest renaming the MySQL DDL with this pull request too to ddl_mysql.sql.\n. I checked out this branch, merged it with the current platform (locally), and ran phpunit and phpcs.  Here's my results.\nphpunit errors:\n1) JDatabasePostgreSQLTest::testReleaseTransactionSavepoint\nInvalidArgumentException: You must not expect the generic exception class.\nphpcs results (only for the Database package)\n<file name=\"/libraries/joomla/database/database.php\">\n  <error line=\"31\" column=\"9\" severity=\"warning\" message=\"No scope modifier specified for function &quot;test&quot;\" source=\"Joomla.Classes.MethodScope.Missing\"/>\n </file>\n <file name=\"/libraries/joomla/database/database/mysql.php\">\n  <error line=\"825\" column=\"4\" severity=\"warning\" message=\"Inline control structures are discouraged\" source=\"Joomla.ControlStructures.InlineControlStructure.Discouraged\"/>\n </file>\n <file name=\"/libraries/joomla/database/database/mysqlexporter.php\">\n </file>\n <file name=\"/libraries/joomla/database/database/mysqli.php\">\n </file>\n <file name=\"/libraries/joomla/database/database/mysqliexporter.php\">\n </file>\n <file name=\"/libraries/joomla/database/database/mysqliimporter.php\">\n </file>\n <file name=\"/libraries/joomla/database/database/mysqlimporter.php\">\n </file>\n <file name=\"/libraries/joomla/database/database/mysqliquery.php\">\n </file>\n <file name=\"/libraries/joomla/database/database/mysqlquery.php\">\n </file>\n <file name=\"/libraries/joomla/database/database/postgresql.php\">\n  <error line=\"59\" column=\"2\" severity=\"warning\" message=\"No scope modifier specified for function &quot;__construct&quot;\" source=\"Joomla.Classes.MethodScope.Missing\"/>\n  <error line=\"175\" column=\"2\" severity=\"warning\" message=\"No scope modifier specified for function &quot;dropTable&quot;\" source=\"Joomla.Classes.MethodScope.Missing\"/>\n  <error line=\"284\" column=\"2\" severity=\"warning\" message=\"No scope modifier specified for function &quot;getQuery&quot;\" source=\"Joomla.Classes.MethodScope.Missing\"/>\n </file>\n <file name=\"/libraries/joomla/database/database/postgresqlquery.php\">\n  <error line=\"261\" column=\"2\" severity=\"warning\" message=\"No scope modifier specified for function &quot;concatenate&quot;\" source=\"Joomla.Classes.MethodScope.Missing\"/>\n </file>\n <file name=\"/libraries/joomla/database/database/sqlazure.php\">\n </file>\n <file name=\"/libraries/joomla/database/database/sqlazurequery.php\">\n </file>\n <file name=\"/libraries/joomla/database/database/sqlsrv.php\">\n </file>\n <file name=\"/libraries/joomla/database/database/sqlsrvquery.php\">\n </file>\n <file name=\"/libraries/joomla/database/databaseexception.php\">\n </file>\n <file name=\"/libraries/joomla/database/databasequery.php\">\n </file>\n <file name=\"/libraries/joomla/database/table.php\">\n  <error line=\"31\" column=\"12\" severity=\"warning\" message=\"Protected member variable &quot;_tbl&quot; must not be prefixed with an underscore\" source=\"Joomla.NamingConventions.ValidVariableName.PublicUnderscore\"/>\n  <error line=\"39\" column=\"12\" severity=\"warning\" message=\"Protected member variable &quot;_tbl_key&quot; must not be prefixed with an underscore\" source=\"Joomla.NamingConventions.ValidVariableName.PublicUnderscore\"/>\n  <error line=\"47\" column=\"12\" severity=\"warning\" message=\"Protected member variable &quot;_db&quot; must not be prefixed with an underscore\" source=\"Joomla.NamingConventions.ValidVariableName.PublicUnderscore\"/>\n  <error line=\"55\" column=\"12\" severity=\"warning\" message=\"Protected member variable &quot;_trackAssets&quot; must not be prefixed with an underscore\" source=\"Joomla.NamingConventions.ValidVariableName.PublicUnderscore\"/>\n  <error line=\"62\" column=\"12\" severity=\"warning\" message=\"Protected member variable &quot;_rules&quot; must not be prefixed with an underscore\" source=\"Joomla.NamingConventions.ValidVariableName.PublicUnderscore\"/>\n  <error line=\"70\" column=\"12\" severity=\"warning\" message=\"Protected member variable &quot;_locked&quot; must not be prefixed with an underscore\" source=\"Joomla.NamingConventions.ValidVariableName.PublicUnderscore\"/>\n </file>\n <file name=\"/libraries/joomla/database/table/asset.php\">\n </file>\n <file name=\"/libraries/joomla/database/table/category.php\">\n </file>\n <file name=\"/libraries/joomla/database/table/content.php\">\n </file>\n <file name=\"/libraries/joomla/database/table/extension.php\">\n </file>\n <file name=\"/libraries/joomla/database/table/language.php\">\n </file>\n <file name=\"/libraries/joomla/database/table/menu.php\">\n </file>\n <file name=\"/libraries/joomla/database/table/menutype.php\">\n </file>\n <file name=\"/libraries/joomla/database/table/module.php\">\n </file>\n <file name=\"/libraries/joomla/database/table/session.php\">\n </file>\n <file name=\"/libraries/joomla/database/table/update.php\">\n </file>\n <file name=\"/libraries/joomla/database/table/user.php\">\n </file>\n <file name=\"/libraries/joomla/database/table/usergroup.php\">\n </file>\n <file name=\"/libraries/joomla/database/table/viewlevel.php\">\n </file>\n <file name=\"/libraries/joomla/database/tablenested.php\">\n  <error line=\"75\" column=\"12\" severity=\"warning\" message=\"Protected member variable &quot;_location&quot; must not be prefixed with an underscore\" source=\"Joomla.NamingConventions.ValidVariableName.PublicUnderscore\"/>\n  <error line=\"85\" column=\"12\" severity=\"warning\" message=\"Protected member variable &quot;_location_id&quot; must not be prefixed with an underscore\" source=\"Joomla.NamingConventions.ValidVariableName.PublicUnderscore\"/>\n  <error line=\"93\" column=\"12\" severity=\"warning\" message=\"Protected member variable &quot;_cache&quot; must not be prefixed with an underscore\" source=\"Joomla.NamingConventions.ValidVariableName.PublicUnderscore\"/>\n  <error line=\"101\" column=\"12\" severity=\"warning\" message=\"Protected member variable &quot;_debug&quot; must not be prefixed with an underscore\" source=\"Joomla.NamingConventions.ValidVariableName.PublicUnderscore\"/>\n </file>\nThe protected member variable messages are known issues and have nothing to do with your changes.  The other errors, without looking at them myself, should probably be fixed.\n. For the PHPUnit 3.6 update, I also had to pear install phpunit/DbUnit because it looked like phpunit was erroring out in trying to find an autoloader for the Extensions_Database package.  That might help you out as well.\nNo phpunit errors.\nLooks like there's one more phpcs error to fix:\n<file name=\"/libraries/joomla/database/database/mysql.php\">\n<error line=\"825\" column=\"4\" severity=\"warning\" message=\"Inline control structures are discouraged\" source=\"Joomla.ControlStructures.InlineControlStructure.Discouraged\"/>\n</file>\nLooks like the else statement just needs to be surrounded in braces.  Should be good to go at that point.\n. Well crap...\n. Closing in favor of #542\n. I think JModuleHelper has a decent way to define the paths to search, and it could be used as a model for a function usable throughout the library.  https://github.com/joomla/joomla-platform/blob/master/libraries/joomla/application/module/helper.php#L166\nMy only question is where would this type of function go?\n. I've got a concept I committed to another branch which adds a method to JFactory to handle this.  https://github.com/mbabker/joomla-platform/compare/master...libLanguage\nThoughts?\n. It isn't a waste.  Honestly, I'm sitting in the middle of nowhere right now with nothing better to do, so little things like this are basically just time killers for me at the moment.\n. OK, I'm merged up to master and got the changes.  I think everything's correct in terms of the change set.  The only thing I can't confirm 100% accuracy on is the changelog.xml file since the diff doesn't show because of the number of changes.\n. @nikosdion already has a fix for this (introduced in #584) in #594.\n. Looked through the CMS.  In instances where JException is used, it only uses the first two params, which are the same as Exception.  There may be an instance or two where the catch statement needs to be changed, otherwise, there should be no issues.\n. The $valid->get('level') switch at https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/form/form.php#L1119\nThis might work out correctly now that #604 has been merged.\n. http://developer.joomla.org/platform-manual.html - Appendix A Chapter 2 gives you some basic info on running PHP_CodeSniffer, where the errors you're getting are coming from.\n. Well, they weren't showing up from Jenkins reports.  So, obviously, he's\ngot some super secret squirrelly stuff going on to keep from getting that\nfailure  ;-)\nOn 12/7/11 1:29 AM, \"Nikolai Plath\"\nreply+i-2459345-87575b293c399da6f106104af839bb02795b25c5-368545@reply.gith\nub.com wrote:\n\nThis fixes the UT error on my side too.\nNot sure why they would only appear \"locally\", but it works :)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/613#issuecomment-3037320\n. OK, so I've rebased the branch based on the merge of #604, so now all that's being done here is updating the unit test.\n. It's been a while since I did the INFOURL change, but if I remember correctly, I originally started out by putting it in the _updatecols property, but the column wouldn't get handled correctly.  I can always test again to see if that holds true or if it was something at the time that I was missing, but that's why it is where it's at now.\n. Well, it's working now with INFOURL in the _updatecols property.  I'm regenerating the CMS patch right now with that change, so I suppose it can be added here as well.\n. CMS Pull Request @ joomla/joomla-cms#65\n. @marcel-kanter please test #237 for adding that support for package extensions (trying to not duplicate efforts)\n. I'm fine with either approach.  But, we need something otherwise we've\nbroken the installer for 2 (probably lesser used) extension types.\n\nOn 1/2/12 4:41 PM, \"Christophe Demko\"\nreply+i-2705216-d286499e6f3635c0b264e343d502e81306f4b08f-368545@reply.gith\nub.com wrote:\n\nIn fact we could have these attributes as public and read-only by only\nadding\n/\n- Magic method to get a protected field\n  \n- @param   mixed  $name  Name of the protected field to retrieve.\n  \n- @return  mixed  The protected field\n  \n- @since   11.4\n  /\n  public function __get($name)\n  {\n      if (property_exists($this, $name))\n      {\n          return $this->$name;\n      }\n      else\n      {\n          return null;\n      }\n  }\nto these classes (keeping the protected keyword)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/696#issuecomment-3333967\n. We're leaning more towards / versus DS since PHP is able to handle both slashes as separators just fine, including mixed use.\n. Not \"official\", but has a list of most of your code style errors as of yesterday - http://elkuku.github.com/pulltester/pulls/702\n. If you have phpcs installed, yes.  There's some info on developer.joomla.org to help you.\n\n-Michael\nPlease pardon any errors, this message was sent from my iPhone.\nOn Jan 4, 2012, at 1:30 PM, marcel-kanter reply@reply.github.com wrote:\n\nIs it possible to trigger the style check manually? Since i've corrected the style errors in the last 2 commits and they are still reported? Just take the if in line 125 as an example. there is no missing space.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/702#issuecomment-3358733\n. I sent you a pull request updating the branch to the current master commit as well as fixing the code style errors.\n. This was committed to the Platform after the 11.4 tag, which is what CMS 2.5 is based on.  It's entirely possible to backport this into the CMS for the 2.5.1 release in March; just need to submit a bug report at http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemBrowse&tracker_id=8103 adding the code (you can do a pull request on joomla/joomla-cms with the code).\n. FWIW, since we've merged Bootstrap (and inherently, jQuery) into the CMS, I have a patch that cleans up the implementation quite a bit, including adding a 'jquery.framework' behavior, seen here: https://github.com/mbabker/joomla-cms/compare/JScleanup#L13R27.  Since we are distributing a version with the CMS, there's no need for the numerous version checks, and it is possible to override the method call using JLoader::register() if you want to load from another location or use a different version on your site.\n. @beat The route I chose to follow in my methods is based on the JHtmlBehavior::framework() method and the fact that we are shipping jQuery with CMS 3.0.  I'm not closed to alternatives, but given that we shouldn't need to support loading multiple versions of a JS framework in the code if we are shipping it (where do we support loading other versions of MooTools?), I chose this simple approach.\n\nAlso curious how my implementation does not use the API to load the JS.\n. Joe's pull has plenty of merits (and with a few tweaks, I'd be all for it).  However, comma, to say that it is a clean use of existing API isn't exactly true as he has modified the API a bit to work with his implementation.  He also avoids use of some of the API.  To fully implement Joe's idea, here's what I would do at a minimum:\n- Open some of the newly introduced API to be set with existing API methods (JFactory::getDocument()->addScript() and JHtml::script() for example)\n- Modify JHtmlBehavior::framework() to work with the new code (MooTools IS a JavaScript library after all)\n- If practical, try to allow registering libraries with JHtml::script()\nI agree there should be a helper method to load jQuery, especially with it included in CMS 3.0.  That said, the flaw that I see in these two pull requests is that they are directed very specifically at jQuery and to me look like the code being provided is a copy from another extension, meaning it doesn't really embrace the API.  Additionally, the changes don't take into account the already existing JavaScript library in the Platform, and I don't agree with one library appearing to have preferential treatment over the other.  It wouldn't be difficult to have our MooTools loading method use this new code as well, would it?\n. Was pretty much testing one at a time to make sure they weren't still in\nuse and the unit tests didn't break (as evidenced by the one oops\ncommit...)\nOn 1/12/12 11:38 PM, \"Rouven We\u00dfling\"\nreply+i-2824426-f88893890721c36090d68a78c46e72bb5d4cd1dc-368545@reply.gith\nub.com wrote:\n\n+1 from me\n(Just of of curiosity, why the many commits?)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/743#issuecomment-3471895\n. I agree it makes for a better read, but the way it is documented, an IDE like PhpStorm will flag $query->distinct('something', 'distinct') as having an invalid param (expected Boolean, got string type message).  Not a big deal as you said, but the details make a difference.\n\nI'd do a __toString test.  There's been a couple of issues I've had to fix that probably could have been avoided if it were tested.\n. It's still in use because the work hasn't been done yet to replace all uses of JRequest with their replacement (JInput for most, still gotta figure out checkToken).\nAlso, JInput shouldn't be directly accessed as JRequest has been in the past.  You should get it from the application (JFactory::getApplication()->input, but in this case since we're in JApplication, $this->input should work).  So, change the JInput::set($key, $value); line in your diff to be $this->input->set($key, $value);\n. That is an automated test account to run the unit tests and code style rules.  The unit tests most likely failed because of the first change you made.  It looks like the tests will still fail as you've forgotten the $ on the $query = $dbo->getQuery(true); line.\n. The full repository.  All warnings that are being worked on.\nOn 1/24/12 8:55 PM, \"Don Cranford\"\nreply+i-2953661-0b060b7a03a0026bdc57d3cbe398a0ef3e45461f-368545@reply.gith\nub.com wrote:\n\nOk. Thanks. I've corrected the line. I'm guessing the 165 warnings are\nfrom the rest of the file?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/792#issuecomment-3639151\n. Rebased to current staging.\n. Added a update file jos_languages_update.sql to tests/tmp with the schema changes so that those who are set up to run the unit tests locally can update their databases.\n. getVersion is already abstract in JDatabase, working the other changes right now.\n. Changes pushed up.\n. Odds are the class will be renamed at some point.  The JDatabaseQuery classes were recently renamed, e.g. https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/database/query/mysql.php#L19\n. @realityking\n\nIt was a duplicate test file.  There is also a JFormFieldCheckboxTest, which uses the correct class name.\n. Wow, don't know how I missed that one.  I was going off the file list\ndirectly in PhpStorm while working on this.  Chalk that one up to aging\neyes ;-)\nOn 2/14/12 1:17 PM, \"Rouven We\u00dfling\"\nreply+i-3208922-6d25447d12c9b7e6ea85ea3459dc7c56d1b83ee1-368545@reply.gith\nub.com wrote:\n\n@mbabker \nThere's both a JFormFieldCheckbox and a JFormFieldCheckboxes.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/871#issuecomment-3959599\n. If you'd like to take a whack at it, by all means, go for it.  I just kinda hop around and decide \"hey, this is what I'm going to look at today\" ;-)\n. The 3 additional checkstyle warnings are coming from #838 which looks intentional (they match the errors in the memcache driver).\n. The GitHub package is a group of classes that can be used in Joomla! code to interact with GitHub's API's.  The most notable use of the package right now is the pull tester (the @joomla-jenkins comments in pull requests).\n\nThis specific class doesn't have an implementation in code right now, but it adds the possibility to interact with the GitHub API's commits data points.\n. I've read those comments as well, and I don't know if the comment is\ninaccurate or if it is truly parsing 1.5 style code in those cases.  It\nseems like what is actually happening is what should be happening just\nreading the code, but maybe there was another parameter somewhere that got\ndropped?  I'd have to dust off a 1.5 trunk checkout and read the code to\nverify that.\nOn 2/16/12 8:28 PM, \"Rouven We\u00dfling\"\nreply+i-3249497-a529be643e56901671181fa7167980457ad17977-368545@reply.gith\nub.com wrote:\n\nI noticed this comment:\n// Try for Joomla 1.5 type queries\nI've seen it in some of the other adapters too. Is that still accurate?\nDo we want to keep that code?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/884#issuecomment-4007508\n. Ya, it definitely looks like we need to clean up the comments at some point soon.  The 1.5 comments (at least comparing the component adapter) are referring to when the adapters had checks in place for 1.0 style installations versus 1.5 style and when the 1.0 code was dropped, the comments weren't changed.\n. Just out of curiosity (now that I'm looking at porting the code back to CMS 2.5), why the change from the $section param in getActions() to having to specify the full $xpath in the new methods.\n. The JDatabase mock needs updated.  This is why the tests are failing.\n. Yes, comments should be fixed.  The method doc blocks are what is used to generate the api.joomla.org pages, so what you see in the code is what is going there.\n. That DDL is for SQLite, which should require no manual intervention (the database is built at runtime and deleted when finished, all in memory basically).  At https://github.com/joomla/joomla-platform/tree/staging/tests/suites/database/stubs resides driver specific DDL files.\n. The docs haven't been updated since things were updated to break away from needing specific configs and whatnot for each system.\n\nAt the most, I think all you'd need to do now to get running is just checkout the code and run phpunit.  That'll get you the basics.  To run the specific database tests, copy the phpunit.xml.dist file in the repo root to phpunit.xml and uncomment the <php> block then set up the values to your specific environment. \n. Your change looks right to me, but I've been wrong before.  Could you also update the docblock to remove the info about the params?\n. You need to fix your code style first - http://developer.joomla.org/pulls/pulls/1093.html\nAlso, instead of echoing the message, you should be returning an error.  Instead of the try/catch method you've proposed, maybe the current if statement would work fine, but add an else so that an Exception is thrown and the caller can handle the error.\n. It was added to 3.4.0.\n. Looking back across the other field types, I obviously didn't check to make sure I was consistent with the code used in other field types.  That said, I only thought to add the disabled option to the media field after having a case where I needed to disable the select/clear buttons in a non-edit type view (and outputting the data in other ways just didn't suit my needs).  The behavior should be consistent across all fields for sure, and all fields should be allowed to be disabled if need be (just my opinion on the last part).\n. In the case of the media field, the text field is read-only always and can\nbe changed even if you set the readonly property to true.  To truly make\nthat field non-editable, you need to not be able to use the Select and\nClear buttons.  Not displaying them was the simplest solution I could come\nup with off the top of my head.\nOn 5/7/12 3:10 PM, \"Benjamin Pick\"\nreply+i-4422490-fd71f06a055ca4aaddf3cf849a90602f4d89f1db-368545@reply.gith\nub.com wrote:\n\nBut a \"non-edit type view\" would be readonly, not disabled.\n(The difference is that disabled form elements are not submitted at all\n(+ not editable), while readonly elements cannot be changed within the\nbrowser, but are still part of the form submit. (The distinction is\nmarginal, though, as \"not submitting a form element\" is the same as \"not\nchanging it\", except may be the egde case when the form is submitted for\nthe first time.)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/1188#issuecomment-5549600\n. Currently, the CMS doesn't follow the standards, but it's a work in progress.  You could use the Platform's build.xml file, specifically the phpcs target, to help you build either a command line prompt or your own Ant/Phing command to run the code sniffer on only the files you specify.\n. I think we're fine as is.  If the config item themes.base isn't set, then the fallback is to check the constants.  The CMS defines JPATH_THEMES, so there's no issue from that aspect.  For applications that don't define JPATH_THEMES or the config item, we then fall back onto option 3; checking for JPATH_BASE or __DIR__ as the base folder, and the themes folder underneath that is used instead.\n. This should go to the CMS repo (https://github.com/joomla/joomla-cms).  With the current Platform version, these classes will be auto-loaded, making the jimport statements unnecessary.  CMS 2.5 is using Platform version 11.4, which would need these jimport statements.\n. I reverted to $db->insertid() locally because I'm not quite sure where @gpongelli was going with this change, but it did cause installation to fail for me because there was no $key variable set.\n. When I removed the preflight from uninstall, the plugin adapter was the only one which had this available.  Is it intended that all of the adapters have preflight available at uninstall, or was the plugin adapter a special case?\n. Gotcha, I'll fix it up later on then.\n. Could someone point me to code that's broken?  I use a files extension to drop in alternate layouts for CMS templates and haven't seen an issue with install/uninstall.\n. Do a pull against the CMS with it.  Still working on syncing up some of the Platform code to the CMS.\n. I see two issues here:\n\n1) The filter classes aren't autoloadable due to the folder they are in being named filters.\n2) The classname for the grayscale filter, JImageFilterGrayScale, isn't autoloadable due to the camelcase.\n. They're both tied together.  The autoloader is looking for a file at libraries/joomla/image/filter/gray/scale.php with the class name as it is now.  The file is obviously not in that location.  Both issues are easily fixed.\n. If the method is in the same class, you use self instead of the class name.  Otherwise, that reference is correct.\n. I'd be supportive of something like this.  I currently use some internal code in a plugin that allows users to override the output, and I know of a few other plugins doing similar workarounds.\n. Using JM's multi-lingual data set, the URL http://localhost/joomla-cms/es/inicio/19-categor\u00edas-en-espa\u00f1ol.html is\nsupposed to load the category with ID 19 but is loading the article with ID 19.  Reverting the changes to the JString method makes this load as expected.\nEDIT: Likewise, http://localhost/joomla-cms/es/federico-garc\u00eda-lorca.html should go to article ID 57 but is attempting to load category ID 57.\n. Would you mind updating import.legacy.php as well, since it has the same check?\n. In the current Platform code, the method is here: https://github.com/joomla/joomla-platform/blob/staging/libraries/legacy/view/legacy.php#L444\nFixing the regex for JViewLegacy should hopefully allow us to rename this CMS class to the proper name: https://github.com/joomla/joomla-cms/blob/master/administrator/components/com_templates/views/prevuuw/view.html.php#L19\n. Thinking a couple things out on this one...\n. Did Hash move between MooTools Core and More by chance?\n. That removal was intended.  So if we need to ensure MT More is loaded for that, then this fix will work.  Care to do the pull request?\n. My bet would be when Rouven updated the sniffs to work with the latest version of PHPCS.  He and I were having similar issues running the tool with the CMS ruleset and upgrading solved it and exposed some warnings that weren't being reported.  I guess the upgrade on this side didn't go as smoothly.\n. We have the external files and some other ones to not test in the exclude patterns, but those aren't being read right now.  Neither is the ignore in the build.xml file.  And, FWIW, I can't run any ant command statements on my MacBook because of 7b23e48756efa58a3edf2def15d8615b678b737f (getting a \"Cannot run program \"phpcs${script-suffix}\"\" message).  Guess that should be a separate report/fix...\n. I forgot get allows a default value.  I'll fix it in a bit.\n. OK, that's changed.\n. Unfortunately, it looks like there was an unintended regression here dealing with the asset handling in JTable::store().  It looks like the problem can be chased down to https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/table/table.php#L719 where the $this->_tbl_key was changed to $this->_tbl_keys since JDatabaseDriver::insertObject() expects that param to be a string, not an array.  This causes the ID (or whatever the key(s) may be) of the newly inserted record to not be stored in the JTable instance, meaning when $this->_getAssetName(); is called a few lines later, the last part of the name is .0 instead of the value of the key.\n. As @SergeyLitvinov pointed out, the method is actually used in the driver here.\n. See #1613 :wink:\n. Can definitely look at it over the weekend.  Truth be told, I was only planning on the rate limit endpoint here since I hit it yesterday.  OAuth Authorizations was an added bonus :laughing:\n. The plan is to create a better installer library.  The current code is very closely tied in with the CMS, error prone, and because of how it's written, hard to test or troubleshoot.  A cleaner package will hopefully solve a lot of these problems.  I guess I'm kinda curious if anyone's started working on it yet.\n. Done.  Mr. Jenkins, if you could be so kind as to reopen this :smile:\n. I've added a test on the constructor.  Reopen please.\n. It shouldn't fail.  That same check is made in the tableOrdering method at https://github.com/joomla/joomla-platform/blob/staging/media/system/js/core-uncompressed.js#L210, before the submitform function is called and the check you've highlighted being executed.  Maybe to be safe, we should default the param in the sort method to 'adminForm', but that's the extent that we could do to feasibly stop a bug from creeping in.\n. OK, looking at it some more, the JS methods both expect the form object, not the string name of the form.  So, for this change to be accepted, the JS would have to be changed so that the form param is a string type versus object and the JS would then load the form element.  This fiddle further demonstrates that - http://jsfiddle.net/ZCqEB/1/\n. FWIW, this is probably happening on a CMS 2.5 instance since when JGrid was originally added to the Platform, the file was in the location the autoloader expected to find the class JHtmlGrid (see #1317).\n. At a glance, things look pretty good to me.  I'd have to play with this some to make sure nothing breaks, but you've got something good here IMO.\n. You could make that argument.  Once you have a JApplicationWeb instance (since that most directly replaces JApplication for that purpose), you can get the config, session, document, user (identity) and language objects out of the box.  Adding support for the other objects if your application needs it is too easy.  It's a matter of working away from using the factory methods I guess, and not having everyone's necks on the chopping block when the decision to deprecate it is made.\n. I don't disagree, I'm just saying it would take some work to break the Platform of its use, the most common probably being the getApplication and getDbo methods.\n. ping\nIs this something we want to slip in to 12.3 or hold off for a while longer?\n. Question - Were JApplicationWeb or JApplicationCli intended to be abstract, or is it reasonable to assume they could theoretically work on their own (as the code seems to have indicated for the last year)?  Abstracting the method down to those classes would mean abstracting classes that aren't already, an interesting change in the API.\n. I'll do some work then to tweak this out and submit a new PR when that's ready.\n. This is causing unit tests failures on the Jenkins server - http://build.joomla.org/job/platform/1186/testReport/\nDebugging a little bit myself, the $strings variable previously was an array after running $this->parse($filename).  With the ksort, it is now a boolean.  Don't get why this wasn't picked up by the pull tester, but I'm reproducing it locally.\n. Check this out - https://github.com/joomla/coding-standards/tree/master/IDE\n. Came up just fine for me - https://github.com/joomla/joomla-platform/issues/new or https://github.com/joomla/joomla-platform/pull/new/joomla:staging...dianaprajescu:osm\n. http://joomla.github.com/joomla-platform/?appendices/analysis.md - That should help you get set up.\n. $currentAssetId isn't always set though, and that's the issue he's trying to resolve here.\n. Looks to be a better solution.  Now we just need to get the codestyle fixed, and I think we're good to go.  http://developer.joomla.org/pulls/pulls/1765.html\n. The installer package has moved to the CMS, please report this issue there.\n. Applied to the framework repo.\n. I don't think the application is something we can move completely away from not having static variables for.  Not sure about newer use cases, but there's a high chance that trying to reinstantiate the application or instantiate a second instance will probably cause problems somewhere.  So, IMO, I'd like one global static instance of the app somewhere (be it here or JFactory doesn't matter), but we should keep it.\n. IMO, it all depends on how they're used.  Having a static instance of certain higher level classes IMO isn't necessarily a bad thing.  I think there's a reason that JDatabaseFactory hasn't seen any adoption in the code over JFactory::getDbo().\nAlso, if we removed all static references to the application (here and JFactory) and every time the application was needed, it was called as $app = new MyApp;, how many errors would we immediately have to fix because it is assumed by 99% of our developers that the application is only instantiated once?\n. If I instantiate a new instance of something, I expect it to be fresh.  I think that's a reasonable assumption to make.  Likewise, if I'm accessing something at a global level, such as how we access the application object now, I should be able to safely assume that certain data will be available after I inject it into that object.\nNo matter what move we make, it's a sticky situation.  I guess the question is what mid-point can we agree to meet at?\n. Personally, I liked the flow we had through 12.x with 3 releases.  I think using the 11.x series to gauge from isn't the best to do; there were four releases in a 6-7 month period, two were maybe 6-8 weeks apart at best.  So, I'd vote to continue on the 12.x trend.  I know there is some concern with planning a release around the holiday season (depending on where you are, we could be talking as early as Thanksgiving in the US through the New Year).  So, perhaps settle on February, June, and October as release months?\nAnother consideration which I don't think has been publicly discussed is maintenance releases for the Platform.  What happens if a Platform release is made with a system crippling bug or a security issue is found?  IMO, I'd see no problem with releasing a Platform 12.3.1 if we had to because of a security issue.  The release could be based off the 12.3 tag plus the necessary fixes, for example.\n. The reason I vote for 12.3.1 versus 12.4 is it would be more obvious the release is of a maintenance nature targeting the 12.3 package.  That would seem easier to communicate and for downstream users to apply than for them to see the minor version increment for something small.\nScenario: What happens if 13.1 has a security issue and we release that fix as 13.2 in May?  Does 13.3 have an extended development period, do we add a 13.4 release, how do we handle deprecations marked for 13.3, etc.\n. I'll be firing up my Windows & SQL Server environment this weekend for some CMS work, but I'll add this to my to-do list as well.\n. Fixed by #1829\n. It's wrong to merge my own PR, but if someone issues one with the exact same fix... :wink:\nThanks!\n. Any suggestions on how to get past that error?  This method is unique in that it's not strictly returning the response object, but I have it doing post processing on the implied response.  The test failure occurs because the method doesn't have the response data to process.\n. No idea.  Unit testing isn't one of my stronger points, but if so, I'm all for trying.\n. OK, it was user error. :blush:\n. Glad I wasn't doing anything productive before opening that link... LOL\n. Looks like we've got a few failing unit tests now.  Looks as though what we were testing doesn't match what is returned by filter_var().  Would you mind fixing the tests as well?\nHere's the results from our pull tester - http://developer.joomla.org/pulls/pulls/1833.html\n. +1 to the standard\nOn Friday, February 22, 2013, Don Gilbert wrote:\n\nI would say that if a sysadmin on an Intranet is needing to verify emails\nto a different standard than what is possible via filter_var, then it is\ntheir responsibility to write an override or custom validator. The platform\nneeds to provide the base standard, not edge cases. But it's not a hill I'm\nwilling to die on.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1833#issuecomment-13978010.\n. If you would like the bug fixes to be considered, please submit them\nseparately from the attribution change.  Internally, we will discuss where\nthe original writer came up with this code and act accordingly for\nattribution purposes.\n\nOn Saturday, March 16, 2013, Patrick Fisher wrote:\n\nEven if you don't believe I wrote this, why would you ignore the bugfixes?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1850#issuecomment-15012175\n.\n. This issue is for the CMS, please report it to the CMS repository.\n. Thanks for your pull request.  Unfortunately, we aren't accepting pulls on this repo anymore; would you mind sending this to https://github.com/joomla-framework/database please?\n. This repo is no longer in active development. Please see https://github.com/joomla/joomla-cms\n. > [READ-ONLY] This repo is no longer in active development. Please see https://github.com/joomla/joomla-cms\n. I looked at the PHPMailer 5.1 tag, and it has the ISO charset as well.\nI'm thinking we might've changed it internally, so I'll go ahead and\ncommit that change.\n\nOn 11/23/11 12:23 PM, \"Andrew Eddie\"\nreply+p-247525-461c72b0f132fbf05483aed73d562b0c4bb0e472-368545@reply.githu\nb.com wrote:\n\n\n@@ -56,7 +53,7 @@ class PHPMailer {\n    * Sets the CharSet of the message.\n    * @var string\n    */\n-  public $CharSet           = 'utf-8';\n-  public $CharSet           = 'iso-8859-1';\n\nDoes this change in charset affect us at all?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/543/files#r247525\n. Need to add jimport('joomla.database.databasequery');, received \"Class not found\" error when I placed this file on a local CMS installation\n. For some of the classes, the autoloader is handling importing.  But, because not all the classes meet the naming convention, it's not working for all classes yet.  I think JDatabaseQuery would have to be renamed JDatabaseDatabasequery for it to get auto loaded.  FWIW, I was using a up-to-date CMS trunk which has the platform autoloader already added.\n. Possibly.  I'd have to get an environment set up where I'm calling JElement instances to accurately figure it out, but I'm hoping that in this instance (and the other few instances that are \"properly\" commented), the comment stating it's a JSimpleXMLElement is correct.\n. It should only trigger the behavior if the doc type being rendered is HTML and not using the component.php template file.\n. Whoops... My bad\n. A package extension has no true root. Since it is just a package of extensions, it truly only has a manifest and optional language files.  Therefore, logically, a script file should be placed with the single required file for a package extension, the manifest.  Well, that's my 2 cents anyways.\n\n-Michael\nPlease pardon any errors, this message was sent from my iPhone.\nOn Jan 1, 2012, at 12:59 PM, marcel-kanter reply@reply.github.com wrote:\n\n\n@@ -90,8 +90,7 @@ public function install()\n       $group = (string) $this->manifest->packagename;\n       if (!empty($group))\n       {\n-            // TODO: Remark this location\n-            $this->parent->setPath('extension_root', JPATH_ROOT . '/packages/' . implode(DS, explode('/', $group)));\n-            $this->parent->setPath('extension_root', JPATH_MANIFESTS . '/packages/' . implode(DS, explode('/', $group)));\n\nI would not change this, since this changes the path for all files. The scriptfile should they together with the rest anyway.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/237/files#r321672\n. JPATH_ROOT goes to the site root.  There's no packages folder at the site root.  JPATH_MANIFESTS points to administrator/manifests, which is the path that manifest files for file, library, and package extensions are placed at.  The TODO with the path leads me to think that at one point, there was an intent to use that path, but it's not used, so that was a logical change based on practical use.\n\n-Michael\nPlease pardon any errors, this message was sent from my iPhone.\nOn Jan 1, 2012, at 1:17 PM, marcel-kanter reply@reply.github.com wrote:\n\n\n@@ -90,8 +90,7 @@ public function install()\n       $group = (string) $this->manifest->packagename;\n       if (!empty($group))\n       {\n-            // TODO: Remark this location\n-            $this->parent->setPath('extension_root', JPATH_ROOT . '/packages/' . implode(DS, explode('/', $group)));\n-            $this->parent->setPath('extension_root', JPATH_MANIFESTS . '/packages/' . implode(DS, explode('/', $group)));\n\nWe're thinking the same. I did not came to take a closer look into this code. So JPATH_ROOT and JPATH_MANIFESTS point to equal fodlers?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/237/files#r321677\n. Negative.  Component, module, and plugin manifests are fine as is and moving them would require numerous other changes.\n\n-Michael\nPlease pardon any errors, this message was sent from my iPhone.\nOn Jan 1, 2012, at 1:52 PM, marcel-kanter reply@reply.github.com wrote:\n\n\n@@ -90,8 +90,7 @@ public function install()\n       $group = (string) $this->manifest->packagename;\n       if (!empty($group))\n       {\n-            // TODO: Remark this location\n-            $this->parent->setPath('extension_root', JPATH_ROOT . '/packages/' . implode(DS, explode('/', $group)));\n-            $this->parent->setPath('extension_root', JPATH_MANIFESTS . '/packages/' . implode(DS, explode('/', $group)));\n\nHmm. Then the handling of the manifests of component is different to package and my code is copying the script into the base. Should we equalise this for all extension types? Bend component and the rest into JPATH_MANIFESTS?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/237/files#r321685\n. This should be the current platform version being developed towards, currently 11.4\n. There should be a space after if\n. Since the $distinct param on union is documented to be boolean, wouldn't it be better to do return $this->union($query, true);?\n. $distinct should be boolean (true/false), so why not:\n\nif ($distinct)\n{\n    return ' UNION DISTINCT' . $query;\n}\nelse\n{\n    return ' UNION ' . $query;\n}\n. Why not default $distinct to false since it should be boolean?\n. Fixed.\n. This is a commented out test method that is implemented in the method immediately below these deleted lines.\n- Michael\nPlease excuse any errors, this message was sent from my iPhone.\nOn Jan 18, 2012, at 2:01 PM, Christophe Demko reply@reply.github.com wrote:\n\n\n@@ -475,18 +403,6 @@ public function testMerge()\n   /\n    * Test the JRegistry::set method.\n    /\n-    /public function testSet()\n-    {\n-        // Remove the following lines when you implement this test.\n-        $this->markTestIncomplete(\n-        'This test has not been implemented yet.'\n-        );\n-    }*/\n\n/**\n* Test the JRegistry::set method.\n* @deprecated    1.6\n*/\n  public function testSet()\n\n\nThe set method is not deprecated\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/759/files#r362682\n. This too was a duplicate test method that was commented out.  Implemented test is at https://github.com/mbabker/joomla-platform/blob/8204612487005d2a6dfd57fcc65afc2513b0861b/tests/suite/joomla/registry/JRegistryTest.php#L167\n. This line should read $query = $dbo->getQuery(true);.  The next 4 lines shouldn't need to be changed afterwards.\n. Yes.  Just update the file again and push the change and the pull request\nwill automatically update.\n\nOn 1/24/12 6:37 PM, \"Don Cranford\"\nreply+p-380497-462b1bc4a0c192e2c9834bb809e9c307f2312f33-368545@reply.githu\nb.com wrote:\n\n\n@@ -493,11 +493,11 @@ public function countMenuChildren()\n             $active = $menu->getActive();\n             if ($active)\n             {\n-                $query->getQuery(true);\n\nThanks. I just tested that on my site and it works with only changing the\none line. Do I need to change this pull request then?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/792/files#r380497\n. I left the conditional code as is, but it honestly looks funny anyways as $this->$doTask();... why the $ in front of doTask?\n. Went ahead and changed it.\n. Where at?\n. This should remain utf-8 (I know iso-8859-1 is PHPMailer's default); at least that's how we've used it for quite some time.\n. Well, I ended up changing it when I did the 5.2 update, so if that works better, I'm all for it.\n. This shouldn't have 'form' in the path.\n. Platform 12.1 requires PHP 5.3 minimum, and __DIR__ is valid in 5.3.  Can you change this back?\n. @since tags should be for 12.1 for new development.  There won't be a 11.5 release.\n. To match the code style rules, this line should be return '_CLOSURE_ID_' . $id;\n. Looking at the phpDocumentor page, doesn't look like it's needed.  If\nanything, it would be qn() or qn(string $name) (for example) based on the\nexamples in their documentation.  As is, in PhpStorm, the method now\ndisplays as valid, but instead of taking me to either the __call method or\nthe real method, I'm quick linked to the class docblock.\n\nhttp://manual.phpdoc.org/HTMLSmartyConverter/HandS/phpDocumentor/tutorial_t\nags.method.pkg.html\nOn 2/14/12 9:57 PM, \"Rob Schley\"\nreply+p-450093-acf37c32cb324435b8a814deafe9d4654554123d-368545@reply.githu\nb.com wrote:\n\n\n@@ -132,6 +132,10 @@ public function __clone()\n- @package     Joomla.Platform\n- @subpackage  Database\n- @since       11.1\n  - *\n  - * @method      string  q   Alias for quote method\n  - * @method      string  qn  Alias for quoteName method\n  - * @method      string  e   Alias for escape method\n\nShouldn't there be a dollar sign before the variable name?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/878/files#r450093\n. During install and update, this function is used to separate multiple queries in an extension's .sql file into single queries to be executed one at a time.\n. The installation app itself is in need of some work (Rouven and Nikolai have both been doing some cleanup and experimenting).  This is just one of those instances where the duplicate code needs removed.\n. Modified as suggested.\n. For the new add method, please change the since tag to 12.2\n. The legacy JView class.  Renamed to deconflict with the new MVC JView interface.\n. Any changes to JHttpResponse that came about when JHttpFactory was added?\n. Done\n. Another ,\n. Oh, my bad.  It looked like everything was deleted after the comma on this line the first time I looked at this.  I really should get more than 4-5 hours of sleep at night...\n. I know this line has nothing to do with the pull request, but why would the line be prefaced like this?  Seems like there's an error in the tests, unless it's a syntax I've never seen.\n. The updated commit should fix that.\n. How would you do it?  I still haven't done much with late static bindings, so tips are welcome.\n. JDataDumpable shouldn't have the slash here.\n. That won't work assuming my pull to make the application classes abstract\nis accepted.  Likewise, the check would have to be for an instance of\nJApplicationBase; both CLI and Web are having their getInstance methods\nconsolidated in this pull.\n\nOn Monday, January 7, 2013, Rouven We\u00dfling wrote:\n\nIn libraries/joomla/application/cli.php:\n\n*/\npublic static function getInstance($name = null)\n{\n-       // Only create the object if it doesn't exist.\n-       if (empty(self::$instance))\n-       {\n-           if (class_exists($name) && (is_subclass_of($name, 'JApplicationCli')))\n-           {\n-               self::$instance = new $name;\n-           }\n-           else\n-           {\n-               self::$instance = new JApplicationCli;\n-           }\n-       }\n-       JLog::add(sprintf('%s is deprecated, use JApplicationBase::getInstance() instead.', METHOD), JLog::WARNING, 'deprecated');\n\nSorry, forgot all about this during the holidays. Basically I'd remove the\nstatic methods from the subclasses and use this code in JApplicationBase\n(untested):\nif (empty(self::$instance)){\n    if (class_exists($name) && (is_subclass_of($name, 'JApplicationCli')))\n    {\n        self::$instance = new $name;\n    }\n    else\n    {\n        self::$instance = new JApplicationCli;\n    }}\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1772/files#r2571754.\n\n\n\nMichael\n\nPlease pardon any errors, this message was sent from my iPhone.\n. It would work for the time being.  Still leaves unanswered what to do if\nthe classes become abstract.  Guess we can look at that later on.\nIf you want to copy my commit over and make the change, go ahead.  The bus\njust hit the highway and I don't know when I'll next be online on my laptop.\nOn Monday, January 7, 2013, Rouven We\u00dfling wrote:\n\nIn libraries/joomla/application/cli.php:\n\n*/\npublic static function getInstance($name = null)\n{\n-       // Only create the object if it doesn't exist.\n-       if (empty(self::$instance))\n-       {\n-           if (class_exists($name) && (is_subclass_of($name, 'JApplicationCli')))\n-           {\n-               self::$instance = new $name;\n-           }\n-           else\n-           {\n-               self::$instance = new JApplicationCli;\n-           }\n-       }\n-       JLog::add(sprintf('%s is deprecated, use JApplicationBase::getInstance() instead.', METHOD), JLog::WARNING, 'deprecated');\n\nAs I said untested :P I actually didn't do any modification, I just copy\nand pasted from above and when I was done fighting with GitHub JS and\nSafari I forgot to actually change the code..\nLets try again:\nif (empty(static::$instance)){\n    if (class_exists($name) && (is_subclass_of($name, 'JApplicationBase')))\n    {\n        self::$instance = new $name;\n    }\n    else\n    {\n        self::$instance = new static;\n    }}\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1772/files#r2571823.\n\n\n\nMichael\n\nPlease pardon any errors, this message was sent from my iPhone.\n. ",
    "parthlawate": "Excellent Contribution .. More #jpositiv !\n. So whats the take on this ? \n. Oops ! \n. Thanks @Webvida \nHello All !\nWe had presented at the Joomla World Conference on this very subject. We already have quite a bit of code written for this & have it in use in 4 of our own extensions. Also we have 4 other devs who are adopting this over the next couple of months.. We have some 10 odd payment methods ready for it.. \nWe have open sourced this code at https://github.com/techjoomla/joomla-payments/tree/master/code\nWe are already in talks with several developers to adopt this API & have a Skype chat running to discuss this. We are working on getting this ported & written as part of the platform. \nYou can also take a look at my presentation on this here for a visual idea http://www.slideshare.net/coolparth/joomla-common-payments-api \n. @Skullbock  Absolutely ! That's where we want to go with it. We are basically already moving parts of this into a library to make it easier to put it into the platform & make it more abstracted. We have a branch of the platform where we are working on this & testing its use in the CMS . \nWhile we work on that approach, we have basically made it possible to use it today while we all work together to get it into the platform.  Great to see this Pull request ! \nWe have been discussing @LouisLandry 's approach to it as well as a few other thoughts on the Skype chat. Oh ya :) Forgot about that .. We have a Payments Skype Chat Setup for this very objective of Getting a Payments API into the platform.  Add me on Skype. My id is tws_parth & send me a request if you want to get on there.. We have some 15 odd devs in there.. \n. @Skullbock  You are ? How come i didnt notice ?  Aha ! Just saw you .. Cool ! Welcome aboard !\n. That's great !\nOn Jan 4, 2013 5:57 AM, \"elinw\" notifications@github.com wrote:\n\nHi just FYI we have a PR now for OpenStreetMap so between that and the\nJGoogle map I may take a crack at an address class.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1706#issuecomment-11867516.\n. \n",
    "Hackwar": "In the meantime I've been thinking about changing the class again a bit. This class would be something like JGridSimple and extend from JGrid, while JGrid would also allow to add more than one header and footer row.\n@tkahl\nThe functionality for sorting, etc. is not included in this on purpose. The idea is to have this as a really low level base class and then either extend it or to use decorators or simply other helper functions on the object. I'm trying to decouple stuff and also keep it as flexible as possible. Nobody should say that they are restricted by this class.\n. Since its been a month and you seem to ignore me, I'm closing this request. \n. The problem with this is, that you can't overload the loadObject function anymore to change the behavior at a central point, for example to filter the input. Now you need to replace at least two methods.\n. Stupid question, but how is the original field replaced with your change? Does simpleXML recognize the fields by the name attribute or something? I thought you would have to find the current element and replace that element itself with your new element...\n. is there anything new regarding this?\n. This looks good. Anything why this couldn't be merged in?\n. Ok, will do. Regarding the platform mailinglist: Does that mean that I'm not banned from the Joomla mailinglists anymore? Will I be allowed to post to other mailinglists, too?\n. Concerning the style tests: Its telling me that the @version tag is missing, however that tag is nowhere to be found in the whole platform codebase. I don't know what needs to be inserted there. Otherwise I get a warning that the PHP version needs to be specified, but I also don't know how. I used the codesniffer file mentioned in the article on docs.joomla.org If that one is not up-to-date, please tell me where I can get a more recent version.\nConcerning the unit tests: They are complete, please otherwise tell me what is missing.\n. I also renamed the render function to toString() and added a magic function, too.\n. Yes, I am using the Joomla sniff.\nI got issues creating a unit test skeleton with phpunit. It somehow didn't create any output when giving it the class. Don't know why. So I wrote all the stuff by hand, which is the reason for the missing doc blocks in the tests. \nWill fix the rest as much as I can.\n. After several days of looking for my error, I found out that this document is outdated: http://docs.joomla.org/Joomla_CodeSniffer\nIt points to a coding standard that is outdated instead of the one in the platform repo... \nAnyway, I fixed up the coding issues and changed the Unittests. Please take a look now.\n. I added notes to the documentation to make it easier for future people trying to set up their systems...\n. Done.\n. I've created a unittest for this and you can find it in this pull request/repo: https://github.com/joomla/joomla-platform/pull/421\nFeel free to copy it and add it to this pull.\n. Regarding #1: The class is 99% backwards compatible. The only thing missing is the setMode() and getVar() method. The former is not necessary, the later is part of the getVars() function. For setMode() a dummy function could be used instead which does nothing and the getVar() method could be added back in as a proxy to the getVars() method. While the BC is big, this project was not written with backwards compatibility for URL extensions in mind. Component routers are 100% BC, but due to the different workflow, some URL extensions might have problems. Not saying that there have to be problems, just that people tend to use code in strange ways.\nRegarding #2: The code should be fully covered by unittests.\nRegarding #3: Will do.\n. Regarding #1: I added the deprecated methods mentioned above.\nRegarding #3: Should be done now.\n. A small update to this: I've implemented the routing changes in this branch for the CMS: https://github.com/Hackwar/joomla-cms/tree/jrouter\nIs there any news for this pull request?\n. I would have prefered to keep this one open in order to generate more attention, but since I didn't have time to fix the issues in the component router of the CMS so far, this maybe is the better way. \n. The best way would be to move this up a bit and put the layout variable into the config array of the JView constructor. So instead of removing the default value in line 663, we could simply replace line 665 with:\n$view = $this->getView($viewName, $viewType, '', array('base_path' => $this->basePath, 'layout' => $viewLayout));\nand completely remove lines 675 to 678.\n. The idea was, that the code looks like this:\n$viewLayout = JRequest::getCmd('layout', 'default');\n$view = $this->getView($viewName, $viewType, '', array('base_path' => $this->basePath, 'layout' => $viewLayout));\nIn this case, you always have at least \"default\" as your layout. If you are overriding this in the constructor of the custom view class like you described, it would still work. There is one downside however. If a constructor in the custom view does the same check:\nif(isset($config['layout']))\n    $config['layout'] = 'newdefault';\nit would fail because the controller sets the layout automatically by default. The code would still be MVC-theory compliant, but you might argue that it is not 10000000% backwards compatible.\n. By default, we would have less code executed. A custom view constructor could act like this:\n$config['layout'] = JRequest::getCmd('layout', 'customdefault');\nparent::__construct($config);\n. Not really, simply change the code in your branch and it will automatically show up in this pull request.\n. Looks good\n. Also had to change the behavior of the setRowCell function to completely replace the options of the row cell.\n. There was a bug in the rendering of row-attributes, which was fixed in this last commit. I also cleaned up the rendering function a bit. instead of having three functions to render the header, footer and body, we now have only one function that renders table areas and only switches out the changing parts, which is less code and potentially a small performance gain.\n. In the hopes that I did this right: The conflict should be fixed now.\n. Anything new on this one?\n. The added unittest for get() is for this pull request: https://github.com/joomla/joomla-platform/pull/336 and will not pass completely on this code base.\n. Don't know if you are right, but agreeing with you on this one. :-) Done.\n. Added a few more unittests for JView\n. Sorry, but which component specific logic do you mean?\n. I kindly ask you to reconsider. This change is extremely usefull for every developer out there and it especially allows existing extensions to use this feature without any change.\nRegarding #1: What kind of buy-in do you expect from the CMS? So far there is quite a lot of positive feedback on the mailinglist regarding this, so I would consider this a good addition.\nRegarding #2: I looked for a short and concise event name, so this is what came up. I would rather not change it to something like in JModelForm, which I think is pretty long and to specific aimed at \"content\".\nRegarding #3: I don't see the complete refactor of the MVC triad happening in Joomla 2.5 and I'm happy to scrap this feature again when the new implementation is there. However, for the time being, its an unobtrusive and simple way to greatly boost the flexibility. If this does not get into 2.5, it means that most extensions wont be able to use it for the next 18 months.\nThis feature for me is a pretty crucial part of the JGrid implementation, since it allows me (and several other extensions) to drop our own user-list view and instead augment the existing user manager or extend the details listed for an article in the article list view. \nPlease reconsider this request.\n. I don't want to start making this into a discussion forum, so the short answer is: Try to override a class/view two times. My usecase is a shopping component and a forum component, which both want to display data in the user list view. The first one wants to show open/closed orders and the second one wants to show the number of postings from that user. This currently is not possible, with the combination of JGrid and this pull request, it would be.\n. You are retrieving the image properties including the attributes bit. Is it expected behavior, that JImage practically clears the metadata of an image? I'm not 100% sure about this, but here is my case: Consider someone is uploading his holiday pictures with a copyright notice and maybe a GPS position and the gallery used for that resizes the image and what not. After the resizing, the metadata would be gone as far as I can see, or am I wrong? Basically, if there is a possibility to wipe the data, but keep it on demand, that would be great...\n. Why can't you use getProperties()?\n. I would vote against this feature. I thought about this feature, too, but decided against it, because I don't think that you could forsee all the ways people will want to use this. One specific issue that I see is, that we could have two plugins trying to modify the same cell after JView filled it with a function callback. The result would be that the first function would have to get the cell content, execute the function, replace whatever it wants to replace in the output, write that back into the cell and the second plugin first has to check if it has to act upon a callback or a string, which will raise confusion.\nThe last question for me would be, what we are gaining by this. Delaying the function call only does just that. I don't see how it will give us an advantage in the later process.\n. looking at uniqid() on php.net, I can't see any description how long a unique ID generated by this function is. However, I would disagree with your statement, that using an MD5 hash on the result of uniqid() reduces entropy. The few generated IDs that were in the comments of uniqid(), were pretty short, which makes it not very probable, that there would ever be a collision between MD5 hashes of two uniqid() results.\nI would grade the benefits of having a fixed-length session ID over the tiny possibility of a hash collision of two calls to uniqid(). We are speaking of maybe even millions of simultaneously open sessions...\n. Ok, will change the new line at the end. Regarding the underscore: Since the variables are not new and might be used somewhere, I didn't want to change them. Remember that its basically just removing the inheritance and copying the code into the child-class. But if you want, I can change it anyway.\nI will also take a sweep and look at all classes that might extend JObservable.\n. Refactored JEditor and JAuthentication. I didn't update my sniffs yet, but the files should all have an empty line. Can you decide on renaming the properties?\n. Added the tests back in and resolved the conflicts. This should merge now. Could you try again?\n. done\n. Thanks Michael for your work. Merged that into this.\n. I'm running the unittests on Windows with Apache and I get a whole range of errors. The last two commits should fix a large range of those.\n. This last commit fixes a bug in the JCacheStorage unittests. The setup method is called only after the casesGetinstance method was called, marking all storage engines as not available.\n. Our unittests are not very stable and failures differ from system to system. You have two failures, I have 20 on my system in this branch. On staging I have more than 30. On the other hand, the unittests run to the end on my system, while joomla-jenkins seems to have issues where unittests are failing completely. I think it would be good to have some coding guidelines for unittests, for example that all included classes are handled by JLoader where possible and that setup() is used for creating an object in $this->object or $this->o.\nRegarding the two tests mentioned by you: These two tests are not touched by this pull request. They are already broken in the staging branch.\n. The 20 issues on my system are related to JCacheStorage, JDatabaseMySQLExporter, JForm and JDatabaseQuery, mostly toString() stuff and path issues.\nI would agree that the dependencies should be reduced as much as possible. When you posted about the fatal errors of these unittests on your system, it looked to me like some files were included twice, so my proposal towards standardizing on JLoader was an attempt to prevent loading a file more than once. It would be one solution to that problem, most likely not the best one.\n. Ok, JFormFieldEmailTest.php and JFormFieldEMailTest.php are two different files on Linux. ;-) Deleted the first one, lets see if the unittests work again.\n. I've installed Ubuntu with a LAMP stack and phpunit and I can't reproduce a fatal error that joomla-jenkins is seeming to have with this branch.\n. Closing this pull request. I'm going to split it up into a series of smaller ones to make this more manageable.\n. Which code style errors do you mean? The ones mentioned by joomla-jenkins are present in the current joomla platform repository and have nothing to do with my pull request. At least the current sniffs don't report any errors on my system for controller.php\n. If you look at the diffs, I didn't change anything coding style related that wasn't in there in the first place.\nI also fixed JModel and JView to optimize it like JController\n. All this is in the unittest, not in the platform code. So far, the unittests were excluded from the coding standard... If that is not the case anymore, we have a serious big task at hand. There is not a single file in the /tests folder that adheres to the coding standard.\n. <Insert a long rant about coding styles here>\nI've changed the files as much as I thought was necessary. I did not add all the doc strings for the methods that were auto generated.\n. Nikolai, Elin asked these changes to be made. Which is why I'm pretty much confused. Either we want the coding style in the unittests, too, then we have A LOT of work to do, or we don't and the rules would be okay as long as the unittests are good and the doc blocks contain the @since tag.\n. I would even go a few steps further and not put \"else {\" on a new line, the same with the opening bracket of foreach, but this is already tons better than before. Please accept this! :-)\n. To base my +1 with a bit more substance than just \"I like it\": I'm developing on a 15\" notebook here, since I'm jumping around between customers. Having seperate lines for every curly brace means a considerable amount of screen space is \"wasted\" for these. With this proposal, I simply have more code on my screen at a time, which makes developing for me easier.\nRegarding my earlier statement to also pull the \"else\" behind the closing bracket, I'm not sure about that anymore. Yes, I'm acustomed to that and like it a lot, on the other hand its stupid to have seperate rules for if-statements in contrast to everything else. Basically, I would like to see the rule: No return before an opening curly bracket, one return after an opening bracket, closing brackets always have their own line. That would keep the rules simple and the code would look quite a lot like what I'm used to. But then again, that is just what I'm acustomed to, so its a matter of taste.\n. I'm currently pretty busy, but I will get to this shortly after new year.\n. ok, took another look and I will create a new branch with just the deprecations in it.\n. The new request is #677 Closing this one.\n. Its exactly for that purpose. It reduces the number of str_replace that we have to use in the unittests to make the path comparisons work on Windows systems. Without this change, I have up to 50 failures in the testsuite. Since PHP is handling this otherwise well, this is just for the unittests and not for the normal applications.\n. Theoretically I agree, that we need a test helper for path comparisons, but why shouldn't we make sure that the constants that we use are made consistent on all platforms for comparisons already?\n. Besides that, this pull request also fixes two other issues in unittests, that raise the code coverage by a bit.\n. The $d is actually an error on my side. Let me fix that and then lets see again if we can simply re-open this request. :-)\n. Hmm, looks like the correct way would be to use realpath(). So lets see that we do this with realpath() then...\n. It was not really covered by a test before, only one test ran with throwing an exception for getInstance(). I'm going to try to fill these unittests in the coming days with real tests as far as possible.\n. Since I f**ked up this branch, I created a new branch and a new pull request. See #907. Closing this one.\n. I've tried to find the errors that joomla-jenkins is reporting, but wasn't able to reproduce this on my virtual machine running on Ubuntu. In order to solve this, I think I need the error logs of joomla-jenkins. Maybe the errors could be posted into his comments, so that a contributor can directly fix those?\n. Because otherwise the unittest would not run. Maybe we should have that jimport() in the bootstrap?\n. Removed them again.\n. This pulltester shows the test to pass and without failures or error: http://elkuku.github.com/pulltester/pulls/518.html\n. Changed it to require_once. That should fix it hopefully... That bug is in the current platform code, too.\n. Closing this pull request, since it seems that it is partially superseeded and it most likely will be easier to create the unittests completely new.\n. I've tried to find the errors that joomla-jenkins is reporting, but wasn't able to reproduce this on my virtual machine running on Ubuntu. In order to solve this, I think I need the error logs of joomla-jenkins. Maybe the errors could be posted into his comments, so that a contributor can directly fix those?\n. Lets see if this works now.\n. done.\n. Closing this pull request. There were too many changes and its going to be easier to run that create-unittests process over all of this again and start over.\n. This pulltester shows the tests to pass and no errors: http://elkuku.github.com/pulltester/pulls/523.html\n. I was assuming that you only have to do that preconditions statement for the current class, so since JUpdater does not use a database connection anywhere in the code, I would have pointed ad JAdapter and its unittests to check these preconditions properly...\n. I'm closing this one, since its going to be easier to start over with the missing tests than to fix this again.\n. Looks interesting. I didn't check the functionality extensively, but I noticed three things. The first is, that you have a series of deprecated messages, which you marked with 11.3. As I understood it, the deprecation marking means the version where it is removed, which would be the next release in your case. The second thing is, that it seems as if something went wrong while merging in the media package. There are two files with a few strange lines at the top. The last thing is an added jimport for JLog in JRegistry. I learned that recently, too, that JLog does not get a jimport anymore, since it is loaded in the bootstrap of the framework.\n. Broken files in media package:\n/libraries/joomla/media/image.php\n/libraries/joomla/media/imagefilter.php\nunnecessary jimport('joomla.log.log'):\n/libraries/joomla/registry/format/json.php\n. to 1.: I will take a look at JCategories. I'd actually like to write a new JNode/JTree which JCategories and also JMenu can use to build upon, unifying all this a bit more (and making development a bit easier from my POV)\nto 2.: Yes, it might be cheating, but I already invested quite some time to write unittests for those two classes and their code is so broken that I was unable to get proper unittests that also passed without rewriting both classes. It is similar to the JObserver/JObservable classes.\nto 3.: will do shortly.\nto 4.: Can I make a pull request against the CMS repo for that?\n. Here is the pull request on the CMS: https://github.com/joomla/joomla-cms/pull/144\n. Should be fixed now.\n. I also changed JPathway and tested it completely now. For that I added an Inspector class for JApplicationHelper, which will ultimately be used for testing that class and several other classes, too. (f.ex. JRouter)\n. I thought I already caught all those. Now those should be fixed.\n@Rob None of the unittests are in the platform coding style. Should that be changed?\n. fixed\n. Ok, this gets annoying. How complicated can it be to get this right? Anyway, the tests now pass on my end. Please try again. And if you are at JAB, I owe you all a beer.\n. How about adding this part in the array definition in line 1417? These expressions could also execute in the code above and make it more obvious, that the whole dataset is generated in those lines.\n. Instead of having the check in line 390, you could simply replace that with this changed line for line 399:\nphp\nreturn call_user_func_array($classModel, (array) $args);\n. Since that if block is in so many places and we already had a big copy/paste \"bug\" here, wouldn't it be better to move this code into a method of JImage and JImageFilter? it would make every function 4 lines shorter and if we ever thought that instead of JMediaException we want to have a JImageException or something like that, we would only have to change it in one place...\n. I added the underscore in order to keep it in the style of the rest of the class. Should this be changed in this case?\n. Done\n. ",
    "ramdesh": "Sorry I didn't notice the comments on this. I looked at the code from the other pull request and it seems cleaner. :) Anyway, no problem, of course you should go for the better solution.\nThanks!\n. I added a pull request for this as well... https://github.com/joomla/joomla-platform/pull/30\n. ",
    "chdemko": "In the test I have I've done 4-5 months ago, the performance gain was about\n20% on the sample data. I will redo the tests and post here the results\n2011/6/11 LouisLandry \nreply@reply.github.com\n\nChristophe, in your issue you claim there is a performance improvement.  If\nit takes up 20% before, what does it take up after?  I tend to agree with\nHannes here, unless we can assert that the object coming out of the\nstringToObject() methods is always acceptable as the internal data structure\nof a JRegistry object.  If that is the case then we are indeed doing double\nwork.  Perhaps that is something worth exploring?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/43#issuecomment-1352615\n. After doing benchmark (http://code.google.com/p/webgrind/) on sample data using the home page: here are the results\n-JRegistry::loadString takes about 24% of the running time before applying patch (total time is 530 ms) on my laptop\n-JRegistry::loadString takes about 4% of the running time after applying patch (total time is 424 ms) on my laptop\n\nSee\nhttp://joomlacode.org/gf/download/trackeritem/24472/66248/Capture-webgrindof-home-chdemko-public_html-trunk-index.php-MozillaFirefox.png\nhttp://joomlacode.org/gf/download/trackeritem/24472/66249/Capture-webgrindof-home-chdemko-public_html-trunk-index.php-MozillaFirefox-1.png\n. This has not to be closed\n. It seems I have made some mistakes between my fork/branches. Please do not take this pull request into account before end of august.\n. Closing the issue for the moment (coming back from holidays at the end of august)\n. This patch could break some compatibility with 3rd party extensions (that use TableMyName for classes name)\nYou could add\n     if ($table = $this->_createTable($name, 'Table', $options)) {\n       return $table;\n     }\nafter\n     if ($table = $this->_createTable($name, $prefix, $options)) {\n       return $table;\n     }\nto keep compatibility and to give priority to table with namespace\n. @rvsjoen Any news on this (the pull request cannot be merged)?\n. This patch is not update w/r to current trunk\n. Pull request is not against staging\n. See https://github.com/joomla/joomla-platform/pull/397\n. @tampe125 The pull request cannot be merged\n. @rvsjoen The pull request cannot be merged\n. Thanks for the pull request. Could you add some unit tests on this new feature?\n. Fixed in #558\n. It remains an issue in your code:\nif this code is executed:\n$db->setQuery('select * from jos_content');\nvar_dump($db->loadNextRow()):\n$db->setQuery('select * from jos_categories');\nvar_dump($db->loadNextRow()):\nWe will have the 2 first articles while we are looking for the first article and the first category. I think, it lacks a line in setQuery such that\n$this->cursor = false;\n. $db->query() reset the cursor, sure, but in my example code, it is only called during the first $db->loadNextRow(), the second one does not call it since $this->cursor is not empty\n. No more input for this?\n- Adding a $this->cursor = false; in setQuery\n- Adding a protected $cursor; in JDatabase\nAlso it remains checkstyle errors\n. See #813\n. @jonnsl The pull cannot be merged\n. It's because they have been ran when base code was buggy\n. ok closing this issue\n. yes because it's the case where the button is inactive\n. This should be also related to http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=27142\n. This pull request is now RTC on the CMS tracker. It can be committed here.\n. Lines length changed\n. This has been tested successfully in JBS. Ready to commit here\n. Test case added\n. JBS is now OK with this one\n. Ok I'm going to do so\n. New patch proposed that uses the JLoader::discover method\n. Closing this one. The MVC will be reworked after 11.4\n. unit tests added\n. Waiting from http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26439 for a new solution\n. In fact there are 2 errors:\n-in the JHtmlJGrid:action method which is calling JText:: with empty strings\n-in JLanguage:: which should detect an empty string as its first arg\n. I don't see any objection to accept this pull request\n. Would it be possible to put all files concerning a connector in a folder named\nlibraries/joomla/database/database/connector\ni.e. for mysql:\nlibraries/joomla/database/database/mysql\nand name these files\nlibraries/joomla/database/database/mysql/driver.php: define class JDatabaseMysqlDriver\nlibraries/joomla/database/database/mysql/exporter.php: define class JDatabaseMysqlExporter\nlibraries/joomla/database/database/mysql/importer.php: define class JDatabaseMysqlImporter\nlibraries/joomla/database/database/mysql/query.php: define class JDatabaseMysqlQuery\nwhen a JDatabase::getInstance or JDatabase::getConnectors is called, do a JLoader::discover('JDatabase'.$type, dirname(FILE) . '/' . $type);\nand replace\n$class = 'JDatabaseDriver' . ucfirst(trim($type));\nby\n$class = 'JDatabase'.ucfirst(trim($type)).'Driver';\n. Hi Hannes,\nCould you please update your branch (patch cannot be applied)\n. Works for me. It remains some issues in the unit test due to https://github.com/joomla/joomla-platform/commit/92070fc1183813308145e0cc6fce8f7959eac0fe\n. We can imagine a plugin that injects some fields in a form and these fields have to be stored in an external table (mapping between articles for instance). When the onContentBeforeSave and onContentAfterSave are triggered, the plugin cannot access to these fields since they have been filtered by the bind method (it uses getProperties which returns only the declared fields table).\n. @benharold We cannot authorise the . (dot) character and : (semi-column) in id: it will forbid css styling\nif id is 'abc.def-ghi_jkl:hover'\nthe css rule would be\n```\nabc.def-ghi_jkl:hover\n```\nwhich does not correspond to an id=\"abc.def-ghi_jkl:hover\" but corresponds to id=\"abc\" class=\"def-ghi_jkl\" and the mouse over the element\n. I know that but it forbids css styling\n. Is it fully compatible with all browsers?\n. @garyamort The pull request cannot be merged\n. The pull request cannot be merged\n. @jmcameron The pull request cannot be merged\n. Running tests on my linux laptop:\nPHP 5.3.8 (cli) (built: Sep 28 2011 17:14:01) \nCopyright (c) 1997-2011 The PHP Group\nZend Engine v2.3.0, Copyright (c) 1998-2011 Zend Technologies\n    with Xdebug v2.1.2, Copyright (c) 2002-2011, by Derick Rethans\nmysql  Ver 14.14 Distrib 5.5.14, for Linux (x86_64) using readline 5.1\nThere were 2 failures:\n1) JCacheTest::testStoreAndGet with data set \"simple\" ('output', array(600, 'file'), 42, '', 'And this is the cache that tries men\\'s souls', false)\nShould store the data properly\nFailed asserting that boolean:false is true.\n2) JCliTest::test__construct\nDispatcher property wrong type\nFailed asserting that string:foo is an instance of class \"JDispatcher\".\nFAILURES!\nTests: 2350, Assertions: 10741, Failures: 2, Incomplete: 544, Skipped: 75.\n. Hannes, could you correct the code style errors?\n. Mea Culpa, Hannes is right, these code style errors are present in the code of Joomla! and not in its code.\n. @Hannes,\nThere is already a JControllerInspector class in  tests/suite/joomla/application/component/JControllerHelper.php, it's better to add your __set and __call method in this class.\n. Your field type display only an image but does not give the possibility to get it from the user. And there is already the JFieldMedia class which does this stuff.\n. There were no errors, the rules were buggy\n. See http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=27141 for CMS testing\n. This has been tested on the CMS and is ready to commit here before committing into the CMS\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=27141\n. :-1: for me. We cannot change coding style every month.\n. :+1:\n. It could be cool if it allows the use by other package: when we will move some classes to the CMS, the autoloader could search also in the joomlacms folder\n. I've proposed an enhance version for splitting a camel based class name there https://github.com/chdemko/joomla-platform/blob/b7ec1b386f09c7cf5e7f2202247a69bbaa5b3c96/libraries/joomla/string/string.php#L84\n. The current language is obtained by\n$lang = JFactory::getLanguage();\nand its code is obtained using\n$lang->getTag();\nIs it what you want?\n. I've proposed another solution for this fix: ignore var/function beginning with _ if they are marked deprecated\nSee https://github.com/joomla/joomla-platform/issues/501\n. @Louis, it will work for instance vars but PHP does not have (yet) __getStatic and __setStatic method to handle class vars\n. With this pull request, the JController::getInstance is no longer tested (using phpunit --coverage-html /tmp/report). It was tested before.\n. We have to think about a more global way to automatically load library language files. For the CMS 2.5, we will add these strings in en-GB.lib_joomla.ini\n. Close #343\n. The pull request cannot be merged \n. yes\n. I think it's because we have written some new lines in the old files\n. It was in https://github.com/joomla/joomla-platform/pull/595\n. I would prefer to have a directory structure like this:\nlibraries/database/engine/mysql/server.php (JDatabaseEngineMysqlServer class)\n                               /query.php (JDatabaseEngineMysqlQuery class)\n                               /exporter.php (JDatabaseEngineMysqlExporter class)\n                               /importer.php (JDatabaseEngineMysqlImporter class)\nlibraries/database/engine/postgres/server.php (JDatabaseEnginePostgresServer class)\n                                  /query.php (JDatabaseEnginePostgresQuery class)\n                                  /exporter.php (JDatabaseEnginePostgresExporter class)\n                                  /importer.php (JDatabaseEnginePostgresImporter class)\nThis will allow the Joomla! autoloader to work without jimport and this will be easier for maintaining db engines (one folder for one engine).\n. 'engine' or 'driver' as you want, my main concern was about files structure\n. Fixed in #906\n. Some questions and remarks:\n- why some properties are private (cannot be accessed if class is extended)?\n- change comments to be 12.1\n- it's better to use 2 arrays for caching (performance issue)\n- we can use new static in php 5.3 for late state bindings (if class is extended)\n. @juliopontes Could you please update your pull request to get it merged?\n. @juliopontes update with\n@since  12.1\nand\nnew static;\nin getInstance\n. Please, could you change the @ since in the tests also + call new static in getInstance  https://github.com/joomla/joomla-platform/pull/612/files#L0R323\n. I'm much in favor to find a solution modifying only CMS files since there could be backward compatibility issues. I've proposed a patch there http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26582\n. @Ian: not necessarily: in my code, I call $dbo->getDateFormat() in the toSQL() method\n. no because they are stored in the 'fields' folder instead of the 'field' folder (note the \"s\").\n. This code is not buggy. The assignment is done inside the test.\n. @realityking For fixing the unit test: https://gist.github.com/1868665\n. I think we can find a global solution for these $_name protected variables:\nin JObject\n```\n/\n * magic get method\n \n * @param   $propertyName  Property name\n \n * @return  mixed  the property value\n \n * @since   12.1\n * @deprecated in 12.3\n /\npublic function __get($propertyName)\n{\n    if ($propertyName[0] == '_' && property_exists($this, $newPropertyName = substr($propertyName, 1)))\n    {\n        JLog::add(get_called_class() . '::$' . $propertyName . ' will be deprecated in Joomla! 12.3. Use ' . get_called_class() . '::$'. $newPropertyName . ' instead.', JLog::WARNING, 'deprecated');\n        return $this->$newPropertyName;\n    }\n    else\n    {\n        // Trigger an error\n        return $this->$propertyName;\n    }\n}\n/\n * magic set method\n \n * @param   $propertyName  Property name\n * @param   $value         Property name\n \n * @return  void\n \n * @since   12.1\n * @deprecated in 12.3\n /\npublic function __set($propertyName, $value)\n{\n    if ($propertyName[0] == '_' && property_exists($this, $newPropertyName = substr($propertyName, 1)))\n    {\n        JLog::add(get_called_class() . '::$' . $propertyName . ' will be deprecated in Joomla! 12.3. Use ' . get_called_class() . '::$'. $newPropertyName . ' instead.', JLog::WARNING, 'deprecated');\n        $this->$newPropertyName = $value;\n    }\n    else\n    {\n        $this->$propertyName = $value;\n    }\n}\n```\nAn in all descendant classes of JObject, we can rename $_name protected variable to $name (this will ensure backward compatibility)\nThe same can be applied to other \"base\" class as JCacheController and so on\n. @elkuku Any news on this?\n. This looks good to me\n. @vietvh Any news on this?\n. Going to review this pull request and merging if good for me\n. Fixed by #676\n. Could you propose a solution that include the test on empty($this->_name) ? ie:\nif (empty($this->_name))\n    {\n        if (array_key_exists('name', $config))\n        {\n            $this->_name = $this->name = $config['name'];\n        }\n        else\n        {\n            $this->_name = $this->getName();\n        }\n    }\n    else\n    {\n        $this->name = $this->_name;\n    }\n. It could have been set in the declaration of the class\n. Fix #667\n. @bigbangireland The pull request cannot be merged\n. Your solution does not work because you don't use late static bindings (http://www.php.net/manual/en/language.oop5.late-static-bindings.php) which is not available in php5.2\n```\n<?php\nclass JForm {\n    public static function getInstance() {\n        return new self();\n    }\npublic static function getInstance2() {\n    return new static();\n}\n\n}\nclass JForm2 extends JForm {}\necho get_class(JForm2::getInstance());  // JForm\necho get_class(JForm2::getInstance2()); // JForm2\necho get_class(JForm::getInstance2()); // JForm\n```\nThe right solution would be to use new static which is not avaliable in php5.2\nCould you change your code and propose this modification for platform 12.1\n. See #672\n. Fixed in #1144\n. Whe did you change the installer library?\n. @marcel-kanter Any news on this?\n. @marcel-kanter Could we close this pull request for the moment? Feel free to reopen it if new code is ready to test.\n. @marcel-kanter you can propose code to implement this redesign but keeping backward compatibility\n. In fact we could have these attributes as public and read-only by only adding\n/**\n * Magic method to get a protected field\n *\n * @param   mixed  $name  Name of the protected field to retrieve.\n *\n * @return  mixed  The protected field\n *\n * @since   11.4\n */\npublic function __get($name)\n{\n    if (property_exists($this, $name))\n    {\n        return $this->$name;\n    }\n    else\n    {\n        return null;\n    }\n}\nto these classes (keeping the protected keyword)\n. I think it will be for P!12.x (need to release P!11.4 for now)\n. I had also this idea: define a common xml database schema and use xslt to translate this schema into mysql, postgresql, sqlazure, ...\n. See\nhttp://xml2ddl.berlios.de/\nhttp://erw.dsi.unimi.it/\nhttp://www.omg.org/mda/mda_files/Model-Driven_Architecture.pdf\nhttp://www.omg.org/spec/XMI/2.1.1/\n. Except the comment above, all is ok for me. Should implement test with option 'with-data'\n. @infograf768 The tests are still failing: it is due to an error in php https://bugs.php.net/bug.php?id=48147. In fact it depends on the library used for the iconv function. Some use\n- libiconv (windows system)\n- glibc (linux/unix system)\n- ...\nThis code (replace the transcode method) pass the unit test:\nhttps://gist.github.com/1877210\nCould you ask TT to test it ?\n. @infograf768 Just update your remote patch-4 branch on github\n. @oc666 Any news on this?\n. @elkuku Any news on this?\n. The pull request cannot be merged\n. Would it be simpler to add these functions (and thus restrict the 'part' value)\npublic function year($date)\npublic function month($date)\npublic function day($date)\npublic function hour($date)\npublic function minute($date)\npublic function second($date)\npublic function microsecond($date)\n?\nAllowing to precise the 'part', developers could use some mysql functions that could not exist in other db engines\n. @sseshachala The pull request cannot be merged.\n. it remains 2 unit test errors\n. @hieblmedia There remains 3 errors for the code style\n. @realityking  there are unit tests failure\n. @realityking See https://gist.github.com/1746576\n. I can't remember why. I've also added some unit test for the JDate case\n. @realityking do you want to continue on this issue?\n. There is an issue while trying to merge:\n\"Your merge target has changed since we cached the merge commit - try the merge again \"\nCould you update your branch to the current head?\n. @signotorez Could you please close this pull request and open a new one?\n. @signotorez Any news on this (see ianmacl comment)?\n. @realityking, access is moved from protected to public (not the inverse)\n. @pasamio: it is a very good idea but it leads to implement the cloning of objects as I wanted to allow nested loops query. Code has been updated for this purpose.\n. @realityking, we can add multiple interface to the JDatabase class. In fact Sam's remark is relevant: the purpose of iterating through a database is to browse the query results\n. @ianmacl I've added backward compatibility for old instance properties and I've reorganized unit tests\n. @eddieajau this was my primary idea (see https://github.com/joomla/joomla-platform/pull/813#issuecomment-3734335). I can come back to the original idea (implementing a JDatabaseIterator class). What do you mean by \"pages\" of data ?\n. @eddieajau See #903\n. Closing this one. See #903\n. @elinw What problems are raised by mixing JLoader::register and jimport ? + pull request cannot be merged\n. See #610\n. @realityking tests/suite/joomla/application/JApplicationWebTest.php:150\nChange JWebClient to JApplicationWebClient\n. The groups of a user are now of the form:\narray($groupId1 => $groupId1, $groupId2 => $groupId2, ...)\nSee\nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/table/user.php#L112\nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/table/user.php#L162\nYou can use that code  for setUserGroups\nhttps://gist.github.com/1751107\n. Change only your code in your branch and push it on your remote repo\n. @jamesmoey Any news on this?\n. We could add a method to JDatabase\npublic function isSupported()\n{\n    return version_compare($this->getVersion(), static::$dbMinimum) >= 0;\n}\nAnd define in JDatabase\nabstract public function getVersion();\n. BTW, we have to upgrade to mootools 1.4.4 and to simplepie 1.2.1\n. @elinw +1\n. Fixed in code\n. I would replace\ndefined('JPATH_PLATFORM') or die;\nby\ndefined('JPATH_BASE') or die;\nin libraries/{joomla/form/fields \u2192 cms/form/field}/user.php\n. @nonumber The pull request cannot be merged\n. The pull request cannot be merged (libraries/joomla/log/loggers has been renamed to libraries/joomla/log/logger)\n. Please add @since 12.2 to all your test functions\n. Can you please make all references to 12.1 to be 12.2 and add @since to your test methods \n. @LouisLandry Rebasing is done\n. The unit test are failing\n. @elinw it is done by https://github.com/chdemko/joomla-platform/blob/2456b71274c0022871f9210cb1122a1fd06cad61/libraries/joomla/access/access.php#L249\n. see #803\n. @eddieajau Ok, I'm waiting #906 for being committed before continuing that way\n. @eddieajau Pull request updated. (I will be offline until 5 of March)\n. @robschley It was a mistake in my code (updated now)\n. @robschley @eddieajau @LouisLandry @realityking \nThe branch is ready for review\n. I have removed the 'pages' classes as it could be replaced by a generic JIteratorPages class (to be defined later, but not in this pull request)\n. Everything seems ok to me except the file tests/suite/joomla/database/database/JDatabaseMySQLTest.php:114\n$this->isInstanceOf('JDatabaseMySQL'),\nought to be\n$this->isInstanceOf('JDatabaseDriverMysql'),\nThe tests on the database have to be redesigned anyway.\n. @LouisLandry In fact the unit tests do not success if I have a tests/config_mysql.php file (This is why I propose this modif in the unit test)\n. Tests are running successfully here\n. @ianmacl see #803 and #707\n. I think we can go on with that one\n. You have to correct some coding style:\n``` none\nFILE: ...hdemko/Code/php/joomla/platform/git/libraries/joomla/database/query.php\n\nFOUND 10 ERROR(S) AFFECTING 7 LINE(S)\n68 | ERROR | No space found after comma in function call\n   80 | ERROR | The comments for parameters $elements (1) and $glue (2) do not\n      |       | align\n   80 | ERROR | Expected 2 spaces after the longest type\n   80 | ERROR | Expected 2 spaces after the longest variable name\n   88 | ERROR | Expected \"if (...)\\n...{...}\\n...else\\n\"; found\n      |       | \"if(...)\\n...{...}\\n...else\\n\"\n   97 | ERROR | No space found after comma in function call\n  102 | ERROR | Please put a space between the // and the start of comment\n      |       | text; found \"//Won't add the glue on the first element\"\n  103 | ERROR | Expected \"if (...)\\n...{...}\\n...else\\n\"; found\n      |       | \"if(...)\\n...{...}\\n...else\\n\"\n  103 | ERROR | The use of function sizeof() is forbidden; use count() instead\n 1479 | ERROR | No space found after comma in function call\n\n```\n. The error in the tests is:\n```\n1) JDatabaseQueryElementTest::test__Construct with data set \"array-element\" (array('FROM', array('field1', 'field2'), ','), array('FROM', array('field1', 'field2'), ','))\nLine 173 elements should be set\nFailed asserting that two arrays are equal.\n--- Expected\n+++ Actual\n@@ @@\n Array (\n     0 => 'field1'\n-    1 => 'field2'\n+    1 => ','\n+    2 => 'field2'\n )\ntests/suite/joomla/database/JDatabaseQueryElementTest.php:174\n```\n. When I run the unit test with a tests/config_mysql.php file, I got some errors:\n```\nThere were 9 failures:\n1) JDatabaseMysqlTest::testGetAffectedRows\n158\nFailed asserting that 0 matches expected 4.\n/home/chdemko/Code/php/joomla/platform/git/tests/suite/joomla/database/database/JDatabaseMySQLTest.php:159\n2) JDatabaseMysqlTest::testLoadAssoc\n312\nnull does not match expected type \"array\".\n/home/chdemko/Code/php/joomla/platform/git/tests/suite/joomla/database/database/JDatabaseMySQLTest.php:313\n3) JDatabaseMysqlTest::testLoadAssocList\n339\nFailed asserting that two arrays are equal.\n--- Expected\n+++ Actual\n@@ @@\n Array (\n-    0 => Array (...)\n-    1 => Array (...)\n-    2 => Array (...)\n-    3 => Array (...)\n )\n/home/chdemko/Code/php/joomla/platform/git/tests/suite/joomla/database/database/JDatabaseMySQLTest.php:340\n4) JDatabaseMysqlTest::testLoadColumn\n361\nFailed asserting that two arrays are equal.\n--- Expected\n+++ Actual\n@@ @@\n Array (\n-    0 => 'Testing'\n-    1 => 'Testing2'\n-    2 => 'Testing3'\n-    3 => 'Testing4'\n )\n/home/chdemko/Code/php/joomla/platform/git/tests/suite/joomla/database/database/JDatabaseMySQLTest.php:362\n5) JDatabaseMysqlTest::testLoadObject\n408\nnull does not match expected type \"object\".\n/home/chdemko/Code/php/joomla/platform/git/tests/suite/joomla/database/database/JDatabaseMySQLTest.php:409\n6) JDatabaseMysqlTest::testLoadObjectList\n465\nFailed asserting that two arrays are equal.\n--- Expected\n+++ Actual\n@@ @@\n Array (\n-    0 => stdClass Object (...)\n-    1 => stdClass Object (...)\n-    2 => stdClass Object (...)\n-    3 => stdClass Object (...)\n )\n/home/chdemko/Code/php/joomla/platform/git/tests/suite/joomla/database/database/JDatabaseMySQLTest.php:466\n7) JDatabaseMysqlTest::testLoadResult\n489\nFailed asserting that null matches expected 2.\n/home/chdemko/Code/php/joomla/platform/git/tests/suite/joomla/database/database/JDatabaseMySQLTest.php:490\n8) JDatabaseMysqlTest::testLoadRow\n515\nnull does not match expected type \"array\".\n/home/chdemko/Code/php/joomla/platform/git/tests/suite/joomla/database/database/JDatabaseMySQLTest.php:516\n9) JDatabaseMysqlTest::testLoadRowList\n543\nFailed asserting that two arrays are equal.\n--- Expected\n+++ Actual\n@@ @@\n Array (\n-    0 => Array (...)\n-    1 => Array (...)\n )\n/home/chdemko/Code/php/joomla/platform/git/tests/suite/joomla/database/database/JDatabaseMySQLTest.php:544\nFAILURES!\nTests: 3080, Assertions: 4427, Failures: 9, Incomplete: 673, Skipped: 149.\n```\n. It's only for keeping same visual output\n. It could be a good idea to change the README.markdown file (requiring PHP 5.3.1)\n. http://a.com/?a=\u00e9\nftp://user:abc\u00e9@example.com/\ndoes not pass the tests\nSee https://gist.github.com/2244092 \n. The pull request cannot be merged. Could you try this url on windows:\nhttp://mydomain.com/path/\u9053\nOn linux php 5.4.3,\nit output\narray(3) {\n  'scheme' =>\n  string(4) \"http\"\n  'host' =>\n  string(12) \"mydomain.com\"\n  'path' =>\n  string(9) \"/path/\u9053\"\n}\nwhich is correct\n. See #1285\n. Reworking unit test for testing remote file system\n. @AmyStephen \n\"This is beautiful. Once we learn how to use JFileSystemElement - that should be very powerful.\"\nLook at the manual (not already complete but will be done next days)\n\"Any reason not to simply bring in Jxmlelement? Appears to be the only dependency.  \"\nI don't understand what you are meaning\n. I have rebased the code to avoid a lot of commit in the platform history\n. I'm not calling /tests/suites/unit/joomla/table/JTableCategoryTest.php\"\n. The pull request cannot be merged\n. #1052 has been merged\n. see #1007\n. it's just a reference to the new file system because the old one will be deprecated\n. The pull request cannot be merged\n. you have to merge with the current trunk\n. Cannnot be merged\n. In https://github.com/realityking/joomla-platform/blob/84e1804de4705399a0da16298475cec9ff52c541/libraries/joomla/form/form.php#L678\nhttps://github.com/realityking/joomla-platform/blob/84e1804de4705399a0da16298475cec9ff52c541/libraries/joomla/form/form.php#L853\nhttps://github.com/realityking/joomla-platform/blob/84e1804de4705399a0da16298475cec9ff52c541/libraries/joomla/installer/installer.php#L1893\nAnd in all tests\nReplace JXMLElement by SimpleXMLElement\n. I think the JString::splitCamelCase method ( https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/string/string.php#L83 ) function should move into this class too\n. @eddieajau not exactly:\n'ThisIsA_NASAAstronaut'\nwill generate\narray('This', 'Is', 'A_NASA', 'Astronaut')\nusing JString::splitCamelCase\nand\n'This Is A_ N A S A Astronaut'\nusing JStringNormalise::fromCamelCase\n. @realityking , could you please keep inheritance from old class names to new ones to keep B/C\n. I think this pull request does not maintain B/C: renaming JLogger to JLogLogger may lead to B/C issue. (if a 3rd party dev has developped a new logger, his code inherits from JLogger...)\nJLogger must be defined (marked as deprecated) and inherits from JLogLogger\n. I'm ok for this (not modifying the source input).\n. @realityking This pull request cannot be automatically merged.\n. @realityking could you please divide your pull request in 3 parts:\n- the access issue\n- the docblock issue\n- the logger issues\nthe Changelog will be more readable\n. @realityking , for multiple field the name is 'myname[]' (note the []) this is why you can store multiple value\n@elinw I don't see these posts. Can you post the urls here?\n. No problem to change\npreset=\"value|true\" to selected=\"value|true\"\nbut for text fields selected=\"something\" is not accurate\n. In text/textarea, the idea of preset=\"Enter your text here...\" can be used\nthe preset attribute is only for fields edited the first time (text/list/checkboxes...)\nFor examples, look at the test code\nIf values are not present in the list, they will be ignored\n. Closing this one (need to play with it)\n. See #1280\n. Except these comments, excellent idea to use variable segment to identify routes\n. For router patterns, it could be interesting to allow some special segments:\n-  means any number of segments (i.e. segment-1//:var/segment-final will match segment-1/segment-2/segment-3/segment-4/segment-final and var will be assigned to segment-4)\n- : means any segment (i.e. segment-1/:/:var/segment-final will match segment-1/segment-2/segment-3/segment-final and var will be assigned to segment-3)\nSee https://gist.github.com/2895611 for new code\n. @LouisLandry the preg_match test is about 3~4 times faster on my machine. BTW, I've updated the code in the gist\n. @pasamio the ':' is present in a lot of wikipedia url http://en.wikipedia.org/wiki/Category:Presidents_of_the_United_States\n. This was already set at the beginning of the function. What is the utility of this assignment?\n. I've removed the useless code\n. @infograf768 yes, but they are in platform 12.1\n. It is not necessary\n. Fixed\n. You have unit test and checkstyle errors \nhttp://developer.joomla.org/pulls\n- Could you post the system used for testing (os version, php version). I want to be sure this will work on every os and on php >= 5.2\n. All add* methods should return $this for chaining as stated in the docblock\n. I've replaced the code by calling JHtml::_('date', ...) without using the timezone twice\n. I know that, but how to get a true timestamp on files by not using filemtime?\n. I propose a new way: using the signature of the file folder to force update: if a file named MD5SUM exists in the file folder, append its content to the url. The content of the MD5SUM file must represent the signature of the folder, it must be generated by:\n- the 3rd party developer\n- the PLT for joomla core css/images/js folders\n. @realityking There are so many ways to detect Joomla! version (for example downloading a core js file and comparing this file)\n. At the beginning I've used filemtime for each file but it's slow (no caching). Reading the file and computing its md5 could be slow on mootools files for instance.\nAnother solution is to look at a file called\nmyfile.(js|css|img).md5 (assuming it has been creating by the third party / code developer)\n. The eval function is used to count the number of modules. Removing it simply return the string, not the count\n. You could use\n$fn = create_function(\"\", \"$str\" );\nreturn $fn();\nin place of\n```\nreturn eval($str);\n```\n. a static method could always be called using\n$this->isSSLConnection\n. I think you are mixing two PR here ...\n. You have to check for E_WARNING when you use simplexml_load_file \n. it's a good solution\n. This is not a real class since we never do new JArrayHelper. I'm for doing the same on JUtility (maybe in another pull request?)\n. Closing this one. I've to think to a better solution\n. @realityking Do we also have to use $this->_inout in JSession::checkToken?\n. ok, it's a static function, we can't use $this->_input\n. JXMLElement is now deprecated. Why do you it?\n. Could you respect correct spelling for threshold instead of 'treshold'\n. Should it be \n@package  Joomla.Examples\n?\n. Should be fwrite instead of 'frwite'\n. You could group the test using (!$this->cursor && !($this->cursor = $this->query())\n. idem as above\n. Why did you add a ?> at the end of the file?\n. you can add some parameters to JFolder::files to filters the files you need (avoiding the tests done after)\n. I think you have to get a third parameter to JLoader::register: true to force the update of the classes list in the loader\n. use self::$connectors (not self:$connectors)\n. it seems to lack a closing bracket\n. after that line, you are excluding some files (containing 'exporter, 'importer', ...). Yo can do that while you are calling JFolder::files\n. Since JRequest will be deprecated is 12.1, could it be possible to replace this code by\n$input = JFactory::getApplication()->input;\n$retreive =  isset($config['retreive']) ? $config['retreive'] : 'request'\n$format = isset($config['format']) ? $config['format'] : $input->$retreive->get('format', null, 'word');\n$command = isset($config['command']) ? $config['command'] : $input->$retreive->get('task', 'display');\nAnd change line 260\nJRequest::setVar('task', $task);\nto\n$input->$retreive->set('task', $task);\nSame code has to be changed in display function\n. For having correct unit test, you should replace\n// Convert $time to the appropriate measure\n    if (is_null($time))\n    {\n        $start = time();\n    }\n    else\n    {\n        $start = strtotime($time);\n    }\n    // Get the difference in seconds between now and the time\n    $diff = $start - strtotime($date);\nby\n```\n    if (is_null($time))\n    {\n        // Get now\n        $time = JFactory::getDate('now');\n    }\n// Get the difference in seconds between now and the time\n$diff = strtotime($time) - strtotime($date);\n\n```\nit's because time() return your local time (not the UTC one)\n. may be the return true could be replaced by a\nreturn class_exists($class);\n(in the case where the included file does not define the class; normally this should not be possible but ...)\n. I think it's better to use JHtml::('date', $date); (using the registered date function which could be different from the JHtml::date one)\n. These two lines can be replaced now by\n    JHtml::('script', 'system/highlighter.js', true, true);\n(the -uncompressed is automatically added)\n. Is it to this function to test the doc type or the calling one?\n. I agree that old code was buggy, but the new one introduce a new behavior: in the cms, when you edit a user in the administrator after applying the patch, its timezone is set to the global one (which is different of keeping the value equal to 'Use default'). I suggest to replace the code by:\n```\n    $keyField = $this->element['key_field'] ? (string) $this->element['key_field'] : 'id';\n    $keyValue = $this->form->getValue($keyField);\n// If the timezone is not set and this is a new item use the server setting.\nif (strlen($this->value) == 0 && empty($keyValue))\n{\n    $this->value = JFactory::getConfig()->get('offset');\n}\n\n```\n. should it be\nreturn $this->isOverwrite();\n?\n. should it be\nreturn $this->isUpgrade();\n?\n. all instances of JCli should be changed to JApplicationCli in this file\n. Why JDaemon is not renamed to JApplicationCliDaemon to keep consistency\n. All instances of JWeb should be replaced by JApplicationWeb in this file. Do we rename also JWebClient ?\n. See #589\n. in the words, can you have some \" ? if yes, you have to escape them\n. on the php side:\nIf your words are \narray('my', 'cool \"words\"')\nIt will generate\n}).highlight([\"my\",\"cool \"words\"\"]);\ninstead of \n}).highlight([\"my\", \"cool \\\"words\\\"\"]);\n. JUitility is used in this file. Why do you want to remove the jimport ?\n. you mean\n$terms =  str_replace('\"', '\\\"', $terms);\n. $date->format($this->_db->getDateFormat())\ncould be replaced by\n$date->toSql()\n. Checkstyle; your parameters are not aligned\n. You use array_unique here because there is an issue in JAccess::getAuthorisedViewLevels (it lacks a test in the foreach loop:). Here is the right code:\n// Find the authorised levels.\n    foreach (self::$viewLevels as $level => $rule)\n    {\n        if ($level != 1)\n        {\n            foreach ($rule as $id)\n            {\n                if (($id < 0) && (($id * -1) == $userId))\n                {\n                    $authorised[] = $level;\n                    break;\n                }\n                // Check to see if the group is mapped to the level.\n                elseif (($id >= 0) && in_array($id, $groups))\n                {\n                    $authorised[] = $level;\n                    break;\n                }\n            }\n        }\n    }\nCould you change the code in JAccess and remove your array_unique (this will rerun the test by the way)\n. I suppose\nif ($this->where)\n      {\n          $query .= (string) $this->where;\n      }\nmust be before the ($this->auto_increment_field) test\n. it's used in libraries/joomla/database/database/sqlsrvquery.php  (see file above)\n. Why do you need a.id, a.id (twice) ?\n. must be to lock ?\n. Why did you remove [$table] ?\n. So I suppose there is an issue at line 407\n$result[$table][$field->Field] = preg_replace(\"/[(0-9)]/\", '', $field->Type);\nshould be\n$result[$field->Field] = preg_replace(\"/[(0-9)]/\", '', $field->Type);\n. The parents is not selected in the new code but it's used below \n. This should be the result of the select ?\n. please use\n$query->where('folder = ' . $db->q($folder));\n. Checkstyle: Whitespace found at end of line\n. Checkstyle:\n- Whitespace found at end of line\n- Functions and classes must not contain multiple empty lines in a row; found 2 empty lines\n. there are tabs at end of line\n. there are tabs at end of line\n. use\narray_unshift($suffixes, (int)$n);\nto give priority to the more specific rule\n. if you add the array_unshift, you have to delete this line\n. Is this now deprecated ?\n. The get method is not deprecated\n. The set method is not deprecated\n. could you use\n$query->where($db->quoteName('e.type') . '='  . $db->quote('template'));\nbecause 'type' could be a reserved word in some db engine\n. add a blank between if and (\n. add a blank after each comma\n. code style: add blank line\n. Code style: add space before each *\n. code style: add blank line\n. You could use 'N\\'' . ($escape ? $this->escape($text) : $text) . '\\'';\n. You can use\ninclude_once JPATH_TESTS .  '/suite/joomla/form/inspectors.php';\n. Could we return $this to allow chaining?\n. Could we return $this to allow chaining?\n. Could we return $this to allow chaining?\n. Could we return $this to allow chaining?\n. Could we return $this to allow chaining?\n. Could we return $this to allow chaining?\n. is the leading ';' useless  ?\n. line 67\n. oops: my fault, I was misreading. Forgot that\n. I think it will be better to use two arrays:\n```\n/\n * Cached singular inflections.\n \n * The array is in the form [singular => plural]\n \n * @var    array\n * @since  11.4\n */\nprivate $_singular = array();\n/\n * Cached plural inflections.\n \n * The array is in the form [plural => singular]\n \n * @var    array\n * @since  11.4\n */\nprivate $_plural = array();\n```\nSince array_search used in _getCachedSingular performs its operation using linear search.\n. use (see https://github.com/joomla/joomla-platform/pull/612/files#r418760)\nif (isset($this->_cache[$singular]))\n{\n    return $this->_singular[$singular];\n}\n. use (see https://github.com/joomla/joomla-platform/pull/612/files#r418760)\nif (isset($this->_plural[$plural]))\n{\n    return $this->_plural[$plural];\n}\n. use (see https://github.com/joomla/joomla-platform/pull/612/files#r418760)\n$this->_singular[$singular] = $plural;\n$this->_plural[$plural] = $singular;\n. add a blank space after =\n. if JStringInflector can be extended, it's better to use (php 5.3)\nself::$_instance = new static;\n. if JStringInflector can be extended, it's better to use (php 5.3)\nreturn new static;\n. Why did you change this?\n. You can define this property static\n. in that case, use\nreturn static::$dbMinimum\n. static\n. static\n. Since the cloning could be possible, it's for avoiding useless duplicated properties\n. this is testing the pattern\nforeach ($dbo as $key => $row)\nwhich calls rewind, current, key, next and valid methods of the Iterator interface\n. I will split the tests in several methods\n. This should be\nrequire_once JPATH_PLATFORM.'/joomla/application/web/client.php';\n. you miss a 'c' ('c'lient)\n. I disagree with @mbabker : since we use the JMail class, we only have to declare\npublic $CharSet = 'utf-8';\nin our JMail class and leave PHPMailer unchanged\n. sorry for the mistake, it should be\n$this->_db->quote($past)\n. one extra space\n. Move the \u00a0param just after the comment \n* Parse a XML install manifest file.\n*\n* XML Root tag should be 'install' except for languages which use meta file.\n*\n* @param   string  $path  Full path to XML file.\n*\n* @deprecated    12.1  Use JInstaller::parseXMLInstallFile instead.\n. use self::parseXMLInstallFile\n. Replace null by void\n. Add a @ since 12.1\n. Remove extra tab\n. private properties are easier to change as they are not accessible from 3rd party classes\n. You're true, we could add a generic JIteratorPages able to iterate over any iterators.\n. Why did you remove the sprintf ?\nYou could use something like RuntimeException(sprintf(' .... %s ... %s'), $type, $format));\n. Same comment\n. Same comment\n. Same comment\n. Same comment\n. What is the utilisty of this line?\n. Keep the sprintf\n. is it necessary to keep these lines ?\n. Keep sprintf but delete remove JText\n. Keep the sprintf\n. Change type to SimpleXMLElement\n. Do you forget\nJFactory::getApplication()->input\n?\n. Do you mean\n$input->set('option', $option);\n?\n. Do you mean\n$extension = $input->getCmd('extension');\n. idem\n. Do you mean\n$viewName = $input->getCmd('view', $this->default_view);\n. idem\n. Do you mean\n$option = $input->getCmd('layout');\n. Do you mean\n$tmpl   = $input->getCmd('tmpl');\n. idem\n. Do you mean\n$tmpl = JFactory::getApplication()->input->getCmd('tmpl');\n. Why don't you use $input ?\n. Do you mean\n$asset = JFactory::getApplication()->input->getCmd('option');\n. Do you mean\n'defaultgroup' => ($group) ? $group : (isset($this->option) ? $this->option : JFactory::getApplication()->input->getCmd('option')),\n. Why don't you use\nJLoader::register('JsonSerializable', __DIR__ . '/compat/jsonserializable');\n. Idem as above\n. Please indent correctly\n. superfluous line\n. to keep B/C, we could use:\n$options['directory'] = defined('JPATH_THEMES') ? JPATH_THEMES : (defined('JPATH_BASE') ? JPATH_BASE : __DIR__) . '/themes';\n. Why do you remove this code?\n. It has only been fixed one year ago. Are we sure all browser instances have been updated in the world?\n. Why not returning $this for chaining ?\n. why not returning $this for chaining?\n. if chaining is done this could be replaced by\n$session->initialise($this->input)->start();\n. is there a B/C isssue if a 3rd party dev has used\nif (defined('JROUTER_MODE_RAW'))\n{\n    ...\n}\n. you should keep this line to keep B/C\n. you should keep this line to keep B/C\n. Why not returning $this for chaining?\n. Forcing to array will not allow to use iterators here\n. useless double parenthesis here\n. Why not returning $this for chaining?\n. This code forbids to use segments really starting with ':' and it search for ':' which is useless. Could we consider a route beginning with a double ':' for this case:\n``` php\n<?php\nif ($segment[0] == ':')\n{\n    if ($segment[1] == ':')\n    {\n        if (substr($segment, 1) != $route[$i])\n        {\n            continue 2;\n        }\n    }\n    else\n    {\n        $vars[substr($segment, 1)] = $route[$i];\n    }\n}\nelseif ($segment != $route[$i])\n{\n    continue 2;\n}\n```\n. +1\n. For me, it's more readable without the double parenthesis, but it's my point of view.\n. to escape it or to double it, but we have to allow segment starting by ':'\n. you can use $file->getExtension() != 'php'\n. you can remove this line\n. You can use spl_hash_object($options['callback']); and drop the getClosureUniqueId function\n. This is useless\n. Use JLogLogger (JLogger is deprecated)\n. 12.2\n. 12.2\n. 12.2\n. 12.2\n. 12.2\n. use === test instead of ==\n. Could you please remove this line?\n. you mean Content-Type ?\n. in that case, simply use\nif (!empty($array['articletext']))\n. No tabs in my code\n. Could we have a B/C issue by removing these constants?\n. it should be\nsimplexml_load_string('<notform><test /></notform');\n. in that case you could replace this line by\n$coptions['modulemode'] = 1;\n. why are you removing this line since you don't remove it router.php?\n. isn't it a static method?\n. static method ?\n. you could have an error here\nsimplexml_load_file produces an E_WARNING error message for each error found in the XML data. \n. check for E_WARNING\n. check for E_WARNING\n. The line is too long (checkstyle)\n. checkstyle\n. I don't understand what you mean\n. ",
    "GeraintEdwards": "A setter is a good idea (but not essential) but it would allow for unforeseen eventualities.  The only problem with the setter is how it would interact with JDatabaseQueryElement - i.e. which one of the elements would it be setting?\nYou can always simulate a setter by getting the separate element groups, calling clear and then resetting the relevant element.  e.g. in pseudo code:\n$elements = $query->where;\n// do something to elements\n$query->clear('where');\nforeach ($elements as $elem){\n   $query->where($elem);\n}\nPerhaps the last 4 lines would be the code for the __set method?\n. Just spotted that I'd put the getter in the JDatabaseQueryElement class instead of the JDatabaseQuery (now corrected).  I'm new to Git and cut and pasted the code into the Git editor and put it in the wrong place :(\n. mbstring is not a standard php extension see http://www.php.net/manual/en/mbstring.installation.php - I did a look but could not see if this was a requirement of Joomla 1.7?\nThere are ideas here http://stackoverflow.com/questions/1473441/php-checks-to-see-if-a-string-is-utf8-encoded-how that don't require mbstring\n. ",
    "gpongelli": "Close the pull request because I'm going to create a new pull request without the database file movement, concentrating only on file content changes.\nIt is better that the file movement will be made from an admin of joomla:master when that files will be in a final state for a release, to avoid commit log break because Eclipse Egit doesn't support \"--follow\" (as explained in mailing list), so actually it's a problem for me to maintain my fork synchronized with joomla:master .\n. I've already patched this issue on my postgresql branch, check it here\nhttps://github.com/gpongelli/joomla-platform/blob/postgresql/libraries/joomla/database/database.php#L975\nand here\nhttps://github.com/gpongelli/joomla-platform/blob/postgresql/libraries/joomla/database/database.php#L1010\nRelated tests with successful result are here\nhttps://github.com/gpongelli/joomla-platform/blob/postgresql/tests/suite/joomla/database/database/JDatabasePostgreSQLTest.php#L586\nand here\nhttps://github.com/gpongelli/joomla-platform/blob/postgresql/tests/suite/joomla/database/database/JDatabasePostgreSQLTest.php#L647\n. Improved my code with other tests, adding case where there are \"query\" or \"load\" calls before loadNextObject and loadNextRow.\nThey are six tests, check them from here.\n. Hi hackwar, I've erroneously marked as 11.3 because I've done a find&replace all 11.1 that I've had inside my code.\nI see that my media package has something wrong, but I've never edit there, only merged from master branch, so I don't know how it was appened. Please tell me which are these files so I can edit them.\nFor the third thing I've not understood what piece of code you're referring to, please let me know.\n. Commits added to correct highlighted issues.\n. @elin it's really strange, I continuously merge postgresql branch with fetched master branch but some of changes on master branch, not related to postgresql, seems to be lost.\n@realityking wow, how can I generate this report, so I can correct all once ?\nI'm clearing commented code, next I'll commit on my branch. What do you mean with \"rebase this\" ? \"This\" what ?\njoomla-jenkins said test log missing, which are those files so I can commit them ?\n. @all I've added some label used inside errorMsg variable, where can I add english translation of these strings ?\nan example is postgresql.php, line 71 .\nThank you!\n. is there any git command to get upstream/master and replace these files in my branch?\nHave I to modify them by hands and commit on my repo?\n. Hi Rouven,\nSorry for my double message, but today I've started to use phpcs with Sebastian rule and I've found strange behaviour.\nIn your style report I see error like \"Tabs must be used to indent lines; spaces are not allowed\" but running phpcs on my local laptop I get \"Spaces must be used to indent lines; tabs are not allowed\" .\nSo which message is correct? \nWhy same ruleset on same file gives opposite result?\nMaybe you're using another ruleset?\nThank you!\nEng. Gabriele Pongelli\nAVVERTENZE AI SENSI DEL D.LGS. 196/2003\nLe informazioni contenute in questo messaggio di posta elettronica e negli eventuali files allegati, sono da considerarsi strettamente riservati. Il loro utilizzo \u00e8 consentito esclusivamente al destinatario del messaggio, per le finalit\u00e0 indicate nel messaggio stesso. Qualora riceveste per errore questo messaggio, Vi preghiamo cortesemente di darcene notizia all'indirizzo e-mail di cui sopra e di procedere alla distruzione del messaggio stesso, cancellandolo dal Vostro sistema; costituisce comportamento contrario ai principi dettati dal D.lgs. 196/2003 il trattenere il messaggio stesso, divulgarlo anche in parte, distribuirlo ad altri soggetti, copiarlo, od utilizzarlo per finalit\u00e0 diverse.\nThis electronic transmission is strictly confidential and intended solely for the addresses. It may contain information which is covered by legal, professional or other privilege. If you are not the intended addressee, you must not disclose, copy or take any action in reliance of this transmission. If you have received this transmission in error, please notify us and delete the received data as soon as possible.\nIl giorno 15/nov/2011, alle ore 16:51, Rouven We\u00dflingreply@reply.github.com ha scritto:\n\nFor the code style stuff phpcs is used (https://github.com/sebastianbergmann/phpcs-sebastian)\nAs for rebasing, here's dome documentation on it: http://help.github.com/rebase/ But that should be the last thing to do after all is fixed.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/532#issuecomment-2746581\n. Hi Nikolai,\nI'm a mac&linux user, the problem was Sebastian code standard is not the Joomla! Coding Standard ;)\nI've solved this issue and now there are only some strange error about @package (\"found 4 spaces while needed 4\", sounds really strange).\nthis evening I'll push cleaned code.\n\nIf you're interested in joomla over PostgreSQL why don't execute platform tests and trying to install joomla cms on it? I've a joomla-cms repository, try to install my postgresql branch and pull requests on it ;) \nEng. Gabriele Pongelli\n. Code cleaned and rebased.\n@elkuku it was a problem on number of spaces.\nyes, that is my postgresql branch of cms repository, I've committed some changes inside installation folder, recently I got a problem during installation and now with this pull request I've leave out it a bit.\nbasically I've started that branch with this idea: mix the cms's master branch with libraries folder from my platform's postgresql branch adding db17 project changes.\nfeel free to check out, test, edit and pull request on it ;)\n. @mbabker I've committed a change without .DS_Store file, thank you!\n. I've done some changes inside my files, adding tests and correcting some function.\nDuring merge with upstream/master branch I've encountered too many problems, I hope to solve manually them soon and I'm sorry if they will create problems in this pull request.\n. Corrected loadNextObject and loadNextRow of JDatabase class and added relative test in PostgreSQL class.\nMerged postgresql branch with upstream/master and resolved all conflicts incoming (a day and a night spent).\n. Tomorrow I'll add again ddl file and postgresql config file.\nWhich is naming convention for these files ?\nMy PostgreSQL's config file is named \"config_pgsql.php\", have I to rename it? if yes, to which name?\n@ianmacl \nWithout config file the tests don't work, the differences between my config file and config.php are only\n- class name: JPostgreSQLTestConfig instead of JTestConfig\n- dbtype: postgresql instead of mysqli\nAs you can see here\nhttps://github.com/gpongelli/joomla-platform/commit/4be3511fc759582a4418e9eb4a55c337b0fa0ed9\nand\nhttps://github.com/gpongelli/joomla-platform/commit/6d760a520fd42c639b6532577c3b31c53b2b2bc7\nI've added some checks inside setUp function about postgresql extension loaded and if an exception is thrown during connection, to skip tests on machine where there isn't postgresql installed or configured correctly to avoid joomla-jenkins message \"There were 0 failures and xx errors ...\".\nThese checks are not present in postgresql's query because that tests don't execute database query (if I remember well).\nHow can I rebase onto current master?\nI've had some painful days merging from master to postgresql, which is the correct sequence to do this task?\nBye!\n. - Added postgresql's ddl file and configuration file\n- renamed ddl.sql to ddl_mysql.sql \n- added jimport('joomla.database.databasequery')\nI'm waiting help about how can I rebase onto current master, thank you!\n. It's really strange, I run these tests without any problem.\nMaybe it is related to $dbtype variable of config_postgresql.php file, try to change\npublic $dbtype        = 'postgresql';\nto\npublic $dbtype        = 'pgsql'; \nand let me know, but I need to investigate this issue.\n. Forget my last comment, changing $dbtype means that postgresql database file will not be found and class name will not be built correctly.\nInside setUp function of JDatabasePostgreSQLTest I've added a check for \"pgsql\" extension loaded, maybe that check generates the problem, try to comment it out.\n. @ianmacl \ntry to comment the if block from here to here so that piece of code will be like this\n/*\nif (!extension_loaded('pgsql'))\n{\n    $this->markTestSkipped('PostgreSQL\\'s extension not loaded.');\n}\n*/\nrun tests again and tell me what's happened, thank you!\n. ianmacl, I've checkout your branch locally and it works as my local branch\nOK (34 tests, 281 assertions) for JDatabasePostgreSQLQueryTest.php\nand\nOK, but incomplete or skipped tests!\nTests: 51, Assertions: 50, Incomplete: 6, Skipped: 1. for JDatabasePostgreSQLTest.php\nI suggest you to redo your changes (I was trying to do same work) because I've found some differences between your branch and mine.\nFor some tests the problem is my database state, in fact I've created joomla_ut database again and I get error 1 and failure 6 of your report, I'll investigate on them but I don't know how simulate your other problems.\nFailure 4 is about database collation, mine is setup as IT, yours EN, it's not a \"real\" failure.\nFailure 7 is same as before, I've installed 9.0.4 version of PostgreSQL database while you have 9.1.1, again it's not a \"real\" failure.\nFor all your failure seems that you don't use stubs/database.xml file as dataset.\nException error maybe is because I expect base php \"Exception\" exception and not \"JDatabaseException\", is it right?\nAbout getTableList error, a possible solution is retrieve table list as alphabetical ascending order and compare two arrays, adding ->order('table_name ASC'); at line 357 of postgresql.php file.\nI'm investigating on them, please try to redo your job without forget commits ;)\nThank you for your help and your job!\n. @ianmacl\ntry to do your job again, I've added two more commits to fix some error.\nTell me your results, thank you!\n. Surely I'm more familiar with my code, but doing this tests on a machine different than mine let find problems I haven't  found.\nI'm checking my tests classes and hierarchy, then I'll try to rebase postgresql branch on master, so you can do tests and tell me results.\nEng. Gabriele Pongelli\n. Added PostgreSQL workaround of JOIN clause inside UPDATE query, not supported by PostgreSQL itself.\nRebased with upstream/master, merged with my remote postgresql branch for non-fast forward rejection.\n@ianmacl\nplease test and let me know, thank you!\n. Can anybody tell me why I receive this message?\nWhich are the errors?\nThank you!\nEng. Gabriele Pongelli\n. Are these failures coming from JDatabasePostgreSQLTest::testGetCollation\nand JDatabasePostgreSQLTest::testGetTableList ?\nHas someone tried to merge this branch on master branch?\nEng. Gabriele Pongelli\n. I've upgraded now phpcs definition in Eclipse and I've fixed style error for my files.\nAbout testReleaseTransactionSavepoint, I use generic exception class because I'm on PHPUnit 3.5 (I can't upgrade to 3.6 because it crashes on \"phpunit\" command line call), now I change that exception blindly, tell me if it's correct because I can't test it.\nThank you!\n. @Michael \nI'll push changes to renameTable today, but before I'll open a discussion on mailing list about which is better between having rename table as JDatabase function or convert it to query element.\nAbout PHPUnit, I already have installed DbUnit, I'll ask this issue on platform group too.\nI see that automatic joomla check (Jools) has PHPUnit 3.5 because it tells about an error, I get same result with this releaseTransactionSavepoint test's version and no error with a generic exception expected from that test.\nEng. Gabriele Pongelli\n. Hi Nikolai, thank you for your report.\nAbout the error, as ianmacl wrote some comment ago , there's a difference between PHPUnit 3.5 vs 3.6: I'm running PHPUnit 3.5 (as I think you're running) and this error isn't present if it's expected base exception class while PHPUnit 3.6 want the expected exception, so I've changed it in this commit to be tested with PHPUnit 3.6 (even if I can't upgrade to PHPUnit 3.6, I've wrote in list too but I can't solve).\nPS I don't know if, for platform developing, it has to be used PHPUnit 3.5 or I've to mandatory upgrade to 3.6.\nNow the failures:\nfailure numer 3) I'm Italian, you're German, this is not an error because you've German collation set in postgresql database while I have Italian one ;)\nfailure numer 5) I have more recent stable version of PostgreSQL database server, this version has a different behavior for  escape function, if you upgrade to database 9.1.1 version you will not have this failure. For me the first PostgreSQL database version working with Joomla! is 9.1.1 , not older.\nfailures numer 1 and 2) they are linked to failure 5, as I've modified with this commit to do escape working with 9.1.1 database version, if you upgrade these failures will not be present.\nfailure 4) in this commit I've add an \"ORDER BY .. ASC\" clause to driver's function, have you this commit? as you can see there are all the tables, maybe I'll change comparison type.\nThank you again, \nEng. Gabriele Pongelli.\n. Which are the errors and failures?\nCan you send me detailed log?\nI've done these changes while working on an example for joomla-platform-examples repository, I've found these errors and I've corrected them.\nPlease let me know!\n. @eddieajau \nHow can I do this ?  Have I to merge his branch on mine ?\nI'm watching his branch, it's better that he do \"git mv\" instead of deleting and creating files because the latter lose history, the former doesn't.\nAbout PHPUnit, for now I can't test because I've had to use it for driver changes that are now online.\n@elkuku and others\nplease check a database setting BEFORE running these test: set \n  in your database's postgresql.conf, this setting let escape backslashes with another one (maybe I'll add this setting inside constructor).\nThis setting is changed from 9.0 to 9.1 postgresql version from off to on, as you can read here .\nI think it's better escaping backslash too, don't you?\n. Sure I can, but he hasn't used \"git mv\", so I think he have lose files history.\nI've used \"git mv\" without problem in this commit .\n. Added testExplain and fixed some other tests.\nJust to be clear, the clause of previous differences in testGetTableList was made by different lc_collate, as you can read here .\nPlease let me know details of failed joomla-jenkins test, thank you!\n. That error on collation is not a \"real\" one ;)\nWhat about the other three errors reported by joomla-jenkins ?\nEng. Gabriele Pongelli\n. wait wait wait...\nI read \"There were 1 failures and 0 errors.\" from http://elkuku.github.com/pulltester/pulls/532 , so where are the other three errors ?\n. Where is the failure?\nPlease someone let me know about test results.\nThank you!\nEng. Gabriele Pongelli\n. Check last changes, many for test, many for CMS errors.\nThank you!\n. Whats goes wrong?\nSometimes I merge master into my branch to upgrade my branch with new feature and to not have too many differences between these branches except for postgresql additions.\nEng. Gabriele Pongelli\n. No, I didn't rebase this branch, I've only merged last master changes in this branch without rebasing it.\nI've fixed some errors about deprecated methods not removed.\nWhat error do you receive ?\nIs a merge error ?\n. waiting #903 and #906 , maybe I'll create another cleaner pull request.\n. @orware \nWhy don't you use \"git mv\" instead of moving files directly?\nWith former command you can keep history of moved files, that I think it's better.\nLook at my commit, it is highlighted as\ntests/{ddl.sql \u2192 ddl_mysql.sql}\ninstead of simply removing one file and adding the same with another path or name.\nHoping to see this changes in another pull request ;)\nBye,\nEng. Gabriele Pongelli\n. Just to be clear, \"git mv\" allow other developer (maintainer of master branch too) to do a rebase without losing their changes on moved files instead of merging and have conflicts/painful state.\nI've tried to merge this branch on a copy of my postgresql branch, the result was a conflict state.\nThen I've tried rebasing these commits on another copy of my branch to keep my changes and add these one after mine, the result was conflict state worse than previous.\nUsing \"git mv\" instead, with rebasing --onto and then merge (as explained here ), the result is a fast-forward commit, without any conflict.\nThese are the commands I've done:\n# git branch base_br master\n# git branch moving master\n# git checkout moving\nSwitched to branch 'moving'\n# cd libraries/joomla/database/database\n# git mv mysql.php ../\n# cd ../../\n# git commit -m \"moved file\"\n[moving 79f0b06] moved file\n 1 files changed, 0 insertions(+), 0 deletions(-)\n rename libraries/joomla/database/{ => }/database/mysql.php (100%)\n# git rebase --onto base_br base_br moving\nAlready on 'moving'\nCurrent branch moving is up to date.\n# git checkout base_br\nSwitched to branch 'base_br'\n# git merge moving\nUpdating bdfe082..79f0b06\nFast-forward\n .../joomla/database/{ => }/database/mysql.php      |    0\n 1 files changed, 0 insertions(+), 0 deletions(-)\n rename libraries/joomla/database/{ => }/database/mysql.php (100%)\nAs you can see there's no conflicts, it's a clear solution and it will not create problems to other developer's workspace ;)\nEng. Gabriele Pongelli.\n. I agree on Elin thought, hoping that moving action will be done with \"git mv\" ;) .\n. Why inside JDatabaseQuery?\nDuring a discussion was told to to this changes.\n. I've only aligned specific getQuery to JDatabase's comment, changed in this commit (6th November 2011) .\nIf you wish get sql string from JDatabaseQuery object, you've simply to call (string) $db->getQuery() .\nYou're right about setting strings, but sooner I think will be added JDatabaseQuery functionality to remaining clauses and use of setQuery without JDatabaseQuery will be deprecated .\nI've added these changes because, inside my postgresql's version of cms, I need to get table name from INSERT INTO query to emulate mysql_insert_id, that task is simple when using JDatabaseQuery ($query->get('insert')->getElements()) and more difficult when was set a string.\n. I've added this patch because while I was trying to add postgresql driver inside cms I've encountered an issue with insertid call.\nInside insertid I've a getQuery to get last INSERT INTO query, but getQuery returns a null object, not a string nor a JDatabaseQuery object.\nSo I've added this constraint to use JDatabaseQuery, as expected watching docblock, but it was made as temporary fix waiting to know why getQuery returns null value.\nIng. Gabriele Pongelli\nAVVERTENZE AI SENSI DEL D.LGS. 196/2003\nLe informazioni contenute in questo messaggio di posta elettronica e negli eventuali files allegati, sono da considerarsi strettamente riservati. Il loro utilizzo \u00e8 consentito esclusivamente al destinatario del messaggio, per le finalit\u00e0 indicate nel messaggio stesso. Qualora riceveste per errore questo messaggio, Vi preghiamo cortesemente di darcene notizia all'indirizzo e-mail di cui sopra e di procedere alla distruzione del messaggio stesso, cancellandolo dal Vostro sistema; costituisce comportamento contrario ai principi dettati dal D.lgs. 196/2003 il trattenere il messaggio stesso, divulgarlo anche in parte, distribuirlo ad altri soggetti, copiarlo, od utilizzarlo per finalit\u00e0 diverse.\nThis electronic transmission is strictly confidential and intended solely for the addresses. It may contain information which is covered by legal, professional or other privilege. If you are not the intended addressee, you must not disclose, copy or take any action in reliance of this transmission. If you have received this transmission in error, please notify us and delete the received data as soon as possible.\nIl giorno 20/gen/2012, alle ore 08:32, Andrew Eddiereply@reply.github.com ha scritto:\n\nI think at the platform level we want to allow developers to use raw SQL.  Not every application is going to want to use the query object.  A simple CLI may not want to bother with the query object.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/749#issuecomment-3580121\n. Sudhi, \nI've added that comparison everywhere because PostgreSQL's CASE WHEN clause has to compare boolean expression, as you can see here .\nMaybe we have to thought together about db-independent CASE WHEN clause, maybe in JDatabaseQuery, maybe not.\nTell me your thoughts.\n\nEng. Gabriele Pongelli.\n. Can you tell me which is SQLServer's correct syntax of CASE WHEN, in a similar manner of PostgreSQL one ?\nI don't know if a JDatabaseQuery element will solve this difference until is known syntax differences.\nEng. Gabriele Pongelli \n. For Oracle database, I've found official documentation about CASE WHEN, as you can see there and inside example links, there are two accepted syntax for Oracle:\nCASE case_operand\n    WHEN when_operand THEN statement;\n    WHEN when_operand THEN statement;\n    ...\n    ELSE statement;\nEND CASE;\nand\nCASE\n    WHEN boolean_expression THEN statement\n    WHEN boolean_expression THEN statement\n    ...\n    ELSE statement;\nEND CASE;\nThese examples are very similar to PostgreSQL's one, so what is SQLServer's correct syntax for CASE WHEN ?\n. It seems like Oracle and PostgreSQL , just a question on how my changes can break SQLServer.\nInside your link I've found \"Searched CASE Expression\" , where WHEN evaluates a boolean expression so in your code where is that boolean expression?\nI added '!=0' to have that requested boolean expression, to compare a char length (it is an integer) to another integer value.\nEdit:\nI think your code has a conceptual error, charLength has to return integer value, not boolean one that you return with adding \"IS NOT NULL\" statement, as you can see here\nhttps://github.com/gpongelli/joomla-platform/blob/master/libraries/joomla/database/database/sqlsrvquery.php#L119\nTry your cms without \"IS NOT NULL\" to see if it works with '!=0' or not, because I think that PostgreSQL doesn't work with \"IS NOT NULL\" .\nEng. Gabriele Pongelli\n. Just a correction: charLength returns a string that is used to evaluate the string's character length, not an integer, nor a string containing null check.\nEng. Gabriele Pongelli\n. Is ok for databases already present in platform and cms repository.\nAbout PostgreSQL this patch is not ok.\nI've talked with sudhi and he will change sqlsrv's charLength behavior (removing 'IS NOT NULL' from inside charLength return string) for 3.0 .\nWithout that 'IS NOT NULL' and don't applying this patch it's reasonable to think that cms works for sqlsrv and PostgreSQL too.\nEng. Gabriele Pongelli\n. @Andrew\nYou don't have to reject this patch for 2.5, but this code will be changed again for 3.0 , when will be added PostgreSQL (rigth?).\nIf you think to add PostgreSQL for 2.5 (as beta too) you've to reject this patch and fixing sqlsrv's charLength as told before . \nBut this means that it's added some solution before on cms and then apply to next platform release.\nEng. Gabriele Pongelli\n. You've to fix charLength only for sqlsrv, I test my changes with PostgreSQL database and with mysql database and the last still works.\nThat '!=0' doesn't break mysql queries.\nIs maybe possible to change platform code before in cms (as this case for sqlsrv's charLength) and then report this change inside platform? \nEng. Gabriele Pongelli\n. @elkuku \nit is reasonable that each driver implements this function instead of charLength.\n. No, it's not what I've thought, I'll try to explain myself better.\nThis is actual charLength code for each driver:\nMySQL & MySQLi & SQLAzure & PostgreSQL use JDatabaseQuery::charLength inside query.php, inherited by JDatabaseQueryMySQL, JDatabaseQueryMySQLi, JDatabaseQuerySQLAzure and JDatabaseQueryPostgreSQL .\nCalled code in these cases is\npublic function charLength($field)\n{\n    return 'CHAR_LENGTH(' . $field . ')';\n}\n\nSQLSrv uses JDatabaseQuerySQLSrv::charLength .\nCalled code is\npublic function charLength($field)\n{\n    return 'DATALENGTH(' . $field . ') IS NOT NULL';\n}\n\nCan you see where is the difference ?\nI've added no code for my driver and SQLSrv adds 'IS NOT NULL' instead , so this what means ?\nSQLSrv returns a string that, when it will be executed by database engine, it returns a bool value because of not null comparison, when other drivers' call will be executed they return an integer that is string's length.\nAgain, can you see where is the difference ?\nJust to be sure I've tried to execute this query in PostgreSQL\nSELECT CHAR_LENGTH(name) IS NOT NULL FROM #__assets\nand it works as expected.\nThe problem is NOT about 'IS NOT NULL' words per se, but use it in an extern context than other drivers' call one.\nIf Sudhi wrote charLength without 'IS NOT NULL' but adding this string every time query is built, we hadn't this issue now because this is focal point of what we're talking about.\n\nNow, your proposal of adding two extra field is really good, but I wish it will be JDatabaseQuery::charLength next definition\npublic function charLength($field, $operator = '', $condition = '' )\n{\n    return 'CHAR_LENGTH(' . $field . ') ' . $operator . ' ' . $condition;\n}\nWhile SQLSrv definition will be\npublic function charLength($field, $operator = '', $condition = '' )\n{\n    return 'DATALENGTH(' . $field . ') ' . $operator . ' ' . $condition;\n}\nso everyone can call \n$query->charLength(aColumn)\nand use returning string as numerical value, while calling\n$query->charLength(aColumn, 'IS', 'NOT NULL')\ngetting \nCHAR_LENGTH(aColumn) IS NOT NULL\nor\nDATALENGTH(aColumn) IS NOT NULL\nto use a bool value.\nHave you got my point of view?\nSorry for this long reply, \nEng. Gabriele Pongelli.\n. Yes it could be simpler.\nI've added only that function because of same word use in each database's documentation, but this proposal is interesting.\nIng. Gabriele Pongelli\n. Yes, an example extracting year from a date between MySQL and PostgreSQL .\nMysql: YEAR(dateColumn)\nPostgreSQL: EXTRACT(YEAR FROM dateColumn)\nEng. Gabriele Pongelli\n. I did the changes locally but I haven't pushed them yet, I'll do soon.\nEng. Gabriele Pongelli.\n. Pushed last commits.\nEng. Gabriele Pongelli.\n. Old pull request #532 .\n. Why is there this error?\nCan someone add more log? \nThank you,\nEng. Gabriele Pongelli\n. I did this fist time I've approached phpunit tests, I'm trying to remember.\nI've added \ntests/includes/JoomlaPostgresqlTestCase.php\ncontaining JoomlaPostgresqlTestCase, that inheritates from JoomlaTestCase, because JoomlaTestCase has getMockDatabase(), so to get PostgreSQL mock database I've had to add this extra class.\nI need PostgreSQL mock database because of quoting difference and null date difference.\nI've added \ntests/includes/JoomlaDatabasePostgresqlTestCase.php\ncontaining JoomlaDatabasePostgresqlTestCase, that  from JoomlaDatabaseTestCase, because the need to use another configuration file (to not touch mysql existing one), to load Postgresql's related classes in setUpBeforeClass and in getMockDatabase.\nThank you,\nEng. Gabriele Pongelli\n. It could be a version difference issue, that \"info\" table is a system table.\nAs you can see minimum db version is 9.1.1, 8.4 is really old.\nUpdate it with apt-get and let me know.\nEng. Gabriele Pongelli\n. Louis, wait a minute, I've an idea about how to remove that two extended classes.\nEng. Gabriele Pongelli\n. Louis, with these commits I've removed \ntests/includes/JoomlaDatabasePostgresqlTestCase.php\ntests/includes/JoomlaPostgresqlTestCase.php\nfiles, renaming JDatabaseMock.php file and doing some changes inside that functions I've told you here to be database-independent.\nTell me what do you think about these changes, thank you!\nEng. Gabriele Pongelli.\n. This error is really strange.\nI've created locally another branch from master and tried to merge this branch, all goes ok.\nWhy does this error happens ?\nEng. Gabriele Pongelli\n. Where does github show that this branch is not mergeable ?\nI'm watching on PostgreSQL's official website, 8.4 is supported until June 2014. When I started doing this driver I installed 9.0.4 (now after it was upgraded to 9.1.1).\nI remember that I saw old 8.4 hasn't some features that are handled on newer version and on MySQL driver.\nI can search these informations again and reply more deeper, but I'll post them here after 1st march.\nEng. Gabriele Pongelli .\n. Hi Louis,\nI found here that each \nMajor releases usually change the internal format of system tables and data files. \nThese changes are often complex, so we do not maintain backward compatibility of all stored data.\nI can't find same information I found months ago, watching your tests seems that the only changes between these versions affect information_schema about sequences.\nReading official documentation about sequences (link for 9.1 and for 8.4) I found that some information I need and use are missing (start_value, minimum_value, maximum_value, increment, cycle).\nSome of them aren't implemented, only \"start_value\" isn't present in 8.4 and I use these informations for exporter and importer.\nI don't think to support 8.4 even if it'll lives until 2014, do you have another solution?\nEng. Gabriele Pongelli.\n. Reading official documentation, and testing on another 9.0.5 database server I've installed, seems that this error occurs in this version too.\nDo you think better solution to be compatible since 8.4 could be filter getTableSequence's information (inside driver, importer and exporter) based on which database is running ?\nThank you,\nEng. Gabriele Pongelli.\n. Hi Louis,\nI've added a commit to let use this driver (and importer and exporter classes) with older database.\nActually to test driver, you've only to install an older version; to test exporter and importer it's necessary to change 'getVersion' return value inside setup() call.\nI know it's not an automatic procedure to test, but I did to not replicate existing classes just for this simple changes.\nEng. Gabriele Pongelli.\n. Hi Louis,\nI've tried to locally merge my branch and I've found that the conflict is made by my moving of tests/includes/mocks/JDatabaseMock.php to tests/includes/mocks/JDatabaseGlobalMock.php meanwhile someone changes JDatabaseMock.php content.\nI'll try to cherry-pick that single commit into my branch, so I hope this branch will become \"mergeable\".\nHoping you'll answer soon,\nEng. Gabriele Pongelli.\n. After some tries I've found a solution: create another branch and send another pull request with explicit removing of that file, not moving it.\nI think if I'll rebase these changes this branch will be unmanageable, as previous pull request about this driver.\nEng. Gabriele Pongelli.\n. @AmyStephen\nYou're right about ambiguous result, but look at my test file to know how I've handled these case.\nTo have \nWHERE (a = 1 OR a = 2) AND b = 1\nthe code is\n$q->where('(a = 1 OR a = 2)')->where('b = 1');\nThe other case is handled with\n$q->where('a = 1')->where('(a = 2 AND b = 1)', 'OR');\nEasy to understand, simple to do, without use of array that give harder call and harder handling.\nEng. Gabriele Pongelli\n. See #956 .\n. Running entire test suite on this branch and on master one I receive same result: \nTests: 2905, Assertions: 4024, Failures: 5, Errors: 139, Incomplete: 554, Skipped: 135.\nSo these changes doesn't add failures or errors.\nEng. Gabriele Pongelli.\n. As I told you before, again, I think that it's simpler to write\n$q->where('a = 1')->where('(b = 1 AND c = 1)', 'OR')\nto obtain what you want instead of add what you're thinking of with these \"grouping mechanism\" that, in my opinion, complicate uselessly platform code and create unnecessary rules for 3pd to be used correctly.\nCorrect grouping mechanism is the use of parenthesis inside WHERE condition, and everyone who wrote a web application need to know himself/herself how create an SQL query.\nThat type of problem is solved by designing and writing correctly any SQL query.\nFor me, you're creating a problem that doesn't exist.\nActually there's not a really need for this patch, because you can always write\n$q->where('a = 1 OR (b = 1 AND c = 1)')\nit works, it's portable to each driver, it's faster, it's the simplest solution.\nEng. Gabriele Pongelli.\n. I know there's not good solution to limit the ambiguity yet.\nI thought that, in case of similar pull request, you look at that solve issue in a cleaner way, not choosing with \"who's the first\".\nMy 2 cents,\nEng. Gabriele Pongelli\n. This branch should be easily merged inside master, instead of #917 (and it's parent #532) that could be closed without merging.\n. any log ?\n. you're right, but as you can see from this commit of previous pull 917 I've removed configuration file because someone told me inside mailing list to do this.\nWhich are your test result after changing configuration to postgresql driver ?\nWhich other database driver skip tests if it's not present its configuration file ?\nThank you,\nEng. Gabriele Pongelli.\n. That hardcoded date were put inside joomla-platform/tests/suite/joomla/access/stubs/S01.xml .\nThank you,\nEng. Gabriele Pongelli.\n. Hi Louis,\nit's not really easy start a pull request and, after some time, re-do all again because base structure was changed meanwhile (I did this three times, each time for a different change), and yes, it's frustrating.\nThis is not a criticism directed to a person, the problem maybe could be the procedure of doing this kind of job and it's management (merging this driver before moving each driver files and now their testing files would have avoided me to send two extra pull request), but I don't have the skill to discuss about management of project like this.\nSorry for this \"extra\" and off topic part.\nThank you for this job, I'll pull it and I'll do again tests, maybe I'll add importer and exporter test files for older database version (sublassing actual class and change mock's \"getVersion\" inside setUp). Query class doesn't change between versions and driver class can be tested on older version only running it.\nI'll do this next days.\nHave you solved problem with joomla-platform/tests/suite/joomla/access/stubs/S01.xml file and hardcoded null value ?\nEng. Gabriele Pongelli.\n. I'm working on a branch coming from yours, test on Postgresql driver returns me OK .\nI've found only driver test class while I've created library's classes and test classes for database query, for importer and exporter classes too, where are they ?\nEng. Gabriele Pongelli .\n. See #961 .\n. Louis, there are two classes for older database version now added to this branch, how can I add them now?\n. Thank you ;)\n. Thank you ;) !\nEng. Gabriele Pongelli\n. +1 @realityking about ease transition without conflicting name and BC.\nAnyway @LouisLandry have done a real good job.\nMy suggestion is to introduce this big improvement, maybe with namespaces, without breaking compatibility and doing it gracefully.\nEng. Gabriele Pongelli\n. Added style fixes and checks for createDatabase method.\n. Fixed.\nEng. Gabriele Pongelli\n. Committed changes.\nGabriele.\n. Hi Ian,\nI added that method because it's used during CMS installation, as createDatabase one, to complete installation on Postgresql.\nThese methods were born after a private discussion with Andrew, who point me adding these methods here.\nGabriele.\n. updated HERE, I'll close this pull.\n. Line removed.\nAbout str_replace, these changes come from here.\n. Sincerely I don't remember which was the error, try asking to @elkuku .\nThe only thing I remember is that without that code I wasn't able to correctly use joomla on Postgresql.\nCommitted code style changes.\n. As you can see, these changes are related to platform's files, so why have I to make a pull request to CMS repository ?\n. Could you write the error?\nThanks.\n. I see it's related to JOAuth2ClientTest, I've not developed that test.\nCheck if this error is also present on master branch, I forked from it yesterday to create this pull request.\n. I added these methods to let installation phase works.\nI did these changes for J2.5 , then I haven't followed subsequent joomla's changes.\nI agree with Ian, the driver has to own all kinds of database's manipulation (tables, schema, etc); the other classes use  the driver to perform their task without owning this code.\nIn my humble opinion this is a better solution for a logical point of view (who owns what) and for code clearness (piece of code exists at only one point).\nEng. Gabriele Pongelli.\n. Ok.\nI did these changes to let CMS installs correctly on PostgreSQL.\n. hasUTF() function is an abstract method inside JDatabase, it must be implemented inside child classes.\n. I'm editing all these file you've highlighted, thank you!\nJust a precisation, PostgreSQL not related files are not edited by me, I have changed them only merging them from master.\n. I use commented code to see where I've done some changes and check during debug that all goes ok.\nI'm deleting them.\n. I don't know if it's used inside other database, meanwhile I've added it.\n. Cleaned, thank you!\n. inside cms installation, \nhttps://github.com/gpongelli/joomla-cms/blob/postgresql/installation/models/database.php#L556\nas you can see there's an ALTER DATABASE query to set UTF8 charset that has different syntax for PostgreSQL.\nFirst solution I've thought was this, instead of adding ALTER query element or execute this query directly inside JDatabasePostgreSQL class.\nTell me your thought about which solution sounds better.\n. Similar to ALTER DATABASE, this query is used inside cms installation\nhttps://github.com/gpongelli/joomla-cms/blob/postgresql/installation/models/database.php#L429\nif it's necessary to create a database there's a big difference on query syntax (PostgreSQL needs database's OWNER name).\nAgain, this solution was made to not modify JDatabase class or add another query element, while waiting replies on a discussion I've started on mailing list (where nobody discuss).\nTell me how do you think it's better to solve this problem and I'll patch the code.\n. As suggested in this comment\nhttps://github.com/joomla/joomla-platform/pull/532#r240245\nI've removed jimport calls because autoloader does import; phpunit tests run without problems but I haven't tried this changed file in a local CMS installation yet.\nMaybe you need all the current platform folder, not just add postgresql class file.\nSo I don't know if I've to add jimport or not, I'm waiting someone more skilled on this.\n. These tests were made times ago, when I thought that Inspector class would be a query class similar to but not inherited from postgresqlquery class, without any example code from mysql case.\nI'm reworking all this file, I'll commit changes soon.\nEng. Gabriele Pongelli\n. Changes committed.\nEng. Gabriele Pongelli\n. I've received this change from another pull request, I'm restoring it to previous version.\nEng. Gabriele Pongelli\n. I changed it for an error that was fixed, but I've forgotten it.\nI'm changing this.\n. Fixed.\n. Changed, I'll commit.\n. Changed.\n. ",
    "ianmacl": "Tests pass.\n. Can you rebase this against current master and make your changes on the platform code rather than on the CMS code?\n. Test Name\nDuration\nAge   \n\n\n\nJPlatformTest::testIsCompatible.testIsCompatible with data set \"wrong\"  0.005464    1\nJPlatformTest::testIsCompatible.testIsCompatible with data set \"empty\"  0.005964    1\nJPlatformTest::testIsCompatible.testIsCompatible with data set \"null\"   0.005483    1\nJPlatformTest::testIsCompatible.testIsCompatible with data set \"itself\"     0.005449    1\nJPlatformTest::testIsCompatible.testIsCompatible with data set \"version 1.5.22\"     0.005445    1\nJPlatformTest::testIsCompatible.testIsCompatible with data set \"version 1.7.0\"  0.005435    1\nJPlatformTest::testIsCompatible.testIsCompatible with data set \"version 11.1.0\"     0.00545 7\nJPlatformTest.testGetLongVersion    0.565237    7\nJPlatformTest.testGetShortVersion   0.006641    7\n\n\n\nLatest test results.\n. Results come from jenkins.\nThose seem to be fixed.  One failure now:\nJParameterTest::testBind\nJException: JLIB_REGISTRY_EXCEPTION_LOAD_FORMAT_CLASS\n/opt/testing/hudson/data/jobs/platform/workspace/libraries/joomla/registry/format.php:52\n/opt/testing/hudson/data/jobs/platform/workspace/libraries/joomla/registry/registry.php:264\n/opt/testing/hudson/data/jobs/platform/workspace/libraries/joomla/html/parameter.php:146\nFailure came from last commit.\n. What happens to code that is passing in parameters?  Also, this isn't ideal since this makes the API different than what the plugin expects, which isn't as transparent as one might like.\n. Indeed.  I fixed that and added a unit test to ensure I wasn't doing anything else stupid.\n. 1) JFormTest::testLoad\nLine:1243 There are 2 original ungrouped fields, 1 replaced and 4 new, resulting in 6 total.\nFailed asserting that integer:7 matches expected integer:6.\n2) JFormFieldHiddenTest::testGetInput\nLine:81 The label of a non-hidden element should be some HTML.\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n-foo\n+\n3) JFormFieldSpacerTest::testGetLabel\nLine:101 The getLabel method should return something without error.\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n-spacer\n+spacer\n4) JFormFieldSpacerTest::testGetTitle\nLine:101 The getLabel method should return something without error.\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n-spacer\n+spacer\nTests need to be fixed before this is committed.\n. We'd like to get this in once we have tests and are confident it works correctly.\n. (and once it has been rebased, etc)\n. Closing in light of [#1069].\n. # Test Results\nTotal Tests: 1339\nAssertions: 2276\nFailures: 0\nErrors: 0\nTest Time: 58.009840\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 56.872088\n. # Test Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1420\nAssertions: 9898\nFailures: 0\nErrors: 0\nTest Time: 167.986629\n. # Test Results\nTotal Tests: 1465\nAssertions: 10002\nFailures: 0\nErrors: 0\nTest Time: 196.620230\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 57.051470\n. # Test Results\nTotal Tests: 1235\nAssertions: 2169\nFailures: 0\nErrors: 0\nTest Time: 57.914007\n. # Test Results\nTotal Tests: 1235\nAssertions: 2169\nFailures: 0\nErrors: 0\nTest Time: 52.880001\n. Master and staging are kept in sync unless there are test failures.  Sending requests against staging makes it easier because we can merge right in github.  Once we pull, tests get run in staging and if tests pass they automatically get pushed to master.\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 56.449255\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 1\nErrors: 0\nTest Time: 56.008952\n. Test failure is result of time not being mocked out (sometimes the expected result is off by a second).\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 56.679198\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 56.698655\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 56.952886\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 57.303294\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 56.808714\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 56.706133\n. # Test Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1425\nAssertions: 9919\nFailures: 0\nErrors: 0\nTest Time: 194.829253\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 56.407426\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 56.579529\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1282\nAssertions: 2219\nFailures: 0\nErrors: 0\nTest Time: 56.049355\n. # Test Results\nTotal Tests: 1384\nAssertions: 9862\nFailures: 0\nErrors: 0\nTest Time: 175.310735\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 58.161481\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 55.837949\n. # Test Results\nTotal Tests: 1287\nAssertions: 2224\nFailures: 0\nErrors: 0\nTest Time: 57.137553\n. # Test Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 54.281564\n. # Test Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 53.307388\n. # Test Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1389\nAssertions: 9867\nFailures: 0\nErrors: 0\nTest Time: 177.248204\n. # Test Results\nTotal Tests: 1389\nAssertions: 9867\nFailures: 0\nErrors: 0\nTest Time: 184.484544\n. # Test Results\nTotal Tests: 1389\nAssertions: 9867\nFailures: 0\nErrors: 0\nTest Time: 185.306107\n. # Test Results\nTotal Tests: 1389\nAssertions: 9867\nFailures: 0\nErrors: 0\nTest Time: 178.161115\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 54.844807\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 54.651686\n. # Test Results\nTotal Tests: 1290\nAssertions: 2227\nFailures: 0\nErrors: 0\nTest Time: 55.606764\n. # Test Results\nTotal Tests: 1416\nAssertions: 9884\nFailures: 0\nErrors: 8\nTest Time: 175.507609\n. # Test Results\nTotal Tests: 1382\nAssertions: 9860\nFailures: 0\nErrors: 0\nTest Time: 189.976629\n. # Test Results\nTotal Tests: 1382\nAssertions: 9860\nFailures: 0\nErrors: 0\nTest Time: 193.078545\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: 1389\nAssertions: 9867\nFailures: 0\nErrors: 0\nTest Time: 181.013034\n. # Test Results\nTotal Tests: 1389\nAssertions: 9867\nFailures: 0\nErrors: 0\nTest Time: 201.368223\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: 1389\nAssertions: 9867\nFailures: 0\nErrors: 0\nTest Time: 185.481618\n. # Test Results\nTotal Tests: 1382\nAssertions: 9860\nFailures: 0\nErrors: 0\nTest Time: 179.254766\n. # Test Results\nTotal Tests: 1382\nAssertions: 9860\nFailures: 0\nErrors: 0\nTest Time: 186.568587\n. # Test Results\nTotal Tests: 1382\nAssertions: 9860\nFailures: 1\nErrors: 0\nTest Time: 169.845956\n. # Test Results\nTotal Tests: 1389\nAssertions: 9867\nFailures: 0\nErrors: 0\nTest Time: 184.667770\n. # Test Results\nTotal Tests: 1389\nAssertions: 9867\nFailures: 0\nErrors: 0\nTest Time: 168.062978\n. # Test Results\nTotal Tests: 1420\nAssertions: 9898\nFailures: 0\nErrors: 0\nTest Time: 181.185673\n. # Test Results\nTotal Tests: 1420\nAssertions: 9898\nFailures: 0\nErrors: 0\nTest Time: 181.280197\n. So the basic idea is to include every file found with the given name?\nI would think that would cause problems if somebody is trying to do overrides of any sort.\n. # Test Results\nTotal Tests: 1389\nAssertions: 9867\nFailures: 0\nErrors: 0\nTest Time: 193.526119\n. # Test Results\nTotal Tests: 1389\nAssertions: 9867\nFailures: 0\nErrors: 0\nTest Time: 181.896809\n. # Test Results\nTotal Tests: 1422\nAssertions: 9913\nFailures: 0\nErrors: 0\nTest Time: 184.054033\n. # Test Results\nTotal Tests: 1415\nAssertions: 9893\nFailures: 0\nErrors: 0\nTest Time: 199.176902\n. # Test Results\nTotal Tests: 1418\nAssertions: 9896\nFailures: 0\nErrors: 0\nTest Time: 184.513546\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 56.923681\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1389\nAssertions: 9867\nFailures: 0\nErrors: 0\nTest Time: 186.585791\n. # Test Results\nTotal Tests: 1389\nAssertions: 9867\nFailures: 0\nErrors: 0\nTest Time: 187.209739\n. # Test Results\nTotal Tests: 1420\nAssertions: 9898\nFailures: 0\nErrors: 0\nTest Time: 191.780048\n. # Test Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. Tests did not complete:\nPHP Fatal error:  Maximum function nesting level of '100' reached, aborting! in /home/ian/www/platform/pulltester/checkouts/pull281/libraries/joomla/log/log.php on line 45\nFatal error: Maximum function nesting level of '100' reached, aborting!\nThis won't be pulled until that is fixed or a reason is determined.  Please try the tests locally.\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 54.977337\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 56.217865\n. # Test Results\nTotal Tests: 1422\nAssertions: 9913\nFailures: 0\nErrors: 0\nTest Time: 891.618678\n. # Test Results\nTotal Tests: 1420\nAssertions: 9898\nFailures: 0\nErrors: 0\nTest Time: 177.701600\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: 1420\nAssertions: 9898\nFailures: 0\nErrors: 0\nTest Time: 185.301703\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: 1420\nAssertions: 9898\nFailures: 0\nErrors: 0\nTest Time: 187.655132\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: 1420\nAssertions: 9898\nFailures: 0\nErrors: 0\nTest Time: 189.788600\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: 1420\nAssertions: 9898\nFailures: 0\nErrors: 0\nTest Time: 199.740092\n. # Test Results\nTotal Tests: 1420\nAssertions: 9898\nFailures: 0\nErrors: 0\nTest Time: 189.654508\n. # Test Results\nTotal Tests: 1420\nAssertions: 9898\nFailures: 1\nErrors: 0\nTest Time: 187.140983\n. # Test Results\nTotal Tests: 1422\nAssertions: 9913\nFailures: 0\nErrors: 0\nTest Time: 186.927763\n. # Test Results\nTotal Tests: 1420\nAssertions: 9898\nFailures: 0\nErrors: 0\nTest Time: 174.642104\n. # Test Results\nTotal Tests: 1280\nAssertions: 2217\nFailures: 0\nErrors: 0\nTest Time: 54.984663\n. # Test Results\nTotal Tests: 1422\nAssertions: 9913\nFailures: 0\nErrors: 0\nTest Time: 178.692099\n. # Test Results\nTotal Tests: 1425\nAssertions: 9919\nFailures: 0\nErrors: 0\nTest Time: 183.527143\n. # Test Results\nTotal Tests: 1422\nAssertions: 9913\nFailures: 0\nErrors: 0\nTest Time: 182.538718\n. # Test Results\nTotal Tests: 1422\nAssertions: 9913\nFailures: 0\nErrors: 0\nTest Time: 180.305479\n. # Test Results\nTotal Tests: 1422\nAssertions: 9913\nFailures: 0\nErrors: 0\nTest Time: 178.770282\n. # Test Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 191.878384\n. # Test Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1440\nAssertions: 9178\nFailures: 2\nErrors: 13\nTest Time: 164.131168\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: 1439\nAssertions: 9940\nFailures: 0\nErrors: 0\nTest Time: 186.922947\n. # Test Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 201.507043\n. # Test Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 195.488348\n. # Test Results\nTotal Tests: 1296\nAssertions: 2248\nFailures: 0\nErrors: 0\nTest Time: 58.024213\n. # Test Results\nTotal Tests: 1300\nAssertions: 2252\nFailures: 0\nErrors: 0\nTest Time: 56.035857\n. # Test Results\nTotal Tests: 1300\nAssertions: 2248\nFailures: 0\nErrors: 0\nTest Time: 55.408828\n. # Test Results\nTotal Tests: 1300\nAssertions: 2248\nFailures: 0\nErrors: 0\nTest Time: 56.381765\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1300\nAssertions: 2263\nFailures: 0\nErrors: 0\nTest Time: 56.642137\n. # Test Results\nTotal Tests: 1235\nAssertions: 2169\nFailures: 0\nErrors: 0\nTest Time: 54.646360\n. This is a fairly independent unit that likely doesn't have implications on other areas of the platform.  Perhaps we can get a couple of browser tests with this so we can be reasonably satisfied it works and we can pull it at that point.\n. Closing this pull request because it isn't a bug and nobody seems overly interested in it.\n. # Test Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 195.134692\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 274.197969\n. # Test Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 198.397360\n. # Test Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 179.270364\n. # Test Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 195.861198\n. # Test Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 193.053777\n. # Test Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 189.054343\n. # Test Results\nTotal Tests: 1427\nAssertions: 9925\nFailures: 0\nErrors: 0\nTest Time: 186.488477\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1422\nAssertions: 9913\nFailures: 0\nErrors: 0\nTest Time: 190.582794\n. # Test Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 188.870763\n. # Test Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 187.054831\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 185.494756\n. I'm closing this because it has been superseded by [#903].\n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. WARNING! Pull request is not against staging!\nTest Results\nTotal Tests: 1465\nAssertions: 10002\nFailures: 0\nErrors: 0\nTest Time: 186.463180\n. # Test Results\nTotal Tests: 1465\nAssertions: 10002\nFailures: 0\nErrors: 0\nTest Time: 201.942054\n. # Test Results\nTotal Tests: 1445\nAssertions: 9956\nFailures: 0\nErrors: 0\nTest Time: 184.116585\n. # Test Results\nTotal Tests: 1465\nAssertions: 10002\nFailures: 0\nErrors: 0\nTest Time: 198.966320\n. # Test Results\nTotal Tests: 1469\nAssertions: 10011\nFailures: 0\nErrors: 0\nTest Time: 194.085917\n. # Test Results\nTotal Tests: 1469\nAssertions: 10011\nFailures: 0\nErrors: 0\nTest Time: 186.664040\n. # Test Results\nTotal Tests: 1465\nAssertions: 10002\nFailures: 0\nErrors: 0\nTest Time: 195.227067\n. # Test Results\nTotal Tests: 1465\nAssertions: 10002\nFailures: 0\nErrors: 0\nTest Time: 203.597132\n. # Test Results\nTotal Tests: 1427\nAssertions: 9925\nFailures: 0\nErrors: 0\nTest Time: 227.497691\n. # Test Results\nTotal Tests: 1465\nAssertions: 10002\nFailures: 0\nErrors: 0\nTest Time: 207.935595\n. # Test Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1439\nAssertions: 9940\nFailures: 0\nErrors: 0\nTest Time: 194.696456\n. Concept is good, I suggest we wait until Mootools 1.4.1 which should be released soon.\n. # Test Results\nTotal Tests: 1496\nAssertions: 10104\nFailures: 0\nErrors: 0\nTest Time: 187.404093\n. # Test Results\nTotal Tests: \nAssertions: \nFailures: \nErrors: \nTest Time: \n. # Test Results\nTotal Tests: 1465\nAssertions: 10002\nFailures: 0\nErrors: 0\nTest Time: 177.740667\n. # Test Results\nTotal Tests: 1465\nAssertions: 10002\nFailures: 0\nErrors: 0\nTest Time: 186.580545\n. We're not going to go the route of adding more static methods and properties.  JApplicationWeb::loadSystemUris goes in the direction we want to head in terms of having a store of configurable paths.\n. This would be great.  I'll test and pull when I get a chance.\n. One possibility would be to allow you to provide a JInput object to JController::getInstance which would allow you to inject all your input into the controller.  This would make it easy to make reusable controllers.\n. There are some instabilities in the unit tests, but generally on a properly configured system they all pass.  The 20 on your system would suggest to me that your database hasn't been properly configured.  That's what I would check.\nThere are a couple of cache tests that seem to consistently break the first time you run the tests.  This seems to be an initialization issue because of you run the unit tests again they pass.  There are significant issues with the caching system.  There is a lot of logic that has been stuffed in there that probably more properly belongs elsewhere.  When that gets rewritten we'll get that sorted out.\nThe unit tests consistently run fine for most branches.  I haven't had time to look more closely at what his happening here.  It isn't just on the build server that they fatal - they fatal on my local machine as well.\nIn general, with unit tests, you want to avoid dependencies on other parts of the library.  I would be against a standard that enforced loading classes using JLoader because of this.  I don't think you can necessarily define a standard here in any event because not all classes are the same and they don't always get loaded the same way.  I haven't thought that deeply on it though, so maybe there is a reasonable standard that would deal with the general case (though we couldn't enforce it).\n. PHP Fatal error:  Class 'JSessionStorage' not found in /home/ian/www/platform/myplatform/libraries/joomla/session/storage/eaccelerator.php on line 21\n. I think it is reasonable to make it flexible to allow use by other packages, but I think at this point we should start simple, make it stable and then improve it from there.\n. https://github.com/Hackwar/joomla-platform/blob/junit5/libraries/joomla/database/database/sqlazure.php#L12\nThat line there is causing a fatal.\n. Fatal error: Class 'JElement' not found in/libraries/joomla/html/parameter/element/list.php on line 21\nI plan to post error logs to a gist or somewhere, but haven't had time to implement that yet.\n. The failure is probably from the staging repo which was broken until a while ago.\n. Please use require_once and not JLoader in tests.\n. 1) JUpdaterTest::test__construct\nJDatabaseException: JLIB_DATABASE_ERROR_CONNECT_DATABASE\nAll four were database connection problems.  I'll have to look into why that was.  They do run fine locally.\n. Looking at your code it appears as though you aren't ensuring preconditions such as database set in JFactory::$database.  You just do your instantiation without worrying about isolation.\n. As a general rule, any test that could eventually call JFactory should set the initial conditions of JFactory properly.  This does mean our code needs to be fixed, but until it is fixed, we have to live with this situation and set up these dependencies or else the tests become really brittle and we see issues like this pop up, where the tests might run fine one place and not somewhere else.\nA lot of work has been put into making sure that if the environment is setup properly, the tests will pass.\n. The tests are failing because of:\nhttps://github.com/gpongelli/joomla-platform/blob/postgresql/libraries/joomla/access/access.php#L86\nand\nhttps://github.com/gpongelli/joomla-platform/blob/postgresql/libraries/joomla/access/access.php#L46\nYou seem to have a lot of repeated code in there.  Lines 40 to 79 are the same as 81 to 119.\n. I think we need the ddl file so that people can setup the database in their testing environment.\nDo the tests work with postgres without the config file?\nYou hit a merge conflict around there somewhere - can you rebase onto current master so that your code will merge cleanly?\nAlso, when I ran the tests, it showed no coverage for JDatabasePostgreSQL - is this correct?  Or is something not working right?  All the query tests ran and seemed be ok.\n. So I'm not really sure how these tests are supposed to run.  When I try and do so, I get 100 errors complaining about there not being a PDO driver.  It seems to be because your driver is called postgresql and the PDO driver is pgsql, but you don't do anything to translate that.\nCan you tell me how you did that?\n. So, yeah, I was under the impression that I had to create a config.php and tell it to use postgresql instead of mysql.  But that wasn't what I was supposed to be doing.  So I got that sorted out.\nI rebased your work onto master and I have it in a branch on my fork.  You can find it at https://github.com/ianmacl/joomla-platform/tree/pg_rebase.  What I did was clone your repo, checkout out master, and pulled all the new commits from the main repo (not related to your work).  Then, I checkout out your branch, and did git rebase -i master.  The -i is for interactive.  This brought up a text editor showing me a list of commits.  I went through the lists and I removed all the commits that weren't yours (though apparently I missed two), and I also removed all the duplicate commits that somehow ended up in your branch.  Then I hit save and it went through the rebase.  I had to merge a few commits along the way but it wasn't too bad.\nSo, once that was done I ran the tests and got the result which I have posted at: https://gist.github.com/1395856\nThere were two errors.  One is a duplicate key value which I'm not entirely sure what the reason behind it is.  Maybe you can shed some light on that one?  The other one is because I'm running PHPUnit 3.6 vs 3.5.  You need to change the exception that you are expecting so it is the actual exception that you are expecting to be thrown in the method you are testing.\nNow the failures:\n4 - looks like an environment thing - you'll have to sort out how to test this in a way that will work across systems.\n7 - You're probably better just to verify that the version is in a specific format rather than it having a specific value.\nThe rest I'm not really sure about.  Have you seen these results at all?  Can you checkout my branch and see if you get the same results?\n. Let me know when you have rebased it and I will take a look.\n. There were 2 failures:\n1) JDatabasePostgreSQLTest::testGetCollation\n299\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n-it_IT.UTF-8\n+en_US.UTF-8\n/tests/suite/joomla/database/database/JDatabasePostgreSQLTest.php:300\n2) JDatabasePostgreSQLTest::testGetTableList\n402\nFailed asserting that two arrays are equal.\n--- Expected\n+++ Actual\n@@ @@\n     [14] => jos_update_categories\n-    [15] => jos_update_sites\n-    [16] => jos_update_sites_extensions\n-    [17] => jos_updates\n-    [18] => jos_user_profiles\n-    [19] => jos_user_usergroup_map\n-    [20] => jos_usergroups\n-    [21] => jos_users\n-    [15] => jos_updates\n-    [16] => jos_update_sites\n-    [17] => jos_update_sites_extensions\n-    [18] => jos_usergroups\n-    [19] => jos_user_profiles\n-    [20] => jos_users\n-    [21] => jos_user_usergroup_map\n   [22] => jos_viewlevels\n  )\nSo it looks like at this point the issue is more the tests rather than the code itself.  I also noted the issue with the version test.  The tests should be able to withstand minor variations in environment such as there.\n. The failures at http://elkuku.github.com/pulltester/pulls/532 are the same failures that we get on the build server.\n. The four test failures and one error are listed there.  All tests need to pass before code gets merged.\n. Now getting two failures:\n1) JDatabasePostgreSQLTest::testExplain\n273\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n-EXPLAIN SELECT * FROM jos_dbtestQUERY PLANSeq Scan on jos_dbtest  (cost=0.00..14.20 rows=420 width=162)\n+EXPLAIN SELECT * FROM jos_dbtestQUERY PLANSeq Scan on jos_dbtest  (cost=0.00..25.10 rows=1510 width=24)\n/tests/suite/joomla/database/database/JDatabasePostgreSQLTest.php:274\n2) JDatabasePostgreSQLTest::testGetCollation\n312\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n-it_IT.UTF-8\n+en_US.UTF-8\n/tests/suite/joomla/database/database/JDatabasePostgreSQLTest.php:313\n. This has already been fixed in the aforementioned pull request.\n. Closing this because the $connection property isn't needed - it is already defined in the parent class.\n. So the question really comes down class names:\nJDatabaseDriverMysqlServer vs JDatabaseServerMysql\nJDatabaseDriverPostgresQuery vs JDatabaseQueryPostgres\nPersonally I am in favour of the latter as it means we don't need to have the word driver (or engine) in all of our database classes which could make them more ambiguous as to their actual purpose.\n. So, I looked into this issue a little bit, and I think I have an explanation.  If you look at:\nhttp://php.net/manual/en/function.mysqli-connect.php you will see it is an alias for: http://php.net/manual/en/mysqli.connect.php.  This function always returns an object.  If you look at http://php.net/manual/en/function.mysql-connect.php you will notice that it returns a resource.\nSo, important point 1: In the Mysqli class $this->connection is an object.\nSo next, if you look at http://php.net/destruct, you will see that it says: \"PHP 5 introduces a destructor concept similar to that of other object-oriented languages, such as C++. The destructor method will be called as soon as there are no other references to a particular object, or in any order during the shutdown sequence.\"\nIn our case, we are dealing with the latter case - the destructor method can be called in any order.  I was able to reproduce the issue in the CMS finder repo.  To investigate what was happening, I added the following class:\nclass MyMysqli extends mysqli\n{\n        public function __destruct()\n        {\n                global $dest;\n                $dest = true;\n        }\n}\nand then changed the constructor to (approx line 130) to:  $this->connection = new MyMysqli instead of calling mysqli_connect.\nThen I changed the destructor to:\n```\n    /\n     * Destructor.\n     \n     * @since   11.1\n     /\n    public function __destruct()\n    {\n            global $dest;\n        if ($dest) echo 'Destructed already';\n        if (is_object($this->connection))\n        {\n                mysqli_close($this->connection);\n        }\n}\n\n```\nWhen I reran the indexer it echoed Destructed already every time before displaying the warning.  If I added !$dest to the conditional the warning went away.\nSo this seems to be an issue when for whatever reason the mysqli object ($this->connection) gets destructed before the JDatabaseMysqli object does.  I suspect we might see the same thing when we start using the PDO classes.\nFrom my testing checking to see if it is an instance of mysqli doesn't help.  The best I could come up with was is_callable($this->connection, 'close') which seemed to deal appropriately with the problem.\n. Do all databases expect the data to be in the same format?\n. So how do these characters get dealt with in this method after the change?  They are reserved characters and should need to be dealt with somehow.  It seems that this change would leave these characters in.  Is there something that I'm missing?\n. There are known performance issues with using @ which aren't due to be fixed until 5.4.  Have you tried using //IGNORE as suggested in the documentation? (http://php.net/manual/en/function.iconv.php).\n. I don't think that it is unreasonable to expect that extension developers that choose not to use Mootools at least pick a single, common version of jQuery to develop to.  I would hope that if the major extensions developers who insist on jQuery settle on a single version of jQuery for a given release that other smaller extension developers would follow suit and use that version.  It seems ridiculous in my mind to encourage/support developers in choosing whichever version of jQuery they want.  It is already suboptimal to have a site with two different libraries.  I can only imagine what will happen when you have sites with Mootools and three to four versions of jQuery.  That spells bloat to me and certainly not something that IMO we want to encourage.\n. The future of Javascript in the platform is uncertain (we will likely decide on this post 12.1).  Either way, this solution seems overly complex and jQuery centric, which is not a direction we are planning on going.  Appreciate the ideas and work that went into this.  Perhaps we can revisit another approach post 12.1 depending on what is decided regarding Javascript.\n. We haven't discussed this and made a decision about how jQuery should be handled in general (i.e. whether we should add it to the platform or let the application add in support of they want it using JHtml::register).  In either case, this implementation is far too heavy.  If we were to add jQuery support I would think it would only be support for one version.  I don't think it is necessary to add over 400 lines of code to add a script tag to the document.  If the CMS wants to support jQuery I would advise them to select a release for a particular version and require third party developers to use that release.\n. My understanding from rereading the threads is that the intended direction was to be away from loading multiple versions of jQuery.  You seem to be encouraging the opposite.\n. This was closed almost a year ago parthlawate.\n. So this one has sat a long time.  I think rather than adding the static we should make the privates arrays and just store the data in there by array directly, if that makes sense.  If you (or somebody) makes those changes I would be happy to merge them.  I'm going to close the request - ask for it to be reopened when that is done.\n. If we're going to change it I think I would rather see it changed in favour of detecting the encoding and adapting rather than depending on the OS's line endings which may or may not match the file.\n. Can you elaborate more on what this solves?\n. Fair enough.  I suppose we should go ahead and merge it then unless there are other objections.\n. Seems like a reasonable approach.  +1\n. My hunch is the line should be:\n$this->parent->setPath('extension_root', JPATH_PLATFORM . '/' . implode('/', explode(DIRECTORY_SEPARATOR, $group)));\nWhat we have now is, as Naouak correctly pointed out, is inconsistent.  This isn't causing issues but should perhaps be looked at for consistency sake.\n. Well considering no bugs have been reported in actual use, that's probably safe to do.  The problems that stem from directory separator issues happen when you try to do string comparison on paths.\n. Can you please expand on the implications of this?\n. I don't think we want to add the static method in JFactory.\n. It took me quite a while to actually understand how this package was structured.  There is an incredibly liberal use of magic getters, setters, callers and static methods and calls that get sent all over.\nI think there are some basic elements of the package that are useful and good.  However, I think that the approach taken is over complicated.\nThere is a lot of effort put into enabling accessing files using different formats using $fileElement->readIni and proxying to static accessors.  I think a better approach would be to create classes that would take the JFilesystemElement or JFilesystem objects as parameters in their constructors and implement that functionality that way.\nThe other concern I have is some of the non-obviousness of the interface in general.  In my opinion, the way that FileElement->location works is rather unusual.  Using the value TRUE to move the cursor to the end seems odd. Perhaps using actual numbers to set the cursor would be better and it could then be operator on using normal arithmetic.\nIt wasn't entirely clear to me what the differences were between read and push and write and pull.  For some reason I just am not sure what you are doing there.\n. So I think in general we want to rework the filesystem package but I personally don't think this is it.  I'm going to close this until Christophe or somebody can pick this up again and engage in more discussion on it.\n. Also they are logged so it isn't like they are just being eaten up.\n. It strikes me that the code in the gist does not represent the current code that is in the platform tree.  Specifically https://github.com/joomla/joomla-platform/pull/1554 does not seem to have been merged into your version.  This change stores the error in the database driver object properties before proceeding with the reconnection attempt.  Thus the error message likely is lost.  If you update to the newer version of the platform I suspect that your problem will go away.\n. Fatal error: Class 'JNode' not found in .../tests/suites/unit/legacy/base/JNodeTest.php on line 27\n. None of these methods return exceptions so the doc blocks should not claim that they do.\n. My sense is that the issue here is the desire to allow some component developers to use the newer MVC packages without breaking backwards compatibility for legacy extensions.  The legacy bootstrapper is not the answer to that question.  What you'll notice though is that the new MVC package has been significantly decoupled from most of the platform.  Meaning - it does not depend on having a bunch of other classes from the legacy tree as well.\nThe result is that newer extensions can use the new MVC packages by loading those particular files.  The MVC classes are unique in a sense in the context of Joomla extensions because none of those classes get loaded until the component itself loads them.  This means that newer components can use the new MVC classes by simply manually loading them.\nLegacy extensions would by default use the legacy implementation of JModel, JController and JView.  IMO this solves the problem rather nicely.\nI balance all of this with the discussion of the fact that CMS 4.0 is expected to be released in 2014 - approximately two years from now.  I would expect that two years of development will bring with it a good amount of changes especially with the rather significant shifts we are seeing in the web.\n. So I think the majority of the concerns have been satisfied.  Assent has been given from the CMS representatives on the platform team.  I'm going to go ahead and merge this pull request.\n. Code looks reasonable.  Commits needs to be amended so that your proper email address is used (Github isn't picking up your identity correctly for the commits).  Also, tests need to be written for these added methods.\n. Can you comment on how this deals with code deals with non ASCII character sets?\n. Is there really a need for this method these days?  If somebody wants a SimpleXmlElement they should probably call simplexml_load_file or simplexml_load_string.\n. The added flexibility is a plus.  It seems that most/all of the issues brought forward with this have been satisfied.  Pulling.  Thanks.  Notes from this pull request will be brought into the manual at a later date.\n. So what's the point of public function alterDbCharacterSet($dbName) ?\n. If this method is becoming more or less a shell around the php function then it makes more sense to deprecate the method rather than altering it.  Also, there is nowhere that indicates what the actual bug is.\n. How do you account for modules that have user specific data?\n. This is in the legacy tree so it is really up to whether the CMS folks want it or not.  If they want to way in with a yay or a nay then we can make a decision on it.\n. As this is in the legacy tree and really CMS specific, I'm going to close this issue until the CMS folks have discussed it and made a decision.  If they want to go ahead with it, that's fine.  It's really up to them.\n. https://tinker.io/f7b7e\nDemo link for using button instead of href.  If people can try it in a couple of browsers it would be helpful.  You want to make sure that the alert appears and that the message is logged to the console.\n. It would probably have to be getInstance($options) and $options would have to have a 'type' or 'driver' property.  I would be okay with that so long as it doesn't try and cache cache objects.  That isn't JCache's job.\n. Sorry Don,  didn't see the question before.  Different cache drivers would obviously have different options.  If you were using memcached, for example, you might have the address or IP of the memcache server(s) or other connection info.  For a file cache you might want to have a configuration option for the root path of the cache folder.  For a database cache, you might want to be able to inject in a database driver object.\n. Since this is a regression I'd like to see a test for this behaviour so that it doesn't happen again.  Also it would be helpful to have at least some explanation as to what is actually happening.\n. Mysqlpdo is kind of awkward.  Seems to make more sense just to use this as eventually we'll want to be PDO only IMO.\n. Either way, I think we can agree that we want to get rid of the MySQL driver and from a naming perspective calling this one MySQL makes sense, IMO.  There is precedence in that other PDO based drivers aren't prefixed.\nAnyway, if the decision is to rename it Mysqlpdo, that's fine.  I just think it is awkward.\n. I'm not really arguing that we shouldn't keep the Mysqli driver around.  If we don't want to go the whole hog down the PDO path, that's fine.  It obviously seems to be something that differs on a case by case basis.  These days there are three MySQL APIs - MySQL, MySQLi and PDO-MySQL.  The PHP website states fairly clearly that out of the three, MySQL is the one not to use.  My impression is that as far as MySQL is concerned, MySQLi and PDO are about on par as far as support is concerned with at least a few of the core developers preferring PDO.  Thus I think it is a reasonable choice to support MySQLi and PDO but not MySQL.\nAs far as PDO in general, I guess it really depends on the vendor and what sort of support they choose to provide.  It seems Microsoft has gotten on board with PDO but it appears that Oracle has stuck with their own OCI driver.  Which is fine.  It seems evident that we have to choose APIs carefully based on the DB in question.  I would argue that for MySQL PDO is a reasonable choice, but it really isn't a hill I'm willing to die on.  I think we should add support for PDO-Mysql, and if we'd rather call it pdomysql or whatever, I'm fine with that.  I will even do the work do rename it if we can come to a decision.\n. So the deprecation is really beside the point, although it should be a pretty clear indicator that ext/mysql is on its way out when as of today there is a 25-12 vote in favour of adding deprecation notices.  I think we can all agree that we probably don't need the Mysql driver as it is today around anymore - the CMS defaults to MySQLi and I'm not really aware of anything in the way of issues that have arisen.\nThe only thing I think we have to figure out is what we want to call this set of classes.\n. This should be ready to go now.\n. I used a switch rather than inheritance because I wanted to keep it really simple.  This isn't meant to be a full featured do everything library - the interface allows other libraries to be used.\nI plan to use this in JUser as a next step.\n. Please rebase this.\n. Please rebase and squash and then we'll get this merged in.\n. Shouldn't IS_UNIX be true if IS_MAC is true?\n. That's...  odd.  Considering OS X is pretty much the only certified UNIX that people run Joomla on.\n. I'm fine with this if somebody from the CMS can stamp their approval on it.\n. On what environments does this fail?  I am unable to reproduce here.\n. Closing this issue as it no longer merges.  Also, these classes have been moved to the legacy tree so it is up to the CMS to decide whether they want this change or not.\n. > This is the most dead simple implementation to use the new API so we can deprecate the old one. It's not particular nice - I agree. But I have us rather think out carefully how we set up the password hashing than do a quick shot we later regret.\n\nAlso I'm still not sure if the current JCryptPassword interface is the ideal thing. If next year the new \"supercrypt\" algorithm should be used to do some flaw in blowfish a platform consumer has to inject a new object and define a new constant for it which the consumer needs configure into JUser or some other place. Also he probably needs to duplicate at least the verify and detect parts from JCryptPasswordSimple (or possibly inherit from it). That said I haven't come up with a better idea ;)\n\nIf you're going to hard code the hashing mechanism in JUser to the legacy style MD5 password scheme, then this pull request is completely useless and doesn't accomplish anything.  As it stands, it is unreasonable to write a serious application using JUser with any sort of user data.\nAlso, I don't entirely understand your comments regarding JCryptPassword.  What I hear you suggesting is that we should hardcode JUser to use MD5 rather than allowing application developers the flexibility to choose a hashing scheme that meets their needs?  In some areas there are laws that dictate password security standards and MD5 isn't it.\nIt's also worth noting that https://wiki.php.net/rfc/password_hash has been accepted and should appear in PHP 5.5.  The minimum step of allowing this external dependency to be injected means that third party applications could easily implement the JCryptPassword interface and use the new core functions as the implementation.  Leaving the instantiation of JCryptPasswordSimple inside the class with no means to inject an alternative means that you leave people with no choice but to provide alternative implementations of JUser, which is only going to provide another roadblock for application developers.\n. I'm not sure I see the use case.  Can you expand on what you're after?\n. My biggest concern with this is the overlap with getArray and the ambiguity of what to use.  Also, you're duplicating functionality by putting the recursive clean in JFilterInput and in JInput::getArray.  I also wonder how useful this is beyond getArray if everything either gets filtering to CMD or you have to supply a full associative array of keys.  getArray already handles the full associative array of keys.  Are there cases where you want all the variables but you are ok with them all being CMD?  I'm not entirely sure.\n. You should be logging a message if component[option] is not set instead of leaving the second string empty.\n. I'm not really sure what it would do beyond what https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/crypt/crypt.php#L110 JCrypt::genRandomBytes does.  Was there anything specific you had in mind that wasn't covered by that method?\n. Merged.  Thanks for your contribution!\n. I used underscores on protected variables to avoid colliding with columns in the table.\n. You are right @eddieajau.  I have changed it to mixed.\n. @mahagr Those are good ideas and definitely worth exploring.  I'd like to get things in as is first and then we can build on it.  I think what is there provides a good foundation that we can build on.\n. Rebased, squashed and fixed doc block issues.\n. @mahagr I hope you follow up with a pull request with some of the ideas that you had.\n. So the mentioned lines should be changed to use loadColumn.\n. The error is an intermittent error related to comparing timestamps and has been fixed in master so don't worry about it (though if you rebase it will go away).\nMy main question regarding this pull request is that it would seem better to use the PHP methods to do this so that the client is aware of what it is supposed to be sending rather than using direct queries.\n. IMO those sorts of manipulation methods belong in the JDatabaseDriver, not the JDatabaseImporter class, IMO.  The importer methods will certainly use them, but shouldn't own them.  In some cases you can't create, remove databases and tables without access to the underlying connection object which shouldn't be something that JDatabaseImporter has access to.\n. Much appreciated Michael!  Thanks for your work!\n. If we're going to explicitly add this then it should be isHTML not IsHTML.\n. Since there are now no tests left in JGithubHttpTest.php the file should be removed (it causes a test failure).  Alternatively, you could write a simple test for the constructor to make sure the options get set.\n. Merged.\n. https://github.com/elinw/joomla-platform/blob/codecleaning/tests/suites/unit/joomla/object/JObjectTest.php#L42\nThat method needs to be removed because we don't want empty tearDown methods and because it is a parse error (you have no method body).\n. Closing until parse errors are fixed.\n. Closing until code is fixed.\n. Can somebody please test this and make sure nothing breaks if $form is not supplied?  I am concerned that the check at https://github.com/joomla/joomla-platform/blob/staging/media/system/js/core-uncompressed.js#L19 will fail and we'll introduce a bug with this change.\n. Except that now instead of not passing the variable at all we will be passing an empty string.  See http://jsfiddle.net/Syfbg/1/ for an illustration of the difference that this will result in.  I highly suspect that is will cause issues, but if somebody can do some actual testing I would be happy to be proven wrong.\n. I'm closing this until more research and testing has been done.\n. http://stackoverflow.com/questions/4326435/php-include-vs-include-once-speed\nThe include vs include_once is intentional for performance reasons.  This is one of the few places that we really work hard to optimize because it gets called so often.\nI'm going to close this request and suggest you work on solving the actual bug you are experiencing (i.e. why is the file getting included by the autoloader if it has already been included somewhere else (i.e. the class should be defined).\n. I'm not a big fan of this.  It obfuscates what is going on at a casual glance and makes code less readable.\n. Yeah, we can't allow short tags until we move our requirement to PHP 5.4, which won't be quite yet.\n. <?= ?> cannot be disabled on PHP 5.4.\n. Looks better.  Fix up the CS issue and then I'll merge it.\n. Can you fix your commits so that they are properly linked to your github account?\n. I'm going to merge this because it is an improvement.  It should be noted however that for the most part the inspectors are obsolete.  We now have the TestReflection class which has a invoke, getValue and setValue methods that for 99% of cases takes care of everything we were using the inspectors for.\n. Please make all doc changes against staging.  Closing.\n. This is on my list to work on in the next little bit.  I have some unit tests for it and have started some docs but it isn't complete.  There are also a couple of things I wanted to tweak.\nI'm going to close this until it is closer to being ready.\n. Please rebase.\n. I know it's been a while, but if you can clean up the one code style violation we'll get this merged in.\n. +1\n. There are/were some issues with the pull tester that I'll have to keep an eye on.\n. Looks good.  I'd like to see this followed up with a pull request to wrap some of the long lines.\n. So I'll let others weigh in here, but this isn't how I would build  the interface for this.\nSome might have noticed by now that I'm not a huge fan of statics.  Historically we used them all over the place and they have caused us a lot of trouble.  I don't see a great need for them here.\nI would sooner see something like JMediaCollection be instantiated with plain old new.\ni.e. $js = new JMediaCollectionJs($options);\nI think you want to allow for more flexibility in terms of available compressors as there seem to be variety of schemes used and this is something that is changing.  I would probable make JMediaCompressor an interface with two abstract objects implementing it - JMediaCompressorJs and JMediaCompressorCss.  Then you would have one or more concrete classes that extend these two abstract base classes - these classes are where the actual work of compression would happen.  They would be something like:\nJMediaCompressorJsYui\nJMediaCompressorJsNone\nJMediaCompressorJsUglify\n...\nJMediaCompressorCssYui\nJMediaCompressorCssNone\n...\nYou probably want to have some sort of signature method for JMediaCollection so that you don't have to generate a file every time - you only want to generate the file when the file doesn't already exist.\nNew classes should conform to the standard in use by the autoloader and so you don't really need to have an isSupported method - the one you have limits compressors to the current directory which is going to limit people who want to use their own.  Instead people can just use class_exists or at the least you could make a simple isSupported method that does the class exists for people.\nI would add a setCompressor method to the JMediaCollection class and combine the two using composition.  In this way, it is very easy to change the compression method used by the collection object.  Then you have a toFile method or something in JMediaCollection that will write the collection to a file.\nYou have made a good start and I commend your effort in putting this out there.  I think we just need a few tweaks to get it ready to add to the platform.\n. http://developer.joomla.org/pulls/pulls/1764.html\nThere are issues there that need to be addressed before we look at this.\n. I would more be in favour of outright getting rid of JApplication(Base)::getInstance for the following reasons:\n1. It is less clear than just doing: $app = new MyApplicationWeb or MyApplicationCli\n2. There is no reason to make it a static, and having it as a static encourages poor design that is hard to test.\n3. While it is usually true that there is only one application object it is not always true.  It is always better to inject your dependencies rather than trying to grab them out of global state variables.\n. You need unit tests for this code.\n. This is great . We'll get this merged in once the build passes again.\n. sigh.  I just merged this and it breaks a test.  Can you fix it up?\nJGithubUsersTest::testGetUsers Expectation failed for method name is equal to string:get when invoked 1 time(s) Parameter 0 for invocation JHttp::get('/users', null, null) does not match expected value. Failed asserting that two strings are equal. --- Expected +++ Actual @@ @@ -'/user' +'/users' .../libraries/joomla/github/users.php:137 .../tests/suites/unit/joomla/github/JGithubUsersTest.php:235\n. So your change results in 11,750 checkstyle errors, 11 unit test failures and 5 unit test errors.  In addition, it touches about 880 files which will more than likely mean that it will cause a merge conflict with at least one other pull request.  Nice attempt I guess, but I think something got missed along the way.\nClosing.\n. There is a unit test error.  Please fix it up and ask for the request to be reopened.\n. boolean\n. not\n. XML\n. two returns?\n. do we need the commented code in there?\n. minor\ns/and/an/\n. do we need all this commented out code?\n. is this an indent problem?\n. What does our standard say about object/Class Name?  In file above, we have object, here we have JNode?\n. I agree with Rouven - protected methods are protected presumably so they can be used by child classes.\nPrivate methods and variables should be used where appropriate.\n. Should this be implemented before we pull to master?\n. What is this actually testing?\nIt seems you are doing the identical operation of two objects of the same type and comparing the results to make sure they are the same.  Is this what was intended?\n. See comment above.\n. See comment above.\n. See comment above.\n. See comment above.\n. See comment above.\n. See comment above.\n. See comment above.\n. See comment above.\n. See comment above.\n. See comment above.\n. This is an API change.  Is there a particular reason for it?  I don't get it.  See also all the other properties that are being made static - why?\n. It isn't clear to me what this is testing against.  It might be worthwhile to document the stubs with the tests.\n. Each new test should be in a separate method.\n. That looks like a file encoding error.  Can you fix that?\n. See http://developer.joomla.org/manual/chap-Joomla_Platform_Manual-Testing.html#idp6957800 for information on working with protected and private variables and methods.  New inspectors should not have methods to work with them as that is now provided by ReflectionHelper.\n. I'll merge but we should probably change the other $stubpath just to be consistent.\n. This should be public.\n. This should be public.\n. What is this supposed to do?  It doesn't look like anything happens if you click on this button.  Did I miss something?\n. #nitpick - strictly speaking, google comes after github alphabetically.\n. IMO this should be isAuthenticated() and the one above should be authenticate()\n. Is there a particular reason for this implementation over against the one in getSalt?  Many of the hash types support 64 bit digits and this implementation only supports 62 bits.\n. JCryptPasswordSimple shouldn't be instantiated here.  You need to instantiate it in the constructor or at least create a way to inject the dependency.\n. This change is unrelated to the pull request.  Please keep it on topic.\n. JCryptPasswordSimple::create isn't a static method so you shouldn't be calling it as one.  Instead, you want to invoke the method on the supplied dependency.  Also, you shouldn't hard code it to JCryptPassword::JOOMLA.  The preferred hash type should either be adding to JCryptPassword or set as a configuration value in JUser.  The default for the platform should probably be blowfish and if other applications really want to keep using an outdated hashing scheme they can choose to.  The CMS should also consider switching to blowfish as well.  The way the library works makes this very easy to do (i.e. it can verify passwords in the old format but create new hashes in a different format).\n. Either way, you're still missing two characters for some of the salts which should be there.\n. These should be broken up into different test methods so you can get a granular picture of what is breaking.\n. Again, break these up.\n. This method doesn't seem to return anything.\n. Delete doesn't return a response body.\n. You should rely on the autoloader where possible.\n. I may be missing something but it seems you are passing $oauth into almost every single method.  It would seem to make sense to put that into one of your base classes so that it doesn't have to be passed every time.  Similar to the way that JGithubObject stores the credentials and then automatically uses them when sending requests.\n. To save disk space.  :P\n. Can you please rename the methods createHook, deleteHook, getHook, testHook and editHook to create, delete, get, test and edit?\n. Please break these up into separate tests (i.e. make a method for each test).\n. These also should be three different test methods.\n. Break these up into two methods.\n. Ditto here.\n. Again here.  As an explanation, each test should be testing only one scenario.  More granular tests means that we get better information back from unit test reports (i.e. we can tell that the issue with getBool only happens when it is false).\nThe other thing to note here is that $_GET, $_POST etc don't get populated with integers, booleans, floats, etc.  If you do a var_dump of a typical request super global you will find that it contains a string.  You should change your tests to match this so that they more closely represent the real world scenario.\n. You need to remove this from your changeset.\n. Same with this.\n. Not sure why that isn't flagged as a coding style violation.  Please make it:\n(is_array($attribs) ? JArrayHelper::toString($attribs) : $attribs)\nOther than that it looks good and we'lll get it merged in.\n. ",
    "elkuku": "hmm... Does github provide us with the ability to vote for a specific pull request ?\nI would give this +1 ;)\n. I believe the template guys would love it :)\n+1\n. shure - still learning ;)\n. Small personal error analysis: http://elkuku.github.com/pulltester/pulls/210\nThe warnings do not concern your code ;)\n. You can add someone elses fork/branch as a new remote and submit a pull request to his/her repo and if (s)he merges your pull it gets included - I did this in #417 and it worked OK.\nI am a gitnoob myself, so I'm not entirely sure that this is the right way but it worked ;)\nhope that helps\n. A wise decision - my 0.02 Ecuadorian US $\nHere is another POC for the platform. It goes into an infinite loop in JError when there is no file includes/application.php\nWorks well with a JApplication in place.\n``` php\n<?php\ndefine('_JEXEC', 1);\ndefine('JPATH_BASE', dirname(FILE));\ndefine('JPATH_SITE', JPATH_BASE);\ndefine('JPATH_ADMINISTRATOR', JPATH_BASE);\ndefine('JPATH_INSTALLATION', JPATH_BASE);\ndefine('JPATH_CONFIGURATION', JPATH_BASE);\ndefine('JPATH_PLATFORM', $_SERVER['JOOMLA_PLATFORM_PATH'].'/libraries');\nrequire_once JPATH_PLATFORM.'/import.php';\njimport('joomla.environment.uri');\njimport('joomla.utilities.date');\njimport('joomla.application.helper');\n$client = new stdClass;\n$client->name = 'mywebapp';\n$client->path = JPATH_BASE;\nJApplicationHelper::addClientInfo($client);\n$config = array ('session' => false);\n$application = JFactory::getApplication('mywebapp', $config);\necho 'We do not get here :(';\n$application->render();\n```\n. Wow, thats strange -- No code has changed.. I got this:\nTime: 01:36, Memory: 62.00Mb\nOK, but incomplete or skipped tests!\nTests: 2057, Assertions: 10009, Incomplete: 543, Skipped: 75.\nWouldn't it be good to include the failures/erros in the \"Test Results\" ?\n. argh... is there a reason for not setting \"staging\" as the default branch ?\nReopened as pull/321\n. Checkstyle error details:\nlibraries/joomla/filesystem/folder.php:87\nExpected \"foreach (...)\\n...{\\n\"; found \"foreach (...) ...{\\n\"\nlibraries/joomla/filesystem/folder.php:127\nExpected \"foreach (...)\\n...{\\n\"; found \"foreach (...) ...{\\n\"\nlibraries/joomla/filesystem/folder.php:576\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...)\\n...{...}\\n...else \"\nlibraries/joomla/filesystem/folder.php:583\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...)\\n...{...}\\n...else \"\nlibraries/joomla/filesystem/folder.php:590\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...) ...{...}\\n...else \"\nlibraries/joomla/filesystem/folder.php:591\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...) ...{...}\\n...else \"\nlibraries/joomla/filesystem/folder.php:596\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...) ...{...}\\n...else \"\nlibraries/joomla/filesystem/folder.php:606\nExpected \"foreach (...)\\n...{\\n\"; found \"foreach (...) ...{\\n\"\nlibraries/joomla/filesystem/folder.php:607\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...) ...{...}\\n...else \"\nlibraries/joomla/filesystem/folder.php:619\nExpected \"foreach (...)\\n...{\\n\"; found \"foreach (...) ...{\\n\"\nlibraries/joomla/filesystem/folder.php:620\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...) ...{...}\\n...else \"\nlibraries/joomla/filesystem/folder.php:621\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...) ...{...}\\n...else \"\nlibraries/joomla/filesystem/folder.php:630\nExpected \"if (...)\\n\"; found \"if (...) \"\nlibraries/joomla/filesystem/folder.php:632\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...) ...{...}\\n...else \"\n. Checkstyle error details:\nlibraries/joomla/form/form.php:1661\nConcat operator must be surrounded by spaces\nlibraries/joomla/form/form.php:1661\nConcat operator must be surrounded by spaces\n. Checkstyle error details:\nlibraries/joomla/installer/adapters/template.php:508\nConcat operator must be surrounded by spaces\n. Checkstyle error details:\nlibraries/joomla/html/toolbar.php:87\nMissing function doc comment\n. Checkstyle error details:\nlibraries/joomla/form/fields/media.php:131\nConcat operator must be surrounded by spaces\nlibraries/joomla/form/fields/media.php:131\nConcat operator must be surrounded by spaces\nlibraries/joomla/form/fields/media.php:132\nConcat operator must be surrounded by spaces\nlibraries/joomla/form/fields/media.php:132\nConcat operator must be surrounded by spaces\n. Checkstyle error details:\nlibraries/joomla/application/component/controller.php:154\nReturn comment requires a blank newline after it\nlibraries/joomla/application/component/controller.php:1148\nAdditional whitespace found at end of file\nlibraries/joomla/application/component/model.php:548\nAdditional whitespace found at end of file\nlibraries/joomla/database/table.php:27\nMissing class doc comment\nlibraries/joomla/database/table.php:1522\nAdditional whitespace found at end of file\n. Checkstyle error details:\nlibraries/joomla/environment/browser.php:26\n@deprecated tag comment indented incorrectly; expected 1 spaces but found 3\n. I love GitHub :)\n. That's good news.\nAs I stated it was only an experiment. It helped me in creating and verifying the sniffs and maybe it could be used to generate some kind of documentation so the (dummy) code would server multiple purposes.\nSpeaking of which, would you like me to update / add the \"new standards\" to the docbook documentation ? \nLooking forward to get my hands on the CMS code as well :).\n. Fine - right now I am at #CPQUITO - but next week I believe I will find some time to work on this one.\n. Quick question @eddieajau: Do I need to adjust any settings in XMLMind to edit the documentation (like max. line length) ?\n. Actually that does not fix the warning (at least on my box)..\nJObject::get($property, $default = null)\nJFTP::get($local, $remote)\nTo fix the strict standards warning you would write:\nJFTP::get($local, $remote = null)\nBut that won't make much sense...\nIMHO the proper way would be renaming the method to something like JFTP::getFile(), \nBTW: Did you noticed the new error_reporting level in the backend config labeled \"development\" - that should help in hunting down those errors ;)\n. Checkstyle error details:\nlibraries/joomla/session/storage/database.php:121 - 130\nTabs must be used to indent lines; spaces are not allowed\nlibraries/joomla/session/storage/database.php:130\nClosing brace indented incorrectly; expected 12 spaces, found 13\nlibraries/joomla/session/storage/database.php:131\nTabs must be used to indent lines; spaces are not allowed\n. Checkstyle error details:\nlibraries/joomla/session/storage/database.php:120, 121\nTabs must be used to indent lines; spaces are not allowed\nlibraries/joomla/session/storage/database.php:121\nExpected \"if (...)\\n\"; found \"if (...) \"\nlibraries/joomla/session/storage/database.php:122 - 129\nTabs must be used to indent lines; spaces are not allowed\n. The warnings come from all over the place - the errors shouldn't ;)\nCheckstyle error details:\nlibraries/joomla/form/helper.php:202\nConcat operator must be surrounded by spaces\nlibraries/joomla/form/helper.php:203\nExpected \"foreach (...)\\n...{\\n\"; found \"foreach(...)\\n...{\\n\"\n. I believe, that's a mistake. From my POV your code is OK\nPlease be patient ;)\n. Checkstyle error details:\nlibraries/joomla/html/html/access.php:58\nConcat operator must be surrounded by spaces\nlibraries/joomla/html/html/access.php:58\nConcat operator must be surrounded by spaces\n. Quite impressive :)\nWhat I love most are the changes of @return void to the proper classes - two thumbs up ;)\n. I didn't even noticed that the @return statements belong to constructors - bad github diff... ;(\nSo.. I would assume that the same goes also for destructors ? (just in case)\nThat would be something like:\n- Standard: Constructor and destructor comments must not have a @return tag.\nIf this is OK I can modify the corresponding sniff.\n. Checkstyle error details:\nlibraries/joomla/base/observable.php:197\nPlease end your files with an empty line.\nlibraries/joomla/event/event.php:34\nConstructor and destructor comments must not have a @return tag\nlibraries/joomla/html/editor.php:46\nWhitespace found at end of line\nlibraries/joomla/user/authentication.php:491\nPlease end your files with an empty line.\n. Overall, very nice. Don't trust the auto formatters :P\nsorry for the spam :(\n. Hannes, the code sniffer actually does not run over the unit test folder... But it's good to have this done ;)\nOn my system I do not have any errors for unit tests or code style for this pull.\n. Don't get me wrong, I am not saying that the unit tests should not comply to the standards - I LOVE coding standards :P\nIt's just that ATM there is no mechanism to enforce this.\n\"A lot\" of work is actually about 6500 + errors... Maybe we can get a smart auto formatter to do the job..\nOne way or the other - it's just a decision that has to be made and - someone to DO it ;)\n. Actually there is a sniff that should check for an empty line at the end of each file:\nhttps://github.com/joomla/joomla-platform/blob/master/build/phpcs/Joomla/Sniffs/WhiteSpace/SuperfluousWhitespaceSniff.php#L95\nIf it doesn't - please report ;)\nSo if you run:\nphpcs --standard=build/phpcs/Joomla/ --sniffs=Joomla.WhiteSpace.SuperfluousWhitespace tests/\nThat should do the trick ;)\n. hmm, not getting your point. Both pull requests are still open and wont trigger a jenkins build. Please correct me..\nBut the interesting question remains if there is someone who is willing to fix the [quote phpcs]6675 SNIFF VIOLATION(S) WERE FOUND IN 58 SOURCE(S)[/quote] ;)\n. And this a serious bug I also believe it's very very annoying and should be fixed as soon as possible... I have an idea ianmacl/pulltester#1 what could be causing this bug but I'm not sure ;)\n. well... at least it says \"0 errors\" :)\n. TBH I would have expected less warnings :P\n. Could you please spell out the errors that appeared in #482 ?\nI wrote a set of test files that may help in training the sniffs\nhttps://github.com/elkuku/joomla-platform/tree/sniff-test/tests/code_sniffer/tests\nEspecially this could be helpful:\nhttps://github.com/elkuku/joomla-platform/blob/sniff-test/tests/code_sniffer/tests/ControlStructures/bad.php\nSo here is a test case that fails applying your modifications:\nif (true)\n{\n    true;\n}\nelse {\n    true;\n}\n. Again. Could you please spell out a 'bug' which is not caught by the former sniff.\nYour fix would allow the above mentioned coding standard violation while the actual sniff does not.\nEdit: TBH, there seems to be a bug in the CodeSniffer. It's not that your modifications are incorrect, but the code sniffer for some obscure reason won't accept them this way - I spent quite some time trying to fix it, and the actual sniff is the best solution I could find.\n. -1 from me, I find it easier to read when the lines are a bit \"separated\".. also it seems more consistent to have the same rule for all curly braces.\n. Which proofs my argument :P Once you start thinking about which brace should go on a new line and which not -- you end up in a very annoying discussion..\nBut yes, on the other hand this is another proof that it is not good practice to let a tool (an auto formatter) rule your needs.\nBefore going any further: Let's see what other people came up with so far: http://en.wikipedia.org/wiki/Indent_style\nOr are we really going to reinvent the wheel (again) \u00bf\n. > If not, is there a better resource that defines the standards?\nExcellent question Amy :)\nThere is a platform coding standards \"document\". \nThe source can be found here: https://github.com/joomla/joomla-platform/tree/master/docs/coding-standards\nAnd my personal html output is here: http://elkuku.github.com/joomla-platform/coding-standards/\n. :+1:\n. Christophe, I think you meant #502 ;) very clever :+1:\nI am going to close this one in favor of your solution.\n. :+1: How about adding a .htaccess file to prevent direct access - just in case ?\n. Well, actually to let the code sniffer sniff your files all you need to do is:\ncd path/to/joomla/platform\nphpcs --standard=build/phpcs/Joomla path/to/check\nIf you are a happy Linux (Mac?) user and have the CodeSniffer installed and in your path, this should do the job.\nIf you are more the \"GUI guy\",have a look at this: http://docs.joomla.org/Joomla_CodeSniffer#IDE_integration. Just be sure to set the path of the \"Sniffs\" to the folder of your actual platform \"clone\". (@todo: more docs...)\ne.g. in your case, you might start with a:\nphpcs --standard=build/phpcs/Joomla libraries/joomla/database/database/postgresql.php\nYou got intimidated by 184 errors ? ;)\nI have a personal interest in the PostgreSQL driver natively being supported by Joomla!, because it would save me the time of adding my own ;)\nSo I would like to help a bit making the code acceptable to the high Joomla! CodingStandards (tm) :)\nAlso GitHub makes it fairly easy to collaborate with others. From your side, you just review the changes and push a big green button to merge them. Really cool.\nI would like to start with postgresql.php and postgresqlquery.php (imagine why..) this would be about 200 from the 486 errors.\nWhat do you think ?\n. Yes, I believe the sniffs for the docblocks are still a bit fishy ;)\nI guess The error you get is not related to the ammount of space but to the order of the tags - Of course I could be wrong..\nCould you post a docblock that produces this error ?\nThe PostgreSQL branch you are talking about is this: https://github.com/gpongelli/joomla-cms/tree/postgresql ?\nI was not aware of it's existence ;) Of course I'll give it a shot until this baby get's merged and some day added to the CMS.\nRegards\n. I have a personal test site that runs basically the same tests.\nMy Results: No problems on checkstyle.\nThe Unit tests fail on my side because of a recent change to the JoomlaTestCase class.\nYou may see for yourself: http://elkuku.github.com/pulltester/pulls/532\nAgain: this is not official =;)\n. So, here are my results for comparison http://elkuku.github.com/pulltester/pulls/532\n. I am running PHPUnit 3.6. I believe it is the recommended version for now (might be required later)\nI upgraded postgres to 9.1.1 but unfortunately the only error that disappears is the version check ;)\nI also set the collation to it_IT but missed the UTF-8 :P - I believe this test is not really \"universal\"..\nHave a look: http://elkuku.github.com/pulltester/pulls/532\nBut let's see what joomla-jenkins errors are..\nNot sure if the build server could be set up to run those tests... would be even more interesting ;)\n. Are they working on your machine ? Thanks for pointing out my tests, as I was too lazy to look at why they are failing - until now..\nTurns out that the \"required system setup\" has changed.. By default the JHttp tests are trying to access a file named jhttp_stub.php located in the folder that receives requests from http://127.0.0.1 on your local file system, as defined per default in config.dist.php\nSo, before running the test with the default values, you will also have to modify the path or move the file ;)\nDOCS please !\nThe remaining two failures - I believe there is something wrong with the test - ...\nThe JHtml test, when executed on its own, runs fine. But when running it as part of a \"suite\" (e.g. \"html\") it fails.\nIt registers relative paths when on it's own and absolute paths when in a suite. I don't know how the tests could run for Mr. Jenkins, or anybody else..\nAccording to the latest log on the build server: http://build.joomla.org/job/platform/348/console\nTests: 2781, Assertions: 11161, Incomplete: 785, Skipped: 124.\nWhile on my local machine I get:\nTests: 2787, Assertions: 11287, Incomplete: 785, Skipped: 76.\njoomla-jenkins:\n1872 tests and 11090 assertions.\nSo what is going on here ?\nI believe it would be great if we had result from different machines to compare. Or, at least, some explanation from joomla-jenkins why his/her tests are failing...\nBTW my name is Nikolai ;)\n. Hmm I got a fatal error about missing JRequest only if I run the test on it's own or as part of the \"html\" folder. There is a similar error for the form package..\n. The JRequest thing is fairly esay ;) I just replaced JRequest by JInput and all was good. But yes, this is even more off topic than what I've written so far..\n. Actually it is yours @elinw from #566 - they should pay more attention to poor Mr. Jenkins before merging ;)\nJeremy, did you ran the sniffer over the whole repo ? Actually only the libraries folder is supposed to comply to the standards.\nTry\nphpcs --standard=build/phpcs/Joomla libraries/joomla\nfrom the root of your platform repo.\nThere is also some docu if you prefer a GUI: http://docs.joomla.org/Joomla_CodeSniffer#IDE_integration\nBTW: The PTI project has updated it's sources and runs fine in Eclipse Indigo now.\nHappy sniffing :)\n. Well, at least the changes don't break joomla-jenkins tests ;-)\n. Do you mean you also get the fatal error on JRequest when running the whole suite ?\nUnit tests are really strange beasts :P\n. After upgrading PHPUnit to version 3.6.4 these errors disappeared\n. Well, yeah.. I believe it is not more than an \"interim solution\", I wouldn't call it \"cheating\" ;) but I believe it should be good enough to make \"remember\" that there is still some work to do.\nWhen it comes to removing/changing the deprecated stuff some more careful thinking will be required on how to proceed. On the other hand, there are very few private methods/properties right now, so some of these might be good candidates.\nIt is also an attempt to continue @chdemko's work on #502\n. You mean private variables should also go without underscore ? I would totally agree as I personally hate those underscores.\nIt would be a slight modification of the sniff, and some more warnings.\nThe intent of this pull is to \"mask\" those warnings, so they won't appear in the \"reports\" @joomla-jenkins kindly generates for every pull request, while marking vars and methods as deprecated so they could be changed when there it's \"time\".\n. So would it be OK to continue with the \"rest\" ? Just to be absolutely clear...\n1) Mark the protected vars and methods as deprecated, as in this pull.\n2) Leave the private vars and methods as they are - for now ?\n. Actually I wasn't quite sure myself when I changed it.\nThere was a man who drove his car into a lake because his navigator told him to go straight. Don't trust the machines ;)\nSo I changed the machine, err the sniff, to look if there is a ternary \"?\" before the operator, and also that people might use a + sign for a positive number ;)\n. I think this is related to one of the other pulls ;)\nBut yes, good stuff. When it is done I believe the sniff should give an error instead of a warning on missing scope modifiers.\n. Yes, this is still allowed.\n. Well, I would be curious about honorable Mr. Jenkins error.. I ran my \"personal\" jenkins, without errors. Could be a hickup :P\nhttp://elkuku.github.com/pulltester/pulls/572\n\nall the new issues ?\n\nI merged the master, found 1 (one) new error, fixed it, pushed, let's see what Mr. Jenkins says ;)\n. Actually Jenkins is failing because ..\ntotal number of annotations exceeds the threshold 500:\nwhich is related to #575 \nShould be good after merging this one\n. BTW..... I believe the jenkins tests are failing (mine also) because it seems that you should use the language construct empty() on variables only:\n\nempty() only checks variables as anything else will result in a parse error.\n\nI get a :\nParse error: syntax error, unexpected ')', expecting T_PAAMAYIM_NEKUDOTAYIM  in .../libraries/joomla/filesystem/path.php on line 180\nLet me say: WOW =;)\n. In case you feel lost about the 117 errors...\nHere is some documentation: http://docs.joomla.org/Joomla_CodeSniffer\nPlease pay special attention to the note in usage related to the platform that is different to the (nonexistent) code style of the CMS  ;)\nI have set up a personal page that might also help to resolve the checkstyle errors. About the unit tests - I am not sure as results seems to differ across different operating systems.\nhttp://elkuku.github.com/pulltester/pulls/610 <= for reference only !\n. Here is some documentation: http://docs.joomla.org/Joomla_CodeSniffer\nPlease pay special attention to the note in usage related to the platform that is different to the (nonexistent) code style of the CMS  ;)\nI have set up a personal page that might also help to resolve the checkstyle errors. About the unit tests - I am not sure as results seems to differ across different operating systems.\nhttp://elkuku.github.com/pulltester/pulls/612 <= for reference only !\n. You should merge/rebase the latest changes from the master (into your master..). Your build.xml is quite old, as well as the sniffs..\nEdit: Oh and you don't need to use absolute paths.. just cd to the platform \"root\" and run\nphpcs --standard=build/phpcs/Joomla libraries/joomla/string/inflector.php\nYou also have both inflector.php and stringinflector.php in your repo, so you actually have 72 errors = 36 errors * 2 ;)\n. You may safely omit the warnings as they do not concern your code. I believe they should be fixed/not displayed/masked (#564) - anyway - Those warnings are expected :(\nAnother edit.. if you omit --report=checkstyle the output should be a lot easier to read (to the human eye) ;)\n. The unit tests run fine for you ? I think they need an update because of the name change ;)\n. This fixes the UT error on my side too.\nNot sure why they would only appear \"locally\", but it works :)\n. > So, obviously, he's got some super secret squirrelly stuff going on to keep from getting that failure ;-)\nThis is, honestly, the only reasonable explanation :P\nThe error also does not appear on the build server but the test gets executed - another JSecret\u2122...\n. About the 1 failure from the unit tests, I don't know about Mr. Jenkins error, but mine is this:\nhttp://elkuku.github.com/pulltester/pulls/624\nMaybe this helps..\n. @realityking right. I removed the vars again and changed the @deprecated message as in JSimpleXMLElement. Do you know of other classes that are deprecated ?\n@jonnsl Good catch - that's kind of a show stopper :( I believe JDatabase::insertObject() should use another \"method\" to identify internal fields.. reverted\n. Look ma, lotsa zeros :)\n. The CMS might not be \"ready\" for this change yet.. so - Perfect ;)\n. No, not really.. If there is a chance to get it merge it might need an update. If not - feel free to close it :(\n. Closing this as it has been split up into several smaller pull requests that simply rename the protected members.\nSee: Rename protected members in JXXX..\n. I believe those pesky checkstyle errors should be marked red ;-)\n. There are some more... http://elkuku.github.com/pulltester/pulls/657\n. Almost ;) three new ones.. Tip: Eclipse save actions (PHP): remove trailing white space ;)\nhttp://elkuku.github.com/pulltester/pulls/657\n. It says something like the autoloader fails to autoload ;) http://elkuku.github.com/pulltester/pulls/661\n. It features a time stamp ;)\nBut it seems to be taken before your last push - now the error is different.. http://elkuku.github.com/pulltester/pulls/661\n. Trying to implement a __get() method in JView I get a\nNotice: Indirect modification of overloaded property has no effect\nfollowed by a\nFatal error: Cannot assign by reference to overloaded object\nboth from JView::asignRef() that also does a check if the first character is a _ :(\nLooking at $name and $_name, turns out that both are in use but $name has never been declared:\n``` php\n<?php\nclass JView extends JObject\n{\n    public function __construct($config = array())\n    {\n        // Set the view name\n        if (empty($this->_name))\n        {\n            if (array_key_exists('name', $config))\n            {\n                $this->_name = $config['name'];\n            }\n            else\n            {\n                $this->_name = $this->getName();\n            }\n        }\n...\n    }\npublic function getName()\n{\n    if (empty($this->name))\n    {\n        $r = null;\n        if (!preg_match('/View((view)*(.*(view)?.*))$/i', get_class($this), $r))\n        {\n            JError::raiseError(500, JText::_('JLIB_APPLICATION_ERROR_VIEW_GET_NAME'));\n        }\n        if (strpos($r[3], \"view\"))\n        {\n            JError::raiseWarning('SOME_ERROR_CODE', JText::_('JLIB_APPLICATION_ERROR_VIEW_GET_NAME_SUBSTRING'));\n        }\n        $this->name = strtolower($r[3]);\n    }\n\n    return $this->name;\n}\n\n}\n```\nSo there is definitely something more here.\n@janschoenherr Could you give an example of\n\n...the default template search path might be wrong\n\n?\n. That doesn't sound bad.\nSo the functions an members corresponding to the \"messagequeue\" in JApplication should be deprecated ?\nThe code I proposed only adds the functionality to JApplicationWeb, where I believe it make some sense..\nActually I am using the message queue to replace the calls to JError::raiseWarning and JError::raiseNotice in CMS extensions;)\nBut JLog also sounds like a good replacement.\nPlease scratch that - this is what happens when you are looking at \"old\" pull requests ;)\n. The little \"detail\" is found in the docblock as @deprecated ;)\nDo you get any errors or whatever that caused you to propose the change ?\n. Sorry I missed the tracker ID ;)\nThe problem could be a change introduced about two month ago (ref) when name is used in getName() but _name is used in the __construct() function.\nCould you try to change _name to name in the constructor and see if this fixes the issue ?\nIt would be really cool if you could post a small snippet showing \"how\" you are instantiating the view. Just to be sure..\n@realityking: I agree ;)\n. great :)\nAnother (small) observation: The docblock declaration states @var    array which is obviously bad - while you are on it, could you also change this to string ?\n. Just a small note while we are on it..\nJView::assign() and JView::asignRef()\nphp\n<?php\nforeach (get_object_vars($arg0) as $key => $val)\n{\n    if (substr($key, 0, 1) != '_')\n    {\n        $this->$key = $val;\n    }\n}\nWhile I never really understood the use of these functions ($this->assignRef('foo', $foo) vs $this->foo = $foo since you have to access them as $this->foo in your view template anyway), they might cause some trouble in the \"new\" approach of deprecating underscored protected member vars as they are actually setters for the class....\n. I have a personal (non official) instance of the pull tester:\nhttp://elkuku.github.com/pulltester/pulls/691\n. No, sorry mine is updated manually, but the official one is updated every three hours AFAIK.\n. ... but I have updated it now ;)\n. I fixed the failure (hopefully) but I am lost with the remaining 2 errors.\nThe function is broken and I can not understand how the unit tests could have passed before in the first place..\nA quick test on the Joomla! CMS:\n``` php\n<?php\n$exporter = new JDatabaseExporterMySQLi;\n$result = (string) $exporter->setDbo(JFactory::getDbo())->from('#__users')->asXml();\n// alternative:\n// $result = (string) JFactory::getDbo()->getExporter()->from('#__users');\nvar_dump($result);\n```\nThis gives a bunch of warnings like\nNotice: Trying to get property of non-object in .../libraries/joomla/database/database/mysqlexporter.php on line 176\nbecause JDatabase::getTableColumns() is called without the second parameter, so it will only return the field types but no objects.\nThe resulting XML file looks like this:\n<table_structure name=\"#__users\">\n   <field Field=\"\" Type=\"\" Null=\"\" Key=\"\" Extra=\"\" />\n   <field Field=\"\" Type=\"\" Null=\"\" Key=\"\" Extra=\"\" />\n   <field Field=\"\" Type=\"\" Null=\"\" Key=\"\" Extra=\"\" />\n...\nSo the unit tests are definitely \"faking\" something here.. but where ?\n. It's a pleasure ;)\n. Hmm, might I place a small RFC here, somewhat related to the sqlexporter ?\nI am currently playing in a multidb branch with options for multiple databases. The first goal was to have separate options for the CMS installation process, so I started in libraries/cms.\nThen I wrote some basic importers and ended up with the crazy idea that the installer could accept xml files instead of sql files to install extensions. I did a small POC (included in the branch) and It seems to work :)\nIt looks like this: https://github.com/elkuku/joomla-cms/tree/multidb/libraries/cms/database\nNow the question is if this actually makes any sense and, if so, to which part of the library should I send my pull request...\n. Sorry for the late reply..\nAs for the unit test: I have to confess, that I am a bit lost on how the database unit tests are supposed to work.. I did the first shy step and was honoured with a fatal error. I use the following chaining for exporting the data: $rows = $this->db->setQuery($query)->loadObjectList();\nUnfortunately the Mockdatabasethingy's::setQuery() method returns void  - a clear show stopper. I tried to return a new JDatabaseGlobalMock, implementing a LoadObjectList() method that returns a FooBar object - but I feel that this is not the right way - any advise on this would be highly appreciated ;)\n. I would vote for a \"assignment in condition\" sniff ;)\n. @beat Actually I was pretty serious, but always with a little ;)\nThere is already a Squiz sniff for \"assignment in condition\" but it seems to trigger also ternaries - working on it..\n. wow @beat, seems you got me pretty wrong (:() I am totally in favor of the \"elimination\" of any \"assignment in condition\" (no need to ask google why..). I believe it's very bad style and it always bugs me whenever I find it. My current IDE also marks it red..\nI would love to see such a sniff being implemented to avoid further errors (like the one at hand).\nApologies for any misunderstanding, as english is also not my native language.\nAs for the \"place to discuss\" - of course, you're right - it was meant more as a \"little site note\" while we are on it ;)\n. The warning refers to a missing scope modifier for the function replacePrefix()\nThe white space in line 685 is still present ;)\n. nplurals=4; plural=(n==1 || n==11) ? 0 : (n==2 || n==12) ? 1 : (n > 2 && n < 20) ? 2 : 3 ref\n. Hey,\nthe Joomla! project unfortunately does not provide a detailed error analysis (yet).\nYou should set up the CodeSniffer (and PHPUnit) on your local system.\nDetailed instructions can be found here: http://docs.joomla.org/Joomla_CodeSniffer\nAs a personal unofficial playground project I set up my own instance of the script that Mr. joomla-jenkins uses for his analysis and tweaked a HTML output, e.g. for your pull request:\nhttp://elkuku.github.com/pulltester/pulls/730\nhF\n. Sounds like a valid request ;)\n. No.\nSeems that it won't be accepted, so I am going to close it myself ;(\n. I believe Mr. joomla-jenkins should learn to SCREAM in case of any anomaly to the tests....;)\n. Suggestion:\nAs char_length can be used in both \"select\" and \"case\" statements, and the syntax to use may be vendor specific, what if we implement a new function that deals with this \"anomaly\" ?\nsomething like:\n``` php\n<?php\nJDatabaseQueryPostgreSQL\npublic function whenCharLength($field, $operator = '', $condition = '')\n{\n    if('' == $operator)\n    {\n        // Postgres special for boolean true comparison\n        $condition = ' != 0';\n    }\nreturn 'CHAR_LENGTH(' . $field . ')'.$operator.$condition;\n\n}\n```\nThe changes in CMS would be:\ne.g. components/com_contact/models/contact.php\n-  $case_when .= $query->charLength('a.alias');\n+  $case_when .= $query->whenCharLength('a.alias');\nThis might allow more flexibility.\n. Well, it has to be implemented in the extending classes only when necessary (e.g. Postgres). The base class function could be:\n``` php\n<?php\nJDatabaseQuery\npublic function whenCharLength($field, $operator = '', $condition = '')\n{\n    return 'CHAR_LENGTH(' . $field . ')'.$operator.$condition;\n}\n```\nIf this is OK for the extending classes (e.g. MySQL and SQLServ) there is no need to implement it.\nAlso it is meant as an additional function, not as a replacement for charLength().\n. Should be good now\n. Next try..\nOT: PHPStorm's merge tool is really cool ;)\n. It seems you are not running the code sniffer ;) May I humbly suggest to set \"Remove trailing white space on save\" in your IDE ? http://elkuku.github.com/pulltester/pulls/788\n. Interesting - first time the sniffer lies - apologies ;)\n. I also found this bug while playing with this class - Seems like a \"won't fix\" - see: #707 :(\n. As for Netbeans/CodeSniffer, have a look at: http://docs.joomla.org/Joomla_CodeSniffer#Netbeans\n. Wow this is pretty cool stuff, didn't knew about the possibility to use the docblocks for type hinting magic functions..\nBased on this, it would be pretty cool to also document the __get() methods like this:\nhttp://manual.phpdoc.org/HTMLSmartyConverter/HandS/phpDocumentor/tutorial_tags.property.pkg.html\nSo, is this your next step, or would it make sense for me to invest some time on this ?\nP.S. PHPStorm rocks :)\n. Congrats Gabriele :)\n. I believe you should also put the facebook thingy into a separate pull request....\n. Nope, no :fish:es - the pull tester is right - seems that Hannes merged the staging branch when it contained the checkstyle errors ;)\n. Well those are the result of moving two files to the legacy folder which is not part of the tests (yet) (ref) - I think this should be fixed..\n. Hmm.. commit --amend works the same way in PHPStorm and in Eclipse - it doesn't :(\nNext time I'll use the always reliable command line - promise :v:\n. Very nice Rouven :+1:\n. I would like to confirm that error.\nA small POC:\nphp\n<?php\njimport('joomla.html.grid');\n$foo = new JGrid;\necho JHtml::_('grid.state', 1);\nExpected result:\nnothing\nActual result:\nFatal error: Cannot redeclare class JGrid in html/grid.php on line 22\n. Yes, of course.\n. BTW: I think it would make sense to include a call to php -l to the PullTester:registered: to check for \"simple\" parse errors.\nFunnily this one was detected by a style sniff that could not parse the if() statement - generally those parse errors are detected by the unit tests - if there are any..\nBut honestly I don't know where to submit the pull request :disappointed:\n. Yes, that would be a good reason. There is no reason to change any code that is going to be dropped. So - what would be the plan ?\n. another day..\n. err... see \u21d2 #1457\n. Hum, let me try - first I should state that I am no database expert at all ;)\nThere are two issues here. They exist both on Postgresql and on SQLite, a driver I am playing with..\n1)\nWhen inserting new records the PK should be \"NULL\" not \"0\".\nThe db engine considers 0 a perfect valid integer, so it will insert a record with the primary key set to 0 instead of auto incrementing.\nMysql does not care and auto increments both on 0 and NULL\nM$Sql - not tested.\nNot sure how to hande this on a db specific level, so I opted for doing it in JTable.\n2)\n(scratching my head.. what was that about.....)\nI believe it was about a strange NULL character PHP generates when serializing stuff. The dabase engine can not handle them and will simply truncate the strings when those characters appear.\nI also was not able to porperly escape those in the db driver so I opted for str_replaceIng back and forth in JSessionStorageDatabase.\nHope that makes some sense,\nNikolai\n. You also have to make your pull requests against the staging branch.\n. Here you go: http://docs.joomla.org/Joomla_CodeSniffer#Netbeans\n. Thanks :)\n. This looks very nice and will be usefull for a lot of applications (including some of mine)\nHopefully this will be merged soon ;)\n. You may see it here: http://developer.joomla.org/pulls/pulls/1625.html\n. Should be good to reopen now.\n. erm.. reopen ? re-open ? REOPEN ... \u00bf\n. OK, I changed a few class names and function names and the tests are still running on my end..\n. I hope we are done now ;)\n. > @LouisLandry wrote \n\nAlso, I'd appreciate a blank line before the return statement even though that isn't a sniff we have at the moment, just makes things more easily readable for me.\n\nI have one in my personal treasure chest. It also enforces a blank line before control structures.\nHave a look: WhiteSpaceBeforeSniff\n. Well it's here: joomla/coding-standards#7\n. > The problem is that the elseif is wrong. Change the else if to elseif and most of those warnings will be fixed.\nStrange but true...\nNever trust a machine :wink2:\n. I have to confess, that I'm in love with PHP's short open tags which have recently being undeprecated...\nSo\nphp\n<?php echo JRoute::_('index.php?option=com_content'); ?>\nwould become\nphp\n<?= JRoute::_('index.php?option=com_content'); ?>\nwithout any added code ;)\n. Well, this only makes sense when mixing PHP with HTML code. e.g. a view template. Since there are no view templates in the platform the question would be if a downstream user (a CMS maybe) would like to implement those methods.\nWhat is possible, in therms of short tags, is to check if they are disabled and, with a small speed penalty, pre-parse the template and replace the short tags with \"long\" ones.\nI would prefer this instead of implementing a new method. Hopefully it will not be long until we have PHP 5.4 available for playing ;)\nImplementing the usage of short open tags in the Joomla! CMS would be a nice sophisticated idea - IMHO.\n. Is this auto generated in some way ?\nBTW: Looks pretty cool ;)\n. The only negative thingy I found so far is, that the navigation only works with JavaScript enabled (maybe a decent <noscript> tag would be good).\nBut a cool idea, as always from Mr. McLennan ;)\n. Oh @ianmacl : Any chance getting the code style part in ?\n. Any chance of restructuring the thing ? Making the coding standards a sub folder of the manual would ease things up.\nAlso - currently there is a en-US folder. Is it realistic that there will be a translation or could this be simplified ?\nI would suggest:\ndocs\n |__manual\n     |__appendices\n     |__chapters\n     |__coding-standards\n     |__menu.md\n. Actually it's\ndocs\n |__assets\n    |__css, js...\n |__manual\n    |__md pages\nand the assets folder wont fit nicely - I think..\n. Sorry.. \u21d2 #1691\n. next try \u21d2 #1693\n. OK, I think this could be the one - apologies... /me is still a git n00b ;)\n. The trailing white space sniff only sniffs code but not comments. @todo FixMe ;)\n. It should generate a warning if the line contains more than 150 chars.\nMaybe we should change that to error ?\n. Sure, the auto formatter files are here: https://github.com/joomla/coding-standards/tree/master/IDE\nYou might also be interested in: http://docs.joomla.org/Joomla_CodeSniffer\nAnd, well: http://docs.joomla.org/?search=git\n. I can confirm that the tests are still running good on my linux box using your branch.\n. Some more info: http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=29692\n. E.e.\nclass A extends B\nwhen class B isn't defined yet...\nUsing phars would make this obsolete ;)\nOn Jan 10, 2013 12:40 AM, \"Rouven We\u00dfling\" notifications@github.com wrote:\n\nIt's not about executing some code but because the resulting error results\nin an information disclosure issue.\nIn a perfect world platform classes would never live in a web accessible\nspace (there are framework with that assumption).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1787#issuecomment-12081512.\n. Oh yes, this is a common issue.. I can't remember the Workbench but in jdbc based tools you usually add a ?zeroDateTimeBehavior=convertToNull to the connection string ;)\n\nThe issue is more ugly when your actual database driver complains about those \"invalid\" dates (like PostgreSQL and SQLite does..)\n. What a dumb mistake... apologies ;)\n. Should be good now - thanks ;)\n. WOW 120 bytes - nice job :P\n. Thanks for your comments Don, very much appreciated (please note the letters \"RFC\" above).\nThe main question is about the refactoring.\nThe former approach implemented only a subset of the API, using a custom structure. So it was kind of hard for me (and I guess also for others) to find the corresponding Joomla! methods while reading the GitHub API documentation.\nThis is why I organized the code following the documentation.\nSo is it good, bad, ugly ? ...\nDoes it deserve more work ?\n. > There's another pull request that completely refactors JGithub and already contains code for fetching repositories data, but it breaks backwards compatibility. So, we may not be merging that here, but instead release it separately. So, yours is still needed.\nThat's interesting info...\nI assume you are talking about #1820.\nWould it be possible to add a small note there regarding what you (the maintainers) are thinking about it ?\nThanks.\n. The formatter failed :P - put the comment on a new line ?\n. fail\n. fail\n. those 3 look strange..\n. 5 fails\n. 9 fails\n. fail\n. fail\n. fail\n. fail\n. right :D\n. 5 fails\n. this produces 2 tabs instead of one.. ?\n. and a final fail\n. Should be possible to create such a sniff ;)\n. Maybe not start a protected var with an underscore to prevent additional code style warnings ;)\n. Not sure. I don't believe that some 3pd out there really extends JPathway, but I believe I have seen someone accessing protected (now) properties in JMenu - Just to be on the safe side maybe..\n. Huh, haven\u2019t thought about it.. So that would be 441 log entries more...\n. Please move softly to the end of the line, hit the \"left arrow key\" -- followed by the space bar.\nEven more softly.. push your changes here to GitHub, so the code may pass Mr. joomla-jenkins sharp and cruel eagle eyes that wont even miss a single space ;)\nYou might also be interested in the existing documentation about this (annoying?) procedure: http://docs.joomla.org/Joomla_CodeSniffer\nHappy coding ;)\n. I believe this should be JXMLElement instead of JSimpleXMLElement\n. I believe the others are also incorrect - I just don't wanted to spam ;)\nJSimpleXMLElement has been deprecated and the functionality is now covered by JXMLElement which extends SimpleXMLElement (the PHP one).\n. Actually this introduced a code style violation (alert bells ringing ;) )\nWhite space found at end of line...\nPlease listen to Mr joomla-jenkins ;)\n. Could it be that there is a comma missing ? Poor Jenkins ;(\n. Missing semicolons produce nice parse errors ;)\n. I think you should use 2 spaces instead of 1 after @subpackage and align the others accordingly.\nBut yes, the test is fishy - @FIXME\n. whitespace ;)\n. The opening curly brace should be on a new line.\n. missing /\n. if an empty string is set, line 55 will produce an array with one empty item - not a problem in the $unsupported array, but for the $supported array..\nBTW, is does not check but cast because $this->element is a SimpleXMLElement ;)\n. Fixed. Thanks ;)\n. If I understood right, even private member vars should go without a leading underscore. see this comment. I think they are ugly ;)\n. Whitespace found at end of line\n. Seems there is a sniffer rule missing or not working as expected..\n. It produces a PHP strict warning since the signature differs from the base class.\n. I think you missed a JText here ;)\n. %1 should be %1$s as well as 2 ;)\n. May I just throw in here that it is far more easier to write a code sniff that ensures that every comment is terminated with a full stop than to examine if the comment is indeed a complete sentence containing a verb ?\n. I believe this triggers a checkstyle line length warning..\n. Could you be a little more precise about your issue, please. My PHPStorm has had no problems so far :wink: \nAlso, the coding standards have been moved to a new repo. Please refer to:\nhttps://github.com/joomla/coding-standards\nMaybe this will already solve your problem.\nAlso you are posting to a very old issue.\nIf you are interested in the Joomla! Platform you should notice that efforts have been moved to the Joomla! Framework project:\nhttps://github.com/joomla/joomla-framework\nHope that helps.\n. OK, good to know :wink: \n. ",
    "aaronschmitz": "This appears to have been fixed per (http://forge.joomla.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26455).\n. This issue has been fixed - all queries are now if (isset($this->cache[$store])).\n. @elinw, I can work on this one, but I'm going to need some guidance - it's a bit over my head.\n. @elinw, I seem to be running into a problem on this bug. I want to do something as simple as    \"$session = JFactory::getSession(); $session->set('user', $this);,\" but this simply modifies the session of the currently logged in user - not the user we are changing. I need to find every session matching the username/id of the user we are changing and update those rows. Unfortunately, the abstract class that all the different types of session stores implement only has the ability to open, close, read, and write sessions by session ID. There's seemingly no way to get a list of sessions to pick out the appropriate ones.\nhttp://docs.joomla.org/API15:JSessionStorage\n. @AmyStephen, ok. That basically mirrors the only solution I could come up with, so I'm glad we're on the same page. I was hoping there was an easier solution, but due to technical limitations my best idea was to add a lastChange column with a timestamp to the users table and force the session row to be updated on the next page hit by the user if it's older than the timestamp.\n. @AmyStephen, I'm aware. However, we need a timestamp - not a mere flag - because, as I understand, any given user could have multiple sessions. If we use a flag, we would only be able to refresh the first.\n. @AmyStephen, I mean if a user is logged in on two different browsers.\nhttps://lh4.googleusercontent.com/-7fcLrOPB8lI/T3swz1it2rI/AAAAAAAAAKs/oE99YnrKASg/s800/Capture2.PNG\n... and as a core developer at LimeSurvey, I know how much work it is to push a schema change, unfortunately.\n. No. When you run that code, if you set session time to '' and don't set it back, sessions will always be reloaded which totally defeats the purpose of the cache. On the other hand, if you reset the session time to the current time when you update one of the session rows, you will inevitably fail to update the second session row if one exists.\n. This appears to have been resolved.\n. I certainly can't reproduce this.\n. https://github.com/joomla/joomla-platform/pull/938\n. This appears to be resolved in the latest version of the platform. The original code was:\npreg_match('|Version/ |', $this->_agent, $version);\nlist ($this->_majorVersion, $this->_minorVersion) = explode('.', $version[1]);\nCode is now:\nif (preg_match('|Version/ |', $this->_agent, $version))\n{\n    list ($this->_majorVersion, $this->_minorVersion) = explode('.', $version[1]);\n    return;\n}\n. piotr-cz, do you want me to put together a pull request for this one?\n. Oops. Thanks for pointing that out. It should be clean now, but let me know if anything else needs changed.\n. Are we depreciating the current file system?\n. As far as I can tell https://github.com/joomla/joomla-platform/pull/1007 isn't going to be ready for a while. Do we want to get this fixed before we tag 12.2?\n. @LouisLandry what are the odds of me getting to do GSoC with you guys? The two are about the same :D\nJust kidding - I'll added them ASAP.\n. @joaktree, http://help.github.com/send-pull-requests/ describes how to create a pull request.\nI've created one for this bug for you (https://github.com/joomla/joomla-platform/pull/1099).\n. I removed the __MACOSX folder from the zip file and some similar artifact from the tar file. The way the unit tests are written, these extra files don't get deleted after the extraction is performed.\n. The original was using spaces, and I switched it to tabs. That's why the deltas are so large.\n. See also Diana's 1.0a client: https://github.com/joomla/joomla-platform/pull/1422\n. I suppose it wouldn't be a problem.\n. Ok. I switch to extending JHttp like JGithub does. If the maintainers accept @dianaprajescu's pull for the patch method I'm 95% of the way there, and if they don't this is a superior alternative to using JHttpTransport.\nFor now, I renamed the class to JOauth2client and the file to 2client, but I'm flexible on what others prefer.\n. Closing in favor of https://github.com/joomla/joomla-platform/pull/1480.\n. I don't follow how that change will prevent getConnection from being executed - please explain.\n. I hope this is along the lines of what you were thinking, @stefanneculai.\n. According to the PHP documentation empty(null) == true - http://php.net/manual/en/function.empty.php. The problem is that marking the unit test as skipped doesn't immediately terminate the current test.\n. Well, I tried making the change you suggested on 491 just to be sure, and it didn't work. If you have or anyone else have a simpler solution that solves the problem, I'm all ears... but I haven't found one yet.\n. @realityking, the original code is incredibly confusing at first glance, and I only make it worse - I'm guessing my pseudo-code explanation will shed some light on the black magic.\n1. Urlencode the url\n   - This converts unicode to escape codes so it doesn't get filtered\n2. Decode \"important\" characters\n   - If the characters in the array on line 968 are left encoded parseurl will not be able to identify any or the parts of the url)\n3. Run the string through parseurl.\n4. Re-encode the \"important\" characters in each chunk of the array\n   - This puts the strings back in a consistent state where all characters are urlencoded\n5. Urldecode each chunk\n. I'm happy to try to resolve the issue if you can give me the url that causes the trouble.\n. Bug Acknowledged. I got a test database from @mbabker.\nThe issue is that the browser doesn't actually send http://localhost/joomla-cms/es/inicio/19-categor\u00edas-en-espa\u00f1ol.html. Instead it sends http://localhost/joomla-cms/es/inicio/19-categor%C3%ADas-en-espa%C3%B1ol.html. Before, JString::parse_url kindly converted this back to unicode.\nWhile this was convenient, it's not really proper behavior and it broke things because JString is also used by JHTTP where we definitely don't want URL's getting converted to unicode. Likewise, we could fix this in JUri::getInstance where the URI is retrieved from $_SERVER, but to me that also seems like an incorrect solution because that's not the actual URI (true unicode URI's are illegal - hence the browser's punycode conversion).\nThe problem manifests itself in the router. I'm looking at how to fix it now.\n. Ok, @infograf768. I've put together two distinct solutions for the issue.\n1. Decode URL before sending it to the router\n   - https://github.com/aaronschmitz/joomla-cms/commits/routing_hack\n   - I don't really like this solution, but it's easy and it essentially undoes the problems from the changes to JString.\n   - No backwards-compatibility issues\n   - Not 100% RFC compliant\n2. Encode the URL's within the router that comparisons are performed against\n   - https://github.com/aaronschmitz/joomla-cms/commits/fix_urlencoding\n   - This solution is more complicated and prone to causing new bugs\n   - Internationalized routers in 3rd-party components will need to make changes\n   - Compliant with RFC 3986\nRFC 3986 - the present standard on Uniform Resource Identifiers clearly defines the allowable characters in a URI (Page 49). Clearly, non-ASCII characters are prohibited yet the Joomla currently outputs whatever is in the slug/alias.\nSolution 1 does not resolve this problem. Solution 2 resolves this problem by replacing unicode characters with their percent encoded equivalents. Most browsers still display these encodings as the unicode character, but the URL's themselves are now RFC compliant.\nPlease look over these two solutions and let me know which is more desirable. If you think it needs more discussion, I can easily post it to the mailing list as well.\n. Here you go. As requested I moved it into the router itself.\nhttps://github.com/joomla/joomla-cms/pull/347\n. Ok. When I installed the fr_FR locale on my machine the problems in both JString and JArrayHelper went away. As far as I can tell, there's no way to make this function work properly without that locale, but I don't know much of anything about i10n so if anybody knows how to do this let me know. Otherwise, I'll submit a pull request to return incomplete if fr_FR is unavailable.\nWith regards to the CMS issue, I would say this is not related (or at least not directly related). I'm pretty confident, however, that I know the source of that bug so I'll post that over in the other thread.\n. Assuming some version of https://github.com/joomla/joomla-platform/pull/1464 is accepted, this issue is resolved.\n. https://bugs.php.net/bug.php?id=48147 has reports of ignore not working since at least 5.2.6. I can confirm the problem on the latest version of PHP on my system.\nWith regards to the TRANSLIT,IGNORE: I saw it mentioned as a solution elsewhere and it seemed to work. My test is at https://gist.github.com/2a40d736da8cf1749c60. I encourage you to run it and compare your results.\n. Thanks for looking at this. I'm still concerned about this issue (my platform - Ubuntu 12.04 x64 - isn't exactly an obscure OS), but I'm going to close this pull request while I try to find another solution to this problem that provides consistent behavior across platforms. If you have any advice, I'd love to hear it.\n. This seems to work for both versions, but I don't like it at all.\n. If there's anything else I can do to help speed up the merging process, let me know!\n. Thanks for positive the feedback, @LouisLandry. I can't say I noticed any performance problems, but running this on a dedicated machine with 8GB of RAM probably isn't a standard configuration.\nI thought SimpleXMLElement was the preferred method for XML handling after JSimpleXML was depreciated. If there's a more optimal technique let me know. The XML strings can grow rather unwieldy (maybe 100kb) since some queries list several photos/albums at once and each photo/album contains 10-12 long urls in addition to lots of other nodes.\n. 1. Ok - it worked fine with quoted keys so I switched to standard json encoding.\n2. Louis, that article is talking about 100,000 - 1,500,000 records in files from 100MB to 1.6GB. Do you know if this  performance problem occurs for significantly fewer records (as I recall albums are capped at 2000 photos which are about 4k per record i.e. 8MB as a rough cap)?\n. Sorry for the delay - school starts this week so I've been a bit busy.\nLooking at the docs for XMLReader, it appears as though the main reason XMLReader is more efficient is that is reads on-demand from the document stream rather than loading the raw file into memory (not 100% sure on this).\nTo make XMLReader a viable solution it appears as though I would need to make some considerable changes to the classes. While for your feeds application everything is a simple GET request as far as I can tell, for Picasa everything is authenticated via OAuth with some fun POST requests and fancy HTTP headers.\nFrom what I can tell, the HTTP headers can be moved to query parameters and the two queries prone to large results (list photos and list albums) are both GET so technically it would be feasible to switch to using XMLReader, but unfortunately it would require substantial changes to how the code is currently implemented because right now all IO is handled by JHTTP through the JOauthV2Client class.\nPerhaps long term it would be good to have explicit xml and json handling available in the OAuth class, but it's not a quick addition. Moreover, my Picasa class is poorly designed in the sense that at present it just returns all list data in a big array of objects (i.e. no more efficient than loading the whole string at once). Perhaps I could make available an option to use an iterator to loop through and return each object for processing rather than storing them all at once.\nDo you think these changes would be worthwhile? It seems like it would be a lot of work which isn't exactly well-timed considering the heavy course load I have this semester (read: it won't get done quickly).\nTL;DR: To really improve the efficiency would take a lot of work. Is it worth it?\n. Ok @LouisLandry. Now using $application->redirect(). That took more work than I expected.\n. Ok, @LouisLandry, I renamed it as requested.\n. Well, I changed the tags and squashed it to 28 commits. Not sure how to proceed...\n. 1. As @dianaprajescu said, it's now consistent with the doc block (I would hence argue that we're not changine the API, but fixing a bug in our implementation of the API).\n2. The whole point of this function is to mimic parse_url with added unicode support. Parse_url returns false in such an instance, so that's our target functionality.\n. That's correct. Escaping percent causes really bad things to happen since we're adding a bunch of other %'s to the string in the process.\n. Again, as @dianaprajescu said, this prevents it from decoding URL's. Both tests that I added on lines 620-630 would fail in the current version of this function. This causes significant problems because this function is used in JURI to help explode URL's for things like HttpTransports.\nIn my use case, JHttp::get('https://www.googleapis.com/calendar/v3/calendars/me%40aaronschmitz.com/events?singleEvents=true&orderBy=startTime&timeMax=2012-09-01T00%3A00%3A00%2B02%3A00&timeMin=2012-08-01T00%3A00%3A00%2B02%3A00') turned into a request for https://www.googleapis.com/calendar/v3/calendars/me%40aaronschmitz.com/events?singleEvents=true&orderBy=startTime&timeMax=2012-09-01T00:00:00 02:00&timeMin=2012-08-01T00:00:00 02:00 which perhaps unsurprisingly failed.\n. You would know better than I do. This simply maintains current functionality. If we want to investigate changing that functionality, perhaps that could be considered in another pull request.\n. I believe json encode quotes array keys which doesn't seem to suit my use case. I could be wrong though.\n. ",
    "WebMechanic": "if only I knew how... the stuff from July 12 shouldn't be there anyway\nany hint?\n. thanks - one can never have enough choices http://is.gd/L2R63K\nrebase and force didn't do the trick, so I'm closing this one, nuke it, and go with a new branch.\nIf I can cherry-pick then why can't/won't they ? ;-)\n. Thanks for the wiki link. It doesn't actuall tell what branch to pull from in the first place to apply patches: master or staging? \n1. so I'll close this one and re-request to the staging branch?\n2. My fork's master branch appears to be completely off, so I pulled from this repo to create \"fluent_doc\". At that time the logs said my working copy was based off \"Merge pull request #180 from rvsjoen/adminmenus\" -- in both master and staging, so there seemed to be no difference.\n3. installed phpcs (too) and fixed whitespace\n4. that'd be a long list, you're sure about that? Should/may I split each file in its own <para>? otherwise this will look very confusing.\n. Same here and always failing. Due to the chaining, $query won't be initialized until all methods have \"returned\".\nThe call of ->leftJoin($query->qn('#__usergroups') ... fails, because at this point $query is still null.\n. Nice move :) \nI presume similar changes will be made to other \"singleton'ish\" classes where $instance[s] are also \"hidden\" within their respective getInstance() method?\n. done\n. The language <metadata /> could (and should) provide much more useful, structured information for dates, calendars, as well as number formats (decimal, thousands), you name it, in a similar fashion as Zend_Locale does -- though more lightweight and less \"excessive\": http://is.gd/sVSelJ\nThus I'd rather put locale based meta-data and keys to the language packs where they belong. After all it's not JDate's business to provide translation services and files and polute the /joomla/html/* folder with even more .ini files.\nIf at all, the only legitimate place to dump such locale-metadata for the Platform (for fallbacks!) would be some place like /joomla/language/meta/*.\nHowever, overrides by an application (site, admin, cli, foobar) should still be possible, and that's where \"language packs\" kick in.\nThen \"teach\" JLanguage::get($property) to deal with nested/hierarchical keys like \"date.month.abbreviated.long\", \"date.yesterday\", \"date.lastweek\", or \"number.format.decimal\" etc. to access a locale's property (from the xml) and pass that value to JLanguage::_() doing whatever string transformation necessary to make this a \"valid\" language key. Although from PHP's perspective date.month.abbreviated.long already perfectly qualifies as an array key and won't harm the native INI parser.\njust my 2ct\n. Does anyone know whether PHP's DateInterval is unavailable on any given version or platform? \nI was using it since 5.2.9 (in a plugin for the Cantao/TypoLight CMS) and I'm yet to run into a hosting provider where it didn't work. The PHP manual once stated \"might only by in SVN\" but I can't \"confirm\" that statement :-)\nAs long as DateTime and DateInterval are fed with sufficient granularity in the input format, all intervals from seconds to years are set and that's where the trick of translating them into a reasonable human readable date or time \"phrase\" comes in.\nI can see various use cases where any kind of announcement of a future event, special offer, what-not could be labelled with \"tomorrow\", \"next week\" and alike, and the same holds true for stuff that happend.\n@mahagr: I believe it's up to the developer, implementor, or designer to specify a granularity for the output. Given that even 1 second difference can become anything between \"just now\", \"yesterday\" (23.59.59 < 00:00:00) or \"next year\" (2012-01-01 00:00:00 > 2011-12-31 23:59.59) if the granularity -- or unit -- is small or big enough.\nThat's exactly what $unit provides in @mbabker's proposal.\nThe only use case I can see to have tiny fractions such as \"1 second ago\" available would be on the client side where some JS counter would grab those as JavaScript strings provided via JText.\nNow the question for me is: how would such language keys look like in order to handle both \"colloquial\" time frames as well as \"technical\" 2-parted chunks?\nI'd love to help to iron this out 'cos I have instant usage for it :-) How'd be the procedure to combine the code of @mbabker (API part), @mahagr (math part), and what I wrote for my Contao plugin (l10n part)?\n. @mahagr: excellent point. \nMaybe it'd be a good idea to restrict the granularity in the php code \"somehow\" to avoid too many variations, ie. based on the global cache time -- for a starter.\nLike your comment right now reads \"about 4 hours ago\" it's maximum cache time might be 60 minutes before it needs an update on the server to become \"about 5 hours ago\" -- presuming Guthub handles each comment as a distict cacheable object in the first place :-)\nIf the fixed date however is also written into, let's say, a data-attribute, and/or wrapped in the HTML5  element, a client side script can be as granular as the designer/implementor feels necessary.\nhttp://dev.w3.org/html5/spec-author-view/the-time-element.html\n. It certainly depends on what a Module does... let if fetch data from an external source or service and you might get very different results.\nI'd rather see this turn into a proper Event, onBeforeRenderModule in JDocumentRendererModule:.render(), where Plugins can access the Module data, params, and attribs. It'd make Modules equally important and extendable by Plugins like components are today.\nThat would also make the recent addition of JHtml::_('content.prepare') kind of \"obsolete\", since the same content plugins can then also register for onBeforeRenderModule to perform the very same thing, i.e. simply \"forward\" the job to their existing onContentPrepare handler -- or decline to do so, since the $context would then be different of course.\nThat would make the debug information in afterRenderModule even more valuable :-)\nMy 2ct.\n. yeah, funny, and thanks for the laugh :) You made my day!\nCalling a method in already loaded php file on an already instatiated object is sooo much slower than doing DB requests elsewhere ;-) Crunching the wrong numbers ain't gonna cut it...\n. @frt if you're on PHP 5.3.6 and have track_errors = on, the crash is due to a bug in 5.3.6\nIt is an E_STRICT issue but IMHO the origin of that symtom this patch is trying to fix are the plugins themself. \nThey still use the PHP4ish &$row, &$article, &$params etc. to force \"pass by reference\" in their event handler signatures despite these very arguments are objects (stdClass, JRegistry) and PHP5 can handle object references perfectly fine.\nSo instead of creating a workaround for a PHP4-issue no longer present in PHP5, the function signatures in the plugins should become on par with PHP5.\nRead: CMS issue :-)\n. http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=26989\n. Nice. How is this supposed to be used in other languages than english? l10n anyone?\nUsing private static prevents subclassing and overriding and should be changed to protected static.\nThere is no notion of the language these rules actually apply to. A script might want to use the proper rules for a language other than plain english? \nMany languages might well be unable to use such an inflector at all 'cos they are too complex to fall into simple rules like \"singular\" and \"plural\", but that's another topic.\nI've been toying a while with a local \"hack\" of the CMS's en_GBLocalise and de_DELocalise to host the rules, which to me makes sens putting them in those files 'cos they provide language specific settings anyway:\nde_DELocalise https://gist.github.com/1450988\nen_GBLocalise https://gist.github.com/1450989 \nRules were collected from throughout the internets incl. some for German I came up with.\n. Since inflection is a matter of language, that's coincidently made up of strings, I think this class ought to belong to the language package just like latin_transliteration.php. If someone picks up on it to add support for other languages, it's all in one place.\nI still like to see static private $_rules to become static protected $_rules to at least lower the barriers for subsclassing.\nThanks.\n. @infograf768 thanks for your reply. I'm not sure what \"JPlural\" refers to. Did I miss a class?\nthe existing UnitTests apparently didn't break ;) and I tested this by means of using it in a current project where any of _0, _1 and _MORE are used \"the normal way\" and my component and some modules leveraging the ability of the new.\nThe current \"behavior\" of JText::plural() remains unaffected, including the CMS defaults that make xx-YY.localise.php::getPluralSuffixes() add explicit checks for the _0 _1 and _MORE suffixes and the implied fallback to the non-suffixed key. If STATISTICS_7 isn't present in the list of language keys, it'll try STATISTICS_MORE as usual or eventually pick STATISTICS.\nWhat this patch adds is also considering specific number literals other than just 0 and 1 to become translatable if present in the language array. Those numbers don't \"stick\" or have any side effects, as they're considered only for the very call of JText::plural() that gets this number passed in.\nI don't know if some getPluralSuffixes() overrides for languages such as Welch, Irish or Czec already feature any smart code to support their special numbering (range) schemas by either introducing other \"magic key suffixes\" such as _MORE or any \"math\" to handle that.\nHowever, even if they do use, let's say _10, to translate phrases for values \"more than 10\" as opposed to \"equal to 10\", that behavior would remain unaffected 'cos the number 10 is already considered a legitimate keyname suffix in that particular language anyway, and has been assigned a specific meaning and behavior for it; just like _MORE in general.\nThe patch would then just \"unnessesarily\" add 10 (again) as a possible suffix to the very end of a list that already considered this number in the first place.\nAs a consequence (\"improvement\") of this patch, xx-YY.localise.php::getPluralSuffixes() could effectively get loose of the two if-statements testing for _0and _1, and leave _MORE as the default alternative for the \"uncounted\" (pluralisation) keys,  'cos those two numbers (0, 1) are now covered implicitly by this patch.\nIt's a tiny \"inprovement\" as we'd exchange two local if-statements checking these two numers several hundred times in a page's life-cycle in favor of a more flexible one-liner ;)\n. @infograf768 thanks for the Gaelic example; I had that in mind, but wrote Welch instead :) my bad.\n@elkuku thanks, interesting reference and bookmarked :)\nHowever, that's essentially the same expression but using ternaries and using '3' but 'FEW' at the end.\nThis patch is not about pluralisation! It's not intended to solve any pluralisation rules for any given language on this planet, be it english, gaelic or klingon.\nIt is supposed to allow one specific language key for one specific number to bypass/override on purpose whatever happens to be the default pluralization rule[s] for that language. E.g. in most cases that'd be xxx_MORE, and it'd remain effective for any number >= 2, same as xxx_FEW would continue to match 3-11 and such in Gaelic.\nThe latter has in fact more exceptions to those rules, in particular for multiples of 20, and whether $n is used as a cardinal or oridinal number. The grammar then not only ought to change, you have to use completly different words.\nhttp://www.akerbeltz.org/beagangaidhlig/gramar/grammar_numerals.htm\nJust like the number 12 is equal to \"one dozen\" in many languages, it's equally common to call a time period of \"7 days\" also \"a week\", \"30 days\" are known as \"one month\", or 512 \"bits\" x 2 = 1024 == \"1 kilobyte\" etc.\nThe current system would require to use an distinct \"basekey\" for any of these or perform some other odd trickery evalualting the number first and then decide which key to use:\n$dough .= ($eggs == 12) ?JText::_( 'DOZEN EGSS') : JText::plural('EGGS', $eggs);\nOr consider JText::plural('DAYS', $n) where $n is any of 0, 1, 5, 7, 14\n\"DAYS\" = \"Jours\"\n\"DAYS_1\" = \"Un jour\"\n\"DAYS_MORE\" = \"%d jours\"\nFor both 7 and 14 it would return \"7 jours\" or \"14 jours\" respectively, whereas with the patch applied and adding the appropriate language key to one's .ini file, it may now return:\n\"DAYS_7\" = \"Une semaine\"\n\"DAYS_7\" = \"One week\"\n\"DAYS_7\" = \"Eine Woche\"\nAs for the Scots: That behavior won't change as well, unless anyone puts a language key such as \"DAYS_7\" into a gaelic language file on purpose, otherwise JText::plural('DAYS', 7) would result in \"DAYS_FEW\" and pick that key like it did before, or in lack thereof just \"DAYS\".\n. Any feedback from someone in charge would be appreciated.\nthanks.\n. I think that's just how a shell works. There's no notion of \"integer\" oder \"boolean\" data types in a shell context so PHP gets what the shell provides: strings.\n<?php\n// $ php -f retval.php 1 \"2\"\nprint_r($argv);\necho gettype($argv[1]), PHP_EOL;\necho gettype($argv[2]), PHP_EOL;\nexit( count($argv) );\ngives this result in plain vanilla php-cli:\nArray\n(\n    [0] => retval.php\n    [1] => 1\n    [2] => 2\n)\nstring\nstring```\nIf you need on/off switches see http://de.php.net/manual/en/function.getopt.php for a little more control.\nMaybe you can teach JInputCLI to accept some options for `getopt()` and make use of it?\n. > why this is not automatically calling gettype() ?\n- for what general purpose?\n- at what point\n- based on which assumption(s)?\nIt's up to the developer to decide how (incomming) data's supposed to be transformed, validated, and used.\nOne might have a very good reason in an application to use an argument that consists of a character such as '1' either as a number, a string or a boolean. Just because something looks like a number or a sequence of characters that incidently form the word \"true\" doesn't mean anything.\n$ php app.php -- -queue=true\nPHP\n// perform tasks according to '-queue'\n$tasks = str_split($queue);\n$transaction = false;\nif (in_array('t', $tasks)) {\n    $transaction = startTransaction();\n}\nif (in_array('r', $tasks)) {\n    resetCache();\n}\nif (in_array('u', $tasks)) {\n    updateStuff();\n}\nif ($transaction == true) {\n    endTransaction();\n}\nif (in_array('e', $tasks)) {\n    sendEmail();\n}\n. I know, but I'm too busy to take care of this now.\nclosing.\n. excellent move - literally :-)\n@infograf768 I'd guess for the CMS we might end up with three. One applying to real Platform-only \"legacy\" code, i.e. for BC with 11.x (PHP 5.2.x), and one for what's been invented for and introducted by the \"/cms\".\nIt might be a tricky to decide which files from the current /cms would eventually belong to /legacy.\nThe reCaptcha lib seems like a perfect candidate to remain in the /cms folder, whereas JRequest, JError and JException are Platform /legacy. Me thinks.\n. argh... dammit :-) Had a \"bad merge\" on my side prior pushing the changeset; I'll amend this commit (again).\n. why travel the DOM?\ndocument.getElementById('system-message-container').innerHTML='';\n. and did that professional js-coder also explain to you why it is suposed to be \"better\"?\nIt's DOM Level1, granted, but that's about it :)\nNot only will this save a variable, a loop, and memory, innerHTML is also much faster which is why virtually any JS lib is using it internally to speed up these kind of \"mass\" DOM manipulation.\n+1 that you ripped off the dependency on MooTools from renderMessage!\nedit: this was my personal take on ripping it off: https://gist.github.com/2199473\n. ",
    "joomla-jenkins": "This pull request could not be tested since the changes could not be cleanly merged.\n. Unit testing complete.  There were 0 failures and 0 errors from 1742 tests and 10618 assertions.\nCheckstyle analysis reported 453 warnings and 9 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were  failures and  errors from  tests and  assertions.\nCheckstyle analysis reported 453 warnings and 29 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1742 tests and 10618 assertions.\nCheckstyle analysis reported 453 warnings and 29 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 1 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2017 tests and 11103 assertions.\nCheckstyle analysis reported 211 warnings and 25 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 66 errors from 2018 tests and 11024 assertions.\nCheckstyle analysis reported 207 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 1 errors from 2026 tests and 11099 assertions.\nCheckstyle analysis reported 207 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2102 tests and 11217 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1704 tests and 10634 assertions.\nCheckstyle analysis reported 235 warnings and 10 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 10 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10608 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1704 tests and 10633 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1707 tests and 10661 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1735 tests and 10781 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 2 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 335 warnings and 2 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1683 tests and 10559 assertions.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were  failures and  errors from  tests and  assertions.\nCheckstyle analysis reported 453 warnings and 4 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 4 failures and 12 errors from 1683 tests and 9818 assertions.\nCheckstyle analysis reported 453 warnings and 7 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 44 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 441 warnings and 16 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Do you have any insight as to why we are decoding and then encoding?  That seems to suggest there are bigger issues here that need to be resolved.  Also, I don't think there is any particular reason to use html_entities rather than html_specialchars, which is generally preferred.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1704 tests and 10633 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1735 tests and 10781 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1683 tests and 10559 assertions.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were  failures and  errors from  tests and  assertions.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 6 failures and 14 errors from 1683 tests and 3011 assertions.\nCheckstyle analysis reported 453 warnings and 4 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 44 errors.\n. Unit testing complete.  There were 1 failures and 0 errors from 1684 tests and 10560 assertions.\nCheckstyle analysis reported 453 warnings and 9 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 1 failures and 0 errors from 1684 tests and 10560 assertions.\nCheckstyle analysis reported 453 warnings and 9 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11358 assertions.\nCheckstyle analysis reported 164 warnings and 18 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1683 tests and 10559 assertions.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1683 tests and 10559 assertions.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 44 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 44 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 3 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 8 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11358 assertions.\nCheckstyle analysis reported 164 warnings and 1 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 1699 tests and 10615 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 1708 tests and 10640 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1708 tests and 10641 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10608 assertions.\nCheckstyle analysis reported 235 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10608 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1704 tests and 10633 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1707 tests and 10661 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1735 tests and 10781 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 2 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 334 warnings and 1 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1724 tests and 10650 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1733 tests and 10675 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 4 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1683 tests and 10559 assertions.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1742 tests and 10618 assertions.\nCheckstyle analysis reported 453 warnings and 29 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10608 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10608 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 5 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 1 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 30 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 1 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 346 warnings and 3551 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1735 tests and 10781 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1735 tests and 10781 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1735 tests and 10781 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1738 tests and 10792 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 1 errors from 1683 tests and 10557 assertions.\nCheckstyle analysis reported 453 warnings and 5 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1683 tests and 10559 assertions.\nCheckstyle analysis reported 453 warnings and 1 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1742 tests and 10618 assertions.\nCheckstyle analysis reported 453 warnings and 30 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1683 tests and 10559 assertions.\nCheckstyle analysis reported 441 warnings and 1 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 235 warnings and 7 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 7 errors.\n. Unit testing complete.  There were 0 failures and 1 errors from 1695 tests and 10594 assertions.\nCheckstyle analysis reported 453 warnings and 18 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1698 tests and 10614 assertions.\nCheckstyle analysis reported 236 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1698 tests and 10614 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 12 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 11 errors.\n. Unit testing complete.  There were 0 failures and 1 errors from 1683 tests and 10557 assertions.\nCheckstyle analysis reported 453 warnings and 6 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1683 tests and 10559 assertions.\nCheckstyle analysis reported 453 warnings and 2 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1742 tests and 10618 assertions.\nCheckstyle analysis reported 453 warnings and 29 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1691 tests and 10602 assertions.\nCheckstyle analysis reported 463 warnings and 4 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1750 tests and 10661 assertions.\nCheckstyle analysis reported 463 warnings and 29 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1750 tests and 10661 assertions.\nCheckstyle analysis reported 463 warnings and 29 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1691 tests and 10602 assertions.\nCheckstyle analysis reported 451 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1693 tests and 10606 assertions.\nCheckstyle analysis reported 451 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 346 warnings and 3551 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 346 warnings and 3551 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1693 tests and 10606 assertions.\nCheckstyle analysis reported 451 warnings and 1 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 346 warnings and 3551 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1693 tests and 10606 assertions.\nCheckstyle analysis reported 451 warnings and 1 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 2 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 3 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 3 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 237 warnings and 157 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1683 tests and 10559 assertions.\nCheckstyle analysis reported 453 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1742 tests and 10618 assertions.\nCheckstyle analysis reported 453 warnings and 29 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1742 tests and 10618 assertions.\nCheckstyle analysis reported 453 warnings and 29 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1683 tests and 10559 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. The tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1744 tests and 10622 assertions.\nCheckstyle analysis reported 453 warnings and 29 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1744 tests and 10622 assertions.\nCheckstyle analysis reported 453 warnings and 29 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 44 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 44 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 44 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 21 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 44 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 21 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1704 tests and 10634 assertions.\nCheckstyle analysis reported 235 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 44 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 21 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 21 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 453 warnings and 21 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 21 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 21 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1683 tests and 10559 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 441 warnings and 19 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1683 tests and 10559 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 453 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1683 tests and 10559 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 1 failures and 0 errors from 1684 tests and 10560 assertions.\nCheckstyle analysis reported 441 warnings and 18 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1723 tests and 10728 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1735 tests and 10781 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1735 tests and 10781 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 233 warnings and 4165 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. The tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1705 tests and 10624 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1705 tests and 10624 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 438 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 229 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 229 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 229 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1687 tests and 10565 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nUnit testing complete.  There were 0 failures and 0 errors from 1685 tests and 10563 assertions.\nCheckstyle analysis reported 441 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10608 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10608 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10608 assertions.\nCheckstyle analysis reported 235 warnings and 5 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10608 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1722 tests and 10709 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1691 tests and 10616 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10609 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1714 tests and 10664 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1722 tests and 10709 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1696 tests and 10616 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1722 tests and 10709 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10612 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10613 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 3 failures and 36 errors from 1772 tests and 10704 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1703 tests and 10616 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 4 errors from 1699 tests and 10608 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 4 errors from 1708 tests and 10633 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10608 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1695 tests and 10608 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1704 tests and 10633 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1828 tests and 10916 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 2 errors from 1831 tests and 10918 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1831 tests and 10926 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1704 tests and 10634 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 241 warnings and 468 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 241 warnings and 468 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 241 warnings and 468 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1747 tests and 10997 assertions.\nCheckstyle analysis reported 236 warnings and 0 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 3 failures and 0 errors from 1750 tests and 10942 assertions.\nCheckstyle analysis reported 236 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 236 warnings and 2 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 236 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 51 errors from 1833 tests and 11076 assertions.\nCheckstyle analysis reported 236 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 51 errors from 1833 tests and 11076 assertions.\nCheckstyle analysis reported 236 warnings and 0 errors.\n. It is probably easier if you do it since it is your code and you are more familiar with the commits and what each one was.\nSent from my Sony Ericsson X10\ngpongelli reply@reply.github.com wrote:\n\n@ianmacl\ntry to do your job again, I've added two more commits to fix some error.\nTell me your results, thank you!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/532#issuecomment-2908625\n. Build triggered by changes to the head.\n\nUnit testing complete.  There were 5 failures and 0 errors from 1951 tests and 11423 assertions.\nCheckstyle analysis reported 236 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 259 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 2 failures and 0 errors from 1952 tests and 11425 assertions.\nCheckstyle analysis reported 259 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 2 failures and 1 errors from 1955 tests and 11427 assertions.\nCheckstyle analysis reported 255 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 2 failures and 1 errors from 1961 tests and 11352 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 2 failures and 10 errors from 1964 tests and 11342 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 3 failures and 0 errors from 1974 tests and 11368 assertions.\nCheckstyle analysis reported 207 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 4 failures and 0 errors from 1977 tests and 11371 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 2 failures and 0 errors from 1977 tests and 11371 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2024 tests and 11482 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2043 tests and 11465 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2047 tests and 11471 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2056 tests and 11485 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2056 tests and 11485 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 2056 tests and 11484 assertions.\nCheckstyle analysis reported 199 warnings and 4 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2056 tests and 11485 assertions.\nCheckstyle analysis reported 199 warnings and 4 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 2059 tests and 11486 assertions.\nCheckstyle analysis reported 199 warnings and 4 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 2066 tests and 11493 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2066 tests and 11495 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2066 tests and 11499 assertions.\nCheckstyle analysis reported 199 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2066 tests and 11499 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2072 tests and 11526 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2072 tests and 11526 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis not found.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1879 tests and 11097 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1704 tests and 10634 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1707 tests and 10645 assertions.\nCheckstyle analysis reported 235 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1703 tests and 10653 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1708 tests and 10677 assertions.\nCheckstyle analysis reported 235 warnings and 1 errors.\nWARNING! Pull request is not against staging!\n. Unit testing complete.  There were 0 failures and 0 errors from 1708 tests and 10677 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1707 tests and 10661 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1707 tests and 10661 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1707 tests and 10661 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1735 tests and 10781 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1863 tests and 11075 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1707 tests and 10661 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1735 tests and 10781 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1863 tests and 11075 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1735 tests and 10781 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1735 tests and 10781 assertions.\nCheckstyle analysis reported 235 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1735 tests and 10781 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1736 tests and 10783 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 2 failures and 0 errors from 1873 tests and 11087 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11086 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11086 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 1 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 5 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 2 failures and 0 errors from 1873 tests and 11089 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 334 warnings and 1 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 190 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 207 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 1 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 4 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 334 warnings and 1 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 552 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 552 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 334 warnings and 1 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1872 tests and 11090 assertions.\nCheckstyle analysis reported 235 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 334 warnings and 1 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 1 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis not found.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis not found.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis not found.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis not found.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis not found.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11092 assertions.\nCheckstyle analysis not found.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11143 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis not found.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis not found.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 254 warnings and 1 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis not found.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 254 warnings and 1 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 254 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 254 warnings and 1 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 254 warnings and 1 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 254 warnings and 1 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 10 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 254 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 1 errors from 1873 tests and 11090 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 253 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 253 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 253 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 5 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 254 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 254 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 207 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1943 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 255 warnings and 117 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 255 warnings and 117 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 255 warnings and 147 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 1 errors from 1882 tests and 11018 assertions.\nCheckstyle analysis reported 253 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 253 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 253 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 253 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 253 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 253 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 253 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1873 tests and 11091 assertions.\nCheckstyle analysis reported 259 warnings and 30 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 255 warnings and 36 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 256 warnings and 72 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. That means none of the warnings are in your file so you're good.\nJ\u00falio Pontes reply@reply.github.com wrote:\n\nI've tried:\nphpcs --report=checkstyle --standard=build/phpcs/Joomla libraries/joomla/string/inflector.php\nand result:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n\n\nHow can I check warnings?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/612#issuecomment-3061476\n. Build triggered by changes to the head.\n\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 255 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1883 tests and 11021 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 10 failures and 0 errors from 1983 tests and 11154 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 10 failures and 0 errors from 1983 tests and 11154 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 10 failures and 0 errors from 2003 tests and 11163 assertions.\nCheckstyle analysis reported 165 warnings and 12 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2084 tests and 11295 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11095 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11095 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11018 assertions.\nCheckstyle analysis reported 254 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11018 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1897 tests and 11136 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1876 tests and 11094 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1883 tests and 11021 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 254 warnings and 54 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 254 warnings and 54 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 254 warnings and 11 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 1 errors from 1882 tests and 10731 assertions.\nCheckstyle analysis reported 254 warnings and 7 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 1 errors from 1895 tests and 10745 assertions.\nCheckstyle analysis reported 207 warnings and 5 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 1 errors from 1895 tests and 10745 assertions.\nCheckstyle analysis reported 207 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 1 errors from 1895 tests and 10745 assertions.\nCheckstyle analysis reported 207 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 1895 tests and 10747 assertions.\nCheckstyle analysis reported 207 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 1962 tests and 10842 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 1962 tests and 10842 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 1962 tests and 10842 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11160 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 254 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 254 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 207 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1882 tests and 11019 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1891 tests and 11028 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1892 tests and 11030 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 207 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 207 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1883 tests and 11021 assertions.\nCheckstyle analysis reported 254 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 208 warnings and 69 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 208 warnings and 69 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 208 warnings and 69 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 200 warnings and 62 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 199 warnings and 7 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 3 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1886 tests and 11024 assertions.\nCheckstyle analysis reported 208 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 200 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 1 errors from 1994 tests and 11158 assertions.\nCheckstyle analysis reported 166 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 10 warnings and 0 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 0 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 0 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 0 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 0 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 207 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 207 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 207 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 207 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 207 warnings and 11 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 207 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1895 tests and 11033 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1943 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1956 tests and 11165 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1956 tests and 11118 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1949 tests and 11108 assertions.\nCheckstyle analysis reported 199 warnings and 1 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 12 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1962 tests and 11128 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 199 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 2 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 41 errors from 1983 tests and 11019 assertions.\nCheckstyle analysis reported 199 warnings and 9 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 9 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 165 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1905 tests and 11045 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11149 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2012 tests and 11224 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2023 tests and 11277 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2062 tests and 11351 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 1 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 2 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 8 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 198 warnings and 339 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 198 warnings and 339 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 198 warnings and 89 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 198 warnings and 0 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 198 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1905 tests and 11045 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11149 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2062 tests and 11351 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 5 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 62 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 51 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 1 failures and 2 errors from 1971 tests and 11141 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 2 errors from 1971 tests and 11142 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1992 tests and 11157 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 200 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 200 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 1 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 1 errors from 1971 tests and 11145 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 1 errors from 2067 tests and 11357 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2170 tests and 11524 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 1 failures and 0 errors from 1971 tests and 11139 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 3 failures and 0 errors from 1971 tests and 11117 assertions.\nCheckstyle analysis reported 199 warnings and 14 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 2 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 4 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 6 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 209 warnings and 31 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1971 tests and 11146 assertions.\nCheckstyle analysis reported 199 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 3 errors from 1964 tests and 11123 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1943 tests and 11087 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1943 tests and 11087 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 1 errors from 1964 tests and 11129 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Unit testing complete.  There were 1 failures and 0 errors from 1964 tests and 11128 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 1943 tests and 11085 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1964 tests and 11130 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1943 tests and 11087 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 1 failures and 1 errors from 1966 tests and 11181 assertions.\nCheckstyle analysis reported 170 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1945 tests and 11142 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1945 tests and 11144 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1907 tests and 11102 assertions.\nCheckstyle analysis reported 165 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1987 tests and 11194 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11196 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2002 tests and 11204 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 10 errors from 2005 tests and 11202 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1943 tests and 11087 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1943 tests and 11087 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1943 tests and 11087 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 1 failures and 0 errors from 1944 tests and 11088 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1944 tests and 11091 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11149 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1943 tests and 11087 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1943 tests and 11087 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 165 warnings and 1 errors.\n. Unit testing complete.  There were 0 failures and 3 errors from 1941 tests and 11069 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 2 errors from 1905 tests and 11037 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11149 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 1 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1941 tests and 11081 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1906 tests and 11046 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 2 errors from 1907 tests and 11045 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1905 tests and 11045 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 165 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1905 tests and 11045 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 165 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1905 tests and 11045 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2062 tests and 11351 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1905 tests and 11045 assertions.\nCheckstyle analysis reported 165 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11149 assertions.\nCheckstyle analysis reported 165 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1918 tests and 11060 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1904 tests and 11044 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1905 tests and 11045 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1889 tests and 11022 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1912 tests and 11054 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1908 tests and 11062 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1985 tests and 11137 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1985 tests and 11137 assertions.\nCheckstyle analysis reported 239 warnings and 10 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1985 tests and 11137 assertions.\nCheckstyle analysis reported 165 warnings and 10 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1985 tests and 11137 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1985 tests and 11137 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1985 tests and 11137 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 2 failures and 0 errors from 1985 tests and 11130 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 3 failures and 0 errors from 1991 tests and 11140 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1985 tests and 11137 assertions.\nCheckstyle analysis reported 165 warnings and 19 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11149 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1985 tests and 11137 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1985 tests and 11137 assertions.\nCheckstyle analysis reported 165 warnings and 3 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 165 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1985 tests and 11137 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11149 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11149 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11149 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11149 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11149 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11149 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 25 errors from 1994 tests and 3672 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11154 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11154 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1998 tests and 11189 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1991 tests and 11151 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1992 tests and 11152 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 2 errors from 1994 tests and 11152 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 2 errors from 1996 tests and 11169 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 2 errors from 2014 tests and 11224 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 2 errors from 2064 tests and 11351 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 2 errors from 2172 tests and 11524 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2195 tests and 11599 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 5 failures and 4 errors from 1992 tests and 11124 assertions.\nCheckstyle analysis reported 165 warnings and 18 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 1 failures and 0 errors from 1992 tests and 11147 assertions.\nCheckstyle analysis reported 165 warnings and 13 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1992 tests and 11152 assertions.\nCheckstyle analysis reported 165 warnings and 13 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1992 tests and 11152 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2170 tests and 11526 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1993 tests and 11153 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11154 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11154 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 168 warnings and 10 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 168 warnings and 10 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 168 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2023 tests and 11277 assertions.\nCheckstyle analysis reported 167 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 12 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 18 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 20 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 20 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 21 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11356 assertions.\nCheckstyle analysis reported 167 warnings and 5 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2062 tests and 11351 assertions.\nCheckstyle analysis reported 164 warnings and 5 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11358 assertions.\nCheckstyle analysis reported 164 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11358 assertions.\nCheckstyle analysis reported 164 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2170 tests and 11524 assertions.\nCheckstyle analysis reported 163 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2170 tests and 11524 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2062 tests and 11351 assertions.\nCheckstyle analysis reported 164 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2062 tests and 11351 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 165 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11358 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 164 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11356 assertions.\nCheckstyle analysis reported 167 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 1994 tests and 11169 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2011 tests and 11223 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 1995 tests and 11170 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2012 tests and 11224 assertions.\nCheckstyle analysis reported 164 warnings and 9 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 10 errors from 2023 tests and 11257 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2193 tests and 11591 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2204 tests and 11608 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2012 tests and 11224 assertions.\nCheckstyle analysis reported 164 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2012 tests and 11224 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2023 tests and 11277 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 1 failures and 1 errors from 2023 tests and 11276 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2023 tests and 11277 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2044 tests and 11322 assertions.\nCheckstyle analysis reported 164 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2044 tests and 11322 assertions.\nCheckstyle analysis reported 167 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2023 tests and 11277 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2044 tests and 11322 assertions.\nCheckstyle analysis reported 167 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2044 tests and 11322 assertions.\nCheckstyle analysis reported 167 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2044 tests and 11322 assertions.\nCheckstyle analysis reported 167 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2044 tests and 11322 assertions.\nCheckstyle analysis reported 167 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2044 tests and 11322 assertions.\nCheckstyle analysis reported 167 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2044 tests and 11322 assertions.\nCheckstyle analysis reported 167 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11356 assertions.\nCheckstyle analysis reported 167 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2044 tests and 11322 assertions.\nCheckstyle analysis reported 167 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11356 assertions.\nCheckstyle analysis reported 167 warnings and 1 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11356 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2062 tests and 11351 assertions.\nCheckstyle analysis reported 167 warnings and 0 errors.\n. Unit testing complete.  There were 1 failures and 0 errors from 2062 tests and 11351 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 164 warnings and 5 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2062 tests and 11351 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11358 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11358 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2062 tests and 11351 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2062 tests and 11351 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 2062 tests and 11351 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2172 tests and 11531 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2173 tests and 11532 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2197 tests and 11595 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2197 tests and 11595 assertions.\nCheckstyle analysis reported 163 warnings and 4 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2197 tests and 11595 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11358 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11358 assertions.\nCheckstyle analysis reported 164 warnings and 4 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11358 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11358 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2067 tests and 11358 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 3 failures and 0 errors from 2086 tests and 11405 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 3 failures and 0 errors from 2086 tests and 11405 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2193 tests and 11591 assertions.\nCheckstyle analysis reported 163 warnings and 4 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2193 tests and 11591 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 2 errors from 2067 tests and 11353 assertions.\nCheckstyle analysis reported 141 warnings and 43 errors.\nWARNING! Pull request is not against staging!\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 2078 tests and 11381 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2170 tests and 11525 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2170 tests and 11525 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2170 tests and 11524 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 3 failures and 0 errors from 2170 tests and 11521 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2170 tests and 11526 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2170 tests and 11524 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2172 tests and 11531 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nTest log missing. Tests failed to execute.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2264 tests and 12116 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2264 tests and 12116 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Unit testing complete.  There were 0 failures and 0 errors from 2170 tests and 11526 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the base.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 163 warnings and 2 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2173 tests and 11532 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2172 tests and 11531 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2172 tests and 11531 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2172 tests and 11531 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2172 tests and 11531 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 1 errors from 2172 tests and 11530 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2173 tests and 11532 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2172 tests and 11531 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2173 tests and 11532 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2173 tests and 11532 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2173 tests and 11532 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2173 tests and 11532 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2173 tests and 11532 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2173 tests and 11532 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2173 tests and 11532 assertions.\nCheckstyle analysis reported 163 warnings and 3 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2173 tests and 11532 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2173 tests and 11532 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. The tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 163 warnings and 4 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 3 errors from 2193 tests and 11585 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2193 tests and 11591 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2193 tests and 11591 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Unit testing complete.  There were 0 failures and 0 errors from 2193 tests and 11591 assertions.\nCheckstyle analysis reported 163 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2194 tests and 11594 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2202 tests and 11597 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2195 tests and 11597 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis not found.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 3 errors from 2195 tests and 11591 assertions.\nCheckstyle analysis reported 163 warnings and 5 errors.\n. This pull request could not be tested since the changes could not be cleanly merged.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 7 errors from 2209 tests and 11600 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2193 tests and 11591 assertions.\nCheckstyle analysis reported 163 warnings and 1 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2197 tests and 11595 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the base.\nTest log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2193 tests and 11591 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 3 errors from 2193 tests and 11585 assertions.\nCheckstyle analysis reported 163 warnings and 5 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 13 failures and 40 errors from 2199 tests and 4120 assertions.\nCheckstyle analysis reported 163 warnings and 7 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2193 tests and 11591 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2193 tests and 11591 assertions.\nCheckstyle analysis reported 163 warnings and 5 errors.\n. Build triggered by changes to the base.\nUnit testing complete.  There were 0 failures and 0 errors from 2197 tests and 11595 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2197 tests and 11595 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 1 failures and 0 errors from 2197 tests and 11595 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 1 failures and 0 errors from 2197 tests and 11585 assertions.\nCheckstyle analysis reported 163 warnings and 43 errors.\n. Unit testing complete.  There were 1 failures and 0 errors from 2197 tests and 11594 assertions.\nCheckstyle analysis reported 163 warnings and 10 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 2 failures and 1 errors from 2201 tests and 11594 assertions.\nCheckstyle analysis reported 165 warnings and 12 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 2 failures and 1 errors from 2201 tests and 11594 assertions.\nCheckstyle analysis reported 165 warnings and 12 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2201 tests and 11599 assertions.\nCheckstyle analysis reported 165 warnings and 12 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 5 failures and 44 errors from 2203 tests and 4250 assertions.\nCheckstyle analysis not found.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 165 warnings and 12 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2197 tests and 11595 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 25 failures and 16 errors from 2351 tests and 12252 assertions.\nCheckstyle analysis reported 164 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2197 tests and 11595 assertions.\nCheckstyle analysis reported 163 warnings and 4 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2197 tests and 11595 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2200 tests and 11594 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 0 failures and 0 errors from 2200 tests and 11594 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Unit testing complete.  There were 1 failures and 0 errors from 2200 tests and 11594 assertions.\nCheckstyle analysis reported 177 warnings and 479 errors.\n. Build triggered by changes to the head.\nThe tests completed but there was a problem parsing the report.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Build triggered by changes to the head.\nUnit testing complete.  There were 0 failures and 0 errors from 2199 tests and 4262 assertions.\nCheckstyle analysis reported 163 warnings and 0 errors.\n. Test log missing. Tests failed to execute.\nCheckstyle analysis not found.\n. I guess my point is that it would seem to make sense to change the getArray() method to return everything CMD filtered if no parameter is supplied rather than creating a new method that does almost exactly the same thing.\n. ",
    "jlover": "Checkstyle error details:\nlibraries/joomla/form/rules/integer.php:35\nDoc comment for var $element does not match actual variable name &$element at position 1\nlibraries/joomla/form/rules/integer.php:35\nExpected 2 spaces after the longest type\nlibraries/joomla/form/rules/integer.php:42\nDoc comment for var $input does not match actual variable name &$input at position 4\nlibraries/joomla/form/rules/integer.php:44\nDoc comment for var $form does not match actual variable name &$form at position 5\nlibraries/joomla/form/rules/integer.php:73\nWhitespace found at end of line\nlibraries/joomla/form/rules/integer.php:113\nWhitespace found at end of line\nlibraries/joomla/form/rules/integer.php:127\nWhitespace found at end of line\nlibraries/joomla/form/rules/integer.php:132\nWhitespace found at end of line\nlibraries/joomla/form/rules/integer.php:141\nPlease end your files with an empty line.\n. Checkstyle error details:\nlibraries/joomla/application/component/controller.php:1141\nExpected 3 spaces before variable type\nlibraries/joomla/application/component/controller.php:1141\nExpected 2 spaces after the longest type\nlibraries/joomla/application/component/controller.php:1141\nExpected 2 spaces after the longest variable name\nlibraries/joomla/application/component/controller.php:1143\nReturn comment requires a blank newline after it\nlibraries/joomla/application/component/controller.php:1149\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...) ...{...}\\n...else \"\nlibraries/joomla/application/component/controller.php:1162\n@package tag comment indented incorrectly; expected 4 spaces but found 0\nlibraries/joomla/application/component/controller.php:1163\n@subpackage tag comment indented incorrectly; expected 1 spaces but found 0\nlibraries/joomla/application/component/controller.php:1164\n@since tag comment indented incorrectly; expected 6 spaces but found 0\nlibraries/joomla/application/component/controller.php:1168\nMissing function doc comment\nlibraries/joomla/application/component/controller.php:1180\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...) ...{...}\\n...else \"\nlibraries/joomla/application/component/controller.php:1183\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...) ...{...}\\n...else \"\nlibraries/joomla/application/component/controller.php:1190\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...) ...{...}\\n...else \"\nlibraries/joomla/application/component/controller.php:1195\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...) ...{...} ...else \"\n. mine found only 3 :P\nCheckstyle error details:\nlibraries/joomla/installer/adapters/package.php:113\nConcat operator must be surrounded by spaces\nlibraries/joomla/installer/adapters/package.php:113\nConcat operator must be surrounded by spaces\nlibraries/joomla/installer/adapters/package.php:122\nConcat operator must be surrounded by spaces\n. Checkstyle error details:\nlibraries/joomla/application/component/controller.php:272\nConcat operator must be surrounded by spaces\nlibraries/joomla/application/component/controller.php:272\nConcat operator must be surrounded by spaces\nlibraries/joomla/application/component/controller.php:282\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...)\\n...{...}\\n...else \"\nlibraries/joomla/application/component/controller.php:286\nUsage of ELSE IF is not allowed; use ELSEIF instead\n. Checkstyle error details:\nlibraries/joomla/html/html/behavior.php:892\nConcat operator must be surrounded by spaces\nlibraries/joomla/html/html/behavior.php:892\nConcat operator must be surrounded by spaces\nlibraries/joomla/html/html/behavior.php:893\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if(...)\\n...{...}\\n...else\\n\"\nlibraries/joomla/html/html/behavior.php:895\nConcat operator must be surrounded by spaces\nlibraries/joomla/html/html/behavior.php:895\nConcat operator must be surrounded by spaces\nlibraries/joomla/html/html/behavior.php:895\nConcat operator must be surrounded by spaces\nlibraries/joomla/html/html/behavior.php:895\nConcat operator must be surrounded by spaces\nlibraries/joomla/html/html/behavior.php:900\nConcat operator must be surrounded by spaces\nlibraries/joomla/html/html/behavior.php:900\nConcat operator must be surrounded by spaces\n. Checkstyle error details:\nlibraries/joomla/application/component/view.php:389\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if(...)\\n...{...}\\n...else\\n\"\nlibraries/joomla/application/component/view.php:393\nWhitespace found at end of line\nlibraries/joomla/application/component/view.php:396\nWhitespace found at end of line\n. Checkstyle error details:\nlibraries/joomla/database/database.php:936\nWhitespace found at end of line\nlibraries/joomla/database/database.php:941\nWhitespace found at end of line\nlibraries/joomla/database/database.php:941\nFunctions and classes must not contain multiple empty lines in a row; found 3 empty lines\nlibraries/joomla/database/database.php:967\nWhitespace found at end of line\nlibraries/joomla/database/database.php:967\nFunctions and classes must not contain multiple empty lines in a row; found 3 empty lines\nlibraries/joomla/database/database.php:969\nWhitespace found at end of line\nlibraries/joomla/database/database.php:974\nWhitespace found at end of line\nlibraries/joomla/database/database.php:974\nFunctions and classes must not contain multiple empty lines in a row; found 3 empty lines\n. Checkstyle error details:\nlibraries/joomla/html/html/string.php:179\nConcat operator must be surrounded by spaces\nlibraries/joomla/html/html/string.php:179\nConcat operator must be surrounded by spaces\n. The actual error count reported by @joomla-jenkins (including unit test results) may not be accurate - please be patient, all errors will be fixed ASAP ;)\n. Return comment requires a blank newline after it\n. Concat operator must be surrounded by spaces\n(note: this does not apply to the .= sign\n. Concat operator must be surrounded by spaces\n. Concat operator must be surrounded by spaces\n. Concat operator must be surrounded by spaces\n. Concat operator must be surrounded by spaces\n. Whitespace found at end of line\n. Concat operator must be surrounded by spaces\n. Concat operator must be surrounded by spaces\n. Concat operator must be surrounded by spaces\n. ",
    "TharinduDG": "\".\" is used in front of a folder in linux to make it a hidden folder.  I think that it isn't allowed to use the period, because the result of the name will depend on the OS. Can this be considered as a bug ? \n. ",
    "vietvh": "@Louis: I've just made some code formatting according to Joomla code sniffer rules\n. I just had no intention to support component's params that put in the component manifest file while making this patch, if we need to keep supporting it, i'll redo this patch.\n. The patch now supports configuration data stored in component manifest file.\n. @chdemko: I've updated my repo\n. Hi Andrew,\nI've updated the docs block as well as moving those changes to a new pull request that based on my git branch, not the master like before.\nHere is the link: https://github.com/joomla/joomla-platform/pull/638\n. I am actually using JImage for my project, but just some basic functionalities like cropping and resizing, it works well so far, looking forward to get it merged into j platform.\n. Could you be more specific about the nested manifest files case,? Is there any ready package so that I can test?\nSo far the test source that I've mainly used is /tests/_data/installer_packages in the cms trunk repository.\n. Closed for now as it need some updates.\n. Zeanne Codner has confirmed that issue is fixed.\n. Hi Elin,\nWhat did you mean \"error with the next field\"\nViet\n. I got a quick fix by manually unset alias field in my class which extends JTable\n. Yes, my table has around 20 fields\n. Yes my issue is directly related to $updateNulls\n. @elinw Its good for me, closing my pull request\n. Just fixed some tab issues.\n. +1 for moving JS out of Platform repository\n. @piotr-cz : agree about the possible duplicated ID, look like the core output of JDocumentRendererMessage could create duplicated ID too.\n\"system-message\" is mostly used in CSS by bluestork, hathor, beez5, beez_20; in JS by Finder and in a lot of Selenium test suite, changing it could affect a lot.\nLooks like there are 4 types of message: message, error, notice, warning\n@LouisLandry : I'd love to but I think someone with better understanding of overall JS structure of Joomla should handle this.\n. @piotr-cz: Actually I do not see many types of system message displayed at once often, just trigger them by myself and here is the output in the template7 branch \nhtml\n<div id=\"system-message\" class=\"alert alert-notice\">\n      <a class=\"close\" data-dismiss=\"alert\">\u00d7</a>\n      <h4 class=\"alert-heading\">Error</h4>\n      <div>\n         <p>Error message here</p>\n      </div>\n      <h4 class=\"alert-heading\">Warning</h4>\n      <div>\n         <p>Warning message here </p>\n      </div>\n      <h4 class=\"alert-heading\">Notice</h4>\n      <div>\n         <p>Notice message here </p>\n      </div>\n</div>\nI'd suggest the following (which we can use Bootstrap existing class, you can manipulate the DOM easily)\n``` html\n \n\n\u00d7\nError\n\nError message here\n\n\n\n\u00d7\nWarning\n\nWarning message here \n\n\n\n\u00d7\nNotice\n\nNotice message here \n\n\n\n```\n. New pull: https://github.com/joomla/joomla-platform/pull/1420\n. It is implemented here: \nhttps://github.com/vietvh/joomla-cms/commit/e57821a1e9318036a1e29d8294b43055086dfaee\n. I've made some updates according to your suggestions.\n. We are having _splitQueries() (in the installation folder) which do the same task.\n. ",
    "pasamio": "Does this still work if the developer puts the extension params in the component manifest file? Just looking through it seems to stop using that capability in preference to requiring a config.xml or perhaps I'm missing something.\n. I'd suggest if people are using it then we should support it. It is a supported mechanism for setting configuration parameters and sooner or later someone will mark it as a bug if it isn't supported (e.g. \"it works if I do this but not this\"). It shouldn't be too hard, if you don't find the config xml file just default it to the manifest one and a small amount of logic to handle that.\n. As a process point this should be done against staging not master\n. Do you have a link to a test package that could be included with the installer sample packages? (they're currently living in the CMS project)\n. Seems fine to me, I've always wondered about packages having their own scripts but figured that the components, modules or plugins would take it over. Really have no opinion either way.\n. No my view is that doing:\n// If the install fails, exit and roll back changes\nif (!$table->setLocation(1, 'last-child') || \n    !$table->bind($data) || \n    !$table->check() || \n    !$table->store()) {\n     // Install failed, rollback changes\n     JError::raiseWarning(1, $table->getError());\n     return false;\n     }\nis the same as what you propose except instead of adding five lines, we add one. I also suggest that the general direction is towards using JLog and that since we've done 1.7 that it'd be nice to go that way though potentially it could work through the internal installer message notification system. I don't think it is reasonable to throw an exception here as we already have a defined interface that works, we just want to log the error ;)\n. Sorry, wrong branch\n. json_encode was added in PHP 5.2 and was a PECL library prior to that. _getJSObject() dates from Joomla! 1.5 which supported PHP4 prior to json_encode being reasonably available. Given we're on PHP 5.2+ now it makes sense to refactor the function to use json_encode if you're willing.\n. Thanks for fixing up those issues!\n. I'm kind of worried how this will behave with those users who have nested manifest files throughout their extension. For example a separate plugin or similar. I don't see any test cases which handle that sort of edge case and if we're changing the way manifest detection should work, we should really be looking for a variety of different situations and ensuring it behaves consistently.\n. If you have a component without a config.xml which has inside itself a second component with a config.xml, how does your patch behave? Does it default the params to the component's XML file or does it pick up the config.xml from the child component that is being shipped uncompressed as well?\n. Sounds like the test is broken. JApplicationHelper::getClientInfo() when passed a true for the second param looks up by a string name not a numeric id. My reference example includes a name not an ID because an ID can change between applications however the string identifier should remain consistent:\nhttp://jsitepoint.com/update/modules/list.xml\n. Look at what getClientInfo does and look at what the code seems to think it should be doing. Somewhere something isn't right.\nNear as I can tell getClientInfo wants a string in the way it's being called there. Near as I can tell client_id looks like it should be a number. Particularly as the next thing I do is pull out the numeric ID I just got back from getClientInfo and put it into CLIENT_ID...so why did I do that? Seems an elaborate way to replace a variable with the exact same value.\nI'm not arguing it's not broken, I'm arguing that the fix doesn't make sense. I said it didn't make sense when it was done the first time and I'm stating it doesn't make sense now.\n. The point of \"CLIENT\" versus \"CLIENT_ID\" is that client is a string, and client ID is a number that can change. Someone could map it onto a database table and mix things up. Someone could add a distinct client into Joomla (which is one case I've dealt with, you'll note I submitted a patch to be able to add new clients easily a while back) or potentially have an entirely new app with distinct clients within it. The point of having a name is that if that happens you can still use the update system and it isn't hard coded to ID's assigned by the CMS.\nI have no idea why extensions do it, I'd suggest that perhaps it's an oversight that the same mapping code is missing and someone just jammed something in to make it work. I suspect this is again the case here given it really doesn't make sense when you actually look at the code - unless people are putting in the textual description in CLIENT_ID in which case it's logically broken. I also used lists heavily more than individual extension files which would cache the client ID that way. I'll see if over Christmas I can work out what's been borked and fix it.\n. So digging through this, at some point this change was made:\nhttps://github.com/joomla/joomla-platform/commit/28819069e156bb749371a0d08c30d1d7cd62a366#libraries/joomla/updater/updateadapter.php\nNot sure where it came from but what it does is break the bit of code in question. It removes \"CLIENT\" from the list of update cols which disables the above mapping.\nIt appears to be related to this broken fix here:\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=24338\nI suggest a particular tag and some how it turns into breaking something entirely unrelated and thus causing this problem. I probably have this bug notification email sitting somewhere in my inbox unread under the piles of other email. \nNow to fix this problem and fix the original problem.\n. Can you check out the following and see if it fixes your problems?\nhttps://github.com/joomla/joomla-platform/pull/676\n. @elinw the point is that 2.5 beta is broken and the change isn't the best; if the CMS tests and applies that change then we don't have an issue however at the moment the CMS has a bug\n@mbabker not sure why it wouldn't be working if you added it there. I can't see code wise why it would make a difference as the \"OR\" should be the same as adding it to the array logically speaking.\n. Why isn't the quote being removed any more?\n. Err, this was committed with checkstyle errors?\n. Have you read the docblock comment for JView::$_name ?\n. I'm confused? Whats broken?\nInstead of the parsed args being well parsed and available via get(), you seem to be spamming up args and making it rather useless.\nPresuming you're in a JApplicationCLI, what's wrong with the following:\n$this->input->get('q');\n$this->input->get('e');\n$this->input->get('r');\n$this->input->get('t');\n$this->input->get('thisis');\n. Checkout the following example:\nhttps://github.com/joomla/joomla-platform-examples/blob/master/cli/argv/run.php\n. We don't need to mark them as read only. Protect it from what? The class itself does nothing beyond set a few variables, it doesn't read them once it's set them or do anything fancy. We don't gain anything by marking it read only because the only thing that will interact with these fields post construction is all external! If anything it makes life difficult by obstructing access for no apparent reason to be able to update the values if need be for what ever reason (perhaps someone writes a serialisation mapping class).\n. 1) Why?\n2) You need to fix the code style issues.\n. But why are you overloading the application's menu class?\n. So why are we overloading the application's menu class?\n. Why?\n. So like if you were creating a new application entirely?\n. So where is the need or are we just doing it for kicks?\n. So you've got a replacement JMenuAdministrator or JMenuSite you can share?\n. So this isn't something you feel could be added to JSiteMenu as a simple trigger for your event? Like JApplication::triggerEvent('menuLoad') ?\n. The CMS doesn't need to override itself because it is itself. It doesn't make sense to provide the CMS a way to better override functionality it already provides. It doesn't necessarily make sense to provide a mechanism to override this when a better alternative could be arrived at using a different mehcanism.\nThe example you provide is to replace an entire class to add an event trigger. Why not just add the event trigger? You're replacing a 140 line file to add 9 lines of code. Not to mention the unrelated functions that you don't touch. All of this just to trigger an event - so if you need such an event then you put it into the right place.\nReplacing entire classes isn't the only way to provide extensibility. I'd suggest in this particular case it's best to use our plugin system to build extensibility.\nAs an aside it seems weird to override JSiteMenu and then check if JApplication::isSite is true.\n. Because it isn't a bug fix, it's a new feature. What I'm asking is if there a better way of doing this instead of replacing an entire class and for the example given it makes sense to add a plugin trigger instead which means more than one person can extend the functionality instead of whomever gets there first.\nTo me it feels like multiple plugins could potentially wish to add, alter or remove menu items based. This seems to be the underlying feature being requested. The implementation of a plugin trigger provides even more flexibility than simply providing a mechanism to override the class.\n. To phrase the situation slightly differently, the request is to add the ability to override a class so that the class can be overridden to provide the ability to add a plugin trigger.\nSo why not just add the plugin trigger?\n. I haven't prevented anything, I'm just trying to understand things. Hence why I asked \"why\" after every time I got \"what\".\nAnyway, I'll wait for ssv445 to answer if a simple plugin trigger would indeed solve the problem that he's encountering.\nAlso just realised that you can swap the include_once to an include if you're checking if the class is defined or not (presumably if the file is already included then the class would be defined).\n. @AmyStephen you misunderstand my post, I'm suggesting with the change we don't need the include_once as presumably if the class has already been defined either someone else did it or that file was loaded.\n@ssv445 I think the view is if you're using the platform directly then you're less likely to actually be doing the sort of things you're suggesting need to be done. But now you mention that you raise an interesting point: an argument could be made that the menu system is also CMS specific and should actually be shifted to the Joomla! CMS folder. That's actually not a bad idea that you raise there.\n. No I mean that it doesn't need to be an include_once any more, just an include because presumably if the file is loaded the class is defined and if the class isn't defined then presumably the file isn't loaded so we can eliminate the extra check that include_once will do.\n. Menus as they are defined now are an integral part of the Joomla! CMS, I would suggest that if you were planning on building a new Joomla! Platform powered CMS that the last mistake you would make was the re-use of the existing menu system (and maybe not the routing system either).\nIf you have a look at JRoute/JRouter you will notice that they themselves do not call a dependency upon the menu themselves. JRouteSite is in fact the beast that invokes the menu system into action from the application. Using the existing menu system would encourage the proliferation of the Itemid which I feel has been universally agreed to be one of the weakest aspects of our SEF implementation as it easily provides for the ability to get to a given content item multiple different ways causing us issues when considering SEO and Google which now penalises for duplicate content (at one point the ability to create duplicate content in different parts of the site was viewed a feature to enable end users to be able to discover a given piece of content in multiple pathways).\nSo to answer the question, the menu is really a construct of how the CMS works at the moment and I'd almost suggest should be hidden lest we forget the mistakes we made and redo Itemid all over again.\n. Let's just put it back the way it was and do a more thorough job of fixing the class later.\n. Wouldn't this break backwards compatibility for anyone with a date with 8 or less digits in it?\n. Are the other types of installers that are accepting the media type work properly or was it just libraries?\n. Line 685 has white space at the end, not sure where the extra is warning is triggered from with a quick examination.\nIf you install phpcs via PEAR (http://pear.php.net/package/PHP_CodeSniffer/), executing the following in the root of the platform should tell you what is wrong:\nphpcs --standard=\"build/phpcs/Joomla\" libraries/joomla/database/database/sqlsrv.php\n. In general JForm has replaced the functionality provided by JParameter. Additionally many tasks that used JParameter can transparently use JRegistry.\n. So this means you can't use getQuery to get the last set query for debugging purposes and you're assuming people are always using a query object which again may not be the case, someone could easily set a string and this would break.\n. Aren't you just shifting the problem for someone who might be wanting to test for 'true'?\n. Alternatively, have you tried using the triple equals (===) to do a type check?\n. Why not make JDatabase and it's derivatives just implement Iterator directly? Effectively it has to do this anyway, you're just creating a proxy object to it.\n. Read my mind! I was thinking about this just this morning about needing a way third party libraries could register their own prefix to get the same advantage as the Joomla classes\n. So why not convert the date in PHP and change the field behaviour to output a hidden field so that saving still works and instead display a disabled input field as usual.\n. More importantly this will introduce a bug where \"read only\" calendars will become writeable again.\n. Instead of making this change, I'd put in the change to get something like that added to the main JDatabaseDriver API and provide the MySQL implementation you've got as the pull request. Both are going to become available around the same time and the later option provides more functionality to everyone.\n. Closing this pull request due to lack of response.\n. Why use the name? Why not use a packagename tag or something like that?  Name, at least for me in 2.5, is \"English (United Kingdom)\" and the Urdu pack I grabbed was \"Urdu (Pakistan)\". This would make the element set to something completely different to \"en-GB\" or \"ur-PK\".\nHave you tested uninstalling a partial language pack in this way as well? Or even a full language pack? Given the tag name is used for uninstalling the extension, changing this setting would break uninstalling any language pack near as I can tell from a simple code review (again \"en-GB\" != \"English (United Kingdom)\").\n. Which one of these doesn't fit:\narticle\natomic\nbanip\nbeez5\nbeez_20\nbluestork\ncache\ncanonicalization\ncategories\ncodemirror\ncom_admin\ncom_banners\ncom_cache\ncom_categories\ncom_checkin\ncom_config\ncom_contact\ncom_content\ncom_cpanel\ncom_finder\ncom_installer\ncom_languages\ncom_login\ncom_mailto\ncom_media\ncom_menus\ncom_messages\ncom_modules\ncom_newsfeeds\ncom_plugins\ncom_redirect\ncom_search\ncom_ssomanager\ncom_templates\ncom_users\ncom_weblinks\ncom_wrapper\ncontactcreator\ncontacts\ncontent\ndebug\nemailcloak\nEnglish (United Kingdom)\nextensionupdate\nfinder\ngeshi\ngmail\nhathor\nhighlight\nhttp\nimage\nip\njoomla\njoomlaupdate\nlanguagecode\nlanguagefilter\nldap\nlib_gforge\nlib_jauthtools_openid\nlib_jauthtools_sso\nlib_jauthtools_token\nlib_jauthtools_usersource\nloadmodule\nlog\nlogout\nmod_articles_archive\nmod_articles_categories\nmod_articles_category\nmod_articles_latest\nmod_articles_news\nmod_articles_popular\nmod_banners\nmod_breadcrumbs\nmod_custom\nmod_feed\nmod_finder\nmod_footer\nmod_languages\nmod_latest\nmod_logged\nmod_login\nmod_menu\nmod_multilangstatus\nmod_popular\nmod_quickicon\nmod_random_image\nmod_related_items\nmod_search\nmod_sso\nmod_stats\nmod_status\nmod_submenu\nmod_syndicate\nmod_title\nmod_toolbar\nmod_users_latest\nmod_version\nmod_weblinks\nmod_whosonline\nmod_wrapper\nnewsfeeds\nnone\nopenid\np3p\npagebreak\npagenavigation\nphpmailer\nphputf8\npkg_joomla\nprofile\nreadmore\nrecaptcha\nredirect\nremember\nsef\nsession\nUrdu (Pakistan)\nsimplepie\nsimplesso\nsso\nsync\ntinymce\ntokenlogin\ntypec\nvote\nweblinks\nElement is not supposed to be a \"name\", it's supposed to be a uniquely identifiable element without funky characters. At the moment that is the language code. If you intend on changing this you need to create something similar.\nAdditionally, you still don't address the issue that language uninstall is completely broken by this pull request. Have you tested this bit of code?\n. \"Error suppression is used here to prevent warnings/notices that the connection has been lost.\"\n. Then why did you ask what the problem that he was trying to solve was if you can read the comment? It seems obvious to me the problem that he was trying to solve is explained so perhaps I missed something.\nSo the way I read the code is that it runs the query, the query fails, we ask MySQL if it's connected, if it says it isn't we re-connect and attempt to retry. If it does say it's connected it grabs the error number and error message from the connection and then throws an exception.\nNear as I can tell it shouldn't attempt to re-connect and \"throw away\" the error message but instead should do what it was doing before which is get the error code and message from the server and then throw an exception with these details. Or are you saying that the exception never gets thrown?\nIs it possible that mysql_ping/mysqli_ping is clearing the result so perhaps all that needs to occur is 456/457 (mysql.php) or 302/303 (mysqli.php) needs to be put back and those lines that are elsewhere removed? Have you tried merely shifting those lines to see if it makes a difference? They'll obviously need some form of error suppression put around them as well because when the connection is disconnected this will cause a notice to be raised.\nThis seems to be more likely that there is a simple bug that needs to get sorted around making sure everything is run in the right order.\n. If you're using MySQL, you're saying that moving lines 483 to 485 of mysql.php to be back where they were on line 456/457 just before the if (!$this->connected()) line doesn't fix the problem for you?\nIf you're using MySQLi, you're saying that moving lines 327 and 328 of mysqli.php to be back where they were on line 302 and 303 just before the if (!$this->connected()) line doesn't fix the problem for you?\nAre you really telling me a developer of your calibre can't relocate two/three lines?\n. I seriously think the problem is simple, mysql_ping/mysqli_ping is merely cleaning the error code which is a behaviour that wasn't initially expected. I feel all that needs to happen is to shift those lines as I've stated previously and the problem may be solved. Given #1554, it looks like someone had the same conclusion and now it's only an issue for MySQL driver not MySQLi any more.\n. You'll need to update to master because of the curl changes and would you mind putting in some code to check $php_errormsg for the stream handler so that we can get some insight at least there why it failed?\n. We take the string by reference and that is going to cause the original string to change which is probably not accepted and widely regarded as a bad idea (see strtok)\n. To be clear, you're on the right track but we need a better way. It's aiming where possible to avoid making a copy of the string but we may end up having to do this.\n. @chdemko I didn't say that : is illegal just that it is explicitly limited in the relevant specification. Even in your example there it is not the first character. Check out RFC 3986 on details about the limitations of the colon character in the path component.\n. This can't be merged, please double check if this pull request has been pulled with other updates that have been applied.\n. Doesn't this change the behaviour of the field to not be checked if the value does match? Shouldn't we validate both options?\n. I'd suggest that for someone wanting a more complete cache library with more complicated caching strategies that they could then look into using Stash. Given you point out yourself that almost nobody uses it, it doesn't make sense to maintain a feature that is barely used and is better supported elsewhere in place of providing a simpler and more reliable caching mechanism to meet the majority of use cases.\n. Actually 1 is caused because you deleted the plugin preflight uninstall method. If you put the uninstall preflight method back then you won't have this error. Do you mind putting it back?[1]\nAdditionally it's supposed to append at the later point as the comment alludes to however it doesn't, this is the real bug.\n[1] https://github.com/mbabker/joomla-platform/commit/a3600e91df25f3511e3b39949a0faa4c8d5bc72d#L6L622\n. The idea was for library plugins (which are still reasonably popular) to be able to prevent uninstallation if their dependent extensions were installed. Obviously uninstalling the underlying library for an extension could cause problems for the extension and potentially break the site. Almost every other extension type doesn't have that behaviour except libraries (so if it wasn't there, that's an oversight) where uninstalling the plugin can take out the site.\n. @elinw: Re #1179 I don't think it makes sense to have those three have script files similar to those items specifically geared at interacting with the user (component, module, template). I don't have any objection to it, I just don't feel it makes sense. Re #901 sounds like a minor oversight\n. @ErisRod good point, the changes on line 102, line 429/451, line 588 to 593 need to be reverted. This will mean that the additions on line 346 need to be reworked. I should have looked at this closer as the intent of it is to be able to put files anywhere in the file system and this breaks it. @mbabker do you mind looking into getting this resolved quickly?\n. Alternatively, @ErisRod if you could update and put in a pull request to fix things that'd be good as well.\n. I assume the reason is because you're changing extension_root. Though I could be wrong, @ErisRod care to expand on your issue?\n. Sounds like a good case for a unit test as well to verify that we don't break things going forwards either.\n. What about changing line 216 to be empty instead of is_null? Would that solve the problem?\n. This appears to have style and unit test problems. Can you verify that there are not UT or CS problems with this pull request?\n. I have no idea if it's UTF-8 safe or not, all I know is there is a bug when you pass in what looks like a port in the query string which confuses PHP's parse_url (to be fair, we're parsing a segment). I'd guess like most of PHP it's far from safe for most definitions of the word.\n. Can you run this through PHPCS with the Joomla Coding Standard:\nhttps://github.com/joomla/coding-standards\n. Not sure I entirely agree, PHP's obsession with returning PHP warnings/errors with the actual error message being in the warning (only partially following the C convention here). The only way to work around this and get useful information is to use $php_errormsg however the PHP example includes the use of the silence operate in it's canonical example:\nhttp://us2.php.net/manual/en/reserved.variables.phperrormsg.php\n. I'd much rather this shift to CMS sooner rather than later and we can build a new mechanism built around JController tasks that we join together to build coherent pieces.\n. I'm skeptical of pulling everything over to PDO or that we will be PDO for everything at some point in the abstract future. PDO in my experience comes with a large selection of it's own baggage which you have to learn and understand the nuance as well as working out the particular nuances of each database layer as well. There was a time when PDO wasn't even maintained by anyone in the PHP core but I'm not sure if this is still a true statement. PDO will always lag behind what native drivers provide simply due to it's design. It is likely that we'll live in a world of PDO + native drivers for a while yet.\n. The reason that Joomla lags behind is because we purposely hold ourselves back to ensure that the majority of the hosting providers can run the application. The Platform only just switched to PHP 5.3 because of the CMS and because there is a lag between what PHP supports and what hosting providers offer. The lack of support for features I a sense is intentional. If anything this makes the reason PDO lags an even more significant reason: a significant number of our customers are on a lagging PHP version.\nGiven that I'm probably ready to contribute a replacement Oralce driver that uses the native OCI functions instead of PDO version and in the past I've talked to Louis about issues with SQLite PDO I'm not in favour of PDO in general. There are numerous issues and incompatibilities that PDO tries to hide badly. I think for me the most interesting thing that prompted the shift for OCI for me from the PDO Oracle was that Propel, which is a reasonable mature PRM for PHP, actually failback to the OCI functions to make up for the fact that PDO Oracle outright doesn't work. There are plenty of other places and while at the moment the PDO library is presently being supported, there was a time during the early 5.0 series where it had no maintainer at all. And in a sense not all of the drivers are well supported. \nGiven there is an existing MySQL driver, I think we should keep it clear for the time being. \n. In your description you say \"more than a single uppercase character\" but all of the examples are \"Jcms\" with a single upper case character. Am I missing something?\n. The other adapters are fine or they just don't feature this functionality? Packages, libraries, components, templates and languages?\n. Do you mind putting in a unit test that shows this bug in action and can demonstrate it working properly?\n. I'm confused though, if it isn't a real bug what are we fixing? It sounds like it's a bug, all I'm asking for is a unit test to feed data to the function and replicate the error/prove it's fixed and ensure it doesn't get broken into the future.\n. Then it should only take two minutes to build a unit test to verify it and ensure it works into the future.\n. Do you mind refactoring this to use an array and a loop for each of them. Then you can optimise the if (defined(JPATH_SITE) to wrap around something that will add twice to a $paths array lets say. Then something like this could work:\n```\n        $paths = array();\n        if (defined('JPATH_SITE'))\n        {\n            // Note: Manual indexing to enforce load order.\n            $paths[0] = JPATH_SITE . \"/language/overrides/$lang.localise.php\";\n            $paths[2] = JPATH_SITE . \"/language/$lang/$lang.localise.php\";\n        }\n    if (defined('JPATH_ADMINISTRATOR'))\n    {\n        // Note: Manual indexing to enforce load order.\n        $paths[1] = JPATH_ADMINISTRATOR . \"/language/overrides/$lang.localise.php\";\n        $paths[3] = JPATH_ADMINISTRATOR . \"/language/$lang/$lang.localise.php\";\n    }\n    ksort($paths); // not sure if this is necessary but it can't hurt. it'll ensure the array is properly ordered.\n    $paths = array_values($paths); // this will remove the indexes. also should not be necessary.\n\n    $path = reset($paths);\n    while (!class_exists($class) && $path)\n    {\n        if (file_exists($localise))\n        {\n            require_once $localise;\n        }\n        $path = next($path);\n    }\n\n```\nThe ksort and array_values may not be necessary however it never hurts to check. They're there for if say JPATH_ADMINISTRATOR isn't defined and the array only has two entries but I don't think it'd make a difference however it doesn't hurt to try it out and verify. If it does make a difference then the code is already there.\n. Looks like you have some CS problems still:\nhttp://developer.joomla.org/pulls/pulls/1418.html\n. You do realise an email copy of the comment you just deleted is sent.\n. There was an error around not having a comment that is all that needed to be fixed. As noted this needs a merge. The error is the more important thing and was noted on the pull tester. If you fix this pull request to be mergeable, the pull tester will eventually update and display the error for you at the bottom. From memory you just need a new line before the @return in the docblock to get rid of the error.\n. @dianaprajescu Can you rename it to just oauth/client.php and we'll have oauth2/client.php. Unless someone is planning on implementing a 1.0 client (not 1.0a), this will be fine.\n. Does it share a high level of code sharing with 1a or is it completely different like 2 appears to be with no ability to share? If it can share a significant chunk of code I think integrating it into the constructor and setting the behaviour that way and perhaps defaulting to 1a if that's the more predominant value then going forwards that way.\n. Well the way I see it is we have two options:\n1) If OAuth1 and OAuth1a don't share any code either we split them into their own packages. In a sense at the moment that's probably the path of least resistance.\n2) If they do share some amount of code that we can re-use between the two, expanding through a constructor param that selects the appropriate version (1 or 1a) and mutates the object behaviour that way.\n. @aaronschmitz do you mind renaming it from oauth/v2client.php to oauth2/client.php? Given it seems to be an independent implementation with no sharing of code between the two implementations.\n. Calling it $curlOptions and jamming it into JHttp feels wrong. JHttp is supposed to be transport agnostic and putting something named as one of the specific options doesn't feel right. \nWhy can't these be included with the $options that are created when the transport is constructed? It's obviously cURL specific, so if you want to set specific cURL options then you can instantiate a cURL transport and set the parameters appropriately?\n. Do you mind rebasing the commits to remove the extra two commits that don't really add much value. \nI'm not sure I entirely agree with the direction as this would encourage people to place files in the root and I don't feel that this is generally what we'd be after. I can see a few use cases (my own included) where this would be useful however. I'll wait for feedback from others.\n. For future reference if you rebase and do a force push to the original branch, the original pull request will be updated with the rebase'd commits.\n. Is there a pull request for the issue?\n. I'd argue that it shouldn't be set to an empty string to begin with and this is a bug in the bootstrap code that set it and it should be fixed there.\n. Wasn't there a bug with escaped double quotes on PHP 5.2? Isn't that why we did the whole QQ thing?\n. Cool, I couldn't remember if it was PHP 5.2 or 5.3 that had it or some version of PHP 5.3. Yay for workarounds!\n. Re 1:\nThat's a good addition, I've done something similar in the past on an SQLite project where the same behaviour exists. I think MySQL is probably the exception in letting zero values for auto-incrementing columns work like a null. MSSQL identity fields I think will have an issue with either zero or null so perhaps it'd be better to actually not include the field at all if it's empty in the insertObject (e.g. unset $k) which should work fine for all four of those platforms since it'll be assumed to be null if not specified. But we can look at that in another pull request.\nRe 2:\nFrom the PHP web site there's this:\n\nNote:\nObject's private members have the class name prepended to the member name; protected members have a '*' prepended to the member name. These prepended values have null bytes on either side.\n\nWhich appears to cause PostgreSQL some issues as noted in the comments as well:\nhttp://www.php.net/manual/en/function.serialize.php#96504\nI don't actually think this is enough since if the null character is the problem, serialising an object with private members will also break. The change will only work for protected members however as soon as an object with private members is put into the session it will break again. I assume that single quotes were used to prevent PHP from turning the \\0 into a literal null character by design.\n. If you think it should be made an option then make it an option and default it to enabled.\n. Also stream I believe by default will attempt to follow redirects:\nhttp://php.net/manual/en/context.http.php\nWe should probably implement consistent behaviour across each and I'd suggest most of the time following redirects is a reasonable solution and should be the default.\n. So Rob made a change to default the cURL follow redirects behaviour to be inline with standard PHP stream handler where it follows redirects. This was to fix something Rob was working on where he expected cURL to be like PHP's stream handler it wasn't and now they're consistent.\nThis change broke your code. Unfortunately when sharing code and taking contributions these things happen. Your reaction is to create a pull request to revert Rob's pull request. Now since the change broke your code, your change is going to break his code if it were to be merged. Since Rob didn't know, or expect, this to break your code we can't expect him to have foreseen that making cURL behave like PHP streams would cause a problem. However you do know it will break his code because this change broke yours and knowingly breaking someone else's code is not very polite.\nAs an aside what this shows is that your code right now breaks on anyone's system that doesn't have cURL installed unless you're setting follow_location in $options already  -- or you're outright forcing the transport to cURL which again means you will have problems on those systems. And if you're forcing the transport you're avoiding one of the primary reasons for the development of JHttp: transport neutrality.\nSo my suggestion is to implement consistent behaviour echoing Rouven's earlier suggestion. I also went and linked to the appropriate documentation of the options for stream with an indication that PHP stream's default behaviour is to follow redirects. In this sense Rob's change makes it consistent. Additionally as JHttpTransportStream uses $options for the context values we can also draw inspiration here to become consistent and support that in cURL. This goes back to an earlier request where you're trying to jam a $curlOptions variable into places.\nWhat I want you to do is sit down and put the pieces together. I didn't make a comment and then 10 minutes later with a link to the PHP stream HTTP context options (hint 1: what does the stream transport do?) with the suggestion that it should be the default (hint 2: default it to follow) and that we should be consistent (hint 3: let's try 'follow_location' to be consistent) for fun. It was an attempt to guide your thinking and look at how the code works.\nNobody here is arguing, all we're after is flexibility and consistency. The reason there wasn't a discussion about adding cURL options previously was it wasn't thought to be necessary. Prior to Rob's change nobody did need them however clearly we do need them as you want a different behaviour. As noted by Rouven where possible we should be consistent in our behaviours across all transports. Rob's change made the cURL transport consistent with the PHP stream transport, so your change should continue in that spirit to be consistent with PHP stream's existing follow_location option. This means that you can set it to be off for what you need and it will work properly on both cURL and PHP stream's without other changes. Otherwise we're in the horrible land where you always set the option in case you're using one or the other and it breaks for you, again defeating the purpose of JHttp's transport neutrality.\nAnd we all understand you're trying to fix your code being broken but as noted above knowingly and purposefully breaking a platform maintainers code does not usually endear you to them. We're aiming for a pathway which improves the flexibility of the code.\nAll I'm after is for you to rename it from curl.followLocation to a more portable follow_location so we don't have two different ways to set the same option - one for cURL and one for PHP streams for the same behaviour. You wouldn't change your light switch when you swapped a light bulb from incandescent to fluorescent to perhaps LED - why would we do the equivalent in code?\n. @dianaprajescu I'm challenging you to think. Challenging you to think about a better solution and presenting what you're actually doing: you're knowingly breaking someone else's code and that's just plain rude and exposes rather bad manners. Clearly what I'm saying isn't getting through. If you don't want to think and be spoon fed like a baby then I can definitely treat you that way. In general I dislike treating people like idiots but I can definitely treat you accordingly if you wish to be treated that way. In my mind the entire point of GSoC is to expand your skills and one of the most important skills in programming is thinking. If you're not here to learn how to think then flipping burgers is where everyone tells you everything you need to do and don't expect you to think. I'd like to think you're better than that.\n. @HermanPeeren Perhaps I'm disappointed that spending time to try and educate seems lost. Merely telling someone what to do doesn't help you learn anything beyond for a particular case you should do a particular task. Rote learning may be useful for basic knowledge and facts however it doesn't develop understanding and it doesn't develop the most important skill. Telling someone to do a particular task is an example of rote learning and in my mind not particularly useful.\nI feel one of the hardest things about computing is that we don't spend enough time on the understanding phase of learning. There are plenty of books which teach you facts, plenty of web pages that have steps to resolve problems but in many cases there are much less examples of the delivery of understanding (though certainly available, not as common). The skill that understanding gets you is extra realisation. However the problem with understanding is that often there are steps left out. In mathematics, at least in my part of the world, we were always taught to list out the steps we took to get to the final answer. Computing sometimes has that but often can miss something simple: why did you pick this pathway over another?\nWhy is it bad to merely revert someones work when it broke yours? Because it will break theirs.\nWhy don't we want to propose changes that breaks others' code unnecessarily? Because generally this isn't a good way of endearing yourself to them.\nWhy are we now discussing adding options for something that didn't have options before? Because two different people feel that the same code path should behave differently. By adding an option we gain consistency and flexibility.\nAt each point there are decisions to be made around flexibility, trade offs and the like.\nHowever if the response to that is \"why did you write a long post explaining it all when all you want me to rename something\" then one gets the feeling that the time spent to walk through the problem set and develop understanding is lost and we're back to the situation where we're not thinking: we're merely being told what to do. Perhaps in a sense all we're doing is reacting again which was the problem in the first place and while there are certainly times for rapid reactionary changes, I'd like to think that when the platform encounters a conflict we try to think about it a little bit instead of just reacting.\nWhat I feel differentiates the discipline of software engineering (though I dislike the term 'engineering') from the other engineering disciplines is that while we may think that building software is a hard science that we can place rigid engineering principles around the reality is much more like an art where creativity and thinking is required to build great solutions.\nThere are plenty of people in the IT industry who don't spend time to think, don't spend time to understand and consequently don't produce the great work. I reiterate my challenge: think. It's only through thinking that we'll get better solutions to problems, not reactionary ones.\n. @HermanPeeren I think the problem is that I needed to say it easily 6 different times. I made comment on an earlier pull request, I made two comments here, I made a further comment on a commit and then again I made it on another commit and finally the last two that you see here. Each time I increase my pointedness until the point gets across until such time as the point gets across. The fact that you comment means that it's past the point of being obvious beyond the barriers of culture and language. I suggest you look at the entire conversation if you haven't already. It isn't until the last two comments where I suggest that directly reverting someones code completely is a bad thing (the original version of this pull request proposed in 505ea4f7debf449e12b1bc37ea83e020c21ff20f directly deletes Rob's original change which will likely immediately break the behaviour he's expecting which itself is consistent with how PHP's HTTP streams implementation works) and suggesting that this might not be the right way to do things. Earlier I suggest it should be an option and Rouven suggests it should be consistent. I wonder, how many time do you need to send the same message to the person with increased intensity until they get it? Clearly writing a detailed explanation of the thought process didn't do it. Posing simple questions of why this should be distinct from the established norm didn't do it either. Nor did linking to existing documentation on how it should behave or posing the question why this should behave different to the existing PHP implementation which itself was never answered. This worries me that direct questions are posed but never answered.\nIf anything this is the right forum to have this conversation, it's a discussion on how a pull request should evolve, how it should be reviewed and how the submitter can improve. An understanding on how this pull request could have been done better from the get go for all six or so parties now involved. More importantly if discussions aren't held here how can anyone hope to learn?\nSo I ask the question, should I have just told the student what to do in the first place or should I have encouraged them to think and learn on their own? (even though this seems fruitless in hindsight)\n. Unfortunately we can't always have elegant code but so long as it works then it is a step in the right direction.\n. This pull request can't be merged, it'll need to be rebased so it can be merged again.\n. Actually the current regexp supports TemplatesViewPreview just fine, it's been fixed for a while just the view hasn't been renamed. You can test it and see.\n. Ok, I double checked while the regexp supports it, the check if the view name that we found includes view is what kills it for some reason.\n. Discover was primarily intended for developers and development where all of the files would be in place and to just update the database to match what the file system had. This way you could extract out an extension into the right places for development and then have the database automatically populated instead of before where you would have to install the extension to create everything in the database and then re-write everything on the filesystem to fit into a developer flow.\n. For compatibility it should probably be stripos as you will note the earlier regexp has a /i modifier clause.\n. The current code doesn't let them call it PreviewsViewVideo already (or Review) so we're fine there for the moment. We just have to note down that this could potentially cause BC issues though again it also shouldn't be a problem.\n. BTW can you look through the style issues that Elin linked to and work those out and it should be fine to merge.\n. Nah, leave it as strpos, we'll put it in the release notes that it's BC incompatible.\n. I'm guessing it should be $this->_unlock() instead since that is a valid method of JTable.\nI found where it was added to the file here:\nhttps://github.com/joomla/joomla-platform/commit/017f8f78629ec386b02194ac9838c81bb4cf1856#L26L367\nEven at that commit, JDatabaseQuery doesn't support lock and for some reason it's having a database object fed into it as well which seems a bit strange. Given almost every other occurrence in the file has been removed I think swapping this back to $this->_unlock() is probably the correct change.\n. As an aside, I like this change. I've been burnt a few times by calling the wrong method somewhere and getting a null back when I expected it to be something else.\n. Apart from a bad side effect of the installer not really caring what the file name you've used is, I'm not sure we've ever documented support for a 'manifest.xml' file.\n. Wouldn't forcing naming then break your ability to do what you're aiming to achieve?\n. Well if you updated the extension adapter copying the manifest file and forcing a particular file name at the destination and then just added checks for files at a minimum depth (so as to not break extensions with sub-extensions in their package) you could just looked at the version attribute for the latest of the file then use that version of the file and the adapter would put the correct file in the correct place.\nAs an aside, this particular package is in the process of migrating to the CMS.\n. There is more than just the installer that looks for files in certain locations.\n. Won't this cause a strict notice when the if fails because it triggers an implicit creation of an object?\n. I know the $registeredurlparams object will be created automatically but that will trigger a \"Strict Standards: Creating default object from empty value\" warning. If the point is to remove a notice then putting a new one in seems counterproductive.\n. Domains don't need at least one country code, the reality is that you can send mail with just a hostname in a properly configured system. In fact I've been annoyed in the past by bad assumptions around what a real domain constitutes, particularly when email addresses in the .local domain are rejected since they are valid on my network.\nWhy this has been put together is because you've made both commits on the same branch. You need to essentially create one branch per pull request. GitHub will automatically pick up new commits to the branch and include it in the pull request. Untangling branches can become complicated very quickly though.\n. @Kubik-Rubik Can you do an interactive rebase and remove the email domain commit and fix up/squash the other commits into one. You'll need to force push a change back to your repository to get this pull request updated. Then we can get this included.\nYou can read about squashing commits here:\nhttp://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits\n. @Kubik-Rubik When you update this to remove the email domain commit and update the branch, please comment back here and we'll re-open the pull request. I'm going to close the pull request for now but that doesn't mean it's rejected but because you need to make some more changes before we can progress.\n. Sweet! Nice addition!\n. First of all this pull request can't be merged so needs to be rebased.\nSecond can you need to rebase this and squash some commits. It doesn't add value to have more than 10 commits in a row that are \"codesniff cleanup\".\nWhy is this changing GitHub related functionality for a MediaWiki change? There seems to be a lot of changes in here unrelated to MediaWiki.\n. This might be helpful:\nhttp://git-scm.com/book/en/Git-Tools-Rewriting-History\nI suggest if you are new creating a new copy of the branch you're working on and trying the rebase there first or alternatively create a new copy of the branch and push it up to GitHub then rebase this branch. That way you still have all of your original commits in the order they were created safely.\n. Why is every single line of the file marked as deleted and then re-added?\n. It might have swapped to DOS line endings and they need to be UNIX. Make sure you've got the right endings and then rebase the branch so the two commits don't wipe out the history for the file.\n. Sorry, I should have been clearer. With the rebase can you squash the two commits together to form one commit? Otherwise the history of the file becomes \"Fixing line endings\" which doesn't help people trying to workout why something is done a particular way into the future. \nRef: http://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits\n(Likely you want to use the fixup option because it will discard the second commits message rather than attempt to preserve it if you version of Git supports this)\n. Looks good, thanks!\n. I think the view was that it should be a JDatabaseDriver feature not a part of the query object. getTableList is the correct function name, I'm guessing the wiki used a different start point where that function did exist but wasn't final 11.1 version.\nRef: https://github.com/joomla/joomla-platform/blob/11.1/libraries/joomla/database/database.php#L650\n. Open up a pull request and fix it :)\n. So there are these documents:\nhttp://docs.joomla.org/Working_with_git_and_github\nhttp://docs.joomla.org/Working_with_git_and_github/My_first_pull_request\nIn this particular case I think going to https://github.com/joomla/joomla-platform/ and click on \"Fork\" to create a personal fork. Then navigate to the file and click \"edit\" on it (make sure you're in the staging branch). You should be able to edit the file and have GitHub create a commit for you. Then you should be able to click on the \"Pull Request\" button and it'll give you a form to create a pull request. If you already have a fork you may need to update it which is going to require some more effort however if you are getting started this is probably the quickest way.\nSome more notes here:\nhttps://help.github.com/articles/using-pull-requests\n. Agree, put in a pull request to remove it.\n. I've pondered for a while if in fact the better behaviour instead of the die is to just return false. What triggered this for me were deadlocks in Oracle which resulted in it terminating my connection abnormally I believe. Throwing an exception within there while we're trying to work it out results instead in an infinite loop but I haven't had it regularly recur to test what returning false would cause because if another exception is triggered we end up in an infinite loop again. Are you regularly hitting this die?\n. Well what it's trying to do is run the query to validate that the error it received was that it was disconnected versus some other form of exception that it can reasonably recover from and continue sending queries to the database engine.\n. 3.0.1 was primarily security and critical bug fixes around update work that needed to be done. It might get picked up in a later release if someone merges platform back down to the CMS after it gets fixed in the platform or alternatively you can push to get it fixed in the CMS. TBQH it sounds more like a CMS issue more than a platform issue.\n. If you click on the field it is highlighted red. Near as I can the field is tagged with the class \"invalid\" as is the label. The label also has an aria-linvalid true attribute as well. It would appear something is validating the field.\nIt is up to the template to decide how it wishes to render invalid fields. In this case the red highlighting doesn't occur unless you've clicked on the field. This is likely a bug in the CSS for the template that needs to be looked at so that it continues to highlight invalid fields that are not active. The template isn't something that the platform distributes but is in this case the CMS.\nSo as I noted before, I do not feel this is not a platform bug but a CMS bug. You're welcome to submit a pull request here to change that but we'll likely defer to the CMS folk as they're the ones most likely to be impacted by the change. However as I noted it doesn't mean it will immediately be available until the CMS chooses to pick it up from the Platform project.\nFinally the Platform doesn't decide what goes in the CMS releases. The CMS is a downstream consumer of the Platform and as such we don't directly control what does or doesn't go into it's releases. While the CMS is certainly a source of fixes and improvements for the Platform, when it updates it's copy is on it's terms not ours. As I noted earlier the 3.0.1 release was a security release which the Joomla CMS typically stays away from making big changes in so that people aren't afraid that their site will be broken. This means only critical fixes and the security fixes usually go in. This is why something like this, apart from not even being fixed in the platform or a registered bug for the CMS, wasn't included or would be likely to be included.\n. Looks like the unit tests have errors:\nhttp://developer.joomla.org/pulls/pulls/1547.html\n. I'd suggest that blindly accepting arguments and jamming them into your model then trying to persist them is a bad pattern to follow. Thus further encouraging bad practice is really not something I can get behind. Having to explicitly specify in your controller what you want to pull out of the untrusted request source and being very clear about the filtering you want to impose is something that the platform is in general trying to move towards. This is similar to the direction already taken with the new routers where the path is to be a bit more explicit about what is routed where.\n. 1) :: wasn't used in the branch name, it's used in the pull title and is the correct description of the item as it's a static method of the given class. The branch name is jarrayhelper_invert.\n2) Being consistent here seems reasonable, I'll update that to check if it's a string or int. I was mainly trying to avoid objects or other arrays as array keys more than anything which triggers errors. The truncation behaviour is PHP's conversion to valid array types.\n3) Yes, it's consistent there. I had considered throwing an exception or something like that but opted instead to just let it go through.\n. Can you fix the style issues with this pull request? To verify you'll need to install PHPCS[1] and get the Joomla code standard[2].\nI've included a quick copy of the errors below:\n\nConcat operator must be followed by one space.\n .../libraries/joomla/installer/adapters/component.php : 1274\nConcat operator must be preceeded by one space.\n .../libraries/joomla/installer/adapters/component.php : 1274\nConcat operator must be followed by one space.\n .../libraries/joomla/installer/adapters/component.php : 1276\nConcat operator must be preceeded by one space.\n .../libraries/joomla/installer/adapters/component.php : 1276\nConcat operator must be followed by one space.\n .../libraries/joomla/installer/adapters/component.php : 1276\nConcat operator must be preceeded by one space.\n .../libraries/joomla/installer/adapters/component.php : 1276\nConcat operator must be followed by one space.\n .../libraries/joomla/installer/adapters/component.php : 1277\nConcat operator must be preceeded by one space.\n .../libraries/joomla/installer/adapters/component.php : 1277\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if(...) ...{...} ...else \".\n .../libraries/joomla/installer/adapters/component.php : 1284\nConcat operator must be followed by one space.\n .../libraries/joomla/installer/adapters/component.php : 1292\nConcat operator must be preceeded by one space.\n .../libraries/joomla/installer/adapters/component.php : 1292\nCast statements must be followed by a single space; expected \"(int) $menu_id\" but found \"(int)$menu_id\".\n .../libraries/joomla/installer/adapters/component.php : 1292\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...) ...{...}\\n...else\\n\".\n .../libraries/joomla/installer/adapters/component.php : 1299\n\n[1] http://pear.php.net/package/PHP_CodeSniffer/\n[2] https://github.com/joomla/coding-standards\n. This has some style errors:\n\nExpected \"if (...)\\n...{...}\\n...else\\n\"; found \"if (...)\\n...{...}\\n...else \".\n .../libraries/joomla/installer/helper.php : 49\nUsage of ELSE IF is not allowed; use ELSEIF instead.\n .../libraries/joomla/installer/helper.php : 53\n\n. Ahh yes, I see it now:\nhttps://github.com/joomla/joomla-platform/commit/77ccd48a5941c11b30c2ad176821358f99626bf7\nFun\n. Perhaps, perhaps not! So this with a base of bd396400e5cddfb5170e2c41f64b1827c63417f4 passed without any CS errors. I've shifted on forwards to 7b23e48756efa58a3edf2def15d8615b678b737f to see if this causes an issues with it.\n. one too many 1024's\n. So I dislike adding code that relies upon the internal structure of PHPMailer when we could add a simple $autoReplyTo = false on roughly line 457 and then add an else statement with $autoReplyTo = true. Alternatively we can flip the boolean here and put the $autoReplyTo = false inside the existing two if clauses.\n. Fair enough, merged.\n. Merged. Was trying to work out why this wasn't triggering warnings but it's the tests directory.\n. Why not default it to index.php instead of requiring each implementation to define a default? Theme path I can understand as being needed to be configured, but index.php is a pretty safe bet for a file name.\n. It looks like it's expecting an array, what is being passed to it that isn't an array?\n. Why not change getInstance to default to an empty array? Doesn't appear to have a need to be a null.\n. I think if something is sending it a null then the original code is actually broken and we've just uncovered an incorrect calling. Permitting the incorrect use is the wrong step to make. Fortunately we're using isset which will return false for null objects anyway regardless of if the item doesn't exist or if it does exist and is null (e.g. $myArray = array(null); var_dump(isset($myArray[0])); returns a false). It would however return an error if perhaps an object was passed in or some other type. So I feel that the type hint should be fixed and incorrect calling cases need to be correct.\n. This is the commit from the tag, this can't be updated.\n. You realise that if you push up to the same branch (even with a rebase) the original pull request will be updated. You don't need to keep opening new pull requests.\n. In that particular case you need to force push to ignore the losing commits warning (git push -f repo branch [note: repo branch not required but when I'm force pushing stuff I'd like to be explicit where it's going]). Alternatively deleting and pushing again is still a valid solution and I think I've had GitHub pick up the branch again but I might be wrong. Rebasing triggers Git's internal safety mechanisms to kick into action to make sure you really meant to essentially delete commits and wipe them out - which while annoying is usually a good thing.\n. Why wouldn't we improve support for parameter binding? What does this add over sprintf?\n. Can you edit the pull request description to include the second more extensive example so that we have that for the automatic changelog and then I'm merge this pull request (not sure if GitHub will let you change it after the fact). Once you've updated, put in a comment so that I get an email notification to merge.\n. Thanks, merged :)\n. It'll be in Platform 12.3's release which will likely be picked up with the Joomla CMS 3.1 release. You can ship it and load it yourself with 2.5/3.0 and just give it another name so that it doesn't conflict.\n. I can. Can you?\n. Looks like Jools took pity on you\n. Jools won't reopen the issue for me though.\n. There is a plan, I don't think anyone has any code yet.\n. You should probably fix the class name of the inspector as well if we're going to be renaming things to match.\n. As pointed out by the reporter, this is the expected behaviour. Closing issue.\n. Jenkins doesn't reopen the pull request, there is a Joomla Platform based app that responds to GitHub's hook API.\n. Oscar reminds me of a grouch that lives in a trash can. Molesley has always struck me as a good name along the lines of Jenkins or Hudson.\n. The problem is that the elseif is wrong. Change the else if to elseif and most of those warnings will be fixed.\n. Dude, this diff is spacing me out!\n. I'm not sure I like the concept of the database driver being deceptive about what it's doing. At this point you're putting magic into the driver that the application developer can't avoid. The situation now will be when I call commit is it really committed? There is no way of knowing as a caller of the application if it's actually done what you wanted it to do or if it's silently ignored and the data wasn't actually committed. In a sense the database driver will lie to you that the commit ever happened which means you have bad faith that the data committed when what you thought was committed could be rolled back on the next statement.\n. I'd support putting in a flag for transactionStart and transactionCommit to opt-in to supporting being in a nested transaction but I dislike the idea of me saying commit this and having something else decide it thinks it knows better. We'd need to figure out some nuance around what pre-conditions are valid and what happens if someone starts a transaction inside another transaction (nested or otherwise) and how that all works.\nMore broadly consider if you come from another framework and you see our database abstraction layer. You may expect commit to behave like it does normally on every other platform. In MySQL, when you attempt to start a transaction more than once it lets you do that. However when you send commit it commits everything. I don't see a good reason to second guess the behaviour here of MySQL, which is our primary database engine. Oracle is by default always in a transaction and you either commit or rollback. Obviously Oracle supports savepoints which allow you to control how far you rollback but when you do a commit, it's committed. I don't have enough MSSQL experience to comment there but I'd expect it to behave similarly.\nI don't think that by default implementing a behaviour that is completely distinct from the standard expected behaviour is a good idea. It leads to mistakes. Right now for sure we have a potential that something is committed that shouldn't be but this is the expected behaviour for most of these systems. As you point out yourself, databases don't have the concept of nested transactions. I don't think it is our position in the database layer to \"transparently\" support a concept that is not the norm or even a major issue. It isn't a bug that when you do a commit that it commits everything. It might not be intentional but that is the expected behaviour of all database engines I've encountered.\n. I'm not aware of a database that supports nested tranactions, save points support rolling back part of a transaction but don't permit partial committing of the last segment. I don't have any objections to improving the API to add support for save points as an explicit API call.\n. Actually what I want is a database abstraction API that mirrors what the underlying system is doing, not something that through some sort of magic (imperceptible to the external user) corrupts the \"commit\" statement departing from decades of established standards (ANSI) and implementation (Oracle, MSSQL, Sybase, MySQL) to create a concept that doesn't exist and isn't really ideal for this layer.\nWhat I want is when I say commit, the data hits the database and is committed. That way I can handle the situation where the commit fails for what ever reason and recover and not have my database API lie about what it's doing so that the code then moves onto the point where I can't reasonably recover the situation. Perhaps I'm old fashioned about my data integrity.\nWhat I've stated I'm happy to compromise on is a flag that says that it's ok for the transaction not to actually commit and state that I don't care that my data doesn't get committed (at which point I wonder why we're using a transaction here). I'm happy to even say that someone can start a transaction without the flag but as soon as someone implements the flag for a nested transaction, if within that someone attempts to start a transaction that doesn't have the nested flag that this should raise some form of exception or error case (again, expected behaviour versus magic behaviour). I've also stated I'm supportive of adding support for adding save points for those who wish to use them.\nThe simple reality transactions aren't nested and work on a different level. If you feel transactions should work differently then you are most welcome to take that up with the folks ratifying the ANSI SQL standard and the various database vendors. Until such time as that changes, I feel the database abstraction layer needs to reflect the reality of the situation not what you feel should be the situation.\n. I've made comments about the since tag changing, not sure why you're changing them...were those changes not in 12.1?\nThis pull request isn't mergeable at the moment, can you rebase it to get it mergeable, update the pull request description to match the new behaviour and we'll get this merged.\nOnce you're ready drop a note saying you want to reopen the pull request and we'll have a look again.\n. If you're ready to reopen it, you should be able to say \"reopen\" in a comment and it should reopen the pull request. I did see Ian manually open one the other day so I'm partially curious to check if it's still working properly.\n. It's coded for reopen and re-open. It doesn't look like you've added any extra commits. Have you made changes and pushed back to the same branch?\n. Let me rephrase that, GitHub is marking that it can now be merged however the since tags are still changing to 12.2 in some places. Did you go through and validate all of the since tag changes are accurate?\n. Perhaps GitHub was lagged, it was showing in the diff still when I made the comment but it looks all good now. \n. Can you fix up these unit test failures? Should have double checked again before I merged. \nhttp://developer.joomla.org/pulls/pulls/1640.html\n. You will need a new pull request. Build.j.org didn't report any problem though. Do you have a fix?\n. Also no idea when we got the nosql driver either.\n. I was working on a MongoDB driver the other week.\n. It was updated a week or so ago to enforce blank lines before statements like if, return, etc. similar to the one for comments\n. On the extra commits make sure that you fetch everything and try to do a rebasing onto staging and see if that makes a difference.\n. https://github.com/joomla/joomla-platform/blob/master/libraries/joomla/html/grid.php\nThe class in that file is JHtmlGrid. Perhaps I'm missing something here.\nAs an aside, I don't think the fix for an incorrectly named class is to impose a significant performance hit on all users of the system.\n. So CMS 3.0 will be fine, CMS 2.5 needs to work out what it wants to do with the problem then.\n. If the code is fixed then there won't be any performance issues of any sort. Masking the issue of an incorrectly named or positioned class is not a solution: it's a bad workaround to bandage a mistake that needs to be rectified. Instead of masking errors, the attempt should be to fix the original problem. And if you read that thread closely you will see there are performance impacts on using include_once over include. By definition it has to have an extra check to internally validate if a file has been included versus the majority use case of this function which is that a given file hasn't been included because the class doesn't exist already. The assumption is that people have correctly located their files with appropriately named classes. If this isn't the case then it should be fixed and not masked.\nThis is the platform project and this particular issue has been fixed in the platform. It is up to the CMS to fix the issue in 2.5 however the place for discussing this is not here. Please move your discussion to the CMS project either the mailing list or issue tracker.\n. This still isn't mergeable. Also you don't need to create a new pull request if you push up new or rebased commits back to the same branch, it'll update the pull request once it's reopened.\n. A few things:\n1) Make sure you have a remote for the platform project (git remote add joomla git://github.com/joomla/joomla-platform.git)\n2) Make sure you do a git fetch --all to get all of the changes\n3) When you do a rebase use the remote branch not your local branch: git rebase joomla/master\nThe staging or master branch in your fork won't automatically update, you have to manually update it. You need to checkout the branch and update it from the main platform branch.\nI personally prefer to checkout new branches with the following: git checkout -b [newbranchname] joomla/master\nDoing this (with a git fetch --all prior) ensures that I'm always up to date with the platform when creating a new branch. \nIf you look at your commit in GitHub, you get this page:\nhttps://github.com/florianv/joomla-platform/commit/e05dba591bf56464f7896421ef4ed96206f5ddf0\nIf you click on the commit ID next to the text \"parent\" you land on the following page:\nhttps://github.com/florianv/joomla-platform/commit/6d6c3310cba3c71270cb3b182a6089ee27b86d78\nWhich is over a month old and appears to be the head of your own staging brach:\nhttps://github.com/florianv/joomla-platform\n. Yeah, this is now mergeable.\n. This particular line has been in ping pong. Would you mind updating the pull request to do a few things:\n1) Check if it's numeric and use the current behaviour. I'd also like to flag this with a deprecated warning with the standard JLog notice that we use elsewhere in the code base. Obviously someone is doing something wrong and I'm sick of this stuff being repeatedly broken.\n2) Put in a comment and include a link to here: http://docs.joomla.org/Design_of_JUpdate\n3) Keep the change you've got in for if it isn't numeric in an else statement.\n. Thanks! Merged :)\n. 1) this pull request isn't merge able\n2) have you actually tested this all still works?\n. I can tell you the change to count modules will break the samples, the others in not sure about on an iphone but that change to countmodules will break. \n. Again I houldnt do this on my phone but its simple:\nWhat happens when $words = array('1', '+', '1'); for the original line and the new line?\n. You're assuming the query is an object. What happens if getListQuery returns a string?\nI could have sworn that this was changed somewhere already.\n. I mean I thought I saw someone propose and add this feature where it checked if it was an instance of JDatabaseQuery and then modified the query.\nSee:\nhttps://github.com/joomla/joomla-platform/blob/master/libraries/legacy/model/legacy.php#L318\n. 100% more tests than the leading brand pull request? Not sure I agree with your math :p\n. So why not handle the clean up in the loadFile method?\n. Yes, I was suggesting that if the handles already exists that it should free'd at that point and also the destruct. I think the crop method might also require a destroy as well when it's replacing the handle. I do feel that we should automatically take care of the management of the internal resource as requiring an external destroy method seems a bit of a kludge.\n. Where you have added the destroy in crop and resize I don't think is correct. It should be in the else clause of the if statement below because if a new JImage is created then the current JImage is still valid and we shouldn't destroy it's internal image data. Only when we replace $this->handle with a new handle should we attempt to free the data for both crop and resize. However the loadFile change I don't have a problem with because it's an intentionally destructive operation so if for some reason it fails midway, I don't expect to be able to re-use what was in the pre-existing handle. Does that make sense?\n. Typically that was done when the method is returning an object in PHP4 times where you had to explicitly pass objects by reference. In those cases a return new didn't work and would generate a PHP warning/notice/error. If this is still necessary here is beyond my immediate knowledge but typically when you see that it is because it was necessary with PHP4 or if the function is still marked as returning a reference. \n. Thanks for taking care of this.\n. Can you update to trim the alias as well?\n. Fair enough :)\n. Presumably you could shift this up into the is_null($id) block since you're only after the user that is in the session which is only valid when the user ID is null.\n. Try a rebase on the current staging and see if that fixes the UT issue.\nI was thinking that you could just put the code in the if (is_null($id)) block at the top of the function[1] which is where it by default pulls it out of the session and you'd only need to check there however looking a little closer I notice that if you specify the same ID as the currently logged in user it pulls it from the session directly so you can't really put it in the first block.\nThat all said, the change somewhat makes useless pulling the user out of the session. The idea there I'm sure was that the session was already loaded and the object would already be available without having to do an extra call to the database to load the user again. With this in place, we're always going to be doing a request to the database to load the user so it rather much defeats the purpose of storing the entire user object in the session in the first place when you're going to be always loading it from the database anyway.\n[1] https://github.com/elinw/joomla-platform/blob/1456babc48adcbeb4580bb984418dc38a5f5c554/libraries/joomla/factory.php#L217\n. While I'm thinking of it, this will add a query to all requests with logged in users even though the reality is the majority of requests (I'd even consider 99% of the requests) aren't actually going to turn up anything different.\n. One thought I just had was to add some sort of flag in the session table to mark the session as stale. This could easily be set with a simple query when a user record is updated by com_user and then the user object reloaded in its own session and the flag cleared. It would require a database change to implement but would be reasonably clean. There would still be a race condition when a user account is updated quickly in succession but that would be better than no updates at all. \n. This still introduces a race condition as well as a whole heap of code I'd need to look over a lot closer which seems overkill to solve the particular problem.\n. I think you're forgetting this is how we used to do things before we changed to using the autoloader to start shifting towards. JAuthentication in the current tree still follows this convention:\nhttps://github.com/joomla/joomla-platform/blob/master/libraries/joomla/user/authentication.php\nYou would be doing a jimport('joomla.user.authentication') to get to the file loaded properly. This is before the camel case autoloader support was added and dates back to 1.5 era. For anything since then you should be using the autoloader and not using jimport (remember jimport is just short hand for JLoader::import). Look back to an older copy of Joomla and you will see this is working as intended.\n. Once we're on autoloading then this function becomes deprecated and isn't necessary any more. We may not be on those older versions, but the function is behaving as expected for those existing classes that aren't following the autoloader. The JHtml stuff was never run through jimport (it loaded things itself) and the JImage/JGitHub stuff likely is new enough to have always used the autoloader.\nSo not a bug but expected behaviour.\n. Then make it autoloadLanguage which is slightly more descriptive for the property.\n. This pull request cannot be automatically merged, looks like it'll need an update.\n. I think GitHub actually has the smarts to work out that the original one is merged but I've merged it.\n. As an aside, there appears to have been issues with a recent pull request:\nhttp://build.joomla.org/job/platform/1186/\n. Perhaps explains how the optimisation works. It is curious that the pull tester didn't pick it up but Jenkins certainly did.\n. The bug fix should be in the same request as the pull request as the test proving the bug fix works. Same branch, same pull request and it gets all merged at the same time.\n. GitHub will update an open pull request automatically with new commits made to a branch. Just merge this branch into  your earlier branch that you used to make that pull request and then push it. GitHub will automatically detect the change and update the original pull request.\n. Yes you can close the other one and edit this one to update the title\n. Can you double check the indentation is correct and that you're using tabs? It looks like the indentation is different between the existing lines of code and the added lines of code.\n. Looks like Jenkins is reporting an issue with the unit test:\nhttp://developer.joomla.org/pulls/pulls/1743.html\nIt's probably choking on the colon character which I don't recall as being a word character (I think it's alphanumeric and underscores).\nWe're also racking up the commits, it'd be great once we get the unit tests all sorted that it was all squashed back into one commit:\nhttp://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits\n. The reality is the password length doesn't matter, it'll get hashed and stored regardless. Once upon a time I'm sure it mattered in the situation where the password wasn't hashed and perhaps there was an overflow bug in PHP with the MD5 functions at some point (though unlikely since it's used for larger files as well) but there isn't a way the end user can make the password longer than the length it is now because it gets hashed inside bind.\n. Can you squash these commits into one? You'll need to force push back up to your repo (git push -f ...) after the rebase:\nhttp://git-scm.com/book/en/Git-Tools-Rewriting-History#Squashing-Commits\n. Well I think you've end to end done everything short of making a new branch so if you can remember it all you're set. In future what I suggest you do is start with a new branch.\nI wrote this up, let me know if it's useful:\nhttp://docs.joomla.org/Git_branching_quickstart\n. Yeah, maybe removing the TODO is a good idea :) another pull request? :+1: \n. I think this should be called CONTRIBUTING.md instead:\nhttps://github.com/blog/1184-contributing-guidelines\nAs it stands right now, I don't think it's being used. I went to create a new pull request and didn't see the notification.\n. Strange, maybe it figures I should know how to contribute. I can't get it to turn up for a pull request from my own repo but in both of those links it appears.\n. I don't see why Windows should cause any problems, we have plenty of people with Windows. Most of the tools install via PEAR and presuming you can get PEAR setup properly on Windows, you should be able to install almost everything else you need.\nLooks like there is a unit test error, you will likely need to add that table definition to the tests/schema/ddl.sql file in the repository since it doesn't appear to be there right now:\nhttp://developer.joomla.org/pulls/pulls/1745.html\n. The standard tests run against SQLite which has a slightly different syntax but is mostly compatible.\n. 38 other failures seems strange, what are those failures?\n. Try wrapping a realpath around the DIR portion. If that fixes things it might be worth another pull request to get that sorted for Windows testers. Seems strange that you aren't getting the error the pull tester is getting however, are you sure there aren't any uncommitted changes locally?\n. Ok, so you haven't changed the ddl.sql file then. Strange!\nWhat I was suggesting is this:\n$this->assertEquals(realpath(__DIR__ . '/layouts2/olivia.php'), $this->_instance->getPath('olivia'));\n. If you wrap code in triple back ticks, it'll flip the code highlighter on\n. Sorry, I should have been clearer. When making a comment if you wrap code in three back ticks (`) on a single line followed by \"php\" and then put the code you want to add then later close it again with three back ticks (php isn't required here), GitHub will automatically style the code as PHP. If you don't put the PHP in, it'll do a generic formatted text block but if you edit your comment above you should be able to see what I mean. Click on the \"Comments are parsed with GitHub Flavored Markdown\" link above the comment box for more details.\n. Looking at the pull tester, there appear to be some minor check style issues:\nhttp://developer.joomla.org/pulls/pulls/1746.html\nThree refer to the empty line before statement stuff that was added, one is to use an incremental operator and one is a minor docblock problem where it looks like there was a longer type that was replaced with a shorter one but the spacing wasn't removed to reduce it back to two spaces.\nIf there aren't any other objections and once you've fixed up the minor CS stuff, I think it's good to go.\n. It's still showing an error on line 120 of mapper.php suggesting to use the incremental operator.\n. Looks like you're trying to run all of the database tests and they're failing because your system isn't configured to run the database tests. I didn't think they ran automatically however just copy the phpunit.xml.dist file (or similar) to phpunit.xml and disable the database driver tests.\n. The pull tester thinks that it's fine if that's any consolation:\nhttp://developer.joomla.org/pulls/pulls/1748.html\n. The pull tester runs on Linux and appears to have run 15 minutes ago and was happy with things. I guess we're good to go with some updates that I've noted. Minor style things so that we're in a reasonable place.\n. The check style standard for comments says that comments should start with a capital and a space. You've got //replace which should be replaced with // Replace is all I mean.\n. It's not showing up on the pull tester because we're not testing the tests directory yet for that stuff however there is an effort to clean everything up so we can do it moving forwards. \n. Looks good to me, merged.\n. Can you elaborate a little more on this issue?\n. Sure, but why does this fix the problem? Is it just that the menu isn't loaded or that something is missing? Is it a check while it's being created that isn't initialised properly? I'd suggest defaulting the property in the table class in general instead of setting it in the constructor as it allows the children to override it easier and it isn't dependent upon any other parameters.\nI don't see why this is being quoted as a string when it should be treated as an integer value and that should solve the problem. More importantly I'm worried that something isn't binding data appropriately somewhere.\n29685: This is probably a field set incorrectly, I'd suggest that it should update the schema instead. A default value might solve the problem but likely the field should probably be reset to have a default value of an empty string.\n29678: I'd suggest much the same as the above.\n29680: Sounds like someone is quoting integers again instead of converting them to an integer.\n. I disagree with enforcing that you have to include all them. I can think of a few cases where I might not require the other two parameters:\n- If I'm dealing with squares and I know I'm always dealing with squares then one of the dimensions is redundant. Digital Blasphemy also only include a single number to identify their various image zips so it isn't an unlikely case.\n- To the extreme, the thumbnail directory may be a local specific to an individual image or path. Consider converting an avatar for a user into multiple formats and sticking that in a directory matching the required sizes. This was something that occurred at eBay for the DataHub where the source file was ignored entirely and thrown away once the thumbnails were generated (which were only files in a directory)\nI feel it would be reasonable to at least enforce either the width or the height is required. You could scan the array to check that the selected on is unique though that's bordering a bit much. That does rule out a case where the user just wants to quickly resize and output a single thumb as well as the original though I'm not sure if that is a use case we care about - in which case requiring any of them at all is unnecessary. Fundamentally I feel if the user wants to instruct the system to overwrite the same file more than once then this isn't something that we necessarily need to protect against.\n. Why not on line 697 just default it to zero to ensure it is always set and if there is an asset ID in the object then it will be updated but it is always defined. Perhaps it is a habit I have left over from languages where if you define something in a block that it isn't available externally but I prefer this and it is only an extra line to add. Perhaps I am missing a nuance here but would that solve the problem as well?\n. Six commits for six changes in the same file is a bit much, do you mind rebasing?\n. First of all some times you want to test without necessarily having the database tests run. I'd err on marking it as skipped. The other issue is what happens when you shift to Oracle/MSSQL/sqlite3 to do testing? The test should at least check that the driver in the test config is MySQL before continuing.\n. what about using an array here instead and checking for if its in the array?\n. This comment doesn't make sense for a public constructor...\n. Isn't this technically against our coding style/standards?\n. Why the use of the error suppression operator here on these fields?\n. why the double bracketing?\n. why the double bracketing?\n. why the double bracketing?\n. why the double bracketing?\n. copy and paste error it feels like by now, however why the double bracketing?\n. why the double bracketing?\n. moar! why the double bracketing?\n. So why not quickly check it and set it to null or zero? Using the error suppression operator here will cause an avoidable performance hit.\n. no that was it, I thought we had a rule against it but i might be thinking of the short hand if stuff instead\n. More important, moving them would break any upgraded site which already has these files which would mean adding extra code to check where they are. Essentially packages, and to a lesser extent libraries and files, don't really have a main extension root like components, modules, templates, plugins and languages do have significant files and it makes more sense to co-locate their manifest files with them, as has traditionally been the case.\nAnd yes, it should have been updated.\n. No because then you could be lead into a situation where there are duplicated class names in say a package install which would cause a PHP fatal error.\n. what is the reason to change this behaviour?\n. I just realised something, does this mean you can't have folders with periods in them? Like hidden folders?\n. Does this potentially introduce a memory fault for large update files? Instead of chunking the updates, it's all read into memory at once.\n. I'd suggest that this isn't a function of the updater but a function of the JHttp package instead and it'd be better to have a JHttpFactory class instead which would construct things and determine this information. Particularly given it's also being used in the installer package as well, instead of putting this into the updater, if you want to get a JHttp, then you should ask the JHttp package - not JUpdater.\nAs an aside I'd also change it from a default of a single item to an array. Then you go through the array in order of preference to select the adapter. If you only have one preference this still works as you have it now however it also gives you the ability to specify multiple. Additionally if you have transports defined elsewhere in the system but registered with JLoader, having an array could permit you to do a class_exists check and see if they exist as well and then testing them that way which makes this thing flexible without requiring people to put transports in the library.\n. I'd probably err with Christophe and agree the double parenthesis on simple operators like this is a tad excessive.\n. Given that the URI spec limits the use of colons in path parts, I'd suggest supporting them shouldn't be a high priority or even be a requirement.\n. If $length == 1 then surely you can just do $text == '<' without the substr?\n. Shouldn't we use something that is UTF-8 safe here? Perhaps a preg_replace with the u modifier to ensure we don't clobber parts of multibyte characters?\n. Can you add a @since 12.2\n. Instead of using a curl specific option, why not use a generic name like the stream options (follow_location or max_redirects) and then at the transport level map them onto their respective options. This will automatically work for stream as it passes in the HTTP options straight through and cURL will require some level of custom handling either.\nSafe mode is gone in PHP 5.4 as well.\n. Why not an && here?\n. As I noted earlier instead of using a curl specific option, why not use a generic name like the stream options (follow_location or max_redirects) and then at the transport level map them onto their respective options. This will automatically work for stream as it passes in the HTTP options straight through and cURL will require some level of custom handling either. Otherwise you end up going set(curl.followLocation, true), set(follow_location, true), etc for each transport and that seems a tad silly because it reduces the effectiveness of swapping in and out different transports.\n. Can you remove the white space on this line?\n. p-l-e-a-s-e\n. If we got headers and an empty body, I'm not sure this is necessarily an exception.\n. Went and looked at the spec, a HEAD request by definition won't return a body:\n\nThe HEAD method is identical to GET except that the server MUST NOT return a message-body in the response.\n\nSo we really shouldn't return an exception here.\n. You should put spaces between this like we would normally have in properly formatted code.\n. Stupid question, why is $glue double quoted instead of just being directly used?\n. Any reason you're changing the since tag here?\n. Same question as above, why is the since tag changing?\n. Ditto on since tag change.\n. More since tag changes?\n. More since tag changes?\n. More since tag changes?\n. Reminder: add php format\n. This should be // Replace to fit the check style standard.\n. See the earlier comment about this.\n. See earlier comment about commenting style.\n. Again.\n. One more case.\n. One more.\n. One more case to fix up, just // Remove should do \n. This will probably cause a check style problem just looking at it.\n. ",
    "nikosdion": "Oops! I hadn't noticed the branch drop-down. I submitted the patch to the correct branch now :)\n. It takes a while to get the hang of it :D\n. Hi Andrew,\nYes, I can do that - but I'm not sure how? Should I send a new pull request with the changelog edit?\n. Thank you! I updated the branch of my pull request, but that happened after Louis merged it and closed the pull request. I am not sure if a notification is sent out in this case or if merging is possible. If it doesn't, please let me know and I'll send a new pull request.\n. Hi Andrew! In theory, if I didn't do an Git-n00b mistake, my branch should be updated with everything from the staging branch and you should be able to perform the merge.\n. Yeah, I saw what happened when I pulled the branch back to my working copy. Another change was committed on the same place of the change log and conflicted with my own. Git makes resolving merge conflicts very easy, though. Too easy, in fact! So much better than SVN. If only the CMS would go GitHub, what a joy that would be :)\n. For more information on a real-world case, please take a look at this support thread on my forum: https://www.akeebabackup.com/support/forum/akeeba-backup-support/admin-cant-access-to-backend-after-restore-in-other-directory/54376.html#p54376 The user gave me FTP access, so I was able to track the problem on his server. This problem is practical. I have come across numerous shared hosts running in chroot jails over the last five years and, right now, when the users of those hosts try to install Joomla! they will believe that newer versions of Joomla! are broken (AFAIK, Joomla! 1.5 did work on those hosts, albeit very quirky).\n. Oops! Writing code after midnight directly on GitHub doesn't help making sure it's correct. I should actually have typed:\nif( (JPATH_ROOT != '') && strpos($path, JPath::clean(JPATH_ROOT)) !== 0) \nThe problem is not whether JPATH_ROOT is defined or not (it is defined), but if it equals to an empty string.\n\nNicholas K. Dionysopoulos\nLead Developer, AkeebaBackup.com\nWeb: http://www.AkeebaBackup.com\nBlog: http://www.dionysopoulos.me/blog\nOn Saturday, 3 December 2011 at 10:49, Andrew Eddie wrote:\n\nsigh I need to clean my glasses. Can my logic is correct with this change:\nif (constant('JPATH_ROOT') && strpos($path, JPath::clean(JPATH_ROOT)) !== 0)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/584#issuecomment-2999688\n. Made pull request #594 to fix this. Thanks!\n. If it's an interface, please name it as such. With the currently proposed naming scheme you render all existing components and all existing documentation on building components useless. Please name those classes as JModelInterface, JControllerInterface and so on. Then let the CMS provide concrete JModel, JController etc classes so that we don't completely screw up backwards compatibility and everyone who has invested on writing software for the Joomla! CMS. If you don't I can safely predict what will happen (it's not fear mongering, I have been talking to other developers about that possibility): no software will be ported to Joomla! 3.0 and 3.1, because us 3PDs have to support the current LTS version, and we will all start porting our software when 3.5 is out. It will take us some months to do that, in which timeframe 2.5 will go EOL. So, Joomla! users will have to stick with an EOL (and potentially insecure) version of the CMS if they want to use extensions (i.e. do anything useful), or migrate to 3.5 with minimal to no extensions (therefore nothing useful is possible). I don't believe this is a good strategy, as it will alienate our mutual user base \u2013 the vast majority of Platform users are the CMS users. It's either that, or each 3PD will have to fork into his own set of MVC classes, taking us back to the Joomla! 1.0 era where each extension worked completely different than the next.\n\nPlease reconsider the naming of your classes putting the problems it causes to existing CMS extension into perspective. Please remember that 99.99% of users out there (pretty much anyone except eBay?) will use the Joomla! Platform only because they also use the Joomla! CMS. If you screw up the CMS and its extensions, the Platform loses too. Thank you.\n. Even if it uses it in version 4.0 it will be the same. My point is not really the version number in which the Joomla! CMS will adopt the MVC changes. It's about wrecking havoc among developers because of terrible class naming. If it's an interface, tuck in the Interface suffix. I mean, we surely have JDatabaseInterface. Why should he choose to NOT add the Interface suffix to the exact set of classes which is most used?!\n. I fully agree with the implementation as Interfaces. This is why Interfaces were introduced to OOP and I bet you know all about that much better than me (I've only ever been a self-taught programmer, not a software architect). My only beef is that by calling the Interface JModel we are forcing the CMS to use a different name for the concrete implementation (e.g. JModelCms) which breaks BC for no good reason. We can avoid this by simply naming the interface JModelInterface. In terms of what looks better, you'll asking the wrong guy if you ask me, as I prefer IModel (too many years of Delphi programming make you instinctively opt for the queer naming scheme I guess). But I proposed JModelInterface for two reasons: a. consistency with the JSomethingOrSomeother naming convention and b. I and J look way too similar and are way too close on the keyboard. But the important thing is, why break BC if we can easily avoid it? Why add a layer of complexity for 3PDs when it's equally simple to not do that?\nLouis, I will buy you a beer or two at JaB and talk more about it if you'd like.\n. Louis, seems like our posts crossed paths :) Herman is right, that was exactly my point. I'll try to explain it a little better this time around.\nI am thinking about the typical scenario of developing for the CMS here. Let's assume for a minute that these changes make it into Joomla! 4.0.\nDevelopers will have just released their software for Joomla! 3.5 where everything extends from JController, JModel, JView etc. For the next 1.5 years (at the very least) we'll have to support Joomla! 3.5, as it's the only production-quality version of the CMS. We can easily handle early adopters of the 4.0 and 4.1 versions by telling them that our software will only run on 3.x. This is, of course, very bad for the CMS as nobody can test it in real world conditions - you need 3PD extensions to do that. Let's forget that this is a factor. Then, 4.5 comes out. This means that we all now have to start working on our software for Joomla! 4.5. Given that MVC is not going to be the only thing changed, it will take us months to get there. And here we have a dire situation:\n- Joomla! 3.5 goes EOL and we still don't have all extensions ported. Users are stuck with an obsolete, insecure version of Joomla! (this is what is currently happening with some extensions and Joomla! 1.7, I'm not making this up)\n- Joomla! 4.5's active maintenance period (the first three months) passes without potentially major issues being caught and fixed (major as in what happened with J! 2.5.0 and the Javascript issues)\nThe way I see it, this causes a chain reaction of negativity surrounding Joomla!. Since I am, like virtually everyone else who comments here, making a living out of Joomla!, that would be a very unpleasant situation to be in.\nInstead, I propose this simple solution:\n- Name your JModel as JModelInterface\n- Have JModelBase implement JModelInterface instead of JModel\n- Let the CMS provide JModel which extends JModelBase, implementing the missing functionality which is deliberately (and correctly!) not present in JModelBase\nBy doing that, 3PDs can add \"experimental level\" Joomla! 4.x support in the same codebase which supports Joomla! 3.5. This is what happened with many extensions during the 1.5 to 1.6/1.7/2.5 transitional period. I mean, yes, I have extensions which are compatible with both Joomla! 1.5 and 2.5 using the same codebase. I don't see why this shouldn't be made possible for future versions.\nSo, the way I look at it, it's not a matter of doing a mass search and replace. It's about making us choose between supporting only an LTS, having two codebases for the same software or choosing the easy way out to the detriment of the Joomla! community. What I state is not overreacting. I've actually talked to other 3PDs and what they will be doing is chose the easy way out.\nJust for the record, I am aware that there is fourth alternative, doing something silly like:\n``` php\n<?php\nif(version_compare(JVERSION,'4.0','ge') {\nclass vendorModel extends JModelCms {};\n} else {\nclass vendorModel extends JModel {};\n}\nclass FoobarModelSomething extends vendorModel {\n// The regular code goes here\n}\n```\nThat works. I've tried it at some point when I was trying to make my code not throw strict warnings and still have it run under both Joomla! 1.5 and 2.5. The major problem with that approach is that we lose all code hinting, throwing us back to the 1998 way of writing code, as well as throw off all code checking features of our IDEs. It also adds unnecessary complexity. I am sure I can cope with it, but I'm not sure everyone else out there will be willing to do the same.\n. OK, I finally get it. The eBay Platform, oh sorry Joomla! Platform I meant, is more important than the Joomla! CMS. So, 99.99% of the platform users who only get to use the CMS can go screw themselves. I mean, it's not like there is any naming convention or standard (hint: there is NONE published at the moment) that would be violated by renaming JModel to JModelInterface. So, between screwing millions of people who use the CMS or screwing a very few people who currently use your JModel-is-an-interface approach, you choose to screw millions?! That's exactly the kind of approach that leads 3PDs to not contribute to the project and keep on complaining: you keep us too busy having to work around pointless changes, we can't afford to spend even more time contributing. So, every man for himself. The message was loud and clear. Thank you for the clarification.\n. Andrew: OK, I'll stick in pure technical terms.\nIn pure technical terms, there is no way that the CMS will not continue using the latest version of the Platform. At some point PHP 5.3 will be EOL, 5.4 will be deprecated and the next version (6.0?) will most likely introduce even bigger changes. In order to stay abreast with current versions of PHP, the CMS has no other choice but to use the latest platform. The other choice is forking the platform and maintaining it into the CMS, which would be an 180 degrees turn. So, please, don't imply that the CMS may not be using the latest Platform, downplaying the significance of Platform changes to the CMS. We all very well understand that the CMS can't technically exist without the Platform.\nNow some purely technical questions.\n1. If JModelBase implement JModel (an interface), how can the CMS provide another JModel class which extends from JModelBase?\n2. Are there plans in the works to use PHP Namespaces in the Platform and the 3.0 version of the CMS which would address that concern, enabling developers to use e.g. the JCMS namespace for the CMS libraries?\n3. I was under the impression that you said that backwards compatibility breaking without deprecation was considered a bug. Did that change at any point, or that was never really the case? The thing is,what exactly is the policy regarding backwards compatibility?\n4. For the \"how the classes should be named\" question, is the official answer \"we'll be adding interfaces with the same name as existing concrete classes\"? Since this is a matter of coding style, I'd like to see that (or whatever the convention you want to use is) written in the coding style documentation. If there is a policy, make it public. If there is no policy, create the policy and make it public. Don't startle us.\n5. Given that policy(?), should I safely expect any other random platform class I'm currently using to suddenly change name without a deprecation path? In other words, should I consider the Platform API to be in a constant Alpha stage?\nThere you go. Technical questions. Thank you in advance for your answers.\n. It's not an outburst and I don't apologise for what I said. I insist that the way this is implemented is absurd, even though the code is good.\nLouis' approach requires changing our components' classes. Do I have to say again why this is a bad idea, or the previous \"outburst\" is good enough? Also note that in that \"outburst\" I also mentioned another workaround which does work even if the interface is called JModel, but it's ugly as hell and removes all code hinting in the IDEs. Also note that I absolutely detest having to repeat myself, especially when what I've said is written 800 or so pixels above on the same web page.\nSo, I take it that using PHP Namespaces is not an option, at least not for the foreseeable future. Of course you wrote that reply in a way that the Oracle of Delphi would be envious of. It can mean that they may be used, maybe they won't, maybe you'll discuss about them, maybe you won't. A simple \"we have no idea yet\" would have been more clear, I guess.\nYes, I do understand what the libraries/cms tree is for, like I understand that the Earth is round and revolves around itself. Please remember that I am actually using that Joomla! thing, I didn't land here accidentally from outer space ;) However, if the CMS doesn't want to startle developers and have JModel & co as a concrete classes which will be used by 3PD extensions, then the CMS has to essentially fork JModel, JModelBase & co inside the lirbaries/cms tree. Do you honestly think that having the CMS fork the Platform which was originally forked by the CMS is or even remotely sounds like something sane? So I will stick to my Facebook comments (which, BTW, come from Twitter and intended to be public) about what this argument really is...\nSo, there is no official rule about the naming of interfaces and classes, you are not in PLT, the PLT does not have an answer for that, yet the decision made(?) is to keep the JModel etc naming for the Interfaces which breaks 3PD extesions. Am I the only one which sees a lack of continuity in this train of thought? Shouldn't we assume that both you and me are completely wrong unless the PLT rules on which is the best approach (maybe there's a third approach we don't see)? I never realised that this was a PLT matter until you told me, thank you about that.\nI agree that I don't closely follow the platform list, but I knew the MVC change would happen. It was being discussed for ages, it was very hard to not hear anything about it :) However, what I had gathered is that it would be a total rework of the MVC paradigm in Joomla!. Well, it is and it isn't. Surely, it's a huge change in the Platform and \u2013as I've said again\u2013 it's a step to the right direction. I have to give credit about that and I think I did over and over in my comments. However, I also see that the CMS can pretty much escape unscathed by this change if and only if the interfaces are suffixed with Interface or are at the very least not named the same as existing concrete classes of the CMS.\nFor the record, I'd like to address your last post's points:\n- I surely understand that you have no control over PHP EOL. I'm not an idiot, please stop replying to me as if I were. You are underestimating my intelligence and the intelligence of everyone reading these comments.\n- I made the point about a PHP version becoming EOL to stress one reason why the CMS can't fork off the platform and HAS to follow the platform changes. There simply isn't enough manpower in the CMS to also maintain a forked framework and do major changes like the ones required in a PHP version going EOL.\n- As a result of the above, any implication that the CMS could fork off the Platform is, how shall I put it, misleading. Ergo my remarks which upset you (I apologise about my strong use of language in those comments, I forgot that's considered very vulgar outside the Balkan area)\n- I do understand that you are not trying to \"pull a Nooku\"; if I believed that, I'd have become a Drupal developer or would have forked the CMS :D\n- I do give you guys a lot of credit. I've already said that this is going towards the right direction. I believe that I had said to Louis while at J! Day Chicago last August that the MVC should be decoupled from the CMS and this is when I first heard that an MVC rewrite was going to happen at some point. How could I ever not give you credit for doing something which I believe is good for the Platform's architecture? My only beef (and I repeat: my **_ONLY_**** beef) with this merge request is the naming of the interfaces. The current naming does not have any other merit (technical or otherwise) than being \"the way you like it\" and breaks BC in the CMS.\nYou have still not given me one good TECHNICAL argument about WHY should we name the interfaces JModel etc and break BC when we can name them JModelInterface etc and NOT break BC. In the latter case this will be possible THANKS to the libraries/cms tree WITHOUT the CMS having to fork off the entire MVC structure. Is there a TECHNICAL reason for doing that, or it's \"Just because we can\"? It's either technical, or personal, it's either a PLT decision or your decision. Please make up your mind. Which one is it and why? If it's a good technical reason, backed by the PLT I'll just shut up.\n. The way the MVC transition is being handled does not harbour the conditions for graceful deprecation of the old, concrete MVC classes. It merely drops the problem on the feet of the CMS, which has to provide its own MVC implementation (at this point it's no longer clear to me if this should happen in the legacy or the cms tree, or a new one). Given that the heart and soul of Joomla!'s API is the MVC implementation \u2013and that's the \"selling point\" of the Joomla! vs any other PHP CMS elevator pitch\u2013 this does sound like a bad idea to me. We are essentially telling people to start using a deprecated API which will most likely get removed / break hard in the not so distant future. There are no guarantees that the CMS will maintain these classes forever (and if you ask me, it shouldn't - I believe we all agree on that). When that happens, existing extensions will have to be refactored with the new classes in order to work at all. Even if that's in two years, it doesn't make it any better. It makes it worse. In two years each one of us will have even more code to refactor than today and will have to do an overnight refactor, too.\nIn practical terms, this will not / cannot happen overnight. I mean, over two months into the Joomla! 2.5 release cycle, I still see clients running Joomla! 1.6 and 1.7 on live sites (despite being vulnerable and end of life) because some of the extensions they use are not ported to 2.5 yet. The amount of changes required to move an extension from 1.6 to 1.7 are relatively small and from 1.7 to 2.5 are minimal. Yet, code migration is a huge issue. If you have to do a huge amount of work to get extensions written for J! 3.x to do as much as run on 4.x I can safely assume that it will take significantly more than 2 months.\nAnd that's the root of my concern. I don't want to see a Joomla! version released with no compatible extensions. This is bad for the Joomla! CMS, bad for the Platform and bad for 3PDs. I honestly don't care who works where or why someone decided to do this or that. I am only concerned of the long term consequences to my business and the businesses of everyone using Joomla! (not just 3PDs, but also site builders, trainers, template makers, freelance developers and so on). Since this doesn't appear to be such a big concern to anyone else, I won't say anything more. I already know what I have to do for my software to keep ticking across Joomla! CMS and Joomla! Platform versions, so this all really is somebody else's problem, not mine. Please ignore my comments and my concerns as they apparently do not apply to anyone else than me.\n. @realityking  +1. This is a much better solution than what I proposed. Thank you.\n@eddieajau  Seems like my English skills and the cohesiveness of my thoughts are at their best around midnight :) Thank you for clarifying the intent of the legacy tree. The name is a little misleading, especially if some classes in there are supposed to be an at least mid-term solution. The term \"legacy\" usually brings to mind the 1.0 legacy layer and its relatively short lifespan (it was practically abandoned and started causing problems with properly written code two years into the 1.5 release).\nRegarding keeping the old JModel concrete class and the new JModel interface in parallel, I could see a problem before Rouven's suggestion. Since the new MVC structure supports HMVC, it is more than fathomable that developers will use it to render views of their components in modules. This would mean that at a given page we could have both an HMVC-powered module (the new JModel interface would be required) and a legacy component (the old JModel concrete class would be required). Without namespaces it would be impossible not to throw a Fatal error in this case, hence my question about namespaces. I know that namespaces are not easy to implement, but they'd be a good long-term solution if we were to keep the legacy classes named as JModel. However, if Rouven's suggestion is implemented this is no longer a concern and we can forget about it.\nI agree that 4.x would be different than 3.x in many more ways. I will tell you what I was thinking. When 1.6 was still in beta stage, I began making my components compatible with both 1.5 and 1.6. The 1.5 support was considered stable and the 1.6 support was experimental. The upside of this approach is that once 1.6 was out, I had a version of my software which was perfectly compatible with the new CMS version. That's what I want to ensure for me and other developers: that we can start working on supporting the new STS without dropping support of the current LTS and without maintaining dual codebases for each component. Reading what I wrote, I see that I never quite spelled it out, making it impossible for anyone else to understand the context of what I was saying. Again, Rouven's suggestion solves that, as it would be relatively easy for 3PDs to fully support 2.5 and start working on 3.x compatibility.\nOne off-topic side note: 2 months for implementing big changes may sound plenty, but they're not. If the only thing I'd have to do all day long is write code, the MVC change would take me 4-6 days to complete for one component. Unfortunately, I have many components (I have 11 code repositories and 6 components) to maintain and I also have to do support, documentation, testing across different odd servers, write presentations and so on. This is pretty much how every other developer's day is, which means that 2 months is barely enough for one component. We need to start working on compatibility before a new version is out. Again, if Rouven's suggestion is implemented, this is no longer a concern.\nI am glad we all agree on what's good for the CMS and please excuse my outburst.\n@sybrek Well, I think it really all comes down to the apparent lack of planning or lack of communicating it. Right now there is a rough roadmap for the platform, but there is no roadmap for the CMS. The community is not aware of whether Platform changes will be adopted by the CMS, when/if that would happen and so on. This doesn't allow us to plan our releases and site roll outs and upgrades in a sustainable way. But that's another topic for another venue.\n. If JViewCms & co are made available at least since Joomla! 3.0, it would absolutely perfect with all 3PDs as it allows for graceful transition. If that's included in 2.5.5 or 2.5.6, as Rouven suggested, it will allow us to adapt our code with even less friction and much earlier.\n. Yes, that sounds like a good plan and, as you said, that's a discussion for the CMS. Just tweet the URL of the CMS discussion when it starts. There are so many lists and places for CMS discussions that I can't keep track of all of them any more :)\n. Maybe there is an easier way: get the filesize and date/time, concatenate them, calculate the MD5 and use it as the unique hash for each file. Security-wise it's marginally better: you can not detect the exact version of an extension just by looking at the MD5 sum appended to each JS/CSS file. Furthermore it seems cheaper to do a single stat for each file than one fs query to check for the MD5SUM file and a very expensive read to read it. FYI, that's pretty much how Admin Tools' CSS and JS aggregator figure out if it has to regenerate the concatenated file if one of its components has changed.\n. Dude, no compromise! I hate compromises. Read again what I wrote. I wrote \"get the filesize AND date/time\". Think md5($filesize.'/'.$timestamp) where $filesize is size in bytes and $timestamp the last modified date of the file on disk. This is very accurate. Every time you install an extension update the file is overwritten and gets a new timestamp.\nThe only edge case would require you to have a FAT32 filesystem, install version N and within 4 seconds install version N+1, the file having changed but its size remain unchanged. OK, if you manage to do that under normal website operating conditions I will buy you a keg of the beer of your choice ;)\n. This already looks very good. I have one suggestion, though. There are many Joomla! extensions out there which already use their own copy of jQuery with jQuery.noConflict(). These extensions would screw up Joomla!'s jQuery and any other extensions which depend on this pull request. So, instead, I would do jQuery.noConflict('joomlaJQ') which puts jQuery under the joomlaJQ object. Developer can then do something like (function($) {  ... })(joomlaJQ) to run their jQuery statements with the version of jQuery shipped with Joomla!.\n. Point taken. You're right. It's best to weed out misbehaving extensions.\n. I can confirm the tabs issue and the fix in changesets d05665a and f089977 of this PR.\nI have not tested the MySQLi issue and its fix (changeset 509e3fb of this PR).\n. +1 Seems to work just fine.\n. ",
    "roland-d": "Eddie, I have added a note to the change log.\n. It's a script that comes with Joomla and can be found in the cli folder.\n. No because on the CMS tracker it says to report problems here with files in the libraries folder.\n. ",
    "Hoffi1": "Hi Andrew,\nthanks for your suggestion. I have tried this and I think I must correct my report. The fatal error I had seen on an Joomla 1.6.4 with Discussions 1.3. There your suggestion doesn't help. Then I have tried this on a fresh Joomla 1.7.0 and I can't reproduce the error. I don't know how but 1.7 seems to be able to handle multiple files named user.php to load the correct JTable derived class.\nI had renamed Discussions' files on our site to solve the problem completely before we upgraded to 1.7. Because I had not found any relevant differences in JTable, JPath, and JUser I was sure the problem is also present on 1.7 - which seems to be a wrong mind.\nBut one (design) question is left: Is it generally allowed / a good idea having files like user.php in a folder registered via JTable::addIncludePath() or should all these files have unique names to prevent conflicts? JPath returns only one path containing a file with matching name. And JTable::getInstance() returns false if this file doesn't contain the class requested regardless if another path contains the right file. So I see the potential for the fatal error I originally described although I can't see it any longer in \"real world\".\nMany thanks and sorry for my wrong conclusion,\nHoffi\n. This bug was fixed by klas on May 27 here (https://github.com/joomla/joomla-platform/blob/0cf636132a2d087eea97f19bc6dd86ac9d184a9d/libraries/joomla/cache/cache.php) but is not part of Joomla! 1.7.0.\nHopefully it will find it's way into Joomla! 1.7.1...\n. I had put a link to the commit on joomlacode but because it was closed by Andrew I'm not able to change anything.\n. ",
    "tompap": "Hello, I wrote the initial issue on the CMS Tracker. I agree that should be set a deprecated. But I would suggest to write somewhere that $content is reserved. Because there is no information about that in the wiki or any other documents. And the word \"content\" is a common word in joomla word.\n. http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_id=8103&tracker_item_id=25835\n. Open a new one on the staging\n. I am not used with github :) I just tried to do that, I hope it's correct now. \nI need to learn and try to create a project on github to understand all stuff\n. Hello, I agree that they must be a better solution for the JPath modification. But we need a way to be able to find all the paths that contains a specific file.\nLooking to the description of jTable::getInstance:\n- Static method to get an instance of a JTable class if it can be found in the table include paths.\nThis is not the current behaviour of this function, because we just search in the first table include path that match\nAnother Solution, will be to add an addtionnal parameter to the function JPath::find, $multiplesearch something like that, to tell that we have not to stop on the first occurence but to search all occurence.\nMy choice was to create a findAll, like we have in php preg_match and preg_match_all\n. Hello, I really don't understand why you want to close this issue. \nThere is a BUG currently in Joomla.\nOn \"Core\" Point of view you cannot see the bug, but for third party developer, This issue apperas a lot of time, because getInstance of JTable is not working correctly. If several components are using the same name of Table (common name like User, Content for example), the JTable is not working.\nCould you explain why you want to close an existing bug ? That can be reproduced very easily ?\n. I am not sure to understand this part of the code. \nIn my understanding is correct the goal is to only load the latest version of a lib.\n1) if someone is trying to load a lower version => ignore\n2) if someone is trying to load a higher version => replace\n$key = array_keys($this->libraries[$name]);\n$currVersion = $key[0];\n$currVersion will be equal to the word \"version\" not to X.X.X ?\nAnd I was more expecting a code like\nif (isset($this->libraries[$name]) {\n    if (version_compare($version,$this->libraries[$name]['version'],'>')) {\n        unset($this->libraries[$name]);\n    } else {\n        return $this;\n    }\n} \nBut also should the code merged the pre and post script ? \n. ",
    "marcel-kanter": "Take a look into https://github.com/joomla/joomla-platform/pull/702\n. How to fix the test log? Are the functions _unlock and _lock of JTable tested? Then the test need to be removed\nIs the test multithreaded?\nIs it possible to get an output of the checkstyle?\n. @realityking For some reason in Joomla Exceptions and Errors are used to communicated normal things like the failure of functions. Exceptions are used to inform the caller about abnormal ( ;) ) events normally (an dead database is such a abnormal thing - but not the result of an query). Since SQL LOCK is a blocking query this would never fail.\n@chdemko This should not be in this pull request. I'm new to git and somehow this got into this request. I hope i can remove these changes from this pull request. The reason for the change anyway is that i'm working on a library which has some dependancies so i need to check it before installing. The other thing is that the other extension types have support for it too so why not the rest of them?\n. @mbabker Thanks, I'll try that. Hmm. Just realised that completes the set. Thank you.\nSomehow i cant find a link to manage the pull request on github... :S\n. @elkuku does your tester update autmaticly? committed some changes but tester did not update...\n. @mbabker The changes of the installer have moved to the branch called installer\n. No news on that. For correct use we need to change the prototypes of the general database class. I have no clue in which components use the database look. I think this is an real issue and we should let the change impact on the developers of these components. To be honest i thought that the changes in this pull will be introduced into joomla 2.5 since this is a major change - but  they were not implemented. Maybe in 3.0 release?\nThe next thing is that a complete look (even for reading) is necessairy. I found more places where looks are needed and an multi-user write access (what is normal for a cms) may corrupt data integrity. Generally speeking this is every class in which a read-modify access to the database is done.\nThe deeper i dig into the code of joomla, the more i think a complete re-design of some classes need to be done. This may sound a bit agressive but it should not - i know for shure how such projects are born and evolving... For this reason i startet to write a library with more or less compatible classes that plug onto the current joomla library. These classes i'll test exessivly- When these are ready for the public i'll introduce them to the public joomla library.\n. ok, then close it.\nhow about the redesign?\n. Hmm. This means that the wrong way is kept in some classes... For correcting these errors a break with current design may be needed thats why i would introduce this to a new major release.\n. Currently i have not much time to spent on that. Basicly a review of all classes file by file would lead to good results. A few things i got already:\n- Alter lock and unlock of the database interface. Argument for lock should be an array for the table names and lock type.\n- Remove all components that are not really necessairy for the platform and build packages for them. Then the user can choose which to install. For e.g. there are classes in joomla.database.tables that are part of components.\n- Make the framework extentable via \"application parts\". The admin interface, the installer or the site of such things. Currently the site stuff resides on the same folder as the framework.\n- The publish function has a somewhat strange name since it changes state (think of and trashed, archived!) and the state is stored in a table row called \"publish\" (in newer components \"state\")\n- Review the plugin/Event system for state changes you get en event for all rows. For other events before and after the action (e.g. content display)\n- Some functions dont use their arguments (e.g. the id in an table row) and return only the result from the class and not the correct value.\n- Rework the asset/acl system. No fall back to some default values of root or component level (which is currently the case). This leads to security problems since then the user may be granted rights that he dont have. The implementation of the access levels itself are somewhat strange. \"core.edit\" means the right to edit the object itself. yes!?! in some component is also allows the user to edit the childs. - I have to take a closer look onto this to give you a more detailed answer.\n- The predefined functions controller/model/view/table need some rework. publish in an table for example takes an array of PKs, delete only one PK.\n- Some functions behave unnatural. Deleting an non-existent PK generates an error. Why? The purpose of delete is to remove an PK. So the model may be imformed about that but it should be happy. \"I want that element to be removed! Oh. Nice it is not there. Fine Nothing to do.\" The table should be the work horse and the model+ controller the jokey. A good horse only runs where the jockey it says and only jumps so high it has to...\n- Rewrite the installer to equalise the different types of install packets.\nI can give you more points for this list. But this takes time. Some (maybe the most) of the points show a break with current implementation would be needed for correction...\n. Oh. Coming back to the context of this pull request. I have to admit that i did take a look into this pull request because i thought that it was clear what is the problem and that the last commit of it is regarded as an proposure for solving this. I'm a bit unhappy on how this went...\nPlease read the description of the LOCK statement of any SQL database (start with mysql then go on with any other). Then you should clearly see what is wrong with the current implementation.\nTo help you: Look at bullet #2 of the pull request description ( If a session issues a LOCK TABLES statement to acquire a lock while already holding locks, its existing locks are released implicitly before the new locks are granted. )\nThis is completely different to the current (and thus wrong) joomla attempt (There is also no way to emulate the joomla implementation)!\nAn example e.g. from delete function. The function modifies tables \"list\" (the nested list) and the table \"assets\". \nFirst it tries to lock the table \"list\" with lock(). That is ok. After this it checks for trackassets and then it tries to lock the table \"assets\" with _lock(). This will work since SQL LOCK is blocking. _BUT the table \"list\" is UNLOCKED from this time. Thus for the following SQL statements the table list is completely unprotected! You see the problem?\nThe solution:\nRemove of _lock and _unlock from table WITHOUT any successor. (As I did already in this pull request.)\nRemove lockTable from database. (As i did already on this pull request\nAdd lockTables with array of the tables and the lock type to database interface (I did this already, but now it needs a change since the user of the function needs to set the lock type too.)\nThis solution breaks the backward compatibility (what is good since any class using this implementation has an error too).\nBtw. The order of the update of the tables is wrong too. If you set up the FOREIGN KEY constraints correctly there should be an error since. list.asset_id references to assets.id and the row in assets is removed first - resulting in an reference to an non-existent element. Add this to the complete-redesign list above...\n. The same thing happens with the JTableNested store function. In a but more extented verion, since it calls store of JTable which uses lock. At the beginning of store in JTable the current lock of the table is released and an new lock is requested. If one user is re-arranging the nodes (e.g. re-ordering) and another user is creating new nodes then the data in the table may become corrupted since the lft, rgt and level data can change.\n. I have an solution for that problem. It a bit tricky, since there is now way to check granted locks, and will still break the backwards-compatiblity. I'll implement and test it on my own framework and then port it to joomla and re-open this pull request.\n. Shall we fix the use of '/' in the files and replace them with DS?\n. I'll fix the style issues.\nShall we fix the use of '/' in the files and replace them with DS?\n. Is it possible to trigger the style check manually? Since i've corrected the style errors in the last 2 commits and they are still reported? Just take the if in line 125 as an example. there is no missing space.\nUsed your checker already ;)\n. Pulled It. Tnx\n. patch incomplete the second this should be node too.\n-        ->where('(lft > ' . (int) $this->lft . ' AND rgt < ' . (int) $this->rgt . ')' . ' OR ' . $k . ' = ' . (int) $pk);\n-        ->where('(lft > ' . (int) $node->lft . ' AND rgt < ' . (int) $node->rgt . ')' . ' OR ' . $k . ' = ' . (int) $pk);\n(btw. the worst readable coding style. some features are nice to have but should not be used to improve readability and compatibility)\n. I would not change this, since this changes the path for all files. The scriptfile should they together with the rest anyway.\n. Think about sharing the InstallerScript. I would add:\nif(!class_exists($classname))\n{\n  $classname = 'InstallerScript';\n}\n. Think about sharing the InstallerScript. I would add:\nif(!class_exists($classname))\n{\n$classname = 'InstallerScript';\n}\n. We're thinking the same. I did not came to take a closer look into this code. So JPATH_ROOT and JPATH_MANIFESTS point to equal fodlers?\n. Hmm. Then the handling of the manifests of component is different to package and my code is copying the script into the base. Should we equalise this for all extension types? Bend component and the rest into JPATH_MANIFESTS?\n. Install and Update are the same with a little but relevant difference: Install should run when it is not installed and update should run when there is already data oder files present.\n1. This is what a creator of an library would expect: Install does install and update is update and NOT re-install.\n2. The old code always removed the files before an re-install to do an update (which could be incremental) or there are maybe files that the install-script generated dynamicly and the update may need these files. Some inis for example...\n3. Since the creator of the extension can do anything in the script, we should not asume that the library is only files anymore. So we should give the control to the creator of the library. Btw.  I'm already thinking about where to store configuration of my new library.\n4. The installers for the other extensions are correct already. So why keep this incorrect behaviour here?\n. ",
    "ghost": "Depending on your point of view, simple add register_shutdown_function('session_write_close'); to either the JSession constructor or the JSessionStorageDatabase constructor.\nhttp://us2.php.net/manual/en/function.register-shutdown-function.php\nThis will ensure that session_write_close is executed BEFORE destructors are called.\nI'd say it should be in JSession because quite honestly, the session should always be saved before anything is destroyed.  But if you only want to enforce this override for the database storage engine, it can be placed there just as easily.\nNote: this should really only be considered a stop-gap, last ditch solution.  Implementations of the Joomla! Platform, such as the Joomla! CMS really should call session_write_close before rendering the final html to unlock the session for any parallel requests.\n. Is there a process to fork a pull request, modify, and then submit that data to the original issue?\nI know I can update my own pull request, but I'm curious if I can make an addendum/modification to someone else's as an alternate[so as to keep the number of issues created down]\n. Sorry, I did not realise pull requests generate issues automatically.\n. It depends on the storage class.  Through the use of mt_rand, id is initialized to a string of all numbers which is at least 32 charectors long and at most 31+mt_getrandmax() long.  The default on getrandmax is most likely 2147483647, so thats an upper limit of 41 charectors.  http://php.net/manual/en/function.mt-getrandmax.php and uniqid gives us a string of alphanumeric chars 23 long..so the max length is 64 characters an minimum is 54.\nmd5 hashing it results in a 32 byte long string.  The benefit of doing this being:\n1) Fixed length to fit for being used as a key\n2) For storage systems that return data when substrings match, ie when 12345 if it does not exist will retrieve data for key 1234567890\nSo it is storage system dependent on whether or not it must be md5'd.\nI do not believe that is a problem with any of the current storage engines, database, none, xcache, memcache, and apc can all support the larger key size.\nWhile it is traditional to md5 session keys, there is no reason it must be done...[ideally, this should be a user configurable option so users may choose md5, sha1, or whatever.  However, at the moment I'm just concerned with minimizing duplicate key generation possibilities.]\n. Yes, it is rather unlikely that you will end up with duplicate keys.  However, there are a number of sites today that have very real issues with getting load failures caused by failed insert's of session id's - so unlikely or not it is happening.\nI honestly don't think MD5 is the cause, but my preference is to avoid it even being an issue.  Short of generating all combinations of 31-41 long numbers combined with all combinations of 23 alphanumeric charectors, and then applying md5 to check - I figured I'd just submit this small pull request.\nYou can review the discussion here: https://groups.google.com/forum/#!topic/joomlabugsquad/miigEuee-uU on this problem.  I also figured I'd break item's 1 and 2-3 into separate pull requests since 2-3 solves the real most likely culprit while 1 is just for the sake of completeness.\n. erg...fudge. I'll need to create a Joomla coding standard profile for my IDE.  I prefer spaces, but if we use tabs I'll swap.\n. hmm, thought this was fixed in another pull request...  Elin reminded me it's been sitting here.  Ok, I';ll have to pull the latest code and redo the update, this time without using depreciated JLog.\n. I re-arranged my repos into orgs for my own clarity and this branch was lost.   I've recreated the fix and submitted it as pull request 1209.\nhttps://github.com/joomla/joomla-platform/pull/1209\n. Yep, my bad. Isn't JParameter class.\nProblem is in the JFormHelper class: /libraries/joomla/form/helper.php\nin the loadClass method\nSame problem as described though. It's using this:\nphp\n<?php\n    if ($file = JPath::find($paths, strtolower($type).'.php')) {\n      require_once $file;\n    }\nSo it's simply loading the first file name match it finds, which is not necessarily the right one.\n. PS: The JLoader::register() method might be a solution for my own elements. But that still doesn't solve elements of 3rd party extensions.\nIt is also only a patch over the wound. Not a real solution (if it would work, that is).\nYou would expect the framework to load the appropriate element file when using different 'complex' names, like a_categries vs b_categories\nWhen having extensions like modules/plugins, you can't (and shouldn't need to) change the JForm behavior when it is rendering the xml for the edit view, by using JLoader::register() stuff...\nPPS: I am only a 'frontend scripter', not a 'core coder', so forgive my ignorance and lack of insight.\n. So any insight on what needs to get done to get this fixed and what time frame...?\n. This probably isn't the best/memory-friendly solution, but it does solve the problem in a simple way.\nCould this be implemented as quickfix for Joomla 1.7.3?\nphp\n<?php\n        // Try to find the class file.\n        $type = strtolower($type).'.php';\n        foreach($paths as $path) {\n            if ($file = JPath::find($path, $type)) {\n                require_once $file;\n                if (class_exists($class)) {\n                    break;\n                }\n            }\n        }\nThis would replace the lines currently in the JFormHelper::loadClass():\nphp\n<?php\n        // Try to find the class file.\n        if ($file = JPath::find($paths, strtolower($type).'.php')) {\n            require_once $file;\n        }\n. So is there anything I can/should do to get that testing rolling?\nLooking at the code, it shouldn't influence performance much at all. Only thing it essentially does - with regards to function-steps - is do 1 or more class_exists() calls extra. Which - to my knowledge - shouldn't be noticeable.\n. Ok, done :)\nPS: Git is still Gobbledeegoo for me.\n. Great. Just to add:\nThis is just a quickfix till this whole thing is handled in a better lower-level way as mentioned by Louis (using JLoader).\nSo it might be good to add something along those lines in the comment near this code block...\n. Any info on what the errors are? Anything I can/should do?\n. No, I haven't. Pretty new to this. So I'll look into it...\n. So all is ok?\nThe Checkstyle warnings/errors, does that concern these changes? Can't imagine these few lines generating 453 warnings :S\n. Sorry, I don't understand. Is everyone using different coding styles?\n. Yes, but what about the 29 errors?\n\"Checkstyle analysis reported 453 warnings and 29 errors.\"\n. Ok, great. I am patient. Just worried I am doing stuff wrong. :)\n. I am getting this in CMS (J 1.7.3). But seeing this is a framework file, I thought the place to post the issue was here...\n. No, as far as I can tell only the module list that is returned from the database is stored in that cache.\nNot the rendered modules themselves.\nAdvanced Module Manager and MetaMod Pro have been overruling this module helper file as it is with one that (among other things) doesn't use this cache.\nWe have seen no noticeable effects on page load time due to this non-use of module list cache.\nThousands of people are using these extensions and we have had no reports of pageload time problems related to this.\nIn what I have been able to test locally, there is no noticeable difference in load time (debug info) and a small decrease in memory usage when commenting out the $cache->store line.\n. Because?\n. That's because merging sucks if you change indentation\n. Hmmm, don't know why it is showing 5 files in the diff now, as I only commited changes to the module helper.php file.\n. I guess Git doesn't like me. Done that. All files no up-to-date. No commits/changes open.\n. Created new fork and pull request: https://github.com/joomla/joomla-platform/pull/934\n. realityking, can you help me? I already post in the forum but nobody answer me. Please i really need help\n. Using PhpStorm. Nothing wrong with that.\n. ah, yes, very good! I think I accidentally removed that after trying to get a clean github fork and push for the nth time :)\n. @nik i don't think that no one cares about those problems. but it seems like everyone has surrendered because it doesn't matter what people are thinking. the plattform goes it own way or better: the way which one-two guys want ..\n. I'm not following.  The code today is:\n $str = 'return ' . implode(' ', $words) . ';';\n  return eval($str);\n$words is an array of numbers, 1,2,3,4,5\nSo $str = 'return ' . implode(' ', $words) . ';'; results in the string: return 12345\neval($str) will be eval('return 12345;'), \nreturn 12345; will return 12345 to the caller\nreturn is the caller, so it returns 12345\nI'm not seeing the difference between:\nreturn 12345;\nand\nreturn eval('return 12345;');\n. oh wait...I see, $words is one part numbers and one part something else, and together they form php code... erg, gonna close this and take another look\n. An implementing this logic without the eval is to remove it altogether.\nThe atomic template, for example, uses:\n<?php if($this->countModules('atomic-topquote') or $this->countModules('position-15') ) : ?>\nInstead of\n<?php if($this->countModules('atomic-topquote or position-15') ) : ?>\nSo if not many templates use it this way it could be removed. \n. I'm leaving this pull request open for the time being, however I'd say hold off on using it as I also submitted a patch request to handle the cases of 1 or 2 parameters in order to fix a minor security hole.  If those are applied, then this patch will need to be rewritten to include that... and createFunction can be evaluated for use instead.\n. Closing this for now in deference to a more limited functional change in https://github.com/joomla/joomla-platform/pull/1307 and getting unit tests in place for these switch statements\n. By failing tests do you mean the first 3?\n. The JModuleHelper error is coming from something outside my patch?  IE what do I need to do to get this patch to pass the checks?\n. Cool..thanks!\n. Actually, anything which calls countModules on something will cause an eval on unfiltered, unchecked code.  While it's true that the only item IN the CMS which does so is the template, this does not mean there aren't 3rd party extensions which call countmodules for some reason[for example, similar functionality to the loadModules] which would allow content editors to insert malicious code that goes through countModules....in short, a hidden eval with no security checks is a security hole...it may be an unexploited hole, but it is a hole nevertheless.  I call a spade and spade, and a security hole a security hole. \n. @realityking: I'm not seeing any codestyle issues...or more accurately I'm not seeing any NEW issues in pull request.  I'm for eliminating the eval call altogether, but figured I'd keep this code pull backwards compatible and only deal with issues of ensuring operators are really operators, checking parameter counts, and getting rid of eval for 90% of the calls by removing the call when there's only 1 word.\n. @Realityking: I agree about just checking for uneven terms...that's why I added a pregmatch on the operators to make sure their in the set of operators.   The operands will always be turned into integers, so their safe, but the operands are passed to eval as is.  I'll look at those checkstyle issues later today....slowly learning how to read that report.\n. Don't know who desgined that, but we're using \"class\" as part of \"element\". I don't like it too.\n. Hm, I'd rather go in the opposite direction and allow for more complex settings such as Stash: https://github.com/tedivm/Stash\nI'm also not thrilled with losing the group/pool/bin setting on the cache....  I realize that almost no one uses it though so that's likely just me.\nWith Stash, instead of having that special runtime property for caching in memory, it adds an \"ephermeral\" stash handler which keeps it treated by itself.\nMoreover, their recent commits include  a configurable Multihandler cache storage handler which can be configured to use multiple cache backends intelligently...ie for incredibly large objects[say the JDocument object] the cache can be to Ephemeral + File, really small objects could go to Ephemeral + APC[with it's shared memory model], and everything else can go to Ephemeral + Memcache\nThe cool factor is on lookups, it will check in all configured storage areas in an optimized order, ie check Ephemeral, then APC, then Memcache - so lookups take a small hit equal to all the failures[variables from Ephemeral.\n. In http://sitename.org/ru/index.php where does the ru come from?  Is that\nthe directory your site is in?  I tried this on a couple of sites and the\nrequests load fine.\nOn Fri, Aug 31, 2012 at 5:56 AM, hispid notifications@github.com wrote:\n\nThe difference is that in original code the request goes to the main page,\nand after patch the request goes to the current page the user is viewing\n(because of JRoute using of current option and view variables).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1507#issuecomment-8187392.\n. Well, technically the address doesn't have to contain a domain at all.  It is perfectly legal run :\necho \u201cThis will go into the body of the mail.\u201d | mail -s \u201cHello world\u201d root\n\nSince the class has already acknowledged that it's rules are not RFC compliant, I don't see any reason not to make them more \"reasonable\" for the general use case...  I just wish there was some way to easily override/change these rules without replacing the class.\n. We'll get there.  We were considering calling it Oscar.\nIan\nOn Tue, Oct 23, 2012 at 11:42 PM, Chad Windnagle\nnotifications@github.comwrote:\n\nCan we give the app a name to make it sound less robotic and more\napproachable? Maybe Mrs Jenkins?\nOn Tue, Oct 23, 2012 at 9:57 PM, Sam Moffatt notifications@github.comwrote:\n\nJenkins doesn't reopen the pull request, there is a Joomla Platform\nbased\napp that responds to GitHub's hook API.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/joomla/joomla-platform/pull/1630#issuecomment-9725182>.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1630#issuecomment-9726782.\n. A priorityQueue is not an array, it is a heap - so many of your methods that deal with intersecting and diffing arrays will not work for a queue.  Also keep in mind: splPriorityQueue is an object, this means it is passed by reference - any changes to it will change the base object.   Reading a heap is a destructive action, ie\nforeach($priorities as $p)\n\nWill read the queue in priority order and do something, when done the queue will be empty - so if you have an 'array' of events you just deleted them all if you didn't clone the queue before processing.\n. Modified pull request to remove changes to unrelated JController file made for testing.\n. Hmm, I think thats all of them.\n. Current practice is a feature, not a bug!  \nI am using it to dynamically add groups to a logged in user that should NOT be stored to the database.   For example, on 90% of the sites I've worked on, devs define themselves as super-admins and then have to create a bunch of test accounts for different group levels....plus when they are logged on they are super-admin.  Talk all you want about this being poor practice, it is what it is and will never change.  As such, I simply borrow the solution from the linux world which had to deal with the same issue and lost the fight to tell users not to log out and log back in as root.   Instead use sudo so a regular user can invoke commands temporarily as root.  By the same token, I have a simple sudo component on the front end - authorized users can use it to dynamically add groups to their current session.   So now I log on as me for all my sites and I am just a regular registered user.  If I need to view the site as a paid member, sudo->paid.  If I need to view debug data, sudo->dev.  If I need to make some intensive admin changes, sudo->super.\nAfter 30 minutes of inactivity, the plugin will automatically reset my groups to the ones in the user table.  No forgetting to log out.  No problems with remember me.  30 minutes, goodbye super admin, hello registered user.\nBy the same token, there already IS an onSave event for users.  If you need to refresh user group membership when it changes, a user plugin onSave to do so is the way to go.  Please don't break functionality...\n. I'd rather an option to disable type checking.  PHP is loose about type casting for the convenience.  For example, given the following contrived example:\nclass MyObject {\nstatic $numObjects = 0\nfunction __construct() {\n  self::$numObjects++;\n}\nfunction toString() {\n   return __CLASS.'s';\n}\n}\n$object = new MyObject;\n$objectStats = array();\n$objectStats['seperator'] = ' ';\n$objectStats['number']=MyObject::$numObjects;\n$objectStats['object'] = $object;\n$objectStats['msg'] = 'have been created. -- Percent declared classes:';\n$objectStats['percentage'] = (1/count(get_declared_classes()))*100; \n$objectStats['msg2'] = '-- Objects Exist flag';\n$objectStats['exists'] =  ($numObjects) ? true: false;\n// store the stats into the database\n$checkType = false;\n$sqlUpdate = ' set objectStats = CONCAT_WS( implode(',', JDatabaseDriver::quote($updateStrings, $checkType));\n$sqlUpdate .= ', objectNumber='.$objectStats['number'];\n$sqlUpdate .= ', objectMetrics='.$objectStats['percentage];\n$sqlUpdate .= ', objectName='.JDatabaseDriver::quote($objectStats['object]);\nSo with one array of data it will assign an integer to objectNumber, a float to objectMetrics, a string to objectName[via the magic __toString method and the quote method], and an informational string to objectStats\nThe first line becomes:\nCONCAT_WS(' ', '1', 'MyObjects', 'have been created. -- Percent declared classes:', 'nn.nnn', '-- Objects Exist flag', '1');\nWhich MySQL then converts to:\n'1 MyObjects have been created. -- Percent declared classes: nn.nnn -- Objects Exist flag 1'\nGranted, I'm not really thrilled with the readability of the above but I certainly have seen code which uses lots of magic methods and such to create things programatically.   Make the checkType flag default to true and then programmers always have the option of overriding it without writing their own subclass.\n. No idea...honestly when I ran across the repetitive calls to array_merge it struck a memory and I was curious to see if my recollection was correct about there being a noticable difference between merging sorted and unsorted associative arrays.  I hate making tests with manufactured data since it doesn't tell you if it will be effective in the real world - and the Joomla CMS was well positioned to have real data and no effort needed to modify it.  So it let me play with xhprof and pull some before/after data.  Once I finished and noticed the large difference, I went ahead and submitted the change since it seems like a decent gain for no cost.\nThere is a LOT that could be done to really optimize JLanguage, but that is a rabbit hole of premature optimizing...ie it's fun to do but the benefits really don't justify the time[unless your Facebook, Google, Amazon, Ebay or some other extremely large web business where cutting 50-100 milliseconds off every page run could translates into tens of thousands of dollars in reduced server infrastructure]\nSo respectfully, I'm resisting strongly the fun factor of playing with more optimization and leaving this pull request as is... ie makes things better with no cost, but leaves room for more improvement.\n. Odd though as I still got translated strings..perhaps an oddity in ksort in different versions.\nIn any case, I redid the optimization here https://github.com/joomla/joomla-platform/pull/1773 and will look at the xhprof analysis to see if it still does any enhancement or not.\n. I have to close this request in the next day or so and open 2 new ones, one for memcache and one for none.  Thanks to Ellin, I now know how to force a different session save handler without having to go through a JSession discovery process so that code is not needed.\n. Closing this commit, moved memcache fixes to 1836 https://github.com/joomla/joomla-platform/pull/1836 \n. moved sessionNone changes to their own pull request, 1839 https://github.com/joomla/joomla-platform/pull/1839\n. Retesting with xhprof shows ksort still provides a performance gain, but the gain is much more minimal for a stock cms install in blog view.\nInclusive Wall Time goes from 28,542 microseconds to 25,646 before and after including this change\nInclusive CPU Time goes from 28,997 microseconds to 24,995\nOr in terms I can understand, it saves 3 milliseconds of page generation/load for a moderate number of language files\nNot worth the time to dig into for the speed bonus - but worth implementing once you know about it.  And for me, very worth the time in learning how to use xhprof with simple, concrete, real life examples.  Not worth the time digging further into JLanguage to try to speed it up any further - on the same run JDatabase eats up over 400 milliseconds - just enabling MySQL query cache would provide ten times the benefit this \"fix\" does. :-)\n. I'll give it a shot later at my coding system. I was having some trouble getting a clean checkout of staging.\n. Cool - had to use --force on the push to get it to apply - looks much better\n. Yes, it's a bug. No matter if i want to replace fields or not. JForm has to avoid duplicated fields. But if $replace=false. It doesn't work, because \"unset($field)\" does not remove the field from the added element.\n. ",
    "n3t": "Duplicates with pull request, learning to use github, sorry...\n. JHtml\"\"('select.option') is used to generate list of menus to choose parent menu item in menu item editing. The input for this function is generated from JHTML::('menu.treerecurse'), and contains nbsp entities. That is why html_entities is used rather than html_specialchars (special chars will add ampersands, and the output would be broken).\nWhy the decoding and encoding again is done - I do not have any overview, seems maybe some compability reason?\n. ",
    "jmcameron": "Hi Elin and Aaron,\nI'm willing to help out with this issue.  I've been preoccupied on other\nthings and have neglected it.\nI started getting set up with a fresh git checkout of the platform, etc, to\ntry get this patch fixed.\nI'm tied up this evening and tomorrow morning (Pacific time).   Maybe we\ncan touch base tomorrow afternoon/evening?\n-Jonathan\nOn Fri, Mar 30, 2012 at 4:58 AM, elinw <\nreply@reply.github.com\n\nwrote:\nOk, check for me tonight or tomorrow on IRC and we can look at it.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/issues/245#issuecomment-4841077\n. Ok, sorry I did not connect earlier.  I will not be able to follow up on this any time soon.  So I encourage you both to take it over and follow it up.\n. As far as I can tell, none of the code in libraries/joomla/installer has been converted to the new exception-style error handling.  So the question is: shall we wait for the conversion to exception-style error handling and fix this then, or do it now in the old style and then update it later when the exception-style error handling is implemented?  I guess part of the answer to this is whether Joomla will get a fresh update from the Platform before the installer code is expected to be converted to the new error handling approach?  If so, then I think it is worth fixing this now.  If not, then it makes sense to wait.\n. Hi Sam.  Yes I think just adding the JError::raiseWarning() as you suggest here should be an adequate interim measure.  The problem.  The problem with the old code was that not error was raised at that point and it just returned false and the error message associated with the $table was lost.  If you raise the error as in your code snippet, the the first failing case will raise the error with the associated error message.   By the way, is there any reason to return false if you raise an error/warnng?\n. Could you point me to an example of this?  The only thing that I see in Platform currently that seems to be what you want is in libraries/joomla/database/database.php (around line 280) that looks like this:\n\n```\n// Legacy error handling switch based on the JError::$legacy switch.\n// @deprecated 12.1\nif (JError::$legacy)\n{\n    // Deprecation warning.\n    JLog::add('JError is deprecated.', JLog::WARNING, 'deprecated');\n    JError::setErrorHandling(E_ERROR, 'die');\n    return JError::raiseError(500, JText::sprintf('JLIB_DATABASE_ERROR_LOAD_DATABASE_DRIVER',  $options['driver']));\n }\nelse\n{\n    throw new JDatabaseException(JText::sprintf('JLIB_DATABASE_ERROR_LOAD_DATABASE_DRIVER', $options['driver']));\n }\n```\nIf this is what you want, we will need to add an appropriate exception class, etc.\n. Ok, I forked the platform and fixed this code to read:\nif (!$table->setLocation(1, 'last-child') || !$table->bind($data) || !$table->check() || !$table->store())\n    {\n        // Install failed, warn user and rollback changes\n        JLog::add($table->getError(), JLog::WARNING, 'installer');\n        if (JError::$legacy)\n        {\n            // Deprecation warning.\n            JLog::add('JError is deprecated.', JLog::WARNING, 'deprecated');\n            JError::raiseWarning(1, $table->getError());\n        }\n        return false;\n    }\nNot sure if this is exactly right. I thought that throwing an exception was not the right answer since we want to be able to recover to run postflight, etc.  So I settled on just using the log message as shown.   I tested this in my Joomla 1.7.0 test set up (just replacing this 'if' statement in the older code) and it worked fine. I was able to get a more fine-grained error message using it.    The Platform PHPUnit tests are not affected by this change.  I'm guessing that install failures are not tested.    I did not do any of the other error messages because I wasn't sure how most of them are supposed to operate. \nIf everyone is happy with this, I'll do a pull request.\n-Jonathan\n. Hi Eddie,\nNot sure exactly what 'abort' does.  If it REALLY aborts and goes directly to an error message, I think that may not be what you want to do here since it would not allow the installer to unroll the failed install...\nThis is what the latest code in the pull request looks like:\nif (!$table->setLocation(1, 'last-child') || !$table->bind($data) || !$table->check() || !$table->store())\n{\n    // Install failed, warn user and rollback changes\n    JLog::add($table->getError(), JLog::WARNING, 'installer');\n    if (JError::$legacy)\n    {\n        JError::raiseWarning(1, $table->getError());\n    }\n    return false;\n}\nI'm happy to change this error handling to what ever makes sense.   I'm kind of caught between the desire to improve the error handling now and the desire of many to make sure any changes match the future direction of error handling.    The only example I could find of something that looked like the future direction of error handling was in libraries/joomla/database/database.php.    I modified it appropriately with some suggestions from Elin and my cut in the pull request it is now.  I'm willing to change it if you give me an example to copy. \nIt would be very helpful to have a page on docs.joomla.org showing what we should be doing for error handling in 1.7 and beyond since JError is being deprecated...\n-Jonathan\n. Hi Eddie,\nWhat would you like me to do about this?   Leave it as it is in my August 20 post above?  If so, I think this patch can be merged in.  If not, let me know how you would like me to update it.\n-Jonathan\n. From your comments on the pull request, I'll update this to do just the raiseWarning and submit a new pull request.\n. This issue has apparently been resolved.  The new code reads:\nif (!$table->setLocation(1, 'last-child') || !$table->bind($data) || !$table->check() || !$table->store())\n{\n    // Install failed, warn user and rollback changes\n    JLog::add($table->getError(), JLog::WARNING, 'jerror');\n    return false;\n}\nTherefore I'm closing this.\n. See the response in https://github.com/joomla/joomla-platform/pull/264\n. Ok, I'll update the patch and resubmit.  Should this pull request be closed and then I'll create a new one with an updated fork?   If so, you can close it when you respond.\n. Eddie,  I've done the changes you suggested in my fork.  I checked the 'diffs' above and they reflect my changes.   What else do I need to do?  I use git quite a bit, but have not done much forking.  And I'm just starting to figure out github.  Thanks -Jonathan\n. I discussed this with Elin here at Joomla Day NYC Dev Day and she suggested I submit this patch/pull request.  \nNote that super-users will see no change.  But any other user will only see the access levels they are authorized for.  This will probably surprise some authors but it seems like the right thing to do.    Super-user will maintain ability to set any view-level to any content (that uses the 'access' html field).\nIf accepted and it makes its way to a Joomla CMS release, I'm am willing to write a explanatory paragraph for the release notes.\n. Thanks Nikolai.  I'll updated it tonight.  It was helpful to see the exact reason for the complaints.\n-Jonathan\n. Strange.  I added spaces around the concat operator and it went from 4 checkstyle warnings to 29?  \n. I am updating this after catching up to the latest version of the platform.\n. I am going to close this pull request.  It needs more testing.  And the platform unit tests need to be updated since the current tests will break until more support is added in the platform unit tests for using JFactory::getUser() to get the current user object.  Once these things are done and the tests pass, I'll start another pull request.\n. ",
    "hieblmedia": "See pull request: https://github.com/joomla/joomla-platform/pull/777\n. Also affected is the styles view in the component, see:\nhttps://github.com/joomla/joomla-cms/pull/93\n. I've added the file in the cms library.\nSee: https://github.com/joomla/joomla-cms/pull/93#commits-pushed-122c84d\nI think on the platform this file should be deleted only in futher versions, for lecacy?\n. Ok.\nBut now i can't commit in this pull request. I have created a new fork for a other pull request. \nI am very new on github... It is required and recommended to create a new branch in my fork for each pull request?\n. I have created a new Pull Request: https://github.com/joomla/joomla-platform/pull/814\n. The template installer issue is very important to fix. (commit: f2eefd8)\nBecuase, \nif a template is already installed the, database entry of a (random?) core extension would be overwritten. This is very very bad.\n. Hm i have this exception handling from the plugin adapter.\nYou mean to remove the new 'try...catch' part?\n. Can you explain me an example? I don't know what is to do for error legacy support.\n. Code style errors fixed\n. Must be: JHtml::getJSObject($opt);\nFound this because an error in 3.0beta in Extensions->Warnings\n. Must be: JHtml::getJSObject($opt);\nFound this because an error in 3.0beta in Extensions->Warnings\n. Only in platform or cms also?\n. https://github.com/joomla/joomla-platform/pull/1519\n. ",
    "fastslack": "Possible fix b2ecaa89f036376a4a43b4d892d401dd24b5fda4\n. Hi Andrew,\nLet me play a little with it :) \nIs any plan to add sockets/websockets support to Joomla! Platform?\n. Ups.. sorry\n``` php\ndiff --git a/libraries/joomla/database/table.php b/libraries/joomla/database/table.php\nindex cd4df42..c4ec40e 100644\n--- a/libraries/joomla/database/table.php\n+++ b/libraries/joomla/database/table.php\n@@ -624,7 +624,7 @@ abstract class JTable extends JObject\n                $name = $this->_getAssetName();\n                $title = $this->_getAssetTitle();\n\n$asset = JTable::getInstance('Asset', 'JTable', array('dbo' => $this->getDbo() );\n$asset = JTable::getInstance('Asset', 'JTable', array('dbo' => $this->getDbo()) );\n                $asset->loadByName($name);        // Re-inject the asset id.\n\n```\n. Yes, but is the same type. If you try this:\n\n\nphp\n$argv = $this->input->get('argv', 0);\n$type = gettype($argv);\necho \"Value: {$argv} -- {$type} \\n\";\nIt returns:\n``` bash\n$ ./CliScript --argv 59\nValue: 59 -- string \n$ ./CliScript --argv \nValue: 1 -- string \n```\n. Sorry, Sam was right, i can tell to the filter what type i like to use... \n$value = $this->input->get('argv', 0, 'int');\n$type = gettype($value);\nReturns\nstring(7) \"integer\"\nI have a question about this... why this is not automatically calling gettype() ?\n. Thanks for all the explanation... closing this pull request.\nRegards\n. I need to reopen this pull request because seems that the JInput::clean method change the type of the input. \nWith this patch 8b77168, the devs have the control if they like to cleanup the input or not. If you do:\nphp\n$args = $this->input->get('args', 0, 'int', false);\necho gettype($args);\nIt returns:\n``` bash\n$ ./CliScript --args 1\nstring\n$ ./CliScript --args \nboolean\n```\n. In the future.. we will be able to use the cms tables from cli?\n. I have opened a pull request with this patch: 85739da04aa15fa0abbc83cd417ed0b922f69658\nThis patch will be applied? Will probably also beneficial to the cms\n. Seems that this is fixed on master and staging branches. Im using the 12.1 tag, im wrong to using it?\n. Nope, im getting \"Application Instantiation Error\" because the store() method of the JTableCategory class is calling to JFactory to get the JUser instance, but im on CLI so no user/session is initialised.\nlibraries/joomla/table/category.php -> Line 202 \n```\n    public function store($updateNulls = false)\n    {\n        $date = JFactory::getDate();\n        $user = JFactory::getUser();\n    if ($this->id)\n    {\n        // Existing category\n        $this->modified_time = $date->toSql();\n        $this->modified_user_id = $user->get('id');\n    }\n    else\n    {\n        // New category\n        $this->created_time = $date->toSql();\n        $this->created_user_id = $user->get('id');\n    }\n\n    // Verify that the alias is unique\n    $table = JTable::getInstance('Category', 'JTable', array('dbo' => $this->getDbo()));\n    if ($table->load(array('alias' => $this->alias, 'parent_id' => $this->parent_id, 'extension' => $this->extension))\n        && ($table->id != $this->id || $this->id == 0))\n    {\n\n        $this->setError(JText::_('JLIB_DATABASE_ERROR_CATEGORY_UNIQUE_ALIAS'));\n        return false;\n    }\n    return parent::store($updateNulls);\n}\n\n```\nIm using the master branch now.\n. yes is related with #276\nI have not user set on my CLI script and i dont need it neither, so that causes the error. The \"Application Instantiation Error\" is from the JFactory::getUser()\n. @elinw I remember that i created a personal patch for this, that simply ignores the JFactory::getUser() if session not exists, but i cannot found it. That could be a solution.\n. You can discard this lines remove, i commit that after send this pull request but i dont know how to delete the commit :-s\nThe important fix is the changes on JTable.\nThanks\n. ",
    "tampe125": "sorry!\nthis is my first time pull request :(\n. just a question, is everything ok?\n. damn..\nok i'll check it out asap\n. thanks eddieajau, it's a good idea.\ni still have to check why tests fail :(\n. sorry but i can't get the test framework up and running  (as stated here https://groups.google.com/forum/#!topic/joomla-dev-cms/M0zeZURSc5Q) ;(\ni hope someone else can carry on this pull request\n. i worked on JTableNested too, i hope this helps\n. ehm.. did i passed the tests?\ni run them locally and everything seems to be ok\n. now the input/output column name check should be ok.\ni added test placeholders, if you can help me to set them up i'll do for sure!\n. hi eddie,\nthanks for yuor help, but i'm having a problem: how can i get the mockDatabase?\ni see that the method is in JoomlaTestCase, but it's an abastract class, so i need to extend it :/\n. this is my code\npublic function testSetColumnAlias()\n    {\n        $table = new JTableInspector('foo', 'bar', $this->getMockDatabase());\n        $table->setColumnAlias('published', 'state');\n        $this->assertThat(\n            $table->columnAlias['published'],\n            $this->equalTo('state'),\n            'Tests that the alias was correctly added to the columnAlias array.'\n        );\n    }\nwhen i try to run it i get this error:\nCall to undefined method JTableTest::getMockDatabase()\ni have to instantiate a new JTableInspector class since JTable is abstract.\nany help?\n. hi, sorry but i have changed my pc and i lost everything. atm the moment i'm very busy and i can't re-install & configure everything. can anyone else merge these changes?\n. is this pull request dead?\nshould i close it?\n. sigh, i'll have to redo everything from scratch :(\nok, i'll close this pull request\n. i'd wish but, sadly, i have some problems with test units :/\n. ok, maybe you're right, but let me explain my situation.\nlet's say that i have to display published and non-published methods (it's just an example).\nthe query is exactly the same, i only need to add\n$query->where('published = 1')\nnow i have to create 2 functions, getPublishedOnly , getEverything and they differ only for the previous line!\nwhy can't i pass a variable to a function and then save code line?\ni repeat, i don't want to pass an ID or something like that, but only a switch\n. Mhm... no.\nI think that a framework should be very flexible, there should be some\nconventions, but they should be used only when there are no configurations.\nI think Zend Framework won't force you with conventions: if there are no\noptions set, it will use the default ones (ie conventions).\nCustom columns name have been added on FrameworkOnFramework (a Nicholas\nproject where I gave some contributions) and everything is working like a\ncharm.\nIt solved some problems when we both had to convert some projects.\nI actually think this is a resource, not a problem.\nIl giorno 19/lug/2012 01:42, \"Rouven We\u00dfling\" \nreply@reply.github.com\nha scritto:\n\nI understand the intention but I think we should try to standardise these\nthings more instead of making them configureable. Convention over\nconfiguration.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/954#issuecomment-7084716\n. ok i'll add asap.\ni didn't know if and when this pull request would be integrated :D\n. \n",
    "dusto": "I removed it.\n. ",
    "andreatarr": "fixed and committed https://github.com/joomla/joomla-platform/pull/435#issuecomment-2437517\n. Sorry to say it wasn't me that caught it -- Amy Stephens caught it and Andrew put out a call out for some one to do it.\nSee you in a few days :)\nAndy\nAndrea Tarr\nTarr Consulting\nwww.tarrconsulting.com\n. Joomla is aimed to include people who are not technical and who just include extensions and expect them to magically work together. The Joomla universe is also filled with people who tinker just enough to include some jquery eye candy and are very happy to see it work. Add in the issue of different release times of extensions and I think a practical approach that acknowledges this chaotic state of affairs and deals with it is good. \n. This is great. The aircraft carrier CMS really needs time for its stately manuevers.  Could something built on the platform without the legacy layer loaded have problems if the legacy layer were to be loaded? Or could you mix legacy and non-legacy applications?\n. ",
    "juliopontes": "Hi Elinw, made new pull request.\n. Ok, I will made some unit tests, and adding pluralize method.\n. Andrew,\nsee my changes and give feedback.\n. I need help to know how can I run these tests?\n. Thanks, working on this. :)\n. Thanks Rob,\nI'm working on fix style. :)\n. I've tried to run this command: \nphpcs --report=checkstyle --standard=build/phpcs/Joomla /var/www/git/joomla-platform/libraries/joomla/string/inflector.php\nand get a fatal error: \nPHP Fatal error:  Uncaught exception 'PHP_CodeSniffer_Exception' with message 'Referenced sniff Joomla.ControlStructures.InlineControlStructure does not exist' in /usr/share/php/PHP/CodeSniffer.php:814\nAnyone can help me?\n. Waiting feedback;\n. I've tried:\nphpcs --report=checkstyle --standard=build/phpcs/Joomla libraries/joomla/string/inflector.php\nand result:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// checkstyle version=\"1.3.2\">\n// file name=\"/var/www/git/joomla-platform/libraries/joomla/string/inflector.php\">\n// /file>\n// /checkstyle>\nHow can I check warnings?\n. I guess we can add two methods like:\nJStringInflector::getLocalise('en_GB');\nJStringInflector::addLocalisePath();\nWhat do you think?\n. Anyone can check if codestyle its ok?\n. My code has 254 warning? if yes, How can I see these warnings?\n. Thanks, I\u00b4ve guess the solution of have localize class its a good idea, but need feedback.\npropose of implementation:\nstrings/inflector/localize/en_GB.localize.php\nstrings/inflector/localize/pt_BR.localize.php\nstrings/inflector.php\nJStringInflector::getLocalise('en_GB');\nIf anyone want to add a custom localize just use:\nJStringInflector::addLocalisePath(JPATH_COMPONENT.DS.'localise');\nJStringInflector::getLocalise('es_ES);\nps.: By deffault will load en_GB\nWhat do you think?\n. agreed, so waiting for merge this version. and we can think on this point on future.\n. waiting feedback\n. Hi guys, I'm add 2 new methods isSingular and isPlural. Please wait for merge when I've finish these methods.\n. some fixes on toSingular regex, and finished 2 methods isSingular and isPlural.\n. @eddieajau @robschley I've implement a auto assign in JView.\n\n    /**\n     * Execute and display a template script.\n     *\n     * @param   string   $tpl         The name of the template file to parse; automatically searches through the template paths.\n     * @param   boolean  $autoassign  Auto assign data to view\n     *\n     * @return  mixed  A string if successful, otherwise a JError object.\n     *\n     * @see     fetch()\n     * @since   11.3\n     */\n    public function display($tpl = null, $autoassign = true)\n    {\n        if ($autoaassign)\n        {\n            if (JStringInflector::isPlural($this->getName()))\n            {\n                $model = $this->getModel($this->getName());\n                $items = $model->get('Items');\n                $this->assignRef('items', $items);\n            }\n            elseif (JStringInflector::isSingular($this->getName()))\n            {\n                $model = $this->getModel($this->getName());\n                $item = $model->get('Item');\n                $this->assignRef('item', $item);\n            }\n        }\n\n        $result = $this->loadTemplate($tpl);\n        if ($result instanceof Exception)\n        {\n            return $result;\n        }\n\n        echo $result;\n    }\n\nThe idea is do automatic assign for view, like example: \nif you have a view \"articles\" will check if is Plural, get model with same viewName and call getData() method. after that we just assign \"items\" to your view.\nother else \"artcle\" is a singular word so it display one a single item. Your tmpl has a \"item\" var with your item.\nWhat do you think about? If agreed I can send this patch in this same pull request?\nWaiting feedback\n. @LouisLandry and about auto assign?\n. waiting feedback\n. Andrew, what should I do with a pull request? \"This pull request cannot be automatically merged.\"\n. Andrew, updated. Waiting feedback\n. Anyone have news?\n. @eddieajau Sorry, I\u00b4ve understand to merge with oficial joomla/staging. So, how we can fix it?\na) merge my branch with your branch?\nb) I\u00b4ve fork u branch and commit these files?\n. @eddieajau I hope that works. :) I\u00b4ve tried merge here. Take a look and give me a feedback\n. @chdemko Update with joomla/joomla-platform?\n. Done, please check.\n. @chdemko done.\n. I\"ve created another issue with code attached.\n. ",
    "Denitz": "Yes, now I can check if a table was joined.\nBut I can't remove it from join.\nCan we have __set here?\nOtherwise we are forced to use clear('join')  and next rejoining all tables\n. and what about returning by reference?\npublic function &__get($name)\n. Sure :)\nBut JDatabaseQuery->_join property is array of JDatabaseQueryElement objects, I unset the object element but original protected _join array will stay the same.\n. __get would be excellent, but:\nWhat is the purpose of casting properties as protected in this case? We would still are able to modify them :)\nWhy not to use public scope and don't use magick methods? This is just a JDatabaseQuery class which should allow flexibility and scalability, but not a class of bank credit card :)\nI don't see any sense in protected vars for the scalable framework.\n. ok, but here is another question - how can I alter queries in my own extension.\nMy component creates a complex query which is next used to get count and get rows\nCount doesn't require few joins, so I want to remove them from query.\n. Thanks for the info, I already use $query->clear('select')->clear('order')->select('COUNT(*)').\nSo Joomla platform won't have the normal way to removed joined table, other than getting the ->_join property, than manually parsing all _join elements and adding them back to the query after ->clear('join')?\n. agree!\n. Events onBeforeRenderModule can affect performance\n. Nothing funny here if you trace triggering even 1 registered handler which will use preg_replace() for 25 modules on page. Sure it is funny if your site has 50 visitors a day.\n. Please check new patch in http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_id=8103&tracker_item_id=26551\nIt's based on Stefano's pull but is simpler and follows coding rules.\n. It's not correct to use stristr() because we can't rely on case-insensitive differences, it should be case-sensitive.\nI agree now that using != is not fine, so better use strpos:\nif (JString::strpos($OldScriptStr, $currentScriptStr) !== false) {\nIt's not save to use str_replace() because it's not UTF friendly, I can suggest to use strtr() - it's multi-byte safe and fast:\n$newvalue[strtolower($type)] = strtr($currentsnippet, array(\n    $oldinlinebuffer => ''\n));\n. Please check new patch in\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_id=8103&tracker_item_id=23336\nNow we use static caching of auth levels, groups and categories separated per\nuser ID, so we don't have issues with reloading JUser instance with new user\ndata.\n. https://github.com/joomla/joomla-cms/pull/256\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=28760\n. You can either disable caching in module settings, or implicitly disable caching by not using 'owncache' parameter.\n. Any news???\n. Elin, this is not a major change in behavior, before 2.5. modules were cached for logged users.\nSo in fact not caching is incorrect behavior! It seriously affect performance, even for core modules - try to load Related Articles with 50.000 articles.\nIt is up to module code to decide whether to cache it or not, and normal developer understand this and can use module cache parameters.\nHaving a big experience in caching with Joomla, introduced lots of caching features in previous versions, I can say that this issue is obvious.\nNo need to change core data or add additional parametes, current code is enought to allow developers the full control of modules caching.\n. Joomla 1.5 cached module correctly:\nif ($mod_params->get('cache', 0) && $conf->getValue( 'config.caching' )) {\n  ... cache\n}\nBut 2.5.0 even in beta 1 stopped to cache module for logged user.\n2 mahagr: I have seen tons of modules which do require caching for logged users.\nWe shouldn't implicitly decline the module caching but rely on module code, the code should decide how to cache itself depending on module params.\nOtherwise Joomla module caching is not flexible and hard-coded - back in golden Joomla! 1.0 times\n. ",
    "pollen8": "in my experience, if you are only using mySQL, doing count on complex joined data gives 'interesting' results. I now tend to do:\n$db = JFactory::getDbo();\n$query = $db->getQuery();\n$query = $db->getQuery(true);\n$query->select('SQL_CALC_FOUND_ROWS, field')->from('tbl');\n$rows = $db->loadObjectList();\n$db>setQuery(\"SELECT FOUND_ROWS()\");\n$count = $db->loadResult();\n. ",
    "rcorral": "To note, if approved, before merging to the master branch, the old dispatcher.php and observer.php would need to be replaced with the ones that I created.\n. The unit tests use the current JDispatcher and JObservable to show the speed difference.\nI was thinking it would be easier for someone to give the go-ahead on this pull request, I can then cancel it, replace the two files and then do another request. I am probably overcomplicating it, but it is important for the purpose of the tests, this is what I figured would happen.\n. ",
    "Bakual": "I have no clue how to create such a pull request, so if someone can tell me how to do it I can try. Or someone else can do it, I don't care for the credits :-)\n. Seems like it worked, but it openend a new issue for it? Should have probably named it the same or so. \nThanks for the explanations. I didn't have to download it to my computer, I could edit it in the webbrowser.\n. Aww sorry, was my first try to attemp a pull request and it looks like I did it wrong.\nIs there a way to fix it besides closing and reopening the request?\n. Closing and reopening then a new one against the staging branch.\n. Hopefully this one was correct now.\n. I don't think that would be better.\nAs it is now, the custom view constructor could define a default layout by simply using: \n$config['layout'] = 'new_default';\nparent::__construct($config);\nIf the custom view constructor doesn't set a layout, then the JView class will set it to 'default'.\nThe controller afterwards would override that default layout only if it's requested.\nWith your change the JView class would never set a default, since the array key is already present (and it only checks for that). So the controller would need to set the default value (which would be against MVC), but then a custom view class could not set a new default, or it needs much more code to do so (check if a layout is passed in request, basically doing the controller stuff again, which again is against MVC).\n. Backwards compatibility isn't really an issue since it doesn't work as of today :)\nThe code in a custom view constructor would then have to look like this:\nif (!JRequest::getCmd('layout', ''))\n{\n    $config['layout'] = 'new_default';\n}\nparent::__construct($config);\nThis would work, however it takes calls JRequest twice for exactly the same thing. Alltough only if there is a custom default which probably is rare.\nHowever I'm not sure if it's the best approach. That's up to others than me to decide. I'm happy if it's working in the end :)\n. Ah true, that would be easy enough. I agree with you :)\nI think we need a new Pull Request now? I'm not that familiar with GitHub yet.\n. Hopefully that worked\n. I'm all for following conventions as it makes it easier to read the code.\nI was following the example given in http://docs.joomla.org/Retrieving_request_data_using_JInput. Maybe someone should change it there.\n. Ah, I meant to change the \"$input\" convention in the example, not the \"JFactory\" vs \"self\" one. That was just an oversight I should have known.\n. I'm not sure what you mean with the commit you linked. It seems to be all related to the testing files, and I have to admit I have no clue how those work.\nHowever I have fixed the codestyle error.\n. Included your fix into my fork. I didn't find out how I could include your commit otherwise. Still learning Git :-)\n. I see the problem and I learned something about Javascript today :-)\nI have this fixed in my testing enviroment with the following code for the core-uncompressed.js:\njavascript\nJoomla.tableOrdering = function(order, dir, task, form) {\n    if (typeof(form) === 'undefined') {\n        form = document.getElementById('adminForm');\n    } else if (typeof(form) === 'string') {\n        if (!form) {\n            form = 'adminForm';\n        }\n        form = document.getElementById(form);\n    }\n    form.filter_order.value = order;\n    form.filter_order_Dir.value = dir;\n    Joomla.submitform(task, form);\n}\nThis works without problems as far as I see it. However I'm not sure if it's good codestyle and I don't know yet how to do the compressed variant.\n. Done like Sam suggested\n. Also created PR in CMS since it's unclear where it belongs to. Currently it's in /libraries/legacy, but the CMS has it in /libraries/joomla.\nhttps://github.com/joomla/joomla-cms/pull/649\nDiscussion in GoogleGroups: https://groups.google.com/d/topic/joomla-dev-platform/kkBVeh0wygw/discussion\n. Actually, the trackeritem exists already and is also referenced in the CMS PR, but it sure doesn't hurt to link it here as well :-)\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=29946\n. ",
    "brbrbr": "Whether it uses the static or $this it will need to check for a valid cursor as well.\nI'm not familiar with qit, I have a fork with a patch ( if ( $cursor === null ) {} added. \nJust hit the 'pull request' button or RTFM ?\n. ok,\ni hope i didn't mess up the repository to much\n. using the $this->cursos instead of the static allows to reset the query using setquery/query without the need to iterate thru the result set.\nHaving a $this->query in loadnextrow/loadnextobject keeps the functions backward compatible, althought I don't think that is a big issue since the current version do not function as intended ( doing the job of loadrow/loadobject)\n. for the first row there is $db->loadRow()\n$db->query(...);\nresets the cursor.\nloadNextRow/Object are odd anyhow, since they are the only load* functions not resetting the cursor on every call. \n. Hi\nI referred to your example code:\n$db->setQuery('select * from jos_content');\nvar_dump($db->loadNextRow()):\n$db->setQuery('select * from jos_categories');\nvar_dump($db->loadNextRow()):\nshould be? :\n$db->setQuery('select * from jos_content');\nvar_dump($db->loadRow()):\n$db->setQuery('select * from jos_categories');\nvar_dump($db->loadRow()):\nwith reset\n$db->setQuery('select * from jos_content');\nvar_dump($db->loadNextRow());\nvar_dump($db->loadNextRow());\n$db->setQuery('select * from jos_categories');\n$db->query();\nvar_dump($db->loadNextRow());\nQuestion is what is the supposed usage of loadNextRow?\nI found the problem because I needed a function to walk tru a large result set, avoiding overhead.\nfor smaller set I would use the limit functin to get n rows.\nbram\n. ",
    "hermodo": "I'll try to see if some of the people that commented on this on the old issue tracker is willing.\n. The following will fix it.\n```\nfunction getProfile($userId = 0)\n{\n    if ($userId == 0) {\n        $user   = JFactory::getUser();\n        $userId = $user->id;\n    }\n    else {\n        $user   = JFactory::getUser((int) $userId);\n    }\n// Get the dispatcher and load the user's plugins.\n$dispatcher = JDispatcher::getInstance();\nJPluginHelper::importPlugin('user');\n\n$data = new JObject;\n// Bug fix for profile\n$data->id=$userId;\n\n// Trigger the data preparation event.\n//$results = $dispatcher->trigger('onPrepareUserProfileData', array($userId, &$data));\n// Bug fix for profile\n$results = $dispatcher->trigger('onContentPrepareData', array('com_users.profile', &$data));\n\nreturn $data;\n\n}\n```\nHermod\n. ",
    "gnomeontherun": "I'll tackle this, just curious though what object should be returned by this method?\n. I submitted a pull request to address this\n. Thanks, I had basically the same thing, but removed the $user variable because its not needed. See the pull request for the actual code, but waiting for it to be adopted.\n. Request was pulled and is now in the Platform. This can be closed.\n. I don't know how far back it goes, but mootools has a time diff function\nhttp://mootools.net/docs/more/Types/Date.Extras#Date:timeDiffInWords\n. I personally find newlines very useful, and would be against this. I can see a small monitor would be annoying, but in general its much easier to read the code. Either way, just being consistent makes me happy.\n. I ran the sniffer, and got thousands of errors, mostly due to spaces for indentation. I am sorry but is there any way to find out what Jenkins claims is the 1 error?\n. Thanks!\n. I ran the sniffer only on the joomla library folder, it generated a large number of indentation errors. I figure it has something to do with my configuration. Either way, I found the issue from mine was putting { on a new line, and my IDE is configured to use spaces instead of tabs so I cleared that.\n. I'm not sure what you are saying Sam, but you can see this issue if you setup Joomla, login for the first time, and look at the POST request the extension update quickicon makes. It returns errors for no 'client' index, nor is that listed in the docs as an available attribute. http://docs.joomla.org/Deploying_an_Update_Server\nAlso the test doesn't exist for getClientInfo(), its never been written, and there are no updater tests, but I am guessing that is because it will be moved to the CMS library? Either way, could you help clarify the intent here? If you submit a client_id, do you need a client attribute, or can you submit one or the other?\n. I didn't understand why that was in there to be honest, I don't get the intent of the code. I was just applying the code from a previous issue, thinking that was the intent. \nTo me, your example xml doesn't make sense because it uses CLIENT instead of CLIENT_ID. Conventions everywhere else use CLIENT_ID. Your example is the only thing I have to go by, and that doesn't tell me what your original intent for the manifest was, therefore I cannot write a fix. What I don't get is the extensions still are designed to use CLIENT_ID only, so its inconsistent.\nThis is a problem thats breaking the updater in the CMS though, so this is pretty important.\n. This appears to make sense, and the patch for this fixes the update collection notifier in the CMS, since it now returns an empty array instead of the error messages. \n. This is very interesting, may I ask why you are naming the interfaces as what would be (traditionally in the CMS at least) thought of as the base class, and then setting up an abstract class with the name of base? If that is unclear, I mean why is JController the interface instead of the abstract base class? Its mostly a question about naming conventions, since for example JDatabase (doesn't have an interface) is the root abstract class. Otherwise, I am a big fan of the base classes being simplified!\n. @eddieajau if JModel implemented JModelInterface, instanceof would still recognize it. I don't understand how it restricts the flexibility from that example at least. \n. @LouisLandry Thanks Louis, that is a helpful and detailed look at the intent. I think I agree with you then, now that I see the rationale behind it all. I certainly owe you a beer just for the time you took on that.\n@eddieajau @nikosdion BC is only so practical, I'm ok with the idea since we have a buffer (legacy) and can even make it optional in 3.x to prepare for 4.x when its the default (should that be the case). Refactoring code is good, especially if we have plenty of time, so if there can be an overlap (for a whole release) for support to move, then its really not much different then deprecating something.\n. @ianmacl I see the challenge in the CMS of having a class in the legacy folder and in the Platform with the same name but with different implementations. JModel (legacy) can be used by a module to load records on the same page where a component tries to use the new JModel (interface), for example, so we could actually experience a collision of class names. Am I thinking that through right?\nIf so, that might make it impossible to make them both available in the CMS, there would have to be a specified break where everything has to be updated. There are ways to ease that, perhaps by adding a legacy JModelBase that extends the current JModel and hopefully in the coming months people would update their code. Then when the JModel changes for good, if nobody is directly extending it in the CMS or extensions, we have a bit better transition. However that is a discussion for the CMS more than for here I suppose.\n. ",
    "enav": "hi eddieajau ...  I'm relatively new in this \"joomla town\" i agree with you with the new name assignation, pleas give me the CMS developer list link to go there and do what you say. thanks\n. ",
    "jgc": "Any update on this pull request?\n. ",
    "infograf768": "Please Rouven, can you post a patch on the Joomalcode CMS tracker for this one?\n. Can we commit this into CMS?\n. Please indeed test, Michael and change cms patch to include a new sql update.\n. To get rid of the double hyphen, just need to add\n// Delete double hyphens\n$str = str_replace('--', '-', $str);\nbefore\nreturn $str;\nWe can't use translations here as it would only work for pure ASCII languages.\nSorry, I do not know how to modify this pull...\n. We need to add in this patch the code I added above in case of double hyphens.\nCan someone do that?\nIn fact, this patch reverts the ASCII alias making to the 1.5 behavior, which was changed for no reason before 1.6 beta.\nThe special characters are dealt with OK, as it was in 1.5.\n. In fact, to be on the safe side, we could also take care of the < and > in both the ascii function and the unicode function, and change them to spaces which are taken care of later on.\n. Added some changes to prevent double hyphen and changing > and < to spaces in the ascii as well as the unicode variant.\n. The double quote is removed by\n// Remove any duplicate whitespace, and ensure all characters are alphanumeric\n$str = preg_replace(array('/\\s+/', '/[^A-Za-z0-9-]/'), array('-', ''), $str);\nExample:\n\"Administrator's  & other stuff's\"\ngives as alias\nadministrators-other-stuffs\nBut, as\n\"Administrator's  \"& other stuff's\"\ngives\nadministrators--other-stuffs (double hyphen)\nI have now added it to the array.\n. no idea where the failure comes from...\n. This should now fix it.\n. This has to be checked for \"normal\" JPlural breakage.\n. I meant JText::plural(), was just a shortcut. ;)\nHere is one the more complex implementation of getpluralsuffixes we have for now (Scottish Gaelic)\npublic static function getPluralSuffixes($count) {\n        if ($count == 0 || $count > 19) {\n            $return =  array('0');\n        }\n        elseif($count == 1 || $count == 11) {\n               $return =  array('1');\n        }\n        elseif($count == 2 || $count == 12) {\n               $return =  array('2');\n        }\n        elseif(($count > 2 && $count < 12) || ($count > 12 && $count < 19)) {\n                $return =  array('FEW');\n        }\n        return $return;\n     }\n. I can send you the pack. It looks like Fabrik had the same issue with Farsi and just prevented the Notice display as proposed here.\nWill ask the TT what gives adding //IGNORE\n. Proposed to change the code to\nreturn iconv($from_encoding, $to_encoding . '//TRANSLIT//IGNORE', $source);\nas posted in http://php.net/manual/en/function.iconv.php\nSame issue:\ndebug (on last instance of trunk)\nNotice: iconv() [function.iconv]: Detected an illegal character in input string in D:\\wamp\\www\\j25b\\libraries\\joomla\\string\\string.php on line 730\nCall Stack\nTime   Memory   Function   Location\n1   0.0024   384160   {main}( )   ..\\index.php:0\n2   0.5212   8810360   JAdministrator->render( )   ..\\index.php:53\n3   0.5375   8993136   JDocumentHTML->render( )   ..\\application.php:202\n4   0.5375   8993136   JDocumentHTML->_renderTemplate( )   ..\\html.php:433\n5   0.6338   9989024   JDocumentHTML->getBuffer( )   ..\\html.php:655\n6   0.6338   9989400   JDocumentRendererModules->render( )   ..\\html.php:371\n7   0.6339   9989992   JDocumentRendererModule->render( )   ..\\modules.php:39\n8   0.6340   9990968   JModuleHelper::renderModule( )   ..\\module.php:106\n9   0.6433   10056568   include( 'D:\\wamp\\www\\j25b\\administrator\\modules\\mod_menu\\mod_menu.php' )   ..\\helper.php:175\n10   0.6521   10245544   require( 'D:\\wamp\\www\\j25b\\administrator\\modules\\mod_menu\\tmpl\\default.php' )   ..\\mod_menu.php:29\n11   0.6615   10429416   require( 'D:\\wamp\\www\\j25b\\administrator\\modules\\mod_menu\\tmpl\\default_enabled.php' )   ..\\default.php:13\n12   0.6823   10485456   ModMenuHelper::getComponents( )   ..\\default_enabled.php:272\n13   0.7316   10533192   JArrayHelper::sortObjects( )   ..\\helper.php:124\n14   0.7316   10534224   usort ( )   ..\\arrayhelper.php:463\n15   0.7316   10534264   JArrayHelper::_sortObjects( )   ..\\arrayhelper.php:463\n16   0.7317   10534328   JString::strcmp( )   ..\\arrayhelper.php:514\n17   0.7355   10534880   JString::transcode( )   ..\\string.php:425\n18   0.7355   10534976   iconv ( )   ..\\string.php:730\n. The TT tested with both\nreturn iconv($from_encoding, $to_encoding . '//IGNORE//TRANSLIT', $source);\nand\nreturn iconv($from_encoding, $to_encoding . '//IGNORE', $source);\nand in these cases, he did not find any error and all characters displayed OK\nWhich one do you suggest we use?\nI would be in favour of\nreturn iconv($from_encoding, $to_encoding . '//IGNORE//TRANSLIT', $source);\n. Changed to //IGNORE\n. Now that IGNORE is used, are the tests at stake?\n. Asking now\n. Results are positive. No more errors.\nHow do we proceed now?\n. Opening tracker in CMS with patch.\n. JRegistry indeed works great to retrieve a plugin parameter in a component. Updated wiki.\n. This patch does not break mysqli on CMS\n. To Platform Committers\nThis is apparently is quite urgent.\n. We can' wait anymore for the RC1 release.\nCommitted in CMS\n. @eddieajau \nThe point Sudhi is making is that we are more and more introducing differences between platform and CMS.\nIt would be better IMHO to commit to CMS another patch presented here that works really for all db and accepted, this to limit discrepancies.\n. Test negative. See Tracker.\n. Tracker:\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=27783\n. This fix has been comfirmed on http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=27785\n. These are now corrected in CMS\n. EOL are fine in platform. Closed.\n. Decision in CMS has been to not change this behavior for now and just the docblock\n. Because JHtml::_('date', $value) is not used in this case and the date displayed is the db Gregorian date.\nExample in CMS: edit an article. The Modified Date field will always display a Gregorian date.\nIn Persian for example, it should display the Jalali date.\nLetting read only = \"true\", after the patch, displays correctly the date without the calendar icon.\n(Custom calendars in J use js)\nI welcome  a better solution.\n. Hmm, this creates issues when changing dates in the calendars when using custom calendars\n. Does that mean that the cms folder in the cms will also have to be renamed to legacy from 3.0 on?\n. Installing extensions specific lang files is done in 2.5 using the type=\"file\"\nThe language adapter in installer library contains some obsolete code which has to be deleted.\n. \"According to the code in the languages installer, it should work the way like it was in Joomla! 1.5.\"\nThis is what I meant by obsolete code in the adapter:\n// Either we are installing a core pack or a core pack must exist for the language we are installing.\n        if (!$this->_core)\n        {\n            if (!JFile::exists($this->parent->getPath('extension_site') . '/' . $this->get('tag') . '.xml'))\n            {\n                $this->parent\n                    ->abort(JText::sprintf('JLIB_INSTALLER_ABORT', JText::sprintf('JLIB_INSTALLER_ERROR_NO_CORE_LANGUAGE', $this->get('tag'))));\n                return false;\n            }\n        }\n. For info on non-core language packs, see this recent doc:\nhttp://docs.joomla.org/Making_non-core_language_packs_in_2.5\n. we do have a new patch to solve doubled time.\nSee: http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_id=8103&tracker_item_id=28535\n. file has to be encoded as UTF8\n. and\n-label {\n-   font-family: mono;\n  -}\nhas to be taken off as it has unwanted display results in CMS back-end.\n. @Christophe\nThese lines do not exist yet in CMS\n. so shall we add in CMS and this patch both\ncase 'yes'\nand\ncase 'true'\n?\n(same for no and false)\n. What is happening is that the Modified date is displayed as full date, i.e. (\nWednesday, April 1st 2012\n instead of 'Y-m-d H:i:s', for example\n2012-07-05 22:07:27\nAs, in some languages the \"full\" date is much longer than the 22 characters allowed for this field (We have some with 33), the \"full\" date is truncated.\nWe do display in 2.5.6 'Y-m-d H:i:s'.\nThe original patch was to solve the doubled time zone but overlooked this aspect. https://github.com/joomla/joomla-platform/pull/1293https://github.com/joomla/joomla-platform/pull/1293\nThe reason why lines 875 and 881 are not the same is that the Calendar field is automatically displayed as  'Y-m-d H:i:s' in 875.\nSee calendar.php: $this->value = $date->format('Y-m-d H:i:s', true, false);\nOn the Joomlacode tracker are some screenshots.\n. Another solution is to use;\n. '\" value=\"' . (0 !== (int) $value ? self::('date', $value, $format, null) : '') . '\" ' . $attribs\n. Can this be merged please? We need to correct it in 2.5.x and master\n. $message = JText::($element['label']);\nis present where it should\nWhat has also to be solved is $message = $element['message'];\n1. It should be translatable\n2. We should separate message_required and message_validate as a field may contain both elements \"required\" and \"validate\"\nExample: when the validate = equals for confirm password, the error should not be \nInvalid field: Confirm password\nbut\nJLIB_USER_ERROR_PASSWORD_NOT_MATCH=\"Passwords do not match. Please re-enter password.\"\nWhile keeping for the required message\nJLIB_FORM_VALIDATE_FIELD_REQUIRED=\"Field required: %s\"\ni.e\nField required: Confirm Password\nExample in site.xml\n        \nI thought this could be done in another patch.\n. Can you commit to your php53 branch, as well as the CMS-specific patch I sent you?\n. looks that\n$paths = array_values($paths);\nwas not necessary\n. Makes sense. We have both depending on OSes.\n. @test\nThis works fine on Unix and Windows\n. Please commit.\n. This has broken multilang in the CMS when using unicode aliases\n. @aaronschmitz \nI can send you the db dump if it can help\n. The simplest the best IMHO (routing_hack), even if we do not exactly follow exactly RFC 3986, as it is fully B/C.\nThe fact that ASCII unreserved characters should be presented as ASCII instead of percent encodings should be solved indeed globally. Another time I guess.\n. In fact found out this was necessary in modal when inserting article.\n. the PR is here:\nhttps://github.com/joomla/joomla-platform/pull/1710\n. FYI, this has no unwanted consequences on upgrading or installing a lang pack from update.joomla.org.\n. See CMS tracker #29646\n. It is indeed an API change. Nobody replied to list. Shall we just postpone this to 3.x or even 4.x ?\n. Implemented in CMS master\n. This totally breaks language strings translation in CMS.\nStrict standards: Only variables should be passed by reference in ROOT/libraries/joomla/language/language.php on line 764\n. I see that #1773 has apparently replaced this commit.\n. ",
    "dongilbert": "So, has this been fixed in the CMS or a previous iteration of the Platform then?\n. If you're still interested in this, please open a Pull Request on the CMS repo, as they are maintaining the platform now.\n. The link is no longer valid. Closing \n. JApplication has been moved the legacy tree. The bug reported here has been fixed in the new MVC and Application base classes. Closing this.\n. I asked that question because the platform docs for 12.1 still say that type hinted JController arg is still required when creating a view, but in the code it has been removed. Please update the docs to reflect this.\n. @eddieajau - pull is requested. :)\nhttps://github.com/joomla/joomla-platform/pull/1493\n. Closed. Fixed by #1304\n. If this can be confirmed as a bug, and there's more interest in fixing this, please reopen with a pull request.\n. This is fixed in the Framework.\n. @ianmacl what other properties would be present in the $options array that would warrant such an implementation, rather than just passing the driver string?\n. Makes sense - I didn't think of that before. \nSent from my iPhone\nOn Dec 24, 2012, at 10:23 PM, ianmacl notifications@github.com wrote:\n\nSorry Don, didn't see the question before. Different cache drivers would obviously have different options. If you were using memcached, for example, you might have the address or IP of the memcache server(s) or other connection info. For a file cache you might want to have a configuration option for the root path of the cache folder. For a database cache, you might want to be able to inject in a database driver object.\n\u2014\nReply to this email directly or view it on GitHub.\n. Continue the conversation on the pull request here: #1355 \n. So the comment I added earlier, did it get deleted? Or maybe it's an issue with github, since the site has been experiencing problems recently.\n. Where does this stand? I'm with @ianmacl that we should be 100% PDO for our database drivers. Other major PHP frameworks (Laravel, FuelPHP, even CodeIgniter) are either already 100% PDO with their own specific implementations (such as Laravel's Eloquent ORM - smexy!) or have plans to get that way. I don't see why Joomla should be any different in those regards.\n\n@realityking - your reasoning that PDO lags behind native drivers is entirely valid. However, there are MANY parts of Joomla that lag behind the native abilities of PHP. (Namespaces, anyone?) So I don't think that it's a good enough reason to hold off on getting the joomla platform entirely shifted over to PDO.\nAnd my vote (as you can guess) for naming it Mysqlpdo, is no. \n. Relevant - https://blogs.oracle.com/opal/entry/how_and_when_to_move\n. Also relevant - https://wiki.php.net/rfc/mysql_deprecation\nThis is an RFC that proposes to generate E_DEPRECATED errors when connecting to a MySQL database with the ext/mysql API. Opened Nov 12th.\n. The CMS is taking the current platform code back into it's repo to ease maintenance of the legacy platform. The platform has been upgraded to the Joomla Framework; a package based, composer integrated platform. And, since there wasn't a clear decision on what to do here, we felt it best for the CMS to handle the change as they see fit, since it will effect them more than the framework. Does that help?\n. We do need to follow HTML restrictions, and it's easiest to just strip invalid characters. However, I can understand why you see it as a bug, since it was unexpected behavior. In my opinion, the CMS should have some sort of alert when filtering if the filtering results in data loss, as is the case here. Just to notify the user. However, this is implementation specific (meaning CMS) so I'm not sure it's something we need in the platform.\n. When loading in the Joomla Platform via composer, what would get loaded? Just the libraries/joomla directory? or would the whole repo including the import.php, legacy, etc be loaded as well and all placed into the vendors/joomla-platform folder?\n. New pull request here - https://github.com/joomla/joomla-platform/pull/1491\n. See the docs here - http://developer.joomla.org/manual/ch01s02.html\n\"IS_UNIX - A bollean value, true is the platform is some flavor or Unix, Linux or similar (but not Mac).\"\n. Just goes to show you never know the extent of a single pull request. I would say drop the IS_MAC constant in favor of IS_UNIX altogether, since Unix and OS X both use LF for line endings.\nDo you think anyone would be using IS_MAC in their extensions that this would still need to be set though?\n. We should be good to go then with these added commits. I've removed IS_MAC altogether from import.php, and deprecated it in import.legacy.php.\n. OK - commits squashed. Had some issues rebasing and then pushing, since I had already pushed the previous commits, but we're all good now.\n. Git not cooperating, or operator error - I don't know. But I created a new branch, remade the changes, and created a new pull request from my ismacfix branch. Much cleaner diff's\nhttps://github.com/joomla/joomla-platform/pull/1498\n. I opened the issue, then created the pull request, which also created an issue. :(  forgot about that part.\n. I have a pull request pending there as well as a tracker item.\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=29015\n. Where are you referring to make this change? The only thing close I can find is https://github.com/dongilbert/joomla-cms/blob/master/libraries/joomla/application/component/view.php#L547\nIs that what you mean?\n. Thanks for the links. I'll work on that. Should it be a separate pull request though? I think so, as what's implemented here is functioning independent of the view regex.\n. @mbabker @elinw  - can you test this? https://github.com/dongilbert/joomla-platform/compare/jviewgetname.diff\nI've done some testing and received expected results. \nThis is how I tested - https://gist.github.com/3563618\nhttps://github.com/joomla/joomla-platform/pull/1509\n. This discussion got a little sidetracked from this pull request to another one concerning JViewLegacy. What's everyone's thought on this one?\n. Ya - I thought that same thing and just pushed it.\n. I also updated the getName method here with the same technique. Squashed and pushed last 3 commits\n. I've been testing this locally with no issues, but I would like (for obvious reasons) some others to test as well. Any takers?\n. Gotcha - I guess my first go at unit testing is about to take place. :) I've read about it a lot, but haven't created any unit tests yet. Here's my shot.\n. I've been struggling with the tests, as I wasn't sure if I should use mock classes for the model, or just create some class name strings to use.\nAlso, I just set up a new computer, and don't have phpunit installed yet. I was going to install via composer, because I didn't really want to install the pear library. However, I don't think PHPCS has composer support yet, so I may have to install pear after all.\n. Also, what PHPUnit optional packages are needed for testing the Joomla Platform\n. Thanks Louis - that helped.\nSo what are your thoughts on creating the tests - Should probably just use strings of potential class names for testing, rather than mock models, right?\nAlso, this should only include tests relative to the pr, instead of the full on  JModelLegacy testing that still needs to be completed. (Which I think, since I'm in there, I'll probably complete)\n. I can't run the test suite against the legacy tree, not sure what's going on there - I may have borked my installation by merging joomla-platform/master \n. It doesn't appear as though PHPUnit is running the legacy test suite. It's not specified in the phpunit.xml.dist \n. That works much better! Thanks - Now I can start actually writing the tests.\n. I've got the tests ready, how do I reopen a pull request? Just send in another one?\n. https://github.com/dongilbert/joomla-platform/commit/f7637dbd3d38597867b5e04414e9e102dfffa02a\n. I don't see one. It's supposed to be next to the comment button, right?\nSent from my iPhone\nOn Oct 9, 2012, at 5:40 PM, Andrew Eddie notifications@github.com wrote:\n\nShould be a \"Reopen\" button at the bottom of the page?\n\u2014\nReply to this email directly or view it on GitHub.\n. I thought I did that. Maybe I pushed it tithe wrong branch. You can see it in the diff I linked too. \n\nSent from my iPhone\nOn Oct 9, 2012, at 5:42 PM, Louis Landry notifications@github.com wrote:\n\nAlso, you need to merge your new commits into the jmodelfix branch and push it up to github so that they show up in this pull request.\n\u2014\nReply to this email directly or view it on GitHub.\n. I double checked and I did push it to the correct branch. Also, there is definitely not a reopen button at the bottom of this page. \n. Ya. Funny. I wonder if after we build this new issue tracker if we could build in the ability for users to submit an issue for re-opening. \n\nThe tests have been completed and added. I'm going to add the rest of the tests after this has been verified. ( since its my first experience with unit tests)\n. Not a problem at all - I understand the difficulties.\nI'm going to create a new branch and finish the unit testing for\nJModelLegacy. I've heard from other develpers that once you get into unit\ntesting your apps, it's hard to stop. It's like an addiction.\n. You left an extra closing parenthesis on line 75\n. No problem. Were you able to test? I implemented the change into a test site and saw no abnormalities. Everything continued to function as normal.\n. @pasamio I had noticed that and was going to use stripos instead, but then I thought, what if a developer built a previews component (or something else that had view in the component name). PreviewsViewVideo would set the $_name property to 'sviewvideo', and that's not what would be expected (obviously). So I made it strpos instead. With the same view name, it would correctly set $_name to 'video' instead. What do you think? \nI think it would be easier to ensure that end-users correctly StudlyCapped the classnames then to limit the use of certain lowercase letter sequences in the component name. I've been running this on a local install, and haven't had any issues with the default components. (I know, it doesn't mean there won't be ANY issues) but I felt this would probably be the way to go.\n. Ya, I checked the style issues. It was 4 things directly related to my code. Two lines with white space, and missing spaces around the $viewpos+4 the other 100+ were to do with variable naming and such. I have those fixed, I was just waiting to see the outcome of this discussion before pushing. \nSo, should I change it to stripos instead then to avoid potential bc issues?\nSent from my iPhone\nOn Sep 2, 2012, at 6:13 PM, Sam Moffatt notifications@github.com wrote:\nBTW can you look through the style issues that Elin linked to and work those out and it should be fine to merge.\n\u2014\nReply to this email directly or view it on GitHub.\n. description updated and style issues fixed\n. Since all the db drivers have their own way of getting the table names for the db, how about we add another method called getFilteredTableList to JDatabaseDriver. This could be implemented as a method that calls the getTableList method, and then filters based on the passed params. Something like:\n```\n/\n * Method to get a filtered list of table\n * names that match passed regex param\n \n * @param   string  $pattern    Regular expression to filter by\n \n * @return  array   $tableList  List of table names that match $pattern\n */\nfinal public method getFilteredTableList($pattern)\n{\n    $tableList = $this->getTableList();\n    foreach ($tableList as $key => $table)\n    {\n        if (preg_match($pattern, $table) !== 1)\n        {\n            unset($tableList[$key]);\n        }\n    }\nreturn $tableList;\n\n}\n``\n. Personally, I'm looking through open and unresolved issues on the platform and offering my take on it. I don't necessarily have an idea of a broad use case where this would come in handy. I just want to help reduce the # of open issues.\n. As this is relatively simple to get the table list matching the query, we don't need to add a new method, unless someone were interested enough to make it into a pull request and add a test.\n. If you are properly using theJFormclass, then$this->multipleis the correct check to make. Check the setup method ofJFormField` here - https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/form/field.php#L306\nThe multiple element attribute must either equal \"true\" or \"multiple\" in the form XML, which gets processed by the JForm class, which then calls the setup method. The setup method then populates \"some important attributes\", one of which is the $multipleclass property, based on the $element['mulitple'] array var. If it does, then the class property of $multiple gets properly set, and can be used by the field element child class to set multiple=\"multiple\"\nNow, the real question is, why is $multiple a property of the abstract JFormField class? Not every field class that extends JFormField requires (or even allows for that matter) the multiple attribute to be set. After grepping the jform source tree, I found only 5 fields types that utilize the multiple attribute. JFormFieldList, JFormFieldGroupedlist, JFormFieldAccesslevel, JFormFieldUsergroup, and JFormFieldCheckboxes. Out of those, #'s 2 & 3 both extend JFormFieldList, and the last 2 are strange animals. Namely, JFormFieldUsergroup SHOULD extend JFormFieldlist, but doesn't; and JFormFieldCheckboxes creates a whole new property called $forceMultiple, which can override the $multiple class property, but is only used in this single special situation.\nWith all this in mind, it really looks like a refactor is needed rather than a simple fix as you suggested. But then you run into problems with developers. But since this is platform and not cms, I think we could implement without breaking backwards compatibility, and really nail down the best practices for developers to implement when utilizing the JFormField classes.\n. True, but it could be accomplished another way. I think essentially, the $multiple property should be moved to the field classes that use it, rather than in the abstract parent class. Then, the multiple check in JFormField could be changed to something like this:\n$this->multiple = (bool) ($this->multiple || ($multiple === 'true' || $multiple === 'multiple'));\nWith that implementation, the child classes (JFormFieldCheckboxes) could set a property of protected $multiple = true which would replace the function of the $forceMultiple property. Then, we can go through the deprecation process with $forceMultiple, and remove the access code. Thoughts? If you think it's a good way to go, then I can start coding and send in a pull request along these lines.\n. @IberoMedia - This is not an \"issue\" per se. When building with the Joomla Platform, you need to defined certain constants in your application bootstrap file. See this file here - https://github.com/JTracker/jissues/blob/master/includes/defines.php\nand here - https://github.com/JTracker/jissues/blob/master/includes/boostrap.php\nJTracker is an app built using the Joomla Platform. This a good example of how to bootstrap your applicaiton\n. IberoMedia, I responded to your comment on the issue,\nhttps://github.com/joomla/joomla-platform/issues/1544\n. Mootools-more is not required for form validation to work in Joomla 2.5.x, so I'm not sure why they make that change, seeing that J!3 is more bent towards jQuery instead. I'll need to look into this more.\n. Is this an extension you have distributed? Or one you are working on for a client? If it's the latter, you can add the call to JHtml::framework(true); to your code, and will bring in the required js. If it's a distributed extension, I think you could get away with pushing another update that does the same thing I mentioned above, and call it a 3.0 compatibility update. If you're users are upgrading their site to 3.0, then I don't think they'll have an issue with upgrading an extension as well. Also, they are probably comfortable with code, and could be just as easily instructed to add the same code block to the template's index.php file.\nI'm only giving these suggestions because I'm not sure if this can make it in on time, since 3.0 is scheduled for release tomorrow.\n. Looks like Hash was always in More, but in J!2.5.x, there was a MooTools 1.2 compatibility in mt-core that provided some type of hash compatibility. See https://github.com/joomla/joomla-cms/blob/2.5.x/media/system/js/mootools-core-uncompressed.js#L412 - That compat section been removed in the 3.0 branch.\nSo, to answer the question, it hasn't moved, but the compatibility layer was removed.\n. Pull request away - I like the that implementation since the validation script only requires that one simple feature of the Hash js. No need to load the full More library.\n. You can edit the files for your site, and then when this get's merged into\ncore, you can drop your changes.\nI wrote this up for overriding core Joomla classes with your own code -\nhttps://gist.github.com/3237387\n. I'd like to see some $_SERVER and $_FILES mock tests as well. And I know @pasamio or @realityking would probably ask you to squash these commits (they've asked me to do that a few times when there were minor changes between commits)\nOtherwise, +1\n. Well, I think what was meant here was what the comment is saying. Since this is regarding writing files using streams, and by default the chunksize is set to 8KB, I think it's reasonable to assume that there are - as @pasamio said - one too many 1024's.\nWhat we really need to do is ask the creator if he meant what he coded, or if he meant what he commented. This chunk of code was added here - https://github.com/joomla/joomla-platform/blob/a9bf5568433de1e4a6ee11c9ce1cbf3ceb0d6d25/joomla/filesystem/file.php#L300 - by @pasamio. And we already have his vote. So I'll send in a quick fix PR after making sure changing it doesn't break any unit tests.\n. Will do. Also, I'm going to refactor to use fixtures and the setUp() and tearDown() functions, instead of calling JModelLegacy::getInstance() everywhere.\n. Awe yeah!\n. Test closing this to see if I can reopen.\n. Yes, I now have the option to comment & reopen.\n. It looks like it. At least on issues it works that way.\n. Well, maybe we could make comments on a PR that needs some things, and request that the contributer close it until those things are addressed, at which point they can re-open.\nHowever, I can totally see how it would create more problems, with people not willing or too lazy / proud to close their PR's.\n. I'm closing this because I discovered, (with the help of @elinw) this site: http://developer.joomla.org/coverage - this issue is now longer needed.\n. It is not merged. @elinw would know (maybe?) if this is something the CMS would use. \nIn the meantime, and this is what I do, when sending JSON responses as the application output, you can use this in your view:\n``` php\n$app = JFactory::getApplication();\n$items = $this->get('Items');\n// do post processing if need be\n$app->close(json_encode($items));\n```\n. I am working on unit testing for the Legacy JModel* set of classes. \nI've completed JModelLegacy which has already been merged - https://github.com/joomla/joomla-platform/pull/1588\n. The requested changes have been made. Please reopen\n. If this is still a go for 12.3, it probably needs some further review.\n. I would like to see this merged as well. :) A lot of work here.\nIf I have time in the coming days, I'll try to take it for a spin.\nOn Thu, Jan 10, 2013 at 2:11 PM, Diana Prajescu notifications@github.comwrote:\n\nI have just updated this branch and solved the conflicts so that it's\nmergeable again. I'll also squash some commits soon and change the\ndocumentation file from facebook.xml to facebook.md, it probably needs\nsome updating too as I made some changes since I've wrote it..\nI would really appreciate some feedback on this package! I might have\nsome time every now and then to refine it and maybe we can get it merged\nsoon.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1605#issuecomment-12116180.\n. @AmyStephen - I wouldn't be totally opposed to the idea, but I think for\nnow we should keep everything status quo with integrating packages into the\nbase platform. :) You know, not try to put the cart before the horse with\noffering packages. We don't have PSR-0 autoloader yet. :P\n\nOn Thu, Jan 10, 2013 at 3:55 PM, AmyStephen notifications@github.comwrote:\n\n@dianaprajescu https://github.com/dianaprajescu This does look great,\nmuch appreciated.\nA thought occurs to me, as some of these new packages start to appear, it\nseems like an opportunity to start packaging these and offering them as\noptions. The same could be done with the github lbrary. Eventually, as the\nsubsystems are uncoupled, just about every subsystem could be packaged\nseparately.\nDoing so now, with new packages might be a good way to get started\ndefining what coupling is to be expected between packages? And, even\nthinking through a little o packaging. It would also help get down to a\nclear picture of what is the core JPlatform set, encourage more packages,\nand avoid bloating JPlatform.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1605#issuecomment-12120840.\n. Does this rely on your oauth1 client?\n\nSent from my iPhone\nOn Jan 17, 2013, at 5:16 PM, Diana Prajescu notifications@github.com wrote:\n\nI just squashed some commits. Please let me know if there is anything else to do in order to get this merged.\n\u2014\nReply to this email directly or view it on GitHub.\n. ~~As you can probably tell, this is the actual commit - https://github.com/dongilbert/joomla-platform/commit/0f9aefd0b1e8a9dfc03a2a67e85fab9d66107c92~~\n\nI'm not sure how my staging branch (which I branched from) get's behind. Should I git pull upstream staging into my staging branch before I checkout / create a new branch for editing?\n. @LouisLandry - since this was a closed pull request, I didn't see the changes take effect in my commit log above. I thought something might have been broke w/github, and submitted another PR instead to see if it would update this one, but it obviously didn't. I'll know next time to simply request the PR be reopened so that I can see the changes and make sure it updated correctly. Oh well.\nThat said, the new PR with the correct commit is here - https://github.com/joomla/joomla-platform/pull/1610\n. So, I think it would be good to document the new joomla-jenkins bot that reopens pull requests when a comment is made. I'll close PR #1610\n. Thanks - I'm working on flexing my testing and refactoring muscles, and getting some of this low hanging fruit. \nSent from my iPhone\nOn Oct 18, 2012, at 1:15 AM, Louis Landry notifications@github.com wrote:\n\nSo, I'm merging this, but the addIncludePath method really shouldn't be used any longer. It would be much better to use the autoloader for making sure that classes are available. The addIncludePath methods in JTable, JModel, etc, etc, were implemented before we had real autoloading available as an option.\n\u2014\nReply to this email directly or view it on GitHub.\n. The problem is that JCacheController::store($data, $id, $group = null) takes three params, and JCacheControllerPage::store($wrkarounds = true) takes only one. These are not compatible with each other, since they take different arguments, and that violates strict coding standards.]\n\nI'm not sure what can be done to correct it, aside from rewriting the structure of JCacheControllerPage.\n. It's not the cache plugin that gives the error, it's the libraries/joomla/cache code that actually needs to change in order to fix the issue. It's not something we can do in this release, especially since we don't explicitly support 5.4 out of the box.\n. Not sure why the docs were merged and this wasn't. Doesn't make sense to have docs with no code. Merged.\n. Since it's line ending issues, I'll merge this and then fix them right away. Thanks for your work on this.\n. Cleaned everything up here: 71f3311698a0febdab9c30bf0bbc57b98fa23432\n. These are all reasons I use raw SQL when writing complex queries. I just created an Ajax autocomplete that queries 3 different tables for the entry title, and them returned the title and JRoute'd link. Piece of cake with raw SQL, couldn't imagine what it would have been with the query builder. \nBut those are the advantages of knowing the database you're going to be using. J! Core couldn't do that, because it supports multiple database types. \nSent from my iPhone\nOn Jan 19, 2013, at 9:46 AM, MarkRS-UK notifications@github.com wrote:\n\nIn addition, are you sure that your query (with union) is producing the results you expect? This pr isn't really about the order clause, it's really to make sure that union statements work.\nYou can see that the current union functionality doesn't work at all by running the following example (that is designed to be as simple, and non-general, as possible) in a standalone environment.\n$q2 = new JDatabaseQueryMysql();\n$sq22 = new JDatabaseQueryMysql();\n$q2->select('a')->from('test')->union($sq22->select('b')->from('test'));\necho '\n'.$q2.'\n';\nI think you'll see that the union clause is not generated at all.\nI'd be very interested to hear your results.\n\u2014\nReply to this email directly or view it on GitHub.\n. Is there a consensus on what to do here?\n. This is the last PR preventing the tagging of 13.1 version of the platform. This is really up to the CMS on whether or not they would like this merged. As such, I will defer to @elinw, @mbabker or @dextercowley on this issue. Can you guys come to a conclusion as to what to do with this? IMO, it's a good fix that should be merged.\n\nIf we can get this decided, we can tag 13.1 and move on. :)\n. Should it be isHtml? I know casing on functions and method names is irrelevant, but we do want to be consistent.\n. Would it be possible to do named or grouped transactions with a var passed through to the transactionStart() method? I know it's more a weakness of MySQL than the code, since it only supports a single transaction per db connection.\nSo in the transaction process, if a named transaction is started, it opens a new connection to the database, with it's own transaction history and ability to commit / rollback as needed. When you call transactionCommit or transactionRollback, you pass in the same name, and the db driver knows which connection to use to perform the task. Think if it as db connection instances.\n. \"reopen sesame\" would have worked. heh heh :)\n. Gettin' it DONE!!! Good job Elin. :+1: \n. @elinw - You and I should coordinate efforts here. I had waited until your last code style PR was merged, and then pulled that into my branch where I'm doing my cs fixes, but I failed to look at the PR queue before going through and running the interactive phpcs command and systematically fixes the errors. If you take a look at #1659, you'll see I duplicated some of your work. :(\nNo big deal though - we just gotta decide what to do. :)\n. @ianmacl - some of the cleanup included in this PR is duplicated in @elinw's PR #1658 - I'm not sure what to do.\n. If you run phpcs on the most up to date staging branch in the legacy tree, you'll see that it is complete.\nI'll rebase from your repo and then push.\n. I don't even know what to do anymore - I can't seem to kill all these extra commits.\n. I'm not getting any. Can you export and send it to me?\nOn Fri, Nov 2, 2012 at 11:32 AM, elinw notifications@github.com wrote:\n\nI'm actually running phpcs constantly and there are still quite a few\nthings though.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1659#issuecomment-10020259.\n. I'm not getting any errors whatsoever. I checked those lines of those\nfiles, and there is no issue that I can see.\n\nWhat does \"WhatSpaceBefore\" mean in this scenario?\nOn Fri, Nov 2, 2012 at 11:39 AM, elinw notifications@github.com wrote:\n\nit's just 5\nJPathwayTest.php:36\n36\nHigh\nSpaceBefore\nWhiteSpaceBefore\nJPathwayTest.php:131\n131\nHigh\nSpaceBefore\nWhiteSpaceBefore\nJFilterInput-mock-general.php:40\n40\nHigh\nSpaceBefore\nWhiteSpaceBefore\nJFilterInput-mock-general.php:45\n45\nHigh\nSpaceBefore\nWhiteSpaceBefore\nJRequestGetVarTest.php:116\n116\nHigh\nSpaceBefore\nWhiteSpaceBefore\nThen it's just those hypocritical sniffs :P.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1659#issuecomment-10020448.\n. Ok - didn't know that.\n\nHow come that error isn't showing up for me? I'm running phpcs with the\nJoomla standard, and it's not showing. Was the standard updated recently?\nOn Fri, Nov 2, 2012 at 3:16 PM, elinw notifications@github.com wrote:\n\nIt means it needs a blank line before the if\nhttps://github.com/joomla/joomla-platform/blob/staging/tests/suites/legacy/request/JRequestGetVarTest.php#L116\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1659#issuecomment-10028786.\n. Well that would account for it then. I'll update my local standard.\n\nOn Fri, Nov 2, 2012 at 3:43 PM, Sam Moffatt notifications@github.comwrote:\n\nIt was updated a week or so ago to enforce blank lines before statements\nlike if, return, etc. similar to the one for comments\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1659#issuecomment-10029629.\n. How do you update an installed phpcs standard? Could I somehow link it to the coding-standards repo to have it auto update?\n. Got it - I forgot it was installed as a git repo and updating is as easy running git pull origin master from the Joomla standard root folder.\n. Yes, i would agree with that. But I don't think the Joomla coding standard allows for short tags. \n\nSent from my iPhone\nOn Nov 4, 2012, at 10:57 AM, Nikolai Plath notifications@github.com wrote:\n\nI have to confess, that I am in love with PHP's short open tags which have recently being undeprecated...\nSo\n<?php echo JRoute::_('index.php?option=com_content'); ?>\nwould become\n<?= JRoute::_('index.php?option=com_content'); ?>\nwithout any added code ;)\n\u2014\nReply to this email directly or view it on GitHub.\n. Well, if there's not broad support for this, I will close the PR and patiently await the deprecation of PHP 5.3 support.\n. Closing until more support is shown, if ever. :P\n. :+1: florian, I'd like to see this in the framework. \n. @ianmacl - I see now why some of the tests were broken up into separate test classes. It makes sense to break them up across test classes, since we need to test each REQUEST_METHOD.\n. http://developer.joomla.org/pulls/pulls/1667.html\n\nThe one CS issue has nothing to do with the pull request or even the test tree.\nIt's that a blank line needs to be added before the if statement on line 1650 of libraries/joomla/database/query.php Should I fix it in this PR?\n. Fixed CS issue in #1674\n. YYYYEEEEESSSSSS!!!!\nI'm just a little excited for this. :) Trying to convert the DocBook xml to something I could actually use was getting to be a PITA.\n. +1 - was just thinking now that we are in Markdown, that we would still need a menu.\n. @elinw - Thanks for the clarification on that. I'm not against $forceMultiple per s\u00e9 - it's just that you can accomplish the same goal by using an existing property that makes just as much, if not more sense. This new implementation reduces 5 lines of code to 1, which is a good thing imho, and it doesn't break b/c (at least until 13.3, if $forceMultiple is removed as marked)\n. Correct, but $multiple can be on several fields. Processing that logic in the parent JFormField class allows us to easily add it to any other child class, as needed. \nMakes it super simple for developers too. I've created custom fields that I wanted to be a multiple select list, but I needed a custom getOptions() method. So I tossed in this, set $multiple to true, and voil\u00e1, it was set for me, without having to worry about it in the form XML. \nSent from my iPhone\nOn Nov 13, 2012, at 12:42 AM, elinw notifications@github.com wrote:\n\nI haven't played with it but I think it may make more sense to deal with the special needs of checkboxes in checkboxes, but maybe there is a more reason for this that I'm not aware of. I'm not sure how many people are changing checkboxes to not accept multiple values given that checkboxes itself was problematic unless you extended it until not that long ago\n\u2014\nReply to this email directly or view it on GitHub.\n. I would say probably not, since this is the general implementation. It\nwouldn't be useful in every situation, so I don't think it should be\npresent in the base class.\n\nOn Mon, Nov 19, 2012 at 3:31 PM, mariopro notifications@github.com wrote:\n\nDon, in the radio.php file, imho, seems to make some sense to set the\nchecked radio as disabled. The reason for this comment might seem not so\nobvious because a checked radio won't change its value or state if the user\nclicks repeatedly over it, but, if developers want to use the radios to\nshow/hide content, the checked radio not being disabled will respond to the\nuser click and trigger any events that might be associated with it (imho).\nIn line 56, it could be set as :\n$checked = ((string) $option->value == (string) $this->value) ? '\nchecked=\"checked\" disabled' : '';\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1684#issuecomment-10532011.\n. Any further discussion on this topic? Improvements I should make?\n. I'm going to add some documentation for JForm - should I attach it to this PR or create a new one? The reason I ask is there currently is none, and writing up the full docs will take some more time than just documenting what's this PR changes.\n\nMaybe I'll document the API as it is now in a separate PR, and then document the changes from this.\n. I was thinking something similar. But if that is the case - I think we should also add a default handling for a multiple field while we are at it. Like maybe a serialized array or json string. \nWhat I've done recently is add a hidden field after a group of checkboxes with a value of 0 and it had the same name as the checkbox set. This seemed to accomplish what I was looking for to do. \nAre there other field types besides checkboxes that don't submit when empty?\nSent from my iPhone\nOn Dec 23, 2012, at 7:15 PM, elinw notifications@github.com wrote:\n\n@dongilbert I was thinking about this project when I was working with a field that won't let me update to blank once there is data. A number of people have raised this before. I wonder if we could come up with an attribute that would let us optionally allow this.\n\u2014\nReply to this email directly or view it on GitHub.\n. I would agree with that approach Mario, given the recent discussions. \n\nSent from my iPhone\nOn Dec 23, 2012, at 7:26 PM, mariopro notifications@github.com wrote:\n\nAs I previously suggested in the platform discussion about this refactoring, imho, the attribute could resemble something as - updateNulls.\n\u2014\nReply to this email directly or view it on GitHub.\n. I would like to propose another addition to the api - the getAttribute() method. We would use this method to replace duplicate code within field classes that generate markup for field attributes.\n\n``` php\n// We would change this\n$disabled = !empty($this->disabled) ? ' disabled=\"disabled\"' : '';\n// To this\n$disabled = $this->getAttribute('disabled');\n```\nWith this approach, the actual markup generated is handled by the JFormField class, and it cleans up the mass of duplicate code while also making it easier to add new attributes if needed without having to copy markup across all JFormField* classes.\nThe method would look something like this: (I know, we'll need to build in some exceptions to the rules here)\n``` php\n/\n * Generate markup for specified attribute.\n \n * @param   string  $attribute  The name of the attribute for which to generate markup\n * @param   string  $default    What to return if $attribute is empty.\n \n * @return  string  Generated attribute markup if $attribute is found, otherwise it returns default.\n \n/\nprotected function getAttribute($attribute, $default = '')\n{\n    $attr = '';\nif(!empty($this->$attribute))\n{\n    $attr = sprintf(' %s=\"%s\"', $attribute, $this->$attribute);\n}\nelseif ($default !== '')\n{\n    $attr = sprintf(' %s=\"%s\"', $attribute, $default);\n}\n\nreturn $attr;\n\n}\n```\n. I'll have a look at that and see about integrating. I think it would be a good addition. \nSent from my iPhone\nOn Dec 29, 2012, at 3:45 PM, mariopro notifications@github.com wrote:\n\nAnd suddenly I've just stumbled on the JFormFieldFolderList \"smarter brother\" in the media manager (https://github.com/joomla/joomla-cms/blob/master/administrator/components/com_media/models/manager.php) where the getFolderTree method (class MediaModelManager) does exactly the above... \nQuestion: couldn't this be transposed or adapted to the JFormFieldFolderList ?\n\u2014\nReply to this email directly or view it on GitHub.\n. I want to recode some of this again, and create a common field interface that can be implemented by those creating custom fields for their extensions. Would that be a welcome change? There's still a lot of work to do to make this a true refactoring worthy of implementing. A lot of what's here already consolidates common calls and cleans things up, which is good, but I want to make it easier to extend and create custom implementations.\n\nClosing for now. :)\n. :|\nYa, I meant for this method. My bad. \nSent from my iPhone\nOn Nov 18, 2012, at 10:02 PM, Sam Moffatt notifications@github.com wrote:\n\n100% more tests than the leading brand pull request? Not sure I agree with your math :p\n\u2014\nReply to this email directly or view it on GitHub.\n. We could use the destructor to call the destroy method a final time, but a like being able to explicitly run it. I found out it was missing because I have a script that imports a bunch of home listings from an mls XML feed, and downloads all the images and resizes them. In my loop, the JImage object is never unset, so destruct is never called, and memory usage would bloat. So I added this to be able to explicitly destroy the image handle. \n\nSent from my iPhone\nOn Nov 25, 2012, at 12:56 PM, Louis Landry notifications@github.com wrote:\n\nWhy wouldn't we just use a destructor for this?\n\u2014\nReply to this email directly or view it on GitHub.\n. Not sure I follow you Sam. loadFile creates the handle so the other methods can use it. If we handled it there, wouldn't that defeat the purpose?\n\nUnless you are saying, run the code in the top of the loadFile method so that if a handle already exists, it gets destroyed, and then run it again in the  destruct method to clear it out on the last run. \nI think that could work. Then it relieves the developer from having to explicitly call it, and would still solve the problem I was trying to take care of.\nDo you think it should still be its own method? Or just integrate/duplicate the code into those two spots mentioned above?\nSent from my iPhone\nOn Nov 25, 2012, at 9:25 PM, Sam Moffatt notifications@github.com wrote:\n\nSo why not handle the clean up in the loadFile method?\n\u2014\nReply to this email directly or view it on GitHub.\n. Updated with the new feature. I left destroy() as its own public method, and just call it in the __destruct() method as well as at the top of the loadFile() method.\n. I just checked the automated test log - http://developer.joomla.org/pulls/pulls/1701.html - and it says that this PR can't be cleanly merged. Can someone double check that or let me know what to fix? I'm not too sure what the issue is.\n. I think I figured it out - I rebased the changes from upstream/staging \n. Not ready to merge - UT Failures\n. I see your point - since you may not be chaining the methods together, you wouldn't want to destroy the handle preemptively. I'll get that fixed.\n\nQuick question while I'm in here. Why do we do this (I see it a lot in the platform):\n```\n$someVar = SomeClass::getInstance();\nreturn $someVar;\n// or specifically in this class\n$new = new JImage($handle);\nreturn $new;\n```\nI know we want to make the code easy to read, but that seems a little ridiculous. It could be easily replaced with the following and be just as readable:\nreturn new JImage($handle);\n. I'm good with this as is. I was thinking to change $new = new JImage; return $new; to return new JImage;, but I need to do more research on it prior to committing to that.\n. +1 - looking forward to using this.\n. @garyamort There are 14 checkstyle issues with using spaces to indent instead of tabs, etc. http://developer.joomla.org/pulls/pulls/1707.html\nCan you fix them up and leave a comment saying \"reopen\".\n. There you go. \n. I'll get this wrapped up for you. It's just some indenting space at the end of a line.\n. @elinw @mbabker Should we merge or close this? What is the CMS's view on it?\n. OK - thanks for the update.\n. +1 Very Useful\n. done\n. I was looking at adding to the documentation here - https://github.com/joomla/joomla-platform/blob/staging/docs/manual/en-US/coding-standards/chapters/php.md#class-definitions - but it's probably best to make it it's own page, since I'm sure the section will continue to grow. I'll get that added as well as inform the CMS dev list.\n. See documentation here - https://github.com/dongilbert/joomla-platform/blob/namespace_prep/docs/manual/en-US/coding-standards/chapters/namespacing.md\nIt's not completed yet, but it's what I could think of for now.\nAs for that compatibility layer section. We can take it or leave it, it's just my thoughts of what I would like to see happen, even if I maintain that layer myself for the 2 revisions after going fully namespaced.\n. I agree - a lot of the compatibility needs could be buffered in the legacy tree, and then the remainder picked up by the proposed compatibility layer.\nAs you suggested in the mailing list, I think it's a great idea to hold off until 13.1 to merge this. Want to change the milestone?\n. Thanks - we pretty much put all our eggs in the J! basket at work - so if I want to use namespaces and all that has to offer, I need to make it happen. \n. Suggested way to handle the compatibility layer.\nhttps://gist.github.com/4162595\n. Instead of __CLASS__, should we use $this when passing to a callable?\n. That's actually a good idea. Then I can drop the isSupported call in each filter. Why didn't I think of that?\nSent from my iPhone\nOn Nov 28, 2012, at 3:38 AM, Andrew Eddie notifications@github.com wrote:\n\nJust a thought. Why don't you add the code checking in isSupported into the constructor of JImageFilter?\n\u2014\nReply to this email directly or view it on GitHub.\n. Sure is a bug. Looking at the code it's clear what's going on, and it's obviously wrong. It just takes the last part of import $key and then prepends J (unless it's a helper class).\n\nA lot more thinking needs to be done on this than what I can offer right now (it's 12:25 am). There's really a fundamental issue here, since not all class names follow the Joomla Namespace / Folder structure. There would need to be quite a few special cases coded for things like the image filters as well as the JHtml sub classes (since in those situations the class names don't follow folder structure.)\nThe solution MAY be to build an config array that maps everything out. Each classname to the file it comes from, and then when you jimport, it searches that array first to see if it has a matching key, and if so, include the file.\n. Right, but we aren't ON an older version of Joomla anymore. And while\nautoloading everything would be nice, we aren't to that point yet with the\nclass naming structure.\nSo, we can ignore this since we're (hopefully, at least I am) pushing for\nfull proper namespacing in Platform 13.2, which I hope would also see the\ndeprecation of JLoader::import - or we can fix it for the current version\nof the platform.\nOn Mon, Dec 10, 2012 at 9:51 AM, Sam Moffatt notifications@github.comwrote:\n\nI think you're forgetting this is how we used to do things before we\nchanged to using the autoloader to start shifting towards. JAuthentication\nin the current tree still follows this convention:\nhttps://github.com/joomla/joomla-platform/blob/master/libraries/joomla/user/authentication.php\nYou would be doing a jimport('joomla.user.authentication') to get to the\nfile loaded properly. This is before the camel case autoloader support was\nadded and dates back to 1.5 era. For anything since then you should be\nusing the autoloader and not using jimport (remember jimport is just short\nhand for JLoader::import). Look back to an older copy of Joomla and you\nwill see this is working as intended.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1725#issuecomment-11201297.\n. So, I meant to create this in the CMS issue list. My bad.\n. What are the arguments against having it in the base class? Most (?) apps would require some sort of configuration data.\n. Ya - I see your point about blindly including libraries based on the presence of a particular file - an advanced hacker with knowledge of the system would probably find that very useful. :(\n\nThinking out loud here, but what if this were modified to autoload a json config file that would specify which libraries to automatically set up? Instead of blindly including every setup.php it finds, you would explicitly set which custom libraries to load.\nMy end goal here is to be able to easily add libraries / bundles / packages to the libraries folder, and have them \"just work\". Basically drop in files, and then start using the classes; all without having to worry about something being overwritten with an update.\n. OR (here's a thought) we add a new protected var in the JConfig for the site which specifies which libraries to autoload.\nphp\nclass JConfig\n{\n    ...\n    protected $autoloadLibraries = array(\n        'swift',\n        'stripe',\n        'moustache',\n        'joomla' // just throwing the idea in here.\n    ); \n}\nThe configuration for a site (in the CMS at least) does not get overwritten with an update, so it would be a good spot to place it in that situation.\n. Popular development frameworks like CodeIgniter/Laravel/FuelPHP and others do something similar to this to auto-load their sparks/bundles/packages. They have a $autoload param (or similar) in the app configuration that instructs the app on what to load. It's a convenient way to include custom libraries without too much hassle. It's part of the ease of use \"magic\" of the framework, if you will.\nhttp://ellislab.com/codeigniter/user-guide/general/autoloader.html\nhttp://laravel.com/docs/bundles\nhttp://fuelphp.com/docs/general/packages.html\n. @elinw I had completely overlooked the fact that the CMS already supported something like this with the ability to install libraries. I'm probably going to go that route instead.\n@LouisLandry You're correct in your assessment there - the app would blow up - so config surely isn't the best place for it. Also, I was using the write name when referring to \"autoload\" of the other frameworks; they generally call it something like \"alwaysload\" or \"eagerload\". Which better describes it's role in the app config - being that these are things that are required for the app to run.\nI'm going to close this for now. I still think something should be done - but this is not it. I can see potential issues with this specific implementation, so the PR is no good.\nMaybe the discussion about Packager, Composer, Phar, and dependency mangement could lead to a solution - https://groups.google.com/d/msg/joomla-dev-platform/0RtCZafdZy8/q0Y3-aTcj1wJ\n. Are there many unit test failures that fail in a similar fashion? If not, you could add a special case to do some extra work before the assertion. (So put it after $valid is declared on L138)\nphp\nif (IS_WIN)\n{\n    // Need to clean the path if we're on windows. It's a hack, I know.\n    $valid = realpath(JPATH_PLATFORM . '/joomla/form') . '/rules';\n}\n. I would say yes, since it works every where except Windows. No need to add an extra function call if it already works. Also, it makes it clear what the purpose of the hack is to those in the future who look at it and might want to refactor the code. Because looking at it, the realpath call seems completely unnecessary and I would want to remove it. But having the context of IS_WIN makes it clear, and I wouldn't remove it.\n. The PHP_EOL replacing \"\\n\" is fine, nothing to do there, IMO\nI'm not sure about the others - we'll need a professional opinion. I kind of still want to have a note saying not to remove the realpath.\n. That could work.\n. I have OS X - I'll apply the diff and let you know.\nOn Mon, Dec 17, 2012 at 7:23 AM, Morten Hundevad\nnotifications@github.comwrote:\n\nis there anyone with another system than windows that can give this pull\nrequest a test ?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1748#issuecomment-11441275.\n. Good here too - just didn't get a chance to post back.\n\nOn Mon, Dec 17, 2012 at 12:55 PM, Sam Moffatt notifications@github.comwrote:\n\nLooks good to me, merged.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1748#issuecomment-11454650.\n. If you're able, please edit that documentation for this item within github and make your changes. After that, you will be able to send in a pull request for that, and we can have the proper attribution back to you for this fix.\n. I'll add the proper documentation once #1753 gets accepted\n. My goal for cropResize was to resize the image either the given width if it's smaller or the given height if it's smaller (based on the width/height of the loaded image), and then crop. That way, you will see the either the actual top and bottom margins of the images with the sides cropped in, OR you'll see the actual left and right margins with the top and bottom cropped in.\n. Can do. (BTW - glad to see you back active. I've missed you for a month.)\n:+1:\n\nOn Mon, Jan 7, 2013 at 6:28 PM, Rouven We\u00dfling notifications@github.comwrote:\n\nCode wise this looks fine to me. We need to document all these constants\nbetter though. Would you mind adding docblocks for all of them or at least\nfor the one you're adding that descibe what each mode does? Thanks.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1751#issuecomment-11979121.\n. I don't mind, but it is a little bit of a hassle. :) The biggest heartache for me is that I haven't updated my joomla-cms clone in a long time. We'll have to figure something out, I think after 3.1 is released and the dust settles with the new framework, that this won't be as much of an issue, if at all.\n. Does it need a tracker item for updating to latest platform version of the file?\n. I agree - however, as I said, this shouldn't be much of an issue in the near future. No reason to set up systems for something that's not going to last for more than another month.\n. I'll double check on them, I might be having them mixed up.\n. I haven't, but only because I haven't used the filtering aspect of the package yet. It totally makes sense though.\n\nHowever, I would like to see the resized image to have the size prepended to the file name, rather than to the end just before the file extension. Currently, I need to break up the file name and then insert the desired size parameter when outputting the image in my code.\n``` php\n$filename = 'someimage.png';\n// Create thumbnails of the image. Then to output it in my component.\n$ext = substr($filename, strrpos($filename, '.'));\n$name = substr($filename, 0, strrpos($filename, '.');\n$image = $name . '_300x15' . $ext;\necho $image;\n```\nIf the size was prepended, we could just do\n``` php\n$filename = 'someimage.png';\n$image = '300x150_' . $filename;\necho $image;\n```\n. I can see your point. The way I implement it though, there aren't ever that many images in a directory, since i give each item it's own upload directory in media/component/images/products/#ID#/\nSo it would be easier for me to do it that way. It'd be nice to turn the file name creation into a callback or something else that could be overridden. \nSent from my iPhone\nOn Dec 12, 2012, at 5:19 PM, elinw notifications@github.com wrote:\n\nI like the size postpended because then alphabetical listing still works. I don't find sorting by first digit of the size that helpful.\n\u2014\nReply to this email directly or view it on GitHub.\n. @elinw - I created the ability to have a custom filename format and pass it to the createThumbs method. See #1754\n. @ianmacl are you referring to the Accepted Parameters sections? Those should be in lists. I'll have to check on the formatting.\n. I'm not convinced this is the best implementation, but the idea is definitely needed. If someone could come up with a better way to format the $format or to run a fancy preg_replace on it instead of my simple str_replace, let me know. I'll integrate it and update the PR.\n. Your comments make sense @pasamio - maybe instead of enforcing the min standard, we just provide clear documentation of what is available to use in the filename, and let them at it.\n. @phproberto's comment there is basically a duplication of the createThumbs method. If this PR had already been implemented, you could have saved yourself the time by specifying the format when callingcreateThumbs.\n. Some good points there @phproberto.\n\nThe createThumbs method does a good job in it's own right (great work there) - it does most of what any developer using the library would desire. I actually only recently discovered it, having been implementing my own code to accomplish the same thing in the past. I think the most common use of overriding the method would be to change the format of the filename. While I agree that the platform should contain a standard method, don't you think it would be reasonable for it to support a simple override?\nAlso, after thinking more on it, I don't think modifying the format via a parameter in the createThumbs method is the best way to approach this. Maybe a protected var that can be overwritten by extending classes would be better?\nphp\nclass JImage\n{\n    ...\n    protected $thumbFilenameFormat = 'STANDARD FORMAT';\n}\nOr, maybe abstract the filename creation to a createThumbFilename method?\nBut at that point, you're needing to extend the class, and you might as well override the createThumbs method.\nI think I just talked myself out of the PR. :(\n. So a setThumbFilenameFormat($format) method?\n. I'll put something together for the FW. \n. I proposed something similar to the PHP-FIG to modify PSR-0 so that it only returns true once the class is loaded. I think this is a good patch, and would help the CMS. If @elinw or @dextercowley could confirm that they would like this in the CMS, then I think it's good to merge.\n. I'm all for upgrading. +1 on that.\nHowever, I'd much rather see SwiftMailer support instead. It's LGPL - so maybe I should just issue a PR.\n. @elinw I see the benefits of creating a monolithic platform to develop on - but why reinvent the wheel when there are great solutions out there like SwiftMailer that can be easily integrated. \nI'd love to see the Platform focus on being the BEST core solution for MVC, Routing, and other base stuff, and then everything else is package / library / component based. We can then focus on each package individually if we feel the need to. Like making the best PHP Mailing package available, and the best Image management package. But - that's probably just the idealist in me talking - we are a long way from that, if ever.\n. :+1: \n. He added both in the required=\"required\" and aria-required=\"true\" in this PR - I think it would be best to add both, since not all browsers support mapping the required attribute to the aria attribute.\n. @SniperSister add a comment with the word \"reopen\" not in quotes, and it will reopen the pull request automagically. Then I can review the changes and it will update the developer.joomla.org pull tester as well (not right away though). :)\n. Statics aren't evil. \n. Looks better. One other thing is that the Pull Request needs to be made to staging, instead of to gh-pages.\nI like this and hope it will get merged. I'll inspect it some more once I get more time.\nPS. for full details on contributing to the platform, see here: https://github.com/joomla/joomla-platform/wiki/Contributing-to-the-Joomla-Platform\n. You should squash these commits so the old items don't appear in the history.\n. There's still an issue with this. I think it's because we have already merged the oauth code into the repo, and it might be conflicting. Can you try pulling from staging back into your branch to resolve any merge conflicts? And then you can push an update to this, and we can merge. If you have some trouble, I'll try to make some time to help you out with the conflicts.\n. Andrew,\nThanks for the pointers - I'll rework some of the language in the RFC and get this right. It's going to get lengthy. :)\nAs for a task list, it definitely is greater than just throwing some namespace and use constructs at the tops of files and calling it a day. I initially thought it could be a simple exercise - but I see it is definitely more than that now. No worries - I'm in this for the long haul.\nHow namespaces are structured and how we import classes between packages and such has a great impact on the flexibility of the platform in the future.\nOne of the bigger tasks at this point is clearly defining and separating packages to make them independent.\n. Edit: Seemless interoperability requires file structure to match namespace casing as well.\nEx: Joomla\\Application\\Web\\Router would map to Joomla/Application/Web/Router.php\n. Ya, I'm not happy about it either - but I think the revitalized interest in the platform is worth the extra effort. I got used to camelCased method names, I can get used to the same for structure.\n. Good news is - using git mv we can easily retain all file history. That's a plus.\n. The first 27 slides here are relevant to IoC, dependency injection, etc (how I think we could use it) - http://www.slideshare.net/neraath/ioc-with-php-8833643\nBut, as you said, outside scope.\n. Yes and no. They chose to split on _ because that's how PEAR and Zend functioned before native NS capabilities. You would still be 'compliant' to the standard if you did what you said, because the standard fails to mention that in order for the autoloader to work, it needs to specifically exclude basing your directory structure an anything else. \nThe goal of the RFC is for our code and others code to be able to work with the auto loader they and we are already using. JLoader::loadByNaturalCase is almost there, although I discovered a bug in it last night. \nSent from my iPhone\nOn Jan 5, 2013, at 3:17 AM, Andrew Eddie notifications@github.com wrote:\n\nSo, correct me if I'm wrong, but PSR-0 requires that underscore must be converted to a directory separator, but it doesn't preclude you from having any other rules that you desire. You could, for example, make each character of the class name a folder and you'd still comply with PSR-0, no?\n\u2014\nReply to this email directly or view it on GitHub.\n. The whole exercise of name spacing for me is based around 2 things. The ability for platform users to consume PSR-0 packages and for PSR-0 users to be able to seamlessly use platform code.  \n\nSent from my iPhone\nOn Jan 5, 2013, at 4:00 PM, Andrew Eddie notifications@github.com wrote:\n\nBy inspection of the code, the RFC is not going to be PSR-0 compliant:\nhttps://gist.github.com/221634#file-splclassloader-php-L131\nIF that's what the PSR meant - and it probably did. It's not what the PSR\nsays and this was done before the group implemented the MUST's and SHOULD's.\nIt just means we aren't going to fully compatible (but we will be fully\ncompliant to the letter of the law) in terms of people wanting to consume\nthe Platform with other PSR-0 underscore split code.\n\u2014\nReply to this email directly or view it on GitHub.\n. OH - I apparently had a brain fart when I read your response earlier Andrew.\n\nI think you are referring to my statement that _'s are anathema and not to be used in our code whatsoever.\nThe reason I made that statement is that I don't want our code to have classes with _'s in any situation. (I was considering using it earlier to solve the Cipher\\3DES problem, but I decided against it.)\nOur code will be compliant and able to be consumed by PSR-0 autoloaders / projects.\n. The PSR does say that it splits on namespace separator and on underscore. It goes on to say that casing in class name has no effect. So it could be assumed that if casing in class name caused an effect, that it is in fact non-complaint to the standard.\nTBH I want name spacing and LGPL so that the great code in the platform can be consumed by others, and so Joomla can be a respected platform once again. If you're set against that, then I drop my case for both items. \nSent from my iPhone\nOn Jan 5, 2013, at 8:22 PM, Andrew Eddie notifications@github.com wrote:\n\n@Amy, the gist I referred to is what is in PSR-0 \"standard\".\nhttps://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md\nSee the very last link.\nIn terms of compliance, PSR-0 does not say definitively that underscores are the only way you can determine how to form the real file system path. Whether that is what is intended or not is neither here nor there, PSR-0 is silent on the matter. On that basis I think we can rightly say we will be able to \"comply\" to the letter of the law with PSR-0, but that does not necessarily mean we will be compatible with everyone. It's a deficiency in PSR-0. The bigger problem we have is breaking on camel case because some libraries, like Zend, have files like /Foo/Bar/GooCar.php.\nAs for changing the PSR, I'm happy to take a case to the group but I don't want to own the processing of making \"our\" case. Amy, maybe you'd like to run with doing the work of making a draft and getting our community to discuss it. If the consensus is that we need to propose a change to PSR-0, I can take it to FIG. If nobody is interested in forming a case for change, we'll just keep on doing our own thing (maybe I need to say something about that on the mailing list).\nJust on that point I just want to make it clear I only have time to be a voting member of issues that interest this community. I don't have time to keep you up to date with what they are discussing etc and so on. You can subscribe to the mailing list yourself for that :) And as I've said, not every PSR is going to fit what we do - the PSR's are about normalising the average, not necessarily about being innovative and bleeding edge which is more where I'd like to see the culture of the Platform head.\n\u2014\nReply to this email directly or view it on GitHub.\n. YAY\n. Amy, the vendor name will be Joomla, not JPlatform. Also, for the time\nbeing, we will only be registering the root namespace of Joomla, not each\npackage.\n\nOverrides would function much the same. From what I understand, you can\nregister multiple locations to search, just like we currently do.\nOne thing I did notice though is that no part of the namespace is trimmed\noff when loading via the standard loader. Meaning it would be registered\nthis way:\n$loader->registerNamespace('Joomla', JPATH_LIBRARIES);\nAnd then for the CMS to override classes would have:\n$loader->registerNamespace('Joomla', JPATH_LIBRARIES . '/Cms);\nThen, for classes for the CMS to override would go in /libraries/Cms/Joomla.\nA name spaced JApplicationSite would go in\n/libraries/Cms/Joomla/Application/Site.php or it could be renamed to\nCms/Application/Site.php\nOn Saturday, January 5, 2013, AmyStephen wrote:\n\n@eddieajau https://github.com/eddieajau This has been confusing to me,\nas well, I've used a lot of Don's time trying to follow. I am concerned you\nmight still have a slightly different understanding when you say this:\n\"The style rules will be that we must manually namespace every class to\ngenerate the effect of the camel case being a folder/file break.\"\nI guess I'm not clear on what you mean by that. In reality, every class is\nnamespaced, but how you feed the class loader is by registering a namespace\nand associating it with a folder location. Then, those registered\nnamespaces are used to search for classes.\nI believe Don's plan is to register the namespace for each package. In my\nAutoload, I would have statements like the following for each package I\nwant to use from JPlatform:\nrequire_once VENDOR .\n'/symfony/Component/ClassLoader/UniversalClassLoader.php';\nuse symfony\\Component\\ClassLoader\\UniversalClassLoader;\n$s = new UniversalClassLoader();\n$s->registerNamespace('JPlatform\\Crypt', BASE_FOLDER . '/Vendor');\n$s->registerNamespace('JPlatform\\Database', BASE_FOLDER . '/Vendor');\n$s->registerNamespace('JPlatform\\Log', BASE_FOLDER . '/Vendor');\nand so on.\nFor the log package, only one namespace would be registered with the class\nloader.\nTaking the entry class as an example:\n1. it would have a single namespace line at the top of the file for\n   the namespace that represents the folder containing the file. It might be a\n   registered namespace, but if the files are in a subfolder for the package,\n   it will be the registered namespace + the name of the subfolder(s). That is\n   true for each and every file -- it must have a namespace line -- that must\n   be the first (non-comment) line - and that just PHP.\nNow, this next point I was confused on and I am thinking you might be, as\nwell.\n1. The class name defined within the file will change. Instead of\n   having a class named JLogEntry -- which translates to joomla\\log\\entry, the\n   class will be named Entry. And that's good, because the file is named\n   entry.php. (Although we might need to uppercase the first letter of those\n   filenames.)\nSo, the top of the JLogEntry file will look like this:\nnamespace JPlatform\\log;\nclass Log\n{\netc.\nIf I wanted to use this class in another class, I would instantiate it as:\n$class = 'JPlatform\\log\\Log';\n$instance = new $class();\nor I could define a use statement on the top of the page (don't recommend\ndoing it this way as overrides become difficult):\nnamespace in\\my\\class\\folder;\nuse Jplatform\\log\\Log;\nThen within a method:\n$instance = new Log();\nIs that your understanding, too? Or, are you thinking the old JLogEntry\nclass name will continue to be used for the class definition? (because that\nis not the plan - and it was a point of confusion for me until Friday.)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1787#issuecomment-11924638.\n. That's a good point Rouven. I had been trying to think of a way to\naccomplish the compat layer without having to load every class first, and\nyou're suggestion gave me some ideas.\n\nOn Mon, Jan 7, 2013 at 5:31 PM, Rouven We\u00dfling notifications@github.comwrote:\n\nThis all looks pretty good to me - except one thing: Performance of the\ncompatibility layer is going to stink. It will load every single platform\nclass. In an environment not using a bytecode cache (and probably even in\nthose using one) that won't be nice - especially when you consider you'd\nstill be doing that on cached pages when using the Joomla CMS cache.\nI haven't thought much about it but I think we could use JLoader to out\nadvantage here. If JLoader can't find a class it could look up the class in\nthe array, define the alias and try loading again. I'm not a 100% sure\nthat's a better or even a good idea, but I wanna put it out there so other\ncan think about it too ;)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1787#issuecomment-11977533.\n. While I'm in these files, I think it may be a good time to remove all the defined('JPATH_PLATFORM') checks in the class files. There really is no need for them. I mean, I understand their original purpose, but none of the platform files have any side effects other than declaring classes, constants, functions, and interfaces. Even IF they were accessed directly, there would be no way for them to execute anything.\n\nWhat say you?\n. @florianv - see the compatibility layer gist for the proposed PSR-0 namespace structure. I'm currently working on this in my PlatformNamespace and have completed 12 of the 42 packages so far.\nI'm leaving the current file / folder structure in tact to make merging interim PR's easier, until it's ready to merge. Once all the namespacing is done, I'm going to go back through and rename / move all the files to the new structure.\nSee the second bullet under Side Effects > Potentially Negative\n. Awesome. I'm sure you know this, but for others who'd like to contribute to\nthe effort, this is how you work on my PlatformNamespace  branch.\n- Fork https://github.com/dongilbert/joomla-platform to your account\n- clone to your work environment\n- git checkout PlatformNamespace\n- go to town.\n- Send PR's like normal.\nAs for the namespace process and how to do it, check out the work done in\nthe access through document packages so far to get an idea. I'll\ndocument the ns process later.\nOn Thu, Jan 10, 2013 at 3:36 PM, Florian Voutzinos <notifications@github.com\n\nwrote:\nSorry, I didn't see this bullet.\nIt looks very good :) there is quite a bit of work. I will send you some\npull requests.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1787#issuecomment-12120016.\n. I've added a Contributing to the Effort section in the RFC. If you are interested in helping / getting things done, please check off what you'd like to be responsible and leave a comment that you are doing it, so we can track and not duplicate effort.\n. In the 2 hours since he posted that message, @florianv completely namespaced 8 packages AND gave me some pointers on an easier way to complete this task. Thanks for the help and awesome work!\n. AAANNDDD all packages have now been namespaced. I'm going to work on the compatibility layer and testing.\n. Thanks Florian. You can send a PR or I'll get to it later. \n\nFor the tests, I'm not wanting to rewrite the tests to use the new class names yet. We need to test the compatibility layer, so I'm currently trying to get all the tests to work using that instead. If all the tests can pass, then I can be confident was have a solid foundation to start with there. \nSent from my iPhone\nOn Jan 14, 2013, at 2:49 AM, Florian Voutzinos notifications@github.com wrote:\n\n@dongilbert In https://github.com/dongilbert/joomla-platform/tree/PlatformNamespace/libraries/Joomla/Cache/Storage\nMemcached and Memcache have an extra e : Memecached\n@AmyStephen The examples look good :)\n\u2014\nReply to this email directly or view it on GitHub.\n. @florianv, I updated the cache file names. Thanks for pointing that out.\n\nThe current state of testing is that it's actually completing ~ 65% of the\ntests. There's a lot of issues with test classes including their own copies\nof the files via \"include_once\" which doesn't work, since the file\nstructure changed. Some of the tests that are completing are still failing,\nbut I don't see it as being a huge problem to figure out once I sort out\nthe fatal errors due to bad testing practices. :)\nThanks @amystephen. :+1:\n. Update: Now able to run all the tests, 100%. There are 51 failures and 140 errors. Shouldn't take long to fix. :)\nhttp://d.pr/i/MjoJ\nEdit: I messed up a commit, used git reflog to rewind to a commit, and then deleted the branch, losing all the changes to test. :( NBD, just gotta go through them all again and remove the include_once and require_once calls. Again. arggghh\n. And we're back. :)\nMost failures now are because of things like this: http://d.pr/i/og5W\nphp\n44) JHtmlBehaviorTest::testCalendar\nFailed asserting that two arrays are equal.\n--- Expected\n+++ Actual\n@@ @@\n Array (\n-    'JHtmlBehavior::calendar' => true\n+    'Joomla\\Html\\Behavior::calendar' => true\n )\n. I've worked out all the 140 errors. It pointed out some places where I messed up the namespacing or imported the wrong class, so that's good.\nWe're currently at 13 failures and 0 errors. Those are all just referencing old class names, so - no big deal!\n. Thank you Amy. Another update: 0 failures or errors! YA!\nI wouldn't say single-handedly. @florianv played a big part in it. :+1: \nThere are a few hacks where classes are being declared twice that I have to take care of, but other than that, we are golden. The test suites are mostly running entirely on the old class naming structure just fine via class_alias. The only areas that were failing and I had to replace with the new class names were where it was directly comparing names via get_class and when the test was asserting that a class was an instanceof an old class name. It would be working, except I don't load in and alias all the old class names any more, I only alias as needed. Thanks to @realityking for that idea. \n. All testing problems resolved. There was an issue with my PSR-0 classloader that wasn't exactly playing nice. We're all good now.\nThe reason I built a PSR-0 classloader instead of using a default one is that we have some special cases what with the need to class_alias all the old style class names. I'm going to commit all my changes and push for testing by others.\n. I've added a loadByPsr0 method to JLoader that handles loading all the platform classes as well as any 3rd party vendor code that you may include in your application. You register a namespace the same way you would with the previous loadByNamespace* methods, with one significant difference. The loadByNamespace* methods always removed the root namespace when searching from the filesystem. They function exactly like the prefix register and autoload method. PSR-0 does NOT remove any part of the namespace when loading from the filesystem. So, the difference is as follows:\n`` php\n/**\n * Registering a namespace for old namespace loaders.\n *\n * When loadByNamespaceMixedCase is called, it stripsJoomla`\n * from the namespace, and then builds the file path. So when registering\n * the namespace, you need to include that path in your register call.\n */\nJLoader::registerNamespace('Joomla', JPATH_PLATFORM . '/joomla');\n/\n * Registering a namespace for PSR-0 loader.\n \n * The main difference is you don't include the folder that matches\n * the namespace you are registering, because when PSR-0 transforms\n * the class name into a file lookup path, it doesn't remove any part.\n /\nJLoader::registerNamespace('Joomla', JPATH_PLATFORM);\n```\nThe downside of the first approach is the advantage of the second. With the first approach, you cannot register sub namespaces, only root ones. registerNamespace('Joomla\\Platform', JPATH_PLATFORM); would register, but it would fail to load the file from the file structure, because it would loop through JLoader::$namespaces looking for the Joomla root namespace, and never find it.\nYou can find the proposed PSR-0 autoloader here - https://github.com/dongilbert/joomla-platform/blob/PlatformNamespace/libraries/loader.php#L592\n@realityking You can see how I used your approach to aliasing class names via JLoader, instead of an all in one shot right here - https://github.com/dongilbert/joomla-platform/blob/PlatformNamespace/libraries/loader.php#L571\n. Another update: I've been testing the namespaced platform more by replacing the libraries/joomla folder and the libraries/loader.php file of the JTracker app with their namespaced counterparts. There were a few hiccups that showed me some slight modifications to the loader that needed to be made, but overall, the system is stable. \nThe part that was broken was overriding the new namespaced classes with an old style override. It's a bit of a hack with the autoloader, but it makes sense, and it works beautifully. I'll count that as a win.  See the updated compatLayer method here: https://github.com/dongilbert/joomla-platform/blob/PlatformNamespace/libraries/loader.php#L571\n. There may be, I know FuelPHP took this approach with some things. You could override a core class by naming your own and then registering it in the bootstrap. You can do that now in J! if you copy the class to the new destination and then register it to the autoloader. However, this circumvents doing cool things with namespaces and such, so that, instead of copying the core class, you can have your class extend and then override, but still call the same class in code.\n``` php\nApp::alias('Auth', 'my/custom/auth.php');\n// auth.php\nnamsespace My\\Custom;\nclass Auth extends \\Joomla\\Authentication\\Auth {}\n```\nThen, the rest of the app uses your custom auth as the auth class instead. It is useful, and it doesn't require copying entire classes to a new file, you can simple extend and override.\n. 2 months until the scheduled release of 13.1. This completed code is looking really solid; I've replaced the libraries/joomla folder of JTracker and the app remained solid. I'm going to start testing on a CMS level and do the same thing. I don't expect any issues, but if there are, they should be relatively easy to fix.\n. Ok - That's next on my todo list for moving this forward. \n. Certainly.\nOn Mon, Mar 4, 2013 at 3:01 PM, Andrew Eddie notifications@github.comwrote:\n\nI think we can safely say we have this in hand now.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1787#issuecomment-14405212\n.\n. I agree this should use str_replace instead. I like the looks of it. Also, if a CMS'er could confirm this as good (@elinw) then this can be merged. The framework has dropped this CMS specific router. \n. Looks promising, but will require extensive documentation IMO before I could take a serious look at it. Great work!\n. This is a good way to handle the deprecations while at the same time reducing package inter-dependence. However, it should be noted, that downstream users will need to set their own error handler so that trigger_error doesn't break their sites and show the deprecated notices to non-admins.\n. does trigger_error cause it to fail even if it's just an E_DEPRECATED?\n. As Andrew said, it could cause unintended consequences. Deprecated logging has been added to the CMS, and we've switched to PSR-3 logging in the framework. So I'm closing this. \n. I think we can retain the folder structure we currently have in regards to \"vendor\". I have a PR open that adds a few lines to the composer.json file which tells composer where to install packages. I would elect to retain the libraries structure if we can b\n\nSent from my iPhone\nOn Jan 12, 2013, at 6:15 AM, Florian Voutzinos notifications@github.com wrote:\n\nYes. We could add the composer.json file and have the library copied in vendor/Psr (like that it matches the folder in which composer will install it). So there is still this fallback for people using the full joomla platform without installing it via composer.\n\u2014\nReply to this email directly or view it on GitHub.\n. So no one is against this strategy? :) I'll post it on the platform list and see if we can get some more action going on here.\n. I agree, but if you look at the JFactory::getDbo() method here https://github.com/joomla/joomla-platform/blob/12.1/libraries/joomla/factory.php#L589 you'll see that this is accounted for in the creation of the database object. While it would be convenient, it may break existing tutorials that instruct users how to implement the database classes in their application. So, I think we should leave it as is, but potentially add something to the docs to make it clear.\n. You're approaching if with the right idea, but your implementation is slightly off. Where is are you running this code? In your com_jehuti/jehuti.php file? If so, your call should be registerPrefix('Jehuti', DIR);\n\nThen, when using a class, it will look for JehutiModel in com_jehuti/model/model.php and JehutiModelBase in com_jehuti/model/base.php\nHowever, you must note, that if your building this in the CMS as a component, you'll have issues withe the default configuration. I can send you a screenshot of my directory structure if you'd like later when I'm on my computer. \nSent from my iPhone\nOn Jan 17, 2013, at 1:20 AM, \"Nestor E. Ledon\" notifications@github.com wrote:\n\nUsing the version of J! Platform that comes with the latest version of J! CMS, auto loading using registerPrefix or discover don't seem to work.\nThe below does squat, my files and class names follow convention:\nJLoader::registerPrefix('Jehuti', JPATH_PLATFORM . '/../components/com_jehuti/controllers/');\nJLoader::discover('Jehuti', JPATH_PLATFORM . '/../components/com_jehuti/controllers/');\nHowever if I load individual files, works fine:\nLoader::register('JehutiController', JPATH_PLATFORM . '/../components/com_jehuti/controllers/jehuti.php', true);\nJLoader::register('JehutiModel', JPATH_PLATFORM . '/../components/com_jehuti/models/jehuti.php', true);\nJLoader::register('JehutiView', JPATH_PLATFORM . '/../components/com_jehuti/views/jehuti.php', true);\n\u2014\nReply to this email directly or view it on GitHub.\n. Here's a basic structure: http://d.pr/i/5qF7\n\nAnd here's my components bootstrap file: http://d.pr/i/FX4\nI'm going to write up a blog post about it eventually. Not sure when I'll\nhave time though. Hope it helps.\nOn Thu, Jan 17, 2013 at 9:57 AM, Nestor E. Ledon\nnotifications@github.comwrote:\n\nThanks, I would really appreciate a if you could send me a diagram or\nscreen shot of a working structure for CMS.\nCurrently this is mine:\n[image: Inline image 1]\nI'm running the code from the highlighted file:\ncom_jehuti/site/jehuti.php\nI'm assuming this is wrong?\nOn Thu, Jan 17, 2013 at 1:33 AM, Don Gilbert notifications@github.comwrote:\n\nYou're approaching if with the right idea, but your implementation is\nslightly off. Where is are you running this code? In your\ncom_jehuti/jehuti.php file? If so, your call should be\nregisterPrefix('Jehuti', DIR);\nThen, when using a class, it will look for JehutiModel in\ncom_jehuti/model/model.php and JehutiModelBase in\ncom_jehuti/model/base.php\nHowever, you must note, that if your building this in the CMS as a\ncomponent, you'll have issues withe the default configuration. I can\nsend\nyou a screenshot of my directory structure if you'd like later when I'm\non\nmy computer.\nSent from my iPhone\nOn Jan 17, 2013, at 1:20 AM, \"Nestor E. Ledon\" notifications@github.com\nwrote:\n\nUsing the version of J! Platform that comes with the latest version of\nJ! CMS, auto loading using registerPrefix or discover don't seem to\nwork.\nThe below does squat, my files and class names follow convention:\nJLoader::registerPrefix('Jehuti', JPATH_PLATFORM .\n'/../components/com_jehuti/controllers/');\nJLoader::discover('Jehuti', JPATH_PLATFORM .\n'/../components/com_jehuti/controllers/');\nHowever if I load individual files, works fine:\nLoader::register('JehutiController', JPATH_PLATFORM .\n'/../components/com_jehuti/controllers/jehuti.php', true);\nJLoader::register('JehutiModel', JPATH_PLATFORM .\n'/../components/com_jehuti/models/jehuti.php', true);\nJLoader::register('JehutiView', JPATH_PLATFORM .\n'/../components/com_jehuti/views/jehuti.php', true);\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/joomla/joomla-platform/issues/1804#issuecomment-12357403>.\n\n\nNestor Ledon\nCEO | Terra Chaos Corporation | www.terrachaos.com http://terrachaos.com\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1804#issuecomment-12374031.\n. The main difference is, if you register a prefix, it follows a pattern when\ntrying to autoload the file.\n\nSo I have registerPrefix('RV', DIR). When I try to use RvModelResort,\nit looks for it in DIR . '/model/resort.php';\nHave a look at the JLoader documentation here:\nhttp://joomla.github.com/joomla-platform/\nOn Thu, Jan 17, 2013 at 12:56 PM, Nestor E. Ledon\nnotifications@github.comwrote:\n\nThanks a ton. If I'm not mistaken though,my structure is the same as\nyours. I'll review your bootstrap maybe I'm missing something.\n[image: app-struc]https://f.cloud.github.com/assets/2592281/75817/7739faec-60d7-11e2-90e1-db99585cb77c.png\nThanks again for the response.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1804#issuecomment-12383033.\n. Remove the trailing whitespace and then update, and we'll be able to get this merged.\n. After it's fixed, please leave a comment simply saying \"reopen\" and it will reopen for you. :+1: \n. We can, no problem, but we like it when people who discover bugs / add features get to have their name added to the contributors list. So, we'll get it wrapped up, thanks for finding the issue.\n. :+1: \n. The 120 bytes saved in this PR turns into a negative net loss of electricity \"savings\", considering the time and energy it took to make these automated changes. While noble, your project is misguided. It's like \"green\" advocates that say \"let's tear down this building and put up an energy efficient one!\" It would take decades to even see a slight repayment on investment. Sorry to burst your bubble. :-1: \n. If someone with sqlsrv access can confirm this, I think it's good to merge. @mbabker? (Sorry, always picking on you.)\n. That's good to know. I trust testing and production usage more than one off testing, TBH. I just don't have access to sqlsrv (that I know of) to test it myself.\n. Nikolai, there is discussion amongst the maintainers about modernizing the framework, implementing namespaces, utilizing composer and packagist, etc. This would include releasing \"Joomla Packages\" that can be plugged in to any other framework using composer. It's still in the infant stages, but looks promising.\n\nWhere this relates to this PR is that our Github package is arguably the best package that utilizes GitHub API v3, and would be very useful to other devs to consume. What you have here is a complete implementation, and what we have already in the platform is incomplete (judging from the PR's coming in against it). So, the thought is to not introduce BC-incompatible changes to the current platform, and release new code under the new system. More info will be provided in the coming weeks.\n. OH - I thought you were questioning why there was no comment, not about the quality. \nI think it is good, I need to dig through it more thoroughly, but a cursory review gives me good feelings about it. The fact that it is a complete implementation that follows the GitHub API doc flow is a great bonus - very useful.\nSo, yes, definitely deserves more work.\n. Closing because this cannot be automatically merged. \n. Definitely an issue. We'll have to work out the best way to accomplish this, but it surely needs to be done.\n. I'm going to push in some code that sets a 500 error, if everyone is ok with that?\nI'd like to know what @eddieajau @mbabker @realityking think as well. \n. So, after looking at it, this is already taken care of in JLoader::createDbo()\nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/factory.php#L583\n. I'm not sure on this one way or the other. Love to have @eddieajau's take on it. I know the new MVC works currently without this, but I could see it as being advantageous, based on how you approach your application architecture.\n. Looks good and makes sense. If you're able to, could you write a unit test for this change? Currently, JDocumentHTML has 0 tests written, so it would be nice to start here. \nhttps://github.com/joomla/joomla-platform/blob/staging/tests/suites/unit/joomla/document/html/JDocumentHTMLTest.php\n. Some advanced configs might move core files outside of the open_basedir, so this check does need to be made. Also, it is a security feature, so you'll need some good unit tests to back up the change. \nWith that said, I'm not a fan of the filesystem package that this is a member of, so any attempts to improve it are welcome. :)\nFinally, I'm on a *nix box, so I can't verify this as an issue. Maybe @mbabker can help here?\n. Valid points. You're correct that it is a nice error message instead of a fatal, which I would hope you want to avoid. :)\nSo, yes it is an annoyance. Are you trying to fix it for the CMS? Or for a custom app you've written using the platform? (So I can best direct you on how to proceed.)\n. Ok. The absolute fastest way for you to see the fix is to create an override. Even if we merged this today (which can happen, if a maintainer with a windows machine can verify the fix), it wouldn't make it into the CMS for a while. However, there are some issues on CMS 2.5 that would require a little extra effort to be able to override it. What CMS version are you using?\nSent from my iPhone\nOn Feb 17, 2013, at 10:31 AM, Dirk-jan notifications@github.com wrote:\n\nI think open basedir restrictions raises warnings instead of fatal errors (in PHP that is).\nI'm trying to fix it for the CMS. I've had it a few times that one of my customers had this issue with hosting on Windows + IIS.\nFixing it in the core manually there will bring the error back when they upgrade.\n\u2014\nReply to this email directly or view it on GitHub.\n. Ok. That's a bit of a challenge to override because that specific class is not supported by the auto loader. Classes are jimport()'d instead. However, I've created a process to allow for overriding these items. I'm away from my laptop right now, but I'll put an explanation together for you when I get a chance later today. \n\nSent from my iPhone\nOn Feb 17, 2013, at 10:41 AM, Dirk-jan notifications@github.com wrote:\n\nVersion 2.5.9\n\u2014\nReply to this email directly or view it on GitHub.\n. Here's a basic explanation in screenshot form. http://d.pr/i/dcx\n\nSent from my iPhone\nOn Feb 17, 2013, at 10:41 AM, Dirk-jan notifications@github.com wrote:\n\nVersion 2.5.9\n\u2014\nReply to this email directly or view it on GitHub.\n. By the way, the benefit of going through this exercise instead of editing\nthe file in question directly is that when upgrading you only need to worry\nabout keeping your customized libraries/loader.php up to date rather than\nevery jimport()'d file that you make edits to.\n\nOn Sunday, February 17, 2013, Don wrote:\n\nHere's a basic explanation in screenshot form. http://d.pr/i/dcx\nSent from my iPhone\nOn Feb 17, 2013, at 10:41 AM, Dirk-jan >\nwrote:\nVersion 2.5.9\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1828#issuecomment-13688671.\n. Nice workaround there @mbabker :+1: \n. Can you use reflection to fake it? I'll have to take a closer look when I get back in front of a computer. \n\nSent from my iPhone\nOn Feb 16, 2013, at 6:37 PM, Michael Babker notifications@github.com wrote:\n\nAny suggestions on how to get past that error? This method is unique in that it's not strictly returning the response object, but I have it doing post processing on the implied response. The test failure occurs because the method doesn't have the response data to process.\n\u2014\nReply to this email directly or view it on GitHub.\n. Looks better Michael. \n. http://wheningit.tumblr.com/post/31693200338/when-i-merge-my-own-pull-requests-part-ii\n. Well worth it. :+1:\n\nOn Fri, Feb 15, 2013 at 3:22 PM, Chad Windnagle notifications@github.comwrote:\n\nDon I'm going to waste the rest of my work day on that Tumblr. Thanks.\n\n[image: Small Logo] http://www.s-go.net/\nChad Windnagle\ns-go Consulting\n607-330-2574 x103\n607-229-6260 (Cell)\nWebsite Design - SEO - Video http://www.s-go.net/\nFollow Me: [image: Facebook] http://www.facebook.com/sgoconsulting\n[image:\nLinkedIn] http://www.linkedin.com/in/drmmr763 [image:\nTwitter]http://www.twitter.com/drmmr763\nOn Fri, Feb 15, 2013 at 4:19 PM, Don Gilbert notifications@github.comwrote:\n\nhttp://wheningit.tumblr.com/post/31693200338/when-i-merge-my-own-pull-requests-part-ii\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/joomla/joomla-platform/pull/1832#issuecomment-13628571>.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1832#issuecomment-13628722.\n. @piotr-cz this is a perfect example of being a PHP dev and not strictly a \"Joomla Dev\"\n. I think we should do the obvious thing and use filter_var($email, FILTER_VALIDATE_EMAIL); It makes the most sense, is the most widely accepted, and let's be honest - Joomla validation isn't the smartest thing around. :)\n\nThis is the approach we will be taking in Joomla Framework. It's time to stop being a \"Joomla Dev\" and start being a \"PHP Dev\".\n. I would say that if a sysadmin on an Intranet is needing to verify emails to a different standard than what is possible via filter_var, then it is their responsibility to write an override or custom validator. The platform needs to provide the base standard, not edge cases. But it's not a hill I'm willing to die on.\n. IMO, this is entirely dependent on what the CMS wants to do with it. FWIW, the Framework is going to use filter_var($email, FILTER_VALIDATE_EMAIL)\n. This looks good - It's another needed addition. Can you add unit tests for this?\n. Very cool - thanks for the work. There's another pull request that\ncompletely refactors JGithub and already contains code for fetching\nrepositories data, but it breaks backwards compatibility. So, we may not be\nmerging that here, but instead release it separately. So, yours is still\nneeded.\nThere are also going to be some code style issues due to improper spacing\nin your code, but I don't have a link to provide for you to review the\nerrors, since the checkstyle process hasn't run yet. Once it does, I'll\npost it so you can review.\nOn Tue, Feb 19, 2013 at 10:50 AM, Daniele Rosario\nnotifications@github.comwrote:\n\nIn the near future i hope to be able to. I added this class for a project\ni'll present at JAB13 and thought to share it since it could've been\nneeded.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1835#issuecomment-13783172.\n. Gary, your commit says a \"potentially multi-dimensional array\" - will it always be multi-dimensional?\n. Any tests we could implement to protect this from causing regressions when merged? Need to make sure not to break anything existing.\n. This is currently unmergeable. Please rebase your changes from staging and then reopen the pull request by leaving a comment \"reopen\"\n. As it is very similar to an already fixed tracker item, and it's adding no BC problems, I'll merge this.\n. Since this is a CMS specific issue, I would defer the check on this to someone like @dextercowley or @elinw to make sure it is the desired functionality.\n. I would agree with that Elin, which is the reason for my first comment. It's not that I don't want to fix or I don't think it's a bug, it's just highly CMS specific, IMO.\n. So I agree with Elin, JInstaller should move to the CMS. Any opposition?\n. @elinw Do you want to merge this PR before the package moves to CMS?\n. Looks good. All the tests are passing on my end.\n. OK - I'll take another look when I have time to give it a proper review of quality as well as functionality.\n\nThanks for doing this.\n. Awesome. Great catch.\nFor everyone else:\nTHIS IS WHY WE HAVE UNIT TESTS PEOPLE!!!\nOn Wed, Mar 6, 2013 at 2:49 PM, Arlen Walker notifications@github.comwrote:\n\ncountMenuChildren can't return anything but zero, because the query is\nnever set. This change sets it.\nYou can merge this Pull Request by running\ngit pull https://github.com/Paladin/joomla-platform patch-1\nOr view, comment on, or merge it at:\nhttps://github.com/joomla/joomla-platform/pull/1844\nCommit Summary\n- Update html.php\nFile Changes\n- M libraries/joomla/document/html/html.phphttps://github.com/joomla/joomla-platform/pull/1844/files#diff-0(1)\nPatch Links:\n- https://github.com/joomla/joomla-platform/pull/1844.patch\n- https://github.com/joomla/joomla-platform/pull/1844.diff\n. It's not used at all in CMS 2.5 or 3 in the core. It's only occurrence is when it is declared.\n. What's your point Elin? The code is broke, and needed to be fixed, unless your proposal was to leave it as broken code. I was simply stating an observation with my previous comment, that it's not used anywhere. Obviously Arlen was using it for something, since he discovered the error. I was simply stating that it wasn't use in core. \n. I would also recommend using the autoloader, since JTable essentially tries to autoload the class via class_exists before it traverses the $_includePaths variable. You'll find that this approach is also faster than what you've proposed. However, 2-3 years ago, I would have accepted this in a heartbeat, but now that my understanding of the autoloader etc has increased, I find using it for all my class loading needs is really where it's at. It really is faster than our own \"autoload\" for table classes that utilizes JFile.\n. Arlen, there are a couple check style errors, can you fix those up if you're still interested in getting this merged? http://developer.joomla.org/pulls/pulls/1846.html\n\nIt may not be worth the time to fix though, as the consensus seems to be it would be better to use the autoloader. But, I'm not opposed to the CMS picking this up instead, if @elinw or @mbabker could offer the CMS's take on this, that'd be good to know before fixing up the 2 issues.\nJust leave a comment saying \"reopen\" if/when you're ready for it to be reconsidered.\n. @elinw @dextercowley @mbabker This should probably be merged into CMS asap, including as a bug fix in 2.5.x, since it can result in hard to track fatal errors for end users, and introduces no breaks in backwards compatibility.\n. We didn't use your code as a base for this, as your code was created on github a total of 16 hours ago. Also, you are spamming several projects on github trying to get them to give you attribution for code you didn't create within their project. Please, stop the madness.\n. Now this is something I could get behind. \n. @eddieajau Should we look into doing this just on the new Framework InputCLI instead of here in the platform?\n. Closing, as it has code style issues. It is a needed change, but for the most part we are not accepting new Pull Requests on this repo. The place to submit this is the CMS, which you already have it on the tracker.\n. We use Alman style brackets, don't put spaces after opening braces and use tabs instead of spaces:\nphp\n    if (!is_link($file))\n    {\n        @chmod($file, 0777);\n    }\nAnd also, it was requested to make a pull request on Github on the CMS, not the platform. Which you already have done as well: https://github.com/joomla/joomla-cms/pull/971\n. You can't turn off PR's, only issues and the wiki. \n. This repo is no longer accepting Pull Requests. Please send this PR to http://github.com/joomla/joomla-framework\n. I wish there were an easier way to disable PR's. Sorry about the double work.\n. This Platform repo is not taking pull requests. Please make this directly against the CMS class you are modifying. Additionally, your code is a bit off, in that you cannot have two HTML elements with the same id.\nWhile not ideal, the current best way to solve this is to add a null check in your the bind() method of your table class that corresponds to the form you are using to edit / save the data. Additionally, you should modify any table columns that are associated with a checkbox to be NOT NULL and then if the submitted value is empty, set the field to an empty string.\n```\nclass ComTableFoo\n{\n    public function __construct(&$db)\n    {\n        parent::__construct('#__com_foo', 'id', $db);\n    }\npublic function bind($src, $ignore = array())\n{\n    // If the checkbox isn't set, that means it is unchecked. So set the value to empty string.\n    if (!isset($src['checkbox_field_name'))\n    {\n        $src['checkbox_field_name'] = '';\n    }\n\n    return parent::bind($src, $ignore);\n}\n\n}\n```\n. I misread the code change. It looked like you had duplicated the id across the hidden and actual field. Sorry for that.\nWhile this should not be necessary (in your opinion) it currently is. If you want to fix the HTML spec so that unchecked checkboxes submit to POST, then by all means contact W3C and have them fix it.\nIf you want to fix it in Joomla, then you're going to have to submit this PR against the CMS. As stated in the repo description:\n[READ-ONLY] This repo is not accepting pull requests. Please see joomla/joomla-cms or joomla/joomla-framework.\n. This repo is closed for new PR's. Please make this as a pull request to the CMS here: https://github.com/joomla/joomla-cms\n. This repo is frozen and no longer accepting Pull Requests. If this is relevant for the CMS. Please submit to https://github.com/joomla/joomla-cms\n. Thank you :+1: \n. True. However, after thinking about it some more, we don't need to run the checks on $os again, we should just compare against IS_MAC or IS_WIN.\nSomething like:\ndefine('IS_UNIX', (IS_MAC === false && IS_WIN === false));\n. I thought the same thing. But then realized its just decreasing the value by one. It looks odd because your expecting the single arrow before $this, instead of the de-increment operator. For clarity, this should go after if it's not for a return value.\nBlame @ianmacl - https://github.com/dongilbert/joomla-platform/blame/8f1a5ced1c4f39f77798fa641dd997c6697c840c/tests/suites/legacy/request/JFilterInput-mock-general.php#L45\n. Explanation: http://php.net/manual/en/language.operators.increment.php\n. Gotcha. I'll get that taken care of and pushed back.\n. Since this class now extends JFormFieldText, it falls back on the setup method there, so it should have access to the $placeholder property \n. We just need to add the placeholder variable in the retuned input string in the getInput method.                                                       \n. Thanks - this has been fixed.\n. This sets $foo to boolean true every time. I'm running PHP 5.3.15. To get it to set to 'The default' if $object->foo is not set, you need to use the shorthand ternary ?:\n```\n$object->foo = null;\n$foo = $object->foo || 'The default';\nvar_dump($foo);\nbool(true)\n$foo = $object->foo ?: 'The default';\nvar_dump($foo);\nstring(11) \"The default\"\n``\n. Should the?=` on this line be ?-\\? I think that will fix the UT failures.\n. Should be class_exists('\\PDO'); <-- needs two \\ since the \\ is also the\nescape character. You need to escape the escape.\nI'm going to merge this in to my PlatformNamespace branch, since I'm going\nthrough every file again as it is, and I know I missed some things before.\nSo - I should close this request. :)\nOn Mon, Jan 7, 2013 at 6:33 PM, Rouven We\u00dfling notifications@github.comwrote:\n\nIn libraries/joomla/database/driver/oracle.php:\n\n@@ -519,7 +519,7 @@ public function unlockTables()\n     */\n    public static function isSupported()\n    {\n-       return class_exists('PDO') && in_array('oci', PDO::getAvailableDrivers());\n-       return class_exists('PDO') && in_array('oci', \\PDO::getAvailableDrivers());\n\nShouldn't this be class_exists('\\PDO')?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1721/files#r2572027.\n. \n",
    "zian974": "Bonjour, \nyou can find the code snippet that i use here: git://gist.github.com/1231162.git (https://gist.github.com/1231162).\nThe use of JFile:: delete is on the line 161.\nSorry, but I left the entire script.\nAnd What about the issue n\u00b0364.\nIf a field of a table has already received a value, it is impossible to assign a new value to null afterwards.\n. ",
    "nibra": "Great news, thank you!\n. Ca n you determine, which hashing algorithm your installation uses? I've heard of other installations that needed more than 64 bytes, and worked well witch 128 bytes.\n. ",
    "madhurad": "I am using 1.7.3 version and facing this issue, changed from 32 to 64 bytes still issue is there.\n. ",
    "dextercowley": "Christope, this change breaks the unit test. I get 4 failures with this. These failures are tests from previous security issues. Mark\n1) JFilterInputTest::testCleanWithImgWhitelisted with data set \"security_20110329a\" ('string', ' ', ' ', 'From specific cases')\nFrom specific cases\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n- \n+img src='\n2) JFilterInputTest::testCleanWithImgWhitelisted with data set \"security_20110329b\" ('string', ' ', ' ', 'From specific cases')\nFrom specific cases\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n- \n+img src='\n3) JFilterInputTest::testCleanWithDefaultBlackList with data set \"security_20110329a\" ('string', ' ', ' ', 'From specific cases')\nFrom specific cases\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n- \n+img src='\n4) JFilterInputTest::testCleanWithImgBlackList with data set \"security_20110328\" ('string', ' ', ' ', 'From specific cases')\nFrom specific cases\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n+img src='\n. I should have added that this fix has already been committed to the CMS repo. Thanks.\n. I hope this can be committed soon. We would very much like to get this in before the CMS 2.5 beta (so platform 11.4?). Thanks!\n. Hi Andrew. I didn't commit anything to the platform, so I'm not sure\nwhat you are asking me to do. I'm on line if you want to chat. Thanks.\nMark\nOn Thu, Dec 15, 2011 at 2:03 PM, Andrew Eddie\nreply@reply.github.com\nwrote:\n\nI give up. \u00a0The hooduku commits put back a heap of stuff that was unnecessary or wrong. \u00a0Please revert them.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/635#issuecomment-3169850\n. Thanks for the Eclipse tip! Mark\n\nOn Mon, Dec 19, 2011 at 5:18 PM, Nikolai Plath\nreply@reply.github.com\nwrote:\n\nAlmost ;) three new ones.. Tip: Eclipse save actions: remove trailing white space ;)\nhttp://elkuku.github.com/pulltester/pulls/657\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/657#issuecomment-3212720\n. \n",
    "polymorphm": "@elinw, yes. thanks! :)\n. ",
    "oc666": "Hey all,\nsorry to pop-up this issue out of the basement, but really good use case is when plugin needs to override component view layout. It can't be done with the current state of joomla.\nSee also my post in the list: http://groups.google.com/group/joomla-dev-general/browse_thread/thread/3911061f0e98a734\n. Is this pull going to be in J!2.5?\n. Christophe, totally agree with you. \nWill test it later.\nThanks\n. Thanks Christophe\n. Hey David\nThis bug produce due to change in the publish action and it was started from this scenario bug: \nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=27257\nThe fix of this was not full implemented to the platform and the CMS, so another bug was opened (27499 as Elin mentioned). Meanwhile, Elin opened discussion (also mentioned in Elin comment) what is the correct behavior with different types of state changes (publish, unpublish, archive, etc) and what happened when item with sub-items change state.\nHope this is clarify the situation. \nCurrently I've made a patch to fix all of those issues (see in bug tracker #27499)\n. Hey,\nWhere can I see the failures?\nThanks\n. Hey\nIs there any netbeans plugin to avoid those check-style errors & warnings?\nThanks\n. Thanks, Rouven\nFixed.\n. I could not install the phpcs. I've followed the instructions here: http://docs.joomla.org/Joomla_CodeSniffer#Netbeans but I'm getting the next error: \"the file /usr/bin/phpcs isn't the right code sniffer batch\"\nCan someone upload for me the php-cs output?\n. Thanks Rouven\nFixed these issues.\n. Thanks again, Rouven\nFixed.\n. Hey Rouven,\nI'm really confused now. \nFirst of all, where did you discussed about this?\nMy confusing is about the next questions:\nIsn't it well-formed refactoring?\nWhat required to refactoring? getAvailableDriver? \nWhat is the best approach for refactoring in J! core?\nAre you aware to the fact that it works the same as the cache works? (same refactoring; see getStores method) \nIsn't it more important to get over #27984 first? (Make the auto-update process more reliable across different hosts)\nThanks and sorry for inconvience, this is for good cause. \n. If you're discussing about stuff that I'm implementing, it would be better and more convience to corporate with me those discussions.\nIs JHttpFactory just creating instance of JHttp according for some simple input? For example, new JHttpFactory('auto') would create instance of JHttp automatically based on the available one in the server. Correct me if I'm wrong.\nWhat are the base things (properties & methods) this factory require? Wouldn't it better to implement first JObjectFactory (or something like that)?\nWhy we can't commit this change and after that use factory?\nThanks\n. someone can tell me what is the style error, please?\n. Hey\nI'm wondering what is used for?\nThanks\n. Michael, Thanks for reply\n. Please take a look at: https://github.com/joomla/joomla-platform/pull/942\nAll cases have not been covered.\n. @LouisLandry \nSomeone reported that the fix isn't working: http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=28039 (Zeanne Codner 2012-03-03 10:46:45)\n. Can I rebase the branch in github interface?\n. which one??\n. Thanks to Rouven's support on git rebasing.\nClosing this pull request replaced by https://github.com/joomla/joomla-platform/pull/996\n. I left it without support by default for backward compatibility.\nIf you found phputf8 function that make this trick, please, let me know.\n. @LouisLandry, can you guide me to some simple guide or example for Joomla unit test?\nThanks, Ofer\n. @pasamio, I've fixed this error. \nIs there any guide for how to install code styling tool? (Preferred for Netbeans)\n. @LouisLandry, please reopen. I've committed the code style changes.\nThanks, Ofer\n. I've changed the issue subject also remove the unnecessary whitespaces.\n. http://www.blog.highub.com/php/php-core/php-eval-is-evil/\n. Maybe my branch was old.\nI make simple tests but not the unit tests.\n. @pasamio, but it's the same code. can you explain please.\n. @pasamio \nHere is an example:;\n<?php\nfunction testme1($w)\n{\n        $output1 = implode(' ', $w);\n        return implode(' ', $w);\n}\nfunction testme2($w)\n{\n        $output1 = implode(' ', $w);\n        $str = 'return ' . implode(' ', $w) . ';';\n        return eval($str);\n}\n$words = array('1', '+', '1');\nprint \"first test: \";\nprint_R(testme1($words));\nprint PHP_EOL;\nprint \"second test: \";\nprint_R(testme2($words));\nprint PHP_EOL;\n?>\nThe output of this test script (PHP 5.4.6):\nfirst test: 1 + 1\nsecond test: 2\nSo you are right, but I think there is a way to do that without eval. \nLet me check it and get back with a proposal.\nThanks\n. You should check also if $condition is null before using it.\nYou'll never know how 3rd party extension would call this function.\n. How do I add commits to the pull request?\n. This should be take care in the jhttptransport layer. \nCurrently (and before this commit) the layer doesn't supporting chunking.\n. I've moved this function to JHttp for refactoring (loose coupling).\n. Add the ability to input few adapters when using jhttp.\nIn addition I've removed socket class from being use when update the J! core, cause update.joomla.org doesn't suppot socket (fsockopen).\n. I've found that the socket have a bug - timeout doesn't input well on connected (null instead of number).\nAfter fixing this, move back socket support to the updater classes.\n. fixed\n. remove unnecessary code. \n. fixed\n. fixed\n. fixed\n. fixed\n. It is not hard coding. It tries to use memcache_server_host & memcache_server_port (from global config). If it's not set in the config, there is fallback to memcached default.\n. We can use $class->test if we are using at least PHP 5.3\n. Someone can explain what this function used for? example would be great.\n. ",
    "frt": "The first note in http://br.php.net/manual/en/function.call-user-func-array.php is the best explanation to the problem I can think of.\nAs I interpreted it, a component expecting a reference will throw a warning. I my case the component was com_jcar http://extensions.joomla.org/extensions/living/education-a-culture/bibliography/10382, and it crashes without my fix.\nMy fix is similar to what is done in libraries/joomla/html/html.php, in function cal().\nI think it is not a strict mode problem (I'm not at it now, but I'm pretty sure that my server isn't configured in strict mode), but a kind of component dependent problem.\nHTH\n. Agree with the PHP4ish thing. Will see if I can fix that in the component and send to the component developers. Thanks for the link with that patch.\n. ",
    "robschley": "Why not support actual callbacks? What is the purpose of having these pseudo callbacks?\n. Sorry, accidentally closed and reopened. \n. :+1:\nI dig it. Now we can get away from those stupid file names.\n. JString has lived in its current home since August. Not sure how long we should wait before removing these stubs.\nhttps://github.com/joomla/joomla-platform/blob/7ac88ec3e4cb352e3099a428c71139ed7cc601ac/libraries/joomla/string/string.php\n. It seems to have done the same thing for https://github.com/joomla/joomla-platform/pull/589 and I used git mv.\n. Yes, I can do that too.\n. Should be done now.\n. I fixed the pull request not being able to merge correctly. Should be ready to go now.\n. Merged.\n. Merged.\n. Merged.\n. I don't like the \"engine\" approach either as engine is also used to define types of tables such as in MySQL you have MyISAM and InnoDB which are \"engines\" and we don't want to mix up that terminology. \n. The only thing I don't like is that there isn't an actual JDatabaseDriver class. I think if we're going to use the convention of JDatabaseDriverMysql, JDatabaseDriverOracle, JDatabaseDriverSqlsrv, etc. we should rename JDatabase to JDatabaseDriver. \n. The file should be named 'inflector.php' to follow the new autoloading conventions.\n. You still have 72 style errors. Let us know when you get those sorted out and we'd be happy to merge this.\n. Let's not let the perfect get in the way of the good. This is a good start. If someone wants to build on it and add localisation support, great. But I don't think that we should get in the way of using this now.\n. Merged.\n. Merged. Thanks!\n. Merged. Thanks!\n. Shouldn't this logic be moved to JDatabaseQuery?\n. Can't be cleanly merged anymore =(\n. Should be fixed now. It wasn't trailing whitespace, it was line endings because I copied for a gist I think.\n. This pull can't be merged automatically anymore. Please update and reopen if appropriate.\n. Yes, I just spent a bunch of time updating that code. Let's not merge this yet. \n. Merged. Thanks! \n. I think if we're going to make JApplication extend JApplicationBase, we should add the things that are missing, not remove them from JApplicationBase. You've removed some of the most important aspects of JApplicationBase like a standard place for input, events, and configuration. These should be added to JApplication if you want to work with all three apps in the same way. \n-1\n. I was mistaken about the input and events stuff being removed. Only the configuration stuff was removed. My apologies. \n. JInputCli has its own serialize method that probably needs to be modified as well. \n. I think that if we're going to add this we really need some tests for it. I suspect this is the type of feature that not many people will use so if there are no tests it is likely to get neglected.\n. :)\n. You've got some issues to fix ;)\n. Merged. Thanks!\n. I like def() better than having another parameter in set. For what it's worth.\n. Aren't we supposed to be trying to get the tests to comply with the coding style guide?\n. Merged.\n. Merged. Thanks!\n. Merged. Thanks!\n. Awesome! Glad this finally made it.\n. I've been playing with something along these lines too and I think it would be really helpful to start using JsonSerializable where appropriate. What if we just register the class if PHP < 5.4 in the platform import.php file? That way we don't have to have a check in each class that uses it. \n. How about we create a compat package? I'd probably put it at the same level as the joomla/legacy directories.\n. Merged.\n. Hannes,\nYou need to update the require_once statements in the top of the tests. The tests fail after the files are moved because they are trying to load the files in the old location. \nPHP Fatal error:  require_once(): Failed opening required '.../libraries/joomla/base/tree.php' (include_path='.:/usr/share/php:/usr/share/pear') in .../tests/suites/unit/legacy/base/JNodeTest.php on line 10\n. Merged. Thanks. \n. That is for Sqlite. The tests now run against a Sqlite in memory database\nto make them easier to setup and faster to run.\nBest,\nRob\nOn Sat, Mar 24, 2012 at 1:27 PM, Amy Stephen <\nreply@reply.github.com\n\nwrote:\nCannot be used to create a database.\nhttps://github.com/joomla/joomla-platform/blame/staging/tests/schema/ddl.sql\nAUTOINCREMENT should be AUTO_INCREMENT\nTEXT fields are used for what should be char fields (and index builds\nfail.)\nDDL\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/issues/1035\n. Merged. Thanks.\n. Merged. Thanks.\n. Merged. Thanks.\n. You have some code style issues to fix before this can be merged. Make sure you run phpcs over your code before submitting pull requests.\n. Merged. Thanks!\n. Merged.\n. @HermanPeeren The controller is injected in the view because the view may need the dependencies that the controller has (application, input).\n. @HermanPeeren Sure, there is always room for improvement. \n. @HermanPeeren \n\nYour first statement is not correct. The old MVC classes have already been moved to the legacy tree and have kept their original names. See https://github.com/joomla/joomla-platform/blob/staging/libraries/legacy/controller/controller.php When using the legacy platform, the classes in the legacy package are loaded instead of the main joomla classes. So you can still use the familiar MVC classes with no changes by using the legacy import file.\n. This class was not specifically designed to handle non-ASCII character sets. When originally submitted, I used the JString wrapper methods because I figured it would make the class more versatile. However, after more use and some actual profiling, I realized the cost of the JString wrappers makes the class unusable. 500 calls into the class added approximately 1 second of execution time. \n. @realityking I was profiling on PHP 5.3 with mbstring installed. What would you like the docblocks to say? Do you want it at the class level or for each method?\n. This should log that a deprecated method was called.\n. Do we need to deprecate protected properties? I thought we only had to deprecate public properties/methods?\n. If $source needs to be an array, null should not be the default value.\n. You're right. I'm not thinking today... we do this all the time.\n. To comply with the style rules, this should be rewritten to be:\nforeach ($result as $key => $value)\n{\n...\n. Shouldn't there be a dollar sign before the variable name?\n. Woops. Should read more carefully, it's a method not a param. \n. Why have a $class option if you are just going to set the class in the first line of the function?\n. Same question about the $class argument here...\n. There should be a message for every exception thrown. \n. The exception should be kept and the log entry should be removed.\n. Elin, you're right. It is missing the priority. Not sure how this got missed.\n. +1\n. ",
    "benharold": "Since, as Jonathan mentioned, the HTML5 spec is so widely permissive of different characters in the id tag, I would suggest that filtering the id tag has become an antiquated practice, and should be dropped altogether.\nBen\nOn Feb 22, 2012, at 3:40 PM, Christophe Demko wrote:\n\nIs it fully compatible with all browsers?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/448#issuecomment-4122214\n. \n",
    "Buddhima": "Hi  AmyStephen,\nI can't find JSimpleCrypt class in platform. If the issue is still remaining, can you update the information here?\n. Got the solution! I'll fix the issue very soon :)\n. Isn't it better to be $rx same as $this->getWidth() if $width = 0 and $ry same as $this->getHeight() if $height=0 ?\n. Hi, can you tell me why it is failing?\n. Thanks Elin for pointing to the correct place :)\n. Hi,\nWhat I thought regarding this matter was there should be a value for rx when width =0. And I know when values getting closer to 0 , rx should tends to infinity. Therefore I can't specifically say a value. Then I thought of as a standard, assign rx with the value given by getWidth(). Same thing goes for ry too. \nBut I got to know that throwing exceptions from classes like this is allowed.\nSo my new solution would be this.\nSince this this method consider 2 cases for SCALE_INSIDE and SCALE_OUTSIDE there mustn't be a situation where user is given a chance of entering values less than 1. \nAnything designing on top of this should obey that rule. If this zero values are coming from an application, it should be a mistake done by developer.\nAnother case might be issues with web browser. Following links [1], [2] would show that.\nMy solution is to throw exceptions in those places where height or  width would be zero.\n[1] http://name1price.com/how-to-get-customers-with-singapore-web-design-basic/jquery-tutorials/149-jquery-get-image-height-or-width-returns-0-problem-.html\n[2] https://getsatisfaction.com/galleria/topics/could_not_extract_width_height_from_image_in_webkit_browsers \nSpecial thank goes to Elin for providing necessary guidance.\n. Hi romacron,\nYes there seems to be a problem.\niPad user agent string doesn't contain word \"iPhone\"\nRef: http://www.labnol.org/tech/ipad-user-agent-string/13230/\nIn addition to that iPod also faces the same problem (iPod touch)\nRef: http://reviews.cnet.com/8301-19512_7-10115146-233.html\nAccording to details obtained, I'll send a solution soon.\n. Hi eddieajau,\nNo . I committed this patch using a separate branch, So tests are carried out without considering the previous pull request.(Thanks Elin for pointing out that) \nAfter detecting that I've changed the unit test in that branch. Now the things are okey. And I saw that my previous request have adopted to the platform as well.\n. So please refer this: https://github.com/joomla/joomla-platform/pull/1123\nand I'll close this thread !\n. Hi,\nThrowing exception is one solution. Another solution may be use rarely use symbol (eg: ~ ) instead of colon pair(::). \nIs the colon pair is essential? \nCan you point out what are the places splitting by colon pair happens?\n. Hi,\nI also had similar idea like escaping the : . \nThen it is necessary to take care about : when get the original string.\nIf such thing can be applied, why don't we think about encoding the two parts before concatenate and decode after splitting,\nIn encoding : will be replaced by %3A \n. Hi,\npiotr-cz seems to have the same idea I had. \nSo  benjaminpick, it seems to be encoding (including htmlspecialchars function) would done the job although it adds extra burden to the code.\nIf so I can fix it. But users should be aware that $tooltip doesn't contain the original text. \n. +1 too. If you look at the \"List of OAuth service providers\"  at http://en.wikipedia.org/wiki/OAuth you can see that most of  OAuth providers are using OAuth 1.0 or 1.0a\nTherefore adding OAuth 1.0 client would make developers life much easy and enable to develop packages for Joomla with OAuth 1.0 in future.\n. For the functionality of this package, OAuth 1 client created by Diana is essential : https://github.com/joomla/joomla-platform/pull/1422\n. Hi,\nI have made few commits and now it's error free code.\nhttp://developer.joomla.org/pulls/pulls/1778.html\nPlease let me know if I need to do something on this.\nThanks \n. Hi,\nThank you for pointing that and I'll correct that mistake soon.\n. Hi,\nPull Requested is shifted to https://github.com/joomla/joomla-platform/pull/1786\nThanks !\n. @eddieajau I have updated the branch. Thanks a lot for informing.\n. Hi @dongilbert , I added OAuth1 code in order to pass the tests. \nCan you please tell me how to pull from staging back into my JOsm branch?\nThanks!\n. Hi @elinw , @eddieajau  and @dongilbert , I solved conflicts (conflicts only found in Oauth1).\nThanks for guidance.\n. :D a mistake. Thanks for pointing out\nCorrected !!!\n. thanks  eddieajau ,\nCorrected all mistakes and committed !\n. ",
    "janich": "Im sorry for late reply.\nThe directory attribute were meant as a limiter for 3rd party devs to use.\nIn the original proof of concept this field were used to display a user avatar. Since the users should never be able to use any sitewide images, the directory were limited in the plugin's manifest.\nThis is probably not the best method, but I hope it highlights the idea of it.\nAnd yeah. For this field to work properly, we need to at least separate the url into an separate, overrideable method.\nIll look into that asap.\n. @elkuku, Totally missed that dot. Thanks for the hint (and link) ;)\n. ",
    "jlleblanc": "Was unaware that the CMS and Platform have different code formatting standards. That's no good. I prefer the compact style, but we need to pick one or the other.\n. :+1:\nLooks great. If PHP namespaces are implemented down the road, that would be a good way of handling autoloading from other folders inside libraries.\n. @nikosdion while extensions using their own copy of jQuery would be a problem, I disagree that we should create yet another variable name in an attempt to accommodate them. While we are adding jQuery to support Bootstrap, another part of the appeal of adding jQuery to Joomla is to get everyone to use the same copy. That's not going to happen if we create a scenario where multiple copies of jQuery keep getting silently loaded with no problems.\n. @realityking will look into the style errors momentarily, thanks!\n. Closing this pull request in favor of #1359.\n. Actually, I'm going to close this PR for now. As @pasamio and @tompap pointed out, there are some issues with the code. My summer got away from me and I unfortunately won't have time to work on this for a while.\n. Thanks, I'll update this in a bit. I'm not as familiar with defer and async as I should be. If jQuery gets loaded with async, will my jQuery.noConflict() snippet afterwards wait until jQuery is loaded before executing?\n. This is a way of handling CDNs. If someone wants to add a CDN plugin in the future and call it on one of the earlier system plugin events, that'll register it in the system before any other extension tries to. Otherwise, yes, first caller wins.\n. Yes, activating such a plugin would cause jQuery to always load, unless you coded it in such a way that it only loaded on certain pages. For instance, you could have a plugin that works with a component to let you choose which pages load jQuery and which ones don't.\n. Yes, it'd be best if we had a consistent way of managing all JavaScript libraries, which would provide a way for admins to specify CDNs of their choosing. I was trying to avoid addressing CDNs specifically, since I don't know whether that has a good enough shot of making it into core.\nPerhaps now would be a good time to revisit the JavaScript library manager concept. I'll create another branch that implements that, as well as jQuery.\n. ",
    "PhilETaylor": "Brings JP in line with pretty much all other PHP frameworks and removes jimport, so all for it!\n. As you are already doing a check to see if this class exists on line 241 can this line not be a simple include instead of an include_once?\n. ",
    "ssv445": "Thanks for pointing out, in that case we don't need this extra function.\n. Current code forcefully include the file for JMenuSite class.\nIt should check if class is already loaded or not, this way it provide greater flexibility to change the functionality without hacking the core code. Same work is done for all helper classes e.g. JModuleHelper.\nHow can I see checkstyle issue ? \nThanks\nShyam\n. for : Adding access control OR extra functionality OR modified functionality,  which does not necessarily relates to Joomla core.\n. Its for controlling menus for existing application. Core code should be flexible enough, so components/plugins can control application-wide menus. For more general sense of requirement of overriding, please refer article from @AmyStephen http://www.alltogetherasawhole.org/profiles/blogs/overriding-joomla-16-framework\n. e.g. in one of our component we do it to check if user have access to particular menu as per his subscription.\nsee near \"Code added PayPlans\" comment\n``` php\npublic function load()\n    {\n        // Initialise variables.\n        $db     = JFactory::getDbo();\n        $app    = JFactory::getApplication();\n        $query  = $db->getQuery(true);\n    $query->select('m.id, m.menutype, m.title, m.alias, m.path AS route, m.link, m.type, m.level, m.language');\n    $query->select('m.browserNav, m.access, m.params, m.home, m.img, m.template_style_id, m.component_id, m.parent_id');\n    $query->select('e.element as component');\n    $query->from('#__menu AS m');\n    $query->leftJoin('#__extensions AS e ON m.component_id = e.extension_id');\n    $query->where('m.published = 1');\n    $query->where('m.parent_id > 0');\n    $query->where('m.client_id = 0');\n    $query->order('m.lft');\n\n    // Set the query\n    $db->setQuery($query);\n    if (!($this->_items = $db->loadObjectList('id'))) {\n        JError::raiseWarning(500, JText::sprintf('JERROR_LOADING_MENUS', $db->getErrorMsg()));\n        return false;\n    }\n\n    // ====== Code added PayPlans : START =====\n    $userType = XiFactory::getApplication();\n    if($userType->isSite())\n    {\n        //trigger event for controlling menus\n        $menus = $this->_items;\n        $args = array(&$menus);\n\n        PayplansHelperEvent::trigger('onPayplansMenusLoad', $args);\n        $this->_items = $menus;\n    }\n    // ====== Code added PayPlans : END  =====\n\n    foreach($this->_items as &$item) {\n        // Get parent information.\n        $parent_tree = array();\n        if (isset($this->_items[$item->parent_id])) {\n            $parent_tree  = $this->_items[$item->parent_id]->tree;\n        }\n\n        // Create tree.\n        $parent_tree[] = $item->id;\n        $item->tree = $parent_tree;\n\n        // Create the query array.\n        $url = str_replace('index.php?', '', $item->link);\n        $url = str_replace('&amp;', '&', $url);\n\n        parse_str($url, $item->query);\n    }\n}\n\n```\n. Any trigger must be added in CMS, and when CMS community need it to be very much required. But as we are working on framework/platform, we must empower CMS or CMS-extensions to override framework-behavior in case required.\nAnd importantly when we say we are introducing true and full autoloading in J 2.5 , then we must consider that JPlatform is also autoloading. For autoloading we must not hardcode the inclusion of files and its path. \nI hope my comment make sense when we wish framework will empower other cms then joomla cms.\n. I agree with the technical aspects of @pasamio comment, that we should add trigger, but triggers should responsibility of CMS rather then platform. Platform alternation should not be dependent on any trigger to be triggered in CMS.\nCan you share a link where I can see the vision of JPlatform, so that we can justify if the patch is inline with vision statement.\n. @pasamio as per your suggestion - removed include_once\nYes, menu are integral part of CMS, but can we implement routing in Platform without menus ?\nMy suggestion \n- menu should be part of Platform, but its behavior should be defined by CMS (e.g. rendering).\n. @AmyStephen  yes, currently we do override JMenu in joomla 1.7. Thanks for supporting the issue.\n. +1 to @realityking way of deprecating stuff. \nI can share concerns which will effect me and my team are -\n- We should not mix two different purpose with a single class name. Even if we do search-and-replace, we cannot maintain one codebase for multiple versions. \n- While deprecating, please provide a programmable path rather then force us to separate the code base for different versions. Thats double-up the work for ANY developer/designer.\n- Initial comment regarding negative vibrations for Joomla by @nikosdion, is very true and still holds. The breaking changes will only broadcast negative vibration (thats my personal opinion obviously). Smaller the change, easier the adoption.\n. @eddieajau Your response no doubt helps, it looks that platform developers are listening to 3PD developers. Thats build up trust. Thanks for your answer. We hope that the changes will spread positive vibrations.\n. As per thread - http://stackoverflow.com/questions/186338/why-is-require-once-so-bad-to-use\nI would like to suggest that _once form does not have a very big performance problem.\nThe real bug is inside CMS 2.5, but as a component developer I cannot fix it. \nI think a bad code or convention might break the system easily, these types of code makes joomla environment very complex (as many 3pd developers are there, and who knows, how many vendor's code is there). \nSo I would request to re-check the issue and should provide some basic mechanism for such a unexpected faults.\nBackporting should be done. I will look into that. But it does not guarantee the same problem come through a different path in future.\nThanks\nShyam\n. My 2 cents - We have been discussing a complex thing. \nA lot of complex scenarios are there, so we should propose only a basic processing system.\nA workflow expectation from XYZ component-\n1 XYZ component concludes to request for a payment,\n2 Collect Payment information from customer via its own means/forms (total-amount, credit-card, user-details, return-url, notfication-url etc)\n3 Ask payment processor to process the amount (with Joomla standards, processor will convert it to gateway standards)\n  a) in case of API, payment processor will do it instantly and return the response\n  b) in case of redirection - should tell the caller next redirection ?? or might be some other ideas to generalize things\n\n4 On notification URL, catches notifications, and ask the relavent processore to process the data.\n   a) Payment processor will verify the data and recommend action -> debit amount, credit amount, control-action [payment on hold, order canceled etc.]\n\n5 payment request and payment notifcation should be stored in DB by XYZ component\nSo now we know what we need to build\n1 Base Classes     : Payment, Order, Payment Processor\n2 data structures      : PaymentRequest, PaymentCallback, CreditCard etc\n3 helper classes       : find available plugins, find compatibility, data conversion, verfication and validation etc.\n4 Processor Plugins    : build plugins for gateway-specific-processing, i.e. paypal\nImportant points : \n1 : There are multiple variation for payment processing per gateway e.g. PayPal standard, pro, avdnace OR authorize.net SIM, CIM etc.\n2 : We should provide a complete API, for all actions starting from creation to cancellation.\n3 : Plugins should broadcast their support for few features - trial-1-amount, trial-2-amount, trial-1-time, currency,  etc.\n4 : Plugins should provide verify fuctionality for given payment request, so compaonent can tell customer about fault data.\n. ",
    "thatryan": "I think it is a js issue, the source for 1.5 shows the same type of code generated, and the select list is built out of the text input and ul... I am still trying to figure this out too.\n. ",
    "okonomiyaki3000": "I had a fix for this but, since 3.0, the fix no longer works. Selects got fancier in 3.0 and so making this functionality work with them would be a bit of a challenge. I wonder if it's actually worth the trouble or should combo just be removed?\n. Although this sounds simple enough, you'd want it to work with the lambdas (available since 5.3) in addition to the old 'create_function' and 'array' callback types. Currently this doesn't work because JLog::addLogger serializes $options to use it as a signature. PHP's lambdas can not be serialized. Trying to do so produces errors. So this can either be done with the caveat that only the old-school approach will work or some change could be made to JLog. I'm not sure how to fix it at the moment though. Would need a way to uniquely identify a lambda. \n. It seems that object comparison works as you'd hope with Closure objects. So, there is a way to support lambdas. A special case would need to be added to JLog::addLogger so that it checked a particular key on the $options array for the presence of a Closure object. If it finds one, it would need to swap it for some unique id for serialization then swap it back in afterward. \nI'm just talking to myself, maybe?\n. It's included in this pull request: https://github.com/joomla/joomla-platform/pull/874\nLet me know if you think it needs more tests or anything. \n. Over and out.\n. OK, that should do it.\n. Where can I see details of this checkstyle analysis? \n. Fixed the 9 errors but phpcs didn't turn up any warnings for me. \n. It is surely simpler to write a function than a class. Especially with the lambda support in PHP 5.3, you can get a lot of versatility with very little effort. Maybe I've written too much Javascript but I really like the idea of extending functionality by just passing a function. \nI imagine that someone might use this in case their Joomla! installation is part of a larger ecosystem of apps and they'd like to hand off logging to some other part of that system. Or perhaps during some testing phase you find that you need some specific logging functionality on a temporary basis. Of course, you can write a class for these cases but just passing a function may be faster/easier/more fun?\n. I don't think these testing errors have anything to do with me. I get the same errors whether I run the tests on master or staging. Shouldn't master run without errors if I haven't touched it? \n. I've also written some documentation for this that should be suitable for the manual. What should I do with that?\n. Hey guys, anything happening here?\n. OK, all updated to the new locations\n. It's true, / works. Also, I must have missed something but has the use of DS been deprecated? \n. Are we OK now?\n. Hmmm? what just happened?\n. No, it STARTS working with behavior.combobox which is currently broken.\n. It looks like the JavaScript was changed at some point but the HTML never was. So it should start to work again now.\n. Since the Isis theme in 3.0 uses Chosen to make very nice selects, it further breaks the combo-box functionality. Should an effort be made to fix it or should combo just be dropped from the platform? It makes no sense to keep a broken field type. \n. I changed my mind about removing it entirely. There are too many cases of things being passed with the \\ prefix. That practice would need to be deprecated first. It could, perhaps, be purged from all Joomla code but there's no way to know if 3rd parties are making use of it. \nIn any case, it does not affect this patch as the \\ behavior is still supported here.\n. In my opinion, there are better ways to support types such as functions while letting json_encode take care of whatever it possibly can. But I suppose the \\ solution is one that has worked well and maybe shouldn't be changed. \n. Sorry, I'm on Japan time. It'll have to wait till Monday.\n. No, that's not it. 'gig' is misspelled. \n. Indeed, but I couldn't push because of fast-forward yadda-yadda so instead of figuring out what to do about it, I just deleted the branch and uploaded again.\n. At first, I thought it might be useful to have both an included and an excluded list for each logger but after thinking about it a bit, I realized it's not necessary. If you say you want to log categories a, b, and c, it implies that you would not like to log categories d, e, and f. You don't need to exclude them.\nSo why is it useful at all? Because you don't have a finite list of all possible categories but you might want to have logs of almost everything. Maybe there are one or two specific categories you don't want to log or would like to log separately, this allows you to do that. \n. I will add a new function to the tests, could you tell me what is the correct number to use for 'since' (or, better yet, where I can find this)?\n. This is quite different from sprintf. It works in a similar way but it does different stuff. This function is able to apply functions such as quote, quoteName, escape, etc. to the replacement strings. I think it makes it a little easier to write proper queries. In particular, I think the 'name quote' is often omitted because it is generally optional and it's a bit of a hassle to write $query->qn('column_name'). \nIt can be used to format a full query as in the example above but maybe a more common use would be to make something like this:\nphp\n$query = $db->getQuery(true);\n$query->select($query->qn('extension_id'))\n    ->from($query->qn('#__extensions'))\n    ->where($query->qn('type') . ' = ' . $query->q('file'))\n    ->where($query->qn('element') . ' = ' . $query->q($element));\nInto something like this:\nphp\n$query = $db->getQuery(true);\n$query->select($query->qn('extension_id'))\n    ->from($query->qn('#__extensions'))\n    ->where($query->format('%1$n = %2$q', 'type', 'file'))\n    ->where($query->format('%1$n = %2$q', 'element', $element));\nNot a huge difference in this case but I find it a bit more readable. \n. Updated\n. @elinw Do you mean that you want some sample format strings and values and the expected result of the function? The result should be slightly different depending on which database is used. For example, MySQL uses backtick for name quotes but some others may use brackets, etc. \n. SQLLite doesn't have a function like this. It should be possible to duplicate the functionality with something like hex(randomblob(32)) or some such thing but I don't exactly know the best approach at the moment as I have no SQLLite experience at all. \nI did notice that the SQLLite Query class seems incomplete as it is. The base query class has functions like year, month, etc. but, based on my quick check of SQLLite available functions, these do not seem to exist and the SQLLite query class doesn't provide alternatives. \n. Fixed the formatting and rebased as a single commit.\n. Ah, there are a couple of test classes that extend JDatabaseQuery so, if it has an abstract method, they will need to implement it. This is all well and good but doesn't actually make much sense. Are we going to need test classes for each subclass of JDatabaseQuery? They each have to implement that function in a different way so...\n. SQLLite implementation based on this: http://comments.gmane.org/gmane.comp.db.sqlite.general/62514\n. It is correct that you might call transactionCommit but not actually commit anything. This will happen if your code is being executed within the scope of another transaction. If that 'parent' transaction is committed, yours will also be. If it is not, yours shouldn't be anyway. \nThe alternative (the current situation) is that you might think you are committing your transaction but, in fact, you are committing the 'parent' which might actually need to be rolled back at some point but now can't be. Or, you might try to rollback your transaction but you actually rollback all the way to the parent. Both of these could be very bad. \nSo I believe I'm choosing the lesser of two evils. Perhaps this solution would be more palatable if the current transaction level was exposed. \n. @dongilbert This is an interesting idea and can actually work mostly as you describe without any modification to existing database driver code. A developer who needs to do some work in a transaction should just get a new DBO instance specifically for that transaction. There are probably some cases where this is exactly what you would want to do. I don't think it's right for the general case though. \nFor one thing, any changes that you've made in one connection's transaction will not be visible to the other connection. This is especially confusing when multiple transactions are happening (which is the issue I'm trying to address in the first place). They're also committed or rolled back independently of one another. In nearly all cases, I don't think this is what you want. \nIf I start a transaction and later roll it back, I want all changes rolled back. That means even if I called some other functions which ran their own transactions without problems and committed them, I want those rolled back too. This is not possible if they were done on a different connection and this could lead to some serious problems. What you really want and what you should expect is that your transactions will be nested. Savepoints aren't exactly the same as nesting as we usually think of it but they are effectively the same.\n. Ok, I think I can work out a compromise that everyone will be satisfied with. I should be able to do it tomorrow.\n. @pasamio Whether nested or using save points, I don't think committing the last segment but rolling back others would ever make any logical sense. \nSuppose nested transactions were a reality. Suppose you committed one or more nested transactions within an enclosing 'parent' and then finally rolled back the parent. The expected behavior would always be to roll back everything to the start of the parent transactions. \nWhen you talk about a last segment, it seems that what you really want is non-nested transactions in sequence. There is, of course, no issue with this as it is. \nAny time you are dealing with nestable structures, whether they are conditionals, loops, tags in some markup language, etc., whoever initiates the structure is responsible for closing it. Transactions should work the same way. \nWorking with savepoints explicitly is not the answer as it requires the developer to know things about the context in which the code he's writing will be executed which he should not (maybe cannot) know. It also relies on the developer to do things in the 'right' way or risk breaking someone else's code in a way that is extremely difficult to debug. \n. Maybe I haven't properly explained the problem scenario but the thing I'm trying to avoid is an unrecoverable situation. One in which a commit was made prematurely and now can't be rolled back. \nAnyway, the idea of using a flag seems suitable. It allows all existing code to continue to function in exactly the same way while providing support for savepoints when needed. \n. Looks like those tag changes were probably copy/paste errors. I've fixed them and rebased with the latest changes to staging. \n. @pasamio We can maybe look at this again.\n. reopen\n. Oh, that's nice. I wonder if \"open sesame\" would have worked...\n. The only place 12.2 appears in this diff is in the mysqli driver but this is unchanged from the official repo. Where I have made additions, I've tagged them with 12.3.\n. I'll have a look. When did we get a nosql driver?\n. reopen sesame\n. reopen\n. Jenkins didn't show up. Do I need a new pull request?\n. The fix is here: https://github.com/joomla/joomla-platform/pull/1704\n. I don't imagine that Joomla will ever run MongoDB.\n. On the surface it would seem so but in practice I don't know if this is true. This is a protected function which is only called in one place. When someone calls JForm::getFieldset and passes the name of a fieldset (usually because they are building the input fields for some kind of parameters or something), this function will be called to get all the elements under that fieldset. I don't know of any reason that currently exists that field nodes would be nested any deeper. I believe they will always be direct children of fieldset nodes rather than some deeper level descendants. \n. Another way to rewrite it which would work just as well for my purposes would be:\nphp\n$fields = $this->xml->xpath('//fieldset[@name=\"' . $name . '\"]//field[not(ancestor::field)] | //field[@fieldset=\"' . $name . '\"]');\nThis would still get all descendant fields from inside the fieldset just as the current situation with the exception that fields inside of fields would be ignored. There is not likely to be any case where you would want to get those nodes with this function. Why would you ever enclose field nodes within other field nodes except in a case such as the tuple type?\n. OK, thanks! I'll put together a pull request.\n. Instead I fixed my github account so it was properly linked to my commits.\n. Is there a rule about that? phpcs didn't complain.\n. I hope you mean buffer. Anyway, I didn't get a warning but the line was surely over the 150 character limit. I've broken it up into two. \n. In order for it to be done via the $config array, this option would need to be part of the plugin's params. I suppose it's possible to do it that way but params are typically meant to be set up by the user, right? Loading the language isn't something that should be at the user's discretion generally. \nI'm not sure what you mean about the legacy tree. Would this change necessitate that?\n. Indeed, this leaves it at the discretion of the developer as it is now. The current situation is that, if a plugin needs language files, the developer typically overrides the constructor just to call loadLanguage. That means the parent constructor also needs to be called. So by using this property as a flag, we can save developers a minor hassle and reduce the overhead of calling additional functions. \nIt seems that about half of the plugins that ship with the CMS are overriding the constructor just for this purpose. Probably many third party plugins are as well. \n. Isn't it kind of gross to use the same name for a property and a function? \n. Good thinking!\n. CMS pull request is here: https://github.com/joomla/joomla-cms/pull/698\n. To me this definitely looks better than the current version. I have just a couple of thoughts about it:\n1) When you compare $ssl === 1 to determine what the scheme should be, you should continue the practice of casting $ssl as int or else passing true as the third argument to the function will not have the desired effect. \n2) It looks like you've added another call to preg_replace to replace spaces. Probably this doesn't need to be done twice and, in fact, should not be done with preg_replace at all. The preg functions are a little expensive and, whenever possible, alternatives should be used. In this case, str_replace can certainly be used instead. I realize the function was already using preg_replace but as long as you're changing it, maybe you can make that switch as well. One side point about this, /\\s/u will match space, tab and probably newline characters. This is probably a flaw in the original code but I'm sure it never became an issue because tabs don't often appear in urls. \n. In fact, I think we don't need an exception here at all. I put it in because the FormattedText logger throws one (also without a message) but, on second thought, it doesn't make much sense in this case. Any problem to just remove it? \n. ",
    "beat": "You are welcome, Andrew. Thank you for merging, developing and maintaining.\nI discovered here that contributing small fixes to Joomla Framework on GitHub within the web-browser directly is not only way simpler than with any other patching or svn methods, but also fun and impressively working well!.\n. I have tested this pull request with Community Builder 1.7.1 and it fixes the bug that was introduced by the commit https://github.com/joomla/joomla-platform/commit/a962ad7ed99cc46c5407377e07efa01f06e58bfa that was not an exact reversal of pull request #566.\nCommented on this google thread too:\nhttp://groups.google.com/group/joomla-dev-general/browse_thread/thread/8e7ac39b458f8037/0c49392e9ace754f\n. Elin,\neikuku's comment was joking (notice: ;) ):\nThe parenthesis DO MATTER. Sorry. Explaining it basic programming way here:\nYour change: https://github.com/joomla/joomla-platform/commit/a962ad7ed99cc46c5407377e07efa01f06e58bfa :\n-    if ($path = JApplicationHelper::getPath('toolbar') && $app->isAdmin())\nIs not same as what was removed by #566 :\n-    if (($path = JApplicationHelper::getPath('toolbar')) && $app->isAdmin())\nNotice the missing ( ) around the assignment that was in the if statement ?\nyour change means:\n-    if ($path = ( JApplicationHelper::getPath('toolbar') && $app->isAdmin() ) )\n  and original was:\n-    if ($path = ( JApplicationHelper::getPath('toolbar') ) && $app->isAdmin() )\nSee that your changes gives a logical boolean true/false result instead of a string with path in $path ?\nThat's one of the many common errors made by programmers when there are assignments inside \"if\" statements.\nAssignments inside \"if\" statements are not considered to be safe and clean programing, because they mix 2 different actions in a single line, and mix-up people, exactly like you got mixed up.\nYou can fix the bug you introduced by putting back exactly what was there with the missing paranthesies....\n...or do it the clean way I proposed, which is 100% equivalent, and won't mix the next php programmer touching that line + won't generate a php lint warning for bad practice.\nI do not care which way you revert #566 to what IT was DOING, as long as it's doing it. If you want to keep it old unclean way, up to you.\n. @pasamio Thank you for the merge ! :)\n@elkuku This is not the place to discuss coding style (google for \"assignment in condition\" will give plenty of discussions and explanations why that is prone to leading to errors like the one that Elin did by forgetting the parenthesizes and why most IDEs flag them with warnings). Feel free to open a new thread in google groups if needed. ;)\n. @elkuku No worries, I got the meaning of your first comment right then, interpreting it the obvious way, even if I misinterpreted your \"sniff\" as a \"tear\" because of the ;) following it instead of the sniff program :D . It was Elin's comment which didn't understand the bug that she introduced and that was voting to restore the bad assignment in condition \"exactly like it was\", followed by the \"i was serious\" in reply after Elin's comment that raised doubts about the obvious that every non-beginner programmer konws.\nCase closed :)\n. Hi Rouven,\nTo reply on your feedbacks:\n1. Yes, it does also solve the problem of running smoothly side-by-side mootools and jQuery. The goal is not to replace Mootools, nor to use jQuery for Joomla core behaviors here.\n2. This proposal is exactly meant for Joomla to not need to do any jQuery version tracking, as that code does it between the extensions' proposals automatically. That's why there is a bit of code (not that much actually).\n3. Prescript and Postscript are needed to put jQuery in non-conflict mode (that's why most extensions do conflict).\n4.  JHtml::isCallable_() allows to check if any JHtml::($key) can be called without errors, typically, before calling the 'behavior.jquery' with JHtml::('behavior.jquery, ....) from an extension, you can test it like this, e.g.:\nphp\nif ( JHtml::isCallable_('behavior.jquery' ) ) {\n    JHtml::_('behavior.jquery', _MY_JQUERY_VERSION, _MY_PATH_TO_MY_JQUERY_VERSION, $jQueryPlugins);\n}\nelse\n{\n    old way...\n}\nSo it's not used in the Framework itself, but useful to know if a behavior is supported. Added note: isRegistered method is not usable, as it's auto-registering on call only.\nA jQuery plugin that replaces Mootools for core behaviors can make sense, but won't solve the same problem that is the most urgent ones:\n1. Running smoothly Mootools and jQuery side-by-side\n2. Running smoothly multiple incompatible jQuery versions concurrently: Extension A requires jQuery 1.5.x, while module B requires jQuery 1.7.x\n3. Avoiding multiple times same jQuery version loaded: e.g. no need to load 1.7.0 2 times and 1.7.1 3 times on a page, loading once latest maintenance release 1.7.1 of jQuery will make all extensions happy.\n4. Making it easy to load and use your jQuery version without any conflicts. Loading jQuery in a non-conflict mode is hard (Joomla framework does not allow Pre/Post-scripts, and it's not well documented), and loading deep-non-conflict is very hard. That leads to bad imlementations leading to conflicts with Joomla's Mootools and between extensions too.\n5. Having an official standard way to solve the above.\nOnly way to achieve that is in Joomla core, and it does require a few lines of code. Hope that my comments on the code are clear. Let me know if something is unclear :)\n. You're quick too, so it's nice to discuss this while it's hot ;) :\nFirst list:\n1. Understand your concern, and it is a separate one, out of scope for the Joomla Platform for use in Joomla 2.5 LTS, and not needing to be in platform (agreeing on this point :) ). However, that separate jquery-based behavior will still need such methods to share its own jQuery with other extensions. E.g. being stuck with jQuery 1.7 for whole LTS will give headaches, that's solved here. And it still will need to solve same problem: many extensions do conflict and load multiple times same jquery as there is no standard way to share as Joomla Platform doesn't support it. Thus this proposal can be used there too.\n2. Yes, but the code I propose is not tracking nor specialized at one particular jQuery version. It supports any jQuery version. Read the code and comments, it might help understanding the goals and solutions to these problems. I wrote 4 versions, mostly longer, before comming to this minimal implementation, but I'm open for further simplifications. However removing the multiple-versions support removes 90% of its interest and use.\n3. My code puts priority to avoiding conflicts and comes from the practice of a large extension with many plugins form 3rd parties. As you seen with Mootools 1.1 and 1.2, upgrading is not done overnight, and running both versions in parallel until all codes are upgraded avoids the headaches of an admin upgrading one component, and then stuck with a non-working site because another extension can't upgrade for good reasons before a few months. Allowing a smooth transition and breaking millions of sites is certainly not \"bad behavior\". ;)\nSecond list:\n1. yes, jQuery is much better backwards comptible, however, version 1.6 broke backwards compatibility and e.g. CB 1.x's 3rd parties which use jQuery 1.5's API, so until we release CB 2.0, we are stuck with jQuery 1.5.2 and can't upgrade to 1.7.x, not because of CB, but to keep our 1.x API compatible with 1.x extensions. However other modules requier 1.7.x, so you see the problem and the use of this solution with a practical example. Not bad behavior, just release cycles.\n3rd list:\n1. In the long term, the platform should support very popular javascript libraries and not rely on them (?). However that won't change the current problem with extensions and templates: half use Mootools of Joomla, and the other half use jQuery. Mootools don't conflict because the Joomla Platform has set a standard way, while jQuery do conflict by lack of any standards and developers education.\nI think the longer-term problem is very different, and I'll not try to guess what it will be (maybe to have to move from PHP to NodeJS ;) ?)\nThat's why this proposal is focussed on solving short-term real problems, and doesn't want to fix the global (imho unsolvable because not definable today) problem, which is completely different imho (and not 300 or 3000 lines of code, but much more).\n. Relpying to 2nd reply that came above mine re: deep non-conflict:\nYou simply include the jquery-using file using the behavior.jquery in the $plugins : Inside that file (because of the Pre/Post-scripts that save $ and jQuery and assign your own version before including the file(s) and restore them after) you will have your version in \"$\" variable and in jQuery variable. So no guessing.\nSame for script code in header, if included with behavior.jquery, you will have $ and jQuery variables for your use, it's done with a function parameter and local variable, but effect is same :) .\nNow I don't think that you will find a piece of code that uses both mootools AND jQuery simultaneously, but that is possible too...\nThat's why this solution is imho quite interesting and elegant in terms of integration.\n. > So this doesn't work at all when I'm mixing JS into my HTML correct (in layouts in particular)?\nAs is in the proposal now (where the goal is to avoid conflict with any jQuery version loaded without the knowledge of the Joomla Platform like done now), jQuery global function is not usable directly.\nHowever you can still use it anywhere, provided you use \"Joomla_jQuery_1_7\" (where 1_7 corresponds to version 1.7, that string is defined in function jqueryGlobalVarName() in my implementation as a suggestion) instead of \"jQuery\" to define your $ and/or jQuery variable different from e.g. Mootools's $ inside a closure or function, if you use $.\nThought 1:\n- An alternative could be to define the highest version proposed by extensions as THE jQuery global (if not already defined by another way). That's not a huge task and would add around 10 lines of code to my proposal.\n\nWe tell people who use MooTools to suck it up and to use whatever version comes with CMS (basically). I don't see why jQuery would be any different.\n\nCMS hat on: No issues with STS releases, but with LTS releases we have seen the pain with Mootools 1.1. I also gave some good reasons to support multiple versions (that said, it's a good idea to recommend a given jQuery version for a given Joomla version). CMS hat off.\nMy proposal solves the issue not only for the jQuery core javascript library, but also for official and third-party jQuery plugins, where the core Joomla Platform or CMS can't provide versions for the thousands of jQuery plugins available and potentially useful while non-conflicting between most of them. That's also a difference with Mootools, and why concurrent versions-management is imho a good idea.\nIn the google groups, it has been said that Joomla will not include nor maintain the jQuery code, and that the extensions will have to provide it, in which case the version matters and needs to be treated accordingly. I also replied to the call to action to propose something based on these directions. Also the consensus was to have a \"behavior.jquery\" API like the \"behavior.framework\" or \"behavior.mootools\". My implementation proposal is following those requirements given.\nThe idea here was to work based on all previous talks, and propose a real deeply-non-conflicting solution to all the present conflicts that can be looked at, and changed/moved as needed for inclusion, instead of continuing talking without any proposal.\n\nTaking the CMS hat off your point regarding limiting the platform to one JS library is true. Maybe we should discuss if all that JavaScript stuff (and with it most of JHtml) actually belongs into the platform. While it is nice to offer an \"integrated\" solution we do kinda limit platform users in this regard.\n\nThought 2:\n- If instead of \"behavior.jquery\" we have \"jquery.load\" for instance, we could have a separate file for a class JJquery and not add those functions to JBehavior object. Or... move those functions out of JBehavior, except for the main public function that would just load the JJquery class file and limit the addition to JBehavior class and file to a few lines of code.\nI have on purpose limited the API to a single public function so that the block providing that functionality can be easily moved to another place where it's not loaded when \"behavior.framework\" only is needed. But I didn't want to add a file until we knew what the proposal is and get feedbacks.\nI'm open to any improvements or simplifications that keep it a solution to today's problem which is the conflicts and multiple inclusions by third party developers and template designers because of no support by Joomla.\nThought 3:\n- Maybe my solution with deep non-conflict and seemless support of multiple versions (in the interest of keeping sites and apps running when one extension is upgraded) is too luxurious for JBehavior but would fit well together with a CMS-provided \"official/recommended\" jQuery+jQuery-ui version in a new class+file JJquery ?\n. Crosslinking this pull request with this one as both are relevant to jQuery inclusion in Joomla:\nhttps://github.com/joomla/joomla-cms/pull/218#issuecomment-6045768\n. BTW could someone with divine rights re-open this pull request as the decision has been changed regarding jquery inclusion ?\n. Thanks for your answer, Ian.\nJust to clarify: It is NOT 400 lines of code:\nOnly 125 lines of code are for jQuery + jQuery plugins management. Complete jQuery plugins management is a big benefit of this pull request. For jQuery without plugins, it would be probably less than 50 lines of code with deep-non-conflict.\nRest is cleanups in existing code, actually reducing existing line-counts, and adding functionality to existing javascript code, that is needed in many library, and NOT specific to jQuery. And lots of comments (that we can of course remove to bring line-counts down ;-) ).\njQuery plugin management with only one version and without deep-non-conflict would probably be less than 10 lines of code, and with jQuery plugins management would be 80.\nSo issue is obviously NOT line-counts of code, but lack of decision from whoever decides within 7 months if not years.\nRest has all already been said in above discussion.\nBut the lesson has been learned: Next time, I will sit still and wait for a final decision from PLT instead of a consensus in the google-groups discussions before spending a week writing and contributing code. ;-)\nFortunately, I could reuse my deep-non-conflict code and it works perfectly, bringing down Javascript-conflicts to really Zero in CB installs since 6 months!. So actually, just as an example of the benefit of deep non-conflict, CB Javascript runs fine with whatever other Javascript is present or not.\nSo, in conclusion: Please let us know when PLT or whoever has final saying has found the time to reach a decision on this topic that needs to be covered for Joomla 3.0 (and preferably its corresponding platform, as this kind of low-level stuff clearly belongs to the Platform and not to the CMS or Application).\n. It would be good that the Platform be able to handle multiple versions of jQuery plugins, as most of those would be \"proposed\" by the Joomla extensions (or the Joomla CMS) and not included with Joomla Platform. There is no way Joomla Platform can or should include all jQuery plugins. Maybe just the \"official\" jQuery UI ones and possibily the bootstrap one at most.\nFrom there, allowing same for jQuery core itself is only a few lines of code, as I'm using same code to manage both. So managing jQuery plugins with a fixed jQuery base library would be maybe 10 lines of code saved here, and then 10 lines of specific code added elsewhere.\nIf jQuery is included in Joomla Platform, then it's not needed to be able to manage multiple versions of jQuery plugins. But as it comes for free with being able to manage multiple versions of jQuery plugins, it's a nice to have.\nActually, thinking loud from a Platform perspective, it could be interesting that the Platform gives the library to manage the loading, but does not provide the jQuery code itself. That code could be provided by the Application (e.g. CMS), which optionally could use a CDN instead of its own, if configured so.\nThus I still think it's not completely \"stupid\" ;-)\njQuery allows for thousands of existing jQuery plugins, and that's it's real strength. That's why it also makes sense to supporting their loading by the Platform while provided by an App of the Platform, if the Platform wishes to support jQuery, a standard way to load jQuery plugins makes full sense. And thus loaded version management as proposed.\n. Hi Andrew,\nThanks for clarifying. Just to understand correctly:\nSo Joomla Platform is a PHP-only library, not a web-applications platform (i am not aware of any modern web-application which doesn't use heavily Javascript and Javascript libraries) ?\nAnd a question:\nWho/which body is making such decisions which span platform and CMS ?\nAs a matter of fact, as contributors, we don't care who implements or makes the decision, but it would save all of us all lots of time that a final decision is being finally made in time for Joomla 3.0 CMS and corresponding Platform.\nThe Javascript workgroup gathered together at JAB12, and made number of decisions, but i'm not yet seeing support for their decisions. So it's a very confusing contributor's situation. Happy to see this decision or discussion elsewhere as it is broader as just this pull request. ;-)\n. Oh, Hi Amy, we were missing you here lately :-)\nTo follow your thinking: Long ago someone said that javascript is not a programing language, but just a template beautifying data :-D\nIt's not 2005 anymore. Welcome to 2012 where most web-apps have more and more Javascript, which is proabably a more solid language than PHP btw.\nThanks for the feedbacks and for helping me making the decision to leave this discussion, as long as there is no more understanding of jQuery and that it has become more fundamental as PHP for modern web-apps, or a corresponding wish to understand it. And a corresponding decision\nAdding to the list of rejected Joomla contributions without any directions or decisions for design and/or improvements.\n. Thanks for your answer, Andrew.\nI understand and respect your point of view, and i think it deserves also a friendly answer. I agree to disagree and to think that ignoring the Javascript browser-side parts and their tight integration with the server-side in a Joomla Platform is a huge shortfall for \"selling\" the Joomla Platform for web-applications. Thank you for respecting my point of view too. Agreeing to disagree on this :-)\nTo reply to your statement:\n\nBeat's implementation is over-engineered and overly complex but that's\nneither here nor there.\n\nI need to reply that it's neither over-engineered nor over-complex to solve the problem that has been clearly defined in the Google-group discussion (where extensions provide various proposals for JS code and not the Joomla Platform, and Platform needs to bring consistency in).\nHowever as the problem to solve seems to have changed, it is of course easy to criticize it as now \"over engineered\", specially in the light of many parts of Joomla CMS and Platform which are heavily over-engineered.\nAs the CMS has taken a different route, there is no need to lobby CMS for this code. The proposed CMS pull-request by mbabker is certainly not more efficient nor using Joomla's API for JS files inclusions, and doing a whole 1-line js file include with its http request just for adding a single line of js code, that with proper API of Platform could have been outputed just after the file inclusion as required (that small API change has been proposed here in a part that actually reduced at same time existing line count and added consistency, and separately by Joseph in another pull request with minimal lines changes, both refused to my knowledge even though independant of JS library). But as Joomla Platform's API doesn't want this change he had no other choice than doing it that innefficient way. Additionally, jQuery plugins are not handled properly yet there.\nFollowing changes that are fully independent of jQuery in the first 3 files of this pull-request still make full sense for the Platform and not for the CMS in the commit proposal https://github.com/beat/joomla-platform/commit/73eeffdd270190911dffb0841afbe6110eb7efae\n1. adding defer javascript statement and pre- and post-scripts in file libraries/joomla/document/document.php\n2. bug-fix in file libraries/joomla/document/html/html.php\n3. consistency improvements and pre- and post-scripts in file libraries/joomla/document/html/renderer/head.php\nBut I guess that as the individual change proposals in this pull request have not been looked at, \"those 3 kids are being thrown out with the bath water\" too.\nSo, as this discussion here won't lead to an improvement to the javascript support in the Platform, i'm stopping my own timewaste here on this as long as someone has not actually read through the code and understood at least the first 3 files of the commit of this pull-request.\nSincerely, Respectfully and constructively,\nBeat\n. @mbabker Compare the clean use of existing API in https://github.com/joomla/joomla-platform/pull/1359/files to your implementation. And the well thought inclusion of generic Javascript supportive functions into the Platform.\nMy vote goes to include pull request https://github.com/joomla/joomla-platform/pull/1359 into the Platform: it contains all our latest discussions on the minimum set that should go into the platform.\n. I don't see why Mootools couldn't use same.\nAlso Pre and Post scripts are useful. You got yourself an example why Post-script is useful to add a single line of code without making an extra-http request or modifying a standard library.\nBest would be for you to post those comments to pull request 1359, or better to fork it and make the changes you wish as you wish and then make a pull request to that fork, so Joe can review and merge (as Joe took the leadership of the Javascript workgroup as I understand) ?\n. Andrew and Michael: I'm retracting my remark to Michael: Indeed I misread the changes proposed in https://github.com/mbabker/joomla-cms/compare/JScleanup#L13R27 the wrong way around, where Michael was indeed replacing the direct output of jquery in html by using the proper APIs.\nMichael: Sorry about that. I was just getting too tired and misread the diff.\nI think and hope this closes all polemics in here.\n. I think an object should stay an object syntax-wise too ;-)\nOr are we moving away from OOP ? :-O\n. One more vote for this pull request :-)\nFollowing discussion in https://github.com/joomla/joomla-platform/pull/736 's conclusions. :-)\n. I confirm the mysqli issue (trying to install Joomla 3.0 git on Mysql 5.0 fails (separate CMS bug) but displays no error message from mysql)\n. ",
    "radiant-tech": "Sorry, gave incorrect track #.  Should be #25788.\n. Thanks Louis.  I'm not up to speed on unit tests yet, but if someone wants to point me in the right direction I'll see what I can do.  Could various instances of the comment types be added to casesGeneric() in the filter tests?\n. Thanks Andrew.  Revised per your comments.\n. Nikolai ... in the pull request I've now added test functions for the new delete functions in JTableCategory and JTableMenu which I assume is the source of the failure error.  Is there somewhere else where I need to change the assertions?\n. Mark knew I was working on the unit test -- will send him a note now that everything passed.\n. Thank you Christophe for the fix.  Closing.\n. Well I would be VERY happy to see it merged (fingers crossed to get the new text filters into 2.5).  But I do want to make sure it is in a logical class location.  Given that the filterText method treated globally can also be used in module editor fields, do you see a problem with it in JComponentHelper (given the thought of moving that class out of platform)?\n. ",
    "orware": "Hi Elin, I did try and do a merge from the platform's staging branch prior to adding my database refactoring commit (it was just a single one at the end of all of the craziness above). I didn't actually want this pull request to include all of those other commits, but the pull request is including all of them. I still don't know enough about git to know why it does that.\nThank you for your comments...I haven't tried to resolve any of them aside from removing the index.html files from the folders in the database package, mainly because I don't know what the right answers are for those other questions.\n. Since I didn't put together this pull request cleanly from the platform's master branch I created a new one this morning and cherry picked the two previous commits into it in the following new pull request:\nhttps://github.com/joomla/joomla-platform/pull/610\n@elin if any of your previous comments still apply to the new pull request, please let me know and I'll try and make any needed changes.\n. Thanks Nikolai, I've had trouble getting CodeSniffer to work and I haven't gone back to try again. If there's a quick way on somebody else's end to create the report for me I can correct the style errors and as many of the warnings as I can.\n. The way the folders have been currently organized (and the files renamed),\naside from the ones in the table directory, since I didn't touch those,\nshould all conform to the new autoloader standard.\nI don't agree to changing the word \"driver\" to \"engine\" as the driver\nkeyword more correctly signifies the purpose of those files and is the more\ncommonly used term.\nAdditionally, I know we have two different viewpoints on how to organize\nthe files into folders...the way that I've organized them, and then one\nsimilar to the one you proposed.\nI chose to organize them the way I did because it seemed more logical to me\n(I didn't really need to change the class names at all, only the filenames\nonce I placed them in the correct folder), considering the types that I saw\n(driver, query, importer, exporter type files) and because I liked the way\nthe driver type was at the very end of the class name instead of in the\nmiddle, but that's just my preference.\nIf others feel strongly about one organization over the other it might be\ngood for them to chime to see if there's a strong argument for one over the\nother (I simply wanted to organize things according to the new autoloader\nwithout having to modify class names).\nOn Tue, Dec 6, 2011 at 6:40 AM, Christophe Demko <\nreply@reply.github.com\n\nwrote:\nI would prefer to have a directory structure like this:\nlibraries/database/engine/mysql/server.php (JDatabaseEngineMysqlServer\nclass)\n                                  /query.php (JDatabaseEngineMysqlQuery\nclass)\n                                  /exporter.php\n(JDatabaseEngineMysqlExporter class)\n                                  /importer.php\n(JDatabaseEngineMysqlImporter class)\n   libraries/database/engine/postgres/server.php\n(JDatabaseEnginePostgresServer class)\n                                     /query.php\n(JDatabaseEnginePostgresQuery class)\n                                     /exporter.php\n(JDatabaseEnginePostgresExporter class)\n                                     /importer.php\n(JDatabaseEnginePostgresImporter class)\nThis will allow the Joomla! autoloader to work without jimport and this\nwill be easier for maintaining db engines (one folder for one engine).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/610#issuecomment-3032976\n. @ianmacl  With the current approach the word \"driver\" isn't currently in all of the database classes. Some examples:\nJDatabaseQueryMySQL\nJDatabaseQueryOracle\nJDatabaseImporterMySQL\nJDatabaseDriverMySQL\nJDatabaseDriverOracle\n\nThe latest commit should fix all of the CodeSniffer errors...I'm going to take a look at the unit tests next.\n. @eddieajau The main things I could think of that would cause possible backwards compatibility issues would be if somebody directly instantiated JDatabaseMySQL classes in the past or something like that (since the autoloader needs the class to be called JDatabaseMysql to instantiate it correctly)...that's mainly because I removed registering the new file locations from all of the files in the database/database directory (I had them initially, but Louis recommended I remove them and just leave the JLog deprecated calls in). Existing MySQL stuff has basically remained untouched, though I have added some new functionality into JDatabaseQuery along with the new Preparable/Limitable interfaces.\n@ianmacl I'd definitely love to implement the escape method properly for Oracle, but I simply just don't know exactly what needs to be done for that at the moment, though I could try researching it some more tonight. The main reason why it isn't as big of a concern with the Oracle driver is because prepared statements are used instead so escaping becomes unnecessary. For example:\n$query->setQuery('select * from spriden where spriden_pidm = :pidm');\n    $query->bind(':pidm', 999999);\n    $this->db->setQuery($query);\nOr even reuse most of your query in a loop and just rebinding the variables:\n```\n    $insert = range(1, 100);\n$query->setQuery('INSERT INTO tablename (id, requests) VALUES (:idnumber, :requestnumber)');\n\nforeach($insert as $id)\n{\n    $query->bind(':idnumber', $id);\n    $query->bind(':requestnumber', $id);\n    $this->db->setQuery($query);\n\n    $this->db->execute();\n}\n\n```\nSince I think the Oracle class in particular will only be used in custom components with people wanting to tie into another system to retrieve data (mainly), using prepared statements like the ones above will pretty much be required...I don't see us running Joomla on top of Oracle in the near future, but I will try and find some additional information related to escaping and see if I can implement the method more accurately.\n. @robschley I was thinking along changing the name initially, but thought against renaming JDatabase for two reasons:\n1. Mainly, I liked JDatabase over JDatabaseDriver\n2. JDatabase feels more like a factory in a way for getting instances of any driver, query object, importer, exporter, etc. so that made me feel like it wasn't necessary to add the Driver bit at the end.\n@elinw Here's a comparison between what we have currently:\njoomla/\n    database/\n        database/\n        table/\nSo in the current scenario we have driver classes, query classes, and the more recent importer/exporter classes all residing in the database/database folder.\nIn the new organization we have the following:\njoomla/\n    database/\n        database/ (for the backwards compatible classes)\n        driver/\n        exporter/\n        importer/\n        query/\n        table/\nFor me I don't feel that's much of an extra hierarchy, and I enjoy the fact that now all of the files are organized in a way that makes sense, at least for me. And actually, most of this reorganization is really related to making the needed changes so that the autoloader would work properly, and in a way that didn't modify much of the class names (aside from the driver ones, I didn't have to rename the query, exporter or importer classes...aside from the casing change I had to make the other day from \"JDatabaseMySQL\" to \"JDatabaseMysql\" since the autoloader uses camel casing as part of its convention for locating files.\n. ",
    "thinkeryvin": "Yeah, either way works - pull request sent with the change to 'true' and 'false':\nhttps://github.com/joomla/joomla-platform/pull/626\n. ",
    "janschoenherr": "Shouldn't it always be empty? It's in the constructor.\n. @elkuku sure:\nIf I create an instance of a subclass of JView\nclass FooView extends JView {\nand pass the constructor an array with the name\nnew FooView(array('name' => 'bar'))\nthe constructor of JView sets \n$this->_name = 'bar'\nthen continues to\n$this->_setPath('template', $this->_basePath . '/views/' . $this->getName() . '/tmpl');\nand here it calls \n$this->getName()\nthis returns empty, because $this->name is not set yet and the name is not being retrieved from the class name.\nYou'll end up with something like\n$this->_setPath('template', $this->_basePath . '/views//tmpl');\nbut expect something like\n$this->_setPath('template', $this->_basePath . '/views/bar/tmpl');\n. ",
    "adriansi7": "I have noticed the same issue today with my Joomla 1.7.3 . After doing some tests i found a workaround :\nIn libraries/joomla/cache/cache.php :\nUnder ( public static function setWorkarounds ) i have changed  $loptions['nohead'] = 0  ; to 1  \nAnd now there are no more duplications but the head section doesn't get cached .\nI really hope this issue will be fixed . \nThank you !\n. ",
    "stutteringp0et": "Trying to figure out how to set the nohead option without editing a library file.\n. I wonder if this can be fixed with a system plugin that scans through the scripts looking for (and removing) duplicates...  Since the platform-developers haven't seen fit to even classify or comment on this issue, it must not be that important to them...  Or maybe I pissed someone off and my report is being ignored (a distinct possibility - I can be abrasive)\n. this is directly related to an issue I submitted:\nhttps://github.com/joomla/joomla-platform/issues/673\nThe issue is not only for modules, but plugins as well.  I have modified JS in several of my plugins to detect if they've already been run.  This is no good for the output, however, as the head data just gets bigger and bigger.\nMy question is how to manipulate settings in JCache::setWorkarounds - which could be used t o mitigate this issue in affected modules/plugins.\n. ",
    "pascal06n": "Still present in joomla 2.5.4. For instance, it appears when you use the caption feature (img .caption) you'll get several script running so several captions.\n. Thx elinw for this quick feedback.\nwell what @adriansi7 proposed is not a fix but a good workaround. This issue remains open even though this workaround is part of next release. I haven't implemented it, but i'll do it soon.\nI'm very new in the joomla debugging area. But every developper (as I am but in embedded firmwares) are not always taking into account feedback from \"normal\" people :) At least this problem seems easy to reproduce. I don't know the priority of the bug.\nYou said you had discussions with people at Joomla and Beyond with issues around caching : what was the result of your discussions ? especially on this issue ?\nI'm just here for raising problems (especially  mine:) , and helping joomla developper :)\n. ",
    "creativeprogramming": "Hi guys i just fixed that: setWorkarounds wasn't doing the diff well, it used to do only array_diff to detect what a module added to the document head, but the script and the style object are exceptions that needs a string level diff to detect what was appended by a module.\nThis logic was already implemented in the JDocumentHTML->mergeHeadData() that is used to rebuild the head from the \"cache pieces\" so i think my fix matches the originally wanted behaivor of cache.php by you Joomla Developers.\nSo please review my pull request:\nhttps://github.com/joomla/joomla-cms/pull/2150\n. Thanks @Denitz, yes my contribute was just to identify the where the problem was (it was an hard debbugging session! ;) ) but it's written to be readable not optimized, so you Joomla! developers please optimize it as you want!\nAnyway I've to give your a feedback your review: \nphp\n        if (($now == 'script' || $now == 'style') && is_array($newvalue) && is_array($options['headerbefore'][$now]))\n                        {\n                            foreach ($newvalue as $type => $currentScriptStr)\n                            {\n                                if (isset($options['headerbefore'][$now][strtolower($type)]))\n                                { \n                                    $oldScriptStr = $options['headerbefore'][$now][strtolower($type)];\n                                    if ($oldScriptStr != $currentScriptStr)\n                                    {\n                                        // Save only the appended declaration.\n                                        $newvalue[strtolower($type)] = JString::substr($currentScriptStr, JString::strlen($oldScriptStr));\n                                    }\n                                }\n                            }\n                        }\n\nmerging the first if conditions and negating my \"happy\" empty if block is super-correct (it's filled with a comment to explain just to explain you why you should put a negation here).\nAnyway for the rest I'm not sure your code can replace mine with the same effects (Anyway now I can be wrong we have to test it deeply) but if i remember well you can't replace this:\n\nphp\nif (!stristr($OldScriptStr, $currentScriptStr)) {\n         //save only the appended string in the cache entry for this module\n          $diffString = str_replace($OldScriptStr, \"\", $currentScriptStr);\n          $newvalue[strtolower($type)] = $diffString;\n }\n\nwith this:\n\nphp\nif ($oldScriptStr != $currentScriptStr)\n{\n        // Save only the appended declaration.\n        $newvalue[strtolower($type)] = JString::substr($currentScriptStr, JString::strlen($oldScriptStr));\n}\n\nin particular what I think is wrong is the != instead of the stristr surely you can use strstr or strpos but not != because if you debug you will se that $oldScriptStr can contain the current snippet but not equals it (as $oldScriptStr that is $options['headerbefore'][$now][strtolower($type)]; contains a bunch of cached inline scripts all merged in a string, this is the main issue!!!).\n\nInstead I'm sure you can replace my str_replace($a,\"\",$b) with something more optimized but not the substr at start! \n\nAnyway I can be wrong, time is past after my patch so please test your one deeply and if is correct go with that that is a lot computationally faster!\nUpdate, I was wrong with these points, it can never happen, i was confused and created confusion: Denitz patch is working perfectly\n. Now I updated the PR applying some of your optimizations:\nhttps://github.com/joomla/joomla-cms/pull/2150/commits\n. @Denitz first of all many thanks! \nYes my stristr was absolutely a nonsense, and I didn't know that str_replace and standard strpos can give problems with encodings! So thank you I updated the code using your suggestions and i'll remember them for any PHP/Joomla coding in the future. \n. please use last commit: using strpos() !== false we inverted the original logic that was a check of kind \"string NOT contains\" (originally it was a !stristr) so now is strpos() ===false and it works correctly, tested in Joomla 2.5.16 (only the diff added after $newvalue line) and in Joomla 3.2, against an environment with the reproducible issue and it fixed it\n. Sorry all, I was wrong: the first @Denitz improved version is the perfect solution! My original code has potential issues and is less optimized, sorry if I created confusion but I was paranoically figuring out a situation that can never happen in the Joomla cache system (now I'm sure)! Now my patch uses first @Denitz code that is safer and more performant! So please use last commit. Thanks again @Denitz  I apologize for the wrong point I issued.\n. ",
    "bigbangireland": "Thanks Rouven,\nIs there a discussion going on about Joomla and HTML5 or is there a thread I may have missed that you could point me to? It had been discussed on the ideas forum but nothing seemed to come of it. goo.gl/g1md6\nIt's not a mater of if microdata will be the standard, but when. The when will be affected by how quickly platforms such as Joomla adapt it. Google, Bing and Yahoo are all pushing microdata with schema.org. http://goo.gl/OfZcr\nJust because contexts such as 'property' (Open Graph / Facebook) are not valid, doesn't mean they are not used. In fact OG metatags are widely used in Joomla installations. This pull request would at least add the ability to group all metatags neatly.\n. Cheers Rouven\n. Sorry about that @joomla-jenkins new to this pull request stuff ;)\nChanges reverted.\n. @realityking I think @piotr-cz means that the type attribute is unnecessary for style, script and links when they are default values in HTML5.\n```\n",
    "brianteeman": "The code is not just useless it is confusing and illogical. \nThe proposed patch removes the replacement for < > which get stripped from titles anyway\nThe proposed patch removes the illogical and non-translateble replacement of \" with q\nThe only issue is that it replaces an & with a -. It would be better to just strip it completely or you end up with double - in the alias\nEg Cat & Dog becomes cat--dog where cat-dog is better\nPersonally I would prefer the replacement to be &=and or whatever is the appropriate translation but as time is short before 2.5 I'm happy that the & is stripped\n. Thats good enough to make me happy ;)\n. No because an alias is only created when the alias is field is blank\n. ",
    "romacron": "mist ;-)\nYes of course, i strictly ignored php5.2 \nstupid question: where can i find the repo for \"Platform 12.1\"\n. the previous messages didn't arrived my mail account. \nIm not able to reopen this ticket.\nlibraries.joomla.form.form line 2000 in getInstance()\n// Instantiate the form.\n$forms[$name] = new JForm($name, $options);\nto \n// Instantiate the form.\n$forms[$name] = new self($name, $options);\nso developers can use\n$myOwnFormClass = happyForm::getInstance();\n. ive seen it on your stage it solves it, think\n. i had reopen'd the ticket\nand changed  https://github.com/romacron/joomla-platform/commit/3c28b42057de12075caea03eed171a1072a64895#diff-0\nresize actions if they should scale to Edge must have as opposite value $rx  or $ry an 0 not the $this->getWith()\n. thanks for fast changing !!!\n. thanks it is fixed !\n. Hello Rouven,\nof course. I have an small infight with the github..\ndescriptions and titles: okay of course\nThanks for informing.\nAm 04.04.2012 17:57, schrieb Rouven We\u00dfling:\n\nHi romacron,\nthe pull request isn't mergeable and also has some style issues. Could you please separate it into multiple pull requests? Thanks.\nAlso please try to use a meaningful title and description for pull requests, we use those to generate a change log.\nI'm closing this one.\nRouven\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/1119#issuecomment-4956641\n\n\nDiese Nachricht ist ausschlie\u00dflich f\u00fcr den/die beabsichtigte/n \nEmpf\u00e4nger/in bestimmt. Sie enth\u00e4lt vertrauliche und gegebenenfalls \nrechtlich gesch\u00fctzte Informationen. Sollten Sie nicht der/die \nAdressat/in sein oder diese Nachricht irrt\u00fcmlich erhalten haben, bitten \nwir Sie freundlichst, sie an den/die Absender/in zur\u00fcckzusenden und sie \neinschlie\u00dflich aller angefertigten Kopien zu vernichten. Die Weitergabe \nund das unerlaubte Kopieren dieser Nachricht sind nicht gestattet.\nThis message is for the sole use of the intended recipient. It may \ncontain confidential and possibly privileged information. If you are not \nthe intended recipient or if you have received this message in error, we \nkindly ask you to notify the sender and destroy these messages including \nall copies thereof. Any disclosure or unauthorized copying of this \nmessage is strictly forbidden.\n. Hey Rouven does the last descriptions how you imagine?\ngruss roman\n. thanx, it should solve it.\nGreetings Roman \n. Hello Elin, i have seen your comment. In order that will get the git running for me, i will check the #1095 with the info from andre.\nPerhaps someone can tell me how i remove the \nd1672be         i think there must be an imagedestroy inside the class\n188aa37         Merge pull request #1 from romacron/patch-1\n3c2e137         the db instancer called to late for sterr\n01f5a5e         By using more then one Colorpicker in a form the trigger must identif\u2026\n07b9fea         Update media/system/css/mooRainbow.css\n3c28b42         Update libraries/joomla/image/image.php\nfrom the pull request. Better 1 pull request for one change?\n. Hallo Andrew,\nthanks for fast response.\n\"Pushing different Branches\" so i will sort the stuff.\nGreetings roman\nAm 09.04.2012 01:18, schrieb Andrew Eddie:\n\nCan you redo this pull so that the change in libraries/joomla/installer/adapters/file.php is not present.  Thanks.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/1134#issuecomment-5019180\n\n\nDiese Nachricht ist ausschlie\u00dflich f\u00fcr den/die beabsichtigte/n \nEmpf\u00e4nger/in bestimmt. Sie enth\u00e4lt vertrauliche und gegebenenfalls \nrechtlich gesch\u00fctzte Informationen. Sollten Sie nicht der/die \nAdressat/in sein oder diese Nachricht irrt\u00fcmlich erhalten haben, bitten \nwir Sie freundlichst, sie an den/die Absender/in zur\u00fcckzusenden und sie \neinschlie\u00dflich aller angefertigten Kopien zu vernichten. Die Weitergabe \nund das unerlaubte Kopieren dieser Nachricht sind nicht gestattet.\nThis message is for the sole use of the intended recipient. It may \ncontain confidential and possibly privileged information. If you are not \nthe intended recipient or if you have received this message in error, we \nkindly ask you to notify the sender and destroy these messages including \nall copies thereof. Any disclosure or unauthorized copying of this \nmessage is strictly forbidden.\n. now it is changed with an clear pull request\n. okay thats the alternate, so this patch  can be removed from pull request.\n. Hallo realityKing,\nfixed in https://github.com/joomla/joomla-platform/pull/1418\n. Thank you for the information. There are a lot of codestyle errors. So \ncould not imagine that 143 errors made by my self in an 10-lines function.\nAm 30.07.2012 10:21, schrieb Sam Moffatt:\n\nYou do realise an email copy of the comment you just deleted is sent.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/1418#issuecomment-7362671\n\n\nDiese Nachricht ist ausschlie\u00dflich f\u00fcr den/die beabsichtigte/n \nEmpf\u00e4nger/in bestimmt. Sie enth\u00e4lt vertrauliche und gegebenenfalls \nrechtlich gesch\u00fctzte Informationen. Sollten Sie nicht der/die \nAdressat/in sein oder diese Nachricht irrt\u00fcmlich erhalten haben, bitten \nwir Sie freundlichst, sie an den/die Absender/in zur\u00fcckzusenden und sie \neinschlie\u00dflich aller angefertigten Kopien zu vernichten. Die Weitergabe \nund das unerlaubte Kopieren dieser Nachricht sind nicht gestattet.\nThis message is for the sole use of the intended recipient. It may \ncontain confidential and possibly privileged information. If you are not \nthe intended recipient or if you have received this message in error, we \nkindly ask you to notify the sender and destroy these messages including \nall copies thereof. Any disclosure or unauthorized copying of this \nmessage is strictly forbidden.\n. degree is also fixed\n. ",
    "davidhurley": "Yes.\n. Sorry, are you saying I should have updated that definition? It appears to be set as a string consistently throughout the file.\n. Yes, as reported in the bug tracker (referenced originally) I could not instantiate a new JView manually for inclusion because the function failed to pull the correct model. Regardless of deprecation or not I would certainly think we would want the code to be correct and fix a minor problem instead of attempting to defend an error by claiming deprecation. :)\n. Yep, I will give that a shot. \nAnd I'll post a short code block when I get on a computer. \n. Yeah, I saw that and I will update it too ;)\n. One example of my code calls are listed below...I am loading a custom fields view within another view on a separate model. One of my own library classes loads this function.  I'm updating the definition in JView and I'm looking into the modification of the constructor as a possible solution as well as recommended.\n$customFields = $customFieldModel->loadCustomFields($type, $id, $edit);\n    $config['name'] = 'customfield';\n    $customfieldView = new JView($config);\n    $layout = self::getCustomFieldLayout($customfieldView, $type, $edit, $customLayout);\n    $customfieldView->setLayout($layout);\n    $customfieldView->assignRef('customFields', $customFields);\n    $customfieldView->assignRef('type', $type);\n    return $customfieldView;\n. Upon updating the constructor to use $this->name instead of $this->_name the function does work as anticipated. \nI am unsure what if any other implications this change would make. Obviously, $this->name is not a deprecated variable ;) so perhaps it is a better solution. I have things open and can submit an updated pull request once a conclusion is reached on which function would be better to modify. \nIdeas?\n. Thanks Elin. I will do that!\n. I agree that JFactory may not be needed in the core but think it may be a bit before that is realized. I think this commit is a good fix to move towards using JApplicationBase as opposed to the legacy class.\n. ",
    "fititnt": "Humm... it should be get by input->get()? Ah, ok.\nJust tried to get from something like\nphp\nclass Test1extends JCli {\n    function __construct() {\n        print_r($this->input->args);\n    }\n}\n$cli = JCli::getInstance('Test1');\n. I see again Jinput. Thanks. Will close here.\n. ",
    "alxcube": "Hi! I am now working on some class that extends JTable, and discovered the same issue. Mysql really releases all table locks when another LOCK TABLES query is executed.  And also when parent method or some method that can be called directly or from another method calls _unlock() -- the table locks are realeased too. So here I propose some solution:\n\n\ncreate new method JTable::_getTablesForLock() that should return array of tables which should be locked for the top level _lock method:\n```\nprotected function _getTablesForLock() {\n        $tables     = array($this->_tbl => 'WRITE');\nif ($this->_trackAssets) {\n    $tables['#__assets']    = 'WRITE';\n}\n\nreturn $tables;\n\n}\n```\n\n\ncreate static property to hold locks counter:\nprotected static $_locks_counter = 0\n\n\nmodify _lock and _unlock methods:\n\n\n```\nprotected function _lock() {\n        if (self::$_lock_counter == 0) {\n            $lockTables = $this->_getTablesForLock();\n            $query      = 'LOCK TABLES ';\n            $tables     = array();\n            foreach ($lockTables as $table => $mode) {\n                $tables[]   = $table . ' ' . $mode;\n            }\n            $query      .= implode(',', $tables);\n            $this->_db->setQuery($query)->execute();\n        }\n    self::$_lock_counter++;\n\n    return true;\n}\n\nprotected function _unlock() {\n    self::$_lock_counter--;\n\n    if (self::$_lock_counter == 0) {\n        $this->_db->setQuery('UNLOCK TABLES')->execute();\n    }\n\n    return true;\n}\n\n```\n. ",
    "fevangelou": "We (JoomlaWorks) run a quick check on core code to see how it could be possible for Joomla! to read a template param (e.g. html5) and decide whether it should convert its output. I'm afraid this is not possible as it seems components may have already executed and therefore we cannot have full control of the output.\nIt's a lot easier to do this with a system plugin and it's what we're going for. Check the source code of this page to see the plugin in action: http://dev.joomlaworks.net/\nThe code is actually pretty small and conforms to this: http://dev.w3.org/html5/html4-differences/\n. If you eat your own dog food, you always stay away from such pitfalls...\nIf you don't on the other hand, well...\n. ",
    "bembelimen": "Yep, some small numbers will be broken. So do you think, it would be better to mark the check as \"deprecated\" and don't change the function at all. And then remove the check complete in the following Joomla! version?\n. I updated the comment, cause the < wasn't visible.\n. No, I didn't missunderstand you, we posted nearly at the same time ;) So my comment wasn't related to you, just an update notification what I changed.\nI will look into the test stuff.\n. Ok, I looked in the test cases and I wouldn't have a problem to write one, if the return value of the method is broken. But I have no idea how I catch a JError warning. Any suggestions?\n. Ok, I try to explain it more:\nBackground:\nIf you load this (<foo />) valid (XML) string with JFactory::getXML() you get an empty (J)SimpleXML Object. But this object is correct. That means empty($xml) says true but $xml !== false. The XML string is only invalid, if the simplexml loader functions return false.\nTo the problem:\nJoomla! tests only if the object is empty and not if it is false. That means, that if we use <foo /> we will jump into the if clause (cause empty($xml) === true). And there JLog logs a JError message.\nSo my question ist:\nHow do I write a test which detects this misbehavior? I need something like:\nInput: <foo />\nDetection of a JLog call => test false\nLink: https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/factory.php#L412\n. Yep, exactly. Thank you.\n. I think, this is a bad idea.\nLet's say a component uses behavior.caption\nold handling:\nComponent calls JHtml::_('behavior.caption');\nI create a plugin which can make any time: JHtml::register('behavior.caption', function() { return null; }); to deactivate it.\nnew handling:\nComponent calls JHtmlBehavior::caption();\nI have to create an Plugin with an JHtmlBehavior class which is loaded before the original Behavior class is included. In this class I have to implement all methods (framework, modal, etc.) which I plan to use and also add a dummy caption method to deactivate the caption itself. And with every update I have to check if the class had any security issues and have to update it.\nSo I see no sence in autoload the JHtml stuff. The _ method works very well, if you work the correct way and JHtml::_ have some advantages like the register mentioned above.\n. ",
    "signotorez": "php\nerror_reporting(-1);\ninclude_once 'libraries/import.php';\nfunction dg($var){\n    echo ' ';\n}\n$db = jfactory::getDBO();\n$e = $db-getExporter()->from($db->getTableList());\ndg(\"$e\");\n\nthis is how I do on manual test.\n. that's the problem. I can't do merge either ;(\nWhat should i do?\n. Not sure sir, like 'realityking' said prettier.\nsince code should have consistency (IMO). theres will be more replacement between \"\\n\" to PHP_EOL in libraries. i.e in utilities/xmlelement.php\nback again. Do we really*2 need this?\ni'll close this pull if unnecessary ;)\n. ",
    "matrikular": "Nope, everything else seems fine.\n. So, this patch didn't make it into 2.5 because?\n. Ok, thanks for the explanation.\n. ",
    "sseshachala": "ok - will add the condition.\n. Can this merged in to the platform please?\n. The reason we have to trim -\nIn SQLServer/SQLAzure - the language column is of ncharacter data type with size as 7. This will insert white spaces if there are characters less than 7.\n. We cannot modify the data type to nchar - nvarchar - since MS SQLServer recommends to use nchar/\nI am not sure if we can modify in JDatabaseSQLSrv. We get the row object in a generic way and cannot trim the column name explicitly.\nIf there are alternatives, please do recommend.\n. I dont think it is wise to do it at the database level without substantial perf. hit especially if we have to do trim on all columns.\n. this is breaking in SQLServer and sure will break in Oracle.\nMay be it is a good idea to introduce \"case when\" in JDatabaseQuery and submit a pull request.\nThanks\nsudhi\n. very similar to Oracle\nhttp://msdn.microsoft.com/en-us/library/ms181765.aspx\nPlease note - the SQLServer support is already part of the core. So we cannot break that code to support Postgres SQL. I would humbly request to revert back this change and revisit the case when in JDatabaseQuery appropriately  after careful thinking all possibilities.\nThanks\nSudhi\n. IMHO - we need to get the code into platform since it is breaking the SQLServer support in CMS which is already part of core. SQLServer is part of supported database and Postgress is not as of today. May be we can address the issue in a better way at the framework level rather than include here to break support for SQLServer.\n. This needs to be fixed in platform too. We will address additional concerns raised in CMS 3.0.\n. @andrew : For now - please commit the patch. For CMS 3.0 - we will need to fix char_length method for both SQLSrv and mysql as well.\nThat way for 2.5 - we can keep cms-platform in sync with respect to db changes and do understand - platform will never be same as CMS.\nThanks\nsudhi\n. I think - am not explaining this right.\nSQLServer checks \"is not null\" and !=0 wont work on sqlserver.\nIf I fix in sqlserver - everywhere we have case when - we will need to check the db and apply the condition appropriately.\nthis is more realistic\n1. Fix in the all db to include the '!= 0' in the db - so the code where case when is used does not need to check\nBlame it on vendors not supporting ANSI SQL. Char_Length is implemented in specific ways for all databases. \n. This is good to have. No objections.\n. ",
    "hooduku": "Can any one please tell me where is that 1 warning and 1 error? I know the warnings should be less than 200 or 199.\n. We can remove the extra a.id.\n. ",
    "betweenbrain": "Thank you Beat for the hard work that you have put into this! I am very grateful to see this moving forward. \nThis is certainly a tough situation to resolve, and one that we can see there are many approaches to. I do need to point out that the original post proposing behavior.jquery (https://groups.google.com/forum/#!msg/joomla-dev-cms/HfgjK07fYN8/E-0aPCzP5BUJ) was aimed at preventing multiple versions of jQuery being loaded.\nI agree with Ian in that I don't think that it is unreasonable to standardize on a common version of jQuery that developers need to develop to. My hope for behavior.jquery is that it would load a specific version of jQuery to encourage standardizing on that version, such as what happens with MooTools.\nAs someone who uses jQuery, and has experienced the b/c issue in 1.6 firsthand, I wouldn't mind having to develop to a specific version of jQuery if the core was loading it.\n. I can't see anything technically against this pull request, and am happy to see this being implemented. +1\n. +1\n. I'd hate to see this PR closed. I see a lot of support for it an not much opposition. What can we do to help get it merged?\n. Michael is exactly right in that the issue I'm trying to solve is that $currentAssetId isn't always set with the existing code. My approach was to change the existing code as little as possible. That said, Sam's solution of setting it to 0 on line 697 is a great way to approach it and would actually simplify line 779. If that's the approach the maintainers would prefer, I'd be happy to update my PR.\n. Thanks Michael. I'll work on tweaking my IDE settings to get the code style\ncorrect.\nBest,\nMatt\nSent from my phone that uses an open source operating system.\nOn Dec 19, 2012 2:24 PM, \"Michael Babker\" notifications@github.com wrote:\n\nLooks to be a better solution. Now we just need to get the codestyle\nfixed, and I think we're good to go.\nhttp://developer.joomla.org/pulls/pulls/1765.html\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1765#issuecomment-11544090.\n. Thanks!\n. \n",
    "sourcecoast": "I posted on the Joomla CMS development thread as well, but it seems like discussion is moving here.\nThis patch is nice work, and I don't mean to criticize the time put into it. It does seem to fix the multiple inclusions of the jQuery libraries multiple times, but it still relies on the developer to package their own files, which is odd. That file can be modified, compressed, debug version, loaded from cloud or local, etc. If that extension is the first to call dibs, it can cause problems for any other extension that needs jQuery.\nAdditionally, I know the 1.6.0 b/c issue has been raised, but this really doesn't fix it. If that attr() bug had been in 1.6.5 (let's say), and extension com_jq_good was loading 1.6.4 on a site, if the user installs com_jq_bad which loads up 1.6.5 (with the bug), then com_jq_good would all of a sudden stop working. It's not something that can really be fixed as it's a bug in jQuery, and that's not something Joomla should be responsible for fixing.\nSo, the main issue this patch solves is the multiple inclusions. For that, I think it's either something 'done right' in the CMS by including and standardizing on one version (reliably and consistly), or left up to developers to standardize on a proper method.\nIn my post on the CMS blog, I brought up Facebook Javascript library multiple inclusions which are a pain for us. If the CMS is going down a route of working around all multiple inclusion issues, that's fine, but I think it's going to get cumbersome to pick and choose which libraries are right to finesse and which ones are up to developers to figure out a solution for.\nAgain, not criticizing the work, just the purpose and can of worms I think it may open up.\n. ",
    "Joe-Palmer": "Beat, this is fantastic, thanks for you hard work! Everything looks good from here!\nI understand the argument that this should be in a plugin but as we can see here, there are already loads of plugins that will include jQuery for you:\nhttp://extensions.joomla.org/extensions/core-enhancements/scripts\nUnfortunately, the reality is that no-one is going to agree on one particular plugin and no-one want to say \"please download and install this 3rd party plugin before my extension will work\".\nI have built many Joomla sites and multiple jQuerys is the single biggest problem I come across time and time again. Having a solution to this in a LTR would be amazing and I will do anything I can to see it happen.\nI think the best solution is to include the latest version in the core which is only loaded when someone calls behavior.jquery. This will allow developers time to migrate to using the core version that everyone else is also migrating to. However, if there is a bug in that version, they can use Beat's solution to load their own version.\nThis would encourage developers to all use the same and latest version whilst giving them the option to load their own version safely without affecting anyone else's extensions. I can't see fairer then that!\n+1 for Beat's solution with Joomla shipping with just the latest jQuery which is the default behavior.jquery.\nThis time last year I was really against jQuery and I still prefer MooTools but I am now a realist and it is not worth fighting any more. Lets make life easier for our developers!\nThanks again Beat!\n. We need to do something to address the multiple jQuery issue, it is the biggest problem I have working with Joomla!\n. ",
    "laoneo": "behavior.jquery is really needed at joomla. All other big players like wordpress or drupal are shipped with jQuery as well. I'm personally preferring to have one jQuery version shipped with joomla and all extension developers have to use the same version. The users of GCalendar would be really thankful if jQuery would arrive at joomla!!\n. What means \"post 12.1\" ?\n. The cache class needs an array from $buffer1 = $document->getBuffer(); but when a Ajax request is done with a json response the $buffer1 is a string.\n. What happens now with this pull request? Is it merged?\n. @eddieajau means what? Should there be made a new pull request on the CMS? Can this pull request be moved over to the CMS?\nFor others if you want to do it https://groups.google.com/forum/?hl=en-GB&fromgroups=#!topic/joomla-dev-general/LLosuO2w6LU\n. ",
    "azrul": "Ping. Request for reopen.\n. The engineer in me agree with Andrew, a clear saperation between php code and the UI layer is a much cleaner approach. \nHowever, the more practical side of me agree with Beat. The craziness of multiple JQuery include in Joomla! CMS over the years (REALLY) need to stop. At the moment, I don't see mootools/javascript ever going to be removed from Joomla!-platform, hence whatever logic used to justify its inclusion in the first place (however faulty it may be), can/should be applied to JQuery as well. \n. ",
    "nickanti": "@AmyStephen \nFirst link is dated 2006, second one also 2006 and third one is broken (?).\nBeat's comment about it's not 2005 anymore seems in order.\nHowever all of this is more or less irrelevant.\nWhat can be learned - if people honestly want to - is that contributing code to Joomla is frustrating, difficult and virtually impossible mainly because there is no open (? or even closed) decision making process. \nAs I recall, Andrew \"asked/challenged\" Beat to contribute code to address this issue. \nBeat discussed this with me before he committed his time to this task. We argued at the time that this would be just one more case for rejection and frustration, but he went ahead anyway with the thought that this contribution can also be used in CB..\nThis entire thread and the corresponding discussions on Google and elsewhere is a great use case for the - much abused term Joomla community - to see how unguided, unmanaged (or mis-managed) volunteer (and some externally funded) resources transform themselves into a brick wall against contributions.\nI will not be replying at all from here on to this thread. Just felt that for completeness and honesty these not so uncommon in the Joomla world situations should be clearly tagged for historic reasons.\nI for one THANK Beat for taking the time to respond to a call for action - or whatever one chooses to call it.\nRegards,\nNick from CB Team @ Joomlapolis\n. ",
    "chinhpv": "Hi Michael,\nI have a question about this, why the JElement class is removed in Joomla 3, and when i need this class, i should use what class to replaced JElement.\nRegards\n. ",
    "greniers": "fix proposed here\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_id=8103&tracker_item_id=27788\nfix:\n $cache = JFactory::getCache();\n $folders=JFolder::folders(JPATH_CACHE); New line\n foreach ($folders as $folder){                     New line\n    $cache->clean($folder);                         Mod line\n }                                                             New line\nJust after  $cache = JFactory::getCache(); at two place into the file lines 192 and 257 of the file for joomla 2.5.\npath: administrator/components/com_config/models/\nfilename: application.php\nthe same fixe work on joomla 1.7.x (the file is not the same version, just find  the two line $cache = JFactory::getCache();)\n. ",
    "katalystsol": "@joomla-jenkins ... I'm not sure what you're referring to. If I did something wrong, let me know. I'd like to learn how to work with this... The docs.joomla didn't say anything about a test log.\n. Ok. Thanks. I've corrected the line. I'm guessing the 165 warnings are from the rest of the file?\n. Thanks. I just tested that on my site and it works with only changing the one line. Do I need to change this pull request then?\n. I updated the file. Thanks for your help.\n. ",
    "imarklee": "Hey, this patch doesn't seem to be included in 2.5.6 . \n. ",
    "jamesmoey": "Do you want me to do the changes and do another pull request? addUserToGroup method on the helper class need to be change too then.\n. ",
    "LivioCavallo": "This has been closed but the problem remains.\nIn Joomla!3 (v.3.4.3) if you create a menu item of tagged-elements of a specific category, the generated link in the menu item will be invalid html, as it contains raw '[' and ']'.\n(to reproduce the problem please look at the source html, or look at the page in IE or Chrome, as Firefox anyway shows embellished urlencoded links to the user!)\nI think it should be fixed as proposed by ebitester1.\nOr at leaset by removing the \"superfluous\" urldecode (is backward compatibility with Joomla1.5 still important?).\nI did so in my code and so far (1) all works well.\n. ",
    "jptweb": "I am encountering this issue in Joomla 2.5.6 \n. ",
    "Chraneco": "Hi,\nin Joomla! 3.0 feeds don't seem to be cached at all with JFeed.\nWhich is the intended way for that?\nRegards\nChraneco\n. No, regarding JFeed I just answered to your question :-)\nThis issue is still about caching SimplePie which is implemented in the platform and used by the CMS (at least in Joomla! 2.5).\n. > This would make the element set to something completely different to \"en-GB\" or \"ur-PK\".\nYes, this is intended. It is required that something else than the langage tag is used so that different extension language packs for the same language can be distinguished.\n\nchanging this setting would break uninstalling any language pack near as I can tell from a simple code review\n\nI know that this would break backward compatibility, but as far as I know this is allowed for Joomla! 3.0.\n\nInstalling extensions specific lang files is done in 2.5 using the type=\"file\"\n\nIs this documented somewhere? According to the code in the languages installer, it should work the way like it was in Joomla! 1.5.\n(So that the installer can notify the user when he tries to install an extension specific language pack for a language for which the core pack isn't installed)\n. Hi,\nI see, but what a pity that this work was for nothing then. I searched for work in progress about that afore starting, but could not find anything. Could you please post a link to more information about that work in progress?\nMoving the CMS specific classes into the legacy folder shouldn't be a problem. The main point I focused on was to separate the MVC framework so that in can be used in a standalone application.\nRegards\nChraneco\n. You are right, good point. I have added this parameter.\n. It's the first time a tried to rebase a branch and I think I messed it up a bit :-)\nSo here is a new and cleaned pull request: #1596.\n@piotr-cz \nThanks for putting all that together.\n. @eddieajau \n\nCan you add a reference to where this is being used in the CMS?\n\nAs @piotr-cz already mentioned, there are several places where this strategy is used.\nSince there are different developers using such a class I think it's a good reason to integrate it into the platform:\n- For seeing it in action please have a look at the strings.json.php-Controller of the language manager in the CMS and at the JavaScript file overrider.js.\n- In the installation application nearly the same class is used: InstallationJsonResponse (defined directly in the controller file).\n- In the finder component an extended and specialised version of the class is used: FinderIndexerResponse (defined directly in the controller file).\n- For example, the controller file.json.php can easily be adapted for simplifying its code together with JResponseJson.\n\nt's probably worth looking at this GSOC project for how a JSON response is handled\n\nThe benefit of this class against the handling in that application is that not only data is encoded and returned but also a success flag is set automatically depending on the arguments. For example, the class can handle normal objects and arrays but it can also handle an exception with which success is set to false and the message is appended to the response.\nFor the various ways to use this class please have a look at the unit test file.\nI just want to add an additional example here. Assuming that the following is a task of a controller:\n``` php\n  public function execute()\n  {\n    try\n    {\n      $model = $this->getModel('example');\n      $result = $model->createSomething();\n  // Some more code\n\n  echo new JResponseJson($result);\n}\ncatch(Exception $e)\n{\n  echo new JResponseJson($e);\n}\n\n}\n```\nIf everything goes right the success flag will be set to true and the requested data will be returned. If an exception is thrown the success flag will be set to false and the message of the exception will be returned. \n\nfor example, not every platform application will necessarily have a message queue\n\nThis is already covered by using is_callable. In applications without a message queue, it is treated as if $ignoreMessages is set to true.\n\nI'm not sure this adds a lot to JResponse but I'd certainly like to see this class extending it if it's to be used at all.\n\nAt the moment I don't see any benefit of that or are there other reasons for that? This class actually doesn't use any code from JResponse.\nFor making it clear: This class just creates the JSON string for the response which in turn usually would then be inserted into the body of JResponse (like it's happening automatically in the CMS) or another response object like in JApplicationWeb, for example.\n. The JResponseJson class was recently merged into the CMS libraries.\nI added a documentation article about it here:\nhttp://docs.joomla.org/JSON_Responses_with_JResponseJson\nAny feedback is very welcome.\n. Could you please have also a look at this\nhttps://github.com/joomla/joomla-cms/pull/236\nwhile talking about the backward compatibility issue?\n. ",
    "railgt": "$class = 'className';\n// what we have now\n$parts = preg_split('/(?>=[a-z])(?=[A-Z])/x', $class));\nprint_r($parts); // will print Array ( [0] => className )\n// what I suppose should be instead\n$parts = preg_split('/(?<=[a-z])(?=[A-Z])/x', $class));\nprint_r($parts); // will print Array ( [0] => class [1] => Name )\nI assume that the original idea was to provide the way to automatically generate a path to class storage based on the Camel naming. In the first example the path to the class will be /classname.php and in the second case it will be /class/name.php\n. Agree. The given example was an example of the used RegEx expression. Funny thing - just downloaded the latest version and the code is correct. Here is the extraction:\nprivate static function _autoload($class)\n{\n   // Only attempt to autoload if the class does not already exist.\n   if (class_exists($class))\n   {\n      return;\n   }\n// Only attempt autoloading if we are dealing with a Joomla Platform class.\n   if ($class[0] == 'J')\n   {\n      // Split the class name (without the J) into parts separated by camelCase.\n      $parts = preg_split('/(?<=[a-z])(?=[A-Z])/x', substr($class, 1));\n```\n  // If there is only one part we want to duplicate that part for generating the path.\n  $parts = (count($parts) === 1) ? array($parts[0], $parts[0]) : $parts;\n// Generate the path based on the class name parts.\n  $path = JPATH_PLATFORM . '/joomla/' . implode('/', array_map('strtolower', $parts)) . '.php';\n// Load the file if it exists.\n  if (file_exists($path))\n  {\n     include $path;\n  }\n```\n}\n}\nSorry for bugging you, but it looks Ok now. \n. ",
    "ebird2211": "Hi Elin,\nthanks for the pointer - I'm still quite new to this stuff as you can easily see :) so please bear with me. I already made the fork however my Eclipse still has issues with the upstream push - I need to sort that out, I don't want to use the command line tools if not at all necessary. Yeah, most of the time I'm lazy ;-)\nBest wishes,\nErnest\n-----Urspr\u00fcngliche Nachricht-----\nVon: elinw [mailto:reply@reply.github.com] \nGesendet: Sonntag, 26. Februar 2012 17:37\nAn: ebird2211\nBetreff: Re: [joomla-platform] Some code to keep valid HTML when splitting or truncating (#929)\nSince this uses Git, you need to make a fork of the repository, edit it, and then make a pull request back. If it is just one file you can do it completely online (navigate to the file and click Fork and Edit). Since you are adding a new file, however, that really won't work.\nThis patch seems to include  a number of unrelated changes and CMS changes.  Only platform pieces should be submitted to this tracker.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/issues/929#issuecomment-4182401\n. ",
    "stefanneculai": "I think you should do Pull Request on your commit mentioning the no of the issue. That worked for me.\nStefan\n. Indeed it does. I will update it an commit again. \n. Please take a look over: https://github.com/joomla/joomla-platform/issues/834\n. Fixed and test added in.\n. Indeed it was a problem with those 2. \nI have done some more tests and it seems that the parse_url from JString does nothing for UTF-8. I mean.. I have tried to return the result of parse_url and all tests pass.\nMaybe this function is old and in the meanwhile PHP has solved the problems. I am using PHP 5.3.8..\n. The test that was expected to fail is below.. At my end it does not fail.\n$url = 'http://joomla.org/mytestpath/\u00c3\u02c6';\n$expected = parse_url($url);\n// Fix up path for UTF-8 characters\n$expected['path'] = '/mytestpath/\u00c3\u02c6';\n$actual = JString::parse_url($url);\n$this->assertEquals($expected, $actual, 'Line: ' . LINE . ' Results should be equal');\nCould anyone try my last commit with another version of PHP  or on Linux/MAC. I have used Windows.\n. Any comments on this? I have just tested it on both Windows and Linux and calling the parse_url function from PHP is enough.\n. Works fine on Windows too. I have created a new pull request: https://github.com/joomla/joomla-platform/pull/1285\nThe new one should work to be merged.\n. Done.\n. Fixed by pull request #1291\n. The comment of the parse_url was saying: \"return  mixed  Associative array or false if badly formed URL.\" In fact, all methods that call parse_url expect to get an empty array. I have changed that and should be fine now.\nI tested it on: Windows and Linux with php 5.3.4 \n. Yes, making that fix would break 5 unit tests from other packages.\n. I have opened a pull request (#1382) that should fix this.\n. OK, but currently doing\n$uri = new JUri('http://mydomain.com?url=http%3A%2F%2Ffoo.com');\necho $uri->ToString();\nwould return http://mydomain.com?url=http://foo.com instead of http://mydomain.com?url=http%3A%2F%2Ffoo.com. \nIn my opinion it's more important to have it working well on such strings. As Diana said, she needs to make a CURL request to an URL similar to the one above, but because of the current parse_url this is impossible.\n. Sure :-)\n. Oh yes, I will add that in.\n. Updated and fixed some coding style problems.\n. Fixed by pull request #1458\n. Would be a problem to name it 2client.php? \nMaybe make a folder called v2 and put the client.php in it. This way it would be JOAuthV2client.\n. I thought that would close by itself when the PR is merged.\nFixed by pull request #1474.\n. Take a look at the following line:\nhttps://github.com/aaronschmitz/joomla-platform/blob/50c7794826a7e763604f37e6c07412564f961188/tests/core/case/database.php#L491\nI think this line should mark the test as incomplete if driver=null and this way getConnection is never called. I would say that there is a problem with using empty which has a strange behavior depending of PHP version. Try is_null(static::$driver) instead of empty(static::$driver) - this may fix the issue.\nThis is only a guess. Sorry if I am wrong.\n. It doesn't look like PHPUnit_Extensions_Database_TestCase uses getConnection before setUp so I supposed that it is called after that. If driver is null then the test should stop and be marked as incomplete. This way getConnection is never called if driver is null.  Maybe I'm wrong.\n. I was suggesting that the fix to this issue would be just to change if (empty(static::$driver)) from http://goo.gl/p3spv to if (is_null(static::$driver)) or if (static::$driver === null). I think this could replace all the changes that you did in this pull request. Maybe you can give it a try.\n. I know that but on some versions of PHP empty(null) returns false. :-)\nAlso, marking a test as skipped terminates the current test immediately (I have just tried that).\n. Looks good.\n. @realityking I have pulled this out and tried all kind of tests and looks good. I think @aaronschmitz can explain all those strange str_replace and urldecode. I have tried to tackle this issue several times but Aaron's solution doesn't fail any test - or at least I could not find one that fails.\n. Any thoughts about this?\n. I really wonder how much it takes to comment or merge such a simple pull request - one month so far.\n. I have searched in platform for such a method but never thought it can be in JCrypt. That's what I was looking for.\n. Done.\n. I find it strange to name the class JOauthOauth2client. Wouldn't it be better to change the name to JOauth2client (it sounds more natural)?\n. Done.\n. I don't think this break is needed here.\n. I think that it would be enough to do  if (is_string($key) && $id). If the condition fails for $key it will fail for is_string($key) too.\n. Yes, but $key is by default null. I can't see any case when $key is not defined in this context.\n. I think there should be a filter option too - like get method has.\n. ",
    "brandtOSS": "Thanks, did not know that, sorry. I updated the issue description.\n. ",
    "ChristianEhlscheid": "Hi,\nI want to use it in a component installer. e.g\n\nclass com_mycomponentInstallerScript {\n\n    private $db = null;\n\n    function __construct() {\n        $this->db = JFactory::getDbo();\n    }\n\n    // i know thats MYSQL specific ... but since the component will only ever run on MySQL anyway ...\n    // the database name has to be specified in the where clause, otherwise false posivites could be reported if the MYSQL user has access to several \n    // databases and the index already exists in one of these ...\n    private function dbIndexExists($table, $index) {\n        $table = $this->db->getPrefix() . $table;\n        $dbname = $this->db->getDatabase();\n        $query = 'SELECT COUNT(*) FROM INFORMATION_SCHEMA.STATISTICS WHERE ';\n        $query .= 'table_schema = ' . $this->db->quote(dbname) . ' AND ';\n        $query .= 'table_name = ' . $this->db->quote($table) . ' AND index_name = ' . $this->db->quote($index);\n        $this->db->setQuery($query);\n        $count = $this->db->loadResult();\n        return $count > 0;\n    }\n\n   // update function for component ..\n    function update( $parent ) {\n      if (!$this->dbIndexExists('sometable', 'someindex')) {\n        // create the index ...\n      }   \n    }\n}\n\nIt's really a minor issue.\nIdeally such functions (Index detection) should exist on the specific database driver classes, but since they aren't there i have to code my own in the meantime ...\n. ",
    "Naouak": "Code style and test unit error should be fixed now.\nAmyStephen:\nWith the old version you weren't even able to set a query with multiple AND and OR. The where in your query would have been either with only AND or OR.\nI have some code to do nested AND and OR but it's kinda complicated to use. You can have a look at it there :\nhttps://github.com/Naouak/joomla-platform/blob/feature/nested-where/libraries/joomla/database/query.php\nI didn't tested it yet but it should give you the possibility to define any nesting of your query.\n. UPDATE :\nNested is now also available:\n$q->where(array(\"a = 1\",\"a=2\"),\"OR\");\nwill generate:\nWHERE (a = 1 OR a=2)\n$q->$q->where(array(\"a = 1\",\"a=2\",array(\"b=1\",\"b=2\")),\"OR\");\nwill generate:\nWHERE (a=1 OR a=2 OR (b=1 OR b=2))\nand finally to do nesting with multiple glue:\n$q->$q->where(array(\"a = 1\",\"a=2\",array(\"b=1\",array(\"b=2\",\"glue\"=>\" AND \")),\"OR\");\nwill generate:\nWHERE (a=1 OR a=2 OR (b=1 AND b=2))\nSee added test to understand how it works.\nI also fixed some test on JDatabaseQueryElementTest that were not working on windows because of the difference of end of line characters between systems.\n. @AmyStephen The aim of my pull request is to avoid having to write directly the content of the query. As you may know, SQL engine don't always works the same and the aim of that piece of code is to be able to do the same thing with different SQL engine.\nIf I extrapolate your answer, it's like saying \"you could write : $db->setQuery(\"SELECT * FROM #__table WHERE a = 1 AND (b =1 AND c = 1)\"); \".\nIf you wan't to be sure to be able to support the more SQL engine possible without having to write queries for each, you have to get an abstract layer like the one I added.\n. @AmyStephen \nThe function before my patch is : where($elements,$glue)\nwhere elements is a string or an array of string and glue the piece that will be before the string and between elements of the array. The glue parameter was only taken into account on the first call of the where function.\nIf you for example put OR as a glue on your first call, then the where parameters would be only composed of \"OR\" and you couldn't change that.\nMy pull request was to correct that behavior which seems to be a bug to me.\nThen you came and said it was ambiguous because of missing parameters. So I proposed an update of my patch that permit to define nested parameters so parenthesis would be addable.\nOld way of writing the code is still available as my code is fully backward compatible (that was my aim) but in my opinion, it's not a clean way to do it as it's like using an ORM for nothing.\n. Then why bother doing the explode/implode thing on the right side of the line ?\neitheir it use DIRECTORY_SEPARATOR everywhere or it use only \"/\".\n. PHP will treat \"/\" as correct for path. It won't generate any errors but you for code consistency, it would be better to either use only \"/\" or DIRECTORY_SEPARATOR.\n. Just skimming through that code I see some problem with the way everything is handled:\n- address should not be included in basic order in case of digital store.\n- states should not be hardcoded in files because a lot of shops will have other steps (like checking manually the order for example)\n- what about recurring payments or payment separated over months\n- what to do when the payment method workflow is not like the paypal one\n- how does the callback request would be handled ?\n- how about analytics(google analytics, piwik) tracking code handling ?\nIt's just thoughts I had by skimming through this code. It may have already been handled or the code is already able to answer some of these wonderings.\n. IMO : \n- Payment should be a list of simplification API to generate buttons, api calls or handle responses.\n- Class utility should be addressed by the CMS(or the application if there is) not the platform. These kind of data object are application specific.\n- Address may be done by the platform as it is a more generic type but it should not be part of commerce component. May be more like a location package.\nHere is a sample of the workflow I usually do when I have to do stuff with payment method:\nWhen preparing payment:\n1. Generate order* \n2. preparate form\n3. send it to user\nWhen checking payment:\n1. Receive payment* \n2. check data integrity \n3. check status \n4. do verifications according to status* \n5. send confirmation to payment system \n6. do stuff with the order\nActions marked with a * are for me application specific and should not be implemented in the platform.\nI encountered lately a payment system that require to upload some file to a ftp to send a payment notification and then you have to check the FTP the day after to see if payment was accepted. Need to think about a way to implement that too besides other payment methods.\n. ",
    "sfeigl": "Probably caused by still using mysql for the postgresql tests because config.php still has mysql as database driver selected.\nBefore changing test config to postgresql driver, I got exactly the same error / failure counts. \nIt would probably correct and consistent to use a separate config file like config_postgresql.php for postgresql tests and skip these tests when it is not present - like it is done for the other DBMS.\nIf you still need logs, feel free to request them.\n. Ok as I see now, that recently changed. On Thursday that was the case for mysql drivers. Now the testing architecture radically changed and you will probably have to adapt to the current head. Now, the DBMS specific config files seem to be gone. - at least I cannot find them at the moment.\nRunning the junit tests on the checkout of Thursday, most errors are invalid date errors. Probably by not using \"null date\" but a hardcoded 0000-00-00 00:00:00. I might have a more detailed look at this when I have more spare time\n. ",
    "danyaPostfactum": "Regex must cleanup formatted phone number by removing such allowable symbols as whitespace, dot, plus and hyphen.\nSo, such string as '+7 (914)-388.24.85' should be cleaned as '79143882485' and pass next regex. String containing other sybmols than hese 4 allowable symbols, shouldn't be cleanuped fully, and shouldn't pass numbers-testing regex.\nThe regex was broken due to unscreened hyphen.\n. Ok, so I offer to call JHtml::_('behavior.core') from framework() method.\nThis way doesnt break the compatibility and allows to override core.js in plugins\nBut, JHtml::core usage must be replaced with JHtml::('behavior.core'), not with JHtml::('behavior.framework') ( to prevent mootools loading when we only need to core.js.\nSo, core.js will be loaded in any way, wether we call JHtml::('behavior.core'), JHtml::('behavior.framework') or JHtml::script()\nBut if extension needs only core.js, it calls JHtml::('behavior.core'), if needs mootools , it calls JHtml::('behavior.framework')\nIs it possible to make these changes ?\n. Ok, I have learned this problem deeper. I think it is possible to change a little bit of code without any combatibiltity problem, and with satisfaction of my interests.\nFirst, what I think about usage of core.js and mootools framework:\nIf extension needs Joomla js object, it says behavior.core , If extension needs mootools framework (because of it uses $ function or addEvent for example) it says behavior.framework. If extension needs both of these things it calls both of behaviors. Extension shouldnt care how some of behaviors impements - may be it uses dojo or jquery, it doesnt matter.\nExtension just calls behavior.core and gets Joomla object.\nThat is my point of view of how it should be ideally.\nDue to backwards compatibility behavior.framework should call core.js anyway.\nSecond, to avoid recursion in calls of framework and core each other (framework calls core, and core calls framework and so on) we need to break this dependence. Because of we cannot remove the call of core in framework method (due to b.comp.) we need to rewrite core.js in pure js. Its very easy, there are two only methods which uses mootools, and I have rewritten it (with help of js master) already.\nIn future, when we get rid of the core.js call from behavior.framework, we will be able to use mootools in core.js (because of there will not be double-dependence of methods)\nFinally, what we get:\n1) Logically correct way to load mootools.js and core.js\n2) Possibility of overriding core.js call. So, in most cases, core extensions such as com_content, com_contact, com_users will not call mootools directly, they will only call keepalive, tooltip etc behaviors, and this gives us possibility to implement this behaviors with usage of any js library/framework you wish, just using joomla plugin.\nBut, I don't how did you replace JHtml::core in CMS. I guess JHtml::('behavior.framework') ? But frontend parts of com_content, com_contact etc havent need to mootools, they dont use $, addEvent etc, only they need is core.js and other behaviors (tooltip, keepalive and so on)\nIs it possible to change code in at least frontend part ? For now, in the last release of CMS, there over 10 calls of JHtml::core() - it so easy to change it to JHtml::('behavior.core').\nWithout this change, my plugin will not give a full effect - mootools will be loading but will not be in use.\nOr where can I try to discuss this problem ?\nI will place my plugin here. on github, but i havent yet have deal with it, so it takes a time :)\n\u0423\u0444\u0444...\n. So, what do you think about it?\nI want to create fast and lightweight sites, wich dont load tons of javascript. I want to give the availability to web-developers to use jquery correctly without loading mootools if they dont wont to use it.\nAll changes i offered will not affect outside Htmlbehavior file\n. I'm glad to see you agree with some of my thoughts :)\nYou asked: 'Can you really override JHtmlBehavior partly?'\nYes, there is the way: JHtml::register('behavior.jquery', array('myClass', 'jquery')). It works.\nAnd JHtml::register('behavior.framework', array('myClass', 'framework')) - it works too.\nFor now, if I need to override behavior.framework ( I want to load it from Google CDN, and I want to select wich parts of more.js I want to load, because I dont want to load this monsterous file), I have to override the whole behavior.php, due to self::framework() calls. \nBut if you don't want to change this, ok, it is not a big problem :)\nI'm not against using MooTools code in core.js, but we cant use it, until we remove core.js loading in framework method.\nIf we will call core.js in framework method, and will call framework in core method, we will get recursion.\nSo we have to remove core.js loading in framework method, or we have to remove framework call in core method.\nDue to backward compatibilty we are not allowed to do first thing, so lets do second one.\nAs you see, using pure js is not more complex then using MooTools in our case. Function renderMessages is still clear and simple.\nAfter removing core.js loading in framework method, we will get availability to use MT in core.js again.\nSo, I must get back self:framework() lines in my patch, do I ?\n. So, what about merging my patches?\n. Remove direct loading of core.js, let ::core() method do it\n. May be somebody wants to re-register behavior.framework (for loading from CDN for examle) , so, let it use his overriding method\n. core.js should not use MooTools (at this moment) to prevent recursive calls of framework and core each other. In future, extensions should call directly ::core() method when they needs Joomla object, so we will remove ::core() call from framework method, and we will get possibility to use mootools in core.js\n. Just pure javascript, it so easy :)\n. I don't know. I asked on javascript.ru to help me to \"decode\" mootools code into pure js , and professional js-coder helped me.\nI also offered innerHTML = '', but he sayd \"removeChild() would be better\" ....\n. ",
    "g1smd": "GB number such as +44(0)20 3000 5555 should be cleaned to +442030005555 removing the zero, but Italian number such as +39 (0)55 678 3456 should be cleaned to +390556783456 retaining the zero. Italian numbers include the zero even when dialled from abroad.\n. ",
    "tbela99": "here is the xml declaration for the element\ngetRouter() to return a site router, but it is not possible from the backend\n. if there is a parameter then: \nif I call JFactory::getApplication('site') I must expect a JApplicationSite instance,\nthe same way JFactory::getApplication('administrator') I must expect a JApplicationAdministrator instance.\notherwise there is an error in your logic\n. the current behavior is:\n//from the front end\n JFactory::getApplication('site') -> JApplicationSite\n JFactory::getApplication('administrator') -> JApplicationSite\n//from the back end\n JFactory::getApplication('site') -> JApplicationAdministrator\n JFactory::getApplication('administrator') -> JApplicationAdministrator\n. either you remove the parameter and the method return the right JApplication instance or you return the instance that correspond to the given parameter\n. I know how to get around this issue, my problem is about the behavior of this method. it needs to be fixed\n. this behavior is misleading and should be changed. when I pass a parameter, I expect the right result otherwise or  I wont have to pass a parameter and:\nwhen I call it from the front end I'll got a JApplicationSite\nwhen I call it from the back end I'll have a JApplicationAdminsitrator\nthe behavior should be one between what I have mentioned\n. I have some kind of deadlock here when using oracle pdo driver. \nconnected method calls query which in it turns which calls connected again somewhere in the call chain and finally die('Recursion trying to check if connected.');\n. Yes, I can't run any query. connected should run the query directly instead of calling query which leads to that infinite loop\n. ",
    "garyjaybrooks": "Exciting!\n. ",
    "sparxashish": "Yes, It is too nice and exiciting but have queries.......\nmy query is same , how to create procedures , i have asked so many forums but i have no answer.......\nIn this discussion and i have also see some features corresponding JDatabase and it functions but where i can see procedure or function to create........\n. ",
    "Case-Berlin": "the first Patch works\n. b2d1e4f\n. ",
    "danyj": "I just ran in to same issue tbela99 , \nI actually want to know from admin backend what template is set as default in frontend and thought that Japp or Jfactory would tell me this , but to my surprise , it gives me only admin  side instance info instead frontend \n$getinfo = JFactory::getApplication('site');\nif  print_r in admin I would expect to tell me what is in frontend.\ntried Amy's suggestion but it is same \n$getinfo = JApplication::getInstance('site'); \n. Thnx Elin , I did end up looking at the DB , but first tough was that site instance would give me the info. Thnx for explaining.\n. ",
    "BloodBaz": "It looks to me like the code change makes the complete foreach code block redundant.\n. ",
    "dianaprajescu": "I have done a pull request only for the bug fix. I wasn't aware that pushing facebook package to the staging branch on my repo will also add it here. For making changes only on my repo I believe I should push it to the master branch? Is it possible to change my commits or I have to close this pull request?\n. Yes, I will, but after I finish what I have planed for this week for my project.\n. I need to use pare_url in my project and this fix would really be helpful. Can you please merge it?\n. Yes, php parse_url works with UTF-8. I'm using it on a URL-encoded string according to RFC 3986, which performs character translation of textual identifiers to UTF-8.\n. Could you please do something about this? I spent again a lot of time because of this problem, I changed the branch and forgot about it. It's not easy to notice this and I spent a lot of time debugging my code useless. I'm using curl to send a request which has in it's URL an URL-econded string, after setting the request URL: $options[CURLOPT_URL] = (string) $uri; the string is no longer encoded.\n. Done.\n. Also, wouldn't it be a good idea to set the $_input variable in the _setOptions() method, like other private variables? Is this what the initialise() method should do? The method's comment is a bit confusing.\n. Thanks! \nYes, I know and I am trying to fix them. The fun fact is that locally the tests pass - the problem is at setting session the right way in tests.\n. Solved it, no errors now :)\n. There are only few differences between OAuth 1.0 and 1.0a so I have included OAuth1.0 in this client, using a constructor param, like @pasamio said.\nThere are some problems with the unit test and I would appreciate some help. Locally the tests are passing with no problems, but in the pull tests results I currently get Segmentation fault. This is after my last commit, before it I was getting: \nJSessionTest::testGetExpire\nSession expire should be 20\nFailed asserting that 900 matches expected 20.\n.../tests/suites/unit/joomla/session/JSessionTest.php:131\nI can't see how this is related to my code.\n. @eddieajau no, I don't have any documentation.\n@LouisLandry I have opened this PR 4 months ago, isn't that quite a long time? You should've gave me some feedback and collaborate on this if you were already working on something similar. It seems that I've wasted time for nothing. Both JTwitter and JLinkedin use this client and I was waiting for you guys to give me feedback and finally merge this PR in order to make PRs for JTwitter and JLinkedin.\n. @LouisLandry  Yes, the client class confused me, I haven't looked over it's content but the file is named oauth1/client.php, which is the same with my client. It makes sense to include this in a JHttp class, but for the moment wouldn't it be a good idea to have this OAuth client merged, just like Aaron's was until me or someone else has time to make the change?\n. @eddieajau I wrote some documentation for the oAuth client. Let me know what you think.\n. @eddieajau here is the app I was using for testing the JTwitter package. This is the class that extends the JOAuth1Client. And here is an example of an authorised request.\n. I would like to bring this PR into your attention too. The JTwitter and JLinkedIn packages that are ready highly depend on the OAuth client. Moreover, the PR #1786 depends on it too.\n. Thanks, @AmyStephen ! I'm aware of what @LouisLandry said, but I also suggested to get it merged like this for the moment, until I have time to change it and nobody told me this can't be done. Right now I don't have the necessary time to work on this, so we should probably close this PR and I'll reopen it later.\n. Yes, I haven't noticed that, it works by passing the cURL options through the $options parameter. This means that the option to follow redirects should also be passed this way and $options[CURLOPT_FOLLOWLOCATION] = true; should be removed.\nI will close this pull request and make a new one with this change if that's okay.\n. @aaronschmitz's solution solves my problem too and it also seems to be OK with @stefanneculai. See pull requests #1285 and #1382.\n. I have used only curl so far.\n. Socket does not follow redirects automatically, I'm not sure about stream and curl wasn't following redirects either until @robschley made it to do so 2 moths ago: https://github.com/joomla/joomla-platform/commit/3162faa6b6842bd3e269233044c59ace4cfc6a62.\n. It's not about what I think, I already told you that I need this.\nYou're talking about implementing consistent behavior across transports, but stream follows redirects and socket doesn't. \nI thought it would be better not to follow redirects because the RFC says: 'The action required MAY be carried out by the user agent without interaction with the user if and only if the method used in the second request is GET or HEAD. A client SHOULD detect infinite redirection loops, since such loops generate network traffic for each redirection.' : http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\nIf you want I'll leave it to follow redirects and add an if block not to change it if specified through an option. In this case you'll have to consider setting curl CURLOPT_MAXREDIRS option too.\n. @elinw, yes, there is a problem with CURLOPT_FOLLOWLOCATION if safe_mode or open_basedir are on, but by using @eddieajau's suggestion you could just disable FOLLOWLOCATION.\n. This could be a small, fast fix just to allow my project to work properly 100% and then if someone wants could make the change @pasamio wants and I would also make the necessary changes in my project to work with it. Since there wasn't a previous discussion about curl options probably there was nobody to need them, so is this a priority right now?\nI don't understand why are we arguing about this now while no one said anything when Rob first added that commit? Suddenly some of my project's methods weren't working because of this commit and now I'm just trying to fix it.\n. Thanks for telling me I'm not polite for nothing, the last change I made  $options[CURLOPT_FOLLOWLOCATION] = (bool) $this->options->get('curl.followLocation', true); would not break anyone's code and it is also consistent with stream. This code will return the followLocation option value if there is one set and true otherwise, so it will follow redirects by default and it is consistent with stream. If there's something about this change I don't see please tell me, but I'm not breaking anyone's code knowingly and purposefully.\nIf all you're after is renaming the curl.followLocation option to follow_location then you could say so instead of writing lines and lines telling me that I'm breaking someone's code and this is not consistent with stream because it doesn't follow redirects.\n. I hope it's fine now.\n. No worries @LouisLandry . I'm also going through a very busy period: university duties, diploma project, personal projects, some collaborations and conferences, so I'm not sure I would've had time to carefully go through the feedback. @elinw that's why I haven't squashed commits, I've tried but there are too many of them and it's quite hard to keep up while I'm already tired and under time pressure.\n. I have just updated this branch and solved the conflicts so that it's mergeable again. I'll also squash some commits soon and change the documentation file from facebook.xml to facebook.md, it probably needs some updating too as I made some changes since I've wrote it..\nI would really appreciate some feedback on this package! I might have some time every now and then to refine it and maybe we can get it merged soon.\n. Thanks very much. I really look forward to.\n. I just squashed some commits. Please let me know if there is anything else to do in order to get this merged.\n. No, this is using OAuth2 client which already is in the platform.\n. I looked over JGoogle and it doesn't seem much to change, but I'm not sure of this. I'm going through a busy period since I'm about to finish the University and I'm also working on a start-up. I can't promise to get this done very soon, but I talked with @elinw and I think she wants to do it.\n. Just opened an issue: https://github.com/joomla/joomla-framework/issues/83\nSchedule it for Q3 just in case, and I'll let you know if I finish it until Q2.\n. Probably because this is written in the doc block: @return  mixed  Associative array or false if badly formed URL.\n. Because urlencoded values will be decoded otherwise. For example if you have $url = 'www.example.com?keywords=foo%20bar' $result['query'] should be 'keywords=foo%20bar', instead you'll get 'keywords=foo bar'\n. Yes, this will solve my problem, I just thought it would be better not to follow redirects automatically. In this case it would be a good idea to set the CURLOPT_MAXREDIRS in order to specify the maximum number of redirects to follow, avoiding infinite loops.\n. Thanks for pointing this out, I've thought about it during the summer but haven't had time to change it then and after that I've forgotten. I started the package this way because most Facebook GET requests for public data don't require authentication. Anyway I think it's better to have the OAuth client in the base class. I'll commit the change soon.\n. Done.\n. ",
    "griiettner": "I don't think this is solved.. I'm runing the lates version and still getting the notices on iPad and iPhones...\n. ",
    "youjoomla": "Can confirm this patch was never added since the 2.5.1 ,  browser.php line 562 is same in 2.51 and 2.5.6 . However the patch from aaronschmitz does work\n. ",
    "nprasath002": "Hi realityking\nI,m new to Github.\nI will fix that and ping you.\nI,m just getting familiar with things.\n. Hi realityking.\nFinally i got the code style right.\nIn my IDE the new code is algined here it shows one tab off.\nI deleted the earlier fork to start fresh (Still testing in Github)\nPlease close that pull request\nSorry for the trouble\n. I cleanedup and made a new pull request.\nThanks!\n. corrected all typos. thanks\n. Fixed should be ok now. Is there a way we can run these tests externally?\nHow can i run the pull tester?\n. The overridden constructor instantiates a JHttpTransportStream instead of a JHttpTransportSocket\n. Done.\nThanks\n. ",
    "benjaminpick": "@realityking Can you please merge this pull request, as it fixes a regression by the already-merged pull request some days ago?\n. Also, it would be good to explain in the Doc-Header what a zero value means.\n. Still applies cleanly and works as intended after merging pull request #1151\n. Because your images are smaller than the fixed width?\n(Mine are like 200px large so I can't display them full size. But\nobviously, 10px-Images shouldn't be scaled up. Maybe I'll add a new xml\nparam, yes.)\nOn 21.04.2012 08:12, timoline wrote:\n\nNice, thx, we needed this for our component.\nI only removed the width and height of the preview image.\nmaybe you can set this as an option too, thx again\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/1105#issuecomment-5258422\n. @timoline Would you please review my changes and leave a comment on the feature tracker?\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=28176\n. Default Image: Do you mean, the image that is shown when no image is\nselected (currently none)?\n\nOr as default value, i.e. \"when no image is selected then select this\none\" - this kind of default you could easily implement in your extension\n(something like $param->getString('image', 'default image')).\n. For the directory-Folder-Bug: Which exactly are your values in the XML as well as the getParams('com_media') ? It should be a regression of #728 .\n. From documentation: \"This attribute should be relative to the top level /images/ folder.\" http://docs.joomla.org/Media_form_field_type\n. My survey of all field types says:\nOnly 'true' disables:\n- accesslevel\n- calendar\n- checkbox\n- color\n- combo\n- email\n- file\n- groupedlist\n- hidden (what does this mean, a hidden disabled input?)\n- list (read-only implies disabled)\n- password\n- text\n- textarea\n- usergroup\nEvery value that is non-empty disables:\n- checkboxes (wait, didn't checkbox behave otherwise?)\n- radio\nNothing can be disbaled:\n- cachehandler\n- All legacy field-types\nTo summarize: all types that map to a input-text box can be disabled via\ntrue. And media would be the first one to remove the \"Select\nNow\"-Button. @mbabker, @eddieajau, is this by intention?\nWe should have a unit test that ensures consistency over all field\ntypes, I suppose.\nChanging the behaviour of checkboxes and radio in favor of the\nmajority would break backwards compability ... we should at least add\nsome deprecation warning or so. However, introducing disabled for the\nlegacy field-types would not.\n. Proposing an implementation of the disabled attribute - (which version\nof the platform will be the next one?)\nOh, we have the same problem with the readonly-attribute, I suppose.\nOn 07.05.2012 11:33, Rouven We\u00dfling wrote:\n\nSince disabled is a very common argument we should consider moving it to JFormField (like the check for required). This could save some duplicate code and make sure the fields behave the same.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joomla/joomla-platform/pull/1188#issuecomment-5546625\n. But a \"non-edit type view\" would be readonly, not disabled.\n\n(The difference is that disabled form elements are not submitted at all\n(+ not editable), while readonly elements cannot be changed within the\nbrowser, but are still part of the form submit. (The distinction is\nmarginal, though, as \"not submitting a form element\" is the same as \"not\nchanging it\", except may be the egde case when the form is submitted for\nthe first time.)\n. > The disadvantage of putting it in JFormField is that the attribute is not relevant for all field types according to the W3C standards which is why we don't have it for checkboxes.\nI don't agree. Even if the attribute is parsed at JFormField, it doesn't have to be used in every field. I'd even go further and say: the fact that \"disabled/read-only\" doesn't always translate into a html attribute with this name (e.g. media), doesn't hinder us to use disable/read-only in every field. It should only \"behave as if\" (semantically).\nRead-only: The user may not modify the value, but it is submitted.\nDisabled: The user may not modify the value, and it musn't be submitted.\nAnd for the media-element type of input I'd prefer to show disabled (greyed-out) buttons, as in \"normally you can modify, but you can't here/at the moment\".\n. Cleaned-up.\nHowever, I still don't see a consensus on how to handle\ndisabled/read-only. I will try to edit in my suggestion in the comments.\nIt would be good to use them consistently through all the field types,\nso those would need to be edited afterwards.\n. I can redo the pull request, no problem. However, all the Field\nimplementations should also be modified accordingly, and unit tests\nwould be great as well - both things that I cannot currently fit into my\ntime schedule.\n. JS Code:\nhttps://github.com/joomla/joomla-platform/blob/master/libraries/joomla/html/html/behavior.php#L243\nI'd be very careful with changing the special char, because it seriously\naffects backwards compat (Maybe other functions creating tooltips were\nwritten, or other plugin Javascript code relies on it, or even just that\nthe current assumption \"~ is allowed, :: is not allowed\" doesn't hold\nanymore.)\nThrowing an exception would only make blunt something that never worked\nanyway. However, this is only useful for development, not if the text of\nthe tooltip was dynamic (e.g. as param of a plugin).\nI was thinking if it was possible to introduce some kind of escaping the\n: so that it doesn't conflict with :: anymore. (In the same way that \\n\nand \\ works, maybe replace : by : and \\ by .)\n. We could also, to reduce the issue to '::' only, concat the parts like\n$title . ' :: ' . $tooltip and then trim them in the javascript.\n. htmlescaping everything might by to harsh, as tooltips currently can\ncontain HTML-Tags in the title. Why not just str_replacing : by its\nhtml-entity?\nEven if templates don't use this function, it is present in platform and\nshould be fixed or its flaws documented, I suppose.\n. htmlescaping everything as in your template example solves a different\nproblem: $tooltip may contain a \", leading to invalid html.\nThe string is split in Javascript, so that the characters are already\nun-escaped there. We'd need to double-encode the colon, arount the lines of:\nphp\n$tooltip = str_replace($user_input_value, ':', '&#58;') . '::' .\nJText::_('JLIB_HTML_CHECKED_OUT');\n$tooltip = htmlspecialchars($tooltip, ENT_COMPAT, 'UTF-8');\n. Not really, sorry.\n. This cannot be correct: $width is 0, so this will divide by 0.\n. This should be != 'true' (XML attribute values are still strings). For testing purposes, use disabled=\"false\" as value - this currently disables the form element as well.\n. ",
    "AndOne1974": "i can test your proposed fix. could you send me the changed files ?\n. thx!\n. done ;)\n. thx elinw, i will find another way (xml install with all packages with the file tag) of installing my component, modules and plugin with one step. pls close the pull request.\n. ",
    "jespersh": "https://bugzilla.mozilla.org/show_bug.cgi?id=739588 was created. This is hopefully just a regression and not intended.\n. The issue has been resolved in current nightly from mozilla. I'd steer clear of firefox64bit.com in the future as its not a domain supported by Mozilla. Instead please use http://nightly.mozilla.org/\n. ",
    "joaktree": "Elin,\nCall me stupid ... but I don't know what that means \"making the pull request\" .   :-(\nCan you enlighten me what to do?\nNiels\n. Hi Elin,\nThanks for this info. I had never done that before, so I wasn''t sure what to do. I should collaborate more in open source projects, so I know better my way around. I will make a pull request the next time I find something in Joomla core. Thanks again.\nNiels\n. ",
    "timoline": "Nice, thx, we needed this for our component.\nI only removed the width and height of the preview image.\nmaybe you can set this as an option too, thx again\n. ok, thx\nwell sometimes you want to show the original size , sometimes they need to be resized (like your example)\nwe solve this like:\nwhen width=0 and/or  height= 0 ==> original size, \nany other value will resize it to that value\n. Hi, ok thx\nI tested it, but directory=\"folder\" isnt working correct for me anymore, \nI mean: when pressing select it not goes to the folder.........can you can confirm that?\nif I change back the code to:(line 130)\narray_shift($folder);\nit works ok....but maybe it has someting todo with the getParams('com_media') setting\nAlso a new param \"default\" would be nice\ndefault = the default image to use\n. Hi, I read it a few times, but I think the first one\nJust show the image which is set by default, when the user select a new image then show the new image\nThe default value is like a placeholder\n. <field\n            name=\"logo_small\"\n            type=\"media\"            \n            label=\"COM_JOOMLEAGUE_ADMIN_CLUB_LOGO_SMALL\"\n            description=\"COM_JOOMLEAGUE_ADMIN_CLUB_LOGO_SMALL_DESC\"\n            class=\"inputbox\"\n            preview=\"yes\"\n            directory=\"/com_joomleague/database/clubs/small\"/>\necho JComponentHelper::getParams('com_media')->get('image_path', 'images');\nimages\n. ",
    "blueboar2": "OK. I agree. Do it.\n. I've send pull request https://github.com/joomla/joomla-platform/pull/1143\n. Or, maybe, we need to change JTable::isCheckedOut, because it handles both static and non-static calls. I think, it is not good practice in PHP code.\n. ",
    "HermanPeeren": "I like it, that (almost 8 year's after it's introduction into PHP) interfaces are at last planned to be used in base Joomla classes. It will improve more loosely coupled OOP. Maybe it took so long, because Joomla kept supporting PHP4 in the 1.5 versions. \nI see you didn't extend the base classes from JObject anymore. Maybe your intention is to get rid of JObject totally (+1 from me). I guess: as it was mainly used to get some PHP5 functionallity (like the common name of the constructor) into PHP4.\n. Could you explain why you've put a controller-object in the base-view? I would expect a reference to the view from the controller, but not the other way around. \n. But if you make a new JControllerCMS to mimick the old JController, then you still have to rewrite all software that was built upon the JController. Just because that name is now used for something else, BC will be a PITA. Which is easily avoided if the old names are not used for new things. I think that is Nicholas' point.\n. Proposal: to make BC-adapters possible and to make the legacy-tree function, we should not give new classes and interfaces  old names.\n. @robschley I just wonder if such a need for dependencies is necessary for the proposed simplified MVC or a smell that there might be some improvement possible.\n. @eddieajau JModelBase cannot be put in 2.5 as is now because it implements an interface with the same name as a class that is used in the CMS now. \nMy proposal to avoid the same names is just to reduce work, not to slow down development: it is less work to use a new name (like JModelInterface) than to implement a new name for an existing concept (JModel in the CMS) for 10000 JED-extensions. Of course it is allright for people at eBay to use their own preferred names, but the Joomla-platform has more stakeholders (I hope...) and I think we should look for the best compromis there. Using JModelCMS (etc.) is a compromis, but it still implies a lot of unnecessary extra work for a lot of people, which could have been easily avoided by just another name; no slowdown of development, no lack of functionallity, no change of concept. When the proposers of this pull-request are the same as the ones deciding to leave the names as they are in the pull-request or to adapt it for the ease of others, they will probably be left as they are. I doubt whether it's mainly in the interest of the whole or of a few. I guess the only correct answer is: make your own pull request. But then this whole discussion would be unnecessary and we would miss the valid arguments that were presented here. Please (re)consider the whole picture.\nDon't want to pick up the discussion Amy left, but just as a clarification: in \"classic\" literature about MVC, you can have several views to show one set of data from a model. Now, when we just use one view and several layouts, the classical role of views is taken over by layouts. When the view can decide which layout to display, it takes over a bit of the role of the controller. That might explain some of the confusion.\n. Did I understand it well? Correct me if I'm wrong.\n- If this pull-request is accepted as it was presented now (so: with the short names for the interfaces), then the current mvc-classes, like JModel etc., will be added to the legacy-tree with changed names, like JModelCMS etc. \n- If that would be the case for 12.1, as is stated in the docblocks, so that probaly was the intention, then as soon as the CMS would use Platform 12.1 all existing code of the CMS and Joomla-developers that extends from those mvc-classes has to be adapted to the new names of the legacy-classes if they want to keep them working in that CMS-version.\n- Was it intended that CMS 3.0 would use at least Platform 12.1?\n- CMS 2.5 will not use a Platform-version with those new mvc-classes/interfaces\nLouis'plugin was a schetch, intended to show how you could use an extension both for a new CMS-version (with the interfaces in the framework) as well as for the \"old\" one. I think it doesnt work as sketched now, but we can produce something that works (as Nicholas allready showed). Still it will need quite some reworking of existing code, only for the sake of renaming.\nWhat I don't like about this is: that we cannot use the current and the new MVC together in one installation, without changing the current code. That would give the possibility to experiment with this very nice and very needed improvement of the platform while at the same time the old stuff keeps working. The odd thing is, that such a smooth transition is possible if only the old mvc-class-names would not be reused.  \nI wrote this before Nicholas last posting... but I'm much slower than he is (in may aspects). Still posting it, but neglect the overlap.\n. OK, thank you, Rob, for the correction! I misunderstood something, sorry. I incorrectly thought the legacy tree was an additional library, but it is used instead of the platform tree. \nNow I also better understand Louis' plugin: as a layer between the old and new classes. But that is not the way it is used in the legacy-tree. \nThe only thing that is not possible now is to play around with the interfaces while using the legacy-tree, but well, that's overseeable. Much of my worries have been taken away.\nThe only difference of the legacy tree with the current library is, that the MVC-classes have been moved to their own folders instead of residing under /application/component. But that is probably a better place anyway when using the autoloader. \n. I'm really shocked by Sam's way of expressing himself. Maybe it's just the cultural difference, but to me the way it is written is just plain rude, exposes rather bad manners and above all: is unnecessary arrogant and offensive. I don't want to discuss that, it's just to let you know how I personally experience it. \nLet's see it as a challenge to look at our own way of saying things. Let's stay factual and avoid moral expressions about persons. \nI think postings like mine now, about the way of saying things rather than commenting on the code, should be kept to a minimum. I doubted about sending private emails instead. But choose this comment-box after some consideration; sorry if it would annoy you. Know it is posted with good intentions and not to start a rant. Please don't comment on this in this thread (private messages or a more appropriate spot always possible).\n. Dear Sam, I totally agree with the content of what you say/said. I have the same frustrating experience of many people not thinking themselves. I also prefer to look for fundamental solutions instead of temporary fixes. And for me the need for creativity is the main reason why I like the \"art\" of programming so much too.\nMy only point was the way it was said. I think that your message would have been understood better if it had been communicated in a different way. \n- with better communication a message is delivered more efficiently. In the things you wrote were some \"jamming stations\" with an opposite effect; i.c. moral (good/bad) statements about a person. It was only in a few phrases, but one rotten apple can ruin the whole basket.\n- in any group, but maybe even more in a community driven open source project, the social aspect and way we respectfully value each other is equally or more important for the quality of the \"product\" than the way we design our software. To win an ocean sailing race around the world the teamwork is one of the most important aspects; probably even more than the technical condition of the ship. \nThe best way to learn others to communicate better is to show good examples of it yourself. That is a constant learning process, training our \"egos\" to stay in the background. \nThank you for all the time you took to react. But as said before: if there is any need to continue this conversation, we'd better find a more appropriate place for it.\n. Reading all the bits an pieces back (pfff...) it's nice to see that in the end the solution is in line of Diana's original proposal a month ago: we should use a parameter for following those redirects and the default value should be by a standard.\nThese postings were for me also a warning to stay carefull with interpreting people's intentions and to reread a discussion when things get heated (although that took quite some time). My principle is that everybody contributing to the project has good intentions. Nobody is doing things just to knowingly and purposefully breaking someone's code (platform maintainer or not is not relevant). \nI'm glad I learned something from it. I personally want to put more effort in improving myself than in \"educating\" others. \n. If I leave $tpl=null as argument I get no errors. It looks like a dirty (but working) way of overloading the display method's arguments. Also then calling display() with a value for $tpl worked.\nAnd another dirty implementation to trick the display-method into an optional argument, although it is not in the interface:\nfunction display (){\n        $a = func_get_args();\n        if (count($a))\n        {\n            $tpl=$a[0];\n        }\n. A Data Transfer Object (DTO) is a better name for what you try to do here than a Value Object. The latter name is used quite different nowadays (and causes confusion when used for this JObject). See Fowler's PEAA, page 486-487 (Value Object) and 401-413 (Data Transfer Object).\nA downside of overusing this kind of objects is a data-oriented focus. So it should be handled with care if you want OOP. It can be handy, but I wonder if it is a good choice as a kind of basic-object, like JObject was.\n. A.E.: \"I think JObject is fine to consider as a Value Object\". I think it is better to stick to the generally used definitions: that improves communication. What is your definition of a \"Value Object\" as used here?\nConcerning mapping: that is why I use a ORM. No need to reinvent that wheel.\n. I like the examples; especially of JObjectList. These classes can be nice toys to play with.\nBut: none of the methods of the current JObject survives platform 13.1 in this proposal. The new JObject serves a different goal (has a different \"responsability\"). In fact: it is a totally different class, with the same name. Is that strictly necessary? I cannot see that \"This pull request refactors JObject (...) in a backward compatible way\". \nDoes the name JObject tell us something about it's use? You want an object to store data in it. Wouldn't JData (and JDataList) be a better name? Or something else; anything better than \"JObject\": that suggests a basic object from which you extend other objects. From an OOP point of view, this class is not good for that; too data-centric.\n. elinw: \"Remember that we are not normally extending JObject any more\".\nExactly: that is why JObject is not such a good name for this new class.\n. JObject was a base object, to extend most other objects from. Hence it's name. It provided some functionality that was not available in PHP4; that is why it is not necessary anymore in current Joomla: PHP5 provides everything we need from a basic object. We don't need another basic object for general use anymore. \nIf you want to provide some specific behaviour in an object, then properly name that object, so it's use is obvious. JData, JStore, JContainer, can't you think of a name describing the kind of object? Or do you want to go back to a general basic object from which most other objects are extended? Thought we had passed that idea long ago.\n. You call it a Value Object and even refer to Fowler, but the JObject you propose here does not have the same function: a small simple object, like money or a date range, whose equality isn't based on identity (and yes I 've reread the whole book often since 2004). A Value Object is used everywhere for instance to contain money (the amount and the currency together). No identity means: it doesn't matter if it is this 5 dollars or that; it's just 5 dollars. \nI won't bother you with my arguments anymore. Good luck with your platform.\n. I said I won't bother you with my arguments anymore, because I realised it is useless: I speak another \"language\". Our basic understanding of Object Oriented Programming is totally different. That happens often and you are in good company. Although useless, I'll just state some things that could once be of help; for you or others.\nI often recommend Eric Evans' book on DDD (also from 2004) as a good book to learn to understand Fowler's PEAA. Evans gives a good explaination about what \"identity\" is, and how the lack of that gives Value Objects. See page 89 - 96 on Entities and 97 - 103 on Value Objects. Please read to understand, instead of misinterpretating to show you are right. Try to understand what \"identity\" is and what makes up a Value Object. It is not some  vague philosophical discussion. When you talk to people who use notions like Value Object on a daily basis, you'll avoid the trap of redefining it in a different, private and confusing way.\nAnother book that could help understand the basics of Object Thinking (as opposed to data-centric, procedural thinking) is: Object Thinking by David West. Did I say 2004 was a good year?\nI'll state my opinion about JObject one more time: that object was needed to add some basic functionality to objects that was lacking in PHP4. Since we now use PHP5, JObject is not needed anymore: the functionality it provided is now provided by PHP5. Some error-handling functionality is now handled elsewhere. \nSo, JObject has become obsolete. After deprecation it can be deleted from the Joomla Platform. \nReviving it to use it as an \"object that needs to hold properties but does not require persistence\" is giving another role to that object. Your statement: \" JObject IS data centric and it's consistent with the way I've used it, and what I consider it was supposed to be used for, for many, many years\" shows the difference in understanding of OOP we have. \n. Service Locator is an  anti-pattern: http://blog.ploeh.dk/2010/02/03/ServiceLocatorIsAnAntiPattern.aspx\nStatic methods not good for testability:  http://misko.hevery.com/2008/12/15/static-methods-are-death-to-testability/\n. Although any framework will inevitably be opiniated, I think we should try to avoid the Joomla Platform to prescribe too much just a single way to accomplish things, thereby limiting developers in its use. A guideline for putting something in the Platform could be: is it providing useful possibilities to developers?\nIf someone thinks a Service Locator is useful in the Joomla Platform, then make a pull request, provide some examples, spread the word about it to some other developers on a mailing list and above all: have fun using it. I personally probably won't use it and maybe even advise against using it, but I won't be against putting it in the JPlatform, as it might be very useful for some developers. You are in good company of frameworks like for instance Symfony2 and Nooku using this \"global in disguise with the fancy name\" feature too. \nThat Mark Seemann blog about Service Locator being an anti-pattern might not be the clearest statement against using a Service Locator. What I liked very much was the first sentence: \"...since it was described by Martin Fowler, it must be good, right?\". Here is a good posting by Anthony Ferrara, explaining a bit more why globals should be avoided and why (and by which criteria) a Service Locator is just another way to use globals: http://blog.ircmaxell.com/2012/08/object-scoping-triste-against-service.html\nLet's not discuss that here, for we have different styles of programming. I'm into Object Thinking (also title of a good book, 2004, by David West). I might even be a bit of an Object Puritan; I wouldn't dislike to be called like that. Others might be more into procedural and data-centric programming, thinking in data and functionality as two separate things. Much of Joomla's way of programming is more in that procedural direction, hence all the static functions (like for instance in JAccess). I believe that in the long term more pure OOP is better, but we can only show it with code. I'm working on some \"pure OOP\" things in the direction of UCM and hope to show it soon. If some people like it, I can make a pull request and it could eventually be added to the JPlatform. If not, then it's OK too.\nBack to Michael's pull request. \nJoomla's Application classes are not pure singletons, with a private constructor and clone-function. You can still choose to use \"new\" to instantiate another application-class. But if you want to reuse an allready instantiated application, getInstance() is available. So, that matches well the starting point of providing possibilities to developers and let the developers choose what to use. \nThere is a small difference between the way the getInstance() works now in JPlatform and how it works in this  pull request: the getInstance()-methods of JApplicationWeb and JApplicationCli check if the class you want to be instantiated with some name is a JApplicationWeb or JApplicationCli respectively.  So it could in theory be used to instantiate a JApplicationCli besides a JApplicationWeb using the same name. Of course you can also instantiate an other JApplication with another name. Multiple JApplications using getInstance() won't work correctly however, because only the last instantiated application will be put in the static property $instance. Although in theory the pull request limits the use of getInstance() a tiny bit, in practice there will not be any difference in behaviour between the current code and this pull request.\nIn this pull request only 1 JApplicationBase-descendant is possible in the getInstance()-method. Maybe Michael's comment \"Generally, only one application can be running properly within a workspace\" could be changed to the more factual: \"getInstance() can only be used to instantiate and use 1 JApplication\". It still leaves the door open to instantiating more applications, if any developer would want to do that, by just using \"new\"; which can be done in a Service Locator, a DI-container or wherever you want. \nIn short: I have nothing against this pull request: it doesn't limit possibilities for developers.\n. But if $key would not exist you would then get a Notice: Undefined variable: key\nThat's why $key is tested first and cannot be left.\n. You are right (I was wrong).\n. ",
    "OctavianC": "Hi everyone,\nI have to agree with Nicholas on this one. It would make better sense for backwards compatibility's sake to let the CMS define JModel.\nI also understand his frustration - we've been maintaining most of our extensions for 2 versions of Joomla! for quite some time now (first 1.0 and 1.5, now 1.5 and 2.5) and it's overkill which could be avoided.\n. ",
    "rredpoppy": "Example code that throws the exception:\nphp\n        jimport('joomla.http');\n        $transport = null;\n        $transportWrappers = array('JHttpTransportCurl', 'JHttpTransportStream', \n            'JHttpTransportSocket');\n        $options = new JRegistry();\n        while (!$transport && $transportWrappers)\n            try{\n                $wrapper = array_shift($transportWrappers);\n                $transport = new $wrapper($options);                \n            }\n            catch (Exception $e){\n                continue;\n            }\n        $http = new JHttp($options, $transport);\n        $getData = array('something'=>'else');\n        $url = 'http://www.exmple.com';\n        $response = $http->get($url, $getData);\n. Me neither..\n. ",
    "simonharrer": "How can I re-execute the checkstyle checks for this pull request?\n. http://developer.joomla.org/pulls/pulls/1184.html states all tests run through! :)\n+1 for this!\n. Why hasn't this been merged?\n. ",
    "florianv": "Now it passes the tests\n. Thanks. I'm closing it, and I will make a new pull request when I have some time for this\n. Thanks for the feedback. I didn't find an efficient way to test it\n. I think Eclipse adds it, found a plugin that should remove it, I hope it works\n. Thanks, I didn't notice it\n. Thanks. The problem is that we have to pass the in-between default values which is not cool.\nEventually, the Application is always accessible by auto-loading so I could remove the $type param and do something like (for web Application) :\nif (class_exists($id) && (is_subclass_of($id, 'JApplicationWeb'))) but the eventual problem is that this check is already done in JApplicationWeb::getInstance(), so on the first load it is done two times.\n. +1 but I think it should be possible to inject a Memcached object in the constructor of JCacheMemcached, allowing a null value and calling _connect() as fallback.\n. @LouisLandry I think about that because in the future we will probably have a dependency injection container holding the JRegistry options and it's likely we will also get drivers from him. So I think there should be a way to inject them via constructor or setter.\n. It's worth looking at https://github.com/fabpot/Pimple . It's a really simple dependency injection container that we could use to replace the factory. \nIf we want a configuration file to define the dependencies, it becomes suddently more complicated because we need to check for circular references : A needs B, B needs A. The dependencies must be seen as a graph, and each param/service is a node.\n. Hello, it works like that.\nEach namespace must have a top-level namespace (\"Vendor Name\").\nEach namespace can have as many sub-namespaces as it wishes.\nEach namespace separator is converted to a DIRECTORY_SEPARATOR when loading from the file system.\nThe registerNamespace is used to register the path to the root namespace : /path/to/project/lib/vendor/ in the example.\nBut you can register multiple paths for a given namespace. \nI think it can be useful. But I can remove it.\n\"Alphabetic characters in vendor names, namespaces, and class names may be of any combination of lower case and upper case.\"\nFor this, I'm not sure if file_exists and include are case sensitive (if it depends on the system).\nThat's why I added two checks : it allows to have a namespace declaration containing upper case letters and lower case directory and file names. \nFor example in Joomla : namespace Joomla\\Model; class Base {} can correspond to a file in joomla/model/base.php or Joomla/Model/Base.php.\n. Just an up. If you look at this PSR-0 Loader https://github.com/composer/composer/blob/master/src/Composer/Autoload/ClassLoader.php, they use an array for namespaces (same namespace possible for different paths) too and it looks like the one in this pull request.\nThe difference is that you can declarate namespaces camelcased and have lower case or camelcased directory and file names.\nI find it useful because people might be interested in having camel cased files in their apps, and if Joomla is namespaced its files can stay lower case.\nAlso it ensures it will work properly on case sensitive and insensitive systems.\n. Ok, I will do it asap.\nI want to insist that you can only register root namespaces like 'Joomla', but not 'Joomla\\Cms' for example.\nYou can register the cms classes by adding a new path for the 'Joomla' namespace but not a path to 'Joomla\\Cms' which is a sub namespace of Joomla.\nSo if people want to use a package from an other framework, let's say Doctrine\\ORM, they will have to put it in a Doctrine folder and register the 'Doctrine' root namespace pointing to that folder.\nThis is because I take only the first part of the namespace to avoid iterating the whole namespaces stack.\n. Hello, I rebased it here : https://github.com/joomla/joomla-platform/pull/1445.\nFor Joomla itself, it is not so useful but it can allow to autoload the factory.\nFor Platform applications, if a separate library come with it, you might want to have some files in the root path of the library, or the front controller of the application located in the root path of the application, for example.\n. Ok, thanks for the tip.\n. See https://github.com/joomla/joomla-platform/pull/1436\n. I added the code at the end, I don't think it changes a lot the current execution time : it adds one variable allocation, and two when there is only one part in the class name.\nThe if is never executed for platform classes, because there is only one lookup path.\n. Yes, in the case of the CMS it can add two file_exists calls in some cases when there is only one part.\nWhat I was thinking also regarding my namespace loader pull request is eventually to have more than one autoloader.\nIn this case, JLoader would stay like that to auto load the core, and we can have a JLoaderNamespace, and eventually an other Loader with this feature.\nIt can allow people to use the auto loader they want for their application/components without making the core execution slower, and avoid to register more methods by default to the spl autoloader stack.\n. Yes, I did it too quickly, I added the filters now.\n. The sensible difference is that with getArray if you don't pass an array of keys, you don't get anything.\nAlso if no filter is specified, it goes to the default case in JFilterInput::clean.\nBut with getAll you get all keys filtered with the default cmd filter.\nI did this pull request because I saw many times people doing $model->store(JRequest::get('post')).\nAnd they don't move to JInput because they don't know they can do $this->input->post->getArray($_POST) to have the same result.\nSo adding the getAll method seemed necessary.\nWhen I did the first implementation, I used getArray, but then I have been told to add the filters, and I thought : I have the data, I just need to filter it and return. So for me the most natural way was to add that functionnality to JFilterInput instead of using getArray recursion.\nFrom a logical point of view, I have the data in the class property, but I have to pass it to a method in that class only to use his call to the filter class, that I could call directly didn't seem good, so I did it like that.\n(But yes I could also have concluded this story in one line)\n. Yes, it is not good pracctice, but I saw it many times.\nI updated the pull request, see diff.\nI think this a fair alternative regarding what @ianmacl and @joomla-jenkins said.\nI didn't squash them to keep cleanRecursive, just in case.\n. This is not so useful, but can be used for unit tests.\nThe \"problem\" is that we expect the set method to set something.\n. I am closing this, since it cannot be merged.\n. Yes it is a good idea :)\nWhat I was thinking before is eventually to have 2 loaders : JLoader and JLoaderNamespace having the same base.\n``` php\n<?php\ninterface JLoaderBase\n{\n  public function load($class);\npublic function setup();\n// Something = prefix / namespace\n  public function register($something, $path, $reset = false);\n}\n```\nSo people can set up the namespace one if they want to independently of the actual one.\nBoth solutions are correct I think, but yours implies less changes.\nBut, supposing in the future Joomla is fully namespaced and wants to get rid of the actual loader, I think maybe we would like not having param refering to the old one in setup().\nEdit : But my solution is only valid if the loader keeps his name : JLoaderNamespace, when JLoader leaves. Otherwise people would have to modify their calls to it.\n. @ianmacl Thanks, I will split them asap.\n. Yes it does. The $allowMixedCasePaths is important.\nI don't know if you have planned about having the Joomla directories and files names camel cased, that's why I did the two options.\nI think there are a few advantages using camel cased directories and files : \nThe directories and files names directly match the namespace/class names so the loading is faster.\nAlso, it leads to clearer names, when you have two parts in a directory/file name, it doesn't look so good when lower case.\n. Ok. Maybe 3 options are needed just in case : \n1- Lower case\n2- Mixed case\n3- Camel case\nIn the future, if we want the best speed, we can use maps : an array of keys containing namespace names and values the full path to it, so the loading is direct.\nAnd we could have a cli app to generate the map.\nhttp://www.zyxist.com/en/archives/140\n. So, I went ahead with the three options and updated the setup method.\nYou will tell me if you agree with that.\nI also added the $allowClasses param for the class map loader at the end because it might be first depreceated, once Joomla is fully auto loadable.\nThen, I played around and tried various methods, and it seems that my first implementation was not the fastest one.\nMoreover the explode/implode speed changes too much dependending on the length of the class name which is not good.\nI also removed the cost of the class_exists in the namespace load functions and used include_once instead.\nIn a nutshell, it is three times faster on my machine.\nI also decided to split the three loaders in three separated methods. \nI know some people will tell this is duplicated code, but why affording the cost of some 'if' at each load when we are aware of the case strategy to use on setup.\nI also complemented the test with an other class JLoaderNamespaceTest to test that it really works when the class names are passed to the auto load function by PHP. I thought they were a leading '\\' but it is not the case.\nIt also splitted the tests as @ianmacl said.\nI fixed a few editor warnings in the other load methods. One @throws missed, and some other were declared void but returned a boolean.\n. @eddieajau Do you want me to replace the actual loader.xml docbook by a markdown file, merge the additions and include it in the commit ? If I understand the docs will be translated to markdown files ? Thanks.\n. Here is the gist : https://gist.github.com/fa4ea8ffc7b3b34151b2\n. I have rearranged a few things in the doc\n. Thanks. Yes indeed it is clearer. I don't squash the commits so you don't have to read the whole diff.\n. I did a mistake with the previous one concerning the actual event package.\nI prefered to open a new one and put the package in legacy, so it will be fine from now (I rebased it a few times already).\nBtw, I don't get why it is not mergeable, could it be a problem of file mode or something ? I created the branch from the joomla staging branch yesterday.\n. Thanks @pasamio. I think it is correct now\n. Yes, it is possible to use SplPriorityQueue instead of an array.\nAlso, I put three parameters because I didn't want to force people to specify a priority per event, but finally I'm not sure it would be a big problem.\nIn this case it would become :\nphp\nregisterListener($listener, SplPriorityQueue $events = null)\nFor the closures many frameworks support them as event listeners so I did it.\nI think it can be interesting as 'little' event listeners.\nBut on the other side, it could encourage people to do non OOP stuff..so I don't know what you think about it.\nIn the case we don't support them, I was thinking about having a tagging interface for event listeners\n``` php\n// Tagging interface for event listeners\n// All event listeners implement this interface\ninterface JEventListener\n{\n}\n```\nwhich could be useful for type hinting and to quickly see if a class is designed to listen to some events, for example JApplicationWeb.\nSo, in this case we would have : \nphp\nregisterListener(JEventListener $listener, SplPriorityQueue $events = null)\nwhich looks better but we drop the closures.\nAnd for JEvent, yes, it should extend the new JObject.\n. @eddieajau I fixed an issue with SplPriorityQueue dequeing elements with the same priority and added more tests. I think it is good for further review.\n. I think we can benefit having JEventInterface and JEventDispatcherInterface but didn't know which name to use for them.\n. Interfaces are useful because people can implement them how they want to.\nIf someone wants to make his own Dispatcher implementation instead of using JEventDispatcher, it can still be compatible with JEvent.\nIf someone wants to make his own Event implementation he can still use JEventDispatcher to dispatch them.\nAn object that needs to notify listeners depends on the dispatcher.\nSo it could implement : \n``` php\n<?php\ninterface DispatcherAwareInterface\n{\n   public function setDispatcher(DispatcherInterface $dispatcher);\n}\nclass Something implements DispatcherAwareInterface\n{\n  protected $dispatcher;\n  protected $onAfterSomething;\n  protected $onBeforeSomething;\npublic function __construct(DispatcherInterface $dispatcher)\n {\n    $this->dispatcher = $dispatcher;\n }\npublic function setOnBeforeSomethingEvent(OnBeforeSomethingEvent $event)\n {\n    $this->onBeforeSomething = $event;\n    return $this;\n }\npublic function setOnAfterSomethingEvent(OnAfterSomethingEvent $event)\n {\n   $this->onAfterSomething = $event;\n   return $this;\n }\npublic function registerOnBeforeSomethingListener($listener, $priority = 0)\n {\n   $this->dispatcher->registerListener(\n      $listener, \n      array('OnBeforeSomething'),     \n      array('OnBeforeSomething' => $priority)\n    );\n }\npublic function registerOnAfterSomethingListener($listener, $priority = 0)\n {\n   $this->dispatcher->registerListener(\n      $listener, \n      array('OnAfterSomething'),     \n      array('OnAfterSomething' => $priority)\n    );\n }\npublic function doSomething()\n {\n   $this->dispatcher->trigger($this->onBeforeSomething);\n// Something\n$this->dispatcher->trigger($this->onAfterSomething);\n }\npublic function setDispatcher(DispatcherInterface $dispatcher)\n {\n    $this->dispatcher = $dispatcher;\n    return $this;\n }\n}\n$dispatcher = new Dispatcher;\n$something = new Something($dispatcher);\n$onBeforeSomethingEvent = new OnBeforeSomethingEvent;\n$onBeforeSomethingListener = function (OnBeforeSomethingEvent $event) {\n    echo 'onbeforesomething';\n};\n$something->setOnBeforeSomethingEvent($onBeforeSomethingEvent);\n$something->registerOnBeforeSomethingListener($onBeforeSomethingListener);\n$something->doSomething();\n```\nSomething is easy to test because the dispatcher and events can be mocked.\nThe listeners are easy to test because the event can be mocked.\nThere are some cases where the listeners need an instance of the object they are listening to.\n``` php\nclass SessionEvent extends JEvent\n{\n   public function setSession(SessionInterface $session)\n   {\n     $this->setArgument('session', $session);\n     return $this;\n   }\npublic function getSession($default = null)\n   {\n     return $this->getArgument('session', $default);\n   }\n}\nclass Session implements DispatcherAwareInterface, SessionInterface\n{\n   protected $dispatcher;\n   protected $sessionEvent;\npublic function setDispatcher(DispatcherInterface $dispatcher)\n   {\n     $this->dispatcher = $dispatcher;\n   }\npublic function setSessionEvent(SessionEvent $event)\n   { \n     $this->sessionEvent = $event;\n     $event->setSession($this);\n   }\n}\nclass SessionEventListener\n{\n   public function onSessionStart(SessionEvent $event)\n   {\n     $session = $event->getSession();\n     // Verify the session token is matching..\n    // Otherwise stop the event propagation and destroy the session\n   }\n}\n```\n. 1. yes\nI think the model must do it model's work. If you want to add event capabilities to a model then it is an other layer (it is for the CMS) or you must implement it.\nIdeally all packages must be standalone and it's the CMS that does the glue.\n. Ok, I will review it and make a pull request to the framework in one week or so.\n. Would it make sense to implement Countable in JObject ?\n. I think it could be useful to implement Countable in JData which count only one level of properties (not recursively)\n. @eddieajau I made a pull request for Countable on your repo some time ago\n. Done in https://github.com/joomla/joomla-platform/pull/1723\n. No problem. Thanks\n. I agree with @ianmacl, applications might be singletons but not always.\nMoreover, with the current getInstance method it is impossible to use two different applications in the same script.\nRegarding JFactory, its references need to be removed from the Joomla core, and maybe this class will need to be removed later too. It makes the libraries very difficult or impossible to test.\n. I think we could think about changing the case of the folders and files in libraries/ to Camel Case.\nIf all files are affected by the namespacing, then it might be the right time.\n1) This is the general convention for most frameworks and packages that you can grab via composer.\n2 ) Faster autoloading because the namespace case matches the path case.\n3 ) Improve files and folders readability especially when it is composed of more than one part. For example instead of having controller/base.php we can have Controller/AbstractController.php\n. Sorry, I didn't see this bullet.\nIt looks very good :) there is quite a bit of work. I will send you some pull requests.\n. I can help you a little bit right now starting from the bottom packages 'view' etc\n. We should add the task : 'creating a composer.json file in each package so they can be grabbed individually via composer'.\nOnce this is done we can accomplish this https://github.com/joomla/joomla-platform/issues/1799 and add the dependency on the Psr log package in the Joomla log package.\n. ok :) \n. When namespacing some packages, we noticed that 2 class names are conflicting with php reserved keywords : \nhttps://github.com/dongilbert/joomla-platform/blob/PlatformNamespace/libraries/joomla/log/logger/echo.php#L24\nhttps://github.com/dongilbert/joomla-platform/blob/PlatformNamespace/libraries/joomla/html/list.php#L26\n. Nice :) Which namespace are we using for the tests ? JoomlaTests ? With the current folder structure we cannot use Joomla\\Tests.\nWe can if we have tests/Joomla/Tests/\n. @dongilbert In https://github.com/dongilbert/joomla-platform/tree/PlatformNamespace/libraries/Joomla/Cache/Storage\nMemcached and Memcache have an extra e : Memecached\n@AmyStephen The examples look good :)\nTo solve the name issues we can suffix/prefix the classes in the packages : \nCipher3DES, EchoLogger\n. They can put error_reporting(E_ALL ^ E_USER_DEPRECATED) or set any logger as error handler yes. Tests bootstraps are changed too to disregard E_USER_DEPRECATED\n. So if you are a CMS developer and have a few notices Deprecatedwhen you test your code, you should remove them.\n- If you don't have the time to remove them, you can put this line at the top of your component entry point : \n``` php\nphp \n// All deprecated notices won't be displayed\nerror_reporting(E_ALL ^ E_USER_DEPRECATED);\n```\n- If instead you want to log them using `JLog`, you can put this code at the top of your component entry point :\n\n<p``` php\nphp\n\n<p$deprecatedHandler = function ($errno, $errstr, $errfile, $errline)\n{\n      $errorString = sprintf('Error : %s, in file %s at line %s', \n          $errstr, $errfile, $errline);\n  JLog::add($errorString, JLog::WARNING, 'deprecated');\n\n}\nset_error_handler($deprecatedHandler, E_USER_DEPRECATED);\n```\n. Yes the handler could be added in the CMS bootstraps or index files so the change is actually invisible for CMS developers. But the idea is that they see the notices in the browser, so they can react before the method/class is removed.\nIMO, there should be different configurations : \n- development with max error reporting\n- production\nand developers could switch between configs but it's an other thing.\n. @eddieajau Sometimes it is a method of a \"new\" class that is deprecated. \nThe problem is that there are many devs that don't know if a method has been deprecated unless they follow the mailing list or see the changelog. Many of them are not informed, until their code is broken or there is a flash new on the BBC, they won't know.\nSo by adding this notice, they can see it in their browser / tests..\n@dongilbert no, the code execution is not stopped it is not an exception or a \"real\" error\n. @eddieajau The code will not fail. It will continue executing while displaying a \"notice\" that users can simply disable or log like PHP does with E_DEPRECATED. It is not a E_ERROR, it's more like a E_NOTICE. Breaking the code would have been very agressive yes..\n. Just looking, I thought they defined an interface for the log handlers but it looks like no in fact. Only Logger + Log and levels which are quite similar to what Joomla actually has.\nWould have been nice to add LogHandlerInterface too\n. Yes, since we have the same error levels in Joomla it shouldn't be a big big task.\nThe constructor should become public https://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/log/log.php#L123\nIn this case https://github.com/php-fig/log/blob/master/Psr/Log/LoggerInterface.php#L113 can be the same than JLog::add and we can add a non static method setLoggerthat do the same than addLogger\n. For the dependency on the Psr repo we should add it to our composer.json file instead of copying the whole code in the log package.\nSince our code will be PSR0 compatible, we will be able to autoload the Psr package.\n. Yes. We could add the composer.json file and have the library copied in vendor/Psr (like that it matches the folder in which composer will install it). So there is still this fallback for people using the full joomla platform without installing it via composer.\n. @realityking looks nice. I think JLog could extend AbstractLogger and implement the log method in favor of the static add method that could be deprecated. \n. I did quickly an example about JLog\nhttps://github.com/florianv/joomla-platform/blob/jlog/libraries/joomla/log/LogHandlerInterface.php\nhttps://github.com/florianv/joomla-platform/blob/jlog/libraries/joomla/log/LogEntry.php\nhttps://github.com/florianv/joomla-platform/blob/jlog/libraries/joomla/log/Log.php\nhttps://github.com/florianv/joomla-platform/blob/jlog/libraries/joomla/log/logger/CallbackHandler.php\n. ",
    "TorstenE": "Hey Eddieajau, Joomla 3.3.6 does not Support install script in templates\n. ",
    "subtext": "Thanks Elin! I had opened the Issue #1543 discussion because I believed there was an issue with the multiple attribute not being set properly. It turned out, however, that the issue was that the values used in the xml element attribute had to be either the literal string \"true\" or \"multiple\". It did not respond to Boolean values as in multiple=\"1\". The approach used here would correct that issue (if you apply it to multiple as well). But it still references specific strings like \"readonly\", \"disabled\", or \"multiple\" (if it applied). I would rather see something like this:\nphp\n$this->readonly = ( ! ((bool) $readonly ) || $readonly == \"false\");\nThe only string referenced is \"false\". This way setting the attribute to \"false\" or zero would indeed register the property as false. But, any other non empty value would register as boolean true. I understand the HTML element must be set to readonly=\"readonly\" ( or multiple=\"multiple\" ), but I feel the attribute of the xml file should be any boolean value.\nThough not every element will use each of these attributes, I think that if it is applicable to more than one field type, then it should be included in the JFormField so as not to duplicate code across additional subclasses.\nOkay, that's my two cents.\n. Honestly, it's just that I'm a little intimidated about making a Pull request. I'm not well versed in the process and I didn't want to make any mistakes. Sam, can you point me in the direction of some documentation on the proper procedure for submitting a pull request to the platform? Thanks\n. I vote for it to stay in the JFormField class. Though, I would rather see:\nphp\n$this->multiple = ( ! ( (bool) $this->element['multiple'] ) || $this->element['multiple'] == \"false\" );\n. Yes, I think that's an appropriate action, Elin.\n. ",
    "ramalama": "I tried but did not manage to commit it to my fork, so if I understand the mechanics of git right i can't make a pull request.\nI found even more functions that ignore the second parameter $name completely: addReplyTo, addBCC and addCC.\n. Hope I did everything right. \nI did only fix the addRecipient method. \nSince the code for addRecipient, addReplyTo, addBCC and addCC was almost the same you should consider to consolidate the duplicate code into a helper method using reflection or call_user_func_array.\n. @realityking It is still working with the DHTML JS Calendar, but I don't know how to check the non-gergorian calendars.\n@elinw changed the title, hope that it's better now.\n. @LouisLandry I am sorry, I do not know how to rebase it and do not have time to do this these days. \n. Yes I probably could, first some questions to clarify what to implement:\nWho knows why this replace is done?\nIs there a good reason why this field is treated differently?\n. Thanks @LouisLandry for the information! So this is not a issue but by design to follow the rules of html. \nAnyway the replacing was an unexpected behaviour for me: I would expect either an error thrown or just outputting the not html complainant element.\nI'd suggest something like\nif(!preg_match('#^[A-Za-z][A-Za-z0-9-]$#', $id))\n    throw new Exception(\"The \\$id:'$id' is invalid.  According to w3schools.com the \\$id must match the RegEx ^[A-Za-z][A-Za-z0-9-]$ .\");\nAny thoughts on this?\n. @elinw I'm really sorry, but I dont have any time to spend on this at the moment.\n. ",
    "amh-mw": "Roger that. Opening https://github.com/joomla/joomla-cms/issues/207\n. Closing per comments on #1206\n. ",
    "a2ws": "Original bug tracker http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=25337 (sorry it would not let me edit the original post!)\n. ",
    "mvanduijker": "I have seen a couple of more php 5.4 stric notices. I am going to try to make some time to fix them.\n. I know, vacation and kind a busy at work. Will try to do asap.\n. Looks like it is fixed! Thanks!\n. ",
    "nulledcc": "Here some function that can be used to fix that issue\nhttp://nl3.php.net/manual/en/function.array-diff-assoc.php#73972\n. ",
    "bweston92": "I can see this being used in Joomla 3 in the libraries I am currently using Joomla 3.1 is there any tutorial on how to use this new way of routing? At the minute I am using the 2 functions in router.php one for building and one for parsing but this new method looks more efficient.\nAny help much appreciated.\n. ",
    "rdeutz": "My fault, this is an bug in an older version, already fixed and I didn't check against the last version. But maybe it is better within the if as outside, because we need it only in the \"then\" path. What is process for such a situation, doing another pull request ?\n. ",
    "minijoomla": "i searched and founded the issue.\nin libraries/joomla/form/fields/checkboxes.php\nline line 67:\n$checked = (in_array((string) $option->value, (array) $this->value) ? ' checked=\"checked\"' : '');\nissue is in     (array) $this->value       that do not convert Comma Separated String into Array\nsolution:    change      (array) $this->value               to       explode(\",\",$this->value)\n. but in this line, it check $option-> value that is in array $this->value or not, then $this->value must be an array.\n$this->value come from default parameter that is comma separated. \n(array) $this->value    do not convert $this->value to array that in_array() function can search it. then i use explode(\",\",$this->value) and it worked correctly.\n. i tested your opinion and changed \n(array) $this->value\nto\n(array) $option->value)\nthen \nlabel=\"COM_CONTACT_FIELD_INFORMATION_SUBURB_LABEL\"\ndescription=\"COM_CONTACT_FIELD_INFORMATION_SUBURB_DESC\"\nmultiple=\"true\" default= \"(array) blue,red\"\n\nred\nblue\n\nwhen we want to add new item it checked all values. check this example when you have 3 value and want to 2 of 3 value be default, it do not work and all 3 value are checked\n. test this:\nlabel=\"COM_CONTACT_FIELD_INFORMATION_SUBURB_LABEL\"\ndescription=\"COM_CONTACT_FIELD_INFORMATION_SUBURB_DESC\"\nmultiple=\"true\" default= \"(array) blue,red\"\n\nred\nblue\ngreen\nyellow\n. in this code in file:\nin_array((string) $option->value, (array) $this->value\n\ncode check that $option->value is in  (array) $this->value or not\nyou say that it must be\nin_array((string) $option->value, (array) $option->value\nbut in your code, you are check that $option->value is in $option->value that all of this is same.\n. I've applied your changes in the code and put in checkboxes field, checked=\"red,blue\".  when i add a new item, it works and I also wrote store code to store value in the database and the values \u200b\u200bstored in the database were to be separated by commas, such as red,blue\noptions is : red, blue and green\nBut when you edit that item again,  options \u200b\u200bof that checkboxes that are stored in database are not selected in the. While the code that i was written , work correctly\n. my example with your code changes:\nfield xml:\n<field name=\"meal\" type=\"checkboxes\" class=\"inputbox\" required=\"true\" multiple=\"true\" checked=\"1,2,5\"\n        label=\"COM_SIBDIET_FORM_LBL_FOOD_MEAL\"\n        description=\"COM_SIBDIET_FORM_DESC_FOOD_MEAL\" >\n  <option value=\"1\">Breakfast</option>\n  <option value=\"2\">Lunch</option>\n  <option value=\"3\">Dinner</option>\n  <option value=\"4\">Morning snack</option>\n  <option value=\"5\">Evening snack</option>\n</field>\nto store values :\npublic function bind($array, $ignore = '')\n{\n  ....\n  ....\n  if (key_exists( 'meal', $array ) && is_array( $array['meal'] )) {\n     $array['meal'] = implode( ',', $array['meal'] );\n  }\n  return parent::bind($array, $ignore);\n}\ni add new item. default value are selected. i select options 2,3,4 and save item.\nvalues stored in database field (text)    :   2,3,4\nwhen i want edit item again, no options arenot selected \n. my example with my changes that work correct:\nfield xml:\n<field name=\"meal\" type=\"checkboxes\" class=\"inputbox\" required=\"true\" multiple=\"true\" default=\"1,2,5\"\n        label=\"COM_SIBDIET_FORM_LBL_FOOD_MEAL\"\n        description=\"COM_SIBDIET_FORM_DESC_FOOD_MEAL\" >\n  <option value=\"1\">Breakfast</option>\n  <option value=\"2\">Lunch</option>\n  <option value=\"3\">Dinner</option>\n  <option value=\"4\">Morning snack</option>\n  <option value=\"5\">Evening snack</option>\n</field>\nto store values :\npublic function bind($array, $ignore = '')\n{\n....\n....\nif (key_exists( 'meal', $array ) && is_array( $array['meal'] )) {\n$array['meal'] = implode( ',', $array['meal'] );\n}\nreturn parent::bind($array, $ignore);\n}\ni add new item. default value are selected. i select options 2,3,4 and save item.\nvalues stored in database field (text) : 2,3,4\nwhen i edit that item again, opteions 2, 3, 4 are selected. when i add new item, options 1,2,5 are selected.\n. ",
    "jms2win": "This is the first time that I use this website. In the past, I used the bug tracker but it was written to post the bug in this site.\nI thought that was the procedure to let somebody analyze the issue and decide if it can be put in the code like in the bug tracker.\n. Sorry but I don't understand how to do that (the pull request) and when I go in the platform code, I don't know where is the JPlatform corresponding to Joomla 2.5.4 - the version 11.1. When I look in the current code, the table is no more at the same location. I prefer let a people familliar with GitHub to update the correct source and apply the fix.\n. I don't know the reason why the content of the DB has wrong right/left value and perhaps that each time that you install an extension or create a menu item, you should rebuild the menu automatically.\nI agree that the additional \"client_id\" constrain that I added in the query just reduce the inconsistency and does not solve the reason why the right/left value are wrong. \nI just suggest that the \"client_id\" constrain is added to at least return SEF path that is consistent with back-end of front-end only and not a merge of both. When the SEF has erratic value, that can impact the referencement.\nAs Joomla 2.5 is for a Long Term Support and that it was also announced at J and Beyond 2012 (where I was present) that Joomla 3.0 will contain a full legacy 2.5 compatibility, I think that improve the quality of the Joomla 2.5 is very important and that this simple fix can contribute to that.\n. The file is located in \\libraries\\joomla\\database\\tablenested.php\n. I don't remember to have saw same name in the menu item but identified that the computation of the left/right was wrong for unknown reason.\nI have started to add this \"security fix\" to ensure that this will reduce the number of cases where it could happen and after, I have rebuilt the menu in the back-end to let the left/right rebuilt correctly.\n. Sorry but in the past, I already tried to do a pull request and didn't know how to do on the correct version of the file.\nIf you want , I can go in the bug tracker and attache the file that was the one in Joomla 3.0 alpha 1 that I have modified.\nI prefer to let \"bug squad\" to update the correct source.\n. Done\n. Which style issues.\nI have just put the \nif ( !is_link( $file)) {\n   @chmod($file, 0777);\n}\nI have posted the request in the Joomla Bugtracker and there it was requests to pull the request here.\nIf you want to reshare and fix the style issue, please show us how to write that.\n. Reposted with Pull Request #3425\nhttps://github.com/joomla/joomla-cms/pull/3425\n. ",
    "rugar8": "Thank you for posting this \"band-aid fix\" -- been stressing over this same issue on my sites. \nCan you please advise what directory/file this code is located in? \nThank you kindly!\n. ",
    "ShMaunder": "I will redo this as I've totally messed it up. In any case, it may need to be discussed if the import was originally intended or not.\n. ^ Done.\nIts not a big deal if this doesn't get committed. I feel we should keep this legacy class in one piece for backwards compatibility.\n. ",
    "HLeithner": "It seams that the problem was in my install xml, with the scriptfile tag using a wrong path. After changing my xml file it seams to work perfectly. Sorry for false error reporting.\n. At the moment you get:\nUNION (select x from y) UNION (select x from y)\nthats wrong it should be \n(select x from y) UNION (select x from y)\nmy patch uses the '()' prefix to remove \"UNION\" Prefixing.\n. You need the $name to be () because of line 70\nhttps://github.com/ITronic/joomla-platform/blob/9f5b55344521ea2aa039f5e20ba0c106ab6fba46/libraries/joomla/database/query.php#L70\nI think giving an array as parameter to union is useless, it would be better to use chaining\n``` php\n$q1 = new JDatabaseQueryMysql();\n$q2 = new JDatabaseQueryMysql();\n$q3 = new JDatabaseQueryMysql();\n$union = new JDatabaseQueryMysql();\n$q1->select('')->from('x');\n$q2->select('')->from('y');\n$q3->select('*')->from('z');\n$union->union($q1)->union($q2)->union($q3);\n```\n. I know the () thing ;-)\nI would not got the way with an array I would add the query directly to the union object\n``` php\n$union = new JDatabaseQuery();\n$query = new JDatabaseQuery();\n$query->select('id,name,transation');\n$query->where('name like \"%needed%\"');\nfor($i = 2000; $i <= date('Y'); $i++) {\n  $query->from('#__table_'.$i);\n  $union->union(clone $query); //or toString()\n}\n$db->setQuery($union);\n```\n. I personally don't your approach appending a query to a select query, I think you loose the readability but thats only my opinion\natm you get nothing if you use the union function of jdatabasequery\nif my patch you get that whats the help text says\n``` php\n$db = JFactory::getDbo();\n$union = $db->getQuery(true);\n$query = $db->getQuery(true);\nprint_r($union);\n$query->select('*');\n$query->from('#_users');\n$union->union($query);\n$union->union($query);\nprint_r((string)$union); //ends in nothing atm\n//adding $this->type = 'union'; to the union function results in\n// UNION ( SELECT * FROM #_users) UNION ( SELECT * FROM #_users)\n//thats wrong\n//using my patch results in\n//( SELECT * FROM #_users) UNION ( SELECT * FROM #_users)\n```\nAnd just for your information you could always give union an array with multiple queries because it is using the append function that handles arrays as expected.\n. Ok, my fault I missed to read the first word in the docblock ;-)\nBut if you do this now you don't get a union statement:\n``` php\n$db = JFactory::getDbo();\n$union = $db->getQuery(true);\n$query = $db->getQuery(true);\n$query->select('*');\n$query->from('#_users');\n$union->select('*');\n$union->from('#__users');\n$union->union($query);\nprint_r((string)$union);\n// SELECT * FROM #__users\n// but this should be \n// SELECT * FROM #__users UNION (SELECT * FROM #__users) \n// the problem is that the jquery::typ 'SELECT' doesn't do anything with the union part in the toString() function\n```\nSo the patch from  MarkRS-UK does the correct thing, except it could not handle the union only query (without select in it) for this it have to change the $name variable to '()'\nHas anyone used the union function anywhere?\n. I would not think that Joomla should fail if you only have union queries in the jdatabasequery.\nI would vote for your patch if you include the $name = '()'; from my patch, then both is working.\n. Joomla should help the developer and should not confuse the the developer and produce invalid sql.\nI you check my example its better to create a $union jdatabasequery and fill it with select queries, thats easy and clean.\nBut if you need to handle the first select query separately its more work for the developer and harder to read.\nfor example:\n``` php\n$union = new JDatabaseQuery();\n$query = new JDatabaseQuery();\n$query->select('id,name,transation');\n$query->where('name like \"%needed%\"');\nfor($i = 2000; $i <= date('Y'); $i++) {\n  $query->from('#__table_'.$i);\n  $union->union(clone $query);\n}\n// without having only union queries you have to do this\n$union = new JDatabaseQuery();\n$query = new JDatabaseQuery();\n$query->select('id,name');\n$query->where('name like \"%needed%\"');\n$query->from('#__table_2000');\n$union->select('id,name');\n$union->where('name like \"%needed%\"');\nfor($i = 2001; $i <= date('Y'); $i++) {\n  $query->from('#__table_'.$i);\n  $union->union(clone $query);\n}\n```\nyou have 4 lines more of code to write and it has duplicated code that could errors and is less readable.\nAnd union with only one query would generate a select query with () around it without UNION operator and thats not invalid sql.\nmy opinion.\n. ",
    "phproberto": "You are true thanks!\n. Joomla standard compliant now :)\nThanks pasamio! \n. Can make it JFile and JFolder independent but no problem. \n. And what's the problem in using JFile & JFolder? If both are already disposable on the platform. Want fully independant libraries to avoid dependencies ? Is that a platform rule? \n. I see no sense in a platform that can't make things easier to developers because it's own rules.\nObviously I'm nobody to questionate platform rules so I'll take this as a FAIL! :)\nThanks for your time reviewing this.\n. So do you think it's better modify it to be non JFile & JFolder dependant or just wait?\n. The default place can be cache/thumbs for example and developers can override it. \nIt can't be /cache/[extension] because the function doesn't know from where is called.\nI used thumbs folder because if the user has uploaded an image probably that folder has the required permissions and is more comfortable to have that images there. For example: images/photos and then images/photos/thumbs\n. Lol closed this accidentally :D\n. I'm going to clean it (JFile, JFolder & DIRECTORY_SEPARATOR) and try again to get this merged.\n. I have removed the JFile & JFolder dependencies and replaced DIRECTORY_SEPARATOR with slashes.\nFast example:\n$image      = new JImage(JPATH_SITE . '/images/banner1.jpg');\n    $thumbSizes = array(\"150x100\", \"200x100\");\n    $thumbs     = $image->createThumbs($thumbSizes, 4);\nWill return an array of 2 JImage objects with the path set for further thumb manipulation:\n```\nArray\n(\n    [0] => JImage Object\n    (\n        [handle:protected] => Resource id #116\n        [path:protected] => /var/www/joomla256/images/thumbs/banner1_150x100.jpg\n    )\n[1] => JImage Object\n(\n    [handle:protected] => Resource id #118\n    [path:protected] => /var/www/joomla256/images/thumbs/banner1_200x100.jpg\n)\n\n)\n```\n. @piotr-cz I think that's fine and make this cover more developer needs. A noSave parameter false by default. The method will remain simple to use as most users will not use it.\n@realityking (re: split method). Do you mean a method that stores an array of JImage objects to disk? It will be just a foreach with toFile. In @piotr-cz case that method will be useful but we are saving him about 5 lines of code? It worths create a static saveImages method?\n. @realityking I understand it now. Thank you. That's great and seems better than add a parameter to the function. That way user can identify each function easilly.\nI'll commit the changes to create both methods and will also try to solve the mkdir issue.\nThanks all for the feedback / ideas!\n. @piotr-cz as the generateThumbs method will not handle paths it must return an array of JImage objects for further processing without paths. The createThumbs method that stores the result into disk will return the array of JImages with path set.\n. Created both generate and create methods. Added an extra check/exception when parent folder doesn't exist or current folder cannot be created.\nAlso added @since 12.2. Not sure if I should do it.\n. Fixed permissions and used constants as default.\n. You are true @piotr-cz\nI forgot to remove the DIRECTORY_SEPARATOR's. I'll modify it ASAP.\nThanks for the advice and support !\n. I've fixed the DIRECTORY_SEPARATOR with slashes. \nThank you all for your feedback.\n. Any news about this? Will be great to see it approved and submitted to joomla-cms to be in Joomla! 3.0\n. @LouisLandry This is based on the same method already existent for module layouts. I've been watching the JViewHtml class and you are right, it's better prepared for layouts but that will probably be harder than create a simple method.\n. Any news about this? :(\n. / works most of the times and in this case all the times. Only fails when you try to manipulate a path obtained from the system. For example with a str_replace or an explode. We should use allways DIRECTORY_SEPARATOR as convention.\nDS is considered deprecated from Joomla 1.6 but backward compatibility will be broken in 3.0.\nhttp://forum.joomla.org/viewtopic.php?p=2720756#p2742713\n. As I like to play I did some tests.\n50000 string concatenations => time elapsed: 0.029999 seconds\nThat's really innapreciable.\nBut the time elapsed by developers in write DIRECTORY_SEPARATOR instead of just / and the improvement in code readability make a winner.\nI'll start using / ;)\nThanks for the info to all and sorry!\n. Sorry. Edited the title.\n. As it's not a real bug can't be tested and doesn't worth to lose any time. Only have to see the if statement. Otherwise free to close the pull request.\n. If you see the if statement you can see that it doesn't do anything with or without the error.  It's only a logical structure to complete in the future. Unit test has no sense as the if only contains a continue. It takes 2 min. to identify the problem.\nWe better forget this. If someday the logical structure is used the bug will appear and someone will fix it.\n. Sure. Thank you for your time.\n. @eddieajau It isn't my code. I was trying to fix this issue reported on joomla tracker:\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=29411\nIf the user has to use native PHP functions why don't fully delete this class? If the library is available it has to work even if it's there only for backward compatibility.\nThere is a method in this class that is calling another one that has been deleted. We should remove it or fix it.\n. @pasamio I thought about the same searching how to fix it. \nI finally used this because JMail already extends PHPMailer and this approach allows you to use a $mailer->replyTo() and then a $mailer->sendMail() without the replyTo info. The mail will use the desired replyTo inserted because it checks its existence globally .\nIf we set the autoReply only based on the arguments received by sendMail that will stop working. So you will be creating another bug.\n. The reason for having a generateThumbs method is to customize the way that thumbs are saved. In fact I originally only created the createThumbs method and someone rightly suggested this (I think it was @realityking ).\nI understand what you are trying @dongilbert . I also thought in implementing it. But as @drmmr763 I finally decided that the library should only contain a standard method. \nAny naming method will not probably fit the requirements of two different developers. So if someone needs a different one it can post-process the generateThumbs output or (the best way for me) extend the JImage class and create a customized createThumbs method.\nThanks for your work with this library Donald! \n. Think in most probable cases:\nimage.jpg\nimage_mini.jpg\nimage_small.jpg\nimage_normal.jpg\nimage_big.jpg\nimage_huge.jpg\nor K2 style:\nimage.jpg\nimage_XS.jpg\nimage_S.jpg\nimage_M.jpg\nimage_L.jpg\nimage_XL.jpg\nimage_XXL.jpg\nI think that both deserve to extend the JImage class as you already have to define sizes correspondecies. \nHaving in mind the examples if I had to choose a solution I would probably use something simple like:\n$thumbSizes = array( \n    'XS'  => '100x100',\n    'S'   => '150x150',\n    'M'   => '200x200',\n    'L'   => '250x250',\n    'XL'  => '300x300',\n    'XXL' => '350x350'\n);\n$thumbs = createThumbs($thumbSizes);\nThis way the createThumbs method will replace the suffixes with the array KEYS. This method will work also for the mini, smal, etc. example.\n. I see it as a Platform bug. I think \"anything\" using JInstaller expects it to load first the main manifest instead of subfolder's. \nI already tested it and sent PR for the 2.5 and the 3.0 CMS branches:\n3.0:\nhttps://github.com/joomla/joomla-cms/pull/752\n2.5:\nhttps://github.com/joomla/joomla-cms/pull/753\nThanks for reviewing this!\n. Why complicate it? If the user wants to use a specific folder still can do it. I think this should remain as simple as possible. What kind of issues are you thinking on?\n. I allways keep in mind to ease developers work. Why don't save us the folder creation when we need it? If we cover the noSave requirement the method will remain really simple to use but flexible to any needs.\n. Done ;)\n. Oops! Done.\n. ",
    "artur-stepien": "I thought about the second one. \nIts pretty strange that JImage::getFilterInstance doesn't auto load filter class.\n. The first question is good. But about second one: is isn't changed. Not in framework, not in any Joomla CMS version. \nSolution to returning string instead of object is give fall-back compatibility (for bad written components)\n. I got view more questions:\nWhy primary key isn't cleared? This function when, I saw it first time looked like it is what I searched for. I wanted to reset all JTable fields so could insert another record without creating another instance.What is the purpose to reset everything without primary keys?\nShould this stay like it is now? Should reset() clear all fields? Or there should be another function called for example JTable::clear() that will clear all fields to its default state (with primary keys). \nAlso there is performance difference with using getInstance() and reset():\ncode\n 0.000 seconds (+0.000); 8.18 MB (+8.179) - before start:\n 0.279 seconds (+0.279); 8.28 MB (+0.102) - After creating 10,000 instances:\n 0.279 seconds (+0.000); 8.28 MB (-0.003) - before start:\n 0.454 seconds (+0.175); 8.28 MB (+0.003) - After resetting table 10,000 times:\nWhen it comes to loading record 10,000 times, reset() is not needed. But when user want to insert records using\nJTable he will have to recreate instance what leads to performance drop. \nIs this function anywhere used in current version of Joomla! CMS?\nI thing that the best solution is to leave reset() like in this commit, and create another function clear() that will clear all fields including primary keys.\n. I'm really new to github and don't use it often. There is new line before comment. Is it wrong?\n. Ok, here is more informations\n0000-00-00 is not valid date\nThis error occur when I try to synchronize database model with Joomla Database using MySQL Workbench. I think that there is data checking before table update. And because that null date isn't correct date synchronization returns error. Also using just NULL will be more consistent with standards. INNODB has no performance issues when using NULL fields, and there will be DB space saved when user has a lot of such 0000-00-00 00:00:00\nThis also affects created and modified time columns.\n. ",
    "e-motiv": "A lot, but i mean \"A LOT\" of third party extensions use their own thumb creation method.  I myself have already seen at least five popular ones.  Others and I have also let this know in a years' old post in some development discussion group of joomla (but it got overcrowded with a discussion of whether to put JImage outside or inside another class, which i suppose is solved now).\nSo, if some people have opionions against putting this in the platform, why not put it in the joomla non-platform library?\nI must admit, I don't know exactly in which folders platform and non-platform library code are put nor where it should be discussed, but I think this thumb function should finally get it through somehow and beg someone to push this in a joomla 2.5 update, platform or no platform. (In the latter case, don't forget to post a link to the relevant discussion space.)\nAlso a note on caching: shouldn't be there an \"if exact thumb image already exist in thumbsfolder, return that one\" be included in this class (and not outside of it) in stead of recreating it every time?\n. Hello elinw,\nI know.  hple (from joomla irc) already warned me about that.\nBut I can't find the button or link where to change those errors on my pull request.\nI am working via browser on GitHub and though I guess it has to do with this sentence below here : \"You can add more commits to this pull request by pushing to the patch-1 branch on e-motiv/joomla-platform\", I can't find anywhere how to do that. I've searched for a half an hour..\nOr is there another way (via browser)?\n(I know eclipse has a Git plugin, but I don't need/want a full git sync there now.)\nAlso, if anyone happens to know a file I can import in eclipse to set my code style to joomla requirements, that would save a lot of manual time too. \n. Thanks for your help @elinw.  I fixed those meanwhile. Is there anything else or can this be committed now?\nI am also wondering if this gets committed, will it be done for all future versions?  I am sure it would then get in the latest joomla version (3.x or what will it be),  but does this also get update in an older update version, like any 2.5 future update?\n. Done.\n. ",
    "drmmr763": "This is a great feature that I myself considered writing for the platform. Would love to see this in core. JImage is a great base for so many things, but to have an image library that doesn't even have a nice thumbnail feature is kind of pointless. Let's get some thumbnail creation in the platform to reduce the amount of code every single image slider / thumb view extension has to write to do this very thing.\n. +1 This is a simple change that will fix tons of issues. Many servers (like mine) require an at-domain sender email, but this causes problems when you want to reply to a site sender from an emailed form. Being able to set the header here is perfect, you get the proper send address, and a useful reply to address.\n. @rashidul04 this is the platform, so the CMS may or may not implement the platform changes back to the CMS. If they do, it usually takes longer, and will not make it into the 2.5.x series. \n. Looking at the pull request tester there are some CS errors: http://developer.joomla.org/pulls/pulls/1624.html think you can fix those? \n. Can we give the app a name to make it sound less robotic and more\napproachable? Maybe Mrs Jenkins?\nOn Tue, Oct 23, 2012 at 9:57 PM, Sam Moffatt notifications@github.comwrote:\n\nJenkins doesn't reopen the pull request, there is a Joomla Platform based\napp that responds to GitHub's hook API.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1630#issuecomment-9725182.\n. I like the sounds of this!\n\nOn Monday, December 3, 2012, elinw wrote:\n\nThat's great; it's something that has been on my mind too.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1735#issuecomment-10943346.\n\n\n\n[image: Small Logo] http://www.s-go.net/\nChad Windnagle\ns-go Consulting\n607-330-2574 x103\n607-229-6260 (Cell)\nWebsite Design - SEO - Video http://www.s-go.net/\nFollow Me: [image: Facebook] http://www.facebook.com/sgoconsulting [image:\nLinkedIn] http://www.linkedin.com/in/drmmr763 [image:\nTwitter]http://www.twitter.com/drmmr763\n. I was implementing the generateThumbs method on my own script just yesterday. Take a look at @phproberto's comment at the bottom of this gist (https://gist.github.com/4268599) for how I eventually went about using the method. \nAt the beginning I was wondering about the best way to use the generateThumbs method since saving to a file wasn't entirely clear, but after reading Roberto's comment and figuring out the implementation, I actually prefer doing it the way that he does. You can easily come up with a naming scheme that is pretty easy to use and doesn't require modifications to the method. \nSo - I'm not sure if the method really requires this change. Its fairly flexible the way it is. Maybe adding a predefined array with some options that are already set would help to prevent writing what I had to do above and make the method a lot easier to use / implement. \n. I'd be interested in seeing a method to handle it. It seems like a lot of extra steps to extend the class just so you can specify a custom naming method. If we had a method that did it by just passing a naming scheme, that would be simpler I think. \n. Yes. I'm thinking it could work chained in before using toFile? Something like:\n$thumbs = $imgObj->generateThumbs(array('500','400'));\n$format = array('pretext', 'posttext', 'ext');\n$setThumbFilenameFormat($format);\nforeach($thumbs as $thumb)\n{\n$thumb->toFile($path);\n}\ndisclaimer: I put very little thought into the design of this so I may be totally off in what I'm thinking. I'd trust just anyone else's expertise over my own here!\n. I saw that once the pull tester ran. Updating soon!\nOn Thursday, January 3, 2013, elinw wrote:\n\nhttp://developer.joomla.org/pulls/pulls/1780.html\nYou need to tell your editor to trim trailing white space :P\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1780#issuecomment-11867411.\n\n\nRegards,\nChad Windnagle\nFight SOPA https://www.google.com/landing/takeaction/\n. I'm going to close this for now and reopen once I get all this mess cleaned up. \n. Don I'm going to waste the rest of my work day on that Tumblr. Thanks.\n\n[image: Small Logo] http://www.s-go.net/\nChad Windnagle\ns-go Consulting\n607-330-2574 x103\n607-229-6260 (Cell)\nWebsite Design - SEO - Video http://www.s-go.net/\nFollow Me: [image: Facebook] http://www.facebook.com/sgoconsulting [image:\nLinkedIn] http://www.linkedin.com/in/drmmr763 [image:\nTwitter]http://www.twitter.com/drmmr763\nOn Fri, Feb 15, 2013 at 4:19 PM, Don Gilbert notifications@github.comwrote:\n\nhttp://wheningit.tumblr.com/post/31693200338/when-i-merge-my-own-pull-requests-part-ii\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1832#issuecomment-13628571.\n. \n",
    "nternetinspired": "One of the key reasons for moving to Bootstrap was re-usability, to provide extension developers with the tools they need to do the job in order to cut out senseless duplication. The sheer number of extensions that are using their own (often horribly flawed) method for creating thumbs is proof that there is a need for such functionality. \nLet's have image thumb creation done once, done properly and usable by all.\nWell done Roberto! \n. ",
    "Skullbock": "I totally agree with @nternetinspired here. Having a JImage class and not having a thumnail creation method seems pointless to me. Moreover, nearly every component needs this, so why not include it into the platform?\n. I solved this in my app inverting the registration of prefixes\nJLoader::registerPrefix('Jcm', './jcm/');\nJLoader::setup();\nThis works, since it's a FIFO queue\nDaniele Rosario\nOn Mon, Oct 22, 2012 at 3:06 PM, GerrAlt12 notifications@github.com wrote:\n\nHello!\nI creating my component for Joomla, and i select prefix for my classes\n\"Jmc\".\nAfter I register this prefix by JLoader::registerPrefix autoloading of\nclasses still not working.\nI think problem in line 299 in /libraries/loader.php\n\"if (strpos($class, $prefix) === 0)\"\nClass name \"JmcController\", this criteria is TRUE for prefix \"Jmc\" and for\nprefix \"J\", but \"J\" is first in massive.\nMaybe it is not a bug, but some extension may conflict, if one have prefix\nfor classes \"Abc\", and another has prefix \"Abczzz\"\nMaybe more complex criteria is better?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1628.\n. I think it's the CamelCase syntax. Since you have JcmClass, it searches the\nprefix J.\nTry using JCMClass and see if that works\n\nDaniele Rosario\nOn Mon, Oct 22, 2012 at 3:14 PM, GerrAlt12 notifications@github.com wrote:\n\nMy code in component core php file:\nJLoader::registerPrefix('Jmc', DIR);\nJLoader::setup();\nAutoloading still not working.\nI do something wrong?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1628#issuecomment-9663087.\n. Strange, in my project i'm doing it like this:\n\n// Setup the autoloaders.\nJLoader::registerPrefix('JC', './jc/');\nJLoader::setup();\nAnd it works like a charm\nWhich version of the platform are you on? And which error does it trigger?\nDaniele Rosario\nOn Mon, Oct 22, 2012 at 9:15 PM, GerrAlt12 notifications@github.com wrote:\n\nI reneme all my classes, and change syntax like this:\nJLoader::registerPrefix('JMC', underscore underscore DIR underscore\nunderscore );\nJLoader::setup();\nNothing changes\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1628#issuecomment-9676654.\n. Yes, that's definetly the issue.\n\nIf you want to load a JcmController class, use the\nJLoader::registerPrefix('Jmc', './');\nJLoader::setup();\nand a folder structure like\n/controller/controller.php\nDaniele Rosario\nOn Tue, Oct 23, 2012 at 10:45 AM, GerrAlt12 notifications@github.comwrote:\n\nOK\nI'm found mistake\nWhen I use registrPrefix with \"Jmc\", and trying to load class with name\nJmcController, autoloader search file \"controller.php\" in subfolder\n\"controller\", not in base path.\nI use platform 12.1\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1628#issuecomment-9694676.\n. Hi all, and sorry for not replying sooner. I got back on saturday from the US (jwc12) and i was hit by the jet lag :(\n\n@eddieajau i agree with your points. I pull requested this as per @LouisLandry request so we could have a \"code centered\" discussion here on github instead of just plain mailing list talk. I prefer something \"practical\" on which discussion can be started.\n@Naouak I totally agree with most of your points. I too do not agree completely on the structure of the order class, nor with the order states. IMHO there is \"too much\" into this library as a starting point. The library itself should not force a particular workflow. It should simply require what's needed for the payment processing. \nIn this sense, i like the idea of a placeholder object (like the order and the address) to use as container for the info that we need to pass onto the payment plugins.\nTherefore, i would say that the library itself should not handle the workflow itself (like sending the user to a different url, catch the IPN-like calls from the payment processors, etc. This library should just make these things MUCH easier, but the workflow should still be implemented by each application, since everyone has a different need.\nIMHO, what we should provide with this package is:\n- A simple way to interact with payment services (both on site and paypal-like)\n- A list of utility classes that will help dealing with the payment data\n  - Address\n  - Order\n  - State\n- Some basic plugin widely used (paypal, 2checkout, auth.net) that could serve as an example for the community to develop other plugins\nYour thoughts?\n. Generate buttons is something that i would definetly NOT have in the platform; the platform could give an array of available payment libraries, but no html should be generated at all. As you said, this is application specific.\nI agree that the utility classes are not strictly required, but since each payment method requires a lot of informations on the payment to be executed, like email, country, billing address, VAT ID, taxes, total, etc. it makes sense IMHO to have a class that contains all these informations; we could use an array or a JRegistry, but using dedicated classes makes more sense to me, since they could be extended by the application, and still offer some methods, like validation.\nI would leave the CMS out of this talk, since it may take a while to insert something like this into the cms libraries. If the platform would include this, then every cms application / component could use the classes for its own porpouses.\nAs for the tasks that i would like to see in the platform, i would say that you are including a bit too much into the lower level (the platform). I would leave just these:\n- Populate order data\n- Sending payment request (no form or html, just the API interactions)\n- Validate payment response\n- Check data integrity\n- Check status\n- Add any utility method to interact with the payment system API, like check, void, etc\nDoes this make sense to you? What i'm trying to achieve here is a system that's not bound to any specific use case, and does not force any particular workflow, but that still takes away a lot of the boring or hard work for the developers, and offer a solid base on top of which we could build our application's payment plugins\n. Hi @parthlawate great to have you on board! We already discussed this at jwc12, but as we said, we need something more \"abstract\" to put into the platform. We could definetly use part of your huge work on this side, but we need to make it more application-independent.\n. I think i'm already in there as of today ;)\n. Just to update this Pull request: as per discussions in the payment api skype group, we changed our approach a bit and we're working on a new version, momentarily placed here:\nhttps://github.com/Skullbock/joomla-platform-payment/tree/jpayment/libraries/joomla/payment\n. In the near future i hope to be able to. I added this class for a project i'll present at JAB13 and thought to share it since it could've been needed. \n. Yeah i feared that, as soon as the checks are done i'll take a look at them and correct for sure. Hope to be albe to put together some Unit tests too\n. ",
    "Chris-Jones-Gill": "+1\n. ",
    "Octobit": "There are 4 files involved.\nlibraries/joomla/installer/installer.php (line 378)\nlibraries/joomla/installer/adapters/plugin.php (line 415)\nlibraries/joomla/installer/adapters/file.php (line 262)\nlibraries/joomla/installer/adapters/module.php (line 435)\nThe first 2 name the field 'id', the last 2 name the field 'extension_id'\nThat is why only two files were pulled.\n. The other adapters do not feature this functionality. Perhaps this is so because there are no significant actions between the pushstep() and the installation of the manifest.\nThis is actually inconsistent. The mechanism was introduced for a reason, and now it is there it is not used. I do not find this correct. \nI did not give it deeper thought, but your remark did make me realize. I would vote that all the adapters adopt this behaviour.\n. Elin, sorry for the delay as I was abroad on summer holiday and did not have internet access.\nI would like to change the title to:\n\"CMS issue #28864: Fixes that changes to the database be undone when installing a module or file extension fails\"\nHowever, I am using the web interface to github and have not found the option to change the title. \n. ",
    "pjwiseman": "This issue is being resolved by moving the installer code from platform to cms.  This move was agreed by platform.  This agreement allowed the code change to proceed immediately in CMS 2.5.x.  Testing of the code move has commenced under CMS tracker #29235.\nPlatform discussion:\nplatform (https://groups.google.com/group/joomla-dev-platform/browse_thread/thread/1d6727a66eca9927)\nCMS Tracker for the code move:\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=29235\nA separate platform pull for the code move will be performed once CMS testing is complete.\n. Tested successfully by applying 1534 to the CMS which fixes the issue in 28990.\n. I also confirm the tabs issue and the fix in changesets d05665a and f089977 of this PR.\nI also have not tested the MySQLi issue and its fix (changeset 509e3fb of this PR).\nI'd suggest that the MySQLi issue be split into a separate pull request.\n. MySQLi issue was introduced by \nhttps://github.com/joomla/joomla-platform/commit/1971fcbdbe274d0e5f7ba77cf9c481d547ed462e\n. The two issues here were replaced by the following pulls:\nhttps://github.com/joomla/joomla-platform/pull/1554\nhttps://github.com/joomla/joomla-platform/pull/1555\n. This was replaced by pull #1554.\n. This was replaced by pull 1555.\n. This was replaced by pull 1555. \n. CMS tracker: \nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_id=8103&tracker_item_id=29345\n. Applied coding standards.  Thanks Sam for instructions.\n. Line 22 and 24 of diff contain trailing whitespace errors.\n. Can we add a reference to CMS#29565 in the issue subject?\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=29565\n. ",
    "aforgh": "It is indeed possible. See how JPATH_ROOT is set.\nIn index.php we have:\nif (!defined('_JDEFINES')) {\n    define('JPATH_BASE', dirname(FILE));\n    require_once JPATH_BASE.'/includes/defines.php';\n}\nthat sets the all important JPATH_BASE constant\nThen in includes/defines.php - that gets loaded soon thereafter - we have:\n$parts = explode(DIRECTORY_SEPARATOR, JPATH_BASE);\narray_pop($parts);\n//Defines.\ndefine('JPATH_ROOT',            implode(DIRECTORY_SEPARATOR, $parts));\nGiven DIRECTORY_SEPARATOR = to /, whenever dirname(FILE) == '/', JPATH_ROOT becomes empty.\nUnfortunately, more and more hosters are configuring their hosting solution to have the DocumentRoot of the virtual host chrooted to /, so having the website apparently installed under the root directory of the webserver is not so uncommon.\n. Try this code:\n```\nif (!defined('_JDEFINES')) {\n    //$thisDir = dirname(FILE); // tThis is how Joomla sets JPATH_BASE\n    // vv Force absolute path to //\n    $thisDir = '/';\n    define('JPATH_BASE', $thisDir);\n    $parts = explode(DIRECTORY_SEPARATOR, JPATH_BASE);\n    array_pop($parts);\n//Defines.\ndefine('JPATH_ROOT',            implode(DIRECTORY_SEPARATOR, $parts));\n\n}\necho 'This dir :' . $thisDir . \"\\n\";\necho 'JPATH_BASE :' . JPATH_BASE . \"\\n\";\necho 'parts :' . print_r($parts) . \"\\n\";\necho 'JPATH_ROOT :' . JPATH_ROOT . \"\\n\";\n```\n. ",
    "Radek-Suski": "Thanks a lot :)\n. ",
    "javigomez": "Sorry, I made a mistake during the test. Actually is not working for Stream and Sockets. Only for CURL\n. @LouisLandry I think that there is something wrong with the sniff\nThe report says:\nlibraries/joomla/http/transport/stream.php:72\nExpected  \"if (...)\\n...{...}\\n...else\\n\"; \nfound        \"if (...)\\n...{...}\\n...else \"\nBut check the line 72: https://github.com/oc666/joomla-platform/blob/29744159710134dd29c756378c8cc078f3e49c26/libraries/joomla/http/transport/stream.php#L72\nIs well written! \nI think that PHPcs is not happy with it because it has no ELSE. But in this right case it doesn't need an else.\nI noticed that the other day when I updated my sniffers. I think this sniff is all the time waiting for an ELSE.\n. @elinw the period makes the code assistant of the IDE to stop showing more information. When you put a mouse over a function/method, the IDE usually shows the description of this method on a tooltip. If there is no dot/period, the code assistant continues reading showing something like: Constructor @param JRegsitry.... instead of only showing the description of the method: Constructor. I guess Louis did it for that. \n. ",
    "eirslett": "Ok, I changed the PHP version. I tried to squash the commits, but ended up ruining the commit history, sorry. :-(\n@AmyStephen: Of course, the Joomla project will manage the packagist package eventually, when the pull request is merged. I submitted the fork to packagist as a proof-of-concept. But there's not really much to manage - when the Joomla Platform git repository is tagged with a new version, packagist interprets that as a release of the package - and that's it.\n. Oops, I pressed the wrong buttons I guess :S I'll have to try this once more!\n. Changing ownership of a package is no problem! If Joomla has a packagist account, I add that account as maintainer for the package and then remove myself. And if not, I can change my Packagist username (it's my only uploaded package) and e-mail address to yours.\n. Ok, they're squashed now.\n. What composer does is clone the repository that is defined by the package at packagist (packagist does not store any actual code, it just stores metadata about the package - i.e. the location of the git repository). So when you require \"joomla/joomla-platform\" in composer.json, composer will clone the whole repository and put the root in \"vendor/joomla/joomla-platform\". It will even include the .git folder. That is happening to all composer packages, not just this joomla one. If we don't want that, we can do 2 things:\n1) Make a separate git repository (a mirror) for the composer package, where the git root is in library/joomla. Or one could even divide each separate library into its own package, e.g. package names \"joomla/database\", \"joomla/filesystem\" etc., which is the approach taken by the Symfony framework, but that's a lot more complex.\n2) Getting involved with the development of composer/packagist, extending their functionality so only a subdirectory of a repository is checked out\nA third option: Just let it be like that for now. Eventually the Joomla platform will follow the psr-0 standard for autoloading (I guess), in which case that can be stated in composer.json. Then, the developer includes \"vendor/autoload.php\", which is auto-generated by composer, and the contents of vendor/joomla/joomla-platform will be unimportant. Except for the size of the repository of course (30 MB), but realistically that shouldn't be a problem for an average web server or shared hosting account.\nActually, having the whole repository in vendor/ might be a good thing. For example if you are using Joomla's database classes, you might find the mocks in tests/core/mock useful?\n. ",
    "mdobrinic": "I'll look into replying before the end of the week;\nI remember opening the ticket as a feature request, that I used to\nestablish group memberships from an external source.\nCheers!\nMark\nOn 10/9/12 12:30 AM, Andrew Eddie wrote:\n\nI'm going to close this one mainly because I have no idea what the\nproblem is you are trying to solve.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/joomla/joomla-platform/pull/1494#issuecomment-9242608.\n. \n",
    "hispid": "Now I'm using version 2.5.6, but this issue seems to be there from 1.6 branch (I'm tired to fix it each time I update joomla).\nTo reproduce this you're to enable SEF and wait for about 15 minutes (or you may reduce session time to get it faster). Then you should see the javascript error.\nIn Google Chrome it looks like:\nGET http://sitename.org/ru/index.php 404 (Not Found) mootools-core.js:485\nc.Request.Class.send mootools-core.js:485\ni.extend.$owner mootools-core.js:141\nkeepAlive management.html:21\n(anonymous function) mootools-core.js:84\n. Environment:\nPHP Built On: FreeBSD buran.lan 8.2-STABLE FreeBSD 8.2-STABLE #4: Tue Dec 27 23:59:59 MSK 2011 root@buran.lan:/usr/obj/usr/src/sys/buran.2011-05-13 amd64\nDatabase Version: 5.3.6-MariaDB-log\nDatabase Collation: utf8_general_ci\nPHP Version: 5.3.13\nWeb Server: nginx/1.2.0\nWebServer to PHP Interface: fpm-fcgi\nJoomla! Version: Joomla! 2.5.6 Stable [ Ember ] 19-June-2012 14:00 GMT\nJoomla! Platform Version: Joomla Platform 11.4.0 Stable [ Brian Kernighan ] 03-Jan-2012 00:00 GMT\nUser Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.83 Safari/537.1\nYes, it works as expected after patch.\n. The difference is that in original code the request goes to the main page, and after patch the request goes to the current page the user is viewing (because of JRoute using of current option and view variables).\n. This is language, added by SEF engine. Site is multilingual, maybe that is the reason.\n. ",
    "clytras": "I just got this error on a Joomla! 2.5.18 Stable with all extensions updated.\nThis is a bug and let me explain why.\nWhat this function does is that it calls index.php before session expires to prevent losing data while writing/editing an article.\n/**\n * Keep session alive, for example, while editing or creating an article.\n *\n * @return  void\n *\n * @since   11.1\n */\nThe problem is that when Joomla has SEO urls, for example:\nhttp://mysite.com/products/motorcycles/motard\n/products/motorcycles/motard/ is not a real directory and thus it does not contain any index.php file that this function calls by using mootools Request Ajax method. So, in order to do it right, the php function has to route index.php to site root, for instance http://mysite.com/index.php which is what JRoute::_('index.php') does instead of just having \"index.php\". So for me this is a bug that I have to correct every time I install a new Joomla site or doing a core update.\n. ",
    "AshanFernando": "I just tried executing the bellow code\nvar myAjax = new Request({method: \"get\", url: \"index.php\"}).send(); which is there, inside session alive\nYes indeed it sends the request to an inner index.php path. But in my case it worked since the inner depth was 2 and yet the request URL was like /index.php/index.php, where index.php was there multiple times.\n. ",
    "yanncharlou": "You are right. Your approach is better.\nThanks for your response.\nBest regards,\nYann\nLe 02/09/12 14:30, Rouven We\u00dfling a \u00e9crit :\n\nonContentPrepareForm gets passed a JForm object. Each form has a name \n(JForm::getName()) to identify it so you can make sure you only modify \nthe form you want to.\nThe disadvantage of your approach is that I may wanna modify two or \nthree forms and I'd need one method for each form. With the current \napproach a simple in_array() check is sufficient.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/joomla/joomla-platform/issues/1512#issuecomment-8221456. \n\n\nhttp://www.bulle-communication.com/ \nhttp://www.facebook.com/bullecommunication \nhttps://twitter.com/#%21/Bullecomm\n. Ooops. So sorry. Of course. I close it.\n. ",
    "nicksavov": "Yes, I updated the comment.  Did you want me to add \"the problem the patch fixes and also a link to the tracker item\" within the title or is it OK within the comment?\n. You're welcome! Thanks for helping me out, too :)\nCheers\n. Woah.  That's cool that http://developer.joomla.org/pulls/pulls/1514.html does that.\nOK, I'll research those things and try and get everything corrected this weekend.  Thanks Rouven!\n. Hi Zhevron,\nWe're trying to add this fix to the CMS at http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=29998 .  Could you provide some steps to replicate in there, as well as Browser and Browser version?\nThanks in advance!\nKind regards,\nNick\n. Thanks Zhevron!\n. Nice job, Don!\n. Hi all,\nWhat's the status on this one?  Doesn't look like it's in staging or master:\nhttps://github.com/joomla/joomla-platform/blob/staging/libraries/joomla/filter/input.php#L261\nhttps://github.com/joomla/joomla-platform/blob/master/libraries/joomla/filter/input.php#L261\n. Great, thanks Andrew et. al.!\n. ",
    "andergmartins": "Pull request:\nhttps://github.com/joomla/joomla-platform/pull/1524\n. Yeah... Agree!! As it is now is an error... it must be consistent. Or accept that fix (or another one) or force a fixed manifest file name.\nI know that some extensions developers (including me into JoomlaBamboo) are using the possibility to use different file names for manifest files, as a way to target different versions of joomla in the same package... So they can build an unified package to all joomla versions...\n. Yeah, would break... what we do with the manifest file is a quick fix... For example, we are almost releasing the ZenGridFramework 3 (JoomlaBamboo) and we are forced to use a build script to separate packages for J < 2.5 and 3.0... Because it will install but after we will have problem with cache and uninstall...\nI would love a native Joomla solution for unique packages, the ability to create a package with different manifest files for different j versions, so we could copy during installation just the specific files to each version... I saw a project for that, but I think it was not popular... but without that, as extension developer are forced to make some workarounds...\nJoomla has a nice idea to maintain backwards compatibility in some codes, extensions whenever is possible... so why not support that into installation files? They are the front port for any extension...\n. With this fix, we can at least explore the ability to set filenames in specific alphabetical order so a valid manifest file will be found in the right time for each J Version...\nIf you and the community like, I can work on a formal solution for support unique packages... I will not use my time in a feature that I \"know\" will not be accepted...\n. Actually that fix, just remove duplicated code to get a manifest file, what fix the inconsistence. It reuse the logical inside installation class, so it is just using a OOP concept... Installing, uninstalling and updating the cache for manifest, should always use just one common method to find and return a manifest file... This fix is all about that, not really to be able to build \"unique packages\"...\nReusing that way, if the installation method to find manifest need to be changed, we just need to make in one place... I think that it is the right way to code... what can avoid inconsistencies...\n. Without that, installer allow to install a manifest.xml, but fails uninstalling or updating the cache... this is the real issue here.\n. ",
    "Kubik-Rubik": "See this pull request: https://github.com/joomla/joomla-platform/pull/1530\n. No, the object is $app, $app->registeredurlparams is a property of the object. The problem is that the extensions should set this property but not all extensions do it. The registeredurlparams object is created automatically in the first assignment $registeredurlparams->format = 'WORD';\nMaybe we should create this object manually ofter the application call:\n$app = JFactory::getApplication();\n// Create empty object\n$registeredurlparams = new stdClass;\n. Sam, you were right. Now all warnings are removed!\n. Hi Sam, I have fixed the whitespace but the pull request checker still shows me the same error. Is it in the cache? Could you please take a quick look? Thank you!\n. Wanted to do a new pull request, but the new changes were combined in this pull request (sorry, I'm new to GitHub).\nThe second request fixes a problem with the helper class for the mail address check. Domains must have at least one country code (except it is localhost) -> added this check to the helper.php.\n. ",
    "MarkRS-UK": "Hi Louis and @elinw.  Sorry not to have got back to you about this so far, I've been silly-busy.\nUnit test, yes.  There's some controversy, it seems, over unit tests.  The previous test tested an internal setting which was no indicator of the actual process required.  A \"proper\" test would, I think, require a (very small) test dataset and a defined result.  Do you(s) have a thought about this?\n. Thanks for the feedback.\nOn further reflection I think you're right, it's better just to check strings.  Avoiding external dependency is more important than I first considered.\n. Ok, I've spent the day with this (mostly) and I just want to check my findings.\nMy corrections cause all the existing tests union to fail, which is quite a result!\nI think it's because the tests are wrong, in their assertions about the way SQL works, rather than my code being wrong.\nThey all assume that a query with a union in it should have \"UNION\" in front of each select, which is incorrect.  In fact, I think the whole approach of JQuery is incorrect in its approach to union clauses, but we can avoid changing everything and take a smaller step first.\nCurrently the union method takes something like $q->union('SELECT a from b') and produces the SQL \"UNION (SELECT a FROM b)\", which is nonsense.  Similarly $q->union(array('SELECT a from b', 'SELECT c FROM d')) produces \"UNION (SELECT a FROM b) UNION (SELECT c FROM d)\", which is also not right.\nSo, am I missing something obvious here, or is it really as incorrect as I think?\nMy new code renders the first instance sufficiently correctly as \"(SELECT a FROM b)\" and the second as \"(SELECT a FROM b) UNION (SELECT c FROM d)\".  Still not completely right I'd say (parentheses around the first clause aren't necessary), but works.\n. Ah, ok.  My discussions have been with someone who thought/thinks it only works as UNION(a, b).  What you describe is how I had assumed it would/should work.\nTo be fair to my other correspondent, the parameter comments in the header of the union method say that it should accept an array of select statements.  It is very easy to make it produce a correct result without having specified a prior select.  I'll check if this is also easy to make it work with a select clause present.\nHow do I avoid the current test problem, ie the test for union passes successfully but in fact JQuery will not produce a full query with a union statement?\n. Reopen.\n. Hi, could you tell me why this is marked as a \"New Feature\"?  It isn't.  It's fixing broken existing code in the core.\nWhilst it is a slightly more esoteric feature than most people use, it is used in the core, in the extended search for example, which presumably doesn't work because of it.  I haven't been able to work out how to test that though.\n. As per elinw's comments I have updated the union test to use individual query methods rather than just writing the SQL in full.  I hope this is what you had in mind.  As noted elsewhere, since some test functions include more than one test, a later version could include all variants, if you felt this would be worth it.\nIn the meantime, job completed as requested.  Over to you.\n. Could someone tell me if there's any likelihood of this code fix being put into the codebase in the near future.\nI understand that you guys are busy, but so am I.  It now needs rebasing, which I have already done once since I first submitted this request two months ago.  If it's unlikely to get in before it needs doing again, it seems unhelpful for me to spend the time working on it.\nMany thanks\nM\n. Hmm, no \"LIMIT\" method for Query? Of course, there isn't, why didn't I notice that before.  Yes, it would be a good idea wouldn't it.\nYour use of the UNION clause is exactly as I understand it.  Isn't it presented to the database engine basically as\n(SELECT STATEMENT) UNION ( SELECT STATEMENT) {... UNION (SELECT STATEMENT)} ORDER BY clause\n?\nThe results of the entire selection can be ordered.\nThat's what your \"'ORDER BY' . $db->qn($this->state->params->get('orderby', 'title')) ... \" does.\nDoesn't that mean, using your example, we should be able to write \n$queryu->order($db->qn($this->state->params->get('orderby', 'title')) ...);\n?\nThis would simplify things greatly because it would mean setQuery can then look after itself in this instance and manual string conversions wouldn't be required.\nAdding a LIMIT method looks like it ought to be a very useful, and relatively simple, thing, would you like me to do that (in a separate pr)?  At that point, of course, it's vital that \"union\" doesn't remove any order by clause.\n. In addition, are you sure that your query (with union) is producing the results you expect?  This pr isn't really about the order clause, it's really to make sure that union statements work.\nYou can see that the current union functionality doesn't work at all by running the following example (that is designed to be as simple, and non-general, as possible) in a standalone environment.\n$q2 = new JDatabaseQueryMysql();\n$sq22 = new JDatabaseQueryMysql();\n$q2->select('a')->from('test')->union($sq22->select('b')->from('test'));\necho '<p> . $q2 . '</p>';\nI think you'll see that the union clause is not generated at all.\nI'd be very interested to hear your results.\n. I don't see any real difference between chaining and feeding it an array of queries to create a union with an initial query.  This is exactly what efEris' example above does, surely.  It it was re-written to generate arbitrarily named queries for the union parts and then fed them all to the first query what would the difference be to the above?\nAnd when you say (efEris) \"At the moment you get UNION (something) UNION (something else)\", do you mean with the code for this pull request?  I do hope not.\nPersonally I don't like the first query inside parentheses, but that's just my opinion, it is within the MySQL syntax.\nI'd say that UNION is an operator in the same sense that \"AND\" (for example) is, in which case  \nThis \n  UNION that \n  UNION theOther\nis perfectly sensible using chaining.\n. Yes, I'm trying to use the function query in a component I'm developing, which is how comes I've put in this fix.\nA union without a preceding select is, of course, invalid SQL.\nI'd say it's better that Joomla also fails if this is entered.  What do you(s) think?\n. A union statement without a select section is invalid SQL.\nJoomla shouldn't be correcting SQL errors.\n. I'm not sure.\nI don't see disagreement with what I've submitted, but also it's not been included, so I'm a little confused.\nI s'pose you might say \"he would think it's right\", because the change seems to me self-evidently correct, but of course I definitely would. :)\n. Thanks, I'll correct the comment.\nIt's not that what's in the manual doesn't apply, I think the original situation arose out of a misunderstanding of the docs.\nAn order clause will have no effect when applied to one of the clauses, but it works just fine when applied to the entire result set, ie after any sub-clauses have been evaluated.  It has always been like this.\n. Fair point.\nI have updated the test to use this syntax for both parts and then to create the union with $q->union($q1);\nIs that what you meant? There are of course three variants, I could put them all in the test if you think it's a good idea.  I notice there are some other \"multiple\" tests.\nI have now my gitHub repository with the single test mentioned above, do I need to do anything else for you to see that?\n. ",
    "zhevron": "That's...a very good question. I'm starting to suspect my editor had fun with the EOLs or something. That's not like Notepad++ at all! I'll actually look into that.\n. There. Swapped to UNIX EOLs and rebased the branch.\n. Hopefully it's fixed now! This is what you get for being used to Bazaar and everything.\n. It only seemed to occour when it was used in a frontend module. The issue, however, is a known thing in Javascript.\nSee http://cs.wellesley.edu/~cs110/examples/return.html for some examples and reproductions of the fault.\nI'm able to reproduce the fault on that page from both Chrome 24.0.1312.52 and Internet Explorer 8.\n. ",
    "compojoom": "Ok, that is cool! However how do you do: \nSHOW TABLES like '%something'\n. ",
    "bishnoi": "ok Thanks\n. ",
    "IberoMedia": "Hello,\nI am not sure how this system works, but I want to notify you that this notice is still coming up. I downloaded Joomla Platform 12.1 yesterday, from http://api.joomla.org/ and I am getting \"Notice: Use of undefined constant JPATH_SITE - assumed 'JPATH_SITE' in ROOT\\libraries\\joomla\\filesystem\\path.php on line 12.\" After I added the quotes to the JPATH_SITE constant the warning dissappeared. \n. I would download the package for your Joomla version, extract folders, and copy the database folder to your existing Joomla. I suggest you back up your existing copy before doing this. It is strange you cannot find it. I wonder how is your existing Joomla installation even working\n. ",
    "piotrmocko": "It is required to use function isValid()\nin file: media/system/js/validate.js\nwhich is a Joomla! from validator.\nThis function use \"Hash\" which is part of mootools-more.\nIt was correct in Joomla 2.5 but in Joomla 3.0 Beta 1 mootools-more was removed from validator\n. Please apply this update before releasing Joomla! 3.0 because my extension use this function from Joomla! validation script and it would not work\n. I have better solution. I have upgraded Joomla! validation script to work without Hash.\nI have wrote part of code which do the same as Hash - converts object to array.\n...\n```\nisValid: function(form)\n{\n    var valid = true;\n// Validate form fields\nvar elements = form.getElements('fieldset').concat(Array.from(form.elements));\nfor (var i=0;i < elements.length; i++) {\n    if (this.validate(elements[i]) == false) {\n        valid = false;\n    }\n}\n\n// Run custom form validators if present\nvar customHandlers = [];\nfor (var key in this.custom) {\n    if (this.custom.hasOwnProperty(key)) {\n      customHandlers.push(this.custom[key]);  \n    }\n}\ncustomHandlers.each(function(validator){\n    if (validator.exec() != true) {\n        valid = false;\n    }\n});\n\nreturn valid;\n\n}\n```\n. By the way I have related improvement into validation script posted on\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_id=8103&tracker_item_id=26114\nSubmitted By: Piotr Mo\u0107ko\nAdddate: 2012-02-28 11:46:24\n. In Joomla 3.0.1 it was not updated. Should I do something with this topic?\n. This code looks nice. I will have to test it. I think that it is high time to rebulid Joomla validation.\nCheck also if it would validate multiple select list as required\n. Add to your form temporary PHP code: \nself::framework(true);\nto solve this issue. \nYou might also override JavaScript class with isValid method by adding following code to your form JS file:\n```\nJFormValidator.implement({\nisValid: function(form)\n{\n    var valid = true;\n// Validate form fields\nvar elements = form.getElements('fieldset').concat(Array.from(form.elements));\nfor (var i=0;i < elements.length; i++) {\n    if (this.validate(elements[i]) == false) {\n        valid = false;\n    }\n}\n\n// Run custom form validators if present\nvar customHandlers = [];\nfor (var key in this.custom) {\n    if (this.custom.hasOwnProperty(key)) {\n      customHandlers.push(this.custom[key]);  \n    }\n}\ncustomHandlers.each(function(validator){\n    if (validator.exec() != true) {\n        valid = false;\n    }\n});\n\nreturn valid;\n\n}\n});\n```\n. ",
    "awc737": "Why was this ignored for 3.0.1, pasamio's reason is not good, because this is a simple and mandatory feature in Joomla's core. My registration form's return no value's. Is there a fix or branch for this I could use?\n. Thanks dongilbert, the problem is I'm not too sure what I need to override, or what code I need to make it work. I was hoping someone who fixed this had a branch, or some code to copy. I'll give it a shot though. \n. Thanks piotrmocko, but I changed self::framework(); to self::framework(true); in libraries/joomla/html/behavior.php, method formvalidation(), but it made no difference.\nI am only trying to fix the Joomla registration form here, which does not return any warnings or errors.\n. On that demo piotr-cz, shouldn't clicking 'Register' with all fields blank, or all invalid fields, at least return some kind of message, like a tool tip response or something?\n. ",
    "obsidev": "I'm not very familiar with Github so I just make one Pull Request for all of my modifications.\nI don't know if it's easy to change it or separate it in two different requests.\n. The separate pull request from https://github.com/joomla/joomla-platform/pull/1549\n. Hi,\nI did a separate pull request with just mysqli here : https://github.com/joomla/joomla-platform/pull/1551\nI didn't found how create a branch directly in github, I have to install a git client on my current computer to create a branch and make a clean separate pull request for the tabs & jhtml.\n. I did not touch any of these files. I have just modify three lines...\nIs there really codestyle issues in these three lines ?\n. Yes I think so too.\nI look for \"html.php\" and \"tabs.php\" in the file but I did not found any of them.\nSo I can conclude that there is no codestyle issue for my three lines : cool !\n. ",
    "fastnetwebdesign": "+1 Nice work Roberto... causes some of my clients huge issues.\n. ",
    "rashidul0405": "doesn't included with Joomla 2.5.7 :-1: \n. ",
    "ImpulseWebdesign": "Is there also code that updates the cache plugin to add the extra arguments?\n. ",
    "GerrAlt12": "My code in component core php file:\nJLoader::registerPrefix('Jmc', underscore underscore DIR underscore underscore );\nJLoader::setup();\nAutoloading still not working.\nI do something wrong?\n. I reneme all my classes, and change syntax like this:\nJLoader::registerPrefix('JMC', underscore underscore DIR underscore underscore );\nJLoader::setup();\nNothing changes\n. OK\nI'm found mistake\nWhen I use registrPrefix with \"Jmc\", and trying to load class with name JmcController, autoloader search file \"controller.php\" in subfolder \"controller\", not in base path.\nIt's strictly like it is discribed in manual, it's not a bug :)\nI use platform 12.1\n. JLoader::setup(); maybe not necessary, without this line all works fine\n. ",
    "chrisdavenport": "New PR to fix this issue: https://github.com/joomla/joomla-cms/pull/2735\n. ",
    "ronnikc": "A new event system sure is on my list of things that id like to see for the benefit of us all :)\n. An event system in a multitier non-excluding system should not need to specify first error or success - but n error or n success or any other, in my opinion, given sub-event or \"tag\" to really be a home for a multipurpose event system that can be used not only for interaction between different elements or entities (be it core or 3rd party) but also as a base of workflows.\nSo parts of this is to allow for events to register and be used by all other entities but part is also making it completely independant so it could be used stand alone.\nIn terms of an ecommerce point of view - or specifically a point of view for 3rd parties in general the waste possibilities in a mature structure that does not exclude nor presets all events (as in Drupal) would greately make it possible for different elements of a Joomla site or application to utilize subparts from others in a more smooth and global approach instead of doing it staticly like today.\nAs for tagging or other sub  or 2nd tier capabilities like failures, success, passed test or what ever can be imagined i think its quite crucial in terms of allowing for an organic non-static structure to form.\nWhich form the multi-tier takes is not so important for me - whats important is that is multi tier so there is a way to couple action and type of action and also to register, read and utilize from any source that is connected to the event system.\nI hope it didnt get too arbitrary :)\n. ",
    "mariopro": "Don, just a though and I would like to know your thoughts about it. In the sql field type, wouldn't make sense now to have a json_decode true/false parameter? I ask because some of the multiselect fields that are populated from the sql, require the data to go through this function in the model.\n. Don, in the radio.php file, imho, seems to make some sense to set the checked radio as disabled. The reason for this comment might seem not so obvious because a checked radio won't change its value or state if the user clicks repeatedly over it, but, if developers want to use the radios to show/hide content, the checked radio not being disabled will respond to the user click and trigger any events that might be associated with it (imho).\nIn line 56, it could be set as : \n$checked = ((string) $option->value == (string) $this->value) ? ' checked=\"checked\" disabled' : ''; and perhaps change the on click behavior.\n. You're abs right. Thanks Don.\n. As I previously suggested in the platform discussion about this refactoring, imho, the attribute could resemble something as - updateNulls.\n. Json serialize would be very useful on multiples (this is how I handle them), but I'm not sure if there is consensus on this. Imho this would be the way to go for the multiples.\nI have dealt with the update nulls on multiple with a tweak in the bind array, but in a form with several multiples, this becomes somehow heavy to code.\nI don't remember any other checkboxes that don't submit when empty. Probably Elin could be the best person to answer that.\n. Looks very good and an good way to optimize the attributes.\n. In the checkboxes, wouldn't it be possible to accommodate the bootstrap data-toggle=\"buttons-checkbox\" that, as far as I could find, in Isis is only possible on radios, while bootstrap has this checkbox feature http://twitter.github.com/bootstrap/javascript.html#buttons. I presume that the only impediment now for the attribute to be used is the <li> that is used to enclose the checkboxes fields in JFormFieldCheckboxes class.\nUsing this attribute instead type=\"list\" for the checkbox could be an option, imho.\n. Just a thought - in the JFormFieldFolderList, when the method starts to build the options list from the list of folders, wouldn't it be useful to add a couple of levels of recursiveness in this so that the drop-down that is rendered could accommodate, for instance, three child levels of the filtered folder? Example: \n<field name=\"path_to_images\" \n    type=\"folderList\" \n    directory=\"images\" \n    exclude=\"none\" \n    levels=\"3\" \n    label=\"FOO_LABEL\" \n    description=\"FOOD_DESC\"/>\nThe parameter \"levels\" (or something similar), if defined, could state the max levels of child directories to search and include, hierarchically in the list. This would render, in the drop-down, something similar to what we have in the categories:\nMain \n|-First child \n|-- Second child \n|--- Third child\n. And suddenly I've just stumbled on the JFormFieldFolderList \"smarter brother\" in the media manager (https://github.com/joomla/joomla-cms/blob/master/administrator/components/com_media/models/manager.php) where the getFolderTree method (class MediaModelManager) does exactly the above... \nQuestion: couldn't this be transposed or adapted to the JFormFieldFolderList ?\n. For a possible future review of the the JFormField classes, imho, the onChange parameter could be evaluated for a possibility to change it to \"onAction\" and allow onClick, OnBlur, onFocus (...) and onChange to be set as the value instead of parameter name (I'm not sure this can be done now on standard fields). An example:\n<field name=\"field_name\" \n    onAction=\"onFocus('do_something_with_js_or_jQuery')\"\n    label=\"FOO_LABEL\" \n    description=\"FOOD_DESC\"/>\nThe method would then add the parameter to the field, depending on what was defined and who knows allow multiple, comma separated, values <field name=\"foo\" onAction=\"onFocus('do_something_with_js_or_jQuery'), onBlur('do_something_with_js_or_jQuery')\" /> \nThis would give some space to implement, for instance and among other things, some of the new CSS3 cursor types, or even free some jQuery/js resources that extension's developers might need to implement to act upon a user action on a field. For instance, onClick=\"jQuery('.class_name').show();\"\n. The alias is not affected because the building process of the alias, per se, trims the alias before it is saved to the database. On my tests, I didn't find spaces or tabs in the alias db field, so that's the reason it wasn't contemplated here.\n. Thanks\n. @Don, can you please confirm that the constant's SCALE_INSIDE and SCALE_OUTSIDE definitions in the docs you've written are correct. It looks like SCALE_INSIDE resizes to the smaller size and not to the larger side provided and the SCALE_OUTSIDE the opposite. I might be wrong but the tests don't give that result.\n. Thanks. Just a couple humble suggestions for the docs that might be useful for less experienced developers regarding image manipulation. Wouldn't it be useful to warn about possible image distortion in SCALE_FILL? The other is related with the \"thumbnail\" word that might confuse the less experienced. I would suggest using \"image\" instead of \"thumbnail\" wherever we aren't exactly dealing with a thumbnail but with a resized image. BTW, another great job!\n. Have to correct the cast to string:\n$this->placeholder = (int) $this->element['placeholder'];  to   $this->placeholder = (string) $this->element['placeholder'];\n. This field type could also make use of the placeholder attribute. \n. Absolutely right. Just adding to the getInput() works fine.\n. ",
    "bcordis": "This look very cool. Hope this is don.\nOn Friday, December 28, 2012, mariopro wrote:\n\nJust a thought - in the JFormFieldFolderList, when the method starts to\nbuild the options list from the list of folders, wouldn't it be useful to\nadd a couple of levels of recursiveness in this so that the drop-down that\nis rendered could accommodate, for instance, three child levels of the\nfiltered folder? Example:\n<field name=\"path_to_images\" type=\"folderList\" directory=\"images\" exclude=\"none\" levels=\"3\" label=\"FOO_LABEL\" description=\"FOOD_DESC\"/>\nThe parameter \"levels\" (or something similar), if defined, could state the\nmax levels of child directories to search and include, hierarchically in\nthe list. This would render, in the drop-down, something similar to what we\nhave in the categories:\nMain\n|-First child\n|-- Second child\n|--- Third child\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1684#issuecomment-11740042.\n\n\nThanks,\nBrent Cordis\n2406 Hermitage Park Dr.\nHermitage, TN 37076\n615.429.6426\n. ",
    "aschaefferfr": "Thank you for your answer.\nI tried to give it a shot, but I'm not a master in PHP and I didn't find where the upload is handled.... I will continue to have a look a little bit. If I don't find anything, if someone else could have a look, it would be nice.\n. ",
    "simpleenigma": "If you can provide any documentation I'll start testing asap\n. ",
    "AdamDocherty": "Is everyone aware of this: http://www.slideshare.net/coolparth/joomla-common-payments-api\nOn git: https://github.com/techjoomla/joomla-payments/tree/master/code\nI have no real comments on either, just wouldn't want to see duplicate work being done...\n. ",
    "jan7923": "Both done!\nOn Mon, Nov 26, 2012 at 9:07 PM, elinw notifications@github.com wrote:\n\n@jan7923 https://github.com/jan7923 would you put a note on your issue\nreport in the CMS tracker that this is merged in the platform (and a pull\nrequest for the same fix to the CMS would be great).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1716#issuecomment-10731513.\n. \n",
    "fanno": "sure i can, i just don't know how, is there a tutorial for it somewhere ?\n. hmm should the check for to long password not throw an error ? now that i have looked a bit more at it? or else how would you be able to check the login if the salt has changed because it have been cut down in length ? (just thinking out laud)\n. like this ? \nhttps://github.com/joomla/joomla-platform/pull/1743\n. You mean so the bug fix and the test one is in same pull request?\nDen 08/12/2012 14.46 skrev \"elinw\" notifications@github.com:\n\nThe test is failing right now but that's because the bug isn't fixed. What\nyou want to do is put your test into the same branch as the bug fix so that\nit passes when it is run on the patched code.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1743#issuecomment-11158804.\n. if that's not what you mean i don't know because both were for joomla:staging ?\n. well i was asked to make it later, how do i update a pull request or should i just make a new one ? and what branch should it be for ?\n. like so ? sorry i am new to pull requests =(\n. this also means i can close the other request right ?\n. here by done, thanks for baring with me\n. ahh now i know what you mean by indentation, i use space in my phpstorm setup i think..\n\nhttp://tinypic.com/r/4kelaq/6\n. is there a phpstorm config file for joomla that i can use to keep same coding syntax ? and what not ?\n. thanks =)\n. hmm i thought it was only testing with the info that i provided? inside ?\nmaybe\n```\n    $this->assertTrue(\n        (strlen($testUser->username) >= 1 && strlen($testUser->username) <= 150)\n    );\n$this->assertTrue(\n    (strlen($testUser->password) >= 1 && strlen($testUser->password) <= 100)\n);\n\n```\nor something ?\n. how do other characters get in to the test ? should it not only be testing with the info i hard coded in the function ?\n. i don't know i founded this \"bug\" when i was adding custom code to check if a username was longer than 5 characters and founded that it seemed to be a bug, i do not know if jform should do this check already.\nif that so then i guess this code is redundant all to gather ?\n. There removed the regex and just testing length\n. yes tomorrow\n. i cant figure out the squashing =(\n. there we go i think ? did that give the effect you were looking for ?\n. Thanks for baring with me, my first time doing anything this \"advanced\"\n. hmm i guess i should have removed the @todo Implement testBind(). ? \n. i added a new request that includes this and test for two more functions\nhttps://github.com/joomla/joomla-platform/pull/1745\n. i use windows so seems i cant preform this task =(\n. anyway jos_messages_cfg ? i do not see where this comes from ? should this not only be using user table ?\ni can see ofcause it is not there as you suggest.\nthis is a dump from the exsisting database is this then what should be there ? (j 2.5)\nCREATE TABLE `jos_messages_cfg` (\n  `user_id` int(10) unsigned NOT NULL DEFAULT '0',\n  `cfg_name` varchar(100) NOT NULL DEFAULT '',\n  `cfg_value` varchar(255) NOT NULL DEFAULT '',\n  UNIQUE KEY `idx_user_var_name` (`user_id`,`cfg_name`)\n);\ntho it looks different from what i see in the tests/schema/ddl.sql possible because it is a mysqli ?\nif i had to guess i would say it should look like this \n``\nCREATE TABLEjos_messages_cfg(user_idint(10) unsigned NOT NULL DEFAULT '0',cfg_namevarchar(100) NOT NULL DEFAULT '',cfg_value` varchar(255) NOT NULL DEFAULT ''\n);\nCREATE UNIQUE KEY idx_user_var_name ON jos_messages_cfg (user_id,cfg_name);\n```\nI will see what i can do to get it installed and such (PEER and the php tester ...), i surely do no what to contribute a lot of code that just end up fail all the time.. because i cant really test it (at this time)\n-Thanks\nP.S\nif databases need to be in tests/schema/ddl.sql and good reason why they all are not? not sure if there is a reason or not.\n. OK i have finally been able to setup PEAR and phpunit took about 6 hours .because of issues with PHP and Apache\ni do not see error on JUserTest::testDelete -> http://developer.joomla.org/pulls/pulls/1745.html\nmaybe i am running it wrong but i am running it on the root of the directory joomla-platform \ni do see 38 other failures tho\n-Thanks ?\n. not sure if i still have issues with my setup .. but this is one of the errors\n24) JViewHtmlTest::testGetPath\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n-'C:\\Users\\fanno\\data\\Projects\\workspaces\\phpstorm\\joomla-platform\\tests\\suites\\unit\\joomla\\view/layouts2/olivia.php'\n+'C:\\Users\\fanno\\data\\Projects\\workspaces\\phpstorm\\joomla-platform\\tests\\suites\\unit\\joomla\\view\\layouts2\\olivia.php'\nin this case it happens because the forward slash are hardcoded .. and seems to be system depended ?\n. http://pastebin.com/T8BQmMC6\nmore here, are the results put in a log some where if you need it all ?\n. $this->assertEquals(DIR . '/layouts2/olivia.php', $this->_instance->getPath('olivia'));\n. the only change i have is this pull request and the phpunit.xml\nwhat do you mean with:\nTry wrapping a realpath around the DIR portion ?\n-Thanks\n. no nothing else change because i wanted to start out by replicating the error and go from there.\n. yes the realpath() fix it tho of cause it pops up the next one ..\n. hehe @elinw i am just using it as a lering experiance =) hopfully i will be able to also add something of value at one point =)\n. i have added a new pull request btw\nhttps://github.com/joomla/joomla-platform/pull/1748\nthis pull request i am attempting to fix the tester to work on windows as well ... can consider this one on hold until i can preform the tests on this one my self =)\n. i would guess this is it:\n``` php\n    public function add($udiff, $root = JPATH_BASE, $strip = 0)\n    {\n        $this->patches[] = array(\n            'udiff' => $udiff,\n            'root' => isset($root) ? rtrim($root, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR : '',\n            'strip' => $strip\n        );\n    return $this;\n}\n\n```\ni just do not know at this time how to fix it, at this time\n. I don't think i understand What you mean !  =(\n. thanks for the info =)\n. I have made changes locally to make this code not fail. But I am not done testing. I will commit it later today if time permits \nWill it cause conflicts because i merged in https://github.com/joomla/joomla-platform/issues/1748 to this one in order t run the test?\n-Thanks\n. done i believe!\n. Am i missing something for this one ?\n-Thanks\n. np =) just wanted to make sure =)\n. right now but i think they are all related to path / newline stuff (some are already fixed in this pull request)\n. would the IS_WIN be needed ? would \"realpath\" not fix it for every system ?\n. what do you want to do in the other locations i \"fixed\" in this pull request ?\n. well the note could in all case just be a comment\n// user of realpath to ensure test works for on all platforms\n$valid = realpath(JPATH_PLATFORM . '/joomla/form') . '/rules';\n....\n....\n        // user of realpath to ensure test works for on all platforms\n        $this->assertEquals(realpath(DIR . '/layouts2/olivia.php'), $this->_instance->getPath('olivia'));\n        $this->assertEquals(realpath(DIR . '/layouts1/peter.php'), $this->_instance->getPath('peter'));\n        $this->assertEquals(realpath(DIR . '/layouts2/fauxlivia.php'), $this->_instance->getPath('fauxlivia'));\n        $this->assertEquals(realpath(DIR . '/layouts1/fringe/division.php'), $this->_instance->getPath('fringe/division'));\n        $this->assertFalse($this->_instance->getPath('walter'));\n// Check dirty path.\n    $this->assertEquals(realpath(__DIR__ . '/layouts1/fringe/division.php'), $this->_instance->getPath('fringe//\\\\division'));\n. fixed errors, now there is new error.\nhttp://pastebin.com/ZQYCiRZt\nmy guess would be it also has to do with path but i am not sure ? but could also be a new line issue...\nanyone have any hints ?\n-Thanks\n. as to http://pastebin.com/ZQYCiRZt i have figured out that the issue may be that\n$content has \"\\r\\n\" in it\nAnd\nfile_get_contents($path) do NOT.. (i would guess only \\n i have not checked this yet)\nwhat would be a good way to test this ?\n$content = str_replace(\"\\r\\n\",\"\\n\",$content);\n$content = str_replace(\"\\r\",\"\\n\",$content);\n$data = file_get_contents($path);\n$data = str_replace(\"\\r\\n\",\"\\n\",$data);\n$data = str_replace(\"\\r\",\"\\n\",$data);\nthis would ensure that all line changes in the check are all the same ?\nor maybe we should consider using regex in this case ?\neg:\n$content = preg_replace('/\\v/', '', $content);\n$data = preg_replace('/\\v/', '', $data);\nit would when testing replace all vertical white space characters with nothing, and then they will compare equal. ?\n-Thanks\n. http://pastebin.com/QKWd3r73\nFailures: 12\ndown to 12 .. realpath dont seem to help here, anyone have any suggestions ?\n-Thanks\n. down to 8\nAre the \"errors\" also a concern ?\n. http://pastebin.com/j0La2eku\n. odd the link works for me =(\n. hmm i followed the instructings i believer it said to remove the comments ??\nhow do i disable the database test ?\n. do i just re add the comments around the whole php tag ?\n. i have tried:\nconst name=\"JTEST_DATABASE_MYSQLI_DSN\" value=\"host=localhost;dbname=joomla_ut;user=utuser;pass=ut1234\" \nconst name=\"JTEST_HTTP_STUB\" value=\"http://localhost/joomla-platform/tests/suites/unit/stubs/jhttp_stub.php\"\nthe others are commented out..\nerrors are down a lot but gut where do i find info on how to setup the databases for testing ? i cant find the docs ?..\n. Think i figured it out ! =) progress is progress ! =P\nmuch better now at least,\nhttp://pastebin.com/2YGa5jLU\nand now it looks like all falior and errors could be because of windows system path/newline issues.\n. http://pastebin.com/JYZ7f6qj\ngestting close. (only testing with mysql/mysqli atm)\n-Thanks\n. was finally able to make all the commits in to one this together, git still at times a bit tricky for me.\nI have tested it on the unit tester with no fail / errors.\nSomeone with something other than windows need to run this test as well, as i cant be sure i have not broken something\nPlease also feel free to review the changes.\n-Thanks\n. > This should be // Replace to fit the check style standard.\nWhat do you mean ?\n. i will squash once again when its ready to be pulled  =), when you think it is ready\n. is there anyone with another system than windows that can give this pull request a test ?\n. Thanks very much =) \n. This is my first pull request so i do not know what the normal process is ? i do not understand your comment/note ??\n. ",
    "pilou-": "Let me know if this is the right way to fix this problem. There are other similar PostgreSQL problem:\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=29685\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=29678\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=29680\nonce this one validated I could submit merge requests for others.\n. ",
    "Lemings": "t would be nice to have optional parameters to the cropResize function specifying top left offset for cropping. Let's say I want to crop 20% from top and 80% from bottom, I could set this parameter to 20 and top offset is calculated. Same happens for wide images Now it crops from right, but setting 50 would crop from both sides. \n. In this line it is possible to calculate pixels to be cropped before and pass this value to crop function, if it is tall image top offset, wide image - left offset. 715  \n-    return $this->crop($width, $height, null, null, $createNew);\nSomething like \n if (($this->getWidth() / $width) < ($this->getHeight() / $height))\n {\n      $this->resize($width, 0, false);\n      $topOffset = ($this->getHeight() - $height) * $topRate (specified in function call)\n      $leftOffset = null;\n    }\n    else\n    {\n      $this->resize(0, $height, false);\n       $leftOffset = ($this->getWidth() - $width) * $leftRate (specified in function call)\n       $topOffset = null\n    }\nreturn $this->crop($width, $height, $leftOffset, $topOffset, $createNew);\n. ",
    "kaviththiranga": "closing an recreating the pull request from a different branch.\n. Unit tests are running fine locally. But one test fails when tests are run via PullTester. The below assertion\nhttps://github.com/kaviththiranga/joomla-platform/blob/media_package/tests/suites/unit/joomla/media/compressor/JMediaCompressorJsTest.php#L97\ncompresses contents of a file and checks it with the contents of the file named filename.min.js. Seems like it compresses the contents of case1.js and compares it with the contents of jquery-1.2.3.min.js, instead of comparing with case1.min.js.\nBut it runs fine locally. Am I doing something wrong with the file paths?\nBelow is the folder of javascript test files\nhttps://github.com/kaviththiranga/joomla-platform/tree/media_package/tests/media/js\n. Hi, thanks for your review. Actually in the original plan JMediaCompressor was an interface. But later it was changed. The idea of further extending comnpressors like JMediaCompressorJsYui seems great. So do you suggest that I should remove static methods? \nHonestly, a goal of creating this pull request was to get some effective feedback on design from maintainers. Actually the originally suggested design was changed few times and I have modified the library few times according to them.\nI do not have a big experience in these kind of things. But with some guidance, I think I will be able to make this great.\nI am really happy to work on this further, so that I can make my summer work useful to others. If you all can give me some last decisions on design, I am ready to work on.\n. Hi Elin,\nNeed few more hours work. I will make the pull request from new branch ASAP.\nOn Tue, Mar 19, 2013 at 1:55 AM, elinw notifications@github.com wrote:\n\nKavith any updates?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/pull/1759#issuecomment-15079332\n.\n\n\nKavith Thiranga Lokuhewage,\nUndergraduate,\nBSc (Hons) Software Engineering,\nStaffordshire University, UK.\n. Hi all,\nI am closing this pull request and I will make another pull request from the new branch as soon as I am done with modifications.\nThanks.\n. ",
    "SniperSister": "Okay, I added the attributes to the actual markup output and it seems to be working fine now.\n. I fixed the issues so it should be working now.\n. Thanks for the hint ;)\nreopen\n. ",
    "dukeofgaming": "Guys, I moved the existing Jira issue put by Don to an experimental workflow, I need feedback to \"debug\" the workflow. I'll put some details in the other mailing list post to not hijack this thread.\nhttps://joomla.jira.com/browse/PLATFORM-4\n. ",
    "Cook-Self-Service": "Thank you for your comments.\nActually, I am finishing JDom so I cannot present it well for the moment.\nJDom is a great framework. The example here is only a Hello World and is showing nothing.\nThanks to JDom :+1: \n- It is possible to run cross compatibilities (1.6 to 3.0).\n- It can load easily the requested frameworks (bootstrap, jQuery, jQuery UI + sortables, chosen, icomoon, ...)\n- It assembles the PHP, HTML, CSS, images, fonts in the same place for every JDom class.\n- The HTML construction is decomposed and inherited, so it is very easy to addCss styles, javascripts commands, for instance.\n- The parameters are passed trough an associative array, wich means that it is easy to transfor a list to a combo or to a radio.\n- And much much more !...\nI will write a documentation and instance it in my Joomla plateform repository to offer some examples.\nFor the moment it is too early.\nI was only testing how works GitHub because I am a newbe here.\nHold on, it will not be long.\n. [quote]I believe the presentation layer is far too embedded into Joomla core, it seems many agree on that point.[/quote]\n@AmyStephen \nWhat do you mean, too much complex, or too much PHP for rendering ?\n. ",
    "vecrea": "I use jDom on some projects with Cook. Once you understand the logic behind it, I find it very powerful.\nBut yes, it lacks a solid documentation, although it has improved over the past months\n. ",
    "mzammam": "Hello,\nI can't find /database/ folder in my platform root!\nany help?\n. ",
    "Xerosigma": "Thanks, I would really appreciate a if you could send me a diagram or\nscreen shot of a working structure for CMS.\nCurrently this is mine:\n[image: Inline image 1]\nI'm running the code from the highlighted file: com_jehuti/site/jehuti.php\nI'm assuming this is wrong?\nOn Thu, Jan 17, 2013 at 1:33 AM, Don Gilbert notifications@github.comwrote:\n\nYou're approaching if with the right idea, but your implementation is\nslightly off. Where is are you running this code? In your\ncom_jehuti/jehuti.php file? If so, your call should be\nregisterPrefix('Jehuti', DIR);\nThen, when using a class, it will look for JehutiModel in\ncom_jehuti/model/model.php and JehutiModelBase in com_jehuti/model/base.php\nHowever, you must note, that if your building this in the CMS as a\ncomponent, you'll have issues withe the default configuration. I can send\nyou a screenshot of my directory structure if you'd like later when I'm on\nmy computer.\nSent from my iPhone\nOn Jan 17, 2013, at 1:20 AM, \"Nestor E. Ledon\" notifications@github.com\nwrote:\n\nUsing the version of J! Platform that comes with the latest version of\nJ! CMS, auto loading using registerPrefix or discover don't seem to work.\nThe below does squat, my files and class names follow convention:\nJLoader::registerPrefix('Jehuti', JPATH_PLATFORM .\n'/../components/com_jehuti/controllers/');\nJLoader::discover('Jehuti', JPATH_PLATFORM .\n'/../components/com_jehuti/controllers/');\nHowever if I load individual files, works fine:\nLoader::register('JehutiController', JPATH_PLATFORM .\n'/../components/com_jehuti/controllers/jehuti.php', true);\nJLoader::register('JehutiModel', JPATH_PLATFORM .\n'/../components/com_jehuti/models/jehuti.php', true);\nJLoader::register('JehutiView', JPATH_PLATFORM .\n'/../components/com_jehuti/views/jehuti.php', true);\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joomla/joomla-platform/issues/1804#issuecomment-12357403.\n\n\nNestor Ledon\nCEO | Terra Chaos Corporation | www.terrachaos.com http://terrachaos.com\n. Thanks a ton. If I'm not mistaken though,my deployed structure is the same as yours. I'll review your bootstrap maybe I'm missing something.\n\nThanks again for the response.\n. Oh dear... I have it working. My directories where not named correctly. I had \"controllers\" instead of \"controller.\"\nThanks a ton for the help.\n. ",
    "ced1870": "The problem is that I'm not a github master user and I dont know how to remove it and update this !\nI find this really diffcult to submit just few lines of codes to improve Joomla! , don't cry then if there is less people helping ...\nI have already spent hours to try using github for Joomla but this is not easy for a beginner and I think that you should be able to remove this space too ? \nRegards\nCed\n. Ok so please remove the space for me :) and add the pull request to joomla. I have to learn how to use github for the next time ! ;)\nThanks !\nCEd\n. ",
    "ienev": "I know 2.5.x is another branch but are there any plans to fix this in 2.5.x as well? If yes - should I create an entry in the Joomla! Tracker and make a PR?\n. ",
    "wilsonge": "The two pull requests above deal with a blank copy of JUser being returned. This stops the JError being formed when trying to find a user that doesn't exist and gives it an id of 0 by definition. It thus removes the php warning as well therefore.\nStill trying to work out why the command is only working when logged in though.\n. That's definitely not whats written in the documentation here http://docs.joomla.org/JFactory/getUser . Example 2 is pretty explicit. But that's in some ways what I'm after - trying to get the code and the docs matched up :) If its definitely not supposed to be used to search for users - then that makes the param \n* @param   integer  $id  The user to load - Can be an integer or string - If string, it is converted to ID automatically.\nirrelevant. Because the user logged in is only searched for if this is null.\n. But my part of my point is that it doesn't. For some reason (and this has existed since at least J2.5). If a user isn't logged in - then all that is returned when you search for any user is just a 'new' JUser. No details are passed back at all.\nTry running the code I made in my very first post for a user that does exist. If you are logged in then it will return that users details. If you are logged out - it will say the user does't exist.\nI had a long look last night though and I cannot for the life of me see what in the code is doing that. This is a separate thing to my commit above though - which is related to what do to if you search for a user and they don't exist.\n. OK quick update been doing some testing and it turns out that on line 224 of joomla/factory.php and the getUser() function\nelseif ($instance->id != $id)\ndoesn't activate if $id is 0 for some reason - in fact you can write at the end of the get user function\nif($id == $instance->id) { echo 'true for user '.$id; } else { echo 'false for user '.$id; }\nand it will actually echo out true when you are logged in and false when you are logged in - when you pass in a active users username.\nAnybody got any ideas as to why this is the case?\n. OK commit above seems to do the trick but don't know whether it has any side effects/is the optimal way of coding for this! Think these 3 commits seem to do the trick and restore the expected behavior from example 2 in the docs\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=29986\n. @AmyStephen Its not necessary a guest looking up id's. But say I have a list of guest id's in my database and I want to use JFactory::getUser('username')->username. To then retrieve their username from database I want to use JFactory::getUser rather than a database request. However this approach only retrieves the username when someone on the site is logged in at the moment. I'm not changing the behaviour of the guest 0 id. Just adding in a catch so that the request still runs in this scenario.\nBut thank you for the comments!\n. I'm not sure exactly what's needed in all honesty. When I found this I just wanted the code to agree with what's in the documentation. Of course that doesn't mean to say there aren't other ways of achieving this/whether its better to change the documentation!!\nThanks for the advice with JUser::getInstance($username) btw - should have occurred really based on the research I've been doing into this.\n. Tracker Item for those interested http://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_item_id=31192\n. Hi the Joomla Platform is deprecated as of Spring 2013. The idea of Joomla's standalone platform has been continued in the Joomla Framework (http://framework.joomla.org/) whilst the platform project itself has been merged back into the CMS. So please can you send this code (if relevent) to the correct project please :) This repo exists principally for historical reasons for the CMS to track old conversations. Thankyou!\n. ",
    "MDunkleSr": "Not that it changes the need for independent confirmation, but I do have it running w/ desired results in both a test & production environment.  LMK if I need to clarify anything.\nAppreciate you taking a look at this & considering it for merge!  \nThanks,\nMike\n. ",
    "khanhlh": "I still get \"200\" code when connection is lost. Just create a pull request at https://github.com/joomla/joomla-platform/pull/1870 to solve the issue.\n. ",
    "dirkjanm": "I disagree that this is a security feature. It is a feature that gives you a nice error message.\nFiles outside the open_basedir cannot be written to, that is the security.\nDetecting whether you are trying to write to a file outside the open_basedir does not make it anymore secure (unless you are somehow assuming that the open_basedir security does not work on php).\nHowever since this check gives false positives at the moment it is more of an annoyance than any kind of feature.\n. I think open basedir restrictions raises warnings instead of fatal errors (in PHP that is).\nI'm trying to fix it for the CMS. I've had it a few times that one of my customers had this issue with hosting on Windows + IIS.\nFixing it in the core manually there will bring the error back when they update.\n. Version 2.5.9\n. Thanks, I appreciate your help here. The screenshot doesn't bring me much further, if you have time to explain later I'll wait for that.\nOtherwise, this is just a problem that pops up every few months so its not much of a hurry, I just know it will occur again at some point, so if in a few months this could be in the official package it is fine for me.\n. ",
    "fitorec": "This is a verbatim copy of:\nhttps://github.com/joomla/joomla-cms/pull/724\n\nI realized that IPs are not entirely correct validating, for example:\nphp\n<?php\n$domain = '192.23.243.23.2';\n$regex = '/^[0-9\\.]+$/';\npreg_match($regex, $domain);\n//TRUE\nOne option is to change the regular expression to catch four numbers separated by a dot:\nphp\n<?php\n$domain = '192.23.243.23.2';\n$regex = '/^([0-9]{1,3}\\.){3}[1-9]+$/';\npreg_match($regex, $domain);\n//FALSE\nAnother problem is that soon there will be more IPv6 addresses so we would have to change the regular expression to something like:\nphp\n<?php\n$regex = '/^(([0-9]{1,3}\\.){3}[1-9]+)|([0-9a-f]*::[0-9]+)$/';\nFortunately PHP5 has a function (inet_pton) that returns false if the IP address is wrong, I think this is a better solution.\nWhat do you think?\n. :+1:  @piotr-cz, @AmyStephen yep, tnks for the tip :relaxed:.\n\nWould it be appropriate to change the function to something like? ( Using FILTER_VALIDATE_EMAIL flag ):\n\nphp\n<?php\nabstract class JMailHelper\n{\n    //...\n    function isEmailAddress($email)\n    {\n        return (boolean) filter_var($email, FILTER_VALIDATE_EMAIL);\n    }\n}\n:flushed: What do you think?\n. :octocat: I just made a corresponding change\n. @dongilbert, @piotr-cz, Thanks, now I see, I will return to the previous commit and add more cases for  test for IPv4 and IPv6\n. ",
    "jdeproost": "Done, kind regards, Johnny \n----- Original Message -----\nFrom: \"Andrew Eddie\" notifications@github.com \nTo: \"joomla/joomla-platform\" joomla-platform@noreply.github.com \nCc: \"jdeproost\" johnnydeproost@ossc.be \nSent: Sunday, 24 February, 2013 1:21:14 PM \nSubject: Re: [joomla-platform] Update libraries/joomla/database/driver/postgresql.php (#1838) \nThere are a few code style problems with this PR. Would you mind fixing them. Thanks. \nhttp://developer.joomla.org/pulls/pulls/1838.html \n\u2014 \nReply to this email directly or view it on GitHub . \n. OK, I keep on trying...\n. ",
    "axelsjo": "Google provides some background on the User-Agent in mobile Chrome versions here:\nhttps://developers.google.com/chrome/mobile/docs/user-agent\nCrMo is changed to Chrome/<Chrome Rev> Mobile in recent versions of the mobile browsers, but the existing CrMo check in browser.php should be kept to catch older versions.\nRegarding CriOS, we see that the User-Agent string in Chrome for iOS is the same as the Mobile Safari User-Agent, with CriOS/<ChromeRevision> instead of Version/<VersionNum>.\nI haven't tested, but it looks like browser.php today finds Safari but are unable to get the version numbers (in identifyBrowserVersion()).\nThe question is whether Chrome on iOS should be reported as Chrome (as in the pull req) or as Safari. The first is more correct from a \"user\" perspective, as we report the browser in use with the correct matched version number. The latter is more correct from a \"technical\" perspective, as Chrome on iOS use the UIWebView rendering engine provided in iOS (but I have a hard time seeing how we can pick a proper version number).\n. ",
    "GreyHead": "See a patch which fully addresses this issue\nhttp://joomlacode.org/gf/project/joomla/tracker/?action=TrackerItemEdit&tracker_id=8103&tracker_item_id=30246\n. ",
    "pwfisher": "Even if you don't believe I wrote this, why would you ignore the bugfixes?\n. Reconsidering it, I can't say with certainly that this was derived from my code. I think a drop-in replacement would be the best solution to the logic issues. I'll see what I can put together.\n. Please see https://github.com/joomla/joomla-platform/pull/1851 for the new function and unit tests.\n. Thanks for looking into it. I reached a similar conclusion. Accepting this pull request would make it a moot point, anyway.\n. Thank you.\n. ",
    "bentasker": "Ooops, need to raise against Joomla-Framework now!\n. ",
    "Achal-Aggarwal": "I didn't noticed the READ-ONLY line. So I am closing this one. I already submitted a PR to CMS.\nClose\n. ",
    "jhattara": "The code is perfectly valid html. There is nothing that I know of in the specification that would prevent putting two form elements with the same name in the same form. The latter just overrides the first one. I am well aware that it is suggested that checkbox should be fixed in the bind function, but this should not be necessary.\n. Yeah, I missed that earlier. Sorry.\n. ",
    "w00fz": "I think it should be:\ncss\n.moor-box label { font-family: mono; }\nrather than taking it off entirely. The reason I had that as mono is to ensure the labels such as HEX, RGB, etc, won't inherit any of the admin templates font families and sizes.\n. ",
    "pborreli": "done\n. ",
    "bnisevic": "You removed this file, but my phpStorm requires it and it uses generic one not fit to Joomla! rules. Can you take it back please?\n. Yeah. Sorry. I found this pull's link on Google when I searched for a fix of my problem. That's why I posted here, because I was desperate. But I found the solution and it was nothing about CodeSniffers files for Joomla standards.\nAnyways, thank you for your reply!\n. "
}