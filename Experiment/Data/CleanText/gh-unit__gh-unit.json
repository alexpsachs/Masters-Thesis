{
    "gabriel": "I think this is fixed.\n. This is fixed by Failed filter added awhile back I think.\n. This was fixed a few versions ago.\n. Yeah I noticed if it can't find any tests to run it appears hung. So might be hitting two bugs. One where it can't find the tests and the other where if it doesn't have any tests it appears hung... I'll try to do a fix todayish.\n. Is it possible to get a screenshot or maybe steps to reproduce? Is this iPhone or MacOSX? Am having trouble reproducing.\n. Hmm.. are you using 0.4.13 (or 0.4.14)... I tried that setup and seemed to work:\nhttp://skitch.com/gabrielh/nd6fw/ghunit-0.4.14\nhttp://skitch.com/gabrielh/nd6f5/ghunit-0.4.14\nCan you try removing the plist for the test application? Its in ~/Library/Preferences/\nTry: ls -ltr ~/Library/Preferences/ | grep Tests\n(Will probably look like: com.yourcompany.Tests.plist)\nI use skitch for screenshots :)\n. I think this is fixed :)\n. Thanks, I'll check this out and see if I can track down the issue.\n. Hah! Yeah I found the select/deselect was really hard to use and the search bar filter thing was more useful.\n. Did a 4.0 build (see downloads), so I think this is fixed.\n. If I am reading my google group post right, I think I fixed this..  :)\n. Fixed in 0.4.28\n. Cool..\nI found a script to ensure newlines at EOF, and added it in Scripts/AddNewLineEOF.sh\n. Manually pulled this into the new docs.\n. Cool.. I think I'm OK with existing display. If you want to add it in as a style that people can choose that might be better.\n. I removed all the BWToolkit dependencies in 0.4.29... Thanks!\n. Added test for this and seems to be failing correctly.\nhttps://github.com/gabriel/gh-unit/blob/master/Tests/GHTestMacrosTest.m#L27\n. I just double checked and GHUnitIOS-0.4.27.zip is an iOS version. \nI did rename the framework builds for iOS to also be GHUnit.framework (from GHUnitIOS.framework).\n. I double checked on of my own projects with the latest 0.4.27 and the example project at https://github.com/gabriel/gh-unit/tree/master/Examples/MyTestable-IPhone and I can't reproduce the issue :(\nCould you send me that project that is failing with the new release (to gabrielh@gmail.com)? I don't doubt that there might be something wrong. Getting build settings to work exactly right everywhere is voodoo sometimes.\nThanks for your feedback.\n. To ease confusion (hopefully!), I changed the iOS framework back to build GHUnitIOS.framework ... \n. New builds up.. 0.4.28\n. Fixed in 0.4.28.\nAdded ARCHS and VALID_ARCHS to xcconfig files and no arguments are needed.\nThanks for the feedback!\n. Fixed in 0.4.28.\nThanks for the feedback!\n. Fixed in 0.4.28.\nThanks for the feedback!\n. Fixed in 0.4.28\n. Pulled this in. Thanks!\n. Pulled, thanks!\n. Removed the errexit... Thanks!\n. Removed the errexit... Thanks!\n. Removed the set errexit altogether... Thanks!\n. pretz, omg thanks\n. I would try the latest build (just updated), which now starts the test runner from the app delegate even on from the command line.\nBe sure to use the latest main (.m): https://github.com/gabriel/gh-unit/blob/master/Project-iOS/GHUnitIOSTestMain.m\n. Fixed in 73cbae55\n. Just pulled in c1850e832e which fixed the xml generation ...\n. Feedback.. you use \"newImage\"... Isn't good to use \"new\" since it can confuse the compilter/analyzer.. Maybe use \"updatedImage\" everywhere instead.\nSaw a bunch of MyCompanyName.\nMyTestableViewController_iPad.m and MyTestableViewController_iPhone.m had a bunch of crufty stuff in it.\n. Fixed in 0.5.5.\n. I don't think we want to support llvm gcc... Maybe you can try using an earlier release? Sorry :)\n. It looks like you are using the xcode beta. If you want to use the standard xcodebuild you can use xcode-select to switch back:\nsudo xcode-select -switch /Applications/Xcode.app\nIf you want to work with the beta, it appears it wants to use a workspace.\nYou can try to change to use a workspace?\nGHUNIT_CLI=1 xcodebuild -workspace  -scheme \nAlso be careful not to have multiple Tests schemes or targets?\n. I think this happens on the beta...\nsudo xcode-select -switch /Applications/Xcode.app\nTo make sure your xcodebuild is pointing to the non-beta.\nOn Wed, Sep 12, 2012 at 2:10 PM, Kevan Dunsmore notifications@github.comwrote:\n\nHmmm... I'm getting exactly the same thing. Tried using the workspace but\nI get the same output:\nGHUNIT_CLI=1 xcodebuild -workspace VoiceRecognizer.xcworkspace -scheme\nVoiceRecognizerTests -configuration Debug -sdk iphonesimulator build\n=== BUILD NATIVE TARGET VoiceRecognizerTests OF PROJECT VoiceRecognizer WITH CONFIGURATION Debug ===\nCheck dependencies\nPhaseScriptExecution \"Run Script\" /Users/kevan/Library/Developer/Xcode/DerivedData/VoiceRecognizer-gjqdkayvfemoducfsjlokmazgxgk/Build/Intermediates/VoiceRecognizer.build/Debug-iphonesimulator/VoiceRecognizerTests.build/Script-0E64583716001423002CE6CB.sh\n    cd /Users/kevan/github/ios-sdks/VoiceRecognizer\n    /bin/sh -c /Users/kevan/Library/Developer/Xcode/DerivedData/VoiceRecognizer-gjqdkayvfemoducfsjlokmazgxgk/Build/Intermediates/VoiceRecognizer.build/Debug-iphonesimulator/VoiceRecognizerTests.build/Script-0E64583716001423002CE6CB.sh\nRunning: \"/Users/kevan/Library/Developer/Xcode/DerivedData/VoiceRecognizer-gjqdkayvfemoducfsjlokmazgxgk/Build/Products/Debug-iphonesimulator/VoiceRecognizerTests.app/VoiceRecognizerTests\" -RegisterForSystemEvents\n2012-09-12 14:07:43.300 VoiceRecognizerTests[50929:707] Warning: CFFIXED_USER_HOME is not set!  It should be set to the simulated home directory.\n2012-09-12 14:07:43.307 VoiceRecognizerTests[50929:707] Unknown Device Type. Using UIUserInterfaceIdiomPhone based on screen size\nTerminating since there is no workspace.\n* BUILD SUCCEEDED *\nAny pointers here?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gabriel/gh-unit/issues/96#issuecomment-8510111.\n. I haven't had a change to investigate the beta failures yet, but since the\nseed is already GM it seems I really need to :)\n\nYeah I'll take a look right now and see if I can track it down...\nGotta love how stuff changes every version :)\nOn Wed, Sep 12, 2012 at 3:30 PM, Kevan Dunsmore notifications@github.comwrote:\n\nHi Gabriel -\nIn my case I actually want to use the beta :-) I thought based on your\nprevious comments on this issue that it would work. Is the beta not\nsupported by GHUnit?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gabriel/gh-unit/issues/96#issuecomment-8512486.\n. Found a radar here:\nhttp://openradar.appspot.com/12306879\n\nI am currently baffled.\n. Do you think the message before it.. \"Unknown Device Type\" has anything to do with the failure?\n. I am running with new 4\" default png (Default-568h@2x.png), and get the same error.\n. The bottom of\nhttp://gabriel.github.com/gh-unit/docs/appledoc_include/guide_command_line.htmllists\nsome env vars.\nOn Wed, Sep 26, 2012 at 4:35 AM, John Foulkes notifications@github.comwrote:\n\nWhat is the flag to turn on autoexit?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gabriel/gh-unit/issues/96#issuecomment-8886873.\n. I just noticed updated command line tools. Still broken. Heh wtf apple \n. That seems to work unless you have view tests in which case it seg faults\nwith the GHTestRunner since its headless. Most people probably don't have\nthose tho...\n\nOn Thu, Oct 11, 2012 at 3:45 PM, superrunt19 notifications@github.comwrote:\n\nthis worked for me. I changed the implementation of my main.m from this\n@autoreleasepool {\n    return UIApplicationMain(argc, argv, nil, @\"GHUnitIOSAppDelegate\");\n}\nto this. I'm duplicating the check that GHUnitIOSAppDelegate is performing\nin applicationDidFinishLaunching:\n@autoreleasepool {\n    if (getenv(\"GHUNIT_CLI\")) {\n        retVal = [GHTestRunner run];\n    } else {\n        retVal = UIApplicationMain(argc, argv, nil, @\"GHUnitIOSAppDelegate\");\n    }\n}\nWhat I found is that when running the first way, UIApplicationMain is\ndetecting something incorrect in the environment and is bailing before it\never attempts to instantiate GHUnitIOSAppDelegate (I added an init method\nto GHUnitIOSAppDelegate and it was never invoked). So it appears that\nUIApplicationMain has changed with the iOS6 sdk.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gabriel/gh-unit/issues/96#issuecomment-9360943.\n. I'll take a look...\n\nOn Mon, Sep 24, 2012 at 7:05 AM, Stanislaw Pankevich \nnotifications@github.com wrote:\n\nIt seems that mainly Pods/GHUnitIOS/Libraries/GTM code causes the\nproblems.\nIts repo on google code seems to be very outdated:\nhttp://code.google.com/p/google-toolbox-for-mac/source/list.\nI myself don't have time to dive into GHUnit and GTM internals, so let's\nwait for this to be reviewed by the maintainers.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gabriel/gh-unit/issues/97#issuecomment-8819762.\n. Just tagged current head as 0.5.5.\n\nThanks!\n. oops sorry .. just merged...\nI've haven't been doing iOS lately but will be getting back into it so hopefully this project will get some love again...\n. hey all... yeah am totally cool with setting up an org and transferring\ncontrol... I can also edit the readme on my repo to point to the right one,\njust let me know what you need...\nOn Mon, Oct 28, 2013 at 12:39 PM, Felix Schulze notifications@github.comwrote:\n\nYes you could define some admins, that can review pull requests and\nissues. So it's not depended on one person only.\nLet's see if @johnboiles https://github.com/johnboiles reaches @gabrielhttps://github.com/gabrielfor his opinion.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gabriel/gh-unit/issues/129#issuecomment-27247878\n.\n. if you give me admin rights to gh-unit org, i can transfer it?\n\n\"Transfer Ownership\nTransfer this repo to another user or to an organization where you have\nadmin rights.\"\nOn Tue, Oct 29, 2013 at 2:02 PM, Joshua Moody notifications@github.comwrote:\n\nre: collaborator - perfect, thanks.\nre: big pull request - i agree 100%. i did not intend that it would be\nmerged. i submitted it to show that i was serious about reviving GHUnit.\ni am travelling the next 2 days so don't be surprised if you don't hear\nfrom me.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gabriel/gh-unit/issues/129#issuecomment-27343146\n.\n. ok transfered\n\nOn Tue, Oct 29, 2013 at 2:23 PM, Felix Schulze notifications@github.comwrote:\n\n@gabriel https://github.com/gabriel Ok now it is deleted and you can\ntransfer it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gabriel/gh-unit/issues/129#issuecomment-27344855\n.\n. I've used circleci and it works great\n\nOn Saturday, November 30, 2013, Felix Schulze wrote:\n\nDoes it work now?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gh-unit/gh-unit/issues/139#issuecomment-29555690\n.\n. Fixed the CI. \n. Most people are using cocoapods... Look at any trending or popular iOS project on github and they have a cocoapod. Also look at how many cocoapod projects exist: https://github.com/CocoaPods/Specs\n\nAnd also cocoacontrols will link to cocoapods.\n. I'm ok with this, it was mostly a convenience and is rarely used.\n. You don't have a \"Test\" target. You'll need to create one. You can install\nthe GHUnit gem and run: ghunit install -n ProjectName\nSee https://github.com/gh-unit/gh-unit/blob/master/README.md\nOn Fri, Mar 14, 2014 at 11:46 AM, lucianboboc notifications@github.comwrote:\n\nWhen i call \"pod install\" i get this error:\n\"Analyzing dependencies\n[!] Unable to find a target named Tests\"\nMy Podfile contains the exact info from here in the README file:\nPodfile\nplatform :ios, '6.0'\ntarget :Tests do\npod 'GHUnit', '~> 0.5.9'\nend\n\nReply to this email directly or view it on GitHubhttps://github.com/gh-unit/gh-unit/issues/155\n.\n. I mean \"Tests\" target.\n\nIf you named it something different like ProjectTests, then the Podfile\nwould be \"target :ProjectTests do\".\nOn Fri, Mar 14, 2014 at 12:37 PM, Gabriel Handford gabrielh@gmail.comwrote:\n\nYou don't have a \"Test\" target. You'll need to create one. You can install\nthe GHUnit gem and run: ghunit install -n ProjectName\nSee https://github.com/gh-unit/gh-unit/blob/master/README.md\nOn Fri, Mar 14, 2014 at 11:46 AM, lucianboboc notifications@github.comwrote:\n\nWhen i call \"pod install\" i get this error:\n\"Analyzing dependencies\n[!] Unable to find a target named Tests\"\nMy Podfile contains the exact info from here in the README file:\nPodfile\nplatform :ios, '6.0'\ntarget :Tests do\npod 'GHUnit', '~> 0.5.9'\nend\n\nReply to this email directly or view it on GitHubhttps://github.com/gh-unit/gh-unit/issues/155\n.\n. I think the command is..\n\n\npod trunk add-owner GHUnit gabrielh@gmail.com\n. Ok I pushed a fix...\nBTW, I created a fork which is a little more lightweight at https://github.com/gabriel/GRUnit \n. and undefined symbols usually means you having included the source .m in your test target (that checkbox in the right panel)\n. re-install the gem... gem install ghunit\nOn Fri, Feb 13, 2015 at 3:09 PM, Georgios Taskos notifications@github.com\nwrote:\n\nHi,\nThanks for the quick answer. GRUnit contains the fix, I will give it a try.\nHmmm, but I have added the .m files to the compile sources.\nCocoapods contain the fix or I have to download source and build the\nframework?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/gh-unit/gh-unit/issues/169#issuecomment-74343413.\n. ok oops try again (after updating gem)\n\nOn Fri, Feb 13, 2015 at 4:04 PM, Georgios Taskos notifications@github.com\nwrote:\n\nNew one, just installed the gem again and run the command to install it in\nthe project.\n/Library/Ruby/Gems/2.0.0/gems/ghunit-1.0.5/bin/ghunit:18:in block in ': undefined methodbanner' for main:Object (NoMethodError)\nfrom /Library/Ruby/Gems/2.0.0/gems/slop-4.0.0/lib/slop/options.rb:33:in\ninitialize'\nfrom /Library/Ruby/Gems/2.0.0/gems/slop-4.0.0/lib/slop.rb:24:innew'\nfrom /Library/Ruby/Gems/2.0.0/gems/slop-4.0.0/lib/slop.rb:24:in parse'\nfrom /Library/Ruby/Gems/2.0.0/gems/ghunit-1.0.5/bin/ghunit:17:in'\nfrom /usr/bin/ghunit:23:in load'\nfrom /usr/bin/ghunit:23:in'\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/gh-unit/gh-unit/issues/169#issuecomment-74349134.\n. yeah... the ghunit command has a sync option to help with this  I think?\n(or i added it to grunit)..\n\nTry doing:\nghunit sync -n ProjectName\nOn Fri, Feb 13, 2015 at 4:39 PM, Georgios Taskos notifications@github.com\nwrote:\n\nOK, it is installed properly and it looks you can run the sample test case.\nNow Trying to bring my project's files to test them I get the undefined\nsymbols again. Should I add my files to the compile sources of the Tests\ntarget?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/gh-unit/gh-unit/issues/169#issuecomment-74351788.\n. \n",
    "wojteeek": "OS X, 10.6.1, XCode 3.2.1. Compiling with 10.5 SDK, Debug, x86_64 (architecture though does not seem to affect this). First test: all (two) tests enabled, second test has only two first tests enabled (out of six). How do I send you a screenshot? :-)\n. ",
    "jasonrm": "I think I've encountered this same issue, where depending on what combination of unit tests I have selected it will hang. When I run all tests it always works, but if I select say only the \"LBAttachmentTests\" group of tests, it will hang and nothing appears to happen.\nIt's not entirely unlikely that it could be a problem with my setup, but I figure it's worth asking about since it's come up before.\nHow to recreate\n    git clone git://github.com/ccgus/letters.git\n    git co 416acf4\n    open letters/letterbox/LetterBox.xcodeproj\nFrom there select \"Tests\" as the Active Target, build, run.\nRunning all tests should work (though testDecodedName is known to fail right now)\nNext, try deselecting and then running all but the \"LBAttachmentTests\" group of tests. It should then \"hang\".\nRestart \"Tests.app\", then deselect any other test from that group and it should run just fine.\nI've recorded a short 3:30 minute video (51.2 MB) showing the above problem, so I hope it helps you know without too much trouble on your part if this is in fact a problem with GHUnit or something on my end that I'm not doing right.\n. ",
    "drekka": "I think all of this has now been done. Great work.\n. Oops, sorry just realised what the filter did :-) Ignore me.\n. Yep, like it much better. The whole app appears to work smoother to. Good work.\n. Yep, tried it here as well. Could get the unit test app p on the iPad simulator, but the moment you touch anything it crashes out. \nI've also been trying to compile  using optimized armv6, armv7 and it's failing the build. I'm guessing that the armv7 is not included in the static lib, but I'm new to this so thats only a guess.\n. Ahhh, just read the stuff on the bug in the 3.0 sdk and the fix being -all_load.\n. Not sure if I've read this correctly, but I've just encountered a problem where a test works fine when run from the suite view, but crashes when run from the test view. The issue is the test includes threading code which assumes that it is not running on the main thread, but GHUnit runs the test on the main thread when the Run button is tapped.\nI think I have the inverse of this bug in that I don't want it run on the main thread.\n. yep that was it. thanks\n. Bump :-) Just downloaded 0.5.6\nAny chance of a fix soon. I use iPad simulators a lot.\n. Hi all, thanks fro the hard work, you have saved me. Subclassing UIApplication and launching with workspace and scheme has worked here.\n. Updating to @jmoody's code, but still using a custom UIApplication seems to be working. Just using the main by itself didn't work. Still testing.\n. I reverted back to the 0.5.6 build of GHUnit and it seems to be working again. Had a quick look at the differences and I could not see anything obvious that would effect this assert. The only thing I can think of as a possibility is a threading issue. But I'm not sure about that.\n. Sorry I have not checked if I'm still getting it. I'm still using 5.6.\n. ",
    "x2on": "So there wasn't a activity in this issue for 4 years im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. So there wasn't a activity in this issue for 4 years im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. I just checked the JUNIT_XML and the correct class names are there. If the problem still exists please reopen this issue.\n. So there wasn't a activity in this issue for 3 years im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. There was no new response since 2 years.\nPlease reopen this issue if its relevant today.\n. So there wasn't a activity in this issue for 3 years im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. That's not a bug in gh-unit, this is the normal behavior of the iOS-Simulator. You must use \"^ + Command-V\".\n. So there wasn't a activity in this issue for 2 years im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. So there wasn't a activity in this issue for 2 years im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. So there wasn't a activity in this issue for 3 years im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. So there wasn't a activity in this issue for 3 years im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. So there wasn't a activity in this issue for 3 years im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. So there wasn't a activity in this issue for 3 years im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. So there wasn't a activity in this issue for 3 years im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. So there wasn't a activity in this issue for 7 months im going to close it.\nThe fix is to use GHAssertEqualStrings instead of GHAssertTrue for strings.\nPlease feel free to reopen this issue if you have still have this problem.\n. For merging:\n- Why is it renamed from iOS to iPhone?\n- Please update the changes for current master.\n- Please remove the mainpage description from this pull request.\n. During no updates to this issue im going to close it.\nPlease feel free to reopen.\n. I think this is already fixed on master.\n. There was no new response since 2 years.\nIf the problem still exists please reopen this issue.\n. Tags are created.\n. The file doesn't exists anymore.\n. The file doesn't exists anymore.\n. So there wasn't a activity in this issue for 2 years im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. Is already be in master\n. @mflint Is this still relevant? If it is, could you please check if your changes work with the current master?\n. The files doesn't exist anymore.\n. Like to merge to https://github.com/gh-unit/gh-unit\nWhy is exit not working for you?\n. During no activity i close this issue now.\nIf this issue still exists - feel free to reopen this issue.\n. - Does removing the 'catch' get into problems?\n- You can't rename the podspec because it's with this name in the CocoaPods/Specs repo already.\n. During no updates to this issue im going to close it.\nPlease feel free to reopen.\n. The image compare algorithm was changed, should fix this issue too.\nIf not please feel free to reopen this issue\n. +1 \nThanks for this, i integrated this and it runs fine.\n. Is this relevant for the current master?\n. Should be fixed in master!\n. I like to merge in https://github.com/gh-unit/gh-unit\nWhy is LICENSE file renamed?\n. During no updates to this issue im going to close it.\nPlease feel free to reopen.\n. I will close this issue. If it's not fixed in the current version please feel free to reopen this issue!\n. Ok i changed it to succeeded.\n. Merged in https://github.com/gh-unit/gh-unit/commit/12a01dd0f1f43974504d6954c4f9329ff72d997b\n. I like to merge to https://github.com/gh-unit/gh-unit\nWhy is /usr/local/ choosed?\nI think its better to copy the header a folder inside the build folder, or?\n. During no updates to this issue im going to close it.\nPlease feel free to reopen.\n. Restored the compatibility - but used the iOS6 implementation if available (it's faster).\n. What is changed if you use dynamically layout?\n. So there wasn't a activity in this issue for 10 months im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. I checked it with 0.5.8 and it works like expected:\n2013-11-03 22:52:46.327 Tests[61267:70b] Issue109Test/testsumAB \u2718 0.00s\n2013-11-03 22:52:47.655 Tests[61267:70b] Re-running: Issue109Test/testsumAB <GHTest: 0x8b47220>\n2013-11-03 22:52:47.656 Tests[61267:70b]  a + B = 5\n2013-11-03 22:52:47.659 Tests[61267:70b] \n    Name: GHTestFailureException\n    File: /Users/x2on/gh-unit/Examples/MyTestable-iOS/Tests/Issue109Test.m\n    Line: 39\n    Reason: '5' should be equal to '6'. sumA:B: should return the sum of a+b\n. So there wasn't a activity in this issue for 9 months im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. Merged in https://github.com/gh-unit/gh-unit/commit/7acdbc932a3fd907c0cf8510f9f03edc59c18952\n. I will close this issue. If it's not fixed in the current version please feel free to reopen this issue!\n. The main reason i think is that the test are faster on Bamboo, then in your simulator.\nOr you could run the test on MainThread instead of async running.\nSo i think its an issue of your test. If you have an example for that please reopen this issue.\n. So there wasn't a activity in this issue for 7 months im going to close it.\nPlease feel free to reopen this issue if you have still have this problem.\n. For Strings you should always use GHAssertEqualStrings as you suggest.\n. Merged in https://github.com/gh-unit/gh-unit/commit/18a7e3b77af7d79795af9372f87b4831066b39bb\n. What does this pull request do? Can you please explain it?\n. You could run the tests with ios-sim, then you will get the locale!\n. Is this issue still relevant?\n. You could run the test with https://github.com/phonegap/ios-sim/\nThen you can better specify the device\n. Is the problem still present?\n. Ok thanks for your answer. Feel free to reopen.\n. I would help here too.\nI just create a \"gh-unit\" organization, because we can handle the administration a lot easier. And you could also transfer the rights to other people.\nhttps://github.com/gh-unit/gh-unit\nWhat do you think? \n. That would be nice. Because at github he doesn't respond to any issue.\n. Yes you could define some admins, that can review pull requests and issues. So it's not depended on one person only.\nLet's see if @johnboiles reaches @gabriel for his opinion.\n. Ok thanks for your response.\nWho want's also be an admin for the gh-unit/gh-unit repo?\nI think it's the best to put a big link to gh-unit/gh-unit in the current Readme.\n. @gabriel It would be nice if you please can transfer the control to gh-unit organisation - so we can close issues and move pull requests to the gh-unit/gh-unit project.\n. I added you as an collaborator. Perhaps we should create separate pull request on gh-unit, because one really big pull request made it hard to test and understand the changes.\nWhat do you think?\n. @gabriel Done.\n. Ok now i found the correct readme from github:\nhttps://help.github.com/articles/how-to-transfer-a-repository\nI must delete the fork and then you can transfer it.\n. @gabriel Ok now it is deleted and you can transfer it.\n. thank you. Works fine with redirects.\n. Release is done.\n. - Migrating to seperate testing project should be done in an other pull request.\n- There are many line break and whitespace changes - please revert them for merging.\n. So i think we should make separate pull requests for this, as discussed in #129 \n. I think pull request are awesome, because with travis ci you can see if the build is still working before merging.\n. I use the public travis ci infrastructure https://travis-ci.org/. You can activate it for free for every open source github project.\nSo im for fork & pull, because of testing with ci.\n. @jmoody please try again.\n. Does it work now?\n. So the build os broken since the last commits:\nPlease use pull requests and don't commit directly on the master branch\n@gabriel please also fix the ci build.\n. I think we only use it to generate the JUnit xml, other parts are already removed.\n. I will close this issue. If it's not fixed in the current version please feel free to reopen this issue!\n. You mean the example projects?\n. Shouldn't __gcov_flush() only called if code coverage is active?\n. Ok could you please add some comments to this ;)\n. Yes please on the source, so why is __gcov_flush() called and why is the empty function defined.\n. Thanks for your changes.\nSome comments:\n- Please remove the NSLog statements.\n- Why is the project file changed? I think there are no needed changes in it, or?\n- Could you please merge the current master in your branch?\n. > > Why is the project file changed? I think there are no needed changes in it, or?\n\nI needed it to use gh-unit as a subproject as opposed to building a fat binary.\n\nBut this isn't needed for that pull request, or?\n. Ok i tried to get MyTestable-iOS in the Example folder running with your changes but i get the following error:\n```\nUndefined symbols for architecture i386:\n  \"_llvm_gcda_emit_arcs\", referenced from:\n      llvmgcov_writeout in GHUnitIOS(GHAsyncTestCase.o)\n      _llvm_gcov_writeout in GHUnitIOS(GHTest+JUnitXML.o)\n      llvmgcov_writeout in GHUnitIOS(GHTest.o)\n      _llvm_gcov_writeout in GHUnitIOS(GHTestGroup+JUnitXML.o)\n      llvmgcov_writeout in GHUnitIOS(GHTestGroup.o)\n      _llvm_gcov_writeout in GHUnitIOS(GHTesting.o)\n      llvmgcov_writeout in GHUnitIOS(GHTestOperation.o)\n      ...\n  \"_llvm_gcda_emit_function\", referenced from:\n      _llvm_gcov_writeout in GHUnitIOS(GHAsyncTestCase.o)\n      llvmgcov_writeout in GHUnitIOS(GHTest+JUnitXML.o)\n      _llvm_gcov_writeout in GHUnitIOS(GHTest.o)\n      llvmgcov_writeout in GHUnitIOS(GHTestGroup+JUnitXML.o)\n      _llvm_gcov_writeout in GHUnitIOS(GHTestGroup.o)\n      llvmgcov_writeout in GHUnitIOS(GHTesting.o)\n      _llvm_gcov_writeout in GHUnitIOS(GHTestOperation.o)\n      ...\n  \"_llvm_gcda_end_file\", referenced from:\n      llvmgcov_writeout in GHUnitIOS(GHAsyncTestCase.o)\n      _llvm_gcov_writeout in GHUnitIOS(GHTest+JUnitXML.o)\n      llvmgcov_writeout in GHUnitIOS(GHTest.o)\n      _llvm_gcov_writeout in GHUnitIOS(GHTestGroup+JUnitXML.o)\n      llvmgcov_writeout in GHUnitIOS(GHTestGroup.o)\n      _llvm_gcov_writeout in GHUnitIOS(GHTesting.o)\n      llvmgcov_writeout in GHUnitIOS(GHTestOperation.o)\n      ...\n  \"_llvm_gcda_start_file\", referenced from:\n      _llvm_gcov_writeout in GHUnitIOS(GHAsyncTestCase.o)\n      llvmgcov_writeout in GHUnitIOS(GHTest+JUnitXML.o)\n      _llvm_gcov_writeout in GHUnitIOS(GHTest.o)\n      llvmgcov_writeout in GHUnitIOS(GHTestGroup+JUnitXML.o)\n      _llvm_gcov_writeout in GHUnitIOS(GHTestGroup.o)\n      llvmgcov_writeout in GHUnitIOS(GHTesting.o)\n      _llvm_gcov_writeout in GHUnitIOS(GHTestOperation.o)\n      ...\n  \"_llvm_gcov_init\", referenced from:\n      llvmgcov_init in GHUnitIOS(GHAsyncTestCase.o)\n      _llvm_gcov_init in GHUnitIOS(GHTest+JUnitXML.o)\n      llvmgcov_init in GHUnitIOS(GHTest.o)\n      _llvm_gcov_init in GHUnitIOS(GHTestGroup+JUnitXML.o)\n      llvmgcov_init in GHUnitIOS(GHTestGroup.o)\n      _llvm_gcov_init in GHUnitIOS(GHTesting.o)\n      ___llvm_gcov_init in GHUnitIOS(GHTestOperation.o)\n      ...\nld: symbol(s) not found for architecture i386\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n BUILD FAILED \nThe following build commands failed:\n    Ld build/Debug-iphonesimulator/Tests.app/Tests normal i386\n(1 failure)\n```\n. And what's about projects, that are using gh-unit but don't wan't to use coverage or couldn't during some reasons?\nIs it possible to set up the code that coverage is not necessary?\n. @gabriel what did you think? \nShould we merge this incompatible change in a new 0.60 version and add the info the the README?\n. Please feel free to make an pull request ;)\n. Fixed by #154 \n. gh-unit is intend for only testing objective-c not c++.\n. Done ;)\n. The build is fixed. It took a while :joy:\n. Thanks a lot - More haste, less speed.\n. No thats not possible with gh-unit\n. It's now fixed\n. Is that a todo?\n. Also an todo?\n. ",
    "epologee": "Did you ever find a solution? It's one and a half year later, no one cared to answer this question and I'm looking for the answer to this very question. Posted it on StackOverflow too because I have the sneaking suspicion no one is looking at the issue list here anymore.... http://stackoverflow.com/questions/7757903/is-it-posibble-to-determine-the-execution-order-of-ghunit-test-methods.\n. I started prefixing my tests like test_A_featureXYZ and then test_B_featureABC to force an ordering. But I do think it's quirky.\n. Did you find a solution to this issue? It seems nobody is really watching the issues on this list anymore...\n. I agree. I'm looking at switching to the regular SenTestingKit, although I totally liked the GHUnit better...\n. Is anyone listening to this issue list? (I'm not complaining, I'm just enquiring) Cheers.\n. For reference's sake I'll post what I think is the solution to this problem here. Too bad this list has fallen to the tumbleweed section of the interweb.\nThe trick seems to be to not assert anything from the callback method, but put the assertions back in the original test. The wait method is actually blocking the thread, which I didn't think of before. If your async callback receives any values, just store them in an ivar or property and then make assertions based on them in your original test method.\nThis takes care of the assertions not causing any crashes.\n```\n- (void)testAsyncOperation\n{\n    [self prepare];\nMyOperation *op = [[[MyOperation alloc] init] autorelease];\n\nop.delegate = self; // delegate method is called on the main thread.\n\n[self.operationQueue addOperation:op];\n\n// The `waitfForStatus:timeout` method will block this thread.\n[self waitForStatus:kGHUnitWaitStatusSuccess timeout:1.0];\n\n// And after the callback finishes, it continues here.\nGHAssertTrue(NO, @\"This triggers a failed test without anything crashing.\");\n\n}\n\n(void)didFinishAsyncOperation\n{\n    [self notify:kGHUnitWaitStatusSuccess forSelector:@selector(testAsyncOperation)];\n}\n```\n. \n",
    "ghost": "No. It's like just you and me have this request. :(\n. I do something similar: each method start with test_[number]_[feature name]. For example: test_01_feature_name, test_02_feature_name etc... I agree it's not very nice.\n. More than a solution it's a beginning of solution:\nWith the preprocessor we can use COUNTER. With the following macro we can automatically generate a method name with a sequence number: \ndefine GHCONCAT(PCOUNTER,PNAME) test_ ## PCOUNTER ## _ ## PNAME\ndefine GHEVAL(PCOUNTER,PNAME)  GHCONCAT(PCOUNTER,PNAME)\ndefine GHTESTMETHOD(PNAME) GHEVAL(COUNTER, PNAME)\n-(void)GHTESTMETHOD(testcase_a)\n-(void)GHTESTMETHOD(testcase_b)\n-(void)GHTESTMETHOD(testcase_c)\n-(void)GHTESTMETHOD(testcase_d)\nwill generate:\n-(void)test_0_testcase_a\n-(void)test_1_testcase_b\n-(void)test_2_testcase_c\n-(void)test_3_testcase_d\nIf you have less than 10 test cases it's ok but over 10 tests cases it will generate something like this:\n-(void)test_0_testcase_a\n-(void)test_1_testcase_b\n-(void)test_10_testcase_k\n-(void)test_11_testcase_l\n-(void)test_2_testcase_c\n-(void)test_3_testcase_d\n-(void)test_4_testcase_e\n-(void)test_5_testcase_f\n-(void)test_6_testcase_g\n-(void)test_7_testcase_h\n-(void)test_8_testcase_i\n-(void)test_9_testcase_j\nI don't know if with the preprocessor we can format COUNTER to generate a string like is \"001\" and not \"1\"\nAny ideas???\n. With the preprocessor I don't find a way to format COUNTER, Instead I wrote this little python script :\n``` python\nfile: GHUnitRenameTest\n!/usr/bin/env python\nimport re, sys, os, string\nimport getopt\nimport traceback\nimport glob\ndef Usage():\n    print(\"\\n\")\n    print(\"Renames tests units that are written for GHUnit:\")\n    print(\"\\n\")\n    print(\" Syntax: GHUnitRenameTest --file  [--overwrite]\")\n    print(\"\\n\")\n    print(\" options:\")\n    print(\"   --help            : this screen\")\n    print(\"   --file  : specify the input file (accept )\")\n    print(\"   --overwrite       : overwrite the existing file otherwise display the file in stdout\")\n    print(\"\\n\")\n    print(\" Example:\")\n    print(\"   GHUnitRenameTest --file UnitTest.m --overwrite\")\n    print(\"\\n\")\ndef main():\n    if len(sys.argv) == 1:\n        Usage()\n        return 0\ntry:\n    lOpts, lArgs = getopt.getopt(sys.argv[1:], \"\", [\"help\", \"overwrite\", \"file=\"])\nexcept getopt.GetoptError:\n    Usage()\n    return 2\n\nif lArgs == 0:\n    Usage()\n\nlInFile = None\nlOutFile = False\n\nfor lCmd,lValue in lOpts:\n    if lCmd == \"--file\":\n        lInFile = string.strip(lValue,'\"\\'')\n    if lCmd == \"--overwrite\":\n        lOutFile = True\n\nlRegEx = re.compile(\"test_[0-9]*_(.*)\")\n\nlContent = []\n\nfor lFile in glob.glob(lInFile):\n    lCpt = 1\n    lHandleFile = open(lFile)\n    for lLine in lHandleFile:\n        lRegResult = lRegEx.search(lLine)\n        if lRegResult is not None:\n            lMethod = lRegResult.group(1)\n            lContent.append(\"-(void)test_%04d_%s\\n\" % (lCpt,lMethod))\n            lCpt+=1\n        else:\n            lContent.append(lLine)\n    lHandleFile.close()\n    if lOutFile:\n        lOutput = open(lFile,\"w\")\n        lOutput.writelines(lContent)\n        lOutput.close()\n    else:\n        sys.stdout.writelines(lContent)\n\nif name == 'main':\n    exitval=100 # exit after an exception\n    try:\n        exitval = main()\n    except KeyboardInterrupt:\n        pass # for debug\n    except:\n        traceback.print_exc()\n    finally:\n        sys.exit(exitval)\n```\n. Yup, just set up our Hudson and noticed this :(\n. Same problem here.  XCode must be doing something different than the script but I tried a bunch of different things and could not figure it out.  I tried setting ARCHS=\"armv6 armv7\" as one of the parameters to xcodebuild, thought that would fix it but it didn't.\n. So far I've relied on abstracting the view creation and wiring logic out of controllers by writing builder objects. That way I can avoid Cocoa-Touch lifecycle event that might be triggered (loadView, for instance). Then, I just write tests to verify if the state (view attributes, actions and delegates) of the returned view tree is as expected. I don't actually verify the view interactions, preferring to Trust, but Verify.\nNote: Recent additions to my test suite have rendered it inoperable from shell; all tests do run in simulator tho. The issue is documented here => http://github.com/gabriel/gh-unit/issues/issue/21/\n. Encountering the same issue with UITextField.\nTestCase\n```\nimport \n@interface ViewTest : GHTestCase {}\n@end\n@implementation ViewTest\n-(BOOL) shouldRunOnMainThread { return YES; }\n-(void) testNewTextFieldCreation {\n    GHAssertNotNil([UITextField new], nil);\n}\n-(void) testAllocInitdTextFieldCreation {\n    GHAssertNotNil([[UITextField alloc] init], nil);\n}\n-(void) testAllocInitdWithFrameTextFieldCreation {\n    GHAssertNotNil([[UITextField alloc] initWithFrame:CGRectMake(0, 0, 200, 20)], nil);\n}\n@end\n```\nCommand\nmake test TEST=ViewTest\nOutput\n```\nRunning: /Users/dexter/project/xcode/GHUnitTrial/build/Debug-iphonesimulator/GHUnitTest.app/GHUnitTest -RegisterForSystemEvents\nGHUnitTest(3612) malloc: protecting edges\nGHUnitTest(3612) malloc: recording malloc stacks to disk using standard recorder\nGHUnitTest(3612) malloc: enabling scribbling to detect mods to free blocks\nGHUnitTest(3612) malloc: stack logs being written into /tmp/stack-logs.3612.GHUnitTest.HmspDt.index\nTest Suite 'ViewTest' started.\nViewTest/testNewTextFieldCreation RunTests.sh: line 28:  3612 Trace/BPT trap          $RUN_CMD\nCommand /bin/sh failed with exit code 133\nCommand /bin/sh failed with exit code 133\n BUILD FAILED \nThe following build commands failed:\nGHUnitTest:\nPhaseScriptExecution \"Run Script\" /Users/dexter/project/xcode/GHUnitTrial/build/GHUnitTrial.build/Debug-iphonesimulator/GHUnitTest.build/Script-3497BE94122696AE00AF6F9F.sh\n(1 failure)\n```\n. Couldn't we fake one? :P\n. Hello,\nHow are you able to run the tests from CLI with the simulator opened ?\nI always get a \n\"Couldn't register me.rel.Tests with the bootstrap server. Error: unknown error code.\"\nThe option I'm picking is to disable the SSL certificate chain verification for the unit tests. Any other idea ?\nHere is an Example of a test working well in the simulator, and crashing in CLI\nimport \n@interface Example2 : GHAsyncTestCase\n@end\n@implementation Example2\n- (void)testURLConnection {\n// Call prepare to setup the asynchronous action.\n  // This helps in cases where the action is synchronous and the\n  // action occurs before the wait is actually called.\n  [self prepare];\nNSURLRequest request = [NSURLRequest requestWithURL:[NSURL URLWithString:@\"https://encrypted.google.com/\"]];\n  NSURLConnection connection = [[NSURLConnection alloc] initWithRequest:request delegate:self startImmediately:YES];\n// Wait until notify called for timeout (seconds); If notify is not called with kGHUnitWaitStatusSuccess then\n  // we will throw an error.\n  [self waitForStatus:kGHUnitWaitStatusSuccess timeout:10.0];\n[connection release];\n  }\n- (void)connectionDidFinishLoading:(NSURLConnection )connection {\n  // Notify of success, specifying the method where wait is called.\n  // This prevents stray notifies from affecting other tests.\n  [self notify:kGHUnitWaitStatusSuccess forSelector:@selector(testURLConnection)];\n  }\n- (void)connection:(NSURLConnection )connection didFailWithError:(NSError )error {\n  // Notify of connection failure\n  [self notify:kGHUnitWaitStatusFailure forSelector:@selector(testURLConnection)];\n  }\n- (void)connection:(NSURLConnection )connection didReceiveData:(NSData )data {\n  GHTestLog(@\"Connection didReceiveData\");\n  } \n- (BOOL)connection:(NSURLConnection )connection canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)protectionSpace \n  { \n  return [protectionSpace.authenticationMethod isEqualToString:NSURLAuthenticationMethodServerTrust];\n  } \n// Necessary to handle the HTTPS authentication certificate\n-(void)connection:(NSURLConnection )connection didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge )challenge\n{\n    if ([challenge.protectionSpace.authenticationMethod isEqualToString:NSURLAuthenticationMethodServerTrust]){\n        [challenge.sender useCredential:[NSURLCredential credentialForTrust:challenge.protectionSpace.serverTrust] forAuthenticationChallenge:challenge];\n    } else {\n        [challenge.sender continueWithoutCredentialForAuthenticationChallenge:challenge];\n    }\n}\n. Workaround :\nUse ASIHTTPRequest and set validate secure certificate to NO\n- (void) setValidatesSecureCertificate:(BOOL)bool;\nMaybe you can surround this between\nifdef GHUNIT_CLI\nendif\nto make sure it's secure when not in unit test cli.\n. this is money. Thanks jmoody!\n. Hmmm... I'm getting exactly the same thing.  Tried using the workspace but I get the same output:\nGHUNIT_CLI=1 xcodebuild -workspace VoiceRecognizer.xcworkspace -scheme VoiceRecognizerTests -configuration Debug -sdk iphonesimulator build\n```\n=== BUILD NATIVE TARGET VoiceRecognizerTests OF PROJECT VoiceRecognizer WITH CONFIGURATION Debug ===\nCheck dependencies\nPhaseScriptExecution \"Run Script\" /Users/kevan/Library/Developer/Xcode/DerivedData/VoiceRecognizer-gjqdkayvfemoducfsjlokmazgxgk/Build/Intermediates/VoiceRecognizer.build/Debug-iphonesimulator/VoiceRecognizerTests.build/Script-0E64583716001423002CE6CB.sh\n    cd /Users/kevan/github/ios-sdks/VoiceRecognizer\n    /bin/sh -c /Users/kevan/Library/Developer/Xcode/DerivedData/VoiceRecognizer-gjqdkayvfemoducfsjlokmazgxgk/Build/Intermediates/VoiceRecognizer.build/Debug-iphonesimulator/VoiceRecognizerTests.build/Script-0E64583716001423002CE6CB.sh\nRunning: \"/Users/kevan/Library/Developer/Xcode/DerivedData/VoiceRecognizer-gjqdkayvfemoducfsjlokmazgxgk/Build/Products/Debug-iphonesimulator/VoiceRecognizerTests.app/VoiceRecognizerTests\" -RegisterForSystemEvents\n2012-09-12 14:07:43.300 VoiceRecognizerTests[50929:707] Warning: CFFIXED_USER_HOME is not set!  It should be set to the simulated home directory.\n2012-09-12 14:07:43.307 VoiceRecognizerTests[50929:707] Unknown Device Type. Using UIUserInterfaceIdiomPhone based on screen size\nTerminating since there is no workspace.\n```\n* BUILD SUCCEEDED *\nAny pointers here?\n. Hi Gabriel - \nIn my case I actually want to use the beta :-)  I thought based on your previous comments on this issue that it would work.  Is the beta not supported by GHUnit?\n. @superrunt19: I believe I now want to have your babies.  Awesome!\n. These tests run on the main thread, so you can just use dispatch_get_main_queue() for the dispatch_get_current_queue() deprecations:\nGHTestUtilsTest\nGHAsyncExceptionTest\nFor GHMockNSURLConnection, you could get creative with CFRunLoopPerformBlock, CFRunLoopGetCurrent(), and performSelector:withObject:afterDelay: (performSelector calls a method after a delay which calls your delegate method on the current runloop). It wouldn't be pretty, but it's an option.\n. ",
    "fusenigk": "for me it crashes too.\n. ",
    "Ian1971": "I have the same issue. the current v4 version does not work with the final 4.0 SDK\n. btw I've created a hack fork that at least gets it running one test at a time. No time to figure out properly\n. ",
    "evanlooij": "I struggled with this too, until I changed the Base SDK on the Test target from Device to Simulator. My tests run just fine since and even break into the debugger on breakpoints.\n. ",
    "kwongatsyk": "Same here for Jenkins CI.\n. ",
    "chayang": "Anyone know that?\nThank you very much.\n. ",
    "raid5": "+1 I'm getting \"Bad CPU type in executable\" also when trying to run tests on the command line for an ipad project.\n. ",
    "alejandro-madpixel": "Same.\n. ",
    "ankitthakur": "+1, Still getting the same issue:\n./RunTests.sh: line 37:...\nBad CPU type in executable\nCommand /bin/sh failed with exit code 126\n. ",
    "DenTelezhkin": "Can this be reopened?\nIt seems that issue still remains. I'm also getting \"Bad CPU type in executable\" error. I tried replacing that line with \nRUN_CMD=\"\\\"$TEST_TARGET_EXECUTABLE_PATH\\\" -RegisterForSystemEvents || continue\"\nBut now tests don't seem to run at all. \nI'm using cocoapods in my project, and Jenkins as a CI server. I'm running following command:\nxcodebuild -scheme GHUnitTests -workspace <MyWorkspace>.xcworkspace -configuration Debug build GHUNIT_CLI=1 GHUNIT_AUTORUN=1 GHUNIT_AUTOEXIT=1 WRITE_JUNIT_XML=YES JUNIT_XML_DIR=test-reports\n. ",
    "takachan114": "Same issue.\n. I faced a same issue.\nDid you find a way to solve it?\n. ",
    "mhenry1384": "It would still be nice to have this, but I figured out a hack to do it using method_exchangeImplementations().  Just put this in your TestMain.m\n@implementation GHTestViewController (MyGHTestViewControllerOverrider)\n- (IBAction)runTestsOverride:(id)sender {\n  // \n  // This calls through to the original (because we exchanged the implementations).\n  [self runTestsOverride: sender];\n  }\n  @end\nvoid MyOverrideRunTests() {\n    Method origMethod = class_getInstanceMethod([GHTestViewController class], @selector(runTests:));\n    Method newMethod = class_getInstanceMethod([GHTestViewController class], @selector(runTestsOverride:));\n    method_exchangeImplementations(origMethod, newMethod);\n}\nThen call MyOverrideRunTests() in main().\n. see \nhttp://groups.google.com/group/ghunit/browse_thread/thread/725533212468dcb8/785998acce620b3d#785998acce620b3d\n. Hmm.  This might have been user error.  I was running an older (3.2) SDK and an older simulator. \nHowever, when I try the 0.4.27 again, I still have problems.  Looks like it's not finding the test stuff.\n\"OBJC_METACLASS$GHTestCase\", referenced from:\n      _OBJC_METACLASS$GoogleDocsTests in GoogleDocsTests.o\n  \"_OBJC_CLASS$GHTestRunner\", referenced from:\n      objc-class-ref-to-GHTestRunner in GHUnitIOSTestMain.o\n  \"_OBJC_CLASS$GHTestCase\", referenced from:\n      _OBJC_CLASS$_GoogleDocsTests in GoogleDocsTests.o\nIf I remove the 0.4.27 Framework and go back to 0.4.26, everything works.  \nIf you are curious, I could put up a link to a zip of my source.\nI'm using XCode 3.2.5 64-bit.\n. I downloaded the source of the latest.  I was able to build it after switching it to the iOS 4.2 SDK (I don't have 4.1 installed).  I tried to use it in my project, same linker errors.  I then rolled back the source to the last checkin on 2010-09-01 (again I switched the SDK to 4.2).  I built it and was able to use it in my project.\nMaybe this is some kind of user error, I'm no Mac development expert, but 0.4.26 works and 0.4.27 does not.  \nAlso, I think having the iOS framework having the same name as the desktop framework, as it is in the latest build,  is very confusing.  I need both on my machine and I'd like to keep them both in the same folder (/Library/Frameworks).\nAnyway, I'm sure I'll personally be fine sticking with 0.4.26 for now.\n. Here is a very simple project, first linked with 0.4.26 and then attempting to link with 0.4.27.  The 0.4.27 version won't link.\nhttp://www.fooslandvideos.com/UsingGHUnitIOS-0.4.26.zip\nhttp://www.fooslandvideos.com/UsingGHUnitIOS-0.4.27.zip\nI'm using XCode 3.2.5 64-bit with iOS SDK 4.2\n. ",
    "levous": "Also, the description on failure is not correct.\nincorrect message:\nReason: 'I am some really important, super secret stuff' should be equal to 'I am some really important, super secret stuff'.\u00a0\nshould be:\nReason: 'I am some really important, super secret stuff' should NOT be equal to 'I am some really important, super secret stuff'.\u00a0\n. ",
    "jacobsa": "It turns out this is what happens when there's no proper UIApplication around; UIKit just dies like this. I guess this is expected then.\n. Thanks Jim, that's really interesting. :-)\n. ",
    "jkubicek": "I was curious too why newlines matter. Turns out it's a holdover from ancient compilers.\nhttp://gcc.gnu.org/ml/gcc/2001-07/msg01120.html\n. ",
    "georgejcook": "though after hours of playing worked out that the testing target basSDK MUST be device.. apologies if this is in the docs.. I might've missed it.\n. ",
    "diederich": "gah, I'm seeing a similar issue with SSL connections. All my https connection can't be validated and fail with \"The certificate for this server is invalid. You might be connecting to a server that is pretending to be...\"\nLaunching the simulator and leaving it open (without any App launched) fixes the issue and the https connectiona work again.\n. ",
    "pmilosev": "Hi,\nIt has been some time since I opened this issue.\nI don't remember the exact error message.\nBut, what was happening, was that I was getting some error due to a missing\nkeychain.\nIf I just started the simulator, and ran the tests from CLI everything was\nOK.\nI don't know if this is still an issue on the new xcode 4.\nI don't have access to my workspace ATM, to provide you with more details.\nRegards\nOn Jul 29, 2011 4:43 PM, \"FlyEmakina\" \nreply@reply.github.com\nwrote:\n\nHello,\nHow are you able to run the tests from CLI with the simulator opened ?\nI always get a\n\"Couldn't register me.rel.Tests with the bootstrap server. Error: unknown\nerror code.\"\nThe option I'm picking is to disable the SSL certificate chain\nverification for the unit tests. Any other idea ?\nHere is an Example of a test working well in the simulator, and crashing\nin CLI\nimport \n@interface Example2 : GHAsyncTestCase\n@end\n@implementation Example2\n- (void)testURLConnection {\n// Call prepare to setup the asynchronous action.\n// This helps in cases where the action is synchronous and the\n// action occurs before the wait is actually called.\n[self prepare];\nNSURLRequest request = [NSURLRequest requestWithURL:[NSURL\nURLWithString:@\"https://encrypted.google.com/\"]];\nNSURLConnection connection = [[NSURLConnection alloc]\ninitWithRequest:request delegate:self startImmediately:YES];\n// Wait until notify called for timeout (seconds); If notify is not called\nwith kGHUnitWaitStatusSuccess then\n// we will throw an error.\n[self waitForStatus:kGHUnitWaitStatusSuccess timeout:10.0];\n[connection release];\n}\n- (void)connectionDidFinishLoading:(NSURLConnection )connection {\n  // Notify of success, specifying the method where wait is called.\n  // This prevents stray notifies from affecting other tests.\n  [self notify:kGHUnitWaitStatusSuccess forSelector:@selector\n  (testURLConnection)];\n  }\n- (void)connection:(NSURLConnection )connection didFailWithError:(NSError\n  )error {\n  // Notify of connection failure\n  [self notify:kGHUnitWaitStatusFailure forSelector:@selector\n  (testURLConnection)];\n  }\n- (void)connection:(NSURLConnection )connection didReceiveData:(NSData\n  )data {\n  GHTestLog(@\"Connection didReceiveData\");\n  }\n- (BOOL)connection:(NSURLConnection )connection\n  canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace\n  *)protectionSpace\n  {\n  return [protectionSpace.authenticationMethod\n  isEqualToString:NSURLAuthenticationMethodServerTrust];\n  }\n// Necessary to handle the HTTPS authentication certificate\n-(void)connection:(NSURLConnection )connection\ndidReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge )challenge\n{\nif ([challenge.protectionSpace.authenticationMethod\nisEqualToString:NSURLAuthenticationMethodServerTrust]){\n[challenge.sender useCredential:[NSURLCredential\ncredentialForTrust:challenge.protectionSpace.serverTrust]\nforAuthenticationChallenge:challenge];\n} else {\n[challenge.sender\ncontinueWithoutCredentialForAuthenticationChallenge:challenge];\n}\n}\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/gabriel/gh-unit/issues/26#issuecomment-1681718\n. The issue is still present with the latest Apple Xcode/SDK and the old GHUnit version.\nSo at least it is not resolved by updating the platform.\n. \n",
    "ilya": "Has anyone had any luck with this lately?\n. Does anyone have a good workaround?\n. Sure but it also causes problems in cases that are harder to just patch up like that. For instance, you can't access the keychain.\n. ",
    "hborders": "I fixed this.  See my pull request.\nhttps://github.com/gabriel/gh-unit/pull/83\n. Any word on this? It should be a very harmless change, and it will allow users to more easily stay up to date by adding the project as a submodule.\n. Sorry, I missed https://github.com/gh-unit/gh-unit/pull/90#issuecomment-27338078. /usr/local/ is relative the the BUILT_PRODUCTS_DIR. It is the default Xcode uses, so that's why I chose it. I could change it to a bare folder.\n. I'm using adriancowham's solution, and it seems to work for me.\n. ",
    "ciukes": "Solution: Install BWToolkit http://www.brandonwalkin.com/bwtoolkit/\n. ",
    "dodikk": "Fixed. Please consider applying these patches.\n=                END OF COMMENT                                                                    =\nFrom e3397492ce61f012f75da4e0f7125b097b5de893 Mon Sep 17 00:00:00 2001\nFrom: oleksandr dodatko oleksandr_dodatko@epam.com\nDate: Mon, 11 Apr 2011 14:33:38 +0300\nSubject: [PATCH 1/2] Added GHUNIT_AUTOEXIT support for iphone.\n https://github.com/gabriel/gh-unit/issues/30\n\nClasses-IPhone/GHUnitIPhoneViewController.m |    8 ++++++++\n 1 files changed, 8 insertions(+), 0 deletions(-)\ndiff --git a/Classes-IPhone/GHUnitIPhoneViewController.m b/Classes-IPhone/GHUnitIPhoneViewController.m\nindex 4241125..3b88716 100644\n--- a/Classes-IPhone/GHUnitIPhoneViewController.m\n+++ b/Classes-IPhone/GHUnitIPhoneViewController.m\n@@ -274,6 +274,14 @@ NSString *const GHUnitFilterKey = @\"Filter\";\n// Save defaults after test run\n   [self saveDefaults];\n- \n-  if (getenv(\"GHUNIT_AUTOEXIT\")) \n-  {\n-     NSException* exception_ = [ NSException exceptionWithName: @\"autoexit exception\" \n-                                                        reason: @\"tests launched successfully\"\n-                                                      userInfo: nil ];\n-     @throw exception_;\n-  }\n  }\n## #pragma mark Delegates (UISearchBar)\n# 1.7.3.4\n# =                END OF PATCH FILE                                                                 =\nFrom ee4662c850f19e0198de509b0cec1b302cc7e4e5 Mon Sep 17 00:00:00 2001\n  From: oleksandr dodatko oleksandr_dodatko@epam.com\n  Date: Mon, 11 Apr 2011 14:34:09 +0300\n  Subject: [PATCH 2/2] Added forward declaration to fix build errors in client code.\n\n.../GHTest/NSException+GHTestFailureExceptions.h   |    2 ++\n 1 files changed, 2 insertions(+), 0 deletions(-)\ndiff --git a/Classes/GHTest/NSException+GHTestFailureExceptions.h b/Classes/GHTest/NSException+GHTestFailureExceptions.h\nindex 214bcc5..c196804 100644\n--- a/Classes/GHTest/NSException+GHTestFailureExceptions.h\n+++ b/Classes/GHTest/NSException+GHTestFailureExceptions.h\n@@ -47,6 +47,8 @@\n //  the License.\n //\n+@class NSString;\n+\n extern NSString const GHTestFilenameKey;\n extern NSString const GHTestLineNumberKey;\nextern NSString *const GHTestFailureException;\n1.7.3.4\n. The exit() based approach does not seem to work.\nPlease consider using exceptions instead.\nA version with the fix of this issue can be found here :\ngit://github.com/dodikk/gh-unit.git\nhttps://github.com/dodikk/gh-unit/blob/master/Classes-IPhone/GHUnitIPhoneViewController.m\n. The problem arises when you attempt using literal strings in the GHAssertTrue() statement.\nFor example, \n\nGHAssertTrue( [ @\"a\" isEqualToString: @\"b\" ], @\"strings example\" );\n\nThe given macro just wraps the code into single quotes as is and does not make any escaping. That's why an invalid XML attribute can not be parsed by Jenkins\n\nfailure=\" '[ @\"a\" isEqualToString: @\"b\" ]' should be TRUE. \"\n\nThe easiest fix is using correct assertions for strings.\n\nGHAssertEqualStrings( @\"a\", @\"b\", @\"strings example\" );\n. Ok. Test results are now in the application's \"tmp\" directory.\n\n/Users/dodikk/Library/Application Support/iPhone Simulator/6.0/Applications/D26809C7-9DC5-4DF8-B0AE-BD10BE2CE491/tmp/test-results\n. When disabling GHUNIT_AUTOEXIT flag and closing the simulator using the \"home button\" coverage files are generated just fine\n. The patch uses a UIApplicationDidEnterBackgroundNotification notification. https://github.com/leroymattingly/XCode5gcovPatch/blob/master/UIApplication%2BGCovFlush.m\nEither the notification should be fired or __gcov_flush() should be invoked on GHUNIT_AUTOEXIT condition.\nImplementation approach : https://github.com/pivotal/cedar/search?q=gcov&ref=cmdform\n. Fixed in #149 \nPlease merge\n. When it's not active the stub below will be called instead of \"actual\" flush :\nvoid __attribute__((weak)) __gcov_flush(void) {\n}\n. > Ok could you please add some comments to this ;)\nShould I add those to the source code?\n. The fix works fine while I'm building GHUnit from source.\nWhen it comes to a framework, it does not work as expected for some reason. I'm investigating it at the moment...\nIt's ok. Just my \"Framework Search Path\" was dirty.\n. > Why is the project file changed? I think there are no needed changes in it, or?\nI needed it to use gh-unit as a subproject as opposed to building a fat binary.\n. > But this isn't needed for that pull request, or?\nI'd like to leave the target out there. It's not convenient (IMHO) to debug the framework having separate targets for the device and the simulator.\nYou cannot just discard the changes of *.pbxproj since I have modified some project settings\nGCC_GENERATE_TEST_COVERAGE_FILES = YES\nGCC_INSTRUMENT_PROGRAM_FLOW_ARCS = YES\nHowever, you can remove my target since I have not touched either your build scripts or your targets.\n. Setting the mentioned flags in the example project should fix the issue\nGCC_GENERATE_TEST_COVERAGE_FILES = YES\nGCC_INSTRUMENT_PROGRAM_FLOW_ARCS = YES\nI think it makes sense enabling coverage flags for all configurations of the test project. Isn't it?\nSo I did not bother building a framework that has disabled coverage capabilities.\nSorry for not taking care about the example. Just was not sure what should be checked...\nP.S. Such errors are one of the reasons I had created another target we used to discuss.\n. The coverage reports can be silently generated and then just be ignored by those gh-unit users.\nIn this case they should add the flags above to their test projects. I think, it should not be that hard adding these instructions to the readme or FAQ. \nAlternatively, a separate backward compatible binary could be built. It is better for the users but it's some extra work for the maintainer.\n. I can fix those related to type mismatch.\nHowever, removing dispatch_get_current_queue() usage may be too complicated for me since I may not understand the ideas behind their use in the GHUnit framework's core. \n. No, it's not.\nThis is the comment you have requested before.\n\nOk could you please add some comments to this ;)\n. I think it's my nickname makes you think this is a todo.\nIn my team the person who comments some piece of code has to sign it by leave his nickname.\nSorry for this kind of confusion.\n\nFYI : i have used the approach below to add coverage files generation to gh-unit\nhttps://github.com/leroymattingly/XCode5gcovPatch/\n. ",
    "PaulSolt": "I don't see this as an issue. The target needs to have a reference to the source file that you're testing against. It's not duplicating code, rather allowing Xcode to find the files to compile and link against. \nIf you want to make it easier to keep both the application and the test target in sync, create a static library with all your \"api\" source code. Add that library to the application target and the test target. Any new source file that isn't application specific can be added to the static library. When you go to write the test, all the source files will be available to link against in the test target.\nThe big use case for GHUnit is when you're creating new functionality, it allows you to create \"mini-main\" programs that can test discrete functions. When you're finished adding new functionality switch back to the main application and verify the code integrated correctly.\nSee my discussion on the unit testing frameworks: http://paulsolt.com/2010/11/iphone-unit-testing-explained-part-1/\n. Project configuration is something you'll have to deal with all the time with modern IDE's. I find the Xcode project setup for OCUnit to be a huge pain with many points of failure. When I followed Apple's approach I had 3 different targets for my unit tests. On top of that, you'll need to work magic to get a test target that will let you debug a unit test.\nIn GHUnit you get debugging for free, one test target and you're good to go. In my opinion the best solution would be to make a common target and add resources that your application and test target require. Make both the application and test targets depend on the common target and you'll only have one place to add common code.\n. ",
    "tonyarnold": "It's duplicating administration of the test target and the app target. I'm not proposing that the existing way of doing things is taken away, but given OCUnit/Xcode's method of loading up the app so that the targets can get at the symbols it seems possible to make this whole process easier for simple use-cases.\n. ",
    "joshuatbrown": "I'm having a similar problem - I don't see a GHUnit.framework anywhere, which, according to the documentation, is what I'm supposed to add to my project.\n. ",
    "zahz": "We have this problem too with QuickBuild instead of Hudson!\n. ",
    "blackgold9": "Looks like this will allow me to run specific groups of cases (unit/integration/etc).\nIf so, you're my new best friend.\n. I'm also seeing this. On success, i get pretty reports. But when i need em, blank :)\n. ",
    "seqoy": "Yes, you can do that too. What it does Is make the process of Group the tests a little less automatic.\nSo you can comment the groups that you don't want to run. Or even create your own logic.\n. ",
    "mflint": "I'm seeing a similar thing too, with the MacOS test runner. I'm using the GHUnit-0.4.30.zip download.\nThis happens only when I run a single test (if I run the whole suite, then all tests pass)\nStrangely, if I add a new dummy test method to the same class:\n-(void)testMeep {}\n... and then run the problem test (only the problem test - not the new testMeep) then it's OK.\nWhy would adding a dummy test method cause a test to start working? And why would removing that dummy method cause another test to freeze?\n. See issue 64 for a patch which works for me.\nhttps://github.com/gabriel/gh-unit/pull/64\n. Erm, wow. I've read the issue a couple of times and don't understand it at all.\nSo I guess it's not a problem for me now. (I'm currently not using gh-unit)\n. ",
    "CMoebius": "I gave up and switched to Google Toolbox for Mac.  It doesn't have async tests, but it has a lot of support from others using it.  I rolled my own wait loops using RunLoop methods.  Not the best solution, but at least I don't have to wait for help that's never coming.\n. You may want to take a look at GTM.  It offers come nice extensions to Objective-C.  Good luck!\n. ",
    "vincilbishop": "Has anyone revisited this, I am having the same problem. It is like the other thread is never spawned. Gabriel help!!!!\n. ",
    "Daij-Djan": "yay works -- thank you :)\n. sounds awesome, I will look at it tomorrow/friday and will let you know by then.. maybe it is something trivial I can actually do :D\n. the problem is actually RunTests.sh.\nI found that in the temp dir, the xml is indeed there\nbut when the RUN_CCMD quits with a error!=0, the shell script is stopped dead and never copies the xml to $BUILD\n. add \"|| continue\" to the run command:\nRUN_CMD=\"\\\"$TEST_TARGET_EXECUTABLE_PATH\\\" -RegisterForSystemEvents || continue\"\nworks fine for me\n. ",
    "precipice": "I was one of the people who worked on the original junit output; I can take a look at this next week if you want, @gabriel.\n. ",
    "jonnolen": "I don't think this is closed.  The behavior i'm seeing is that the JUNIT_XML_DIR value is ignored.  When you run the build test results are copied to the same directory regardless.  I put echo statements in the RunTests.sh script to see what directories where getting read from/copied to.  here's what I found:\nOriginal test results are written to a temp directory that is effectively $DARWIN_USER_TEMP_DIR\n/var/folders/kl/wtpqswdn3_n3250zq8bkrkpm0000kr/T/test-results\nthen they are copied to the $BUILD_DIR (which in my case is the same as the SYMROOT passed in on the command line.\n/var/jenkins/.jenkins/jobs/Passageways-CI-3/workspace/test.sym\nThe RunTests.sh script doesn't honor the JUNIT_XML_DIR at all.\n. ",
    "Pretz": "This should fix #54 and might fix #42 (although I haven't tested OCUnit tests with it)\n. ",
    "johnboiles": "Ah so with this change the actual test class will show on the test result page instead of GHTest?\n. good call on not using new.\nLooks like MyCompanyName is only in the example (Examples/MyTestable-iOS). Still, I'll get rid of that along with the crufty stuff possibly tomorrow.\n. Aditya,\nWhat version of XCode are you running?\nJohn\nOn Dec 11, 2011, at 3:56 AM, Aditya Herlambangreply@reply.github.com wrote:\n\nI went through the steps to do a Makefile and integrating it with Jenkins and when I run the following command:\nGHUNIT_CLI=1 xcodebuild -target Tests -configuration Debug -sdk iphonesimulator build\nI am getting the following error:\nBuild settings from command line:\n   SDKROOT = iphonesimulator5.0\n=== BUILD NATIVE TARGET Tests OF PROJECT TDD-With-Jenkins WITH CONFIGURATION Debug ===\nCheck dependencies\n2011-12-11 04:42:22.834 xcodebuild[9155:4203] error: Error Domain=NSPOSIXErrorDomain Code=2 \"Non-zero exit code 127 returned from shell command: /Developer/Library/Xcode/PrivatePlugIns/Xcode3Core.ideplugin/Contents/Frameworks/DevToolsCore.framework/Resources/gcc-4.2 -v -E -dM -arch i386 -isysroot /Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator5.0.sdk -x objective-c -c /dev/null 2>&1\" UserInfo=0x4001a61a0 {NSLocalizedDescription=Non-zero exit code 127 returned from shell command: /Developer/Library/Xcode/PrivatePlugIns/Xcode3Core.ideplugin/Contents/Frameworks/DevToolsCore.framework/Resources/gcc-4.2 -v -E -dM -arch i386 -isysroot /Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator5.0.sdk -x objective-c -c /dev/null 2>&1, NSLocalizedFailureReason=No such file or directory}\n2011-12-11 04:42:22.835 xcodebuild[9155:4203] Warning:  Couldn't discover the 'gcc-4.2' compiler's built-in search paths and preprocessor definitions for language dialect 'objective-c'.\nCompiler: /Developer/Library/Xcode/PrivatePlugIns/Xcode3Core.ideplugin/Contents/Frameworks/DevToolsCore.framework/Resources/gcc-4.2\nReason:   /Developer/Library/Xcode/PrivatePlugIns/Xcode3Core.ideplugin/Contents/Frameworks/DevToolsCore.framework/Resources/gcc-4.2 -v -E -dM -arch i386 -isysroot /Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator5.0.sdk -x objective-c -c /dev/null 2>&1\n2011-12-11 04:42:22.895 xcodebuild[9155:4203] error: Error Domain=NSPOSIXErrorDomain Code=2 \"Non-zero exit code 127 returned from shell command: /Developer/Library/Xcode/PrivatePlugIns/Xcode3Core.ideplugin/Contents/Frameworks/DevToolsCore.framework/Resources/gcc-4.2 -v -E -dM -arch i386 -isysroot /Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator5.0.sdk -x c -c /dev/null 2>&1\" UserInfo=0x4013cbb80 {NSLocalizedDescription=Non-zero exit code 127 returned from shell command: /Developer/Library/Xcode/PrivatePlugIns/Xcode3Core.ideplugin/Contents/Frameworks/DevToolsCore.framework/Resources/gcc-4.2 -v -E -dM -arch i386 -isysroot /Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator5.0.sdk -x c -c /dev/null 2>&1, NSLocalizedFailureReason=No such file or directory}\n2011-12-11 04:42:22.900 xcodebuild[9155:4203] Warning:  Couldn't discover the 'gcc-4.2' compiler's built-in search paths and preprocessor definitions for language dialect 'c'.\nCompiler: /Developer/Library/Xcode/PrivatePlugIns/Xcode3Core.ideplugin/Contents/Frameworks/DevToolsCore.framework/Resources/gcc-4.2\nReason:   /Developer/Library/Xcode/PrivatePlugIns/Xcode3Core.ideplugin/Contents/Frameworks/DevToolsCore.framework/Resources/gcc-4.2 -v -E -dM -arch i386 -isysroot /Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator5.0.sdk -x c -c /dev/null 2>&1\nProcessPCH /var/folders/9x/c4tyvsn97zsf2x37tchzjzr80000gn/C/com.apple.Xcode.501/SharedPrecompiledHeaders/Tests-Prefix-afiajwqngpoxkwcuzefjnyypoqmc/Tests-Prefix.pch.pth Tests/Tests-Prefix.pch normal i386 objective-c com.apple.compilers.llvm.clang.1_0.compiler\n   cd /Developer/TDD-With-Jenkins\n   setenv LANG en_US.US-ASCII\n   setenv PATH \"/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin:/Developer/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin:/Users/aditya15417/.ec2/bin:/Users/aditya15417/.rvm/bin\"\n   /Developer/Library/Xcode/PrivatePlugIns/Xcode3Core.ideplugin/Contents/Frameworks/DevToolsCore.framework/Resources/gcc-4.2 -x objective-c-header -arch i386 -fmessage-length=0 -fdiagnostics-print-source-range-info -fdiagnostics-show-category=id -fdiagnostics-parseable-fixits -std=gnu99 -Wno-trigraphs -fpascal-strings -O0 -Wmissing-prototypes -Wreturn-type -Wparentheses -Wswitch -Wno-unused-parameter -Wunused-variable -Wunused-value -Wno-shorten-64-to-32 -DDEBUG=1 -isysroot /Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator5.0.sdk -fexceptions -fasm-blocks -mmacosx-version-min=10.6 -gdwarf-2 -Wno-sign-conversion -fobjc-abi-version=2 -fobjc-legacy-dispatch \"-DIBOutlet=attribute((iboutlet))\" \"-DIBOutletCollection(ClassName)=attribute((iboutletcollection(ClassName)))\" \"-DIBAction=void)attribute((ibaction)\" -D__IPHONE_OS_VERSION_MIN_REQUIRED=50000 -iquote /Developer/TDD-With-Jenkins/build/TDD-With-Jenkins.build/Debug-iphonesimulator/Tests.bu\nild/Tests-generated-files.hmap -I/Developer/TDD-With-Jenkins/build/TDD-With-Jenkins.build/Debug-iphonesimulator/Tests.build/Tests-own-target-headers.hmap -I/Developer/TDD-With-Jenkins/build/TDD-With-Jenkins.build/Debug-iphonesimulator/Tests.build/Tests-all-target-headers.hmap -iquote /Developer/TDD-With-Jenkins/build/TDD-With-Jenkins.build/Debug-iphonesimulator/Tests.build/Tests-project-headers.hmap -I/Developer/TDD-With-Jenkins/build/Debug-iphonesimulator/include -I/Developer/TDD-With-Jenkins/build/TDD-With-Jenkins.build/Debug-iphonesimulator/Tests.build/DerivedSources/i386 -I/Developer/TDD-With-Jenkins/build/TDD-With-Jenkins.build/Debug-iphonesimulator/Tests.build/DerivedSources -F/Developer/TDD-With-Jenkins/build/Debug-iphonesimulator -F/Developer/TDD-With-Jenkins -c /Developer/TDD-With-Jenkins/Tests/Tests-Prefix.pch -o /var/folders/9x/c4tyvsn97zsf2x37tchzjzr80000gn/C/com.apple.Xcode.501/SharedPrecompiledHeaders/Tests-Prefix-afiajwqngpoxkwcuzefjnyypoqmc/Tests-Prefix.pch.p\nth -MMD -MT dependencies -MF /var/folders/9x/c4tyvsn97zsf2x37tchzjzr80000gn/C/com.apple.Xcode.501/SharedPrecompiledHeaders/Tests-Prefix-afiajwqngpoxkwcuzefjnyypoqmc/Tests-Prefix.pch.d\n2011-12-11 04:42:22.944 xcodebuild[9155:3903]  DVTAssertions: Warning in /SourceCache/IDEXcode3ProjectSupport/IDEXcode3ProjectSupport-934/Xcode3Sources/XcodeIDE/Frameworks/DevToolsBase/pbxcore/SpecificationTypes/XCCommandLineToolSpecification.m:828\nDetails:  Unable to get message category info for tool '/Developer/Library/Xcode/PrivatePlugIns/Xcode3Core.ideplugin/Contents/Frameworks/DevToolsCore.framework/Resources/gcc-4.2'.\nReason: Unable to spawn tool subprocess.\nObject:   \nMethod:   -messageCategoryInfoForExecutablePath:\nThread:   {name = (null), num = 6}\nPlease file a bug at http://bugreport.apple.com with this warning message and any useful information you can provide.\nerror: can't exec '/Developer/Library/Xcode/PrivatePlugIns/Xcode3Core.ideplugin/Contents/Frameworks/DevToolsCore.framework/Resources/gcc-4.2' (No such file or directory)\n* BUILD FAILED *\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/gabriel/gh-unit/issues/74\n. The latest Xcode doesn't include gcc, but does include llvm-gcc, which is gcc with an llvm-like interface. Likely we need to update the docs/code to use llvm or llvm-gcc. I'll take a look in the next few days, if you find a fix before that, please submit a pull request.\n\nOn Dec 11, 2011, at 9:47 AM, Aditya Herlambangreply@reply.github.com wrote:\n\nI am using the latest build of XCode 4.2 and OSX Lion. I even did a fresh install of XCode 4.2 and it didn't solve the issue\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/gabriel/gh-unit/issues/74#issuecomment-3098398\n. jmoody, thanks for taking a look deeper into this issue. I bet aherlambang's issue is similar. aherlambang: could you run the following and let us know the output?\n\n$ echo $CC\nPeople using mulberry seem to be having a similar issue (https://github.com/Toura/mulberry/issues/86) and fixed it by running:\n$ export CC=\nIt turned out to be a setting that RVM added to their .bash_profile\n. closing due to no response\n. Hmm yeah, this feature is fairly new, so I'm not surprised to find issues.\nA few questions to help me debug:\n1. When you originally approved the view, were you running\n   your simulator using retina or non-retina?\n2. Are you using the same version of the iOS SDK when you approve the views\n   as when you run them from the command line?\n3. Do you what is being drawn at that pixel? (is it something CoreGraphics,\n   a UIImageView, a UILabel, etc)\nWhen I was writing this feature I originally thought of creating a\nsimilarity score, based on the pixel diff, so that very small changes could\nget ignored. I was surprised to find that in general, the pixel by pixel\nrenders were perfectly consistent. However, this issue might indicate that\nsuch a score would make sense.\nOn Sun, Jan 22, 2012 at 12:56 AM, letsdev <\nreply@reply.github.com\n\nwrote:\nHello,\nwe are using GHVerifyView to test our views. Testing via GHUnit View\neverything is approved and fine.\nOnly when we start the tests via command line we get such a strange error.\nOne pixel at 'r' value of rgb is different by exactly one value.\n...\nImage was different at pixel (547, 764). Old was (r254, g255, b255), new\nwas (r255, g255, b255)\n...\nWhat could be the cause for that error?\nCheers Christian\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/gabriel/gh-unit/issues/75\n. KIF looks really cool for flow testing. If you do any work getting both\nGHUnit and KIF working at the same time, keep us updated. To answer your\nquestions:\n1. Theoretically you should be able to pass in the UIWindow to GHVerifyView\n   since it is a subclass of UIView. I think I tried this while building the\n   feature and it worked. I'd be careful though if you show the status bar,\n   since time and wifi status may change.\n2. GHTestCase works with SenTestingKit/OCUnit. I haven't tried it since we\n   added view verification. I think it should work though. Gabriel might have\n   more insight.\n\nAs to your previous problem, I'm not sure. If you're using the same version\nof the sdk when approving and running the tests, I'm not sure. If you\nnarrow it down to some weird iPhone/iPad/SDK issue, I'd be really\ninterested to know.\nI think the proper solution is to implement a simple difference equation\nthat spits out a double from 0-1 that is made up of the sum of the color\ndifferences in every pixel. You could set this to something very low to\nignore very small differences. Unfortunately I probably won't get a chance\nto build this for another couple months.\nOn Mon, Jan 23, 2012 at 1:28 PM, letsdev <\nreply@reply.github.com\n\nwrote:\nHi John,\nfirst of all: We really love your framework and me for myself especially\nlove that view testing feature since I'm the poor guy that has to implement\nthe UI stuff :D We are even looking forward to take view testing to another\nlevel since we also want to check application flows etc. perhaps we'll use\nhttps://github.com/square/KIF. Still evaluating.\nBtw 2 questions:\n1. Is it possible to Screenshot the whole Window? Including statusbar and\nnavigationbar? I assume not because the tests app itself occupies those\nobjects, correct?\n2. JetBrains App Code integrates fairly well with OCUnit. Do you plan to\nmake efforts to be OCUnit-compliant or however allow running single test\ndirectly from the ide? That would be another great help.\nSee comments concerning the issue below.\nThans a lot for loking into this.\nMit freundlichen Gren/Kind regards\nChristian Schuff\nChief Technical Officer\nlet's dev\nGesellschaft des brgerlichen Rechts (GbR; BGB-Gesellschaft)\nChristian Schuff, Christian Wack, Karl-J. Wack\nPhone: +49 (0) 721-75 40 67 53\nMobile: +49 (0) 179-22 50 50 50\nFax: +49 (0) 721-75 40 66 53\nEmail: christian.schuff@letsdev.de\nInternet: http://www.letsdev.de\nPostanschrift/Mailing Address:\nHaid-und-Neu-Strae 7\n76131 Karlsruhe\nOn 23.01.2012, at 21:57, John Boiles wrote:\n\nHmm yeah, this feature is fairly new, so I'm not surprised to find\nissues.\nA few questions to help me debug:\n1. When you originally approved the view, were you running\n   your simulator using retina or non-retina?\n\nIt was all iPad.\n\n\nAre you using the same version of the iOS SDK when you approve the\n   views\n   as when you run them from the command line?\n\n\nI originally approved with 5.0 Simulator. But we cleaned up everything and\nnewly approved with 5.1 which is the version that we ran from console and\nwhich our build server runs under.\n\n\nDo you what is being drawn at that pixel? (is it something\n   CoreGraphics,\n   a UIImageView, a UILabel, etc)\n\n\nThe Pixel basically shows nothing... It's just a big UIView with some\nsubviews and a white background. None of the subviews overlapps the\nconcerning pixel :/\n\nWhen I was writing this feature I originally thought of creating a\nsimilarity score, based on the pixel diff, so that very small changes\ncould\nget ignored. I was surprised to find that in general, the pixel by pixel\nrenders were perfectly consistent. However, this issue might indicate\nthat\nsuch a score would make sense.\nOn Sun, Jan 22, 2012 at 12:56 AM, letsdev <\nreply@reply.github.com\n\nwrote:\nHello,\nwe are using GHVerifyView to test our views. Testing via GHUnit View\neverything is approved and fine.\nOnly when we start the tests via command line we get such a strange\nerror.\nOne pixel at 'r' value of rgb is different by exactly one value.\n...\nImage was different at pixel (547, 764). Old was (r254, g255, b255), new\nwas (r255, g255, b255)\n...\nWhat could be the cause for that error?\nCheers Christian\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/gabriel/gh-unit/issues/75\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/gabriel/gh-unit/issues/75#issuecomment-3621713\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/gabriel/gh-unit/issues/75#issuecomment-3622204\n. Thanks for letting us know. Could you answer a couple questions:\n1. What iOS SDK are you using (5.0.1, 5.1, etc)?\n2. When you are approving the views, are you using the iPad simulator, iPhone simulator, or iPhone Retina simulator?\n\nGood find with isEqualToData. Sounds like theres some sort of rounding error that's different in the simulator and command line. I think the right solution is still to implement a 'similarity score', that could easily be overridden in GHViewTestCase subclasses and/or passed in to the GHVerifyView macro.\nI also think it'd be worthwhile to have a setting that saves the rendered images when run from the command line, for easy visual comparison.\n. FYI in the meantime you can add\n- (BOOL)isCLIDisabled { return YES; }\nto your GHViewTestCase subclasses if these failures are cluttering up your continuous integration.\n. Are you talking about the test details page? (https://skitch.com/johnboiles/8hfxd/ios-simulator) If this is what you're talking about I'll rename this ticket to \"Support full width for iPad on test details pages\"\nThis piece of UI was designed for the iPhone so it never displays full width on iPad.\n. GHUnit is not designed to be shipped in production apps, only used for testing. See http://gabriel.github.com/gh-unit/docs/appledoc_include/guide_install_ios_4.html for information on how to create a separate test target.\n. Totally, that should be how it works. Feel free to submit a patch.\n. Thanks again for the patch! sorry for the slow response.\n. Thanks @ianyh, @adriancowham, and @gfx!\nIt looks like the application delegate class doesn't get init'd until after [UIApplication init]. Some of the classes I test, depend on the app delegate for some global information, so I had to add: self.delegate = [[MyCustomApplicationDelegate alloc] init]; to the UIApplication subclass's init. All together, my code looks something like this (@gfx's solution plus my fix adapted to coding conventions of my codebase):\n```\n- (id)init {\n  if ((self = [super init])) {\n    if (getenv(\"GHUNIT_CLI\") && [[[UIDevice currentDevice] systemVersion] doubleValue] >= 6.0) {\n  // Looks like the app delegate doesn't get init'd until after this method, so do it manually.\n  self.delegate = [[MyCustomApplicationDelegate alloc] init];\n\n  __block BOOL done = NO;\n  NSOperationQueue *queue = [[NSOperationQueue alloc ] init];\n  [queue addOperationWithBlock:^{\n    NSInteger status = [GHTestRunner run];\n    if (status != 0) {\n      NSString *reason = [NSString stringWithFormat:@\"Failed to test with status: %d\", status];\n      @throw [NSException exceptionWithName:@\"TestFailure\" reason:reason userInfo:nil];\n    }\n    done = YES;\n  }];\n\n  while(!done) {\n    [[NSRunLoop currentRunLoop] runUntilDate:[NSDate dateWithTimeIntervalSinceNow:5]];\n  }\n}\n\n}\n  return self;\n}\n```\n. Hey all,\nI'm down to help out, but don't feel comfortable doing the transfer without\nthe go-ahead from Gabe. I'll reach out to him.\nJohn\nOn Mon, Oct 28, 2013 at 5:52 AM, Felix Schulze notifications@github.comwrote:\n\nI would help here too.\nI just create a \"gh-unit\" organization, because we can handle the\nadministration a lot easier. And you could also transfer the rights to\nother people.\nhttps://github.com/gh-unit/gh-unit\nWhat do you think?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gabriel/gh-unit/issues/129#issuecomment-27208247\n.\n. Thanks for rallying, all. As you can see, I left a number of comments.\n\nThe biggest one has to do with the use of short instead of NSInteger.\nIt's convention in GHUnit (and most objective-c projects I've seen) to use NSInteger or NSUInteger for all your integer needs. I don't think you save anything except for maybe a handful of bits. I'm pretty sure modern 32/64 bit CPUs are even faster at processing 32/64 bit numbers than they are at processing 16bit numbers. I see no win from using short in GHUnit.\n. lg2m\n. is this cast necessary?\n. maybe take it out then\n. I'm not sure on the purpose of all these casts. They should be converted automagically by the compiler without the cast.\n. What does this do? Maybe add a comment\n. Convention is to use NSInteger for integers. It's not worth it to break convention to save a handful of bits.\nWhy not support more than 32768 succeeded tests?\n. Seriously. We have > 2kb RAM these days. It's ok to use 32-64 bit integers everywhere.\n. I don't think this is necessary. This doesn't cause a retain loop because self does not retain the block. After the block runs, self will get dealloc'd just fine.\nI don't feel strongly though\n. maybe declare this as weak?\n. Hmm, maybe use comment formatting consistent with everywhere else?\n. :(\n. pretty obvious from the code this is a noop\n. remove dead code\n. Why? View verification is a unique and useful feature.\n. ",
    "laiso": ":+1:\nI want to upgrade CocoaPods's Specfile, and it require version tags.\nhttps://github.com/CocoaPods/Specs/tree/master/GHUnitIOS\nsee\nhttps://github.com/CocoaPods/Specs/wiki/%22Please-add-semantic-version-tags%22-issue-template\n. ",
    "soffes": "You probably should have GHUnit in a build that you're submitting. The installation instructions say you should make another target and add the framework to that.\n. ",
    "redstarstar": "I had the same problem...\n. ",
    "tszming": "Same here. Ok in simulator, failed to build in iPhone4(iOS5)\n. You need to build by yourself.\n1. git clone https://github.com/gabriel/gh-unit.git\n2. cd Project-iOS\n3. make\n4. Use the GHUnitIOS.framework under the build/Framework folder\n. ",
    "andrewrothman": "Has anybody found a fix yet?\n. I agree. The same thing worked for me.\n. ",
    "akisute": "@tszming Thank you, worked for me!\n. Manually patched this pull request by myself and it worked perfectly for my test cases with Security.framework.\nI suppose you'd better merge this request to fix the issue.\nFor CFFIXED_USER_HOME, I have no idea what this env var is as well as Google. Perhaps it's the env var used internally in iOS Simulator and it's no harm to us except scattering warnings out. If you care though, you can cherry-pick commit 56312fc and remove line 17 to negate the CFFIXED_USER_HOME fix.\n. ",
    "mbonano": "Could someone provide a bit more detail on how a rebuild solved this issue? I downloaded the source and verified that the build settings were appropriately configured for armv6 and armv7. I rebuilt the framework, re-referenced the newly built framework in my existing project and cleared my project completely. When I try to run my project, I still receive the same error. Any ideas why? Any help would be much appreciated.\n. ",
    "Kastet": "Thanks! Worked for me! \n. ",
    "lovexz1989": "Thanks to  tszming! It worked for me,too.\n. ",
    "girmay1977": "I'M facing same problem, its a related issue.\nCan anyone tell me more please ? since am just new to the environment i couldn't even know where to make changes.\nI'm using Xcode environment and the error message generated is as follows:\nduplicate symbol OBJC_METACLASS$_Base64 in /Users/fengz/Library/Developer/Xcode/DerivedData/App-fcboiwafvqizjpbnawarmmchgvqh/Build/Intermediates/App.build/Debug-iphoneos/App.build/Objects-normal/armv7/Base64-3A0CFD19E80D86B.o and /Users/fengz/Library/Developer/Xcode/DerivedData/App-fcboiwafvqizjpbnawarmmchgvqh/Build/Intermediates/App.build/Debug-iphoneos/App.build/Objects-normal/armv7/Base64-3A0CFD19E80D86B.o for architecture armv7\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n. ",
    "lntutor": "thank you. you saved my dad!\n. ",
    "aherlambang": "I am using the latest build of XCode 4.2 and OSX Lion. I even did a fresh install of XCode 4.2 and it didn't solve the issue\n. Any updates on this issue?\n. ",
    "jmoody": "I had a similar problem on my machine.  The xcodebuild output was nearly identical.\nThe problem was caused by how the CC variable was being set.\nI hope it is appropriate to discuss this here.\nI recently installed rvm and in order to do so, I also installed (via MacPorts) apple-gcc42 and put the following in my .rvmrc:\nexport CC=/opt/local/bin/gcc-apple-4.2\nI had forgotten that I had done this.  When I ran make in gh-unit/Project-iOS I saw that the compiler that was being used was gcc-apple-4.2, which I knew was clearly wrong.  After some searching, I found where the CC variable was being set (in  ~/.rvmrc) and commented it out.\nThen, I decided to:\n$ export CC=/usr/bin/gcc.\nThis turned out to be the wrong thing to do and I ended up with xcodebuild errors similar to the ones you are seeing.\nThe correct thing to do was this:\n$ export CC=\nWhat is your CC variable set to?\n$ echo $CC\nIf it is other than empty, maybe this is your problem?\n. thanks for the great information here.\nusing the subclassing UIApplication solution above worked for me (thanks @ianyh et. al.)...mostly.\nthe problem i have now is that if i use xcodebuild -sdk iphonesimulator5.1 , my test suite is run 2x.\nexample from the test section of my Makefile:\nCC= GHUNIT_CLI=1 xcodebuild -target Tests-iOS -configuration \"Debug\" -sdk iphonesimulator5.1 build\ni have tried using -workspace and -scheme with the same result.\nif i just use -sdk iphonesimulator or -sdk iphonesimulator6.0, the test suite runs once (as expected).\ni'll be the first to admit that my xcodebuild foo is pretty weak.  \nam i doing something wrong?\nanyone else seeing this?\nthis screenshot on evernote might be illuminating...\ncheers\n. @ianyh - ah! of course!  thanks!\n. in case this happens to someone else, i just update to Xcode 4.6.  this brought in the 6.1 sdk.  \nto get my cli tests to work for 6.0, i was using a custom application delegate and testing the version like this:\nif (getenv(\"GHUNIT_CLI\") && [@\"6.0\" isEqualToString:sysv])\nwhich will obviously fail.\n. @barumrho thanks for that link!  i tried out that technique and it worked.  however, the category on UIWindow will inhibit the test target from ever opening in the simulator.  below, i have pasted what  i think is a complete solution (no custom application delegate needed). \ni have tested on the command line and in the simulator for iOS 5.1, 6.0, and 6.1.\nhttps://gist.github.com/467200\nthoughts?\n```\nimport \nimport \n@interface UIWindow (Private)\n- (void) swizzled_createContext;\n@end\n@implementation UIWindow (Private)\n- (void) swizzled_createContext {\n  // nop\n}\n@end\nint main(int argc, char *argv[]) {\n  int retVal;\n  @autoreleasepool {\n    CFMessagePortRef portRef = NULL;\n    if (getenv(\"GHUNIT_CLI\")) {\npragma clang diagnostic push\npragma clang diagnostic ignored \"-Wundeclared-selector\"\n  Method originalWindowCreateContext =\n  class_getInstanceMethod([UIWindow class],\n                          @selector(_createContext));\n\npragma clang diagnostic pop\n  Method swizzledWindowCreateConext =\n  class_getInstanceMethod([UIWindow class],\n                          @selector(swizzled_createContext));\n\n   method_exchangeImplementations(originalWindowCreateContext,\n                                  swizzledWindowCreateConext);\n\n\n  portRef = CFMessagePortCreateLocal(NULL,\n                                     (CFStringRef) @\"PurpleWorkspacePort\",\n                                     NULL,\n                                     NULL,\n                                     NULL);\n}\n\nretVal = UIApplicationMain(argc, argv,\n                           NSStringFromClass([UIApplication class]),\n                           @\"GHUnitIOSAppDelegate\");\nif (portRef != NULL) { CFRelease(portRef); }\n\n}\n  return retVal;\n}\n```\n. @drekka are you saying that code above did not work? how did it fail?\n. i am also using this in Xcode 5 previews.  it works in the simulator (although the UI is a bit squirrelly in iOS 7) and on the command line. \n. +1 - bumped into this again the other day. let me know if there is anything i can do to help. i love love love ghunit. thanks for your hard work.\n. can i add another plus?  just banged my head into this again.\n@edwardaux thanks for tracking down that commit.\n@gabriel if you need some help, let me know.\n. thanks!\n. in my experience tests run on the simulator/device are much slower than those run on the CLI or Jenkins.\nmy Jenkins machine(s) are similar to yours.\ni suggest checking your Jenkins install/version.  not a very helpful answer, but now you know there is at least one Jenkins server out there that is not behaving like yours.\n. It has been a month with no response and 5 months with no activity.\nI would like to organize an effort to revive this repository.\nIs there anyone interested in helping?\nCan someone suggest an active fork we might start from?\n@gabriel and @johnboiles - I would love to hear some input from you about this. \n. re: organization - perfect.  \nmy fork is to an organization (for the reasons you mentioned).\ni think it would better to use the gh-unit/gh-unit organization fork that @x2on created.\n@johnboiles thanks for reaching out to Gabriel.  he is missed.\n. @x2on i see that you are going through the pull requests. if you want some help vetting the pull requests, let me know.\ndid you have a look at my pull request?\nhttps://github.com/gabriel/gh-unit/pull/132\nthere are several key merges from the yelp branch.\nand i would like to be a collaborator on the new repo.\n. re: collaborator - perfect, thanks.\nre: big pull request - i agree 100%. i did not intend that it would be merged.  i submitted it to show that i was serious about reviving GHUnit.\ni am travelling the next 2 days so don't be surprised if you don't hear from me.\n. see my comments inline.\nthe use of short vs. NSInteger/NSUInteger was not for performance, but for debugging and analysis.\n. should we adopt a fork & pull or shared repository strategy?\nCI == brilliant\ni use Jenkins triggered by github activity.\n@x2on - do you have a public Travis CI server?  i have never used travis, but would be willing to pass my feature branches through your CI server.\n. works for me.\n. i would like to have permissions to assign issues to folks (myself) and to label them appropriately.\ncan someone check my permissions?\nis that you @x2on?\n. all is good.  thanks x2on.\n. problem was with homebrew install of libJPEG.dylib.\n-1 for homebrew\n. i believe that i have narrowed this down to a problem with the way gh-unit runs tests from the CLI.\ni attached instruments to my test process with NSZombieEnabled=YES and found that a message (queue_resisterWithServer) was sent to a deallocated object BKProcessAssertion in the BackBoardServices library.\nhere are some details about my tests:\n- i have 3 migrations that i test against. \n- i run each migration against Core Data stores that range in size from trivially small to large (relative to the app).\n- there are 3 model versions, A, B, and C.\n- i test that i can migrate stores from A => B, B => C, and A => C.\nthese are the reasons that i think this problem is caused by the way gh-unit runs tests from the CLI.  if you disagree, please set me straight - i am stumbling in the dark.\n1. as i mentioned, the only time my migration tests crash is when running on Xcode > 5 from the CLI. \n2. the crashes do not occur at the same point. for example:\n   - the A => B migration completes and the B => C starts, then the crash occurs\n   - the A => B migration completes and the crash occurs\n   - the A migration starts and then the crash occurs\n3. if i attach Instruments to the process, many or some of the migrations complete without crashing - but eventually one does crash.\ni have tried my migrations with and without ARC.\ni usually use a recursive algorithm to do the migrations, but thinking that this might be the problem, i rewrote the migration in a while loop - same outcome.\nany thoughts?\n\n. @fredfoc thanks!\ni am not calling resetContext but i am nil'ing the test context in the tearDown method.\nit seems like the Core Data stack is somehow linked to the UI.  a migration step (eg. from model A => B) finishes and something is hanging onto a reference to one of the NSMigrationContexts...\ni have tried all sorts of foolery to fix this:\n- changing from a recursive algorithm to a non-recursive one\n- using manual retain/release instead of ARC\n- holding onto references to the contexts, mapping models, etc. until the test has fully completed\n- running on the main thread and off the main thread\n- initializing the context with each of the 3 different thread model\n. ah, i thought you meant NSManagedObjectContext reset.\nyeah, i do something similar to your resetContext.\ndid you come up with a solution?  do you no longer call resetContext in your tearDown method?\n. i am testing Core Data migrations so mocking is not an option.  \ni use (or have used) Magical Record in a couple of projects.  \ni don't think they have a strategy for migrating from model A => B => C. \n. this problem only occurs on when targeting iOS 7.0 (iphonesimulator7.0).\ni have also confirmed that this is not a problem with my migrations - they work on devices and in the simulator and i have successfully run them against the live app store version of the app.\nthinking that perhaps i was doing something wrong in my migrations, i commented out all the 'work' in my migrations (so the test assertions would fail).  unfortunately, i never got to the point of an assertion failure - i got the XPC error again.\ni found this, possibly relevant, post - https://issues.jboss.org/browse/AGIOS-77\n. latest Xcode DP - my migrations now complete without crashing, but i find some very interesting log output:\nClass _NSZombie__UIBackgroundTaskInfo is implemented in both ?? and ??. One of the two will be used. Which one is undefined.\nCan't endBackgroundTask: no background task exists with identifier 1, or it may have already been ended. Break in UIApplicationEndBackgroundTaskError() to debug.\nCan't endBackgroundTask: no background task exists with identifier 2, or it may have already been ended. Break in UIApplicationEndBackgroundTaskError() to debug.\nOK (1.733s)\n. -1 for cocoapods\nouch. i should have chimed in when i had the chance.\ni don't think that most people are using cocoapods.\n. I agree that cocoapods is trending in open source projects.  \nI do not agree that it is trending in non-open source projects - none of my clients will allow it and other contractors have told me the same.\nBut this is an argument that cannot be won by either of us because we don't have enough data.\nAnd I don't want to argue.\nThanks and keep up the great work!\n. [NSString contrainedToSize:lineBreakMode:] is deprecated and UILineBreakMode is also deprecated.\nreplacing UILineBreakMode is trivial.  replacing [NSString contrainedToSize:lineBreakMode:] is a little more difficult.\n#pragma clang diagnostic ignored \"-Wenum-conversion\"\nsuppresses a compiler warning around using UILineBreakMode enum vs. NSLineBreakMode\n. if you turn on -Wimplicit-retain-self the compiler complains about the references to self->delegate_.\ni prefer to do the weak self dance with blocks because it easy make a mistake and inadvertently create a retain cycle.\n. ",
    "letsdev": "Hi John,\nfirst of all: We really love your framework and me for myself especially love that view testing feature since I'm the poor guy that has to implement the UI stuff :D We are even looking forward to take view testing to another level since we also want to check application flows etc. perhaps we'll use https://github.com/square/KIF. Still evaluating.\nBtw 2 questions: \n1. Is it possible to Screenshot the whole Window? Including statusbar and navigationbar? I assume not because the tests app itself occupies those objects, correct?\n2. JetBrains App Code integrates fairly well with OCUnit. Do you plan to make efforts to be OCUnit-compliant or however allow running single test directly from the ide? That would be another great help.\nSee comments concerning the issue below.\nThans a lot for loking into this.\nKind regards\nChristian\nOn 23.01.2012, at 21:57, John Boiles wrote:\n\nHmm yeah, this feature is fairly new, so I'm not surprised to find issues.\nA few questions to help me debug:\n1. When you originally approved the view, were you running\n   your simulator using retina or non-retina?\n\nIt was all iPad. \n\n\nAre you using the same version of the iOS SDK when you approve the views\n   as when you run them from the command line?\n\n\nI originally approved with 5.0 Simulator. But we cleaned up everything and newly approved with 5.1 which is the version that we ran from console and which our build server runs under. \n\n\nDo you what is being drawn at that pixel? (is it something CoreGraphics,\n   a UIImageView, a UILabel, etc)\n\n\nThe Pixel basically shows nothing... It's just a big UIView with some subviews and a white background. None of the subviews overlapps the concerning pixel :/\n\nWhen I was writing this feature I originally thought of creating a\nsimilarity score, based on the pixel diff, so that very small changes could\nget ignored. I was surprised to find that in general, the pixel by pixel\nrenders were perfectly consistent. However, this issue might indicate that\nsuch a score would make sense.\nOn Sun, Jan 22, 2012 at 12:56 AM, letsdev <\nreply@reply.github.com\n\nwrote:\nHello,\nwe are using GHVerifyView to test our views. Testing via GHUnit View\neverything is approved and fine.\nOnly when we start the tests via command line we get such a strange error.\nOne pixel at 'r' value of rgb is different by exactly one value.\n...\nImage was different at pixel (547, 764). Old was (r254, g255, b255), new\nwas (r255, g255, b255)\n...\nWhat could be the cause for that error?\nCheers Christian\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/gabriel/gh-unit/issues/75\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/gabriel/gh-unit/issues/75#issuecomment-3621713\n. 1. I'll test that and give you some feedback\n\nConcerning the issue:\nI think I'll adjust your pixel by pixel test to be a little more tolerant and accept let's say changes up to a value of 5 in rgb values. May be that amount should be configurable. I'll keep you updated on that.\nThanks so far.\nCheers\nChristian\n. Didn't intend to close this :)\n. ",
    "Agentx86": "Hello guys. I have a similar problem. \nFor example:\nUISwitch *switchView = [[[UISwitch alloc] init] autorelease];\nGHVerifyView(switchView);\nI save image with UISwitch by means of button \"Approve this image\" and then run test again. Test fails because old and new images are not equal.\nLog from console:\nImage was different at pixel (1, 3). Old was (r127, g127, b127), new was (r128, g128, b128)\nAfter that I used a different comparison algorithm for images in method compareImage:\n[UIImagePNGRepresentation(image) isEqualToData: UIImagePNGRepresentation(renderedImage)]\nAnd this algorithm returns YES. What do you think about using this technique for comparing images? I haven't tested the speed of such comparisons though and of course it will be impossible to introduce any kind of \"similarity score\" in this case.\n. I haven't used command line. I only worked in xCode 4.2 using SDK 5.0.\n- My defect is reproducible on iPhone simulator 4.3, iPhone simulator 4.3 (retina), iPad simulator 4.3. \n- It's not reproducible on iPhone simulator 5.0, iPhone simulator 5.0 (retina), iPad simulator 5.0.\nAlso I've found a workaround which doesn't require code changes in GHUnit: set background color of UISwitch to white.\n. ",
    "Inferis": "My changes will fix that.\n. ",
    "kolyuchiy": "Yes, it's still relevant.\n. ",
    "MarchLiu": "The error was happened with test in IPAD2+iOS5\n. ",
    "efirestone": "Sorry, wrong tree.\n. ",
    "cmoskalo": "With the latest Xcode 4.4 I'm not able to use the RunTests.sh script that ghunit comes with.  The reason being is the the resulting .octest no longer contains the application binary so the script fails.  As a result, this fix for https requests cannot be used as I have to use target settings \"Test after build\" and a different command line.  Additionally, in Lion there is no /usr/libexec/securityd anymore.\nI've tried a variety of solutions, adding certificates to the iOS simulator, adding certs to the keychain, and so far nothing has worked.  Can anyone confirm using ghunit with Xcode 4.4 and running tests via the CLI, following the set-up steps described on ghunit's wiki (and nowhere else)?\n. ",
    "netbe": "I also have a problem with this, I don't know how much it is related to @cmoskalo problem but anyway. I am trying to test a method in my code that store password and email of a user to the keychain. The test passes fine in simulator but when running in command line, I got this error:\nError Domain=STKeychainErrorDomain Code=-25291 \"The operation couldn\u2019t be completed.\nErrorCode from Apple Doc. shows errSecNotAvailable: No trust results are available.\nI have both scripts set up in my project's folder : RunIPhoneSecurityd.sh and RunTests.sh\nThanks in advance for your help.\nBTW: why is the two script files not merged to master?\n. ",
    "vdaubry": "Same problem here i'm unable to run tests using the keychain in CLI\nTests runs fine when ran through the simulator.\nStarting UserServiceTests/test_getUser_Returns401AndSignInWithCredentialsFails_should_DestroyUserAndClearKeyChain\nSecItemCopyMatching failed for key com.youboox.YoubooxUnitTests.LOGIN_CREDENTIALS_KEY: -25291\nSecItemCopyMatching failed for key com.youboox.YoubooxUnitTests.PASSWORD_CREDENTIALS_KEY: -25291\n*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '*** -[__NSPlaceholderDictionary initWithObjects:forKeys:count:]: attempt to insert nil object from objects[0]'\nFor info i tried the following solutions without success :\n- Run tests with simulator running \n- Uncomment lines 11-16 in RunTests.sh\nHas anyone been able to use the keychain in CLI with GHUnit ?\n. ",
    "scouten": "We are also unable to use the keychain APIs from command-line / simulator test environment. We wound up writing special-case code in our application framework that avoids using the keychain APIs in this case. Unfortunately, it's too tied to our internal app framework to be useful generally, but the general idea is we use a transient NSMutableDictionary to mimic the behaviors.\n. ",
    "ganeshvijayakrishnan": "Thank you for help\n. ",
    "jhollida24": "John, I think you should reconsider. \nHaving a separate target for a GHUnit configuration of your app is not always a practical thing. Choosing a different target to build and run takes much longer than is desirable, especially for a big app. This is (one place) where SenTestKit falls on it's face. Also, people don't always remember to add files to both targets. Spending the time figuring out why the unit test target won't build is not a place I want to invest my time.\nAlso, there are certainly valid cases where you would want the ability to run tests in your production configuration. My team, for example, has integration tests we want to run when the app is in production, to verify that everything is healthy. We use GHUnit as that test harness, and it works great. We of course block any non-admin users from getting to the UI in the app, but we need to get to it. Right now, every time we submit to the app store, we have to pull out the GHUnitIOS framework and tests. Every time.\nAs far as I can tell, there's no way to specify 'don't compile these files in this configuration' in Xcode. You can conditionally include or not include Frameworks via 'Other Linker Flags', but if your test cases are part of your target, they will fail to compile.\nI admit I don't know the specifics of your use of _tearDown, but I suspect it's as simple as GHUnit has a class with an instance method of _tearDown. It sounds like Apple has one named _tearDown, and as a result, your use of it throws up an undocumented api error on validation. If it's as easy as changing the name to something like _ghTearDown, I hope it would be worth your time.\nThanks for building something so useful. I really like GHUnit, but would like it even more if it's use didn't dictate that it can't be included in a production app.\n-Jeff\n. ",
    "ndevenish": "I also have this issue. I tried altering the app delegate to add the IOSViewController as a root view controller, and everything was just blank. Any ideas on how to start tracking this down?\n. ",
    "BlackBears": "Perhaps: window_.rootViewController = navigationController_;  in the app delegate?\n. ",
    "deemadden": "Gabriel - I upgraded to 0.5.5, but I'm still seeing this issue.  I can't go to 0.5.6, because 0.5.6 seems to have broken compatibility with all of my Test harnesses that use GHAsyncTestCase.  It doesn't appear to impair my ability to run tests in any way, fortunately, it just emits the message at launch time on the runner.  Is there anything I can do to remedy this?\n. ",
    "tibo": "ho, and I forgot to mention: the build success every time, and don't display any test\n. after few tries I get a new error (which make the build fail):\nlaunch_msg(): Socket is not connected\n. ok so it's a launchd issue... not really related to GHUnit.\nI close this issue, anyone with an idea is welcome! \nThanks!\n. ",
    "adamhowardprice": "Aha! That was it -- thank you very much! Am loving using GHUnit btw.\n. ",
    "max-horvath": "It's still happening on the GM. I'm actually running this on a workspace ... still it happens. When switching to SDK 5.1 on the GM, everything works fine ... but that cannot be the solution.\nBTW, no solution to that came up on Apple's dev forum.\n. Well, I opened this radar.\nSo far no response.\n. I also opened a thread in the Dev forums of Apple:\nhttps://devforums.apple.com/thread/167012\nAlso no response.\n. Good idea. As soon as I'm back in the office I'll check if providing the new Default PNG for 4\" devices will resolve the issue.\nAm 18.09.2012 um 00:35 schrieb SteveMunday notifications@github.com:\n\nSince this just showed up recently it must have something to do with iPhone 5. I wonder if the default screen size when running the simulator is now Retina - 4\"?\n\u2014\nReply to this email directly or view it on GitHub.\n. Sure, but the problem is actually getting it up and running with the 6.0 SDK.\n\nIf you're using new iOS 6-only features, the iOS 5.1 SDK won't be of any help.\n\nI got it working on the latest XCode using the iOS 5.1 simulator and this command:\nGHUNIT_CLI=1 WRITE_JUNIT_XML=YES xcodebuild ARCHS=i386 ONLY_ACTIVE_ARCH=NO VALID_ARCHS=i386 -workspace WhatsOn.xcworkspace -scheme Tests -configuration Debug -sdk iphonesimulator5.1 clean build\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "SteveMunday": "Since this just showed up recently it must have something to do with iPhone 5.  I wonder if the default screen size when running the simulator is now Retina - 4\"? \n. ",
    "alangria": "Do we know if there is workaround for this? I can still repro this in release version of XCode 4.5\n. As a workaround, it is possible to run the the app in simulator using third party command line tools like ios-sim and turn autorun on launch and autoexit on complete flags on.\n. ",
    "whalec": "Likewise. We're also suffering from this in XCode 4.5. Any ideas on this? Happy to take a look if someone can point us in a direction.\n. ",
    "kevinbryant": "We ran in to the same problem. We're using GHUnit alongside GTM, and got things working by using the RuniOSUnitTestsUnderSimulator.sh script from GTM. Our \"Run Script\" build phase now looks like this:\nif [ ! -z \"$BUILD_CLI\" ]\nthen\n    export GHUNIT_CLI=true\n    sh Tests/UnitTesting/RuniOSUnitTestsUnderSimulator.sh\nelse\n    sh Tools/ghruntests.sh\nfi\nWhere ghruntests.sh is our wrapper around the standard GHUnit unit test runner script. Tests run through xcode via normal Run, via command line by setting BUILD_CLI ( export BUILD_CLI=true ), then running:\nxcodebuild -target UnitTests -configuration Debug -sdk iphonesimulator build\nWhere UnitTests is the name of your test target. RuniOSUnitTestsUnderSimulator.sh is pretty well documented. Because it's running using xcodebuild all of the required environment variables for RuniOSUnitTestsUnderSimulator are already set.\nhttp://code.google.com/p/google-toolbox-for-mac/source/browse/trunk/UnitTesting/RunIPhoneUnitTest.sh\n. ",
    "victorlima": "http://stackoverflow.com/a/12655840/1494532\nApparently this can be worked around by setting the simulator version, but all other kinds of creepy XIB compilations failures popped up for me, so depending on what application tests you are running, maybe you can be fine for now. ;/\n. ",
    "levigroker": "Can this issue be reopened? I'm having the same issue, and everything I've tried in this thread does not solve or workaround it. :/ \n. @superrunt19 You are my hero. This worked perfectly for me, thank you.\nTo be clear, I had to modify my main.m like this:\n``` objectivec\nimport \nimport \nint main(int argc, char *argv[])\n{\n    int retVal;\n    @autoreleasepool {\n        if (getenv(\"GHUNIT_CLI\")) {\n            retVal = [GHTestRunner run];\n        } else {\n            retVal = UIApplicationMain(argc, argv, nil, @\"GHUnitIOSAppDelegate\");\n        }\n    }\n    return retVal;\n}\n```\n. ",
    "jkennedy1980": "I got it working on the latest XCode using the iOS 5.1 simulator and this command:\nGHUNIT_CLI=1 WRITE_JUNIT_XML=YES xcodebuild ARCHS=i386 ONLY_ACTIVE_ARCH=NO VALID_ARCHS=i386 -workspace WhatsOn.xcworkspace -scheme Tests -configuration Debug -sdk iphonesimulator5.1 clean build\n. ",
    "markshiz": "My workaround solution was to use waxsim for the moment.  I replaced the contents of my RunTests.sh with the following:\n```\n!/bin/sh\nBASEDIR=dirname $0\nif [ \"$GHUNIT_CLI\" = \"\" ] && [ \"$GHUNIT_AUTORUN\" = \"\" ]; then\n    exit 0\nfi\nosascript -e 'tell app \"iPhone Simulator\" to quit'\nsleep 5\nMY_TMPDIR=/usr/bin/getconf DARWIN_USER_TEMP_DIR\nRESULTS_DIR=\"${MY_TMPDIR}test-results\"\nJUNIT_XML_DIR=\"${RESULTS_DIR}\" GHUNIT_AUTORUN=1 GHUNIT_AUTOEXIT=1 waxsim -s 6.0 -f iphone ${BASEDIR}/../build/Debug-iphonesimulator/UnitTests.app\nif [ -d \"$RESULTS_DIR\" ]; then\n  cp -r -v \"$RESULTS_DIR\" \"$BUILD_DIR\"\nrm -rf \"$RESULTS_DIR\"\nfi\n```\nUnfortunately, this has an unwanted side-effect of not running inside the xcode project/workspace build as a script.  Not sure on why that is, but waxism freezes the build when run this way.  I had to modify my scripts to run RunTests.sh after the build had completed.\nTo execute and output junit xml, I run the following command:\nBUILD_DIR=/path/to/build GHUNIT_CLI=1 WRITE_JUNIT_XML=1 RunTests.sh\nNOTE: For those who are running jenkins for CI, you have to start jenkins as a LaunchAgent for waxsim to execute.  \nHope this helps someone!\n. ",
    "superrunt19": "this worked for me.  I changed the implementation of my main.m from this\n@autoreleasepool {\n    return UIApplicationMain(argc, argv, nil, @\"GHUnitIOSAppDelegate\");\n}\nto this.  I'm duplicating the check that GHUnitIOSAppDelegate is performing in applicationDidFinishLaunching:\n@autoreleasepool {\n    if (getenv(\"GHUNIT_CLI\")) {\n        retVal = [GHTestRunner run];\n    } else {\n        retVal = UIApplicationMain(argc, argv, nil, @\"GHUnitIOSAppDelegate\");\n    }\n}\nWhat I found is that when running the first way, UIApplicationMain is detecting something incorrect in the environment and is bailing before it ever attempts to instantiate GHUnitIOSAppDelegate (I added an init method to GHUnitIOSAppDelegate and it was never invoked).  So it appears that UIApplicationMain has changed with the iOS6 sdk.\n. ",
    "adriancowham": "This is definitely progress!\nBut yeah, view tests are failing. Even simply attempting to load a controller's view no longer works, for example, the following asserts always fail when I run the tests from command line.\nassertThat(testGallery.view, notNilValue() );\nassertThat(testGallery.gridView, notNilValue() );\nThoughts?\n. @ianyh I didn't have any luck with your approach, been at it for a few days with no success. Anyone else been successful?\nHere's my main.m\nobjective-c\nint main(int argc, char *argv[]) {\n  @autoreleasepool {\n    return UIApplicationMain(argc, argv, @\"ZOAppTestRunner\", @\"ZOTestAppDelegate\");\n  }\n}\nHere's my ZOAppTestRunner implementation:\n``` objective-c\nimport \"ZOAppTestRunner.h\"\n@implementation ZOAppTestRunner\n\n\n(id)init {\n    self = [super init];\nif (getenv(\"GHUNIT_CLI\")) {\n    [GHTestRunner run];\n}\nreturn self;\n}\n\n\n@end\n```\nNow, when I run the test script I get the following:\n./test.sh: line 47: 71649 Abort trap: 6           \"/Users/adriancowham/code/apple/src/build/Debug-iphonesimulator/UnitTests.app/UnitTests\" -RegisterForSystemEvents\nPrior to applying the change by @ianyh, the tests would at least run, but the ones that referenced a UIView crashed.\nThoughts?\n. Yes it is.\n``` objective-c\nimport \n@interface ZOAppTestRunner : UIApplication\n@end\n```\n. Hey folks, though I'd update you all with my status, I was able to get the approach described by @ianyh working. I had two things going on in my environment that I thought I'd share just in case anyone else runs into the same thing.\nFirst, as described above, I was getting this error when I tried to run the tests on the command line:\n./test.sh: line 47: 71649 Abort trap: 6 \"/Users/adriancowham/code/apple/src/build/Debug-iphonesimulator/UnitTests.app/UnitTests\" -RegisterForSystemEvents\nIt turns out I had a hung UnitTests.app in my process list, after killing it and re-running the tests the error went away. However, when re-running the tests, they hung. So I CTRL-C my terminal to get my prompt back, re-run the tests again and sure enough I got the Abort trap: 6 error again due to a hung instance of UnitTests.app. \nSo at this point my theory is that running the tests using the approach by @ianyh has introduced ( or exploited ) a deadlock situation in my code. Long story short, running the tests from the UIApplication initializer causes all your tests to be run on the main UI thread, where as before they weren't. There are places in my code where I call\nobjective-c\ndispatch_sync( dispatch_get_main_queue(), ^ { successBlock(); } );\nSo, if any of the tests that execute this code are run on the main UI thread, we get a deadlock. The easy fix is to change the code to dispatch_async but we have a specific need for the dispatch_sync.\nTo work around this I modified the solution by @ianyh as follows:\n``` objective-c\n- (id)init {\n    self = [super init];\n    if (getenv(\"GHUNIT_CLI\")) {\n        __block BOOL done = NO;\n        NSOperationQueue * queue = [[ NSOperationQueue alloc ] init ];\n        [queue addOperationWithBlock:^{\n            [GHTestRunner run];\n            done = YES;\n        }];\n    while( !done ) {            \n        [[NSRunLoop currentRunLoop] runUntilDate: [NSDate dateWithTimeIntervalSinceNow: 5] ];\n    }\n}\nreturn self;\n\n}\n```\nThe above code is the initializer for my subclass of UIApplication. All it does is runs the tests on a separate thread, and waits for them to complete. It's not the most elegant solution, but my tests now run on command line and in Jenkins, I couldn't be happier.\nA huge thanks to @ianyh  and @superrunt19 for contributing to this issue.\n. ",
    "ianyh": "It seems like UIApplicationMain does a bunch of UIKit initialization, actually. I get SIGTRAP trying to do\n[UIFont systemFontOfSize:16.0];\nand I have reason to believe\n[UIDevice currentDevice];\ndoes the same.\nIt looks like circumventing UIApplicationMain doesn't actually work. And it doesn't seem to actually return when Terminating since there is no workspace. gets hit. I found a solution that seems to work, which is using the one thing that does get instantiated, which is the UIApplication instance.\nI created a custom subclass of UIApplication called WSApplicationTestRunner that has nothing but the init\n- (id)init {\n    self = [super init];\n    if (getenv(\"GHUNIT_CLI\")) {\n        if ([GHTestRunner run] > 0)\n            [NSException raise:NSGenericException format:@\"\"];\n    }\n    return self;\n}\nThe exception is so our Jenkins job catches it as a failure in the absence of directly controlling the return value of the process.\nThen, change the UIApplicationMain call in main.m to\nUIApplicationMain(argc, argv, NSStringFromClass([WSApplicationTestRunner class]), @\"GHUnitIPhoneAppDelegate\");\n. @adriancowham is ZOAppTestRunner a subclass of UIApplication?\n. @jmoody Your problem is that when you run with iphonesimulator5.1 the normal execution works. So my hack to run the tests in UIApplication init runs and when that finishes UIApplicationMain runs successfully which causes GHUnit internals to run the tests a second time. \nI think - [UIDevice systemVersion] should give you @\"5.1\" (though I haven't confirmed that), so you can try accessing that and change the conditional in init to\nif (getenv(\"GHUNIT_CLI\") && [[[UIDevice currentDevice] systemVersion] isEqualToString:@\"6.0\"]) {\n    [GHTestRunner run];\n}\nor something of the like.\n@adriancowham Not sure what the problem there is. Can you catch it in debugger? Say, remove the conditional and always run [GHTestRunner run] in the test runner init. It's possible that you are accessing something in UIKit that gets set up after the UIApplication instance gets initialized.\n. I ran into an issue at some point that I never got a chance to fully look into in which tests would run very slow on a CI server and it was caused by UIView. That is, it seemed like every time a UIView was instantiated it took several seconds, and with our more complex view hierarchies this ended up taking upwards of a minute to load everything. Even stranger, each view seemed to take exactly 4 seconds, I think, so our best guess at the time was some backing layer code somewhere hitting a 4 seconds timeout. I'm not sure if your problem is the same thing, but it's worth checking. I would totally believe that having the iOS simulator launched at all would speed up UIView instantiation.\n. ",
    "JonB": "This is still broken on the latest beta.\n. ",
    "gfx": "My project works with the solution by ianyh & adriancowham.\nFYI, here is the code I'm using:\n``` objc\n// main.m\nimport \nimport \"GHUnitIOS/GHUnit.h\"\n@interface MyUIApp : UIApplication\n@end\n@implementation MyUIApp\n\n\n(id)init\n{\n    self = [super init];\n    if (self && getenv(\"GHUNIT_CLI\") && [[[UIDevice currentDevice] systemVersion] doubleValue] >= 6.0) {\n        __block BOOL done = NO;\n        NSOperationQueue * queue = [[ NSOperationQueue alloc ] init ];\n        [queue addOperationWithBlock:^{\n            int status = [GHTestRunner run];\n            if (status != 0) {\n                NSString *reason = [NSString stringWithFormat:@\"failed to test %d\", status];\n                @throw [NSException exceptionWithName:@\"TestFailure\" reason:reason userInfo:nil];\n            }\n            done = YES;\n        }];\nwhile( !done ) {\n    [[NSRunLoop currentRunLoop] runUntilDate: [NSDate dateWithTimeIntervalSinceNow: 5] ];\n}\n\n}\nreturn self;\n}\n\n\n@end\nint main(int argc, char *argv[])\n{\n    @autoreleasepool {\n        return UIApplicationMain(argc, argv, @\"MyUIApp\", @\"GHUnitIPhoneAppDelegate\");\n    }\n}\n```\n. ",
    "barumrho": "Has anyone tried this? http://stackoverflow.com/questions/12557935/xcode-4-5-command-line-unit-testing/14395861#14395861\nI just tried it and it seems to work. I just wasn't sure why kind of side effect it may have.\n. ",
    "gardner": "This is still an issue with Xcode 4.6 after following the directions to enable GHUnit from the command line.\n. ",
    "RoCry": "@gardner \nOnly if I make the sdk 5.* will work fine...\nlike this:\nGHUNIT_CLI=1 xcodebuild -scheme GHTest -configuration Debug -sdk iphonesimulator5.1 -workspace THE_NAME.xcworkspace clean build\n. ",
    "smoynes": "I have used the code from @jmoody in his comment https://github.com/gabriel/gh-unit/issues/96#issuecomment-12881447 and it works for me on Xcode 4.5 with SDK 6.1 in both the simulator and on the command line.\n:thumbsup: \n. ",
    "bigpin": "i also have this problem.\nwho can fix it?\ni have tried a lot but it does not worked.\n. ",
    "jayztemplier": "+1, have this problem too... any fix?\n. ",
    "stanislaw": "It seems that mainly Pods/GHUnitIOS/Libraries/GTM code causes the problems.\nIts repo on google code seems to be very outdated: http://code.google.com/p/google-toolbox-for-mac/source/list.\nI myself don't have time to dive into GHUnit and GTM internals, so let's wait for this to be reviewed by the maintainers.\n. @gabriel, thanks! Is there any additional information we can provide you with?\n. I didn't notice in time that you had fixed it. Thanks!\n. I see that you have removed GHMockCLLocationManager.m - the error is gone. Thanks!\n. ",
    "barty82": "Thank you Djiko! I was looking for the solution of same problem!\nNow it works great!\n. ",
    "pau151": "I resolved this issue by adding following code to RunTests.sh file\nexport LD_LIBRARY_PATH=\"$TEMP_FILES_DIR/iPhone Simulator User Dir/Library/Caches\"\nif [ -d \"$LD_LIBRARY_PATH\" ]; then\nrm -rf \"$LD_LIBRARY_PATH\"\nfi\nmkdir -p \"$LD_LIBRARY_PATH\"\nIt creates a cache folder in build folder and use it to save downloaded images\n. This happens when test cases fails \nFixing the broken tests does the trick.\n. To resolve it :\nCopy your file in Public folder of Dropbox. It is not secured, hence use http. and the test runs smoothly.\n. ",
    "dak12": "Hi drekka\nI am still facing this issue.\nI have XCode 4.6.1 and have GHUnit 0.5.6.\nThere is a simple test to verify addition of 2 numbers. But I always see the test passing even if its supposed to fail.\nHere is the test\n- (int)sumA:(int)a B:(int)b\n  {\n  return a + b;\n  }\n- (void)testsumAB\n  {\n  int a = 2;\n  int b = 3;\nNSLog(@\" a + B = %x\", [self sumA:a B:b]);\n  GHAssertEquals([self sumA:a B:b], (a+b+1) , @\"sumA:B: should return the sum of a+b\");\n  }\nIn above test method should return 5 and we are comparing it with 6. Hence test should fail.\nAny idea \nThanks\ndak\n. ",
    "edwardaux": "Any chance this can be merged please?  Without it, you can't even compile GHUnit framework on Mac OS X.  Thanks.\n. In case anyone else is using GHUnit as a submodule (like I am), a relatively easy workaround is to checkout commit 9ce2ca.  This is the last commit prior to the introduction of this problem.\n. ",
    "priyatech": "I get the same error GHUNIT_CLI=1 xcodebuild -target UnitTests -configuration Debug clean build\nUsing Xcode 5 iOS 7 iphone 5\n. ",
    "neugebap": "No, because Apple recommended using the device for bluetooth testing since iOS7.\n. ",
    "groomsy": "Interesting thing I found: If I launch Xcode once and run tests through the simulator once, subsequent CLI tests are normal speed on what I'm seeing locally. It's an odd thing. I'm not sure if it's some memory related issue that gets cleared when running the tests through the simulator once or some setup after a cold boot or something. It's an interesting problem.\nWe are using Bamboo for CI at the moment. I'll keep everyone updated if I discover anything else.\n. I haven't seem it lately. I think this may be in my environment though. So you may disregard this issue for now. If I can narrow down what is causing it and can prove that it's GH, I'll reopen or open a new issue.\nSent from my iPhone\n\nOn Oct 30, 2013, at 4:42 AM, Felix Schulze notifications@github.com wrote:\nIs the problem still present?\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "fredfoc": "We encountered the same kind of error and the fact that using resetContext for CoreData inside the - (void)tearDown method was causing the error.\nMaybe it can help.\nRegards.\nFred.\n. Well resetContext do not really exist in CoreData FW. I'm so used to our dev that I thought it was inside :-).\nResetContext does this :\n```\n- (void)resetContext\n{\n    NSError error = nil;\n    NSURL storeURL = [[Utils applicationDocumentsDirectory] URLByAppendingPathComponent:@\"ARE.sqlite\"];\nif([[NSFileManager defaultManager] fileExistsAtPath:storeURL.path])\n{\n    [[NSFileManager defaultManager] removeItemAtURL:storeURL error:nil];\n}\n\n_persistentStoreCoordinator = [[NSPersistentStoreCoordinator alloc] initWithManagedObjectModel:_managedObjectModel];\nif (![_persistentStoreCoordinator addPersistentStoreWithType:NSSQLiteStoreType configuration:nil URL:storeURL options:nil error:&error])\n{\n    abort();\n}\nif (_persistentStoreCoordinator)\n{\n    _managedObjectContext = [[NSManagedObjectContext alloc] init];\n    [_managedObjectContext setPersistentStoreCoordinator:_persistentStoreCoordinator];\n}\n[self commit];\n_currentActe = nil;\n\n}\n```\n. Well it appears that this line :\n[_saveMOC.persistentStoreCoordinator removePersistentStore:store error:&error];\nis creating a random error. Sometimes it works and sometimes not.\nIt sounds like Coredata does not have enough \"time\"...\nSo far I'm avoiding any sort of reset (in teardown and/or in setup) and will try to empty the database by hand...:-(\n. Supposedly MagicalRecord could be a solution (I started a test but still not sure it's a good solution).\nOn the other end why should we integrate CoreData in our Unit Tests. We should mock it's reactions no ?\n. In our case MagicalRecord did the trick. All attempt to use context reset\nand/or to create/delete sqlite file on the system was crashing the build on\nJenkins with this XPC error.\n2013/11/24 Joshua Moody notifications@github.com\n\nlatest Xcode DP - my migrations now complete without crashing, but i find\nsome very interesting log output:\nClass _NSZombie__UIBackgroundTaskInfo is implemented in both ?? and ??. One of the two will be used. Which one is undefined.\nCan't endBackgroundTask: no background task exists with identifier 1, or it may have already been ended. Break in UIApplicationEndBackgroundTaskError() to debug.\nCan't endBackgroundTask: no background task exists with identifier 2, or it may have already been ended. Break in UIApplicationEndBackgroundTaskError() to debug.\nOK (1.733s)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/gh-unit/gh-unit/issues/141#issuecomment-29167558\n.\n. \n",
    "bobooooo": "-arch i386\n. ",
    "wilsolutions": "Hi, pls, I am wondering to know when it will be merged.\ntkx\n. ",
    "lucianboboc": "Thanks.\n. ",
    "ykokw": "I use the GHUnitIOS.framework of v0.5.8, I know that fat file does not contain the arm64 architecture .\n$ lipo -info GHUnitIOS.framework/Versions/Current/GHUnitIOS\nArchitectures in the fat file: GHUnitIOS.framework/Versions/Current/GHUnitIOS are: armv7 armv7s i386\n. ",
    "nacho4d": "Travis says there is an error but it is because of the command brew install appledoc not because of these changes.\n. Thanks!\n. I have rebased the branch, now it is fine :)\n. ",
    "Rosepotato": "@pjechris I also meet this issue using xcode 5.1.1. Have you solved this issue? Can you tell me the solution?\n. ",
    "pjechris": "@Rosepotato What I found is that when you run \"<path_to_proj>/build/Tests.app/Tests\" -RegisterForSystemEvents you get Library not loaded: /System/Library/Frameworks/xxx error multiple times\nI managed to fix them on my computer but don't really know how so I'm still stuck with those issues on my CI server\nBut that was definitely not a GHUnit bug\n. ",
    "bjrara": "problem solved. Nothing to do with GHUnit. The problem is caused by that I autoreleased the object when first created in another method, and didn't retain it in the dispatch_once block. for more information on whether we shall autorelease the object in dispatch_once block, please refer to: http://stackoverflow.com/questions/21039244/does-an-object-alloc-inited-in-a-dispatch-once-block-have-to-be-autorelease-in-n\n. ",
    "xplatsolutions": "Hi,\nThanks for the quick answer. GRUnit contains the fix? I will give it a try.\nHmmm, but I have added the .m files to the compile sources.\nCocoapods contain the fix or I have to download source and build the framework?\n. New one, just installed the gem again and run the command to install it in the project.\n/Library/Ruby/Gems/2.0.0/gems/ghunit-1.0.5/bin/ghunit:18:in block in <top (required)>': undefined methodbanner' for main:Object (NoMethodError)\n    from /Library/Ruby/Gems/2.0.0/gems/slop-4.0.0/lib/slop/options.rb:33:in initialize'\n    from /Library/Ruby/Gems/2.0.0/gems/slop-4.0.0/lib/slop.rb:24:innew'\n    from /Library/Ruby/Gems/2.0.0/gems/slop-4.0.0/lib/slop.rb:24:in parse'\n    from /Library/Ruby/Gems/2.0.0/gems/ghunit-1.0.5/bin/ghunit:17:in'\n    from /usr/bin/ghunit:23:in load'\n    from /usr/bin/ghunit:23:in'\nGHUnit and GRUnit.\n. OK, it is installed properly and it looks you can run the sample test case.\nNow Trying to bring my project's files to test them I get the undefined symbols again. Should I add my files to the compile sources of the Tests target?\n. ghunit sync -n ProjectName didn't work but adding the files to the target did the job.\n. "
}