{
    "leonerd": "I believe 992782b9f527f2c2cec083a46d4035d1a6e3673e should fix it. Now covered by unit tests also.\n. Migrated to JIRA https://matrix.org/jira/browse/SPEC-46\n. Migrated to JIRA https://matrix.org/jira/browse/SPEC-46\n. LGTM\n. LGTM\n. Oops; against wrong branch. See pull/17\n. Oops; against wrong branch. See pull/17\n. Oh - that's likely an error on my part. It should be fetching a pagin_config from somewhere. I'll pop it in\n. Oh - that's likely an error on my part. It should be fetching a pagin_config from somewhere. I'll pop it in\n. PTAL\n. PTAL\n. Presumably though if/when we add a Websockets-based API that'll be on v2 or later; the only v1 API that exists is REST-based.\n. Test added at https://github.com/matrix-org/sytest/commit/c2a1f5ee4106c366bd4d21be24ab9468fda75fbf\n. LGTM\n. Erik is assigned, but as the author of the original presence code, LGTM\n. Erik is assigned, but as the author of the original presence code, LGTM\n. FYI, this may also be the synapse bug alluded to by SYT-34\n. This is tested by sytest commit 1146c0a\n. LGTM\n. @illicitonion Working On It (https://github.com/matrix-org/sytest/tree/paul/federation)\n. You seem to have lost the if not is_guest: test - is that intentional?\n. LGTM\n. I don't think the debian build tools support any sort of cross-compiling, so I suspect building for ARM would require actually having some ARM boxes for us to build on. That's something we don't have easy access to in our infrastructure.\nHowever, most of the dependencies are pure python, so the \"all\" builds for those should work fine. For the remaining few packages that are platform-specific binary, you could always grab our upstream source (using apt-get source) then build the package locally (using debuild -b -uc)\n. > We're currently working on a tool which will check that servers are set up correctly for federation, which might help.\nFor now at least, you can try the commandline tool:\n$ cpan App::MatrixTool\n$ matrixtool server-key your.server.name.here\nIf that can see the server keys correctly then federation is probably working. If not, follow up on what failed.\nTry also whether matrix.org can see it\n$ matrixtool notary your.server.name.here matrix.org\n. Because /proc/self/stat has a bunch of other metrics we want that rusage doesn't give us anyway\n. > I think at this point all the globals should be wrapped up into an actual class or split out into a separate module (or both)\nYes, perhaps I'll pull the lot out into a separate ProcessMetrics class - is here in this file OK or put it in a new one?\n. Actually turned out that moving it into a new file was easier/neater than into a separate class within the same file.\n. Three Jenkins failures appear unrelated. A single flakey test looks like:\n408 - Can add global push rule for override\n. One test failed, appears that the test server just never started so the test timed it out. All the other tests appear happy, so I'll merge it.\n. Actually I think this is a far more general issue than relating to sync. It appears that synapse doesn't let you alter displayname / avatar_url in a member event at all. E.g. I just tried it:\n$ matrixtool client -u @telegrambot:localhost:8080 -U @telegram_115630664:localhost:8080 \\\n  json /_matrix/client/r0/rooms/'!'jCzGkzsQCMTIIlhWAV:localhost:8080/state/m.room.member/@telegram_115630664:localhost:8080 \\\n  '{\"avatar_url\":null,\"displayname\":\"My name here\",\"membership\":\"join\"}'\n{\n   \"event_id\" : \"$14852784770hbJNl:localhost:8080\"\n}\n\n$ matrixtool client -u @telegrambot:localhost:8080 \\\n  json /_matrix/client/r0/rooms/'!'jCzGkzsQCMTIIlhWAV:localhost:8080/state/m.room.member/@telegram_115630664:localhost:8080\n{\n   \"avatar_url\" : null,\n   \"membership\" : \"join\",\n   \"displayname\" : null\n}. Now fixed by PR #1852 . I admit it's probably a bit late now, but is there any reason why\n\n\n{\"joined\": {\"@bar:example.com\": { \"display_name\": \"Bar\", \"avatar_url\": null }}}\n\nthe toplevel key is joined? This is neither the last component of the URI (joined_members), nor is it the actual membership string value (which would be join).. blank line\n. Types; these are both (UserID)\n. Types; these are both (UserID)\n. Needs blank line above\n. Needs blank\n. \"from a given remote domain\" - just to emphasise that the updates come from the remote, and it's definitely remote and not local.\n. ITYM .get(key, None) ?\n. Uh nevermind... Though maybe put that as default anyway to not confuse the next person? ;)\n. Maybe add a fallthrough \"return None\" to make explicit what happens on a cache miss?\n. Wants a small docstring to explain what it does. Maybe a small description of the different semantics of pending, next and prev dicts, as that is slightly subtle.\n. Move the docstring up to the \"public facing\" non-_-prefixed method\n. I copied it from other examples in the file, but yes I agree your line is neater.\n. Done 2a91799\n. Done 2a91799\n. Well this is half the point. The exact set of field names is only determined based on the protocol name. If we wanted, I suppose we could keep a list of all our known protocol names and with them, the sets of field names. At some point we'll be wanting that. That leads into the \"metadata\" issue mentioned at\n  https://docs.google.com/document/d/13NGa46a_WWno-XYfe8mQrglQdtOYMFVZtxkPKXDC3ac/edit#heading=h.e719bo6c156i\n. Have added an enumeration-style type as an extra argument. See b515f84\n. More logging added, and also moved into the ApplicationServiceApi class, where arguably it belongs (as IRL'ed). Done 6520163\n. I don't know whether it would be better to add a get_protocols() method just to make this more obvious\n. A good point. We might as well move the constants into api.constants and rely on values directly.\nDone 9459137\n. Done f25d74f\n. Adjusted wording f25d74f\n. Have moved type-testing code into AS API ed44c47\n. Also log if rejecting  776594f\n. Done 6453d03\n. ",
    "manuroe": "Fixed in 3bfffab2011262b21e1ae24250d88788477aa32e\n. Should be summary = {}, the default value used for other keys.. This seems to not handle the case of an initial sync where batch.events may contain no membership events.. ",
    "ara4n": "Mmm, this would be really nice.  Right now we do have early support for defining per-user presence lists seperate from rooms, but totally agreed that having arbitrary UNIX-group style lists that can then be used for ACLs, Presence, etc would be really nice.\nLeo: how would this fit with the current presence-list management?\n. 1. synapse/federation/replication.py:887\n2. Hmm. don't we then lose the type safety of Table? i'm confused as to what this buys us, and given the rest of transactions.py is using the Table API, i don't particularly want to create an inconsistent mess there.\n3. Done.\n4. Done, plateauing at hourly retries worst-case.\n5. Hmm. I'd rather fix this by actually trying transactions properly, rather than the previous bruteforce \"retry all HTTP requests 5 times with exponential backoff, no matter what state the host is in\", which was contributing significantly to the log and CPU spikes on the federation code.\n. 1. I've pep-8'd my stuff, although I detest the 79 character limit and strongly suspect we should use 120 or so instead to avoid spending our lives splitting lines for the sake of it.\n. sorry; i called out the wrong place - i meant to say synapse/handlers/federation.py:211.\nOkay, have turned on the per-request retry logic again.  Although I'd still like us to not blindly retry at all levels but just have one well defined place where we actually perform reliability (i.e. the txn layer) in future.\nThe reason we picked 120 columns for the MX Telecom code style was, ironically, that it let you edit two files side by side on monitors and IDEs...\n. *most monitors and IDEs (i.e. my 17\" MBP and CDT :D)\n. OSX ships with its own (ancient) version of Twisted, iirc.  So I assume \nthe problem here is that the correct dependency wasn't pulled in... or \nthat the local-installation one isn't trumping the system one.  As Erik \nsays, we'll need to know how you tried to install it.\n(Erik: this may be a mismatch between telling people to install directly \nvia pip, rather than cloning and then using setup.py)\n. Okay, so the problem here is indeed that synapse is picking up the system pyOpenSSL (0.13.1) installed in /System rather than the one that should have been installed into ~/Library/Python/2.7/lib/python/site-packages/pyOpenSSL-0.14-py2.7.egg by python setup.py develop --user.\nCan you please paste the results of:\n\nimport sys\nprint sys.path\n\n...and ls ~/Library/Python/2.7/lib/python/site-packages/pyOpenSSL*\nthanks - and sorry for the hassle with this.  I'm assuming there's some bad interaction between pip & setup.py on yosemite that we're about to discover...\n. I'm not sure how this is possible, but somehow your local python libraries don't seem to be on your python path.  if you export PYTHONPATH=$HOME/Library/Python/2.7/lib/python/site-packages then hopefully python will start picking up the right libraries!\n. oh, i lie - the local libraries /are/ there, but the order is wrong; the system ones are taking priority hence the clashing version. again, setting PYTHONPATH should hopefully fix this.\n. Great. We are just fixing the pip/setuptools discrepancy (http://matrix.org/jira/browse/SYN-219).\nM\n. ...and have updated the doc for this particular issue as https://github.com/matrix-org/synapse/commit/80e89772.\n. LGTM.\nMy only reservation is over how to use it.  We can modify the clients to use their local HS to generate identicons for users without avatars, but this should surely be a poweruser feature for users who really want to override the avatars they see, otherwise different users will see a very inconsistent view of the world. \nFor the common case, we just want to specify a default avatar for new users on their local server - and this avatar should be viewed consistently.  We don't want to encourage clients to invent their own avatars for users.  So I'd suggest that we mainly use this API during signup to encourage clients to pick a default identicon if they don't specify an explicit avatar - which is then shoved into mxc:// and replicated everywhere via that.\nMeanwhile we can also separately override the default profile image in the webclient to use the API - but this should not be the common case behaviour.\n. lgtm\n. lgtm\n. why isn't an access_token enough to create a room? and why is it a problem if the AS is the creator?\n. why isn't an access_token enough to create a room? and why is it a problem if the AS is the creator?\n. not from me - let's merge and even release it for folks to play with!\n. not from me - let's merge and even release it for folks to play with!\n. yeah, script needs to be more generic; will fix\n. yeah, script needs to be more generic; will fix\n. was more worried about the synapse....\n. was more worried about the synapse....\n. cough\n. cough\n. jenkins is happy now, so going with erik's lgtm.\n. jenkins is happy now, so going with erik's lgtm.\n. @Osndok - we reconsidered; JIRA is dead; all the bugs live on Github forever more.  Closing this one up!\n. @Osndok - we reconsidered; JIRA is dead; all the bugs live on Github forever more.  Closing this one up!\n. well, i can't see any typos, and the logic /seems/ to just be error handling (and switching that for loop into a deferred loop).  If it didn't blow up on arasphere, then, um, LGTM? :/\n. do we also need to clean up stale pycs?\nOn 17/02/2015 11:26, Mark Haines wrote:\n\nLGTM\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/matrix-org/synapse/pull/75#issuecomment-74653685.\n. It would be really useful if we could check a state event for a room to see the list of allowed domains this room is allowed to federate with... Stefan is asking for this for instance, and it's pretty much a blocker on any serious enterprise use. Appreciated that it's feature creep, but whilst we're implementing a can_send_to, it seems like we could kill two birds with one stone?\n. +1 to dave\nOn 20 Feb 2015, at 11:35, David Baker notifications@github.com wrote:\nIf it's just a question of adding an \"if login_type != LoginType.APPLICATION_SERVICE\" and moving the code by a few lines, I think this would make this much more useful and less confusing.\n\u2014\nReply to this email directly or view it on GitHub.\n. common sense trumps line length on pep8 imo.\n. lgtm - thanks.\n. why do we want to stop --generate-config from being able to automatically add new config options? having the ability to autoupgrade folks' configs seemed like quite a nice way to avoid sysadmins having to manually port in new config changes, which can get tedious fast...\n. @glyph :) Twisted has served us pretty well - thank you for creating it!\n\nThat said, we have been bitten pretty badly by https://twistedmatrix.com/trac/ticket/4362 (lack of IPv6 resolver for Agent) though - many people dismiss Matrix because of not supporting IPv6 for federation.  If there is anything that can be done here we would owe you eternal thanks... O:-)\n. i suggest:\n- event name: m.room.history_visibility\n- event key: history_visibility # for consistency with the event name\n- event value:\n  - public: anyone can see it, whether they're in the room or not (starting from the point where this is set)\n  - shared: currently joined members can see all history (starting from the point where the event is set)\n  - private: currently joined members can see history from the point they joined.\nWhat is the powerlevel name you need to set this?\n. i suggest:\n- event name: m.room.history_visibility\n- event key: history_visibility # for consistency with the event name\n- event value:\n  - public: anyone can see it, whether they're in the room or not (starting from the point where this is set)\n  - shared: currently joined members can see all history (starting from the point where the event is set)\n  - private: currently joined members can see history from the point they joined.\nWhat is the powerlevel name you need to set this?\n. by putting this in unsigned does it make it vulnerable to spoofing and phishing?\n. by putting this in unsigned does it make it vulnerable to spoofing and phishing?\n. > Is this added to the specification?\n\nDo we have tests in sytest for it?\nNo.\nChanges to serverside APIs need to be documented in the spec, even if they are a stopgap until a v2 API (and marked as such), as otherwise client developers (internal or external) have no hope of implementing them consistently. We should never expect client developers to read the synapse source code or comments on PRs to understand an API.\n\nLess important, but we should certainly be adding tests whenever we add an API.\nPlease can this PR get finished, given it's been hanging around for over two weeks, so that client developers can get on and implement the functionality clientside? The point of these serverside quick fixes is to unblock clientside features; not to cut corners.\nPlease correct me if I'm reading this wrong.\n. > Is this added to the specification?\n\nDo we have tests in sytest for it?\nNo.\nChanges to serverside APIs need to be documented in the spec, even if they are a stopgap until a v2 API (and marked as such), as otherwise client developers (internal or external) have no hope of implementing them consistently. We should never expect client developers to read the synapse source code or comments on PRs to understand an API.\n\nLess important, but we should certainly be adding tests whenever we add an API.\nPlease can this PR get finished, given it's been hanging around for over two weeks, so that client developers can get on and implement the functionality clientside? The point of these serverside quick fixes is to unblock clientside features; not to cut corners.\nPlease correct me if I'm reading this wrong.\n. I suggest waiting until the spec patch has landed to merge this PR in case spec review shows up anything, although it doesn't matter that much either way. My point was more that we shouldn't consider the job complete until it's specced. Also, having spec to refer to might help review of this PR.\n. I suggest waiting until the spec patch has landed to merge this PR in case spec review shows up anything, although it doesn't matter that much either way. My point was more that we shouldn't consider the job complete until it's specced. Also, having spec to refer to might help review of this PR.\n. lgtm\n. lgtm\n. lgtm, although might it be nice to postpend the version number anyway, to avoid people customising the UA for vanity and stopping us from being able to see in logs etc what version they're running?\n. lgtm, although might it be nice to postpend the version number anyway, to avoid people customising the UA for vanity and stopping us from being able to see in logs etc what version they're running?\n. I'm not sure I follow the rationale here... is it just to make the back-off less aggressive?  What does the random factor actually achieve (given we don't have thundering herd problems here)?\nThe actual bug we've been seeing are fast-retries on trying to talk on tarpitted servers on federation - this is easily seen on matrix.org.  Shouldn't we be fixing whatever that bug is rather than tuning the benign behaviour?   I assume I'm missing something...\n. This is a bit tricky - we don't want to point people by default to Vector, as vector isn't a \"reference\" client and we don't want to arbitrarily favour any given Matrix client.  Instead we should either make a new neutral reference client or just point people to http://matrix.org/blog/try-matrix-now so they can pick their own.  Will have a think.  Thanks for the PR though.\n. The plan for shiny is the matrix.to domain - eg http://matrix.to/#matrix:matrix.org would both be a neutral way to list all the known clients and optionally jump to a room or user.\n\nOn 6 Nov 2015, at 09:54, wldhx notifications@github.com wrote:\nI see. The second option is probably better for now because of its simplicity. Also, considering 'shiny' is relevant: it'd be nice to have https://try.matrix.org or something like this.\n\u2014\nReply to this email directly or view it on GitHub.\n. Probably/hopefully a few weeks away.  In the short term I've resolved this issue by pointing to the try-matrix-now page, so will close off the PR.  Thanks for bringing attention to the issue here! :)\n. awesome - thanks! :)\n. From first glance your sqlite is very old - and synapse relies on at least 3.8.something for full text search features such that search works. Can you upgrade it?\n. great - thanks :)\n. thanks! :)\n. This will fix vector-im/vector-web#346\n. awesome, thanks!\n. awesome, thanks!\n. looks sensible to me from cursory check. thanks.\n. looks sensible to me from cursory check. thanks.\n. great - many thanks for this! :) technically the PR should be against the develop branch but given it's trivial i'll land it here and merge to develop later\n. great - many thanks for this! :) technically the PR should be against the develop branch but given it's trivial i'll land it here and merge to develop later\n. This breaks the ability for the IRC ASes on matrix.org to interact with users directly, as none of their AS users are actually registered as users.  I've backed it out manually on matrix.org to unbreak the bridges.\n. This breaks the ability for the IRC ASes on matrix.org to interact with users directly, as none of their AS users are actually registered as users.  I've backed it out manually on matrix.org to unbreak the bridges.\n. Before merging this, we should update the spec to actually articulate what's allowed to go into an invite and not.  Agreed that it'd be nice to have this extensibility, but want to do so without creating a spam vector or encouraging fragmentation.  Created a https://matrix.org/jira/browse/SPEC-357 spec bug first.\n. your YAML config is not valid YAML: you need to quote the password string as \"*Syn@pse#\".\nOn 18 Mar 2016, at 09:21, souvikbhattacharyas notifications@github.com wrote:\nHi, \nwhen I am trying to setup matrix with postgress I am facing below error, though I am able to run matrix through sqllite.\nCommand: python -m synapse.app.homeserver --report-stats=no -c homeserver.yaml -c db.yaml\ndb.yaml:\ndatabase:\nname: psycopg2\nargs:\nuser: matrix\npassword: *Syn@pse#\ndatabase: synapse\nhost: 172.17.0.2\ncp_min: 5\ncp_max: 10\nError :\nTraceback (most recent call last):\nFile \"/usr/lib/python2.7/runpy.py\", line 162, in run_module_as_main\n\"__main_\", fname, loader, pkg_name)\nFile \"/usr/lib/python2.7/runpy.py\", line 72, in run_code\nexec code in run_globals\nFile \"/usr/local/lib/python2.7/dist-packages/synapse/app/homeserver.py\", line 746, in \nmain()\nFile \"/usr/local/lib/python2.7/dist-packages/synapse/app/homeserver.py\", line 741, in main\nhs = setup(sys.argv[1:])\nFile \"/usr/local/lib/python2.7/dist-packages/synapse/app/homeserver.py\", line 360, in setup\ngenerate_section=\"Homeserver\"\nFile \"/usr/local/lib/python2.7/dist-packages/synapse/config/base.py\", line 310, in load_config\nyaml_config = cls.read_config_file(config_file)\nFile \"/usr/local/lib/python2.7/dist-packages/synapse/config/_base.py\", line 129, in read_config_file\nreturn yaml.load(file_stream)\nFile \"/usr/local/lib/python2.7/dist-packages/yaml/__init.py\", line 71, in load\nreturn loader.get_single_data()\nFile \"/usr/local/lib/python2.7/dist-packages/yaml/constructor.py\", line 37, in get_single_data\nnode = self.get_single_node()\nFile \"/usr/local/lib/python2.7/dist-packages/yaml/composer.py\", line 36, in get_single_node\ndocument = self.compose_document()\nFile \"/usr/local/lib/python2.7/dist-packages/yaml/composer.py\", line 55, in compose_document\nnode = self.compose_node(None, None)\nFile \"/usr/local/lib/python2.7/dist-packages/yaml/composer.py\", line 84, in compose_node\nnode = self.compose_mapping_node(anchor)\nFile \"/usr/local/lib/python2.7/dist-packages/yaml/composer.py\", line 133, in compose_mapping_node\nitem_value = self.compose_node(node, item_key)\nFile \"/usr/local/lib/python2.7/dist-packages/yaml/composer.py\", line 84, in compose_node\nnode = self.compose_mapping_node(anchor)\nFile \"/usr/local/lib/python2.7/dist-packages/yaml/composer.py\", line 133, in compose_mapping_node\nitem_value = self.compose_node(node, item_key)\nFile \"/usr/local/lib/python2.7/dist-packages/yaml/composer.py\", line 84, in compose_node\nnode = self.compose_mapping_node(anchor)\nFile \"/usr/local/lib/python2.7/dist-packages/yaml/composer.py\", line 133, in compose_mapping_node\nitem_value = self.compose_node(node, item_key)\nFile \"/usr/local/lib/python2.7/dist-packages/yaml/composer.py\", line 69, in compose_node\n% anchor.encode('utf-8'), event.start_mark)\nyaml.composer.ComposerError: found undefined alias 'Syn'\nin \"db.yaml\", line 5, column 19\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. this looks plausible to me, but i'm hardly a twisted expert.\n. We have higher priorities currently but patches to add additional auth mechanisms are vey welcome :)\nOn 27 Mar 2016, at 19:14, simsasaile notifications@github.com wrote:\nHi,\nI am just experimenting with synapse, and it looks quite promising.\nJust one questing: Is LDAP-Support planned?\nCheers, Simsa\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. incorporate all the PR feedback - @NegativeMjark PTAL\n. @NegativeMjark addressed these too, and now throwing sensible exceptions. PTAL\n. @NegativeMjark thanks - anything else?\n. lgtm, thanks for fixing it up for me; apologies that it got lost during the main vec delivery.\n. erik: of all people i thought you'd appreciate a good cat meme...\nOn 9 May 2016, at 10:21, Erik Johnston notifications@github.com wrote:\nThanks!\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. this seems really weird - surely GCs can be very costly with lots of objects, especially for the higher generations?  Why would you want to run it on every reactor tick?  Wouldn't it be better to bump up the GC thresholds and just have the machine stop the world to GC once every few hours or whatever?\n. this seems really weird - surely GCs can be very costly with lots of objects, especially for the higher generations?  Why would you want to run it on every reactor tick?  Wouldn't it be better to bump up the GC thresholds and just have the machine stop the world to GC once every few hours or whatever?\n. okay... but what is the rationale for doing so? (aka where are the comments?)\n. okay... but what is the rationale for doing so? (aka where are the comments?)\n. aaah! makes much more sense - thanks :)\n. aaah! makes much more sense - thanks :)\n. @dbkr: all yours now.\n. thanks!\n. hadn't spotted broken sytests - are you asking for them to be written, or are there existing disabled broken ones?\n. yes, this fixes the SYN-611 bugs.\n. lgtm. doh.\n. lgtm\n. what's the rationale here?\n. lgtm - thanks :)\n. Looks like we only have releases currently for:\n\njessie\nsid\nstable -> jessie\nstretch\ntesting -> stretch\ntrusty\ntrusty-unstable\nunstable -> sid\nvivid\nwheezy\nwily\n...so no xenial yet.  @erikjohnston - how easy is it to add new ubuntus?\n. The error you've pasted here is just saying that the script is failing \nto connect to your synapse instance in order to register the user.  The \nthing you should be looking at is the error which is stopping synapse \nfrom running.\n. was this trying to use non-ascii characters in the password?\n. Validation emails are done by sydent.  If you're not running a sydent \nand aren't using vector.im or matrix.org's one, then just leave the \nemail address blank for now.  If you're using vector.im or matrix.org's \nsydents then PM me the email address (@ matthew:matrix.org) and I see \nwhere the email went.\nOn 19/06/2016 22:37, killua-eu wrote:\n\nI'm not sure if this is a server or client problem so please excuse\nif this ticket is misplaced. Upon registering from vecor-web, i'm\ntold to continue registering by checking my e-mail. Nothing arrived\nin my mailbox (i tried several different mail providers).\nhomeserver.yaml enables registrations. Who's supposed to send the\ne-mails, vector or synapse? If synapse, do I have to setup an smtp\nserver for synapse and let it know about it in the homeserver.yaml,\nor does synapse contain a builtin mailer thats used? How can I debug\nthis further? Thanks in advance, P.\n\u2014 You are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/matrix-org/synapse/issues/885, or mute the\nthread\nhttps://github.com/notifications/unsubscribe/ABO_vWC0q9zsmVFvl2J-TNzxYwevqdL7ks5qNbaegaJpZM4I5QhD.\n. why did this merge into master and not develop ooi?\n. This is caused by matrix-org/matrix-appservice-verto#4 and matrix-org/matrix-appservice-verto#5.  call state is now reset.\n. is this just summing all the per-room notif counts? shouldn't we do this clientside rather than sending redundant data from the server?\n. is this just summing all the per-room notif counts? shouldn't we do this clientside rather than sending redundant data from the server?\n. how about doing a full sync but with everything filtered out? you'll still get the notif counts... also, why would you do this every few ms? isn't a blocking long poll good enough?\n. how about doing a full sync but with everything filtered out? you'll still get the notif counts... also, why would you do this every few ms? isn't a blocking long poll good enough?\n. If the notif count changes for a room (either up or down) it will be included in the /sync response. So the right way of doing this would be to just keep polling /sync with a 30 second timeout, filtering out all the events if you don't care about the specific data, and just summing the notif counts per room when they change.\nOn 16 Jul 2016, at 18:43, Kent Shikama notifications@github.com wrote:\nhow about doing a full sync but with everything filtered out?\nYeah that was our initial implementation doing this every few ms. It still made the log file bloat up quite a bit.\nA blocking long poll returns only the notification counts for a specific room (assuming it was a messaging event from that room). We could use a client side dictionary to add up notification counts but how will we decrement the count if a user read a room?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. If the notif count changes for a room (either up or down) it will be included in the /sync response. So the right way of doing this would be to just keep polling /sync with a 30 second timeout, filtering out all the events if you don't care about the specific data, and just summing the notif counts per room when they change.\nOn 16 Jul 2016, at 18:43, Kent Shikama notifications@github.com wrote:\nhow about doing a full sync but with everything filtered out?\nYeah that was our initial implementation doing this every few ms. It still made the log file bloat up quite a bit.\nA blocking long poll returns only the notification counts for a specific room (assuming it was a messaging event from that room). We could use a client side dictionary to add up notification counts but how will we decrement the count if a user read a room?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. okay. surprised that filtering out events damages the notif count for that room; feels like a bug. we'll have a think about the best approach here :)\nOn 16 Jul 2016, at 23:29, aoh0x7DE notifications@github.com wrote:\nThat's not quite how the filtering works. If all of a room's events for the current poll are filtered out, a change in the room's notif count will neither trigger the response nor cause the notification count to be included when the response is sent. As such, with or without the global count, we'll actually need to allow one event of every type that could change the number of notifications even though we're not interested in the event at all other than as a trigger for the response being sent.\nIn terms of summing the notif count per room, it's a possibility we considered, but I dislike it as a solution inasmuch as it requires the client to duplicate work being done by the server (i.e., keeping track of all rooms the user is in and their individual counts) and introduces the potential for some nasty errors should the client's model of what's going on diverge from the server's.\nWhether this should be part of /sync is debatable, since it is, as you say, somewhat redundant with the data already included and does also still require the client to ask for a bunch of events they're not really interested in to get the changes in real time, but I think having a clean and simple way to track the total number of unread notifications is something that should be in the API.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. lgtm modulo a test :)\n. Yup. the official bug for this is https://matrix.org/jira/browse/SYN-254\n. ...and now fixed on develop by #1696, we believe :). ...except apparently it's still broken on develop :(. @jython234 let us know how you get on :). readme-recommendation PR is https://github.com/matrix-org/synapse/pull/2088 ftr. and \\o/ for the system working. matrix-console has markdown, iirc - the command is /markdown. console is completely obsolete though - please use vector.im as an uptodate web client!\nOn 19 Aug 2016, at 21:14, Jonathan Duck notifications@github.com wrote:\nIf I were to create a pull request to have markdown formatting in the synapse web interface, what is the likelihood it would be merged? \ud83d\ude04\nThe only concern I could see is that it may make some unexpected formatting of normal text.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. matrix-console has markdown, iirc - the command is /markdown. console is completely obsolete though - please use vector.im as an uptodate web client!\nOn 19 Aug 2016, at 21:14, Jonathan Duck notifications@github.com wrote:\nIf I were to create a pull request to have markdown formatting in the synapse web interface, what is the likelihood it would be merged? \ud83d\ude04\nThe only concern I could see is that it may make some unexpected formatting of normal text.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. The main reason that the old matrix-angular-sdk is deprecated by matrix-react-sdk (on which Vector is built) is terrible performance problems with Angular, which would have necessitated a rewrite to fix. So we rewrote in React instead which has served us infinitely better.\n\nThere is nothing in Vector which should specifically pose problems on ARM - what are you seeing? Come complain in #vector:matrix.org :)\nM\n\nOn 20 Aug 2016, at 23:37, Jonathan Duck notifications@github.com wrote:\nThanks, I am having trouble with the vector.im interface because I'm trying to run it on an ARM CPU, but this resolves the issue. Closed.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. The main reason that the old matrix-angular-sdk is deprecated by matrix-react-sdk (on which Vector is built) is terrible performance problems with Angular, which would have necessitated a rewrite to fix. So we rewrote in React instead which has served us infinitely better.\n\nThere is nothing in Vector which should specifically pose problems on ARM - what are you seeing? Come complain in #vector:matrix.org :)\nM\n\nOn 20 Aug 2016, at 23:37, Jonathan Duck notifications@github.com wrote:\nThanks, I am having trouble with the vector.im interface because I'm trying to run it on an ARM CPU, but this resolves the issue. Closed.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. i'm going to close this as it's not the right solution, unfortunately, and i'm also not sure it's a massive problem.. i'm going to close this as it's not the right solution, unfortunately, and i'm also not sure it's a massive problem.. agreed. dup #1527 . agreed. dup #1527 . @dbkr, @erikjohnston: well, i need it, at least, so i'm going to merge it...\n. @dbkr, @erikjohnston: well, i need it, at least, so i'm going to merge it...\n. what clients are you expecting to be using this, btw?\n. thanks. i'm assuming the test failures are due to jenkins having a meltdown and going to merge.\n. thanks. i'm assuming the test failures are due to jenkins having a meltdown and going to merge.\n. ooh, interesting. thanks @pik - @erikjohnston, wdyt?\n. ooh, interesting. thanks @pik - @erikjohnston, wdyt?\n. the pagination stops prematurely otherwise. dave thought it was filtering out rooms with <15 people; i think that it was just never returning the final partial page of the results. empirically this patch fixes it, but i'm not sure the logic is right (and the len comparison is never going to succeed anyway :/)\n\nideally i'd like to get a fix onto matrix.org over the weekend so we can test the pagination and filtering properly before tuesday.\n. it seems plausible to be, and works against my local HS test jig. ship it? :S\n. The problems here are just failure to configure federation correctly - it's not a bug per se. I think we could be supporting it more productively though - eg by publishing a better guide or troubleshooting mechanism for it.\nUntil that point, please come to #matrix:matrix.org and don't leave until someone has helped you debug what's gone wrong.\n. MEANIE\n. the good news is that my synapse on cirrus is no longer spewing a huge stacktrace every few seconds.  but yes, @erikjohnston, please can we actually have some context to explain what's going on here?\n. Can you get a stacktrace from the core?  (find wherever openbsd has \ndumped the core, and open it with gdb -c core, and paste the output of \nbt?)\n. yup, for the trace to be useful you'll have to point it as a python with \ndebugging symbols.  The chances are high that it's crashed inside \nopenssl, which would also need debugging symbols to see what's going on.\nMy hunch is that you are probably on an old version of openssl which \ndoesn't have elliptic curve diffie hellman available, and we don't \nhandle that failure mode nicely.  What version is the lib, and can you \ntry running against a newer one?\nM\n. ah, of course, i guess openbsd uses libressl nowadays. however, I assume \nthat libressl and pyOpenSSL should play nice. it might still lack ECDH \nby default though :/\n. synapse is ~50,000 lines of python/twisted.  porting it to python 3 is \nlikely non-trivial, as twisted's support for python 3 is WIP, and \nswitching networking framework would constitute a rewrite.\nSo: we'll switch synapse to python 3 once we have time to go through \nporting all the existing code and once twisted is known to be stable \nthere.  I am not holding my breath.\nIf I were you, I'd use software based on how well it works rather than \nwhat language/framework it's written in...\nOn 27/09/2016 22:55, Fernandez, Chris, ReK2 wrote:\n\nI was going to try this.. but I hate the python split, and I am not \ninstalling old python2.* so saying this when are you guys going to \nfinally use python3? one of the reasons I never got into python is \nbecause all this fragmentation.. is silly\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/matrix-org/synapse/issues/1149, or mute the \nthread \nhttps://github.com/notifications/unsubscribe-auth/ABO_vTGunEWTXXfXHV0GIOj7OFXATA9Oks5quZDXgaJpZM4KIMwd.\n. Guest74897 just reported this too:\nthe packages hosted on your repo are signed with SHA1\nDebian and Ubuntu enforce SHA256 or higher entries in the Release and/or Packages files since March\nyeah - so basically users are unable to install or upgrade their matrix installations since march\nhere is the notice from the apt team: https://juliank.wordpress.com/2016/03/14/dropping-sha-1-support-in-apt/\nthe fix on your side is simple: you just need to pass --digest-algo SHA512 or --digest-algo SHA256 (or another SHA2 algorithm) to gpg when signing the file\n. this got solved - it was due to heavily bifurcated state events in the DAG.\n. the question remains though as to whether it's wise to put synapse in PyPI if a naive pip install matrix-synapse clashes with your system deps.... @erikjohnston, @NegativeMjark - eren in HQ noticed this and points out that it's a distinct vulnerability. is there any reason not to just turn it straight back on?\n. context: https://weakdh.org/sysadmin.html\n. We just had a minor disaster with this happening (the MXC URL was bridged to IRC, so redacting the content on Matrix was achieving nothing).  This should be trivial to fix.... I wonder whether a good enough compromise would be for HSes purge redacted data after a few days (Windows Recycle Bin stylee), albeit with the option of configuring the retention per HS.  The idea that sensitive data can be left visible to HS admins (and clogging up diskspace) indefinitely, after being redacted, feels undesirable and unintuitive.. I think @kyrias is looking at this currently.  If not, we'll get to it \nat some point soon although most of our synapse effort is currently \ngoing into next-generation homeserver work.\n. I think @kyrias is looking at this currently.  If not, we'll get to it \nat some point soon although most of our synapse effort is currently \ngoing into next-generation homeserver work.\n. @glyph - many thanks for the PRs here. we'll have a play with them in the morning!. fixed by the above and #1696. fixed by the above and #1696. going to keep discussion on this over at https://github.com/matrix-org/matrix-doc/issues/688. @dbkr did this!!!. @kyrias did this - thanks!. dup #1291. @erikjohnston can you remind me why we're not doing this?  Is it because /messages may get confused if you try to back-paginate from an initial /sync, and members suddenly pop into life who weren't even mentioned in the initial /sync response?. dup #1379. @richvdh - is this still a prob?. basically same as #1737. basically same as #1737. see matrix-org/matrix-doc#890. spec bug: https://github.com/matrix-org/matrix-doc/issues/612. So we have the admin API for purging history on a per-room basis, but we don't have a way of specifying maximum retention in general (or letting admins specify that).  Closing in favour of https://github.com/matrix-org/matrix-doc/issues/440 and https://github.com/matrix-org/matrix-doc/issues/447. probably dup of #1564. if not, too old to know what was going on.. for now it could just link to matrix.to. although i'd prefer it if we shipped a minimal matrix-react-sdk client so folks could just jump straight in.  (or that matrix.to supported a ?homeserver= style option so that at least the target clients then took you to talk to the right HS). please can we ditch it in favour of a link to matrix.to? See https://github.com/vector-im/riot-web/issues/2908 for example pain with the current setup.... probably related to #1737. see also https://github.com/matrix-org/matrix-doc/issues/698\n. well, it ain't farked any more so this is a bit moot :). (just wanted to confirm that properly digesting this is on our radar - @pik: thanks for the significant work here!). hi @pik - this continues to be on our radar. I think the best way to proceed is going to be to work on the proposal change to the spec first, and then evolve the implementation as required.  The workflow for this is to write a google doc proposal as per the ones hiding in https://drive.google.com/drive/u/0/folders/0B4wHq8qP86r2ck15MHEwMmlNVUk, and then we'll be able to review it properly there.  We use google rather than github for this as the review semantics (both commenting and 'suggesting') are quite a lot richer.. @pik: i've finally had a chance to properly read through this (the requirement for being able to retrospectively attach metadata to events is getting ever more urgent, especially for being able to upvote/downvote messages for moderation purposes).\n\nInitial thoughts are:\n * We should still move it to a googledoc if you're okay doing so.  I'll comment here until then however.\n * The idea of being able to define a freeform schema for the aggregation metadata is interesting.  We don't let users define schemas for events anywhere else; they're always defined out-of-band (i.e. in the swagger spec).  What is the advantage of defining a schema here?\n * How does it actually sum the aggregates? O:-)  In other words, if 100K users click 'like' on an event, do we then get 100K blobs in the aggregation_data field?  I'd expect to receive the sum instead.\n * How does it handle federation?\nThe approach of using separate tables to track the aggregations feels right overall however, and this is definitely a step in the right direction.  I'd be happy to help try to steer this through with you to get it merged!. huge thanks for this! i'll get it published :)  (cc @mectors ;D). closely related to #1553. lgtm - thanks :). lgtm - thanks :). webpush != desktop notifs, aiui (there is a separate bug for that).\nThe idea of having a custom push gateway (like @slp's go one) but using HTTP/2 as the transport is intriguing. i sympathise with Dave that it would overlap a lot with a hypothetical webpush flavour of the actual CS API - and for e2e encrypted notifs we may need to pull in more of the CS API than previously (especially as detecting notifs may have to happen clientside). My hunch is also that we should look at making synapse speak http/2 and use webpush for sync results (and add a filter to only sync notif-relevant data).\nDefinitely something to think about - we clearly need to overhaul push again.. lgtm. it sounds like @mweinelt addressed these issues in matrix-org/matrix-synapse-ldap3.. @kyrias has consolidated this into #1696, and we'll try to land it from there. thanks @glyph!!. @kyrias has consolidated this into #1696, and we'll try to land it from there. thanks @glyph!!. @kyrias has consolidated this into #1696, and we'll try to land it from there. thanks @glyph!!. @kyrias has consolidated this into #1696, and we'll try to land it from there. thanks @glyph!!. For the record: I had a brief IRL discussion with @erikjohnston and @NegativeMjark and others this morning about what we do about ipv6-only HSes.  Obviously we risk a major split-brain problem if some servers can't talk to others 'cos they're either ipv6 or ipv4 only.  For now, the suggestion is to mandate that servers expose ipv4 publicly (but if any given pair of servers happen to do ipv6 then they'll use it).  I guess this is the same semantics as email.  If anyone has any smarter solutions then we're all ears.. the multiple bind_addresses PR has ended up at #1709 - thanks @kyrias!\nDoing a quick review here, the only thing that screams out as being missing is to kick the dependency for https://github.com/matrix-org/synapse/blob/master/synapse/python_dependencies.py?  Otherwise I think I'm happy to merge this as an experimental feature (modulo random stylistic niggle). going to merge this and see what happens :D thanks again @glyph and @kyrias!. yup, this'd be great. just need someone to do it! the best way to do it would be to write a golang impl that proxied through to normal matrix HTTP, similar to https://github.com/matrix-org/matrix-websockets-proxy.  In future golang homeservers we could then merge the transport to speak directly too.. this LGTM, modulo the minor doc change.  annoying that the binding setup is copypasted over all the different workers though, but not your fault.... lgtm - going to merge and see what happens! thanks @kyrias!. On discussion with Dave, we've decided not to incorporate this with the work being done on https://github.com/vector-im/riot-web/issues/1903, as it's basically orthogonal.\nWhen we get 'round to do it, we probably want it to be a standalone verification microservice (e.g. another python+sqlite thing; call it sygnoff or something ;).  This could the be used both by the IS (whether centralised sygnal or a decentralised future thing) and by the HS as a general verification helper.\nSeparately, there's also the related issue of supporting 2FA during login (not signup or password reset): https://github.com/vector-im/riot-web/issues/2772.  It feels like this might want to also make use of the same hypothetical verification service produced by this bug.. this is the missing half of https://github.com/matrix-org/synapse/pull/1191. oops. lgtm - thanks!. lgtm other than 2 comments. It looks like you haven't installed the python dependencies in your \nvirtualenv, possibly because the install script crashed out halfway. \nTry running it again.\n. related to https://github.com/matrix-org/synapse/pull/1758?. filter changes apply to the api being used - either /sync (for realtime events) or /messages (for historical ones). changing filter in the middle of a sequence of syncing or scrollbacking won't cause you to suddenly see events from previous requests.. Yup. If you are syncing all rooms and then narrow the filter to sync a single room, you will discard events until you broaden the filter again. The solution is to remember the sync token at the point you narrow it, so if you subsequently want to rebroaden again you just start another sync sequence from that token with the wider (or inverse) filter.\n. A workaround for this landed in 0.18.6-rc1 in the form of #1725.  The root cause looks to be #1733.. this appears to be the 'linearizer lock'. can we shrink its granularity or otherwise get rid of it?. it's particularly perverse that if get_missing_events fails, we go get a state snapshot instead... having relinquished the lock. :(. Meanwhile, disroot.org->matrix.org is seeing the same misbehaviour right now:\n2016-12-30 14:27:39,465 - synapse.federation.transport.server - 138 - INFO - PUT-6389931 - Request from disroot.org\n2016-12-30 14:27:39,465 - synapse.http.server - 123 - INFO - PUT-6389931 - <XForwardedForRequest at 0x91c2a098 method=PUT uri=/_matrix/federation/v1/send/1483107686718/ clientproto=HTTP/1.1 site=8080> SynapseError: 429 - Too Many Requests\n2016-12-30 14:27:39,466 - synapse.access.http.8080 - 91 - INFO - PUT-6389931 - 178.21.23.139 - 8080 - {disroot.org} Processed request: 2ms (0ms, 0ms) (0ms/0) 80B 429 \"PUT /_matrix/federation/v1/send/1483107686718/ HTTP/1.1\" \"Synapse/0.18.6-rc1\". Right.  It looks like the 429s might be coming from the\n```\nThe maximum number of concurrent federation requests allowed\nfrom a single server\nfederation_rc_reject_limit: 50\n```\n...config option on the homeserver.  When #1733 kicks in, if we get more than 50 concurrent requests stacked up, the server will start 429ing new ones.  Given the requests can take hours/days to execute as per #1733, it gives the appearance of 429ing new ones from that server.. For disroot.org, it looks like this:\n2016-12-30 02:49:21,739 - synapse.federation.transport.server - 138 - INFO - PUT-3150741 - Request from disroot.org\n2016-12-30 02:49:21,742 - synapse.access.http.8080 - 91 - INFO - PUT-3150741 - 178.21.23.139 - 8080 - {disroot.org} Processed request: 4ms (0ms, 0ms) (0ms/2) 11B 200 \"PUT /_matrix/federation/v1/send/1483039212850/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 02:49:23,116 - synapse.federation.transport.server - 138 - INFO - PUT-3150869 - Request from disroot.org\n2016-12-30 02:49:23,118 - synapse.access.http.8080 - 91 - INFO - PUT-3150869 - 178.21.23.139 - 8080 - {disroot.org} Processed request: 3ms (0ms, 0ms) (0ms/2) 11B 200 \"PUT /_matrix/federation/v1/send/1483039212934/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 02:54:30,497 - synapse.federation.transport.server - 138 - INFO - PUT-3174290 - Request from disroot.org\n2016-12-30 02:54:30,508 - synapse.access.http.8080 - 91 - INFO - PUT-3174290 - 178.21.23.139 - 8080 - {disroot.org} Processed request: 12ms (0ms, 0ms) (2ms/3) 11B 200 \"PUT /_matrix/federation/v1/send/1483039212954/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 02:56:04,409 - synapse.federation.transport.server - 138 - INFO - PUT-3181447 - Request from disroot.org\n2016-12-30 02:56:04,443 - synapse.access.http.8080 - 91 - INFO - PUT-3181447 - 178.21.23.139 - 8080 - {disroot.org} Processed request: 35ms (0ms, 0ms) (20ms/3) 11B 200 \"PUT /_matrix/federation/v1/send/1483039212956/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 03:03:17,596 - synapse.federation.transport.server - 138 - INFO - PUT-3210817 - Request from disroot.org\n2016-12-30 03:03:17,599 - synapse.access.http.8080 - 91 - INFO - PUT-3210817 - 178.21.23.139 - 8080 - {disroot.org} Processed request: 4ms (0ms, 0ms) (0ms/2) 49B 200 \"PUT /_matrix/federation/v1/send/1483039212976/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 03:10:05,445 - synapse.federation.transport.server - 138 - INFO - PUT-3241402 - Request from disroot.org\n2016-12-30 03:11:07,323 - synapse.federation.transport.server - 138 - INFO - PUT-3245635 - Request from disroot.org\n2016-12-30 03:12:25,327 - synapse.federation.transport.server - 138 - INFO - PUT-3250887 - Request from disroot.org\n2016-12-30 03:14:35,309 - synapse.federation.transport.server - 138 - INFO - PUT-3259791 - Request from disroot.org\n2016-12-30 03:16:58,756 - synapse.federation.transport.server - 138 - INFO - PUT-3268750 - Request from disroot.org\n2016-12-30 03:19:03,568 - synapse.federation.transport.server - 138 - INFO - PUT-3277416 - Request from disroot.org\n2016-12-30 03:21:22,362 - synapse.federation.transport.server - 138 - INFO - PUT-3287568 - Request from disroot.org\n2016-12-30 03:23:26,122 - synapse.federation.transport.server - 138 - INFO - PUT-3295976 - Request from disroot.org\n2016-12-30 03:25:35,499 - synapse.federation.transport.server - 138 - INFO - PUT-3305687 - Request from disroot.org\n2016-12-30 03:27:29,209 - synapse.federation.transport.server - 138 - INFO - PUT-3313044 - Request from disroot.org\n2016-12-30 03:29:20,775 - synapse.federation.transport.server - 138 - INFO - PUT-3320742 - Request from disroot.org\n2016-12-30 03:41:07,860 - synapse.federation.transport.server - 138 - INFO - PUT-3372471 - Request from disroot.org\n2016-12-30 03:42:10,447 - synapse.federation.transport.server - 138 - INFO - PUT-3377058 - Request from disroot.org\n2016-12-30 03:43:24,048 - synapse.federation.transport.server - 138 - INFO - PUT-3382743 - Request from disroot.org\n2016-12-30 03:45:34,454 - synapse.federation.transport.server - 138 - INFO - PUT-3391664 - Request from disroot.org\n2016-12-30 03:47:42,648 - synapse.federation.transport.server - 138 - INFO - PUT-3401472 - Request from disroot.org\n2016-12-30 03:49:51,242 - synapse.federation.transport.server - 138 - INFO - PUT-3411124 - Request from disroot.org\n2016-12-30 03:52:04,420 - synapse.federation.transport.server - 138 - INFO - PUT-3420748 - Request from disroot.org\n2016-12-30 03:53:56,141 - synapse.federation.transport.server - 138 - INFO - PUT-3428525 - Request from disroot.org\n2016-12-30 03:56:04,713 - synapse.federation.transport.server - 138 - INFO - PUT-3437552 - Request from disroot.org\n2016-12-30 03:58:05,410 - synapse.federation.transport.server - 138 - INFO - PUT-3445739 - Request from disroot.org\n2016-12-30 04:00:24,892 - synapse.federation.transport.server - 138 - INFO - PUT-3454960 - Request from disroot.org\n2016-12-30 04:53:20,476 - synapse.federation.transport.server - 138 - INFO - PUT-3696149 - Request from disroot.org\n2016-12-30 04:54:25,662 - synapse.federation.transport.server - 138 - INFO - PUT-3701446 - Request from disroot.org\n2016-12-30 04:55:41,612 - synapse.federation.transport.server - 138 - INFO - PUT-3708327 - Request from disroot.org\n2016-12-30 04:57:47,805 - synapse.federation.transport.server - 138 - INFO - PUT-3720699 - Request from disroot.org\n2016-12-30 04:59:50,613 - synapse.federation.transport.server - 138 - INFO - PUT-3732643 - Request from disroot.org\n2016-12-30 05:02:00,601 - synapse.federation.transport.server - 138 - INFO - PUT-3745522 - Request from disroot.org\n2016-12-30 05:04:21,411 - synapse.federation.transport.server - 138 - INFO - PUT-3758583 - Request from disroot.org\n2016-12-30 05:06:32,774 - synapse.federation.transport.server - 138 - INFO - PUT-3771427 - Request from disroot.org\n2016-12-30 05:08:22,756 - synapse.federation.transport.server - 138 - INFO - PUT-3781240 - Request from disroot.org\n2016-12-30 05:10:19,169 - synapse.federation.transport.server - 138 - INFO - PUT-3791370 - Request from disroot.org\n2016-12-30 05:12:36,919 - synapse.federation.transport.server - 138 - INFO - PUT-3803651 - Request from disroot.org\n2016-12-30 08:17:36,659 - synapse.federation.transport.server - 138 - INFO - PUT-4699188 - Request from disroot.org\n2016-12-30 08:18:42,059 - synapse.federation.transport.server - 138 - INFO - PUT-4704012 - Request from disroot.org\n2016-12-30 08:20:03,411 - synapse.federation.transport.server - 138 - INFO - PUT-4710092 - Request from disroot.org\n2016-12-30 08:22:27,034 - synapse.federation.transport.server - 138 - INFO - PUT-4720696 - Request from disroot.org\n2016-12-30 08:24:24,145 - synapse.federation.transport.server - 138 - INFO - PUT-4730839 - Request from disroot.org\n2016-12-30 08:26:47,468 - synapse.federation.transport.server - 138 - INFO - PUT-4740693 - Request from disroot.org\n2016-12-30 08:29:00,925 - synapse.federation.transport.server - 138 - INFO - PUT-4750102 - Request from disroot.org\n2016-12-30 08:31:21,338 - synapse.federation.transport.server - 138 - INFO - PUT-4760041 - Request from disroot.org\n2016-12-30 08:33:29,666 - synapse.federation.transport.server - 138 - INFO - PUT-4769517 - Request from disroot.org\n2016-12-30 08:35:44,390 - synapse.federation.transport.server - 138 - INFO - PUT-4779223 - Request from disroot.org\n2016-12-30 08:38:05,526 - synapse.federation.transport.server - 138 - INFO - PUT-4788798 - Request from disroot.org\n2016-12-30 08:46:18,587 - synapse.federation.transport.server - 138 - INFO - PUT-4823173 - Request from disroot.org\n2016-12-30 08:47:22,358 - synapse.federation.transport.server - 138 - INFO - PUT-4828143 - Request from disroot.org\n2016-12-30 08:48:43,516 - synapse.federation.transport.server - 138 - INFO - PUT-4833717 - Request from disroot.org\n2016-12-30 08:50:48,768 - synapse.federation.transport.server - 138 - INFO - PUT-4842599 - Request from disroot.org\n2016-12-30 08:52:50,997 - synapse.federation.transport.server - 138 - INFO - PUT-4851366 - Request from disroot.org\n2016-12-30 08:55:11,112 - synapse.federation.transport.server - 138 - INFO - PUT-4861127 - Request from disroot.org\n2016-12-30 08:57:08,757 - synapse.federation.transport.server - 138 - INFO - PUT-4869007 - Request from disroot.org\n2016-12-30 08:59:07,421 - synapse.federation.transport.server - 138 - INFO - PUT-4876932 - Request from disroot.org\n2016-12-30 09:01:21,715 - synapse.federation.transport.server - 138 - INFO - PUT-4886697 - Request from disroot.org\n2016-12-30 09:03:14,222 - synapse.federation.transport.server - 138 - INFO - PUT-4894928 - Request from disroot.org\n2016-12-30 09:05:30,382 - synapse.federation.transport.server - 138 - INFO - PUT-4904708 - Request from disroot.org\n2016-12-30 09:11:34,572 - synapse.federation.transport.server - 138 - INFO - GET-4929651 - Request from disroot.org\n2016-12-30 09:11:34,573 - synapse.access.http.8080 - 91 - INFO - GET-4929651 - 178.21.23.139 - 8080 - {disroot.org} Processed request: 2ms (0ms, 0ms) (0ms/0) 80B 429 \"GET /_matrix/federation/v1/event_auth/!zYbmJBUierHCOIgeEi:matrix.org/$1483069834242866IqUif:matrix.org HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 09:11:34,915 - synapse.federation.transport.server - 138 - INFO - PUT-4929672 - Request from disroot.org\n2016-12-30 09:11:34,916 - synapse.access.http.8080 - 91 - INFO - PUT-4929672 - 178.21.23.139 - 8080 - {disroot.org} Processed request: 2ms (0ms, 0ms) (0ms/0) 80B 429 \"PUT /_matrix/federation/v1/send/1483081149010/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 09:11:34,963 - synapse.federation.transport.server - 138 - INFO - GET-4929680 - Request from disroot.org\n2016-12-30 09:11:34,963 - synapse.access.http.8080 - 91 - INFO - GET-4929680 - 178.21.23.139 - 8080 - {disroot.org} Processed request: 1ms (0ms, 0ms) (0ms/0) 80B 429 \"GET /_matrix/federation/v1/event_auth/!zYbmJBUierHCOIgeEi:matrix.org/$1483070684246704ZKxFF:matrix.org HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 09:11:35,265 - synapse.federation.transport.server - 138 - INFO - PUT-4929713 - Request from disroot.org\n2016-12-30 09:11:35,265 - synapse.access.http.8080 - 91 - INFO - PUT-4929713 - 178.21.23.139 - 8080 - {disroot.org} Processed request: 1ms (0ms, 0ms) (0ms/0) 80B 429 \"PUT /_matrix/federation/v1/send/1483081149011/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 09:11:35,379 - synapse.federation.transport.server - 138 - INFO - PUT-4929724 - Request from disroot.org\n2016-12-30 09:11:35,379 - synapse.access.http.8080 - 91 - INFO - PUT-4929724 - 178.21.23.139 - 8080 - {disroot.org} Processed request: 2ms (0ms, 0ms) (0ms/0) 80B 429 \"PUT /_matrix/federation/v1/send/1483081149012/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 09:11:35,535 - synapse.federation.transport.server - 138 - INFO - PUT-4929744 - Request from disroot.org\n2016-12-30 09:11:35,535 - synapse.access.http.8080 - 91 - INFO - PUT-4929744 - 178.21.23.139 - 8080 - {disroot.org} Processed request: 2ms (0ms, 0ms) (0ms/0) 80B 429 \"PUT /_matrix/federation/v1/send/1483081149013/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 09:11:35,678 - synapse.federation.transport.server - 138 - INFO - PUT-4929755 - Request from disroot.org. However, the reason these requests never return seems to be different to #1733.  They certainly don't seem to be directly triggering get_missing_events requests which then block. They either get blocked whilst trying to talk to disroot (which has been marked as unavailable due to having #1733 problems of its own)... or due to being blocked on some other stuck federation activity on curbaf.  Digging further.. Mjark reckons that they were blocked on the room lineariser for other unrelated get_missing_events activity.  Meanwhile we only let 3 transactions execute concurrently from the same host before we start queuing, so to quote Mjark:\n\nSo my theory is that we had:\n1) requests that blocked for 14hours because they were fetching events\n2) requests that were blocked behind the first kind by the room linearizer\n3) requests that were blocked behind the first and second kind by the federation ratelimiter.\n\nTherefore the 429ing here was actually correct behaviour, and i'm going to close this in favour of the main woes in #1733.. This is probably somehow related to #1732, which was also happening at the same time. the darmstadt->arasphere requests finally unblocked after 6 hours:\n2016-12-30 07:05:04,442 - synapse.access.https.8448 - 59 - INFO - PUT-16175 - 130.83.177.132 - 8448 - Received request: PUT /_matrix/federation/v1/send/1482195882156/\n2016-12-30 07:05:04,442 - synapse.federation.transport.server - 138 - INFO - PUT-16175 - Request from darmstadt.ccc.de\n2016-12-30 07:05:04,443 - synapse.federation.transport.server - 244 - INFO - PUT-16175 - Received txn 1482195882156 from darmstadt.ccc.de. (PDUs: 1, EDUs: 0, failures: 0)\n2016-12-30 14:01:49,436 - synapse.federation.federation_server - 558 - INFO - PUT-16175 - Missing 1 events for room '!cURbafjkfsMDVwdRDQ:matrix.org': ['$14829486863336717wieod:matrix.org']...\n2016-12-30 14:01:49,436 - synapse.http.outbound - 124 - INFO - PUT-16175 - {POST-O-24208} [darmstadt.ccc.de] Sending request: POST matrix://darmstadt.ccc.de/_matrix/federation/v1/get_missing_events/!cURbafjkfsMDVwdRDQ:matrix.org\n2016-12-30 14:01:49,475 - synapse.http.outbound - 209 - INFO - PUT-16175 - {POST-O-24208} [darmstadt.ccc.de] Result: 502 Bad Gateway\n2016-12-30 14:01:49,805 - synapse.access.https.8448 - 91 - INFO - PUT-16175 - 130.83.177.132 - 8448 - {darmstadt.ccc.de} Processed request: 25005363ms (0ms, 0ms) (1ms/4) 72B 200 \"PUT /_matrix/federation/v1/send/1482195882156/ HTTP/1.1\" \"Synapse/0.18.5 (b=develop,09f1591)\"\nLooks like this is indeed #1729, and the attempt to get_missing_events was somehow blocked on another one.. Yes, this is precisely what's happening.  Looking at the first darmstadt->arasphere request to unblock, it seems that it was stacked up on an event_auth check for arasphere.net->productionservers.net for curbaf finally unblocking, triggered by a productionservers.net->arasphere.net transaction:\n2016-12-30 14:01:48,336 - synapse.http.matrixfederationclient - 183 - WARNING - PUT-12409 - {GET-O-24163} Sending request failed to productionservers.net: GET matrix://productionservers.net/_matrix/federation/v1/event_auth/!cURbafjkfsMDVwdRDQ:matrix.org/$14168361922zrVc\nV:arasphere.net: CancelledError - CancelledError: \n2016-12-30 14:01:48,336 - synapse.http.outbound - 209 - INFO - PUT-12409 - {GET-O-24163} [productionservers.net] Result: CancelledError - CancelledError: \n2016-12-30 14:01:48,336 - synapse.handlers.federation - 1497 - ERROR - PUT-12409 - Failed to get auth chain\nTraceback (most recent call last):\n  File \"synapse/handlers/federation.py\", line 1456, in do_auth\n    [e.event_id for e in result[\"auth_chain\"]]\nCancelledError\n2016-12-30 14:01:48,336 - synapse.handlers.federation - 1506 - INFO - PUT-12409 - Different auth: set(['$141661037721nBtSl:arasphere.net', '$1416450173215crCca:matrix.org'])\n2016-12-30 14:01:48,337 - synapse.state - 385 - INFO - PUT-12409 - Resolving state for !cURbafjkfsMDVwdRDQ:matrix.org with 2 groups\n2016-12-30 14:01:48,337 - synapse.handlers.federation - 1550 - INFO - PUT-12409 - Different auth after resolution: set(['$141661037721nBtSl:arasphere.net'])\n2016-12-30 14:01:48,338 - synapse.federation.federation_server - 154 - ERROR -  - Failed to handle PDU\nTraceback (most recent call last):\n  File \"synapse/federation/federation_server.py\", line 147, in on_incoming_transaction\n    )\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/federation/federation_server.py\", line 578, in _handle_new_pdu\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/federation/federation_server.py\", line 612, in _handle_new_pdu\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/handlers/federation.py\", line 174, in on_receive_pdu\n    origin,\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/handlers/federation.py\", line 1173, in _handle_new_event\n    (event_map[e_id].type, event_map[e_id].state_key): event_map[e_id]\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/handlers/federation.py\", line 1351, in _prep_event\n    try:\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1128, in _inlineCallbacks\n    result = g.send(result)\n  File \"synapse/handlers/federation.py\", line 1637, in do_auth\n    \"rejects\": {\n  File \"synapse/api/auth.py\", line 130, in check\n    logger.info(\nSynapseError: 403: Room '!cURbafjkfsMDVwdRDQ:matrix.org' does not exist\n2016-12-30 14:01:48,339 - synapse.federation.federation_server - 558 - INFO - PUT-15997 - Missing 1 events for room '!cURbafjkfsMDVwdRDQ:matrix.org': ['$14829486863336717wieod:matrix.org']...\n2016-12-30 14:01:48,339 - synapse.http.outbound - 124 - INFO - PUT-15997 - {POST-O-24205} [darmstadt.ccc.de] Sending request: POST matrix://darmstadt.ccc.de/_matrix/federation/v1/get_missing_events/!cURbafjkfsMDVwdRDQ:matrix.org\nMeanwhile, looking at this blocking request (PUT-12409) - it started at 05:31 and was rattling around for ages (like, 8.4 hours) whilst blocking other stuff... ugh:\n2016-12-30 05:31:54,505 - synapse.access.https.8448 - 59 - INFO - PUT-12409 - 66.41.93.104 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483075196511/\n...\n2016-12-30 14:01:48,341 - synapse.access.https.8448 - 91 - INFO - PUT-12409 - 66.41.93.104 - 8448 - {productionservers.net} Processed request: 30593836ms (464ms, 15ms) (1639ms/22) 114B 200 \"PUT /_matrix/federation/v1/send/1483075196511/ HTTP/1.1\" \"Synapse/0.18.5\"\nIt looks like some of those blocks were presumably due to dependent requests being similarly blackholed.  Despite arasphere being on 0.18.6-rc1.  The nightmare logs of this request as seen by arasphere are here:\nPUT-12409.txt\n. In fact, every time arasphere received this txn from productionservers.net it triggered a multi-hour meltdown:\nmatrix@phoenix:~/synapse$ cat darmstadt.log | grep '/_matrix/federation/v1/send/1483075196511/'\n2016-12-30 05:27:10,750 - synapse.access.https.8448 - 59 - INFO - PUT-12095 - 66.41.93.104 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483075196511/\n2016-12-30 05:28:14,870 - synapse.access.https.8448 - 59 - INFO - PUT-12158 - 66.41.93.104 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483075196511/\n2016-12-30 05:29:41,904 - synapse.access.https.8448 - 59 - INFO - PUT-12246 - 66.41.93.104 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483075196511/\n2016-12-30 05:31:54,505 - synapse.access.https.8448 - 59 - INFO - PUT-12409 - 66.41.93.104 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483075196511/\n2016-12-30 05:33:59,901 - synapse.access.https.8448 - 59 - INFO - PUT-12487 - 66.41.93.104 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483075196511/\n2016-12-30 05:36:03,867 - synapse.access.https.8448 - 59 - INFO - PUT-12569 - 66.41.93.104 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483075196511/\n2016-12-30 05:38:20,371 - synapse.access.https.8448 - 59 - INFO - PUT-12673 - 66.41.93.104 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483075196511/\n2016-12-30 05:40:15,857 - synapse.access.https.8448 - 59 - INFO - PUT-12743 - 66.41.93.104 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483075196511/\n2016-12-30 05:42:42,741 - synapse.access.https.8448 - 59 - INFO - PUT-12892 - 66.41.93.104 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483075196511/\n2016-12-30 05:45:07,980 - synapse.access.https.8448 - 59 - INFO - PUT-12995 - 66.41.93.104 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483075196511/\n2016-12-30 05:46:59,120 - synapse.access.https.8448 - 59 - INFO - PUT-13067 - 66.41.93.104 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483075196511/\n2016-12-30 07:17:26,521 - synapse.access.https.8448 - 91 - INFO - PUT-12095 - 66.41.93.104 - 8448 - {productionservers.net} Processed request: 6615771ms (287ms, 12ms) (1065ms/22) 114B 200 \"PUT /_matrix/federation/v1/send/1483075196511/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 07:17:29,298 - synapse.access.https.8448 - 91 - INFO - PUT-13067 - 66.41.93.104 - 8448 - {productionservers.net} Processed request: 5430178ms (3ms, 0ms) (0ms/0) 114B 200 \"PUT /_matrix/federation/v1/send/1483075196511/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 07:17:29,567 - synapse.access.https.8448 - 91 - INFO - PUT-12995 - 66.41.93.104 - 8448 - {productionservers.net} Processed request: 5541587ms (8ms, 0ms) (0ms/0) 114B 200 \"PUT /_matrix/federation/v1/send/1483075196511/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 07:17:29,681 - synapse.access.https.8448 - 91 - INFO - PUT-12892 - 66.41.93.104 - 8448 - {productionservers.net} Processed request: 5686940ms (0ms, 0ms) (0ms/0) 114B 200 \"PUT /_matrix/federation/v1/send/1483075196511/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 07:17:29,791 - synapse.access.https.8448 - 91 - INFO - PUT-12743 - 66.41.93.104 - 8448 - {productionservers.net} Processed request: 5833934ms (4ms, 0ms) (0ms/0) 114B 200 \"PUT /_matrix/federation/v1/send/1483075196511/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 07:17:29,792 - synapse.access.https.8448 - 91 - INFO - PUT-12673 - 66.41.93.104 - 8448 - {productionservers.net} Processed request: 5949421ms (4ms, 0ms) (0ms/0) 114B 200 \"PUT /_matrix/federation/v1/send/1483075196511/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 07:17:29,793 - synapse.access.https.8448 - 91 - INFO - PUT-12569 - 66.41.93.104 - 8448 - {productionservers.net} Processed request: 6085926ms (4ms, 0ms) (0ms/0) 114B 200 \"PUT /_matrix/federation/v1/send/1483075196511/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 07:17:29,793 - synapse.access.https.8448 - 91 - INFO - PUT-12487 - 66.41.93.104 - 8448 - {productionservers.net} Processed request: 6209892ms (0ms, 0ms) (0ms/0) 114B 200 \"PUT /_matrix/federation/v1/send/1483075196511/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 09:25:52,328 - synapse.access.https.8448 - 91 - INFO - PUT-12158 - 66.41.93.104 - 8448 - {productionservers.net} Processed request: 14257458ms (359ms, 0ms) (1757ms/24) 114B 200 \"PUT /_matrix/federation/v1/send/1483075196511/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 11:20:01,853 - synapse.access.https.8448 - 91 - INFO - PUT-12246 - 66.41.93.104 - 8448 - {productionservers.net} Processed request: 21019949ms (5435ms, 15ms) (1751ms/31) 114B 200 \"PUT /_matrix/federation/v1/send/1483075196511/ HTTP/1.1\" \"Synapse/0.18.5\"\n2016-12-30 14:01:48,341 - synapse.access.https.8448 - 91 - INFO - PUT-12409 - 66.41.93.104 - 8448 - {productionservers.net} Processed request: 30593836ms (464ms, 15ms) (1639ms/22) 114B 200 \"PUT /_matrix/federation/v1/send/1483075196511/ HTTP/1.1\" \"Synapse/0.18.5\". Looking at the first of these txns (PUT-12095), it seems arasphere was trying to track down a bunch of events from arasphere... which are not present in its own DB:\nPUT-12095.txt\n2016-12-30 05:27:11,577 - synapse.federation.federation_server - 558 - INFO - PUT-12095 - Missing 1 events for room '!cURbafjkfsMDVwdRDQ:matrix.org': ['$14168370037dJyNv:arasphere.net']...\n2016-12-30 07:17:25,457 - synapse.federation.federation_server - 590 - INFO - PUT-12095 - Still missing 1 events for room '!cURbafjkfsMDVwdRDQ:matrix.org': ['$14168357801cKMiB:arasphere.net']...\n2016-12-30 07:17:26,218 - synapse.handlers.federation - 1452 - INFO - PUT-12095 - Missing auth: set(['$141661037721nBtSl:arasphere.net'])\nThe full list of referenced events is:\n$141661037721nBtSl:arasphere.net\n$14168357801cKMiB:arasphere.net\n$14168361922zrVcV:arasphere.net\n$14168362293tYqnx:arasphere.net\n$14168362334OLnTd:arasphere.net\n$14168368325cmTRA:arasphere.net\n$14168368996LFQag:arasphere.net\n$14168370037dJyNv:arasphere.net\nThese are all events of erik doing things on arasphere in Nov 2014.  Some of them them show up on matrix.org; none of them are on arasphere itself, probably because arasphere.net's DB is dead since then.  So it looks like the original event that productionservers.net referenced was @erikj:arasphere.net leaving curbaf ($14168370037dJyNv:arasphere.net), which then triggers a meltdown of arasphere trying to find this event and similar ones from other servers.  It goes around different broken servers (including ones which are down?!) trying to find the ancient events, which nobody of course has other than matrix.org.. A workaround for disabling spidering servers at random in get_missing_events has landed in #1734 and released in 0.18.6-rc2.\nWe're hoping these are the only things which were locking the room linearizer and so blackholing federation traffic for a given room.  N.B. that after 3 concurrent federation requests get stuck from the server, all future ones get queued or 429'd by the federation rate limiting logic, which can then starve out the remote server from being able to federate to the local one entirely.. The problem is still there; productionservers.net just had a 25 minute hiatus whilst trying to find missing events.  The first failed req from matrix.org was:\n2016-12-30 16:45:51,494 - synapse.access.https.8448 - 59 - INFO - PUT-5941- - - 8448 - Received request: PUT /_matrix/federation/v1/send/1483124896752/\n2016-12-30 16:45:51,498 - synapse.federation.transport.server - 244 - INFO - PUT-5941- Received txn 1483124896752 from matrix.org. (PDUs: 1, EDUs: 0, failures: 0)\n2016-12-30 16:46:55,267 - synapse.access.https.8448 - 59 - INFO - PUT-6033- - - 8448 - Received request: PUT /_matrix/federation/v1/send/1483124896752/\n2016-12-30 16:46:55,271 - synapse.federation.transport.server - 244 - INFO - PUT-6033- Received txn 1483124896752 from matrix.org. (PDUs: 1, EDUs: 0, failures: 0)\n2016-12-30 16:48:08,265 - synapse.access.https.8448 - 59 - INFO - PUT-6161- - - 8448 - Received request: PUT /_matrix/federation/v1/send/1483124896752/\n2016-12-30 16:49:57,993 - synapse.access.https.8448 - 59 - INFO - PUT-6261- - - 8448 - Received request: PUT /_matrix/federation/v1/send/1483124896752/\n2016-12-30 16:52:14,352 - synapse.access.https.8448 - 59 - INFO - PUT-6455- - - 8448 - Received request: PUT /_matrix/federation/v1/send/1483124896752/\n2016-12-30 16:54:26,582 - synapse.access.https.8448 - 59 - INFO - PUT-6615- - - 8448 - Received request: PUT /_matrix/federation/v1/send/1483124896752/\n2016-12-30 16:56:42,876 - synapse.access.https.8448 - 59 - INFO - PUT-6846- - - 8448 - Received request: PUT /_matrix/federation/v1/send/1483124896752/\n2016-12-30 16:58:41,679 - synapse.access.https.8448 - 59 - INFO - PUT-7083- - - 8448 - Received request: PUT /_matrix/federation/v1/send/1483124896752/\n2016-12-30 17:00:33,760 - synapse.access.https.8448 - 59 - INFO - PUT-7347- - - 8448 - Received request: PUT /_matrix/federation/v1/send/1483124896752/\n2016-12-30 17:02:39,180 - synapse.access.https.8448 - 59 - INFO - PUT-7788- - - 8448 - Received request: PUT /_matrix/federation/v1/send/1483124896752/\n2016-12-30 17:03:59,739 - synapse.federation.transport.server - 244 - INFO - - Received txn 1483124896752 from matrix.org. (PDUs: 1, EDUs: 0, failures: 0)\n2016-12-30 17:04:44,788 - synapse.access.https.8448 - 59 - INFO - PUT-8239- - - 8448 - Received request: PUT /_matrix/federation/v1/send/1483124896752/\n2016-12-30 17:08:09,613 - synapse.federation.transport.server - 244 - INFO - - Received txn 1483124896752 from matrix.org. (PDUs: 1, EDUs: 0, failures: 0)\n2016-12-30 17:13:32,338 - synapse.access.https.8448 - 91 - INFO - PUT-5941- - - 8448 - {matrix.org} Processed request: 1660844ms (6ms, 0ms) (90ms/4) 51B 200 \"PUT /_matrix/federation/v1/send/1483124896752/ HTTP/1.1\" \"Synapse/0.18.6-rc1 (b=matrix-org-hotfixes,2f703b8)\"\n2016-12-30 17:13:34,353 - synapse.federation.transport.server - 244 - INFO - - Received txn 1483124896752 from matrix.org. (PDUs: 1, EDUs: 0, failures: 0)\n2016-12-30 17:13:34,869 - synapse.federation.transport.server - 244 - INFO - - Received txn 1483124896752 from matrix.org. (PDUs: 1, EDUs: 0, failures: 0)\n2016-12-30 17:13:34,873 - synapse.access.https.8448 - 91 - INFO - PUT-7347- - - 8448 - {matrix.org} Processed request: 781113ms (3ms, 0ms) (0ms/0) 51B 200 \"PUT /_matrix/federation/v1/send/1483124896752/ HTTP/1.1\" \"Synapse/0.18.6-rc1 (b=matrix-org-hotfixes,2f703b8)\"\n2016-12-30 17:13:38,414 - synapse.federation.transport.server - 244 - INFO - - Received txn 1483124896752 from matrix.org. (PDUs: 1, EDUs: 0, failures: 0)\n2016-12-30 17:13:38,417 - synapse.access.https.8448 - 91 - INFO - PUT-7083- - - 8448 - {matrix.org} Processed request: 896737ms (20ms, 0ms) (0ms/0) 51B 200 \"PUT /_matrix/federation/v1/send/1483124896752/ HTTP/1.1\" \"Synapse/0.18.6-rc1 (b=matrix-org-hotfixes,2f703b8)\"\n2016-12-30 17:13:39,238 - synapse.federation.transport.server - 244 - INFO - - Received txn 1483124896752 from matrix.org. (PDUs: 1, EDUs: 0, failures: 0)\n2016-12-30 17:13:39,242 - synapse.access.https.8448 - 91 - INFO - PUT-6846- - - 8448 - {matrix.org} Processed request: 1016364ms (35ms, 2ms) (0ms/0) 51B 200 \"PUT /_matrix/federation/v1/send/1483124896752/ HTTP/1.1\" \"Synapse/0.18.6-rc1 (b=matrix-org-hotfixes,2f703b8)\"\n2016-12-30 17:13:39,883 - synapse.federation.transport.server - 244 - INFO - - Received txn 1483124896752 from matrix.org. (PDUs: 1, EDUs: 0, failures: 0)\n2016-12-30 17:13:39,886 - synapse.access.https.8448 - 91 - INFO - PUT-6615- - - 8448 - {matrix.org} Processed request: 1153303ms (16ms, 1ms) (0ms/0) 51B 200 \"PUT /_matrix/federation/v1/send/1483124896752/ HTTP/1.1\" \"Synapse/0.18.6-rc1 (b=matrix-org-hotfixes,2f703b8)\"\n2016-12-30 17:13:40,423 - synapse.federation.transport.server - 244 - INFO - - Received txn 1483124896752 from matrix.org. (PDUs: 1, EDUs: 0, failures: 0)\n2016-12-30 17:13:40,426 - synapse.access.https.8448 - 91 - INFO - PUT-6455- - - 8448 - {matrix.org} Processed request: 1286074ms (8ms, 0ms) (0ms/0) 51B 200 \"PUT /_matrix/federation/v1/send/1483124896752/ HTTP/1.1\" \"Synapse/0.18.6-rc1 (b=matrix-org-hotfixes,2f703b8)\"\n2016-12-30 17:13:41,224 - synapse.federation.transport.server - 244 - INFO - - Received txn 1483124896752 from matrix.org. (PDUs: 1, EDUs: 0, failures: 0)\n2016-12-30 17:13:41,228 - synapse.access.https.8448 - 91 - INFO - PUT-6261- - - 8448 - {matrix.org} Processed request: 1423234ms (44ms, 0ms) (0ms/0) 51B 200 \"PUT /_matrix/federation/v1/send/1483124896752/ HTTP/1.1\" \"Synapse/0.18.6-rc1 (b=matrix-org-hotfixes,2f703b8)\"\n2016-12-30 17:13:41,939 - synapse.access.https.8448 - 91 - INFO - PUT-6161- - - 8448 - {matrix.org} Processed request: 1533674ms (3ms, 0ms) (0ms/0) 51B 200 \"PUT /_matrix/federation/v1/send/1483124896752/ HTTP/1.1\" \"Synapse/0.18.6-rc1 (b=matrix-org-hotfixes,2f703b8)\"\n2016-12-30 17:13:51,289 - synapse.access.https.8448 - 91 - INFO - PUT-6033- - - 8448 - {matrix.org} Processed request: 1616021ms (2ms, 1ms) (12ms/4) 51B 200 \"PUT /_matrix/federation/v1/send/1483124896752/ HTTP/1.1\" \"Synapse/0.18.6-rc1 (b=matrix-org-hotfixes,2f703b8)\"\n2016-12-30 17:14:34,454 - synapse.access.https.8448 - 91 - INFO - PUT-7788- - - 8448 - {matrix.org} Processed request: 715273ms (7ms, 0ms) (0ms/0) 51B 200 \"PUT /_matrix/federation/v1/send/1483124896752/ HTTP/1.1\" \"Synapse/0.18.6-rc1 (b=matrix-org-hotfixes,2f703b8)\"\n2016-12-30 17:14:36,355 - synapse.access.https.8448 - 91 - INFO - PUT-8239- - - 8448 - {matrix.org} Processed request: 591566ms (24ms, 0ms) (0ms/0) 51B 200 \"PUT /_matrix/federation/v1/send/1483124896752/ HTTP/1.1\" \"Synapse/0.18.6-rc1 (b=matrix-org-hotfixes,2f703b8)\". Meanwhile, during the outage, it still seems to have been querying lots of different servers for missing events:\n2016-12-30 16:44:23,768 - synapse.http.outbound - 124 - INFO - PUT-5507- {POST-O-9213} [croxis.net] Sending request: POST matrix://croxis.net/_matrix/federation/v1/get_missing_events/!cURbafjkfsMDVwdRDQ:matrix.org\n2016-12-30 16:44:23,840 - synapse.http.outbound - 124 - INFO - PUT-5513- {POST-O-9215} [anemone.me] Sending request: POST matrix://anemone.me/_matrix/federation/v1/get_missing_events/!cURbafjkfsMDVwdRDQ:matrix.org\n2016-12-30 16:44:23,952 - synapse.http.outbound - 124 - INFO - PUT-5515- {POST-O-9218} [edutel.nl] Sending request: POST matrix://edutel.nl/_matrix/federation/v1/get_missing_events/!cURbafjkfsMDVwdRDQ:matrix.org\n2016-12-30 16:44:25,803 - synapse.http.outbound - 124 - INFO - PUT-5516- {POST-O-9222} [gazizova.net] Sending request: POST matrix://gazizova.net/_matrix/federation/v1/get_missing_events/!cURbafjkfsMDVwdRDQ:matrix.org\n2016-12-30 16:44:26,279 - synapse.http.outbound - 124 - INFO - PUT-5527- {POST-O-9226} [maunium.net] Sending request: POST matrix://maunium.net/_matrix/federation/v1/get_missing_events/!cURbafjkfsMDVwdRDQ:matrix.org. Hopefully this can be improved a lot when #1744 lands, however it's not the only problem here.  My hunch is that the only reason this is showing up so badly is #1753.. I think this is basically covered by #1729 now. @erikjohnston i assume this is a feature, but i can't recall the rationale for how it works.. dup #1753. sounds like this is an artefact of federation breaking due to #1733 . A good example of this bad behaviour is shown here from @ralith's HS:\nsierra:ralith matthew$ cat synapse-pegged-2.log | grep '_matrix/federation/v1/send/1483544392748'\nJan 04 20:44:35 ralith.com synapse[2317]: synapse.access.http.8008: [PUT-881047] 37.59.43.212 - 8008 - Received request: PUT /_matrix/federation/v1/send/1483544392748/\nJan 04 20:50:31 ralith.com synapse[2317]: synapse.access.http.8008: [PUT-881181] 37.59.43.212 - 8008 - Received request: PUT /_matrix/federation/v1/send/1483544392748/\nJan 04 20:50:32 ralith.com synapse[2317]: synapse.access.http.8008: [PUT-881212] 37.59.43.212 - 8008 - Received request: PUT /_matrix/federation/v1/send/1483544392748/\nJan 04 20:50:37 ralith.com synapse[2317]: synapse.access.http.8008: [PUT-881270] 37.59.43.212 - 8008 - Received request: PUT /_matrix/federation/v1/send/1483544392748/\nJan 04 20:51:26 ralith.com synapse[2317]: synapse.access.http.8008: [PUT-880923] 37.59.43.212 - 8008 - {safaradeg.net} Processed request: 600520ms (110747ms, 286ms) (389ms/3) 48B 200 \"PUT /_matrix/federation/v1/send/1483544392748/ HTTP/1.1\" \"Synapse/0.18.6-rc2\"\nJan 04 20:51:27 ralith.com synapse[2317]: synapse.access.http.8008: [PUT-881270] 37.59.43.212 - 8008 - {safaradeg.net} Processed request: 50076ms (7ms, 0ms) (0ms/0) 48B 200 \"PUT /_matrix/federation/v1/send/1483544392748/ HTTP/1.1\" \"Synapse/0.18.6-rc2\"\nJan 04 20:51:28 ralith.com synapse[2317]: synapse.access.http.8008: [PUT-881212] 37.59.43.212 - 8008 - {safaradeg.net} Processed request: 55766ms (13ms, 0ms) (0ms/0) 48B 200 \"PUT /_matrix/federation/v1/send/1483544392748/ HTTP/1.1\" \"Synapse/0.18.6-rc2\"\nJan 04 20:51:28 ralith.com synapse[2317]: synapse.access.http.8008: [PUT-880954] 37.59.43.212 - 8008 - {safaradeg.net} Processed request: 590209ms (110263ms, 319ms) (168ms/3) 48B 200 \"PUT /_matrix/federation/v1/send/1483544392748/ HTTP/1.1\" \"Synapse/0.18.6-rc2\"\nJan 04 20:51:29 ralith.com synapse[2317]: synapse.access.http.8008: [PUT-881047] 37.59.43.212 - 8008 - {safaradeg.net} Processed request: 413523ms (103655ms, 297ms) (315ms/3) 48B 200 \"PUT /_matrix/federation/v1/send/1483544392748/ HTTP/1.1\" \"Synapse/0.18.6-rc2\"\nJan 04 20:51:31 ralith.com synapse[2317]: synapse.access.http.8008: [PUT-881181] 37.59.43.212 - 8008 - {safaradeg.net} Processed request: 59724ms (614ms, 33ms) (345ms/7) 48B 200 \"PUT /_matrix/federation/v1/send/1483544392748/ HTTP/1.1\" \"Synapse/0.18.6-rc2\"\nJan 04 20:52:14 ralith.com synapse[2317]: synapse.access.http.8008: [PUT-881378] 37.59.43.212 - 8008 - Received request: PUT /_matrix/federation/v1/send/1483544392748/\nJan 04 20:52:14 ralith.com synapse[2317]: synapse.access.http.8008: [PUT-881378] 37.59.43.212 - 8008 - {safaradeg.net} Processed request: 748ms (7ms, 1ms) (12ms/1) 48B 200 \"PUT /_matrix/federation/v1/send/1483544392748/ HTTP/1.1\" \"Synapse/0.18.6-rc2\"\nThe federation rate limiter lets us execute 3 of these transactions in parallel.  They stack up (due to requiring to resolve state for a 23-prev-event event from #rust), and slow each other down catastrophically.  The others block, and then eventually execute relatively quickly thanks to the result of the merge resolution being cached.\nNeedless to say, we should never have been executing these in parallel in the first place.. it also looks like the first request will only terminate once the other two processing in parallel finish, which consumes resources and slows things down even more (and causes the spurious final retry from the origin HS).  I'm unclear on what lock is responsible for that.. will fix https://github.com/matrix-org/synapse/issues/1741 when merged. @NegativeMjark have updated the comment - PTAL. lgtm - thanks. can you re-target the PR to the develop branch? otherwise i'll manually apply it there.. sounds like the current behaviour is correct then (modulo using the deprecated constant). What is the correct new term we should be using to avoid confusion recurring? PROTOCOL_TLS?. i've ported this into a new PR with the right constant. thanks all for clarifying.. Also possibly related: the #1733-style meltdown on Dec 30 coincided with all HSes blocking whilst desperately searching for $14830619971nqtxe:cntalk.xyz:\n(venv-synapse)matrix@ldc-prd-matrix-004:~/synapse$ cat var/homeserver.log.2016-12-30 | perl -ne 'if (/Sending request: GET.*federation\\/v1\\/event\\/(.*)/) { print \"$1\\n\" }' | sort | uniq -c | sort -rn | head -10\n   2279 $14830619971nqtxe:cntalk.xyz/\n      6 $148308014735459vGcKe:irc.hackint.org/\n      6 $148307997435455iJMfp:irc.hackint.org/. Also, cntalk.xyz was reintroduced at some point in the last week in .cn, so it's possible servers trying to talk to it may have hit firewalling weirdnesses, possibly even triggering the federation stability meltdown we've seen.. @vberger provided an absolute textbook example of this today with complete logs.  The key point where everything wedges is:\nsierra:logs matthew$ cat `ls -tr homeserver.log*` | egrep \"PUT-270(`seq -s \\| 218 223`223)\"\n2017-01-04 14:47:32,456 - synapse.access.http.8008 - 59 - INFO - PUT-270218 - 5.9.100.107 - 8008 - Received request: PUT /_matrix/federation/v1/send/1483146742868/\n2017-01-04 14:47:32,458 - synapse.federation.transport.server - 138 - INFO - PUT-270218 - Request from filterfish.org\n2017-01-04 14:47:32,458 - synapse.federation.transport.server - 244 - INFO - PUT-270218 - Received txn 1483146742868 from filterfish.org. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 14:47:32,459 - synapse.access.http.8008 - 59 - INFO - PUT-270219 - 164.132.229.113 - 8008 - Received request: PUT /_matrix/federation/v1/send/1483532876486/\n2017-01-04 14:47:32,467 - synapse.federation.transport.server - 138 - INFO - PUT-270219 - Request from matrix.trancendances.fr\n2017-01-04 14:47:32,467 - synapse.federation.transport.server - 244 - INFO - PUT-270219 - Received txn 1483532876486 from matrix.trancendances.fr. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 14:47:32,468 - synapse.access.http.8008 - 59 - INFO - PUT-270220 - 185.69.52.169 - 8008 - Received request: PUT /_matrix/federation/v1/send/1483536152252/\n2017-01-04 14:47:32,470 - synapse.federation.transport.server - 138 - INFO - PUT-270220 - Request from companioncube.me\n2017-01-04 14:47:32,471 - synapse.federation.transport.server - 244 - INFO - PUT-270220 - Received txn 1483536152252 from companioncube.me. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 14:47:32,476 - synapse.access.http.8008 - 59 - INFO - PUT-270221 - 138.201.167.52 - 8008 - Received request: PUT /_matrix/federation/v1/send/1483352850470/\n2017-01-04 14:47:32,479 - synapse.federation.transport.server - 138 - INFO - PUT-270221 - Request from z.z6c.de\n2017-01-04 14:47:32,480 - synapse.federation.transport.server - 244 - INFO - PUT-270221 - Received txn 1483352850470 from z.z6c.de. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 14:47:32,481 - synapse.access.http.8008 - 59 - INFO - PUT-270222 - 88.159.3.142 - 8008 - Received request: PUT /_matrix/federation/v1/send/1483417050385/\n2017-01-04 14:47:32,487 - synapse.federation.transport.server - 138 - INFO - PUT-270222 - Request from edutel.nl\n2017-01-04 14:47:32,487 - synapse.federation.transport.server - 244 - INFO - PUT-270222 - Received txn 1483417050385 from edutel.nl. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 14:47:32,489 - synapse.access.http.8008 - 59 - INFO - PUT-270223 - 107.170.204.197 - 8008 - Received request: PUT /_matrix/federation/v1/send/1483531561026/\n2017-01-04 14:47:32,491 - synapse.federation.transport.server - 138 - INFO - PUT-270223 - Request from chat.mathiasp.me\n2017-01-04 14:47:32,491 - synapse.federation.transport.server - 244 - INFO - PUT-270223 - Received txn 1483531561026 from chat.mathiasp.me. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 14:47:35,064 - synapse.access.http.8008 - 91 - INFO - PUT-270220 - 185.69.52.169 - 8008 - {companioncube.me} Processed request: 2595ms (0ms, 0ms) (5ms/1) 47B 200 \"PUT /_matrix/federation/v1/send/1483536152252/ HTTP/1.0\" \"Synapse/0.18.6-rc2\"\n2017-01-04 14:48:46,894 - synapse.state - 310 - INFO - PUT-270221 - Resolving state for !cURbafjkfsMDVwdRDQ:matrix.org with 6 groups\n2017-01-04 14:48:46,957 - synapse.state - 325 - INFO - PUT-270221 - Resolving conflicted state for '!cURbafjkfsMDVwdRDQ:matrix.org'\n2017-01-04 14:48:47,342 - synapse.util.async - 188 - INFO - PUT-270222 - Waiting to acquire linearizer lock for key frozenset([831744L, 844645L, 814471L, 838738L, 831923L, 801591L])\n2017-01-04 14:48:48,270 - synapse.util.async - 188 - INFO - PUT-270218 - Waiting to acquire linearizer lock for key frozenset([831744L, 844645L, 814471L, 838738L, 831923L, 801591L])\n2017-01-04 14:48:49,494 - synapse.util.async - 188 - INFO - PUT-270223 - Waiting to acquire linearizer lock for key frozenset([831744L, 844645L, 814471L, 838738L, 831923L, 801591L])\n2017-01-04 14:48:50,402 - synapse.util.async - 188 - INFO - PUT-270219 - Waiting to acquire linearizer lock for key frozenset([831744L, 844645L, 814471L, 838738L, 831923L, 801591L])\n2017-01-04 14:49:34,237 - synapse.state - 310 - INFO - PUT-270222 - Resolving state for !cURbafjkfsMDVwdRDQ:matrix.org with 6 groups\n2017-01-04 14:49:34,293 - synapse.state - 325 - INFO - PUT-270222 - Resolving conflicted state for '!cURbafjkfsMDVwdRDQ:matrix.org'\n2017-01-04 14:51:43,255 - synapse.state - 310 - INFO - PUT-270218 - Resolving state for !cURbafjkfsMDVwdRDQ:matrix.org with 6 groups\n2017-01-04 14:51:43,313 - synapse.state - 325 - INFO - PUT-270218 - Resolving conflicted state for '!cURbafjkfsMDVwdRDQ:matrix.org'\n2017-01-04 14:54:29,069 - synapse.access.http.8008 - 91 - INFO - PUT-270221 - 138.201.167.52 - 8008 - {z.z6c.de} Processed request: 416592ms (2250ms, 69ms) (112ms/19) 41B 200 \"PUT /_matrix/federation/v1/send/1483352850470/ HTTP/1.0\" \"Synapse/0.18.5\"\n2017-01-04 14:54:29,653 - synapse.access.http.8008 - 91 - INFO - PUT-270222 - 88.159.3.142 - 8008 - {edutel.nl} Processed request: 417172ms (3500ms, 0ms) (30ms/3) 41B 200 \"PUT /_matrix/federation/v1/send/1483417050385/ HTTP/1.0\" \"Synapse/0.18.5\"\n2017-01-04 14:54:37,899 - synapse.access.http.8008 - 91 - INFO - PUT-270218 - 5.9.100.107 - 8008 - {filterfish.org} Processed request: 425443ms (3540ms, 79ms) (1350ms/13) 41B 200 \"PUT /_matrix/federation/v1/send/1483146742868/ HTTP/1.0\" \"Synapse/0.18.6-rc2 (b=HEAD,t=v0.18.6-rc2,f3de4f8)\"\nSo PUT-270223 and PUT-270219 (and subsequent requests) never complete, and superficially it looks like they may never acquire the linearizer lock (but the current code doesn't log acquisition on that path, only the blocking).\nNo other subsequent request completes which tries to acquire that lock, e.g.:\nsierra:logs matthew$ cat `ls -tr homeserver.log*` | fgrep PUT-270639\n2017-01-04 14:52:48,938 - synapse.access.http.8008 - 59 - INFO - PUT-270639 - 109.74.200.146 - 8008 - Received request: PUT /_matrix/federation/v1/send/1483486197840/\n2017-01-04 14:52:48,941 - synapse.federation.transport.server - 138 - INFO - PUT-270639 - Request from sw1v.org\n2017-01-04 14:52:48,942 - synapse.federation.transport.server - 244 - INFO - PUT-270639 - Received txn 1483486197840 from sw1v.org. (PDUs: 6, EDUs: 2, failures: 0)\n2017-01-04 14:53:58,836 - synapse.util.async - 188 - INFO - PUT-270639 - Waiting to acquire linearizer lock for key frozenset([831744L, 844645L, 814471L, 838738L, 831923L, 801591L])\nIt looks like PUT-270218 somehow fails to relinquish the lock.. It's worth noting that the flurry of incoming federation txns are quite possibly an instance of #1753, which might also explain why they all compete for trying to do the same painful merge resolution on !curbaf simultaneously (and take minutes doing so).. Looking for anything which could possibly cause the lock to wedge between PUT-270218 acquiring it before 14:51:43,255 and theoretically relinquishing it before 14:54:37,899, the only vaguely suspicious thing I can see are some push errors:\n2017-01-04 14:49:52,844 - synapse.http.client - 101 - INFO -  - Error sending request to  POST https://matrix.org/_matrix/push/v1/notify: <class 'twisted.internet.error.TimeoutError'> User timeout caused connection failure.\n2017-01-04 14:49:52,844 - synapse.push.httppusher - 329 - ERROR -  - Failed to push https://matrix.org/_matrix/push/v1/notify \nTraceback (most recent call last):\n  File \"/opt/matrix/synapse/lib/python2.7/site-packages/synapse/push/httppusher.py\", line 327, in _send_badge\n    resp = yield self.http_client.post_json_get_json(self.url, d)\nTimeoutError: User timeout caused connection failure.\n...which aren't even associated with that PUT, but could conceivably interrupt things enough to leak the lock? maybe? :S. we now have more logging for this courtesy of #1766. matrix.org is doing this as we speak:\nroot@ldc-prd-matrix-004:/home/matrix/synapse/var# cat homeserver.log.2017-01-06 | fgrep 'PUT-9052811'           \n2017-01-06 22:16:46,345 - synapse.access.http.8080 - 59 - INFO - PUT-9052811 - 43.229.61.217 - 8080 - Received request: PUT /_matrix/federation/v1/send/1483215872550/\n2017-01-06 22:16:46,347 - synapse.federation.transport.server - 138 - INFO - PUT-9052811 - Request from matrix.rkm.id.au\n2017-01-06 22:16:46,347 - synapse.federation.transport.server - 244 - INFO - PUT-9052811 - Received txn 1483215872550 from matrix.rkm.id.au. (PDUs: 3, EDUs: 0, failures: 0)\n2017-01-06 22:16:49,928 - synapse.storage.events - 1094 - INFO - PUT-9052811 - Loading 1 events\n2017-01-06 22:16:51,227 - synapse.storage.events - 1097 - INFO - PUT-9052811 - Loaded 1 events (0 rows)\n2017-01-06 22:16:52,481 - synapse.state - 229 - INFO - PUT-9052811 - calling resolve_state_groups from compute_event_context\n2017-01-06 22:16:52,482 - synapse.util.async - 193 - INFO - PUT-9052811 - Waiting to acquire linearizer lock 79760016 for key frozenset([26586703L, 26607943L])\n2017-01-06 22:16:59,599 - synapse.util.async - 198 - INFO - PUT-9052811 - Acquired linearizer lock 79760016 for key frozenset([26586703L, 26607943L])\n...and never releases it or does anything more ever again.. I'm suddenly worried that this may be causing a federation storm, where rather than each event being sent only by the origin server, it's also sent simultaneously by other servers too, resulting in N-times more traffic flying around.... This might explain @Tokodomo's syn flood warnings on federation traffic, if we're receiving the same event in quick succession from a random set of homeservers.  It might also explain why we're hitting deadlocks more often?. This is indeed happening.  I ran arasphere in debug mode this afternoon for a few hours, and stripped all the event_ids out of the fed txns it received.  Many events arrive from different homeservers, duplicated 40-50x over.  For instance, event $14835496121490460FllQW:matrix.org was received in the following PDUs:\n2017-01-04 17:07:00,584 - synapse.federation.transport.server - 244 - INFO - PUT-20294- Received txn 1483296111106 from matrix.org. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:01,107 - synapse.federation.transport.server - 244 - INFO - PUT-20295- Received txn 1483352879376 from z.z6c.de. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:01,161 - synapse.federation.transport.server - 244 - INFO - PUT-20296- Received txn 1483523257891 from h3ndr1k.de. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:01,416 - synapse.federation.transport.server - 244 - INFO - PUT-20297- Received txn 1483420849920 from raim.ist. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:01,429 - synapse.federation.transport.server - 244 - INFO - PUT-20298- Received txn 1483532904007 from matrix.trancendances.fr. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:01,477 - synapse.federation.transport.server - 244 - INFO - PUT-20299- Received txn 1483417084608 from edutel.nl. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:01,532 - synapse.federation.transport.server - 244 - INFO - PUT-20300- Received txn 1483190077262 from cryptmessage.org. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:01,554 - synapse.federation.transport.server - 244 - INFO - PUT-20301- Received txn 1483178507620 from anemone.me. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:01,568 - synapse.federation.transport.server - 244 - INFO - PUT-20302- Received txn 1483081969520 from matrix.initq.net. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:01,683 - synapse.federation.transport.server - 244 - INFO - PUT-20303- Received txn 1483538960381 from krtdex.com. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:01,761 - synapse.federation.transport.server - 244 - INFO - PUT-20304- Received txn 1483540614413 from onedefence.com. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:01,868 - synapse.federation.transport.server - 244 - INFO - PUT-20305- Received txn 1483538255711 from d120.de. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:02,133 - synapse.federation.transport.server - 244 - INFO - PUT-20306- Received txn 1482775715675 from matrix.6502.me. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:02,233 - synapse.federation.transport.server - 244 - INFO - PUT-20307- Received txn 1482527806549 from dusky.horse. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:02,368 - synapse.federation.transport.server - 244 - INFO - PUT-20309- Received txn 1483400810743 from atauno.com. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:02,520 - synapse.federation.transport.server - 244 - INFO - PUT-20310- Received txn 1483400499520 from hveem.no. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:02,624 - synapse.federation.transport.server - 244 - INFO - PUT-20311- Received txn 1483281149753 from sjemm.net. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:02,945 - synapse.federation.transport.server - 244 - INFO - PUT-20312- Received txn 1483156264688 from matrix.feder8.ru. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:03,086 - synapse.federation.transport.server - 244 - INFO - PUT-20313- Received txn 1483546610287 from disroot.org. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:03,332 - synapse.federation.transport.server - 244 - INFO - PUT-20314- Received txn 1483537176099 from nsa.wtf. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:03,347 - synapse.federation.transport.server - 244 - INFO - PUT-20315- Received txn 1483131143648 from terracrypt.net. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:03,368 - synapse.federation.transport.server - 244 - INFO - PUT-20316- Received txn 1483494039354 from intelfx.name. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:04,138 - synapse.federation.transport.server - 244 - INFO - PUT-20318- Received txn 1483543878435 from catalk.xyz. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:05,220 - synapse.federation.transport.server - 244 - INFO - PUT-20319- Received txn 1483139361885 from maxwellkepler.uk. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:05,233 - synapse.federation.transport.server - 244 - INFO - PUT-20320- Received txn 1483317868265 from karp.id.au. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:05,240 - synapse.federation.transport.server - 244 - INFO - PUT-20321- Received txn 1483544424265 from matrixim.cc. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:06,247 - synapse.federation.transport.server - 244 - INFO - PUT-20322- Received txn 1483512302822 from chat.weho.st. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:06,307 - synapse.federation.transport.server - 244 - INFO - PUT-20323- Received txn 1483124908212 from stvn.cc. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:06,638 - synapse.federation.transport.server - 244 - INFO - PUT-20325- Received txn 1483215466672 from matrix.rkm.id.au. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:07,964 - synapse.federation.transport.server - 244 - INFO - PUT-20327- Received txn 1483446135534 from matrix.clerisy.info. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:08,285 - synapse.federation.transport.server - 244 - INFO - PUT-20328- Received txn 1483549239159 from matrix.xsteadfastx.org. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:08,713 - synapse.federation.transport.server - 244 - INFO - PUT-20329- Received txn 1483143022801 from kvlt.ee. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:08,758 - synapse.federation.transport.server - 244 - INFO - PUT-20330- Received txn 1483546656337 from kyriasis.com. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:09,322 - synapse.federation.transport.server - 244 - INFO - PUT-20332- Received txn 1483543899057 from tapenet.org. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:10,751 - synapse.federation.transport.server - 244 - INFO - PUT-20334- Received txn 1483544824627 from ghostcorp.net. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:10,846 - synapse.federation.transport.server - 244 - INFO - PUT-20336- Received txn 1483474795743 from thewordnerd.info. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:11,069 - synapse.federation.transport.server - 244 - INFO - PUT-20337- Received txn 1483129457927 from waffle.tech. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:11,617 - synapse.federation.transport.server - 244 - INFO - PUT-20338- Received txn 1483528010793 from matrix.mynock.rezosup.org. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:13,345 - synapse.federation.transport.server - 244 - INFO - PUT-20339- Received txn 1483126879747 from matrix.recursiv.com. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:16,538 - synapse.federation.transport.server - 244 - INFO - PUT-20343- Received txn 1483534217626 from 0db.nl. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:21,628 - synapse.federation.transport.server - 244 - INFO - PUT-20348- Received txn 1483537555967 from productionservers.net. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:22,231 - synapse.federation.transport.server - 244 - INFO - PUT-20350- Received txn 1483545460341 from half-shot.uk. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:24,651 - synapse.federation.transport.server - 244 - INFO - PUT-20356- Received txn 1483303469645 from saumon.ninja. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:25,118 - synapse.federation.transport.server - 244 - INFO - PUT-20358- Received txn 1483398037849 from dewitte.id.au. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:27,758 - synapse.federation.transport.server - 244 - INFO - PUT-20362- Received txn 1483352157468 from stratum0.org. (PDUs: 1, EDUs: 1, failures: 0)\n2017-01-04 17:07:29,118 - synapse.federation.transport.server - 244 - INFO - PUT-20363- Received txn 1483302756018 from t2l.io. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:29,151 - synapse.federation.transport.server - 244 - INFO - PUT-20364- Received txn 1483401556256 from sijmenschoon.nl. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:35,928 - synapse.federation.transport.server - 244 - INFO - PUT-20367- Received txn 1483441299376 from binets.fr. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:40,018 - synapse.federation.transport.server - 244 - INFO - PUT-20371- Received txn 1483137220700 from lynxie.net. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:41,574 - synapse.federation.transport.server - 244 - INFO - PUT-20372- Received txn 1483537201197 from 57north.org.uk. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:44,424 - synapse.federation.transport.server - 244 - INFO - PUT-20378- Received txn 1483544345540 from safaradeg.net. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-04 17:07:49,616 - synapse.federation.transport.server - 244 - INFO - PUT-20383- Received txn 1483538144028 from jki.re. (PDUs: 1, EDUs: 0, failures: 0). It may be coincidence, but every single one of those duplicates came from 0.18.5 (or 0.18.6). It didn't fix it. but hopefully b2850e6 does.. this is tested in the wild and seen to be working at last.. More logging for resolving state groups was added in #1767 which will hopefully help explain this. More logging for resolving state groups was added in #1767 which will hopefully help explain this. More logging for resolving state groups was added in #1767 which will hopefully help explain this. presumably related to #1760 . presumably related to #1760 . looks plausible to me. thanks.. looks plausible to me. thanks.. lgtm. lgtm. to be precise, the part does propagate, but the join afterwards does not. Like, if I part/re-join from the riot on my desktop, then 3 hours later power up my laptop and open riot, it believes I'm not in the room.\n. to be precise, the part does propagate, but the join afterwards does not. Like, if I part/re-join from the riot on my desktop, then 3 hours later power up my laptop and open riot, it believes I'm not in the room.\n. This was happening in parallel with lots of servers who submitted event $1483687767387554sbXba:matrix.org due to #1753, e.g.:\n2017-01-06 08:49:53,170 - synapse.access.https.8448 - 59 - INFO - PUT-13228- 37.120.179.15 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483523015750/\n2017-01-06 08:49:53,409 - synapse.federation.transport.server - 138 - INFO - PUT-13228- Request from joinpoint.org\n2017-01-06 08:49:53,409 - synapse.federation.transport.server - 244 - INFO - PUT-13228- Received txn 1483523015750 from joinpoint.org. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-06 08:49:53,784 - synapse.storage.events - 1087 - INFO - PUT-13228- Loading 1 events\n2017-01-06 08:49:54,043 - synapse.storage.events - 1090 - INFO - PUT-13228- Loaded 1 events (0 rows)\n2017-01-06 08:49:54,348 - synapse.federation.federation_server - 620 - INFO - PUT-13228- Still missing 1 events for room '!cURbafjkfsMDVwdRDQ:matrix.org': ['$1483687767387554sbXba:matrix.org']...\n2017-01-06 08:49:54,348 - synapse.http.outbound - 124 - INFO - PUT-13228- {GET-O-7623} [joinpoint.org] Sending request: GET matrix://joinpoint.org/_matrix/federation/v1/state_ids/!cURbafjkfsMDVwdRDQ:matrix.org/?event_id=%2414836889184QNmSd%3Aubbink.org\n2017-01-06 08:49:54,955 - synapse.http.outbound - 209 - INFO - PUT-13228- {GET-O-7623} [joinpoint.org] Result: 200 OK\n2017-01-06 08:49:56,189 - synapse.storage.events - 1087 - INFO - PUT-13228- Loading 9532 events\n2017-01-06 08:49:56,387 - synapse.storage.events - 1090 - INFO - PUT-13228- Loaded 9532 events (0 rows)\n2017-01-06 08:49:56,412 - synapse.http.outbound - 124 - INFO - PUT-13228- {GET-O-7741} [joinpoint.org] Sending request: GET matrix://joinpoint.org/_matrix/federation/v1/event/$1473164078201ZxBil:jki.re/\n2017-01-06 08:49:56,413 - synapse.http.outbound - 124 - INFO - PUT-13228- {GET-O-7742} [joinpoint.org] Sending request: GET matrix://joinpoint.org/_matrix/federation/v1/event/$142399487438KKqoq:lefil.tsar.tm.fr/\n2017-01-06 08:49:56,414 - synapse.http.outbound - 124 - INFO - PUT-13228- {GET-O-7743} [joinpoint.org] Sending request: GET matrix://joinpoint.org/_matrix/federation/v1/event/$14830234852307bwQTM:chat.weho.st/. This was happening in parallel with lots of servers who submitted event $1483687767387554sbXba:matrix.org due to #1753, e.g.:\n2017-01-06 08:49:53,170 - synapse.access.https.8448 - 59 - INFO - PUT-13228- 37.120.179.15 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483523015750/\n2017-01-06 08:49:53,409 - synapse.federation.transport.server - 138 - INFO - PUT-13228- Request from joinpoint.org\n2017-01-06 08:49:53,409 - synapse.federation.transport.server - 244 - INFO - PUT-13228- Received txn 1483523015750 from joinpoint.org. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-06 08:49:53,784 - synapse.storage.events - 1087 - INFO - PUT-13228- Loading 1 events\n2017-01-06 08:49:54,043 - synapse.storage.events - 1090 - INFO - PUT-13228- Loaded 1 events (0 rows)\n2017-01-06 08:49:54,348 - synapse.federation.federation_server - 620 - INFO - PUT-13228- Still missing 1 events for room '!cURbafjkfsMDVwdRDQ:matrix.org': ['$1483687767387554sbXba:matrix.org']...\n2017-01-06 08:49:54,348 - synapse.http.outbound - 124 - INFO - PUT-13228- {GET-O-7623} [joinpoint.org] Sending request: GET matrix://joinpoint.org/_matrix/federation/v1/state_ids/!cURbafjkfsMDVwdRDQ:matrix.org/?event_id=%2414836889184QNmSd%3Aubbink.org\n2017-01-06 08:49:54,955 - synapse.http.outbound - 209 - INFO - PUT-13228- {GET-O-7623} [joinpoint.org] Result: 200 OK\n2017-01-06 08:49:56,189 - synapse.storage.events - 1087 - INFO - PUT-13228- Loading 9532 events\n2017-01-06 08:49:56,387 - synapse.storage.events - 1090 - INFO - PUT-13228- Loaded 9532 events (0 rows)\n2017-01-06 08:49:56,412 - synapse.http.outbound - 124 - INFO - PUT-13228- {GET-O-7741} [joinpoint.org] Sending request: GET matrix://joinpoint.org/_matrix/federation/v1/event/$1473164078201ZxBil:jki.re/\n2017-01-06 08:49:56,413 - synapse.http.outbound - 124 - INFO - PUT-13228- {GET-O-7742} [joinpoint.org] Sending request: GET matrix://joinpoint.org/_matrix/federation/v1/event/$142399487438KKqoq:lefil.tsar.tm.fr/\n2017-01-06 08:49:56,414 - synapse.http.outbound - 124 - INFO - PUT-13228- {GET-O-7743} [joinpoint.org] Sending request: GET matrix://joinpoint.org/_matrix/federation/v1/event/$14830234852307bwQTM:chat.weho.st/. actually this could be #1760 being caught in the flesh. actually this could be #1760 being caught in the flesh. hopefully fixed by         e10c527\n. hopefully fixed by        e10c527\n. confirmed fixed.. confirmed fixed.. The actual stack traces are:\n2017-01-07 13:55:11,625 - twisted - 131 - CRITICAL - PUT-53227- Unhandled error in Deferred:\n2017-01-07 13:55:11,625 - twisted - 131 - CRITICAL - PUT-53227- \nTraceback (most recent call last):\n  File \"/home/synapse/twisted/src/twisted/internet/defer.py\", line 150, in maybeDeferred\n    result = f(*args, **kw)\n  File \"/home/synapse/twisted/src/twisted/internet/endpoints.py\", line 849, in iterateEndpoint\n    checkDone()\n  File \"/home/synapse/twisted/src/twisted/internet/endpoints.py\", line 839, in checkDone\n    winner.errback(failures.pop())\nIndexError: pop from empty list\n@kyrias - it looks from your logs like you're on a dev version of twisted (my copy of endpoints.py on twisted 16.6.0 doesn't match the line numbers of your stack trace at all, and the server is announcing itself as Server: TwistedWeb/16.6.0dev0, and you're also running the develop branch of synapse. \nGiven the stack trace has nothing to do with synapse in it, and is instead stuff to do with iterating over twisted endpoints, my guess is that this is related to the ipv6 stuff; either a bug in the changes to synapse for ipv6, or something weird in your dev version of twisted.\nCan you try against non-dev twisted please?  I'll also try running arasphere on synapse develop (although it doesn't have ipv6 currently) in case i can repro problems there.. can we fix this by putting errbacks on everything? @glyph, is this desired behaviour?\nIn other news, @kyrias and jeremy on #matrix-dev are still both leaking FDs despite turning off the deferred debugging stuff.. @glyph ah ha!! thank you :D. Right: to diagnose the leaking FD issue we did a parallel tcpdump on arasphere.net (unaffected) and kyriasis.com (affected) for a 25 minute window.  It seems that normally client requests get timed out from the clientside after 240s, however with @markrwilliams' TCP logging patch applied we can see that the server also thinks it's trying to time out idle connections after 60s.\nThe stuck FDs seem to be federation connections which send a few requests, and then after 60s the server claims to timeout the connection, but in practice the TCP socket remains established.  The client then tries to reuse the socket, sending a full frame of SSL data which gets ACKed at the TCP layer... but nothing at the TLS or HTTP layers, presumably because twisted is no longer reading from the socket.  This wedges the client (albeit only on 0.18.5 and earlier, which lack application layer clientside timeouts; there is now a 3 minute app-layer clientside timeout added in #1725) - and meanwhile the server doesn't clean up the socket either.  So it leaks forever.\nThis matches the observation that the stuck connections are only from synapse 0.18.5 and earlier (predominantly 0.18.5, because the remaining 0.18.5 instances are still sending rogue federation traffic).\nSo, questions are:\n * why isn't the 60s serverside connection timeout working?\n * how come arasphere.net and others never seem to hit this failure mode?  (we've got one other user, though, Jeremy on #matrix-dev, who is seeing the same misbehaviour). on arasphere I can clearly see connections where there is a gap of >60s between requests on the same TCP stream, but the connection is still cleared correctly by the client after 240s.  i.e. the server doesn't seem to try to timeout the connections after 60s.  this is on twisted 16.6.0 release.. @kyrias downgraded to twisted 15.5.0 and it stopped leaking, so @glyph: i think there is a fairly serious bug in the server initiated timeout code on trunk (which i believe is what @kyrias was on previously).. @Lukasa would you expect loseConnection to be sending /anything/ to the client?  I'm surprised that nothing gets sent to the client at all, and then the next time the client tries to write, it's tarpitted.. @Lukasa Here's a pcap as seen by the server (the matching synapse & twisted logs are available if desired):\nNo.     Time               Source                srcport Destination           dstport Protocol Length Info\n      1 22:08:20.911866    64.137.178.67         40314   212.71.254.33         8448    TCP      74     40314\u21928448 [SYN] Seq=0 Win=29200 Len=0 MSS=1460 SACK_PERM=1 TSval=61963255 TSecr=0 WS=128\n      2 22:08:20.911943    212.71.254.33         8448    64.137.178.67         40314   TCP      74     8448\u219240314 [SYN, ACK] Seq=0 Ack=1 Win=28960 Len=0 MSS=1460 SACK_PERM=1 TSval=29823467 TSecr=61963255 WS=128\n      3 22:08:20.995097    64.137.178.67         40314   212.71.254.33         8448    TCP      66     40314\u21928448 [ACK] Seq=1 Ack=1 Win=29312 Len=0 TSval=61963276 TSecr=29823467\n      4 22:08:21.341872    64.137.178.67         40314   212.71.254.33         8448    TLSv1.2  259    Client Hello\n      5 22:08:21.341921    212.71.254.33         8448    64.137.178.67         40314   TCP      66     8448\u219240314 [ACK] Seq=1 Ack=194 Win=30080 Len=0 TSval=29823596 TSecr=61963363\n      6 22:08:21.370537    212.71.254.33         8448    64.137.178.67         40314   TLSv1.2  1514   Server Hello\n      7 22:08:21.370556    212.71.254.33         8448    64.137.178.67         40314   TLSv1.2  1514   Certificate[TCP segment of a reassembled PDU]\n      8 22:08:21.370699    212.71.254.33         8448    64.137.178.67         40314   TLSv1.2  1028   Server Key ExchangeServer Hello Done\n      9 22:08:21.453436    64.137.178.67         40314   212.71.254.33         8448    TCP      66     40314\u21928448 [ACK] Seq=194 Ack=1449 Win=32128 Len=0 TSval=61963391 TSecr=29823605\n     10 22:08:21.453481    64.137.178.67         40314   212.71.254.33         8448    TCP      66     40314\u21928448 [ACK] Seq=194 Ack=3859 Win=36992 Len=0 TSval=61963391 TSecr=29823605\n     11 22:08:22.385988    64.137.178.67         40314   212.71.254.33         8448    TLSv1.2  384    Client Key Exchange, Change Cipher Spec, Encrypted Handshake Message\n     12 22:08:22.392843    212.71.254.33         8448    64.137.178.67         40314   TLSv1.2  292    New Session Ticket, Change Cipher Spec, Encrypted Handshake Message\n     13 22:08:22.475750    64.137.178.67         40314   212.71.254.33         8448    TCP      66     40314\u21928448 [ACK] Seq=512 Ack=4085 Win=39936 Len=0 TSval=61963646 TSecr=29823912\n     14 22:08:23.755594    64.137.178.67         40314   212.71.254.33         8448    TLSv1.2  1562   Application Data, Application Data\n     15 22:08:23.755643    212.71.254.33         8448    64.137.178.67         40314   TCP      66     8448\u219240314 [ACK] Seq=4085 Ack=2008 Win=34176 Len=0 TSval=29824320 TSecr=61963966\n     16 22:08:23.766593    212.71.254.33         8448    64.137.178.67         40314   TLSv1.2  461    Application Data, Application Data\n     17 22:08:23.849407    64.137.178.67         40314   212.71.254.33         8448    TCP      66     40314\u21928448 [ACK] Seq=2008 Ack=4480 Win=42752 Len=0 TSval=61963990 TSecr=29824324\n     18 22:09:04.526280    64.137.178.67         40314   212.71.254.33         8448    TLSv1.2  1820   Application Data, Application Data\n     19 22:09:04.526346    212.71.254.33         8448    64.137.178.67         40314   TCP      66     8448\u219240314 [ACK] Seq=4480 Ack=3762 Win=37632 Len=0 TSval=29836552 TSecr=61974159\n     20 22:09:04.594728    212.71.254.33         8448    64.137.178.67         40314   TLSv1.2  461    Application Data, Application Data\n     21 22:09:04.677660    64.137.178.67         40314   212.71.254.33         8448    TCP      66     40314\u21928448 [ACK] Seq=3762 Ack=4875 Win=45696 Len=0 TSval=61974197 TSecr=29836572\n     22 22:10:40.766333    64.137.178.67         40314   212.71.254.33         8448    TLSv1.2  1523   Application Data, Application Data\n     23 22:10:40.766396    212.71.254.33         8448    64.137.178.67         40314   TCP      66     8448\u219240314 [ACK] Seq=4875 Ack=5219 Win=40576 Len=0 TSval=29865424 TSecr=61998219\n(raw pcap: http://matrix.org/~matthew/remmy-port-40314.pcap)\nThe relevant bits of the logs are:\n2017-01-12 22:08:20,996 - twisted - 131 - INFO - - Connection.__init__ | fileno: 1271 | addrs: local: ('212.71.254.33', 8448), remote: ('64.137.178.67', 40314)\n...\n2017-01-12 22:08:21,369 - twisted - 131 - INFO - - Connection.write | fileno: 1271 | addrs: local: ('212.71.254.33', 8448), remote: ('64.137.178.6\n7', 40314)\n...\n2017-01-12 22:08:23,756 - synapse.access.https.8448 - 59 - INFO - PUT-72305- 64.137.178.67 - 8448 - Received request: PUT /_matrix/federation/v1/send/1484011296102/\n2017-01-12 22:08:23,759 - synapse.federation.transport.server - 138 - INFO - PUT-72305- Request from shitposters.club\n2017-01-12 22:08:23,760 - synapse.federation.transport.server - 244 - INFO - PUT-72305- Received txn 1484011296102 from shitposters.club. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-12 22:08:23,763 - synapse.federation.federation_server - 158 - INFO - PUT-72305- Discarding PDU $148425889689BYCZr:xndr.de from invalid origin shitposters.club\n2017-01-12 22:08:23,766 - synapse.access.https.8448 - 91 - INFO - PUT-72305- 64.137.178.67 - 8448 - {shitposters.club} Processed request: 9ms (3ms, 0ms) (2ms/2) 11B 200 \"PUT /_matrix/federation/v1/send/1484011296102/ HTTP/1.1\" \"Synapse/0.18.5\"\n...\n2017-01-12 22:09:04,527 - synapse.access.https.8448 - 59 - INFO - PUT-72400- 64.137.178.67 - 8448 - Received request: PUT /_matrix/federation/v1/send/1484011296275/\n2017-01-12 22:09:04,532 - synapse.federation.transport.server - 138 - INFO - PUT-72400- Request from shitposters.club\n2017-01-12 22:09:04,534 - synapse.federation.transport.server - 244 - INFO - PUT-72400- Received txn 1484011296275 from shitposters.club. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-12 22:09:04,536 - synapse.federation.federation_server - 158 - INFO - PUT-72400- Discarding PDU $14842589420sQHoC:schnuffle.de from invalid origin shitposters.club\n...\n2017-01-12 22:10:04,580 - twisted - 131 - INFO - - Timing out client: IPv4Address(TCP, '64.137.178.67', 40314)\nI can't decrypt the pcap as it's using ephemeral DH, but judging by the frames flying around I'm going to assume that you can see the two client-server requests... and then nothing happens at 22:10:04 as the server does the timeout, and then at 22:10:40 you see a new request from the client which is ACKed at TCP but no response otherwise, ever again, from the server.\nSo, TL;DR: yes, the client is consuming its responses.. i'm just trying to help coordinate here :) @kyrias, would it be possible to try patching it?. i think the reason @richvdh is surprised is because he hit the same misbehaviour today on 16.2.  however, i'm wondering if this because 16.2 was missing some other timeout behaviour (as opposed to the stuff which broke in the illfated 16.7 release, which kyrias was running before he reverted to 16.6 and everything got better).. ...and downloading at 600KB/s.  Makes sharing 50MB presentations unusable :(. apparently if you ask it to talk to an HTTP endpoint, it ends up hammering it every few seconds indefinitely :/. CORS normally means that the server served up a 500 error or similar. \nThe fact that the error happened to have no CORS is a distraction.\nI suspect you need to correctly enable it in the config & deps as per \nhttps://github.com/matrix-org/synapse#url-previews\n. @erikjohnston can you take a look at the matrix.org logs to see if we can see csmith's side of the problem?. @ilnurgadelshin can you get back to @erikjohnston on this please? O:-). @ilnurgadelshin can you get back to @erikjohnston on this please? O:-). reopening this given @schnuffle's FDs are still leaking afaik.. reopening this given @schnuffle's FDs are still leaking afaik.. see also #1778. see also #1778. yup, pneumaticat's PR got merged.. the point here is that if you want ipv6 to work fully you have to use 17.1.0 or later. we're not bumping for the hell of it\n. @erikjohnston is there something blocking merging this?. new PR filed in https://github.com/matrix-org/synapse/pull/2088. We've been seeing a few reports of scenarios like this over the last few \nweeks - it sounds like there may be a regression in 0.19.0.\nIs there any chance you can share the full homeserver logs with me via \nMatrix or similar so we can investigate what happened?\n@richvdh this may be relevant to your current interests...\n. we don't have logs due to a config error, but hopefully this is going to \nturn out to be the same as the \"suddenly kicked out of Matrix HQ\" \nproblem that boli.rocks was encountering earlier today...\n. logs have been extracted from the depths of systemd - @richvdh i have them on my laptop if you want to peruse tomorrow.. have conferred; it sounds like this a state reset caused by problems when rejecting invalid events over federation. this is tightly entangled with #1760, which @richvdh is currently blitzing.. tbp this is #1935. this is a proposed temporary (like, 1 or 2 day) solution to stave off a repeat of the thundering herd until we've got a slightly less kludging fix in place.  This buys us time to focus on the UpCloud mig and #1760 and #1935 and other even-more-burning fires.. /me realises his deliberate mistake and tweaks. right, this might be more useful now.. this has been fixed - thanks :). oops - thanks!. @Torxed thanks for investigating this and the PR - very embarrassing that it's been broken for a few weeks whilst we've been panicking around migrating matrix.org to new hardware.  the issue has already been fixed already on develop; we'll be pushing a new release soon.. thanks! have merged into develop in 9037787f0b655067eb28ae689745e60e7472e7b9. hey @Torxed - this looks very cool indeed!  Sorry that nobody has got back to you on it; @erikjohnston has been drowning in synapse maintenance and PRs have been stacking up.\nI'm not sure that contrib/ is the right place for this - the contrib directory really is for stuff which is very specific to synapse rather than the wider Matrix ecosystem, e.g. test-jigs for bits of synapse, or visualisation of synapse's internals.  I think you should host this in a dedicated github repo, just like all the other Matrix appservices are (including the ones from matrix.org) - it doesn't need to be tightly coupled to synapse, and folks can then deploy it and file issues etc as a project in its own right.  If you can provide a PR against matrix-org/matrix-doc we'll be happy to add it to the projects page on matrix.org too :). [cue huge debate over security implications of letting guests relay traffic via TURN if they haven't completed a captcha]. The conclusions here were:\n * Yes, it's a slight security risk to let guests relay traffic via TURN\n * One can mitigate it a bit by turning off TCP-over-TURN relaying (#2011), and adding in application layer filtering (#2009), and configuring per-user quotas for TURN streams\n * However, it's desirable to avoid VoIP being flakey as hell for guests.\nI've documented the security implications and made this a configurable setting, and PR'd it as #2011, which supersedes this one.  Thanks for bringing this into the spotlight! :). oops, thanks; fixed. pants. oh well.. @erikjohnston fixed the perf for the non-federated case.. Looks like it was getting stuck on acquiring the linearizer lock for sets of state events, starting at ~8pm last night and then swallowing reqs and leaking FDs until it started to fail all requests, and then I restarted it at 23:45.  This is pretty damning:\n\n\n. may be related to #1858. @erikjohnston did you mean 20:47?. do we know why it got permenantly stuck?. done, @erikjohnston PTAL (and please assign back when done with reviewing if there's stuff to be done?). would need to also relay DataChannel traffic too.... default is on because the common case is that homeservers who allow guests will want their guests to be able to reliably use VoIP.  particularly paranoid HS admins who want to avoid the risk of abuse may want to disable it.. i would love to know from @glyph and the twisted guys whether we are missing a trick with Twisted and whether this is the Right Way or not to solve this.... yup, @markrwilliams pointed us at https://bitbucket.org/hipchat/txlocal from the nice folks at hipchat. Just wondering if there are other options for doing this.... @glyph has left words of wisdom at https://twitter.com/glyph/status/843172834566332416. might be worth mentioning them in the \"what if we did this differently?\" section at the end.. oops, thanks!. is this not just that they changed their signing key, but the perspectives server is still emitting the old one for the next 24h until it times out and starts believing the new one?. hm. what if they lost their signing key, and created a new one, deliberately naming it with the same label as before?  (hence the name being the same, but the wrong signature from the pov of the notary?). @kythyria pointed out that it must already seed state from the dir server, given it knows of no other server to seed it from(!!)\nI was getting mixed up with backfilling from arbitrary slow servers.. this PR sponsored by http://stackoverflow.com/questions/93551/how-to-encode-the-filename-parameter-of-content-disposition-header-in-http/216777#216777. bah, guess i need to fix the tests. will wait for PR review first. https://github.com/matrix-org/sytest/pull/350 should cheer up sytest.. if this causes pain, please suggest something better... surely postgres' multithreading should be helping us. Or are you objecting to the suggestion that performance overall has actually increased?\n\nOn 30 Apr 2015, at 19:29, Erik Johnston notifications@github.com wrote:\nIn README.rst:\n\n@@ -170,7 +170,7 @@ traditionally used for convenience and simplicity.\nThe advantages of Postgres include:\n- * significant performance improvements due to the superior threading and\n- * significant performannce improvements due to the superior threading and\n  nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n\n\u2014\nReply to this email directly or view it on GitHub.\n. oh, i'm blind. i thought you were growling...\n. I suggest we doc the draft spec of how it works (as opposed to the rationale doc) in matrix-org/matrix-doc - either as a branch or in drafts/ such that it converges on something that can be easily merged into the main spec?\nOn 18 Aug 2015, at 18:39, Daniel Wagner-Hall notifications@github.com wrote:\nIn synapse/handlers/register.py:\n\n@@ -274,11 +274,18 @@ def check_user_id_is_valid(self, user_id):\n                 )\ndef generate_token(self, user_id):\n-        # urlsafe variant uses _ and - so use . as the separator and replace\n-        # all =s with .s so http clients don't quote =s when it is used as\n-        # query params.\n-        return (base64.urlsafe_b64encode(user_id).replace('=', '.') + '.' +\n-                stringutils.random_string(18))\n-        macaroon = pymacaroons.Macaroon(\n-            location = self.hs.config.server_name,\n-            identifier = \"key\",\n-            key = self.hs.config.macaroon_secret_key)\n-        macaroon.add_first_party_caveat(\"gen = 1\")\n-        macaroon.add_first_party_caveat(\"user_id = %s\" % user_id)\n-        macaroon.add_first_party_caveat(\"type = access\")\n-        now = self.hs.get_clock().time()\n-        expiry = now + 60 * 60\n-        macaroon.add_first_party_caveat(\"time < %s\" % expiry)\n  Done. All of the examples I've seen use spaces as padding, but there's no good reason to.\n\nI've documented the constraints in https://bit.ly/matrix-auth - we should push it into the spec at some point, when it's a little more stable.\n\u2014\nReply to this email directly or view it on GitHub.\n. should we try something /slightly/ more unusual than < and > for the demarcators?  Perhaps \u2039 and \u203a?\n. why has the method name changed?\n. *Requests\n. empirically it is... unsure how to proceed on this one.\n. ah, the problem was that i had been returning rather than raiseing in the async GET when things went wrong, i think. now fixed.\n. Do these ConfigError exceptions actually get raised anywhere meaningful? When I tried it this way before, there was no logging set up whilst the config was being parsed, so they got swallowed.\n. why remove lxml but keep netaddr?\n. why have you removed the user-friendly log warning as to why the API was disabled?\n. really? surely purge_media or something?\n. preceeding?\n. this\n. chopped\n. might be worth commenting to point out this is a deliberate utf8 ellipsis glyph and that we are confident that this isn't going to cause explosions either on the server or clients because...(?)\n. why do we clone it?\n. so does this let PDFs execute arbitrary JS?\n. actually, this looks like it should be len() - 1\n\nactually, i've got confused again on how this is meant to work. This would be so much clearer with a few more comments......\n. s/not/no/\n. It feels like a shame to remove the links to the official SDKs here.  I know we also link to the huge project page, but saying \"hey, the official SDKs for JS, iOS & Android are here - please go get started!\" feels worthwhile.. This is a great place surely to link to info on e2e, which will be the next question of anyone reading it.  Surely we should link to it, or at least to the beta blog post or something?. I think we should warn people to get the right name from the get go, given they can't rename servers.. this obviously begs the question as to how keys & perspectives are validated. i suspect we should update it with a quick explanation of wherever the key validation stuff is at.. surely we should spell out whether these are for federation, CS, or both, or what. as matrix.org, we really can't specifically recommend Riot.  i suggest \"The easiest option is probably...\" or \"One option is...\". how? should probably link back to the \"how to connect a client to your HS\" section. shouldn't we point people at the federation testing HTTP API?. s/other//. I do not think this is true any more, since Mark's TLS changes - all synapse needs is to be told the fingerprint of the certificate, which can be passed in as a tls_certificate_fingerprint option or something like that?. this contradicts the doc later on, where we say that self-signed are fine.  i think we should spell out better when we can and can't get away with self-signed (i.e. client v. fed, again). or perhaps provide a link to the bit where we mention it later on. in bold: They are not where accounts or credentials are stored - these live on home serves.  Identity Servers are just for mapping 3rd party IDs to matrix IDs.. (i know you say this at the end, but i think it bears reiterating). I'm unsure about bumping synapse development so low here.  I almost feel we should give users the choice of either installing via pip or git (or OS package) from the outset, as it's common for people who install their own server to then want to fiddle with it a bit, and obviously a git checkout is the best platform for doing so.... Why delete the link to the spec?  This is kinda important.... Can we have the example in here of how to listen on ipv6 too, even if commented out?  presumably\n```\n- '::'  # to listen on all IPv6 interfaces\n``. what's the rationale for usingdict()rather than{}here? i think the existing code style is to use{}`.... it's going to be such a common scenario (plus we want to advertise that ipv6 is here, yay!) that i suspect it's worth spelling it out (assuming you are sure that the second bind will fail?)\nhow about:\n# uncomment to listen on all IPv6 interfaces\n # N.B. on Linux this also listens on IPv4, so you'll need to comment out the line above.\n # - '::'. looking through the results of that grep, none of those uses seem to be for constants like this, which is only why it jumped out as looking weird. it's trivial, but probably worth fixing. (disclaimer: i'm hardly a python expert, but trying to help fill in whilst @erikjohnston is out). okay, i'm happy to defer (and yield, for that matter) to python wisdom here ;). might be nice to fix the s/presenc e/presence/ typo on line 610. you're going to hate me for asking this, but: should we be canonicalising MSISDNs here? or are we assuming the client has already determined normal form?  (If so, a comment would be useful). why is it 3 mins here, but 2 mins in the _time_things_out_maybe above?. s/Endoint/Endpoint/ probably ;). hm, is this meant to be here?. why do we do this by both a callback and a reactor.callLater()?. Acquiring. Acquired. acquire. academic. did you not see all my emoji reactions?!? ;p. the github mobile app is utterly useless :(. did you say something about set() being bizarrely slow in py2.7?. do we really want to raise an exception on 300s?. I'm a bit confused - why can't we just pass the Matrix-style error response through to the client?. \"violation\". every pushed message. It would be good to add that this is a temporary measure - in future we expect both GCM/FCM & APNS/PushKit to simply wake up the app in order to display the local notification.. fixed now.. spurious LF?. let's call it @room. i deliberately wasn't doing this (and instead thought the user can blow away the user_dir caches if they change the option), as for bigger servers it's going to make the user_directory and user_directory_search tables enormous, and slow down the FTS for a feature which may not even be being used.... hm, point. so your suggestion is to batch? and yes, we probably should be including AS users.. mm, point.. have made code, msg & errcode unconfigurable, and de-optionalised current_version.. done. done. oops; added for consistency with uploads now. mmm. fixed.. done. i think this is preemie optimisation; we don't even have a flow yet where the bulk upload is used. so have added a comment instead.. done.. it means you can delete the backup, yup.. I briefly considered having /room_keys/keys/$version/$room_id/$session_id as the URI, but decided not to because it implied to me that the schema could change between different versions - whereas in practice a given /room/_keys/keys/$room_id/$session_id URI should have the same content irrespective of the version, which just describes the encryption key. This rationale is pretty ropey though.\n@erikjohnston Think it's worth changing to embed it in the path instead?. I didn't bother checking that version was supplied; i think it will explode fairly sensibly if it isn't?\nNot sure what the point of splitting into POST and GET/DELETE would be?  And shouldn't POST have the same path anyway? (although ugh rest https://medium.com/@pakaldebonchamp/rest-is-the-new-soap-97ff6c09896d). so there is.. i'd rather not lose the code on the floor, given it may well be useful in future.. thanks; done. fixed. oops, fixed.. fixed to be called e2e_room_keys_versions which is more grammatically correct, given we are talking about versions of sets of backup of multiple room_keys here.. oops, fixed. ok, done. done. done. I've changed the semantics so that if version is missing it gives you the most recent version (and 404 if there are none).\nI've experimented with building /version into the path, but it feels pretty clunky (given you'd need to know the version in order to know the path, meaning that things like 'give me the current version' are harder to express).\nI've also thought about whether POST /room_keys/version returning an ID which can then be used with GET/DELETE /room_keys/version/$id is bad form, but from my pov this is a pretty standard RESTy pattern.  Especially as we now also have GET /room_keys/version to return the current version.  Also, I think this is increasingly dubiously subjective, and in practice as long as it works I'm not sure the precise API shape is that critical unless it's spectacularly inconsistent with the wider CS API.. for GET /version when there is no most recent version, you should get a 404, as the docstring says.\nI've fixed DELETE /version to delete the current backup version info, for symmetry with the rest of the API, and added a test for it.. done. no idea. fixed.. fixed. yeah, i've asked @dbkr to clarify the impact on the other 3PID manipulations. oops, thanks. we're not trying to solve for that use case here, plus having talked to @dbkr it's hard to do anyway - as /account/3pid goes and adds the email to your account (letting you log in with it) as well as optionally binding it on the identity server... so you can't separate the two easily anyway.\nHence me splitting it into:\n * What 3PID media do we mandate at registration?\n * What format 3PIDs are allowed to be added to accounts on this HS?\n...with no restrictions on formats valid on ISes.. btw, this is a good example of a review comment where I'm staring at it thinking \"does he really want me to rewrite it again? or is he just voicing a random comment?\".  It might be worth clearly spelling out which comments actually block accepting the PR from your POV, otherwise the committer has no option than assume everything is a request for change.... this convo ended up in IRL as dave presumably missed this comment: the impact is:\n * There are three request tokens atm for verifying 3PIDs:\n   * registration\n   * password reset\n   * adding a 3pid to your account for use in login (which in turn tries to go bind it on the IS if asked)\n  * this PR restricts the format of all three with allowed_local_3pids\n  * it does not limit IS bindings (other than in a weak manner given in practice the account/3pid api is used by clients today to trigger bindings). good point; fixed.. this was a thinko which i forgot to fully fix - thanks.. yes, it is unrelated, other than being pulled in to fix the tests whilst doing this PR.  given it's trivial, i'd prefer to not burn the time splitting it out at this point.. isn't this too much whitespace?. i stared at this stupidly thinking that \"event persistence loop\" meant the loop immediately above which is purging and persisting the new events... rather than the general BAU activity of persisting events. \nIf you can clarify that you're talking about \"synapse takes out an exclusive lock on room_depth whenever it persists events...\" it would avoid confusing bears of very little brain such as I. Shouldn't this also be handling the macro endpoints for creating events (https://matrix.org/docs/spec/client_server/r0.3.0.html#post-matrix-client-r0-rooms-roomid-ban etc)? Or are they deliberately being left on the master as they're not that common?. I was just finding it very confusing to try to guess whether the {} is a response body, or parsed URL segments, or what - especially _get_handler_for_request seems to append its own {} tuple alongside the returned handler... just a snidget of pydoc feels like it would be useful for confused bears. (especially as it looks like you were confused too, based on missing the 200). yes, it is. guess it is fragile if you have dups in the list. stupid brainfart on .join(where_clauses). i may be going insane, but i'm failing to see why? it's used outside the if clause, so isn't it nicer to define it at the 'right' scope level, rather than give the impression that it's scoped to the if block (even though python scoping extends to the whole def?). yes, although unclear what that buys us? (plus in my lazyloading PR we do have other if's at that point). surely where_args & where_clauses are used much later on to actually execute the query. hence defining them at the scope common to both. or are we talking about different if clauses?. should that be \"> 30 days apart\"?. \"more than 30 days ago\"?. correct; this is an experiment in replicating user profiles over to the IS so that for private IS deployments the IS can act as a global address book.. we need to say that this is an experimental addition to the identity server API for supporting global user directories, and that the targets here should be identity server hostnames (otherwise folks will assume it's for HSes). It'd be good to spell out in a comment why we're looping _replicate_profiles.  I can see we'll need to do a catchup job at launch, but why do we then keep running it every 2 minutes, given whenever we set profile data it kicks off a sync anyway?. How does this handle overlapping calls? (e.g. two _replicate_profiles runs being kicked off by two users setting profile data at the same time, or colliding with the looping syncer)?. s/saerch/search/\nlet's also spell out that it's an experimental API.. i think the standard in synapse is to put all event types in Types. need to spell out why it's safe to not filter for \"shared\" history visibility (apparently because 'all the places that call it check the server is in the room'?)\n. don't we need trailing comma for pep8?. it throws:\n```\n\n\n\na=\"\\xa9\"\na.decode(\"utf-8\")\nTraceback (most recent call last):\n  File \"\", line 1, in \n  File \"/usr/local/Cellar/python@2/2.7.15/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings/utf_8.py\", line 16, in decode\n    return codecs.utf_8_decode(input, errors, True)\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xa9 in position 0: invalid start byte\n. looks like this is a better bet:\na.decode(\"utf-8\", \"replace\")\nu'\\ufffd'\n``. hm, why?. hm, why?. done.. i believe it is needed, as that cache is used to track device existence and we're deleting a device here. whereas in the upsert case we're not deleting a device.. done. this was a note to self which snuck in.. done. yes. on the https://github.com/matrix-org/synapse/pull/3331/files branch the second branch evolves to filter out the redundant members to stop repeatedly spamming lazy-loaded members to the client in each and every /sync.. have added a comment to answer the above.. fixed byfiltered_types. fixed byfiltered_types. have adoptedfiltered_typesas suggested; it definitely feels better - thanks.. cargo-culted from what was there before.. fixed byfiltered_types`. yup, i came to the same conclusion in the end. have updated the comment.. done.. I don't understanding the caching stuff to know how best to handle this - or whether this method should be combined with get_current_state_ids above, and somehow share the same caching.. hm, possibly not. i guess that if they are already in the timeline then it's redundant to also include them in state.  (although I'm surprised this didn't show up in sytests). done. done. done. done. done. I seem to have a mental block on this; sorry.  The fact I can't understand what you're proposing makes me wonder how anyone else is going to understand it in future, unless this is just me being particularly thick.\n\n\n\nAs far as I can tell, my implementation and comment for filtered_types matches the behaviour that you're wanting.\npython\nstore._get_state_groups_from_groups(groups, [], filtered_types=['m.room.member'])\ngets turned into:\nsql\nselect stuff where type <> 'm.room.member'\n...which is what you were asking for?  (types is [], so you don't get any and type=? and state_key=? added to the where clause, leaving filtered_types, which is applied as a series of and type <> ? clauses).\nIs the problem here that the python doc isn't clear enough?  Your suggestion of:\n\nIf not None, gives a list of state types which must match entries in types to be returned; other types of state are returned unfiltered. If None, all state types must match entries in types.\n\nseems to match the behaviour of my suggestion of:\n\nOnly apply filtering via types to this list of event types.  Other types of events are returned unfiltered. If None, types filtering is applied to all events.\n\nIn other words: if filtered_types is specified, you should only apply filtering using the types field to the types given in the filtered_types list.  Others get returned unfiltered.  Is that clearer?\nOr have I just got an enormous blindspot on this?. done. hopefully fixed whilst refactoring into _calculate_state.. i'm hoping the refactored solution is good enough, unless you're suggesting removing the intermediary sets on all of them?. no, the idea is to just ensure that any members in the timeline get lazyloaded. we don't care what happened during the gap. hopefully moving it to _calculate_state has clarified things.. oh, right - i was looking at the sqlite clause which gets it right already with if types is not None:; looks like i thinkoed with the if types: on the postgres clause. fixed.. so to check i understand: you're saying that _get_state_for_groups deliberately loads all state from the DB if we are querying state_key wildcards in order to fully populate the cache.  So none of the filtering gets applied to the DB, so the filtered_types stuff is irrelevant and will never apply.\nI'm not convinced - surely if you call _get_state_for_groups with types of [('m.room.member', '@matthew:matrix.org'), ('m.room.member', '@richvdh:sw1v.org')], there are no wildcards present, and so the request will go all the way through to the DB - and you'd need filtered_types to be set to ['m.room.member'] to get the rest of the state.\nOr are you saying that because filtered_types acts as wildcard (i.e. \"please return me all state outside this list\"), we should go and blindly load all state out of the DB and then apply the filtering in the update the result phase?. i.e. something like https://gist.github.com/ara4n/55475cfe72c172e7df89b52eb20d25e3 ?. i've stared at this some more and am failing to guess or see why you think it's doing the wrong thing.. hopefully covered by my gist in the comment below, but if you can take a look at the gist patch before I put yet more dead ends into this PR it'd be appreciated.. i don't understand why you are trying to remove stuff from p.ids, which are the IDs of the state at the end of the previous sync (if any).  the idea here is to add state for the lazy-loaded members into the result, not remove stuff from the previous sync result, where it probably doesn't exist in the first place?. have rewritten the comment again.. done.. done.. actually, i'll just push it.. ok.. right, missed that - thanks. hopefully e22700c3d resolves this.. sorry, i totally missed the messy [] special case. if it's any consolation, i strongly suspect i'd have missed it in a UT too.. i find is_all or (not missing_types and filtered_types is not None) incredibly cryptic to reason about, to the extent i'm failing to convince myself it's even right.\nFor instance, if this is called with types=[] and filtered_types=[whatever], then is_all could well be false (if the cache is empty), and missing_types would be falsey, and filtered_types would not be None... so got_all would be true, which is the wrong answer.\nWhich is why I very deliberately spelt out the special case we're handling here where types=[], so we can't trust missing_types, which feels a lot easier to reason about.. done. it feels like a useful thing for the function to be returning tbh, even if it isn't used, but given the filtered_types stuff means that we can't easily enumerate the types which are missing from the result, i've removed it.. okay.. i've added a bunch of tests of _get_some_state_from_cache for both partial and full caches. I'm failing to see or guess why you don't think it's right, and the tests pass, but this might be that i've missed the right test because you haven't spelt out what you think is wrong.. @bwindels already hit this actually whilst implementing it on riot-web. we'll need to mandate that clients do a re-initialsync if they change their lazy-loading config (whether that's wrt redundancy or laziness). i'll add it to the prop.. done. hysterical reasons. fixed.. done. i've fixed up the proposal doc to explicitly demand {true|false} there. This is however being strictly validated anyway via the JSON schema validation over at: https://github.com/matrix-org/synapse/pull/3331/files#diff-ed81002a2d319904392e1a6f871eb2edR121. good point. fixed.. (although I maintain the cache as state_key => event_id for simplicity and efficiency, as type is redundant). shouldn't we include some info about the error we got from the IS?. no? surely it's just the diffing algorithm inserting _check_in_room_or_world_readable before get_state_events but getting confused by the @defer.inlineCallbacks and so reusing the existing one rather than inserting it cleanly?. oops, good point. have changed it to send them every time for now (including if 0); the optimisation to only send them when they change can be done later.. oops, fixed.. oops, fixed.. um, ok. the assumption is that the client will already know about joined members who are now leaving.. hopefully state won't be that large, as it'll be LL'd. have added some comments to try to clarify what's going on here.. i was saying this, but on closer inspection it turned out we\u2019d never defined it as such.. agreed. @richvdh, wdyt?. only that get_state_events() felt like a pretty generic method, and raising a 403 might break stuff upstream. in practice it's only used by /state and /members so i think it's fine - have switched to throw 404 if the token isn't recognised and 403 if the event at that token is filtered out wrt our user.. have unpoked.. yup, you're right - i'd forgotten (again) that the postgres branch implements the clauses as a series of selects rather than concatenating them.. This is certainly much terser, but ironically i personally find it much more cryptic and hard to reason about, whereas the simple symmetricity of \"if we're lazy-loading members, split the query intelligently. if we're filtering on types, split the query naively. otherwise, split the query without filtering\" felt clearer by spelling out the flows we care about and following the same pattern for each branch.\nHowever, I don't have strong feelings, and it's nice that this handles the whole \"what if filtered_types is a longer list that contains EventTypes.Member\" scenario better (which I'd considered, but fell through to the naive handler).  So i've gone with it (with a comment to explain the somewhat magical 'None' in the final line).. not sure i follow. passing the right cache object into _get_state_for_groups_using_cache seems fine to me, and simplifies all the other cache references to just be cache.get etc? And _get_state_groups_from_groups is already taking the bool|None to say whether it should be limiting to members or non-members or not.  Or is the problem just the inlining the boolean expression?. okay, that's how i interpreted, but am unsure that a cryptic bool flying around the place is better than saying \"use this cache please\", even though it does mean we end up with the slightly backwards comparison here back to a bool. i'd rather leave it as is if you're borderline.. I'm assuming this is happening in the weird tables where we inexplicably store JSON as binary, like users_filter.  Looking at this with psql, the rows look like:\nmatthew |       130 | \\x7b22726f6f6d223a7b2274696d656c696e65223a7b226c696d6974223a32307d7d7d\nwhich sure enough looks like \\x7b ({) followed by a bunch of ASCII hex digits.\nSo, either it's being inserted in the first place in the mangled format, or the postgres client library (or server?) is incorrectly displaying it with only a single preceding \\x rather than correctly putting a \\x before each pair of hex digits.\nThe type of this column is:\nfilter_json | bytea\nLooks like postgres is behaving as intended when displaying a bytea as \\x.............; this is what you get if the bytea_output global is set to hex.  If you set it to escape (the other valid value), you get this instead:\n```\nmatrix=# set bytea_output='escape';\nSET\nmatrix=# SHOW bytea_output;\n bytea_output \n\nescape\n(1 row)\nmatrix=# select * from matrix.user_filters where user_id='matthew' limit 1;\n user_id | filter_id |             filter_json            \n---------+-----------+--------------------------------------\n matthew |         0 | {\"room\": {\"timeline\": {\"limit\": 8}}}\n(1 row)\n```\nSo it looks like the data is okay in the DB, it's just that the python postgres library is interpreting \\x1234 as a python-style hex escape sequence rather than this horrible mutant postgres hex sequence.\nSo, looking at psycopg's FAQ (http://initd.org/psycopg/docs/faq.html#faq-bytea-9-0), it turns out we're not the only people with these woes, and the solution is simply to do the same trick as above and explicitly set bytea_output='escape'; and then everything will be green & submarine.\ntl;dr: let's kill this with fire and set bytea_output='escape'; instead :). actually, reading the FAQ some more, it sounds like this shouldn't even be a bug if we are running psycopg 2.4.1 or later with libpq from 9.0 or later.  On matrix.org right now we look to be running psycopg 2.7.5 with libpq 5.10 (i.e. for postgres 10) - so i think this should be absolutely fine.  Was this just that you were testing on a box using an ancient python postgres client?\nI guess we should probably set bytea_output='escape' to be safe.. (even nicer would be to kill these bytea tables with fire - i have no idea why they are byteas; it looks like they were originally created as LONGBLOBs in a fit of overenthusiasm/confusion, despite them just being utf8 JSON). I'm really surprised this is called timestamp, which is a reserved keyword in postgres and most SQL (it's a data type), as you can from the syntax highlighting.  It also doesn't describe what the column is used for - surely it should be last_active or similar?. this would be monthly_active_users_timestamp to be consistent, as timestamp is one word. (it's also a problem because you can't rename columns in sqlite, so we really want to get it right the first time).. oh, crap, yes; my bad. should just be looking at the agr of the user in that instance and ignoring the MAU table entirely, which simplifies things even more and gets rid of the fugly left join. oh, crap, yes; my bad. should just be looking at the agr of the user in that instance and ignoring the MAU table entirely, which simplifies things even more and gets rid of the fugly left join. given we already have test_monthly_active_users perhaps this should go there? or be renamed test_trial_mau?. confirmed; have added comment.. This doesn't seem to work in a synchrotron environment, presumably because the invalidation never gets called on the sync worker and so the sync worker keeps serving up the stale cache.  I'm not sure what the correct fix is though.  https://github.com/matrix-org/sytest/commit/b1dbc28aca5409617b3d93ee97364484d6b3e938 is a test for this, but it seems we don't run sytest against worker configs :|. empirically it really wasn't; i was seeing many many /syncs in a row returning the stale counts (reporting a room with 14 members as only having 3, after manually joining 9 test users over the period of several hours).  however, the sytest always seems to pass. help? :/. because ze spec says that we should only use gone_user_ids if the room no longer has any joined or invited users.. TIL :). yes; i was worried about creating a new large cache in addition to the one we already maintain of room members, and so wanted it to be small (i'm assuming that tuples take up less room as they don't include key strings).. (this was following the pattern already present, fwiw). agreed; this was just trying to be consistent with what was already there.. we need all of them, as the naming algorithm could require all kinds. have added an ORDER to improve things however.  Can we rely on the ORDER returned by postgres for a given membership type being consistent over time however?. this is because i am a monumental crank and the master process wasn't running this branch - sowwy.. well, people 'delete' it by blatting {} over it.. oops, thanks. clarified. it wouldn't.. it seems safer to keep it there, as a cautionary bounds check? (e.g. if/when we enable LL for incr syncs again). the only way to do it at start would be if we also autocreated an admin user, which in turn then means shared-secret registering them and then setting up their profile and 3pid and passwords etc correctly.  agreed this would be cleaner, but this is intended as a fast fix to avoid having to do that in the provisioning process, on the basis that the first user who signs in is 99% always going to be the server admin, and if it isn't, then you can always repoint the alias.. oh, possibly.. sorry, this is confusing. the order of the parameters is correct: the value of hide should indeed be True, as it's telling set_active to edit the hiddenness of the profile rather than its activity.\nhowever, I completely thinkoed by making {hide_profile:  false} mean \"hide the profile\" rather than \"show the profile\". So i've fixed that now.. no, here we're not operating in hide mode, so hide should be False.. should this be /? to make the slash optional?. (similarly the others, to stop us from choking on folks who include /). i'd suggest saying `filename` here, to make it clear you're talking about `filename` rather than `filename`. why not do filename everywhere?. you mean good support for filename*?\nokay, fair enough.. ",
    "erikjohnston": "LGTM\n. LGTM\n. ok to test.\n. ok to test.\n. test this please\n. test this please\n. (Those comments were directed at Jenkins ftr)\n. (Those comments were directed at Jenkins ftr)\n. Looks good for the most part.\nA couple of things:\n1. We don't seem to reset the timeout if we receive something for a destination\n2. Using Table class is deprecated, instead we use simple_select and _simple_insert from storage.base.\n3. We probably want to log connection problems as warnings rather than exceptions. Relatedly, we probably do want to add errback to the enqueue_pdu deferreds so that they don't trigger the \"unhandled failure\" loggers.\n4. We don't seem to have a plateau for retries.\n5. We probably want to retry a few times before dropping the transaction. Otherwise we may miss invites while restarting servers and never seem them again.\n. You also seem to have quite a few lines that are > 79 characters, which is upsetting PEP8\n. synapse/federation/replication.py:887 seems to be resetting the timers when we successfully send something? What I meant was do we reset the timers if we successfully _receive something?\nMy last concern is that by disabling retries of transactions you are removing an entire layer of reliability mechanisms. This is the first time I've heard anyone claim that the retry logic was causing CPU spikes? I think this branch should drastically reduce the number of times we hit out to dead servers even if we leave the current retry mechanism in place.\nIt's rare that I have annoyances with wrapping lines to 79 characters any more. The benefit of it is that it makes editing two files side by side much nicer.\n. I also have the directory listing down the side that takes space :)\n\nAlthough I'd still like us to not blindly retry at all levels but just have one well defined place where we actually perform reliability (i.e. the txn layer) in future.\n\nYes. Patches welcome :)\n. Please:\n- Merge in develop\n- Fix tests, I believe its just pyflakes throwing a wobbly\n. Personally, I would not define Pusher class in __init__.py\n. IRL: If the push gateway returns a 4xx response, we may want to continue processing events rather than retrying.\n. Otherwise, LGTM\n. > Personally, I would not define Pusher class in __init__.py\nIn my mind, stuff in __init__.py should be for things only used by external modules. (Though I appreciate we aren't entirely consistent here)\n. That's interesting. I don't think we've seen that before; we're looking into what could cause that now. What version of twisted are you using out of interest?\nAlso, just a note that the --server-name should be set to the domain name other servers can talk to you via (see https://github.com/matrix-org/synapse#setting-up-federation for details). I'll change the help for that option to be slightly more helpful :)  (Of course this doesn't matter if you're just running it locally.)\n. Interesting, it should have pulled in twisted version 14 or above. How did you install it? If this is a git checkout of the code you will need to run python setup.py develop --user. \n. (We should check add a check for this at runtime too)\n. (My understanding was that installation via pip should pull in the correct dependencies?)\n. Hmm, I wonder if the python environment is somehow preferring system installs instead of user installs. If you could check where its pulling in pyopenssl that would be great, If you just run python in that directory and do:\n\nimport OpenSSL\nprint OpenSSL.__file__\n\nthen that should tell us where its getting pulled in from.\nIf you're free it might be easier to debug this on #matrix instead?\n. LGTM\n. LGTM\n. LGTM.\n. LGTM\n. LGTM\n. Oops, that is against the wrong branch,\n. LGTM.\n. LGTM\n. Jenkins: Test this please\n. Or.... test this please?\n. Or.... test this please?\n. Can someone have a look at this again please?  It passes sytest now :)\n. Can someone have a look at this again please?  It passes sytest now :)\n. jenkins: test this please.\n. jenkins: test this please.\n. Could you also update the delta file to include the schema changes please?\n. Could you also update the delta file to include the schema changes please?\n. How do you use this script? Can you specify the database location?\n. How do you use this script? Can you specify the database location?\n. And the only changes i see is the single added perl file?\n. And the only changes i see is the single added perl file?\n. I see no changes to synapse code base in this PR, like i said, i only see the single added perl script?\n. I see no changes to synapse code base in this PR, like i said, i only see the single added perl script?\n. Hmm, jenkins doesnt seem happy\n. Hmm, jenkins doesnt seem happy\n. Looks alright to me otherwise.\n. Looks alright to me otherwise.\n. LGTM\n. We evict entries in def _prune_cache(self):\n. We never update the state group after the initial persistence. That will probably change at some point, but that is fine for now.\n. LGTM\n. LGTM\n. jenkins: test this please\n. jenkins: test this please\n. LGTM\n. I guess we could. I'm just cautious about deleting stuff from users file system though.\n. > It might be an idea to bump the soft limit to match the hard limit by default.\nDone\n. Probably, it is a very blunt implementation mainly intended as a first cut for people setting up their own HS who are unlikely to be running ASes.\n. I quite like the idea of having the __devel_version__.\nWe already have a get_version_string() [1] that checks for a git environment at run time. This is currently only exposed as User-Agent and Server headers on HTTP request/responses, but this should also be exposed with a --version flag.\nWhat would be really nice is if we could get a commit id in the version when installing via pip. This is currently done by asking github for the source tarball, so I'm unsure how feasible that is.\n[1] https://github.com/matrix-org/synapse/blob/master/synapse/app/homeserver.py#L212\n. Also, when we start building and uploading synapse to pypi we can apply the git commit then too.\n. > We can move the get_version_string() to the setup.py function and set from here the __devel_version__ or version. The get_version_string-function is only one time referenced.\nThe problem there is that setup.py isn't run if you're actually running servers straight from a git checkout (which is done when developing). I think we currently hit functions in synapse package from setup.py(?), so its probably nicer to stick the get_version_string function somewhere nicer in the synapse package.\n\nI can add the --version-option.\n\nThat would be quite useful and much appreciated :)\n\n@erikjohnston for the pip-version thing, it should enough to add the devel_version to version in setup.py, or? like version += \"-\" + devel_version.\n\nThe problem is when/where setup.py gets run. If you do pip install --process-dependency-links https://github.com/matrix-org/synapse/tarball/master then setup.py will never get run in a git checkout. \n. Other than in-line comments, LGTM.\n. Could you also update the CHANGES and UPGRADES to note that servers using CAPTCHAs will need to update their config.\n. LGTM.\n. LGTM.\n. How complicated would it be to write a database upgrade script?\n. Then its probably worth writing one so that we at least include it in the UPGRADES just in case.\n. Otherwise LGTM\n. We should probably bump the schema version in synapse.storage and the upgrade script to enforce that its run.\nCould you also add the note in UPGRADES.rst so I don't forget come release time :)\n. Otherwise LGTM.\n. LGTM.\n. Yay!\n. LGTM\n. > Do we have a regression test to prevent this bug from happening again (in Sytest or otherwise)?\nI think Leo is adding a sytest.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Things left to do:\n1. Don't bother porting over the entirety of sent_transactions\n2. sytest reports presence failures\n3. ~~Check that the DB connections recover correctly after DB server restart (this seems to have bitten Matthew?)~~\n. > Check that the DB connections recover correctly after DB server restart (this seems to have bitten Matthew?)\nWe probably want to use cp_reconnect: http://twistedmatrix.com/documents/current/api/twisted.enterprise.adbapi.ConnectionPool.html#init \nOr, since we use runWithConnection simply catch the exceptions ourselves and call Connection.reconect()\n. > Is it possible to migrate from postgress back to sqlite3?\nThere is no script to do so currently.\n. Using VARCHAR(150) was from when I was looking at MySQL support. Have changed them to use TEXT.\n. LGTM\n. Against wrong branch.\n. LGTM\n. Does it support the old file format correctly?\n. LGTM\n. Functionally, this looks good.\nIt might be nice to try and reduce the boiler plate to invalidate a cache. Possibly add txn.call_after(f, *args, **kwargs) to the Transaction object that will call f(*args, **kwargs) on the main thread after successful execution instead?\n. LGTM\n. Question: Should we be preserving logging contexts when we add callbacks, rather than preserving the logging context from when we invoke preserve_context_over_deferred?\n. While running sytest I do get some warnings about mismatched logging contexts. I think this is when we finish processing one request, return back to the connection code and immediately get called again with a new request - i.e. in one callback invocation we finish processing one request and start another.\n. LGTM\n. LGTM other than comments.\n. Does --no-rate-limit not work for you on develop? It does for me.\n. Does --no-rate-limit not work for you on develop? It does for me.\n. This pulls in #185 \n. This pulls in #185 \n. DEBUG level logging includes personal information, like access_token's and  message contents. Should these instead be logged in some sort of TRACE level, though python logging doesn't have such a concept.\n. DEBUG level logging includes personal information, like access_token's and  message contents. Should these instead be logged in some sort of TRACE level, though python logging doesn't have such a concept.\n. This is ready for review: @NegativeMjark ?\n. This is ready for review: @NegativeMjark ?\n. matrixbot: ok to test\n. matrixbot: ok to test\n. @heavenlyhash: There are two versions of the content/media repository, v0 ContentRepoResource and v1 MediaRepositoryResource. Most/all clients should now be using v1 of the API. \nIt looks like MediaRepositoryResource uses the config option correctly, but ContentRepoResource didn't and thus caused the directory to be created.\nThanks for the patch!\n. @heavenlyhash: There are two versions of the content/media repository, v0 ContentRepoResource and v1 MediaRepositoryResource. Most/all clients should now be using v1 of the API. \nIt looks like MediaRepositoryResource uses the config option correctly, but ContentRepoResource didn't and thus caused the directory to be created.\nThanks for the patch!\n. Suggestions for better names for the following very welcome:\n- m.room.history_visibility\n- visibility\n- after_join\nWe should also define a value for the current default, e.g. joined? Which is distinct from something like all/public that allows even those that haven't joined to see history.\n. Suggestions for better names for the following very welcome:\n- m.room.history_visibility\n- visibility\n- after_join\nWe should also define a value for the current default, e.g. joined? Which is distinct from something like all/public that allows even those that haven't joined to see history.\n. From IRL : We also want the ability to allow currently invited members to see history. Proposal is to change private => invited and joined.\n. From IRL : We also want the ability to allow currently invited members to see history. Proposal is to change private => invited and joined.\n. We also need to set a default power level to change this, probably 100?\n. We also need to set a default power level to change this, probably 100?\n. I've implemented the following protection for m.room.history_visibility events:\n- New rooms will now have power level required to change it set to 100\n- Existing rooms will fall back to the level set by state_default, which by default is 50.\n. I've implemented the following protection for m.room.history_visibility events:\n- New rooms will now have power level required to change it set to 100\n- Existing rooms will fall back to the level set by state_default, which by default is 50.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. I think this is good enough for now. Missing things:\n\n\nBatch sending of receipts to remote servers\n\n\nThis is sort of already handled by the existing code, where we only let one transaction be in flight at a time. However, we should also set a limit of how many transactions to send per second (e.g. 2 or 4?).\n\n\nSend current receipts to newly joined servers\n\n\nI think we should have a serious look at how we currently send EDUs to newly joined servers, so I'm deferring implementing this until we have decided how to do it going forward. This does slightly affect the UX, but I don't feel it should block the initial implementation.\n\n\nCorrectly map from position in client facing linearization of a room to position in server facing graph of room.\n\n\nIn the worse case this could lead users on other servers to thinking that a user had read a message they had not. However, this is a fairly rare edge case and so, again, I think this shouldn't block the initial implementation.\n. I think this is good enough for now. Missing things:\n\n\nBatch sending of receipts to remote servers\n\n\nThis is sort of already handled by the existing code, where we only let one transaction be in flight at a time. However, we should also set a limit of how many transactions to send per second (e.g. 2 or 4?).\n\n\nSend current receipts to newly joined servers\n\n\nI think we should have a serious look at how we currently send EDUs to newly joined servers, so I'm deferring implementing this until we have decided how to do it going forward. This does slightly affect the UX, but I don't feel it should block the initial implementation.\n\n\nCorrectly map from position in client facing linearization of a room to position in server facing graph of room.\n\n\nIn the worse case this could lead users on other servers to thinking that a user had read a message they had not. However, this is a fairly rare edge case and so, again, I think this shouldn't block the initial implementation.\n. matrixbot: ok to test\n. Thanks for the pull request!\nThere are a few style warnings that should be easy to fix:\nsynapse/rest/client/v1/login.py:23:1: F401 'cgi' imported but unused\nsynapse/rest/client/v1/login.py:27:1: F401 'BINDING_HTTP_REDIRECT' imported but unused\nsynapse/rest/client/v1/login.py:29:1: F401 'create_metadata_string' imported but unused\nsynapse/rest/client/v1/login.py:32:1: F401 'ServiceError' imported but unused\nsynapse/rest/client/v1/login.py:33:1: F401 'Extensions' imported but unused\nsynapse/rest/client/v1/login.py:34:1: F401 'SPCertEnc' imported but unused\nsynapse/rest/client/v1/login.py:35:1: F401 'rndstr' imported but unused\nsynapse/rest/client/v1/login.py:140:29: E126 continuation line over-indented for hanging indent\nWould it also make sense to allow/support multiple saml backends?\n. Thanks, it looks good. not sure why jenkins is complaining though, it doesn't fail pep8 on my box.\nmatrixbot: test this please.\n. Oh, that's because @ara4n broke the tests on develop.\n. Ooops, I've reverted this PR since I've realised this hasn't been \"signed off\"\nCould you just confirm you agree to license this code as per https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst#sign-off ? (And if you could also open another PR for this branch that would be great).\n. One at the top is fine :)\nOn Thu, 9 Jul 2015 18:22 Muthu Subramanian notifications@github.com wrote:\n\nShould I sign-off every commit or would it be ok to add one on the top?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/matrix-org/synapse/pull/200#issuecomment-120077698.\n. matrixbot: ok to test\n. Thanks again for this PR :)\n. > What would we call rooms which you had to knock on? \n\nThe idea behind these presets is to encourage apps to use these defaults when a user wants to create a room for a given purpose, giving a simple and consistent UX across apps. I.e., these presets are named after what the user wanted, rather than describing the actual defaults.\nIf the user/app wants to do something more complex they wouldn't use a preset, but would instead specify the options they want (though I haven't actually implemented that part of the API yet).\n. Actually, we should probably make this configurable.\n. > Schema version has NOT been bumped.\nWhy?\n. > Just wasn't sure whether that was desired or not, so just noting that I hadn't done it.\nI think its best just to bump it, otherwise its likely to get forgotten. That and nothing will test it until the version gets bumped.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Oh, hmm, this of course means that by default we won't host a matrix-angular-sdk.\n. > Does quit_with_error cause synapse to fail to start? Would it be better to serve up some static content pointing at https://matrix.org/blog/try-matrix-now/ if the client couldn't be found?\nquit_with_error does indeed cause synapse to fail to start. I don't want to start up synapse if we've explicitly tried to enable hosting of the webclient\n. It should now automatically download the matrix-angular-sdk when using pip, and will list it when python synapse/python_dependencies.py is run, but it won't check if its installed when check_requirements is run.\n. The rendered failure message is:\n```\n\nCould not find a webclient.\nPlease either install the matrix-angular-sdk or configure\n the location of the source to serve via the configuration\n option web_client_location\nTo install the matrix-angular-sdk via pip, run:\n pip install 'matrix-angular-sdk'\n\nYou can also disable hosting of the webclient via the\n configuration option web_client\n\n```\n. Will now display:\n```\n\nCould not find a webclient.\nPlease either install the matrix-angular-sdk or configure\n the location of the source to serve via the configuration\n option web_client_location\nTo install the matrix-angular-sdk via pip, run:\n pip install 'https://github.com/matrix-org/matrix-angular-sdk/tarball/v0.6.6/#egg=matrix_angular_sdk-0.6.6'\n\nYou can also disable hosting of the webclient via the\n configuration option web_client\n\n```\n. > What happens if the config key is a dictionary?\n$ python -m synapse.config read listeners --c p/p.yaml \n[{'tls': True, 'x_forwarded': False, 'bind_address': '', 'type': 'http', 'port': 8448, 'resources': [{'compress': True, 'names': ['client', 'webclient']}, {'compress': False, 'names': ['federation']}]}, {'tls': False, 'x_forwarded': False, 'bind_address': '', 'type': 'http', 'port': 8008, 'resources': [{'compress': True, 'names': ['client', 'webclient']}, {'compress': False, 'names': ['federation']}]}]\n. How do you run the tests with tox?\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. > Meanwhile, I think our metric for having no sent_transactions is wrong, as we were looking for max transaction IDs per host which are older than yesterday rather than newer...\nThis is by design. The two key points here are:\n- We want to store the last sent transaction to each distinct destination irrespective of how long ago they happened. This is so that we can fill out the prev_txn key for new transactions to those destinations.\n- The function you changed is the setup code for that table, the actual porting of data happens elsewhere in a generic fashion. The porting code will look in port_from_sqlite3 to discover where it should start from, so inserting into there during setup allows us to control what data to port.\n. I've merged the relevant bit onto the release-v0.10.0 branch.\n. Yup, I assume it just needs for that room to be created first.\n. https://github.com/matrix-org/sytest/pull/12\n. Sytest should now be happy with this.\n. LGTM\n. LGTM\n. Err, I meant LGTM\n. LGTM\n. > by putting this in unsigned does it make it vulnerable to spoofing and phishing?\n@ara4n: Nope. The event is sent directly to the server, and so is protected bySSL and requestsigning\n\n\nDoes the unsigned key make it into the C-S APIs? In particular does it make it into initialSync?\n\n\nYes. In particular: \"In v1 C-S API this is copied to a top level key of invite_room_state.\" And the event has been added to initialSync.\n\n\nIs this added to the specification?\nDo we have tests in sytest for it?\n\n\nNo.\n. > by putting this in unsigned does it make it vulnerable to spoofing and phishing?\n@ara4n: Nope. The event is sent directly to the server, and so is protected bySSL and requestsigning\n\n\nDoes the unsigned key make it into the C-S APIs? In particular does it make it into initialSync?\n\n\nYes. In particular: \"In v1 C-S API this is copied to a top level key of invite_room_state.\" And the event has been added to initialSync.\n\n\nIs this added to the specification?\nDo we have tests in sytest for it?\n\n\nNo.\n. So do you want me to spec this before landing the PR?\n. So do you want me to spec this before landing the PR?\n. Spec has landed, any objections to me landing this?\n. Spec has landed, any objections to me landing this?\n. https://github.com/matrix-org/matrix-doc/pull/64\n. https://github.com/matrix-org/matrix-doc/pull/64\n. Is this PR meant to include the WoefullyInsecureContextFactory changes?\n. Is this PR meant to include the WoefullyInsecureContextFactory changes?\n. I AM STANDING BY\n. I AM STANDING BY\n. I would prefer if things like this weren't in synctl. I've recently added some stuff to synapse/config/main.py, so maybe that would be a better place for it?\nHow does this interact with multiple config files?\n. I would prefer if things like this weren't in synctl. I've recently added some stuff to synapse/config/main.py, so maybe that would be a better place for it?\nHow does this interact with multiple config files?\n. > Other than the short variable names and lack of commentary it LGTM.\nDone\n. > Other than the short variable names and lack of commentary it LGTM.\nDone\n. LGTM\n. LGTM\n. Done\n. Done\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Does this support multiple files?\n. Does this support multiple files?\n. I'll takes that as a no :)\n. I'll takes that as a no :)\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Yes, please do keep the version string in there too.\n. Yes, please do keep the version string in there too.\n. From a huge nitpicking perspective, I'd prefer if the user agent string remained in a valid user agent format, which is as simple as changing the delimiter from - to a single space.\nAfter fixing the tests, LGTM\n. From a huge nitpicking perspective, I'd prefer if the user agent string remained in a valid user agent format, which is as simple as changing the delimiter from - to a single space.\nAfter fixing the tests, LGTM\n. LGTM\n. LGTM\n. Marrixbot: ok to test\n. Marrixbot: ok to test\n. This looks perfectly reasonable once requests has been swapped out with an async alternative :)\n. This looks perfectly reasonable once requests has been swapped out with an async alternative :)\n. LGTM\n. LGTM\n. @stevenhammerton If you could fix the conflict, we'll merge it in :)\n. @stevenhammerton If you could fix the conflict, we'll merge it in :)\n. @stevenhammerton Ah well, it's not a a particularly large PR at least.\nWell, this LGTM! Thanks again :)\n. @stevenhammerton Ah well, it's not a a particularly large PR at least.\nWell, this LGTM! Thanks again :)\n. LGTM\n. Assuming set_state doesn't do something silly like yield on a federation request, LGTM\n. @matrixbot ok to test\n. @stevenhammerton Yeah, I fixed the bad merge yesterday :)  It might be worth getting sytest working locally. Currently we only automatically run sytest against develop.\nOtherwise, LGTM\n. Although, it may be worth making the CAS user prefix immutable; otherwise I can foresee all sorts of confusion arising from people changing it thinking it would automagically do the right thing.\n. Cool. I think we make the server_name config option immutable by making a one row table and storing it in the DB (or maybe it just looks at the users table). If you go down that route it might be useful to make a generic \"immutable config options\" table that maps from key -> value, or something.\n. Would it make sense to format the config as...?\nyaml\ncas_config:\n  server_url: \"https://cas-server.com\"\n  required_atrributes:\n    <name>: <value>\n    ...\n. LGTM\n. In an ideal world we would want to persist the binds and the the associated invites; otherwise those invites would get lost if we restarted the server in the middle of attempting to exchange them with actual invites. \n. Other than minor comment, LGTM\n. @NegativeMjark Not yet, was planning to do so though.\n@illicitonion Can you have a look at this tonight? To unblock Matthew and myself.\n. check_joined_room gets called somewhere else too\n. LGTM\n. LGTM\n. @NegativeMjark The current times were:\n- 1s, 2s, 4s, 8s, 16s for HTTP retries\n- 5s, 10s, 20s, 40s, 1m20s, 2m40s, 5m, 10m, 21m, 42m and then every 1h for retrying the host.\n@ara4n The current retry times (above) seem overly aggressive. If retrying servers every few seconds causes noticeable performance issues then the current schedule will certainly exacerbate them.\nThis is most certainly not an attempt to fix the bug, rather something which I noticed while doing so. Given I have yet been unable to track down exactly what is causing said bug, taking a few minutes to fix this now (while I remember it) seemed prudent.\nThe randomization is there because a) its trivial to add and b) it does help spread subsequent retries out. Due to the fact that we only retry hosts when we have something new to send them, retries will naturally batch up each time someone on that server sends a message into a large room (e.g. Matrix HQ).\n. LGTM\n. matrixbot: ok to test\n. matrixbot: ok to test\n. Hi! Are you happy with also updating https://github.com/matrix-org/synapse/tree/develop/synapse/static/client/login to work with the new setup?\n. Hi! Are you happy with also updating https://github.com/matrix-org/synapse/tree/develop/synapse/static/client/login to work with the new setup?\n. (Assuming this requires changes to the m.login.cas flow?)\n. (Assuming this requires changes to the m.login.cas flow?)\n. I'm happy enough with this. The macaroon stuff in general needs to be tidied up, but I don't think this PR is now making it too much worse. We should have a look at tidying this up as a team, but that can be done after this merges.\ni.e. LGTM\n. I'm happy enough with this. The macaroon stuff in general needs to be tidied up, but I don't think this PR is now making it too much worse. We should have a look at tidying this up as a team, but that can be done after this merges.\ni.e. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Huh, \"woops\".\nLGTM\n. Done\n. LGTM\n. lgtm\n. LGTM\n. @NegativeMjark I thought about that, but then I concluded it would be simpler and easier to understand to just port all the data across; otherwise I would have to start fiddling with the actual data to ensure it was all consistent, etc.\n. Heh, I've been spending this morning messing around with debian packaging.\nI have created: https://github.com/matrix-org/package-synapse-debian. This is mainly due to the fact that I don't (at least yet) want to pollute the synapse directory with different packaging related config files. This can be reviewed at a later time depending on how things go :)\n. A repo per package? That's the current plan :)\nI'm more concerned with the extra tagging and branches it seems to like to create and times. And yes, I'm using gbp.\nInstructions would be great :)\n. Documented as part of: https://github.com/matrix-org/matrix-doc/pull/169\n. @AppleDash Could you try running the following two commands in a new sqlite3 DB? (For example by simply running the sqlite3 command, which creates a temporary in memory DB)\nCREATE VIRTUAL TABLE IF NOT EXISTS test1 USING fts4 ( column );\nCREATE VIRTUAL TABLE test2 USING fts4 ( column );\nLooking at the documentation, sqlite3 3.7.9 should support FTS4 tables. My guess is that it may not support the IF NOT EXISTS part.\n. Okay, we can easily fix that. Will try and make sure it gets into a release ASAP.\nIf you want, you can also just remove the offending IF NOT EXISTS from https://github.com/matrix-org/synapse/blob/master/synapse/storage/schema/delta/25/fts.py#L41 . It should be perfectly safe to do so.\n. See https://github.com/matrix-org/matrix-doc/pull/169\n. LGTM\n. This looks great, thanks :)\n. LGTM\n. LGTM\n. @NegativeMjark How about that?\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Would it make sense to pull out some of the keys in a structured way to make it easier to pull out via grep? We can still dump the full dict at the end?\nAlso, PEP8 :)\n. LGTM\n. Looks fine other than random log line.\n. LGTM\n. Code wise, looks good.\nMy only concern would be that a few large /sync requests could now more easily entirely resource starve the server, depending on how efficient the current /sync code paths are.\n. LGTM\n. LGTM\n. Why?\n. Why?\n. Is this rate limiting per user or per AS?\n. Is this rate limiting per user or per AS?\n. What's the use case?\n. What's the use case?\n. ok to test\n. ok to test\n. PTAL\n. PTAL\n. matrixbot: test this please\n. matrixbot: test this please\n. https://matrix.org/jira/browse/SYN-589\n. https://matrix.org/jira/browse/SYN-589\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Can we use ujson instead of encode_canonical_json, as its much faster.\n. Should we be encoding things as JSON at the handler level rather than the rest/api level?\n. Are there any docs for the design of this API anywhere? In particular this API is trying to fulfil two different styles of replication:\n1. Replicating to instances with their own backing store.\n2. Replicating to instances that share the backing store with the master.\nAnd I think that two probably want different response formats.\nFor the first case I would be more comfortable if the API:\n- Made a distinction between the matrix level data (events, presence, receipts, etc.) and the metadata that the master had associated with that data (e.g. an event's internal metadata, etc.).\n- Had a more extensible format than arrays of arrays. If we want to experiment with changes to the data stores returning \"database rows\" feels semantically like the API is operating at the wrong abstraction level.\nFor the second case, streaming the \"streams\" meta-stream doesn't give you enough information to intelligently invalidate the caches; slaves would have to blow all their stream caches each time an update happened. Synapse currently relies heavily on the StreamChangeCache, which keeps track of the last time a particular \"entity\" within the stream changed on the assumption that clients would be subscribed to changes of particular entities.\nI am wondering whether we should be considering making the notion of \"entities\" within streams a more formal idea. Thus the replication API could revolve around the idea of replicating four specific things for each \"row\" in a given stream: \n- The actual data, e.g. the raw event\n- Various bits of metadata that the master has associated with the data.\n- The entity to which the row belongs, e.g. for events it would be the room id, for presence the user id, etc.\n- The new position of the stream for that entity.\nAt which point we'd be back at having a single API that serviced both use cases if we allowed streaming simply the entity and position columns for each stream.\n. LGTM\n. The original reason for not including an event was that you generally would never see an event_id without the event.\nAre there any doc PRs?\nLGTM\n. kul\n. PTAL\n. LGTM\n. LGTM\n. matrixbot: test this please\n. PTAL\n. LGTM\n. Other than unindenting update_pusher_last_token, LGTM\n. You might want to fix merge conflicts :)\n. LGTM\n. LGTM\n. LGTM\n. TreeCache does not seem implement __contains__ which is required by LruCache\n. I'd have preferred that the LruCache did not default to using the TreeCache without knowing what the performance characteristics are of TreeCache vs dict. We use LruCache in a number of criticial places, including the event cache and state cache.\nIf we do default LruCache to using TreeCache, please document this fact on LruCache and that they keys must be tuples.\n. Does the TreeCache ever get pruned? Or will it fill up with empty dicts?\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. PTAL\n. matrixbot: test this please\n. LGTM modulo tests passing\n. lgtm\n. @matrixbot: test this please\n@floviolleau: Thanks for this! Huge apologies for not getting around to looking at this sooner.\n. @matrixbot ok to test\n. LGTM\n. @NegativeMjark PTAL\n. LGTM\n. See https://github.com/matrix-org/sytest/pull/164 for some changes to sytest.\n. LGTM\n. @illicitonion PTAL :)\n. @NegativeMjark PTAL\n. matrixbot: test this please\n. Are IDs something we tell people to add in the AS documentation/howtos?\n. LGTM\n. LGTM\n. This makes me sad.\n. LGTM\n. @matrixbot ok to test\n. Brilliant, thanks!\n. @matrixbot ok to test\n. LGTM, thanks :)\n. Ha, oops. Thanks for that :)\n. @Rugvip Can you fix the merge conflicts?\n. LGTM\n. @matrixbot test this please\n. @matrixbot test this please\n. @matrixbot test this please\n. retest this please\n. LGTM\n. retest this please\n. retest this please\n. LGTM\n. LGTM\n. @matrixbot retest this please\n. @matrixbot retest this please\n. @dbkr Looks like there is a PEP8 violation\n. @dbkr Looks like there is a PEP8 violation\n. Huh, or not.\n. Huh, or not.\n. retest this please\n. retest this please\n. retest this please\n. retest this please\n. LGTM\n. LGTM\n. retest this please\n. retest this please\n. https://github.com/matrix-org/sytest/pull/202 is the sytest changes\n. https://github.com/matrix-org/sytest/pull/202 is the sytest changes\n. @matrixbot retest this please\n. @matrixbot retest this please\n. @dbkr You broke the unit tests\n. @dbkr You broke the unit tests\n. @matrixbot retest this please\n. @matrixbot retest this please\n. LGTM\n. LGTM\n. Oooh, exciting idea! :D\nIt'd probably make more sense if the hard coded parameters were options, though. Otherwise its more just (useful) documentation about how you would go about adding an admin to a room.\n. Oooh, exciting idea! :D\nIt'd probably make more sense if the hard coded parameters were options, though. Otherwise its more just (useful) documentation about how you would go about adding an admin to a room.\n. LGTM\n. LGTM\n. LGTM\n. @matrixbot retest this please\n. @matrixbot retest this please\n. The Sytest Postgres (Commit) was a flakey sytest which has now been fixed.\n. @matrixbot ok to test\n. The flake8 test failed due to: http://matrix.org/jenkins/job/SynapseFlake8Packaging/51/violations/file/tests/rest/client/v2_alpha/test_register.py/\n. Brilliant, thanks for this! Could you just follow the sign off steps: https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst#sign-off? Just commenting with \"Signed-off-by: Your Name <your@email.example.org>\" here is fine. \n. Also feel free to add yourself to AUTHORS.rst :)\n. LGTM\n. @dbkr PEP8 I'm afraid\n. http://matrix.org/jenkins/job/SynapseFlake8Packaging/58/violations/file/synapse/handlers/auth.py/\nhttp://matrix.org/jenkins/job/SynapseFlake8Packaging/58/violations/file/synapse/storage/registration.py/\n. Could you also invalidate the cache in _user_delete_access_tokens please?\n. LGTM\n. LGTM\n. LGTM\n. Ta, LGTM\n. To what extend do we care if session information gets dropped on the floor over restarts?\n. > We probably do care that session information gets dropped over restarts, but no more so now than before, so I think that would be a separate fix.\nFair enough\n. LGTM\n. LTGM\n. LGTM\n. Sytest SQLite (Commit) failed due to some unrelated weirdness afaict\n. Sytest: https://github.com/matrix-org/sytest/pull/216\n. @matrixbot retest this please. @matrixbot retest this please. @NegativeMjark PTAL\n. > Some sytests would be nice. \nThat's on the radar\n\n[\"published\", \"unpublished\"] or [\"published\", \"hidden\"] might be better words than [\"public\", \"private\"].\n\nUnpublished might be better than private, but the intent here is to allow various other values for the visibility, e.g. \"local_server\" or whatever, so I don't think \"published\" really conveys what's going on.\n. LGTM\n. lgtm\n. retest this please\n. @NegativeMjark PTAL\nI'm afraid I added some SQL and a check for JoinRules = Public\n. Thanks! I'll take a look tomorrow.\nSorry about the matrixbot thing, its a bug in how we're using jenkins :(\n. @matrixbot ok to test\n. (Jenkins is now complaining about the fact that jwt isn't installed.)\n. @matrixbot ok to test\n. Some PEP8 warnings: http://matrix.org/jenkins/job/SynapseFlake8Packaging/129/violations/#pep8\n. @NegativeMjark PTAL\n. Any news?\n. No problem! Just checking you're alive :)\n. Ok cool, will try and have a look tomorrow :)\n@matrixbot: test this please\n. > login.py:229 line is too long.\nOther than that it looks good.\n. (Looks like that test spuriously timed out.)\nThanks for this!\n. See: https://github.com/matrix-org/sytest/pull/221\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. @NegativeMjark PTAL\n. @NegativeMjark PTAL\n. @matrixbot ok to test\n(Sorry about the matrixbot spam)\n. @matrixbot ok to test\n(Sorry about the matrixbot spam)\n. Oh, I'll need to add the new dependency manually to get the tests to run.\n. Oh, I'll need to add the new dependency manually to get the tests to run.\n. Although see: http://matrix.org/jenkins/job/SynapseFlake8Packaging/176/violations/file/synapse/handlers/auth.py/ for some code style violations :)\n. Although see: http://matrix.org/jenkins/job/SynapseFlake8Packaging/176/violations/file/synapse/handlers/auth.py/ for some code style violations :)\n. Does python-ldap have a system dependency? If it does then I'd probably want to make the python-ldap dependency optional somehow, otherwise its going to break everyone's synapse on upgrade.\n. Does python-ldap have a system dependency? If it does then I'd probably want to make the python-ldap dependency optional somehow, otherwise its going to break everyone's synapse on upgrade.\n. > Unfortunately it depends on openldap-dev. How could I make it optional in the python-dependencies file?\nI think the easiest is just to omit it from the dependency list entirely, and only try and import it if ldap is enabled. Since importing is cheap after its done initially, I'd probably import it in __init__ (to catch early if ldap is enabled, but they didn't add the dependency) and then just reimport it in _check_ldap_password\n. > Unfortunately it depends on openldap-dev. How could I make it optional in the python-dependencies file?\nI think the easiest is just to omit it from the dependency list entirely, and only try and import it if ldap is enabled. Since importing is cheap after its done initially, I'd probably import it in __init__ (to catch early if ldap is enabled, but they didn't add the dependency) and then just reimport it in _check_ldap_password\n. The unit tests are failing due to the fact that Mocks evaluate to True. I propose being slightly evil and changing the ldap enabled tests to if self.ldap_enabled is True and if self.ldap_enabled is not True\n. The unit tests are failing due to the fact that Mocks evaluate to True. I propose being slightly evil and changing the ldap enabled tests to if self.ldap_enabled is True and if self.ldap_enabled is not True\n. Excellent! If you could just sign off on this contribution we can land it: https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst#sign-off\nSimply replying here with Signed-off-by: Your Name <your@email.example.org>, is sufficient.\nAlso, feel free to add yourself to the AUTHORS.rst!\n. Excellent! If you could just sign off on this contribution we can land it: https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst#sign-off\nSimply replying here with Signed-off-by: Your Name <your@email.example.org>, is sufficient.\nAlso, feel free to add yourself to the AUTHORS.rst!\n. Woo! Thanks :)\n(The failure seems to be due to jenkins failing to set the commit status on github, intriguingly. All the tests pass though)\n. Woo! Thanks :)\n(The failure seems to be due to jenkins failing to set the commit status on github, intriguingly. All the tests pass though)\n. LGTM\n. LGTM\n. I'm not particularly happy with adding equality functions just \"for unit tests\". Either the equality functions should behave as expected in general, or we should confine the equality functions to the unit tests.\n. I'm not particularly happy with adding equality functions just \"for unit tests\". Either the equality functions should behave as expected in general, or we should confine the equality functions to the unit tests.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. @matrixbot ok to test\n(Sorry for matrixbot spam :/)\n. Ah, can you base this PR off of the develop branch please?\n. Hi, thanks for the PR! :)\nWhat's the intended semantics for the new /createUser endpoint? Is it for AS's to register and relogin users with temporary access tokens? Does the usual /register not let you do this (I'm not actually sure how the AS stuff works w.r.t. registration)\n. > Actually the intention is to register the user if doesn't exist or login the user and generate a short term token with expiry.\nAh, cool, but the API is only hit by application services (since it requires an AS token to be provided)? Is it the intention for the created users to be used by the AS or to be given to actual people?\n\nI will edit your based on your comments also I have made some other fixes based on Patrik's comments.\nIs it OK to abandon this PR and make a new one with fixes and publish it on the develop branch?\n Hide all checks\n\nYup, that's fine :)\n. > \"think an online game where all users already exist in a database, and you want to use synapse for chat\n\nso the game login server just calls the AS to get an access token for a user with a matching id, and you're kinda done\nuser 'foo' logs into game, login service calls AS and asks for an access token for '@player_foo:mygame.com', and returns that to the user\nin that case it doesn't really make sense to have a separate login integration that makes synapse call the game server, it's easier to do it the other way around\u201d\n\nAaaah, now I understand.\n(When people say server to server I tend to think of \"matrix server\" to \"matrix server\" federation traffic)\n. LFGTM\n. LGTM\n. So, just stepping back a second and thinking a little about the best way of doing this, there are a couple of questions I have:\n- Does this need to use an AS? AS's require a fair bit of config to set up, which isn't ideal if the only thing the other server needs to do is to create users. On the other hand, using an AS means that you can ensure the other server only creates users with a certain prefix.\n- Could the other server register the user once, and then store a token? As the other server could simply add the time constraint to the macaroon/token itself each time it served the token to whatever used it.\n- There is also the registration_shared_secret config option that might be another way of doing this; instead of requiring the other server be a registered AS, auth using the registration shared secret.\n. Could you also pull in develop to fix the tests please? :)\n. That's absolutely no problem! I still sometimes make PRs based on wrong branch.\nHave a good weekend :)\n. I don't think I can really comment on this without seeing how it's used.\n. So this gets around circular dependencies by handing out references to objects that haven't been initialized yet?\n. > Yep. If there's a dependency cycle then the second object will receive a reference to the first object before the __init__ method is run for the first object.\nIs that going to cause a potential problem? Should we try and do something to stop people doing that? It feels a bit evil to be return uninitialised references.\n. eh, lgtm\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Thanks\n. @matrixbot test this please\n. @matrixbot test this please\n. LGTM?\n. LGTM?\n. Changed everything. @NegativeMjark PTAL\n. Changed everything. @NegativeMjark PTAL\n. LGTM?\n. LGTM?\n. > Oops :/ Thanks for the comments Erik. I will need to fix and test it on Sunday though (Flying to London soon and back on Sunday).\nNo worries, sorry for the delay in review. Enjoy your trip!\n@matrixbot ok to test\n. > Oops :/ Thanks for the comments Erik. I will need to fix and test it on Sunday though (Flying to London soon and back on Sunday).\nNo worries, sorry for the delay in review. Enjoy your trip!\n@matrixbot ok to test\n. This looks good now! Just need you to sign off the PR: https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst#sign-off. Feel free to add yourself to AUTHORS.rst :)\nIt might also be nice to separate out expiration of users created via /createUser and created via normal login, but I'm happy to merge as is. \n. This looks good now! Just need you to sign off the PR: https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst#sign-off. Feel free to add yourself to AUTHORS.rst :)\nIt might also be nice to separate out expiration of users created via /createUser and created via normal login, but I'm happy to merge as is. \n. LGTM?\n. LGTM?\n. @matrixbot  test this please\n. @matrixbot  test this please\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM?\n. LGTM?\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Oh, I thought I added a commit message.\nBasically, a) consistency with making optional things optional and b) some OS's already have a jwt package installed, but is of a too old version\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. If using optional dependencies then you should check in the config that the module are importable (like we do with url previews and netaddr)\n. I'm not hugely comfortable with the usages of events.received_ts, because:\n- Without more indexes some of the queries are inefficient\n- A lot of the queries are now having to join against events just for received_ts\n- received_ts is used in places to mean \"when we last sent a notif\", which seems like a little bit of a dodgy assumption.\nIs there any transaction in replacing received_ts with:\n- keeping track of the last time we sent an email in the pushers table (or elsewhere)\n- adding a column to the event_push_actions with either when a) the push action was created or b) when the event should be emailed.\n. Do we have different behaviour between highlight and non-highlight notifications? Will we want support for doing digests for non-highlight notificaitons?\n. @NegativeMjark How does this interact with the Slaved stuff?\n. @NegativeMjark: How does packaging work with the manifest stuff? I note that all the static content is in a top level res/ folder, rather than in the package itself like the other static stuff.\n. @NegativeMjark Like so?\n. @NegativeMjark Like so?\n. > Would it be an idea to create a special cached database API for getting the ignore list that could populate the cache with a default empty list if the user hasn't set an ignore list?\nIn terms of performance or code neatness?\n. @NegativeMjark Removed the warn\n. LGTM\n. Thanks!\n. > Looks good, Do we need to do anything special to make the log contexts work?\nnyargh\n. @NegativeMjark I've done stuff.\n. @ara4n We check if we need to run the GC on each reactor tick, we don't necessarily do so. The check should be equivalent to the one done internally by python\n. @ara4n We check if we need to run the GC on each reactor tick, we don't necessarily do so. The check should be equivalent to the one done internally by python\n. Sure I can add a comment. It's mainly so that we can get some metrics over how long we spend GC'ing\n. Sure I can add a comment. It's mainly so that we can get some metrics over how long we spend GC'ing\n. Why is this going into MessageHandler? What's the motivation?\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. (modulo tests)\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. @matrixbot ok to test\n. @matrixbot ok to test\n. This looks good now, you just need to sign off the PR (either by posting a comment or signing the commit) and then we can merge this in :)\n. LGTM\n. LGTM\n. LGTM\n. LGTM?\n. LGTM\n. Does this fix the associated sytests?\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM, other than PEP8\n. LGTM\n. LGTM\n. LGTM\n. It'd probably be nice to poke the master on shutdown, so that presence doesn't get stuck for 5 mins\n. LGTM\n. LGTM\n. @ara4n:\n\nwhat's the rationale here?\n\nMainly consistency:\n1. Consistency with everywhere else \u2500 most of these are uncommon code paths.\n2. It means we can get rid of the horrible duplication between the txn and non-txn versions of fetching events (turns out its not easy to split out the common code)\n3. Everything now goes through the same bulk fetching of events code, which is nice.\n4. The event cache no longer needs to be thread safe.\n5. The DB metrics report how long the actual queries take, rather than also including the time it takes to get events.\n6. Fetching events takes a bit of CPU time, and I'd rather do CPU work on the main thread, as otherwise it takes up a DB thread (which are in relatively limited supply)\n. LGTM\n. @matrixbot  ok to test\n. @matrixbot  ok to test\n. I think the unit tests failure is spurious.\nThere are some PEP8 code style violation: http://matrix.org/jenkins/job/SynapseFlake8Packaging/526/violations/file/synapse/handlers/auth.py/\n. Does this depend on any particular version of python-ldap3? In particular, will it work with 0.9 (which is the version packaged for older ubuntu/debians)\n. @matrixbot retest this please\n. > There is still a mix of \"simple_bind\" and \"simple\" for the modes. Is there a file in Matrix, that holds global constants?\nThere is a synapse/api/constants.py\n. Thanks again for this :)\n. LGTM\n. LGTM\n. I'm slightly cautious of attempting to introspect the poked events to determine room membership given all the potential subtleties. While I agree that the distributor was the wrong way of notifying about changes of membership, it at least had the advantage of there only being one place that needed to keep track of it correctly.\nHaving said that, given the current bugs I'm happy to merge this with the caveat that we may want to revisit how we're doing this at somepoint.\nLGTM\n. LGTM\n. LGTM\n. LGTM\n. @matrixbot ok to test\n. @matrixbot ok to test\n. @negzi If you want you can also add an integration test to sytest (though it is in perl). It should be relatively easy, and would probably look something like: https://github.com/matrix-org/sytest/blob/develop/tests/10apidoc/01register.pl#L37-L62\n. @negzi If you want you can also add an integration test to sytest (though it is in perl). It should be relatively easy, and would probably look something like: https://github.com/matrix-org/sytest/blob/develop/tests/10apidoc/01register.pl#L37-L62\n. Also, this LGTM, just waiting for tests to finish before merging.\n. Also, this LGTM, just waiting for tests to finish before merging.\n. Oh! And can you sign off the PR too please :)\n. Oh! And can you sign off the PR too please :)\n. LGTM\n. LGTM\n. This should have displayed a better error message, but looks like it was broken in 0.16.0-1. As of 0.16.0-2 it should inform you to install the matrix-synapse-angular-client package.\n. This should have displayed a better error message, but looks like it was broken in 0.16.0-1. As of 0.16.0-2 it should inform you to install the matrix-synapse-angular-client package.\n. @matrixbot ok to test\n. @matrixbot ok to test\n. Thanks for this!\nWe generally would prefer PRs against the develop branch, as per https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst. You'll also need to sign off the PR.\nI'm not sure why the jenkins tests are unhappy, possibly due to being on the master branch.\n. Thanks for this!\nWe generally would prefer PRs against the develop branch, as per https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst. You'll also need to sign off the PR.\nI'm not sure why the jenkins tests are unhappy, possibly due to being on the master branch.\n. @matrixbot ok to test\n. @matrixbot ok to test\n. Thanks! I just need you to sign off this PR (https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst#sign-off) either as part of the commit or just a comment of Signed-off-by: Your Name <your@email.example.org> here will do.\n. Thanks! I just need you to sign off this PR (https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst#sign-off) either as part of the commit or just a comment of Signed-off-by: Your Name <your@email.example.org> here will do.\n. LGTM\n. LGTM\n. @matrixbot  retest this please\n. @NegativeMjark What's up with dendron test?\n. LGTM, either way.\n. @matrixbot ok to test\n(Sorry for jenkins being spammy)\n. Thanks for this!\n. clobber_with_worker_config feels a bit fragile to me. For example, if someone pulls out a config option deep within synapse it isn't obvious that it needs to be added to that function, and the only observable effect would be that overriding it in the worker config would silently not work.\n. LGTM\n. LGTM\n. @ara4n It should be relatively easy to add those distributions, just need to check what packages need to be added.\n. xenial and yakkety have been added\n. Hi! Unfortunately, for various (somewhat spurious) reasons we use a static config file as the default in the debian package. This means that we cannot set those values as they need to be unique per installation. \nThe server_name should be set either at install time or manually using dpkg-reconfigure.\nThe idp_redirect_url should very much not be set, and looks to be commented out? Which would match the default config?\n. @killua-eu So register_new_matrix_user works if url previewing is enabled but not when its disabled?\n. This may break the porting script, since i think it creates DatabaseEngines?\n. LGTM then.\n. LGTM\n. LGTM\n. LGTM\n. This is not going to happen because there is no one on the client side available to test it out.. @matrixbot ok to test\n(I really wish that jenkins wasn't quite so spammy)\n. The two \"correct\" ways of doing this would be:\n1. add a custom login flow that would allow matrix clients to delegate login to Diaspora (clients that didn't support it would then use the fallback mechanism), or\n2. add a config option that allowed synapse to query a separate API to test password credentials\nBoth of those would be non-trivial things to add, though 2. could potentially be doable. (In the future the plan is to support a more pluggable/modular auth system.)\nHowever, given this is a restricted AS API, I'm happy enough to accept this PR.\n. You have a couple of code style violations: http://matrix.org/jenkins/job/SynapseFlake8Packaging/621/violations/\nLooks like they're just lines that are too long; we prefer lines < 80 and require lines to be < 90.\n. np!\n. LGTM\n. > Having looked at how postgres handles the UNION all version I'm less sure that it's actually doing what we want here.\nCan you elaborate?\n. This presumably still has terrible performance on SQLite?\n. LGTM\n. @matrixbot ok to test\n. (I think the dendron test failure is nothing to do with this PR)\n. Thanks for this! :)\n. Aha, thanks :)\n. @4nd3r It's briefly documented at: https://github.com/matrix-org/synapse/blob/master/docs/admin_api/purge_history_api.rst\n. @matrixbot ok to test\n. > I looked at the Jenkins job console output and do not think the failure in Sytes Dendron is related to what I have changed. Could you please take a look at this?\nLooks like that test has been misconfigured, ignore it and I'll take a look at it in a bit\n. This looks great, thanks! Just need you to sign it off and then I'll merge it\n. This looks great, thanks! Just need you to sign it off and then I'll merge it\n. (The tests are jenkins being unhappy)\n. LGTM\n. ok tot test\n. ok to test, even\n. Hey, sorry for dropping this on the floor. To be honest, it sounds like making a separate API would be best, since you're not trying to stream anything. You should be able to just pull the counts straight out of the database table event_push_actions via counts.\nI'm closing this for now and adding it as a matrix-doc issue https://github.com/matrix-org/matrix-doc/issues/758. Feel free to reach out if you have any questions on how to implement the above.. ok to test\n. @matrixbot retest this please\n. ~~LGTM~~\nErr, i take that back\n. I guess the main changes here are: don't add rejected events to event forward extremities table (and don#t and them to the push actions).\n. Although I'm slightly concerned that we have stopped storing various bits of information about the event, and how that affects other storage functions. I'd prefer if, for now, the changes were as minimal as possible so that we can get the fix out and have refactoring (and commenting) as a separate PR.\n. @NegativeMjark PTAL\n. https://github.com/matrix-org/sytest/pull/274\nhttps://github.com/matrix-org/dendron/pull/31\n. @matrixbot test this please\n. @matrixbot test this please\n. @matrixbot test this please\n. @matrixbot retest this please\n. LGTM\n. PEP8 failure: http://matrix.org/jenkins/job/SynapseFlake8PackagingCommit/1397/violations/file/tests/handlers/test_auth.py/\nOtherwise, LGTM\n. @matrixbot ok to test\n. From the dendron logs:\n2016-08-10 13:29:26,688 - synapse.http.server - 135 - ERROR - GET-0 - Failed handle request synapse.http.server._async_render on <synapse.http.server.JsonResource object at 0x5421590>: <SynapseRequest at 0x5038248 method=GET uri=/_matrix/client/r0/sync?access_token=<redacted> clientproto=HTTP/1.1 site=20005>\nTraceback (most recent call last):\n  File \"/home/jenkins/jenkins/workspace/SynapseSytestDendronPR/synapse/http/server.py\", line 114, in wrapped_request_handler\n    yield request_handler(self, request)\n  File \"/home/jenkins/jenkins/workspace/SynapseSytestDendronPR/.tox/py27/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/jenkins/jenkins/workspace/SynapseSytestDendronPR/.tox/py27/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/jenkins/jenkins/workspace/SynapseSytestDendronPR/synapse/http/server.py\", line 261, in _async_render\n    callback_return = yield callback(request, **kwargs)\n  File \"/home/jenkins/jenkins/workspace/SynapseSytestDendronPR/.tox/py27/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1128, in _inlineCallbacks\n    result = g.send(result)\n  File \"/home/jenkins/jenkins/workspace/SynapseSytestDendronPR/synapse/rest/client/v2_alpha/sync.py\", line 149, in on_GET\n    yield self.presence_handler.set_state(user, {\"presence\": set_presence}, True)\nTypeError: set_state() takes exactly 3 arguments (4 given)\n. To be honest I don't really understand it either. Dendron is basically testing the split out synapse stuff. I'm guessing there is a set_state function somewhere that is being used instead only in dendron? @NegativeMjark ?\n. LGTM\ncough you need to sign off the PR cough\n. @matrixbot ok to test\n. Ah, can you base this off of develop please? I think that's probably why the tests are failing.\n. @matrixbot ok to test\nSorry abiut the spam, It's a bug in jenkins since we have 5 separate test\nsuites set up for synapse\nOn Sun, 14 Aug 2016 12:37 Daniel Ehlers, notifications@github.com wrote:\n\nWhy is that bot commenting 5 times in a row?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/matrix-org/synapse/pull/1007#issuecomment-239669045,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AICaWEuJYxNsscbEFmbd98tCTi45aQfIks5qfv4JgaJpZM4Jj4Po\n.\n. Thanks for this!\n\nCan you just sign off this PR by either signing the commit or commenting here (as per https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst#sign-off). Once that's done I'll merge :)\n. @matrixbot ok to test\n. Ah, could you base this off develop please?\n. Actually, I can merge this in manually onto develop.\n. (Done, and thanks!)\n. (The Sytest Dendron (Commit) failure is an unrelated flakey test: https://github.com/matrix-org/sytest/pull/283)\n. @matrixbot ok to test\n. @matrixbot ok to test\n. LGTM\n. ok to test\nOn Tue, 16 Aug 2016 12:26 matrixbot, notifications@github.com wrote:\n\nCan one of the admins verify this patch?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/matrix-org/synapse/pull/1013#issuecomment-240075440,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AICaWMkvKWTvgkJF7onAibeok4ku2RpCks5qgZ5LgaJpZM4JlSWx\n.\n. @matrixbot retest this please\n. @matrixbot ok to test\n. LGTM\n. LGTM\n. @matrixbot retest this please\n. @matrixbot retest this please\n. @matrixbot ok to test\n. @matrixbot ok to test\n. @matrixbot ok to test\n. @matrixbot ok to test\n. LGTM\n. LGTM\n. This looks OK to me, though am slightly scared by performance. I'm happy to merge this on the condition that we have a rethink if hitting this with @ara4n's account makes the server cry.\n. This looks OK to me, though am slightly scared by performance. I'm happy to merge this on the condition that we have a rethink if hitting this with @ara4n's account makes the server cry.\n. @NegativeMjark Looking for comments about what you think of something like this. I'd recommend looking at the last commit to see an example of usage, and the first commit for how its done. (The second commit is simply making all caches LRU)\n. @NegativeMjark Looking for comments about what you think of something like this. I'd recommend looking at the last commit to see an example of usage, and the first commit for how its done. (The second commit is simply making all caches LRU)\n. In general I'd not recommend manually editing the database. However, I think the following should do what you want:\n\nThe query in synapse that actually deletes entries from state_groups_state is:\npython\n        # Get all state groups that are only referenced by events that are\n        # to be deleted.\n        txn.execute(\n            \"SELECT state_group FROM event_to_state_groups\"\n            \" INNER JOIN events USING (event_id)\"\n            \" WHERE state_group IN (\"\n            \"   SELECT DISTINCT state_group FROM events\"\n            \"   INNER JOIN event_to_state_groups USING (event_id)\"\n            \"   WHERE room_id = ? AND topological_ordering < ?\"\n            \" )\"\n            \" GROUP BY state_group HAVING MAX(topological_ordering) < ?\",\n            (room_id, topological_ordering, topological_ordering)\n        )\nhttps://github.com/matrix-org/synapse/blob/master/synapse/storage/events.py#L1579-L1591\nBut since you've deleted all the event_ids, I think something like the following get all the state_groups for events that have been deleted:\nsql\nSELECT DISTINCT state_group FROM event_to_state_groups WHERE event_id NOT IN (SELECT event_id FROM events);\n. In general I'd not recommend manually editing the database. However, I think the following should do what you want:\nThe query in synapse that actually deletes entries from state_groups_state is:\npython\n        # Get all state groups that are only referenced by events that are\n        # to be deleted.\n        txn.execute(\n            \"SELECT state_group FROM event_to_state_groups\"\n            \" INNER JOIN events USING (event_id)\"\n            \" WHERE state_group IN (\"\n            \"   SELECT DISTINCT state_group FROM events\"\n            \"   INNER JOIN event_to_state_groups USING (event_id)\"\n            \"   WHERE room_id = ? AND topological_ordering < ?\"\n            \" )\"\n            \" GROUP BY state_group HAVING MAX(topological_ordering) < ?\",\n            (room_id, topological_ordering, topological_ordering)\n        )\nhttps://github.com/matrix-org/synapse/blob/master/synapse/storage/events.py#L1579-L1591\nBut since you've deleted all the event_ids, I think something like the following get all the state_groups for events that have been deleted:\nsql\nSELECT DISTINCT state_group FROM event_to_state_groups WHERE event_id NOT IN (SELECT event_id FROM events);\n. (You should also be able to delete the contents of other tables by delete everything with an event_id not in the events table)\nHowever, these queries are likely to be very slow.\n. (You should also be able to delete the contents of other tables by delete everything with an event_id not in the events table)\nHowever, these queries are likely to be very slow.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. @benhylau: great! Thanks for testing it :)\n. @benhylau: great! Thanks for testing it :)\n. LGTM. Tests look like you need to merge in from develop.\n. @matrixbot retest this please\n. Thanks! Sorry to have missed this.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. @matrixbot retest this please\n. @matrixbot retest this please\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM, other than tests.\n. Is this backwards compatible?\n. In terms of existing config, e.g. would be need to change their cas_server_url?\n. LGTM\n. LGTM\n. (The sytest failure is spurious, it simply failed to archive the logs)\n. (The sytest failure is spurious, it simply failed to archive the logs)\n. LGTM\n. LGTM\n. Given we check for collisions and retry, that sounds perfectly acceptable. \nLGTM\n. Given we check for collisions and retry, that sounds perfectly acceptable. \nLGTM\n. LGTM\n. LGTM\n. @NegativeMjark PTAL\n. @NegativeMjark PTAL\n. @NegativeMjark PTAL\n. @NegativeMjark PTAL\n. LGTM\n. LGTM\n. @matrixbot retest this please\n. @matrixbot retest this please\n. The Sytest Dendron (Merged PR) failure looks spurious.\n. The Sytest Dendron (Merged PR) failure looks spurious.\n. Hey, sorry for dropping the ball on this.\nI think I mostly follow the motivation for this, but can you run through exactly what this is trying to fix and how? I'm not hugely familiar with how vector web does it settings UI.\n@matrixbot test this please\n. Hey, sorry for dropping the ball on this.\nI think I mostly follow the motivation for this, but can you run through exactly what this is trying to fix and how? I'm not hugely familiar with how vector web does it settings UI.\n@matrixbot test this please\n. Hi, sorry for dropping this on the floor. I think this is probably going to be less of an issue with the new profile API, where you can download all the profile information in one go, rather than doing different requests. Otherwise, this probably needs a proper proposal to go in the spec. We usually do this by creating an issue on the matrix-doc repo linking to a google doc outlining the proposal :). Hi, sorry for dropping this on the floor. I think this is probably going to be less of an issue with the new profile API, where you can download all the profile information in one go, rather than doing different requests. Otherwise, this probably needs a proper proposal to go in the spec. We usually do this by creating an issue on the matrix-doc repo linking to a google doc outlining the proposal :). @matrixbot retest this please\n. @matrixbot retest this please\n. It does :D\n. @matrixbot retest this please\n. > rather than aborting on the final partial pagination, it instead paginates the remainder, and then aborts if you try to go any further.\nIf I'm reading the diff right you're only adding an extra way that stops pagination, rather than changing it. What bug is this trying to fix?\n. Superseded by https://github.com/matrix-org/synapse/pull/1129\n. @matrixbot retest this please\n. Hmm, the Sytest Dendron (Merged PR) doesn't look like anything to do with this PR.\n. @matrixbot retest this please\n. @matrixbot retest this please\n. Given this is non-standard SQL behaviour, I'd only be comfortable with this if it's explicitly mentioned in the official SQLite documentation. I know a common pitfall with some other DBs is that this appears to work, but actually occasionally doesn't.\nFrom the SQLite documentation on SELECT:\n\nEach expression in the result-set is then evaluated once for each group of rows. If the expression is an aggregate expression, it is evaluated across all rows in the group. Otherwise, it is evaluated against a single arbitrarily chosen row from within the group. If there is more than one non-aggregate expression in the result-set, then all such expressions are evaluated for the same row.\n. This has been superseded \n. (The tests are due to a flakey test, which is being fixed in https://github.com/matrix-org/sytest/pull/315 )\n. > It's a bit of an edge-case, so I'm not sure we're going to do much about it, but perhaps we could run the schema delta and the applied_schema_deltas update in a single transaction? Or just try harder to make the deltas idempotent. \n\nSo its already in a transaction, but creation of tables are done as part of the transaction so rolling back the transaction doesn't delete the table, annoyingly. Both SQLite and Postgres support CREATE TABLE IF NOT EXISTS ..., but postgres 9.4 and earlier do not support CREATE INDEX IF NOT EXISTS... which is also annoying. The only other thing I can think of doing is running DROP INDEX IF EXISTS ... before each creation.\n. Well, they are in a transaction, it just doesn't actually do what you want.\nI'm tempted by 2, personally.\n. This is probably fine. Can you sign off the PR?\n. The public room list is local to each server. Synapse supports fetching remote servers' public room lists, but this API is new and hasn't made it into many clients yet. It is available on the latest development version of riot web (https://riot.im/develop/)\n. LGTM, though we really need to figure out how to do this in a more generic way.\n. Sorry for dropping this on the floor, its been quite hectic here. I've created: https://github.com/matrix-org/package-synapse-snap so feel free to PR against that and I'd be happy to merge that there.. (I shall close this for now, but please do PR against the repo! I would but I have no experience with snap). Yes, please, but it should be easy enough either by using git or adding it as a comment here.\n. Thanks! Sorry for the delay in getting this merged!\n. Thanks for this, sorry for dropping it on the floor.. I'm not really familiar with any of this tech, so I'm going to close this for now. People should feel free to pick this up finish it off and I'll be happy to look at it again :). @matrixbot ok to test\n. You'll want to merge in develop\n. Looks like sqlite doesn't like your index sql\n. The usual trick is to store the lower cased email in the database, so that the normal index can be used. This also neatly side steps the issues where not all 3pids are necessarily case insensitive.\n. Given it can be done as a simple update, if there aren't too many rows its probably easiest just to do the update in a .sql delta\n. LGTM\n. Oh, except you'll want the delta to be under 37/\n. @pik The way the schema upgrade stuff works is that we create a new \"version\" after every release, so creating a new 37 is the correct thing to do here since 36 is the latest in the release. You will need to bump the SCHEMA_VERSION in synapse/storage/prepare_database.py when bumping the version.\n@matrixbot ok to test\n. @matrixbot retest this please. Hmm, this might require some more thought given its going to break starting synapse if it has duplicate filter ids.. LGTM\n. Why are we using /proc/self/stat rather than using rusage?\n. I think at this point all the globals should be wrapped up into an actual class or split out into a separate module (or both)\n. Depends on the size really, if it gets a bit big then moving to a separate file would probably be sensible, but if it small then leaving it there is probably fine.\n. LGTM\n. Hopefully.\n. FTR, the ldap implementation has been pulled out into a separate repo: https://github.com/matrix-org/matrix-synapse-ldap3, which will be used in the next release of synapse.. This isn't happening any time soon so closing.. Hmm, interesting. It would be good to know how big the total sync response is, though I guess that is hard if it OOM kills on /sync. Do you have any estimates as to how big (in terms of users) the IRC rooms on matrix were? And how many such rooms you had?\n. Hmm, looking at the code it appears that we do the filtering quite late in the day, so it probably won't help.\nCan you see how big all your state is?:\nsql\nSELECT count(*) FROM current_state_events NATURAL JOIN room_memberships;\n. LGTM\n. > I think received_transactions is a write-only table as well. Should we stop writing to it as well while we are at it?\nIt's used to short circuit duplicate transactions\n. LGTM\n. LGTM?\n. @matrixbot ok to test\n. @mweinelt could you take a look?\n. (The failing tests look to be unrelated and probably due to bug fixes on develop that haven't been merged in to this branch)\n. @matrixbot retest this please\n. Hi, sorry this got dropped on the floor, but we've now moved the ldap code to a different repository: https://github.com/matrix-org/matrix-synapse-ldap3, I'm not sure if this has been implemented there or not. Again, sorry about this not getting merged before porting.. Thanks!\n. It can be very slow, given that it relies on the OS generating enough random entropy. Some timings:\nDesktop:  5s\nActive VPS: 2m 40s\nAnd I'd expect it to be slower on new, unused VPS's too.\n\nAs far as I'm aware defaulting to using a \"public\" 4096 bit set isn't tooooo problematic for now. One thing we could do is to change the default occasionally so that newer deployments get different parameters, thus widening the field at least a little.\n. We should make sure the content isn't completed deleted, for moderation\npurposes.\nOn Fri, 6 Jan 2017, 19:08 Matthew Hodgson, notifications@github.com wrote:\n\nWe just had a minor disaster with this happening (the MXC URL was bridged\nto IRC, so redacting the content on Matrix was achieving nothing). This\nshould be trivial to fix...\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/matrix-org/synapse/issues/1263#issuecomment-270975273,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AICaWKhfOgyL8L1dg3CnQXGgt_Jiuv1Lks5rPozFgaJpZM4Lc_jV\n.\n. It won't delete local events from the db, but will remove lots of the meta\ndata about them. So while it doesn't remove all traces of the events, it\ndoes dramatically reduce the on disk space usage.\n\nOn Thu, 1 Dec 2016, 13:52 Richard van der Hoff, notifications@github.com\nwrote:\n\nworks for me.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/matrix-org/synapse/issues/1621#issuecomment-264177862,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AICaWF-b_r54prCfyYj0Vmbd3yZvaTuNks5rDtD9gaJpZM4KvAoP\n.\n. I wondering if a nicer API would be something like:\n\npython\nself.transactions.fetch_or_execute(\n    self.handler.do_foo, txn_id,\n    arg1, arg2, arg3=arg3\n)\nwhere fetch_or_execute would use the first arg as a txn_id, and if that wasn't in the cache call the given function with the arguments. This has the advantage you don't explicitly need to remember to both check and store.\n. Also, would be totally awesome if HttpTransactionCache had some python tests. Maybe also move it to synapse.utils?\n. > fetch_or_execute doesn't appear to pass the request object which is used to select the key in the cache. Was this intentional?\nNah, I just made it up.\n\nAlso, I don't mind moving it to util, but that feels like a downgrade in specificity, since only the REST Servlets make use of this class, and the aforementioned reliance on a request object.\n\nAt the very least it should be moved up, but generally I quite helpers like this to live a bit separately, rather than being dumped alongside the rest servlets themselves\n\nI'm guessing you're proposing I make it more generic (so txn_id is just the key in the cache)? Do we plan on using the generic form elsewhere?\n\nWell, it is currently implemented in a generic fashion. I'm happy for the arg name to be txn_id or key or whatever\n. > synapse/rest/client/transactions.py perhaps?\nThat's fine i suppose\n\nDo you want the implementation to be generic or are you happy with it in its current form (accepting request objects which are then processed for their access_token for use as a key)?\n\nOh, I misread. Yeah, ok, I guess the generation of the key is non-trivial. Though I'd still be tempted to move the _get_key onto the v1 rest base class, as that would make the transaction class a nice self-contained and easily testable class, rather than having it know about request objects. \n. > How do you propose I clear the cache? Periodic interval? 10 minutes? The generic form now just takes a key, so I can't be more intelligent like base it off the given user (access_token, which is now concatenated in the key).\nFor now, I'd probably expire after 30mins (10 is probably a bit on the low side). Ideally I'd guess we'd probably batch persist these txn_ids to the db so they survive restarts, and then purge that table after a few hours/days.\n. (Also, a python test case for the HttpTransactionCache class would be awesome)\n. > Also, are the Dendron tests just flakey or should I be worried? Looking at the previous builds on http://matrix.org/jenkins/job/SynapseSytestDendronCommit/ makes me think flakey, but I don't know.\nYes :(\n. LGTM\n. @matrixbot ok to test\n. Thanks! This looks good, it appears the one test failure was spurious.\n. Ha, thanks but someone has literally just done the exact same thing: https://github.com/matrix-org/synapse/pull/1625, the diffs are in fact identical :)\n. @NegativeMjark PTAL. @NegativeMjark PTAL. LGTM. LGTM. Hi! We're currently moving the LDAP implementation out into a separate package (https://github.com/matrix-org/matrix-synapse-ldap3) as its maintained a bit separately. \nI don't think we support that usage at the moment, but patches are welcome. I've filed the issue as: https://github.com/matrix-org/matrix-synapse-ldap3/issues/4. It's also worth noting that the password provider config allows you to load any python module as a password provider, so you should easily be able to fork the module, edit it, and use it without waiting for the changes to be merged upstream.. Hi! We're currently moving the LDAP implementation out into a separate package (https://github.com/matrix-org/matrix-synapse-ldap3) as its maintained a bit separately. \nI don't think we support that usage at the moment, but patches are welcome. I've filed the issue as: https://github.com/matrix-org/matrix-synapse-ldap3/issues/4. It's also worth noting that the password provider config allows you to load any python module as a password provider, so you should easily be able to fork the module, edit it, and use it without waiting for the changes to be merged upstream.. LGTM. LGTM. lgtm. lgtm. This should be fixed in the next release, v0.18.5, ftr. This should be fixed in the next release, v0.18.5, ftr. LGTM. Can we comment in the commit why we are reverting to non -n1 ? Given that\nthere are cases where it sounds like it'll fail, even though it may not be\ntrue for our current list of dependencies.\nWhat does pip do if it fails to install one package in a list? Revert\neverything?\nOn Tue, 29 Nov 2016, 11:32 Richard van der Hoff, notifications@github.com\nwrote:\n\nYeah, I thought it must be something like that, but has always been fine\nfor my testing. One of the reasons for this PR was to see if jenkins ran\nhappily with the change.\n@NegativeMjark https://github.com/NegativeMjark: I'd suggest that we\nmerge this for now, and if we later discover why it was a bad idea, we can\nrevert it with a comment explaining what exactly goes wrong. WDYT?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/matrix-org/synapse/pull/1657#issuecomment-263547208,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AICaWH4yvPsocKznjq5B9QBGwrsZFVmYks5rDA08gaJpZM4K9w2Y\n.\n. Can we comment in the commit why we are reverting to non -n1 ? Given that\nthere are cases where it sounds like it'll fail, even though it may not be\ntrue for our current list of dependencies.\n\nWhat does pip do if it fails to install one package in a list? Revert\neverything?\nOn Tue, 29 Nov 2016, 11:32 Richard van der Hoff, notifications@github.com\nwrote:\n\nYeah, I thought it must be something like that, but has always been fine\nfor my testing. One of the reasons for this PR was to see if jenkins ran\nhappily with the change.\n@NegativeMjark https://github.com/NegativeMjark: I'd suggest that we\nmerge this for now, and if we later discover why it was a bad idea, we can\nrevert it with a comment explaining what exactly goes wrong. WDYT?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/matrix-org/synapse/pull/1657#issuecomment-263547208,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AICaWH4yvPsocKznjq5B9QBGwrsZFVmYks5rDA08gaJpZM4K9w2Y\n.\n. Thanks!\nOn a side-note, why is the alternate path PythonCode (it produces no-logging as far as I can see) vs. simply logging.config.dictConfig(yaml.load(DEFAULT_LOG_CONFIG.template)) wouldn't that be preferable anyways?\n\nI'm not sure I follow?. Thanks for this! Does @qbit's suggestion of . bin/activate work?. LGTM. lgtm. > What is an appservice_id look like ooi?\ne.g. irc-freenode or 9666621b268e14d7b18b110073f07c6e955c60a8c8a5792fd810e9978d1931d7. Now with added sytests https://github.com/matrix-org/sytest/pull/328!. Woops, looks like its network_id https://github.com/matrix-org/synapse/pull/1676/files#diff-0dca1a8726bd4f8d341ea3373b1048ddR182 . Will probably change it to network_id in the AS layer, and instance_id in the client layer, if that sounds good to you @lukebarnard1 ?. @matrixbot retest this please. https://github.com/matrix-org/sytest/pull/329. @matrixbot  retest this please. @matrixbot  retest this please. LGTM, though this is a mjark thing.. LGTM, though this is a mjark thing.. (I don't see any calls to those APIs on matrix.org over the weekend). @matrixbot test this please. @matrixbot ok to test. @kyrias no idea why that build stalled, but I restarted it and now it errors with:\nsynapse/http/client.py:409:1: E303 too many blank lines (3). @matrixbot ok to test. This looks great! Thanks!\n(The Sytest Dendron test failure looks like the tests failed to start on our jenkins box, and so is spurious). LGTM. > select max(event_id) from event_forward_extremities\nwon't necessarily give you the latest event id. It may sort of work given that synapse sends out events with an auto-incrementing integer at the front, but that won't be true across different servers.\nTo get the latest you'd need to compare the stream_orderings.. sql\nDELETE FROM event_forward_extremities AS e\nUSING ( \n    SELECT DISTINCT ON (room_id)\n    room_id,\n    last_value(event_id) OVER w AS event_id\n    FROM event_forward_extremities\n    NATURAL JOIN events\n    WINDOW w AS (\n        PARTITION BY room_id\n        ORDER BY stream_ordering\n        range between unbounded preceding and unbounded following\n    )\n    ORDER BY room_id, stream_ordering\n) AS s\nWHERE\n    s.room_id = e.room_id\n    AND e.event_id != s.event_id\n    AND e.room_id = '!jpZMojebDLgJdJzFWn:matrix.org';\nis probably more how you can do it on postgres. looks good to me, just requires a rebase. @matrixbot  ok to test. Thanks!. @matrixbot ok to test. There's a bunch of PEP8 violations:\nsynapse/handlers/admin.py:22:1: F401 'operator.attrgetter' imported but unused\nsynapse/rest/client/v1/admin.py:40:9: F841 local variable 'auth_user' is assigned to but never used\nsynapse/rest/client/v1/admin.py:57:1: E302 expected 2 blank lines, found 1\nsynapse/rest/client/v1/admin.py:159:1: E302 expected 2 blank lines, found 1\nsynapse/rest/client/v1/admin.py:190:1: E302 expected 2 blank lines, found 1\nsynapse/rest/client/v1/admin.py:204:9: F841 local variable 'auth_user' is assigned to but never used\nsynapse/rest/client/v1/admin.py:253:1: E302 expected 2 blank lines, found 1\nsynapse/rest/client/v1/admin.py:290:1: E302 expected 2 blank lines, found 1\nsynapse/storage/_base.py:931:37: E128 continuation line under-indented for visual indent\nsynapse/storage/_base.py:951:91: E501 line too long (92 > 90 characters)\nsynapse/storage/_base.py:953:91: E501 line too long (93 > 90 characters)\nsynapse/storage/_base.py:973:91: E501 line too long (92 > 90 characters)\nsynapse/storage/_base.py:1039:1: E303 too many blank lines (3)\nYou should be able to test locally by installing flake8 and then running flake8 synapse/. (The sytest dendron failure is probably spurious, ignore it). LGTM. > ... but I don't think it'll actually fix the perf for device_inbox prefill...\nIt does, I tested it.\n\n... since the query is doing an index scan rather than a backwards index scan\n\nGoing forwards or backwards only matters if you're counting. When using the stream_id > ? predicate going forwards or backwards is equivalent.. It does help. \nNew query:\n```\nmatrix=# explain analyze SELECT user_id, MAX(stream_id) FROM device_inbox WHERE stream_id > 291509 - 100000 GROUP BY user_id;\n                                                                           QUERY PLAN                                                                            \n\nHashAggregate  (cost=118140.66..118147.50 rows=684 width=27) (actual time=620.251..621.149 rows=5270 loops=1)\n   Group Key: user_id\n   ->  Index Only Scan using device_cache_test_2 on device_inbox  (cost=0.56..106708.76 rows=2286381 width=27) (actual time=0.050..230.960 rows=2311840 loops=1)\n         Index Cond: (stream_id > 191509)\n         Heap Fetches: 24067\n Planning time: 0.464 ms\n Execution time: 621.318 ms\n```\nOld query:\n```\nmatrix=# explain analyze SELECT user_id, MAX(stream_id) FROM device_inbox WHERE stream_id > 291509 - 100000 GROUP BY user_id;\n                                                                          QUERY PLAN                                                                           \n\nHashAggregate  (cost=292078.26..292085.10 rows=684 width=27) (actual time=1251.428..1252.534 rows=5270 loops=1)\n   Group Key: user_id\n   ->  Index Scan using device_inbox_stream_id on device_inbox  (cost=0.43..280646.35 rows=2286381 width=27) (actual time=0.032..760.074 rows=2311840 loops=1)\n         Index Cond: (stream_id > 191509)\n Planning time: 0.085 ms\n Execution time: 1252.684 ms\n```. > Hmm the only change I see is that it's using an index only scan now, which looks like it's removed a constant factor from the query.\nWell, its impossible to extrapolate that from two data points, but even so a constant factor of two isn't necessarily something to be sniffed at. Both of those two readings are going to have come from the disk cache, and I've certainly seen that query take a lot longer than a couple of seconds when its not in the disk cache.. > I don't think it's worth it. I suspect the change proposed in #1768 would be a better fix to the query performance.\nWorth what? The work is done. I'm also concerned how this is going to scale as we roll out e2e.. > Hmm, you seem to have 4 Pull Requests rolled into one pull request here. Would it be possible to split this up into separate PRs for each of the commits?\nI would have preferred to have it reviewed as a chunk, but I can give you PRs one by one if you really prefer.. @matrixbot ok to test. Why do we want to change the index?. LGTM. fixes https://github.com/matrix-org/synapse/issues/1785. fixes https://github.com/matrix-org/synapse/issues/1785. We probably don't persist it, but use it to do some auth on the event.. We probably don't persist it, but use it to do some auth on the event.. Interesting! Though this seems to be just running some user specific settings? Can you not just run this manually when you set up the user?. Interesting! Though this seems to be just running some user specific settings? Can you not just run this manually when you set up the user?. @matrixbot retest this please. @matrixbot ok to test. Thanks!. Thanks! Sorry for taking so long to merge this.. Thanks!. @matrixbot  ok to test. Err, the dendron test looks like it failed to start. Otherwise, looks good to me! Thanks!. Oh, could you sign this off please as per https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst#sign-off?. Thanks!. Thanks! I had missed a new Twisted version was out.\n\nbtw, debian doesn't have twisted 17.\n\nThis is going to be a nuisance. Since a bunch of the debian/ubuntu system packages depend on twisted, I'm loathed to manually package and/or backport twisted 17 in case it breaks things.\nI'll have a think about the best way to move forwards on this, perhaps by simply requiring Twisted 17 for pip installs but not debian installs.. Bumping twisted dependencies will prevent us from packaging synapse for most versions of debian/ubuntu. New versions of synapse that use pip will install Twisted 17 by default now.. @matrixbot retest this please. @matrixbot ok to test ?. LGTM. LGTM. lgtm. Can we use TEXT instead of varchar please? There is little reason to specify an upper bound in PG. lgtm. lgtm. This is going to require us to properly retry different IP addresses when we get TCP level failures on connection, otherwise its (at the very least) going to cause delays as we back off the reconnects.\nClosing for now, but reopen if you manage to fix that :). This is no longer necessary as we have cached the API endpoints the clients hit. @NegativeMjark PTAL. @NegativeMjark PTAL. Why are we even logging there? We log all SQL statements and arguments to the sql_logger by default in txn.execute?. LGTM. retest this please. @matrixbot retest this please. @matrixbot test this please. lgtm, assuming tests are ok. I made it faster for all cases, so I would expect it to be as slow over federation as if a client asked for a non-limited public rooms list (which I think the mobile apps do?). From the logs:\n2017-03-09 20:53:52,658 - twisted - 131 - CRITICAL -  - Unhandled error in Deferred:\n2017-03-09 20:53:52,658 - twisted - 131 - CRITICAL -  - \nTraceback (most recent call last):\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 653, in _runCallbacks\n    current.result = callback(current.result, *args, **kw)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1357, in gotResult\n    _inlineCallbacks(r, g, deferred)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1347, in _inlineCallbacks\n    deferred.errback()\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 500, in errback\n    self._startRunCallbacks(fail)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 567, in _startRunCallbacks\n    self._runCallbacks()\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 666, in _runCallbacks\n    current.result = failure.Failure(captureVars=self.debug)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 206, in __init__\n    if isinstance(exc_value, str) and exc_type is None:\nRuntimeError: maximum recursion depth exceeded while calling a Python object\nand its full of:\n2017-03-09 20:53:48,953 - synapse.util.async - 201 - INFO - POST-14459 - Acquired linearizer lock 'state_resolve_lock' for key frozenset([29319867L, 29319869L])\n2017-03-09 20:53:48,953 - synapse.util.async - 208 - INFO - POST-14459 - Releasing linearizer lock 'state_resolve_lock' for key frozenset([29319867L, 29319869L])\n2017-03-09 20:53:48,988 - synapse.util.async - 201 - INFO - POST-14459 - Acquired linearizer lock 'state_resolve_lock' for key frozenset([29325139L, 29325140L])\n2017-03-09 20:53:48,988 - synapse.util.async - 208 - INFO - POST-14459 - Releasing linearizer lock 'state_resolve_lock' for key frozenset([29325139L, 29325140L])\nfrom about ~~23:47~~ 20:47, though they all seem to mostly hit the cache.. Why, yes, I did, thanks. After catching it doing a bunch of CPU work and hitting it with pyflame, it seems to be 73% of its time in get_order_for_room. 35% of that is resolving state groups. https://matrix.org/_matrix/media/v1/download/jki.re/LhSjIcCyIwwmSQWcvNEAchZT/flame.svg is a snapshot over a period of 10s.. I have changed it so that get_order_for_room is much cheaper, so that should help a lot. https://github.com/matrix-org/synapse/pull/1989. lgtm. lgtm. Thanks!. Failing tests are due to this being against old develop.. lgtm. LGTM.\nThe casting is mostly to get from strings. We could/should probably change the int casts to longs, but whatevs. Why is it default on?. I think we should default to secure, but fine.. @matrixbot test this please. @matrixbot ok to test?. lgtm. Updated comments.. Thanks!. If we have a rejected state event that attempts to replace an older state, do we still see that older state for subsequent events?. lgtm. I believe glyph(?) helpfully pointed us at a library that does this in a better/less hacky way already, we just haven't had a chance to investigate it.. Rendered: https://github.com/matrix-org/synapse/blob/rav/logcontext_docs/docs/log_contexts.rst. lgtm, other than the weird formatting of the ..note block. lgtm. They look fairly spurious and unrelated to these changes. We should probably investigate why Guest non-joined users can room initialSync for world_readable rooms failed at some point, but will merge for now.. lgtm. @matrixbot half-shot is a nice guy so its ok to test. That test has started become flakey, its on my todo list to sort out. The tests are faaiiiiiiling.\nI'm a bit worried that if the display names get out of sync we won't have any way of just resetting all the display names. This is particularly annoying because the updating of the memberships events happen one at a time, so confusion reigns if someone sets their display name twice in rapid succession.. > 3. Synapse keeps a table of what local member events it is allowed to modify, which is extra ick.\nThis may be best, in terms of having a separate API to set profiles per room.\nAll of this sounds like it needs to be thought about and/or go through the spec :s. lgtm. lgtm. lgtm. lgtm. +1 on moving this logic down.\nI think we should seriously think about the UX of limiting all requests to a domain. E.g. if I can't invite someone or lookup an alias on a domain for several hours after it coming back up its going to be quite frustrating. I suggest we add a param (that defaults to off) that allows us to specify that some requests shouldn't be subject to retry. lgtm, modulo test errors. lgtm. Oh, I suppose I should raise a more helpful exception. Yup, as historically we only called notify when there were new stuff for /sync. I think its mostly luck that most places that poked federation also had stuff for /sync. This hasn't really been a problem since presence wakes replication up pretty quickly.. > this is too big a change for me to hold properly in my head, but generally it seems like a sane path.\nSuggestions on how to make this better are welcome, given I had all the code I didn't know the best way of splitting it up.\nWould it perhaps make sense to split this so that we can land only the server side portion of it? That may allow us to actually try it live and make it easier to review? I honestly don't know though.. Closed in favour of https://github.com/matrix-org/synapse/pull/2082 which is just the server side component. Thanks for doing the preserve PR! Will rebase this in a bit. @richvdh PTAL. The concern that changing a bunch of functions to sometimes return deferreds is a bit risky, though at worst it should only cause an exception to be raised when someone tries to add a callback to the value returned. (i.e., we're not going to get incorrect values coming out). You'll probably want to pull in develop to fix those tests?. lgtm. Thanks!. (Actually, I think I will change this to work differently so we can cache things better). I think I've addressed all the issues raised.\nI also cheekily added a <last_sync_ms> to the USER_SYNC command (which is the last sync time), as I think a) its more correct and b) is required if we want to batch up the USER_SYNC stuff on the workers to reduce traffic.. Thanks! This is correct but unfortunately we've discovered that that function is on a hot path, so doing list(set(..)) is probably going to churn a lot of CPU (at least on matrix.org). I think we may have to look at deduping at a different layer, though I'm not sure off the top of my head where.. Thanks for flagging this up, I've added an issue to fix this as I'm not confident enough that this won't cause issues on matrix.org :(. This is non-trivial due to that function being a hot path, and so requires caution and testing to ensure that we don't burn too much CPU.\nIt may be better to dedupe at a later time, e.g. when we're about to send things over federation. You need a comma here to make the % (arg_name) a tuple :)\n. Do we need to worry about the case where headers does not include a Content-Type?\n.  + 2015\n. Do we want these to be configurable?\n. You should be able to get a token using:\n\nnow_token = yield self.hs.get_event_sources().get_current_token()\n\nSee synapse.handlers.message\n. I wouldn't rely too heavily that the limit=1 will only return one room event. Plus it'd be more efficient to have a higher limit when we get multiple events rather than keep hitting the DB.\n. Redundant brackets. pk doesn't need to be wrapped in a tuple. You forgot a space between \"...we\" and \"didn't...\"\nlogger.warn(\n    \"Ignoring rejected pushkey %s because we\" +\n    \" didn't send it\",\n    pk,\n)\n. Brackets are preferred over \\ style continuations.\n. Its up to you if you have a '+' or not, though consistency with the rest of the function might be nice\n. Personally I would newline after the bracket, like you do everywhere else.\n. Again, different style than before.\n. > Comments should follow the google code style. This is so that we can generate documentation with sphinx (http://sphinxcontrib-napoleon.readthedocs.org/en/latest/)\n. + 2015\n. Hmm, we already have a \"context\" for events.\n. New line :)\n. + 2015\n. 1 too many newlines\n. New line\n. new line\n. Brackets would be nicer here :)\n. Need comma :)\n. For future reference, I tend to like ending all lines with a comma. This makes diffs nicer if you add/remove lines later.\n. Technically, unnecessary brackets for tuple unpacking.\n. The way we do it in the rest of Synapse is to: self.store = hs.get_datastore() in __init__\n. Unnecessary newline\n. Prefer brackets.\n. I approve.\n. Unnecessary newline.\n. Unnecessary newline.\n. Unnecessary newline.\n. Unnecessary newline.\n. Unnecessary newline.\n. Space after k: :)\n. Space after k: :)\n. Could move it into base.py?\n. Google style :)\n. Commas in brackets to make tuples :)\n. Two unnecessary newlines :)\n. Ftr, we (aka mjark) wants to move to having the new line string literal start with a space, rather than having trailing spaces.\n. (but this is acceptable for now)\n. Personally I would prefer using % formatting.\n. Technically unnecessary brackets.\n. I think we prefer dict(...) over copy.copy(...)\n. Newline :)\n. Any reason to not use {...} style dictionary construction here?\n. Newline.\nWe've stopped adding and using these classes.\n. We've changed from testing if a key exists further up to catching KeyError. \n. Line continuation indent?\n. We're using ints as filter ids?\n. What is this?\n. Why are we not using auto incrementing row ids?\n. What is this DOING?!\n. Do we want to raise a NotImplementedError?\n. Very minor: it's nicer if you have trailing commas in these sorts of lists, as diffs of future additions are more legible.\n. Will this display anything to the user, or will it just fail silently?\n. I understand that it indicates a misconfigured server, but I think its quite likely that server admins will forget to set the registration config and not test the fallback registration page. It would be nicer if the end user of an app saw an error message along the lines of \"Registration has not been correctly configured, please contact the server admins\", rather than it just silently failing.\nThis is exacerbated by the fact that there are multiple config files to update when enabling CAPTCHAs.\n. cache.pop(key, None) might be nicer?\n. Using collections.OrderedDict might be better here? I don't know what order python will store it keys() in, it would be fairly sucky if we kept removing and inserting the same key.\n. Parentheses? Might be nice to try to only use them for tuples or multi-line text to avoid confusion. \n. A mild annoyance with using _execute is that it doesn't name the transaction nicely, so we can't get nice database transaction performance data. Might be worth doing one of: a) threading through a name, b) using runInteraction directly.\n. For simple selects it is probably worth trying to be consistent and use _simple_select. Though I think it also suffers from the problem of not correctly naming transactions.\n. I would prefer we don't use the Tables for new code for consistency sake.\n. At some point it would be nice to remove Tables (and potentially replace it with something else)\n. Should this query be done in the same transaction as the later select? Will not doing this introduce races? We also probably don't want to needlessly bounce between the main and database threads\n. FYI: Square brackets are not required here, and actually make it less efficient (I think) since it needs to instantiate a list rather than just passing through a generator. \n. This is a well and truly hacky way of getting at the state_key and I really wouldn't want to rely on it. At the very least this should have a FIXME.\nAn alternative might be to join against the room_memberships table.\n. Also, please use json.loads and import simplejson as json to match existing code. This lets us more easily replace the json library in the future.\n. > An alternative might be to join against the room_memberships table.\nOr we can join against the state_events table.\n. Should this all be done in a single transaction rather than jumping backwards and forwards between threads? It would also allow us to more easily assess what the performance is like using the transaction performance logging.\n. Why not create room_ids_matching_alias_or_id as a set and incrementally updating that incrementally, rather than constructing and concatenating lists?\n. As above, why not initialize rooms_for_user_matching_user_id as a set from the start?\n. I think code wise it'd be clearer to update a set rather than starting off with a list and then converting.\nPerformance wise, constructing a set from a list is presumably going to require the same operations as inserting entries into the set in a loop. It's probably not going to make much difference other than if the lists end up being very long and taking up a fair amount of memory.\n. We more care about the time this function consumes on the database thread, rather than how long it takes as a whole (since it might get blocked behind other transactions). My hunch is that the time spent doing the regex is going to be relatively minor compared to the database operations themselves.\n. Hmm, that's a bit awkward. I would suggest fixing _simple_select, but iirc its a bit of monster. :/\n. Also, if we change get_app_service_rooms to be in a transaction then we don't have to worry about naming transactions.\n. Well obviously you should be consistent with the other half of the code! :p\n. Probably state_events, but I'm not sure I have too much of an opinion on that.\n. Oooh, yes please if you're changing it anyway. This was more of an FYI than a necessarily something that needed to be fixed.\n. We usually just use if not results: for things like this.\n. We don't generally use Table anymore, instead we just hard code table name directly in the SQL. \n. I didn't notice that. I probably copied that log line from before. Will change.\n. All delta files must be orthogonal, and I've added that requirement to the docstring.\nThe only reason I sort here is me being incredibly paranoid. This will hopefully make synapse reliably break (or not) if the delta files are not orthogonal.\n. Done.\n. Done.\n. What do we mean by \"receive\" here? My reading is that this is hit when we want to send an event to an AS. Maybe worth renaming to something more like \"enqueue\"?\n. Why are ApplicationServiceApi and AppServiceScheduler instantiated here and not in ApplicationServicesHandler ?\n. We probably want to use exc_info here. See: https://github.com/matrix-org/synapse/blob/v0.8.0/synapse/notifier.py#L220\n. Would be awesome if we could put commas at the end of lists 0:-)\n. For the record, we tend to now put spaces at the start of string literal continuation lines rather than the end. This makes it more obvious if we forget a space.\n. Please either use runInteraction directly or add a description parameter to _execute_and_decode that gets passed through to runInteraction.\n. That was mjarks idea :)\n. Oh, right, for tests? It just seemed a bit odd not to either put it in the HomeServer object or move it into the constructor of ApplicationServicesHandler.\n. It can either be the a bool or string depending on exactly where it was set. This is mainly to make --disable-registration=false work, which sets args.disable_registration to \"false\".\nI'll add a comment to make this clearer.\n. Ooh, good spot.\n. When generating secrets it would be nice to not be limited to characters in the alphabet. random_string is used for generating user and room ids (where it makes sense to limit the characters to the alphabet), so I think it makes sense to have the two functions.\n(We should probably be using random.SystemRandom here too really). \n. It's more that everywhere else uses the HomeServer object to do DI, so unless there is a compelling reason not to I would prefer we were consistent.\nIn fact, we should be adding all three ApplicationServiceApi, AppServiceScheduler and ApplicationServicesHandler to HomeServer. Half the point of the HomeServer object is to have all the DI in one place.\n. So that the constructor for ApplicationServicesHandler only takes a hs argument.\n. We want to always send membership events for a user to their homeserver, not just if its a join event.\n. Err, I mean if event.type == EventTypes.Member: destinations.add(serID.from_string(s.state_key).domain) don't I?\nGood catch.\n. I was being a muppet. Turns out persist_event was modifying context.current_state to add the ban event to the current state, removing the previous join. I've fixed this so that the correct destinations are added.\nFtr, context.current_state is a dict from the tuple (type, state_key) to FrozenEvent\n. Does this not get done in synapse?\n. Should this not also be done in synapse itself? As this is an admin script I think it should be no more restrictive than the API.\n. This check is now done in the registration handler.\n. Can this be renamed to something more descriptive please, maybe _populate_as_cache? Since everything gets pulled into the Store object, being defined in the ApplicationServiceStore class isn't enough to differentiate this method. \n. Should this be using addBoth? Otherwise if there is an error _on_request_finish won't be called and the servce will get stuck in a pending state forever more.\n. Do we want to call _start_recoverer in this case too?\n. > nargs='+'\nDoes this not require you to specify at least one application service config file?\n. Will cancel_call_later no raise if the timer had already been cancelled? The timeout function invokes this method.\n. http://twistedmatrix.com/documents/current/api/twisted.internet.interfaces.IDelayedCall.html\n. Yes.\n. Oops\n. Should this not also log to the log? I don't think we want to assume that stderr goes anywhere sensible once we've daemonized.\n. Would it make more sense to check this before daemonizing? This fits in more with the correct situation where bad config causes synapse to die early, allowing people to have some confidence that the thing isn't just going to fall over once its been fully started.\nI guess the nuisance here is that it is more difficult to run queries on the database before starting the reactor?\n. Fixed\n. Done.\n. Fixed\n. Can this for loop be done as a defer.gatherResults ?\n. This should be either bytea or TEXT\n. The schema version is now 16 on develop. Please either bump it to 16 and add it to both delta and full_schemas/16/ or bump to 17.\n. Adding consumeErrors=True I think ensures that we don't get any Unhandled Errors\n. nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n. Maybe use # matrix_port: 8081 instead?\n. Should this be something other than auto?\n. This change was an accident :)\n. What's the reason for this?\n. Why: from_token=StreamToken(\"s0\", \"0\", \"0\") ? It doesn't event look like it is used.\n. Might be worth making this loop a defer.gatherResults?\n. It might be worth checking if result is not empty before starting the timeouts?\n. Why are we sorting?\n. The various constants here should probably be configurable.\n\nDoes this mean we will lock up a database thread for 300ms each time we get a list of events?\nYes.\nHow much does locking up the database waiting for more requests for events help performance?\n\nIt helps, though I don't have any exact numbers on me.\n. Remove this comment?\n. Is it worth sticking this in a defer.gatherResults?\n. defer.gatherResults?\n. Can this not be optional?\n. This is checking if the given server is in the room by looping through all the membership events to find users for that server.\nCould probably do with one of those \"comment\" things I keep hearing about.\n. Would it be better to move this DELETE to the add/take transactions? It would make this transaction read only.\n. I would prefer if saml2 was disabled by default, since not everyone is going to have saml. One way to do this would be to include the commented out config. It would also be nice to include some comments about what the config is for and links to documentation.\n. We generally define loggers at the top of the file.\n. We should only be advertising saml flows if we have saml enabled.\n. Ooooh, an interesting question. I don't think those tables actually get read from currently? So the question is whether we still want to keep them?\n. Shh\n. As in:\npython\n{\n    (state_events[e_id].type, state_events[e_id].state_key): state_events[e_id]\n    for e_id in state_ids\n    if e_id in state_events\n }\nor\npython\n{\n    (e.type, e.state_key): e\n    for e in [\n        state_events[e_id] for e_id in state_ids\n        if e_id in state_events\n    ]\n }\n?\n. Done.\n. Done.\n. Done\n. - We generally always use milliseconds in our APIs. What are the benefits of using seconds?\n- Generally I try and use %d for numbers instead of %s to make it clear what we expect and to avoid fun surprises if expiry happens to magically be something other than a number.\n- expiry should be in a tuple, i.e. \"time < %s\" % (expiry,) (note the trailing ,). Not putting it in a tuple usually works, but it can lead to surprised e.g. if printing a list the result changes depending on if you have 1 or more items in the list. \n. String formatting expect a tuple, i.e. (user_id,)\n. Not ending files with newlines make me cry :'(\n. - If we're concerned about the number of characters in a caveat, do we want to be adding the spacing?\n- Are these constraints a standard format? How are they interpreted by clients and servers?\n. Personally I prefer to put the closing brace on a new line, especially when appending further function calls\n. shhh\n. Oh, true. Then I have no idea what installation instructions I can put here without doing convoluted things.\n. Hmm. Maybe. I'm not sure how much I like that given that's not how we usually download it, and may not even necessarily be a released version\n. > I thought we were doing git-flow on the angular-sdk?\nYes? Though that doesn't mean people won't commit directly to master occasionally\n\npip install https://github.com/matrix-org/matrix-angular-sdk/tarball/v0.6.0\n\nHard code the version?\n. > Is that different to hard coding it in the python_dependencies file?\nYes, as then we need to change it in more places if we bump the version? We spent a while ensuring we had the dependencies in only one file before.\n. > We can always review that decision if we get round to wanting a new version of the sdk.\nWell that's the problem, we'll forget by that point. \nI guess I can pull in the dependencies module and get the correct import line from there.\n. Done\n. Suggestions welcome?\n. Why is this not:\nEventID.from_string(event.redacts).domain == EventID.from_string(event.event_id).domain\nAuth checks should not depend on the current server, as they need to come to the same answer on all servers in the room.\n. Why have we rearranged these requirements?\n. FYI, there should be a comma after self.cas_server_url to make it a tuple, otherwise the brackets don't actually do anything here.\n. Is it expected that if child.tag.endswith(\"user\") is False we no-op and return 200?\n. We use UserID(user, self.servername) to create these things.\n. You really don't want to be doing blocking requests in the event loop. There's a synapse.http.SimpleHttpClient that probably does what you want.\n. Might it be worth making this optional? And defaulting to the empty string?\n. Mmm, true.\n. FYI, you can do:\npython\nself.cas_required_attribute_value = cas_config.get(\"required_attribute_value\", None)\n. The left parenthesis are technically not required here.\n. What's going on here with the }?\n. Could you add this as a quick comment please?\n. Could we have a quick docstring/comment here to outline what this actually checks? \n. Do we want to explode if we don't have that invite?\n. Why is this removed?\n. Do we verify ID server signatures elsewhere?\n. Yes :) Maybe a log.warn?\n. This feels like logic that shouldn't be in the rest layer.\n. Is nonce-it-up really what we're calling it?\n. Is there a reason why we have this class? Python supports free functions quite happily.\n. Personally, I would write:\npython\ndef extract_join_keys(src):\n    return {key: value for key, value in src.items() if key in JOIN_KEYS}\nAnd then the call site can do either of:\npython\nexisting_dict.update(extract_join_keys(src))   # 1.\nnew_dict = extract_join_keys(src)              # 2.\n. Is 403 the correct error here? It may be worth retrying the request later, for example.\n. Isn't it used to fill out the auth_events field in events?\n. :(\n. I think that shoving non-generic, complex SQL queries into the database engine is just going to obfuscate what is going on in the functions.\n. Done\n. Done\n. Aha, yes. Fair enough.\n. - Docstring?\n- Can we assert that membership in [Membership.Join, Membership.Leave]?\n. Can we assert that membership in [Membership.Join, Membership.Leave]?\n. Are we ignoring bans?\n. What is this?\n. FYI: This is creating a list, copying to a set, then copying to another list. \n- The replication_layer.forward_third_party_invite should accept any iterable for the destinations arg, so we shouldn't need to do the last set -> list conversion\n- set can accept a generator, so we can skip the first list -> set conversion.\nI.e., I believe the following should work just as well:\npython\ndestinations = set(x.split(\":\", 1)[-1] for x in (sender, room_id))\n. What's the rational for splitting this out?\n. Aha, of course.\nOTOH, the destinations list is constructed from a set, and so will be in the arbitrary set iteration order in either case.\n. That's fair enough, was just curious :)\n. I think it would be clearer to move this out to the calling site? Otherwise we're returning one of True, False, func, which seems confusing.\n. I suspect that this would be better as a SynapseError, so that we're absolutely sure we don't persist the fact that this was rejected.\n. We probably want to include third party invite in auth events for the invite?\n. Might be worth commenting that we don't check that the correct server has signed it. That happens elsewhere.\n. The destinations list will be in an arbitrary order here, since it will have the same order as the set iteration order.\n. Personally, I would do the the processing of the content in the federation_server, this vaguely preserving the vague separation of parsing the request and handling the request?\n. I would be paranoid and put a try/except block around here, so that if one invite fails it doesn't cause them all to fail.\n. Then it might be better to write this simply as:\npython\ndestinations = set(x.split(\":\", 1)[-1] for x in (sender, room_id))\nAs destinations should accept any iterable.\n. Not room_ids &= batch_group_key ? :p\n. Ha\n. What do you mean guest = true should always work?\n. Done\n. From #matrix-dev:matrix.org, basically, it doesn't matter if we always include guest = true since the macaroon verifier never fails if we are missing a caveat (due to how macaroons work). So the question is more: do we want to allow there to be a guest = true caveat.\n. A docstring here to explain why verify_expiry would ever be false would be good.\n. Likewise, a quick comment here to say why we're ignoring this caveat would be good. Otherwise it looks really, really wrong.\n. We already have the context as its returned by _handle_new_event (at line 180)\n. logging.error?\n. > Can we use named args here? So that I know what's being set to None\nDone.\n\nWill the do_3pid_invite be ratelimited?\n\nIt just ends up calling create_and_send_event I think, so its probably fiiiiiiiiiine \n. HUSH YOU\n. Well, the method returns None in other places, but OK\n. Rather than abusing SyncConfig it'd probably be cleaner to add a storage function get_receipts_for_room, e.g.:\npython\n    @cached(num_args=3)\n    def get_receipts_for_room_for_room(self, room_id, user_id, receipt_type):\n        return self._simple_select_list(\n            table=\"receipts_linearized\",\n            keyvalues={\n                \"room_id\": room_id,\n                \"receipt_type\": receipt_type,\n                \"user_id\": user_id,\n            },\n            retcols=(\"event_id\"),\n            desc=\"get_receipts_for_room\",\n        )\nor possibly using _simple_select_one_onecol\n. Any reason not to simply membership_list=(Membership.INVITE, Membership.JOIN),?\n. Should we do this even if there's no event? That way we always update the last_token to the latest.\n. And it won't resend badge counts.\n. Were you going to do this?\n. Comments please.\n- What does this do?\n- What assumptions are there on the key/values?\n. Why is this on self? My understanding was that everything here is explicitly not attached to self for performance reasons.\n. Might be nice to only define this if cache is a TreeCache?\n. Oh?\n. I've added some guards.\n. That's ok. So did I which is why I fixed the line earlier in the file.\n. I dislike the LruCache trying to keep track of the size of the underlying cache. I much prefer that caches/collections keep track of their own size.\n. I'd quite like to keep the pop method returning a single item when given a full key, as that matches expectations.\n. Does this actually work still when you do python -m synapse.app.homeserver?\n. defers to @NegativeMjark\n. Is this on purpose?\n. coughs\n. This needs to be within the loop\n. Could you add a brief comment along the lines of: \"Synapse has allowed account_data to have a non-dict content, so lets not assume it here\", just to make sure no one changes it back in the future if we start enforcing account data that content is a dict\n. A comment about the motivation of this class would be good\n. I'd rather we didn't do loops in transactions, since they take out an entire connection for a while.\n. Why not:\npython\ntimer = self.clock.call_later(timeout / 1000., listener.deferred.cancel)\n?\n. Done\n. FYI, there is a _simple_select_many_batch\n. That commit doesn't actually remove the loop, just ensures it iterates at most 50 times.\nIs there a reason why we don't just do a join against room_tags_revisions to begin with?\n. A note on why we're not just doing a json.dumps(..) on a result object would be nice.\n. Also, lots of unit tests to assert that this produces correct json would also be nice.\n. Both last_federation_update_ts and last_user_sync_ts are for internal bookkeeping for timers, so I'm not sure we should be replicating them\n. Why are we taking the negative of the stream ordering here?\n. I'd rather we simply didn't do the database hits if either of these were None\n. I'm a bit confused about this. The canonical check for if we received the invite over federation is if inviter.domain != self.server_name?\n. Aha, right, yes, it was mainly the comment that confused me.\n. Might be worth prefilling?\n. Why not SELECT id, token FROM access_tokens WHERE user_id = ? AND id != ? LIMIT 50 ?\n. We don't really need to batch this SELECT, on the assumption that the number of tokens is likely to be less than the thousands. We tend to batch things to ensure that the SQL statement string itself isn't too long (as the length is limited), so its correct to batch the DELETE below.\nThe two options here are:\n- Just batch the DELETE below and have the loop in the txn, its probably fine in this case since this function gets called relatively infrequently.\n- Do the SELECT in a separate transaction and then do a transaction for each DELETE batch.\n. Can we keep a version where we can delete all pushers too? Possibly making except_token_ids optional? As I'll need this when doing the logout stuff.\n. Eh, I c+p'd from above. /me looks\n. Do we want unique constraints if we're using this as a stream?\n. Oh, I suppose you are using upsert.\n. Can you explicitly spell out that we do have one if the user has specified an email address please?\n. What happens if we use a different number of rounds? The number of rounds can be configured in the config iirc.\n. That makes me happy :)\n. Why not use hs.get_clock()?\nWe generally try and consistently use milliseconds internally, rather than seconds.\n. We generally try and consistently always use milliseconds.\n(You get brownie points for including \"secs\" in the name though)\n. Do the session ids get sent to the client? Or they purely internal?\n. Its probably fine, but random_string_with_symbols will return a lot of silly symbols, so I've tended to avoid using them in public APIs (especially for anything that is used as query string params)\n. time_msec() :)\n. The requester is a separate type, which includes a user. Not sure why the functions in this module ask for both. I'm not even sure why the requester is needed.\n. Hmm, yeah, maybe. I just copied how the other keys worked (i.e. omitting the key)\n. What is this?\n. I'm nervous about hard coding the query parameters that we care about, it feels like it would be too easy to forget to add them to the list. The failure mode of that is fairly terrible, too.\n. I feel at this point maybe using tuple unpacking isn't the clearest thing.\n. This could be outside the loop?\n. Oh? Most of the code base is like this :/\n. This is a bit hard to follow. Maybe something like the following is clearer?\n``` python\nif self.ldap_enabled:\n    valid_ldap = yield self._check_ldap_password(user_id, password))\n    if valid_ldap:\n       defer.returnValue(True)\nvalid_password = yield self._check_local_password(user_id, password)\ndefer.returnValue(valid_password)\n```\nThis way we don't attempt (and log) if we've tried to do LDAP each time someone logs in to a HS with LDAP disabled.\n. I'd prefer if this only caught login failures, as otherwise it masks programmer/logic errors.\n. Maybe make this a warning? Also, instead of string formatting you can do: logger.info(\"LDAP error: %s\", e), which saves us doing unnecessary string formatting.\n. Line 234 needs to be updated now that this no longer raises but instead returns a boolean.\n. Possibly, though I think having them split up makes it clearer what each thing is doing.\n. Well, your example doesn't actually work, as we specifically don't hit the callback for the most current defer in the list.\nI've changed it though I think it just makes things look more complicated.\n. Given we only use hs.get_datastore(), it might be nice if this took a datastore instead?\n. ditto\n. Possibly don't yield here and do a defer.gatherResults? Or maybe we don't even need to yield?\nAlso might be nice to surround in try/except to ensure an exception in one doesn't break another?\n. ditto\n. You might want to switch around some of those equalities?\n. Also, event_push_actions doesn't currently have an index on stream ordering? Might want to add a (stream_ordering, user_id) index?\n. This should be done on the main thread (outside the txn)?\n. We tend to prefer dict literals\n. Would prefer if this was done as an insert many, but probably doesn't matter in this case.\n. Hawkward\n. Might be nice to include units, e.g. direct_user_creation_max_duration_ms\n. Isn't this milliseconds rather than seconds?\n. You're adding seconds and milliseconds\n. Use self.hs.get_handlers().auth_handler\n(Yes, it is a bit sucky that we have to do that, we plan to fix it at some point)\n. Do you mean the AS interface?\n. You can write user_id, token = ...\n. ...?\n. Can you document what _unsafe_process does? Or at least what is unsafe about, what it assumes?\n. Should _unsafe_process call itself if self.max_stream_ordering has been updated?\n. Might be worth taking the max here to ensure it is monotonic.\n. self.hs.get_handlers().auth_handler is a premade AuthHandler :)\nSo just: auth_handler = self.hs.get_handlers().auth_handler\n. Do we want to check if max_stream_ordering has increased and if so call _unsafe_process again?\n. Oh yes, so you did\n. Might be worth sticking this in a try... finally?\n. Will this have a logcontext at this point?\n. Would probably be clearer if this was split into two, since /pushers is only valid for GET and /pushers/set is only valid for POST\n. Generally I prefer to do all CPU work on the main thread, to avoid taking out database threads. Might also be nice to use the _simple_select_list func.\n. Yes. As we probably already have stuff.\n. Spurious blank line?\n. Please include a desc=\"get_pushers_by\" for monitoring purposes :)\n. Because netaddr is cheap to install with no external deps.\n. https://github.com/matrix-org/synapse/blob/erikj/spider/synapse/app/homeserver.py#L288-L289\n. Woops. Added that back now. thanks.\n. lxml doesn't come with a __version__ fwiw.\nAlso, it seems to come as default in my python, (or at least its in the my system dist-packages)\n. Why not __name__?\n. I'd probably prefer if this function returned a factory rather than doing a binding.\n. Do we want to ensure that people don't try and set up a client/federation on a replication slave?\n. Ewwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww.\nCan we not instead just check if report_metrics is true?\n. Why can this not be True?\n. Redundant docstring (also, docstring don't need to start with a newline)\n. Could write this as:\npython\nself.email_enable_notifs = config.get(\"email\", {}).get(\"enable_notifs\", True)\n. - Would prefer if this said it was explicitly for client-server API\n- You forgot the the key name\n. Should we not break here?\n. Is this function not just last_notify_by_room.get(room_id, 0)?\n. I would be tempted to use the name parameter form here, so that you can add/remove and rearrange arguments with ease.\n. vars is a builtin ftr\n. Should probably use the EventTypes constants from synapse.api.constants\n. Would very much prefer a direct link to an actual page with a \"Unsubscribe by clicking here\" button, without needing to log in.\n. Why not a top level import?\n. Generally we prefer to have the spaces at the start of the line, so its clearer when a space is forgotten.\n. Why not result[0] if result else None?\n. Shouldn't this be using  user_id?\n. I know I've been cheeky and used NATURAL JOIN elsewhere, but can we use INNER JOIN events AS e USING (room_id, event_id) instead?\n. Why do we need to join against event_push_actions?\n. No indices? Oh, or is the primary key enough?\n. Do we really want to return None?\n. docstring?\n. This looks expensive if received_ts isn't indexed.\n. last_notif_time doesn't seem to be used?\n. Can we also have a constant for the multiplier?\n. But why do you want it conditional? I'd rather have the external libraries conditionally imported, that way the tests will at least import the EmailPusher and check that is syntactically correct.\n. I'm a bit cautious due to various legal requirements to have one.\n. I prefer to never use plain except: and to always specify the exception type. Otherwise, its very easy for other exceptions to get swallowed and incorrectly handled, leading to a lot of confusion while debugging.\nIn this case I think it should be except ValueError:\n. s/desplay/display/\n. Can this be called something like get_or_create instead?\n. This should probably be config[\"user_creation_max_duration\"] as the default is handled by the default config below, and we probably don't ever want user_creation_max_duration to be None rather than an int\n. This should probably yield\n. This should use the registered_user(..) function from synapse.util.distributor import registered_user\n. Done\n. Sorry, I mean you misspelled \"display\" as \"desplay\"\n. I really don't see the benefit of adding an index we don't use? I don't even know how this data is going to be used.\n. This doesn't feel obvious that this is provisioning a new token, rather than something else.\nMaybe GET or /openid/provision_token?\n. Is access_token something part of the OpenID spec? Or defined by us? I'd rather not have two different meanings for access_token\n. Should this be a macaroon to keep it consistent with the other tokens?\n. sad face\n. Eww. Would still prefer at least /user/{user_id}/openid/request/token or something, anything really \n. Might be worth calling the short_term_user_max_duration, just to spell out it only affects short term users?\n. Oh, but it affects all users if expire_access_token is on?\n. Oooh, yes, good point.\n. We specifically want to invalidate old tokens when we re-register? If so it's probably worth updating the docstring as:\n\nCreates a new user or returns an access token for an existing one\n\nimplies existing tokens are preserved.\n. Would it be better for this to be in test_if_user_exists rather than in setup?\n. That's fine, or:\n\nCreates a new user if the user does not exist, else revokes all previous access tokens and generates a new one\n. Not all published rooms will have aliases, and even those that do may have aliases from servers other than the server (e.g., you can have a single room being published to multiple lists)\n. This might be a useful thing to have\n. Code style wise we prefer the closing parenthesis to be on a new line:\n\npython\ntoken = self.auth_handler().generate_short_term_login_token(\n    user_id, duration_seconds\n)\n. It's fine, I'll probably clear it up myself since it such a small thing. It was more just an FYI for next time :)\n. I think you probably want \"ldap3>=1.0\": [\"ldap3>=1.0\"], ? As the first number is passed to pip and the second is used to check at runtime\n. Would be good to fail here if ldap3 isn't imported. See https://github.com/matrix-org/synapse/blob/master/synapse/config/repository.py for an example of how we do it elsewhere.\n. ldap3 won't be defined if ldap3 failed to import. I think its probably safe to either a) assume that ldap3 is a thing given we check in the config, b) set ldap3 = None  if we fail to import, c) add a assert ldap3 line inside the if block, d) check if ldap3 is defined or e) have a ldap_imported bool set in the try .. except of the import\n. Why aren't we clobbering all values?\n. I would raise an exception here, given its synapse that sets the ldap_mode\n. Generally you write [:limit], but no biggie\n. I assume nothing uses this code atm?\n. You probably want to do:\npython\n... if user_json.get(\"password_hash\") else None\nSo that it doesn't explode if no password_hash key is present.\n. Is this not vulnerable to SQL injection?\n. Doesn't this need to be a secret to each instance? I'd prefer if we instead had it like:\n``` yaml\nUncomment for extra security for your passwords.\nChange to a secret random string.\nDO NOT CHANGE THIS AFTER INITIAL SETUP!\npepper: \"\"\n``\n.self.hs.config.password_config.peppershould beself.hs.config.pepper. Can we name thispassword_pepperor something?\n. I think it may do more harm than good to actually include an example string here that is not an obviousCHANGE_MEplaceholder, as I can see people simply uncommenting and forgetting to change.\n. Yeah, leo just brought that up in the sytest PR. I've added null separators, which I think makes it fine?\n. Can you comment that we are relying on theallow_none=False,behaviour?\n. Why aren't these just separate handlers?\n. Left over debug logs?\n. Is this a thing?\n. Nit: Its more pythonic to just doif absent:.on_OPTIONSshould be handled automatically?\n. Does this not explode if there are extra keys in the body?\n. We don't actually know if theAuthError` was due to the macaroon having expired at this point. \nWhat was the reason for raising here? To give an appropriate error message? Or stopping it from falling back to checking if the access token is in the database?\n. I wouldn't bother testing if the msg string is correct. \n. I've taken a look at the macaroon stuff and it doesn't appear to be easy to tell which caveats have failed. I'd be sorely tempted to just reraise the exception if config.expire_access_token is enabled (which would then effectively disable support for creating non-macaroon access tokens). i.e.:\npython\nexcept AuthError:\n    if self.hs.config.expire_access_token:\n        raise\n    ret = yield self._look_up_user_by_access_token(token)\n. raise by itself will raise the previous exception raised, so:\npython\ntry:\n    ...\nexcept Exception:\n    raise\nis equivalent to:\npython\ntry:\n    ...\nexcept Exception as e:\n    raise e\n(which would be equivalent to not catching the exception).\nHence:\npython\nexcept AuthError:\n    if self.hs.config.expire_access_token:\n        raise\n    ret = yield self._look_up_user_by_access_token(token)\nwill effectively only catch the exception if self.hs.config.expire_access_token is True\n(You need to be a little bit careful with using raise versus raise e if you call a function before re-raising the exception, as the function itself may raise and catch an exception.)\n. I'd rather have this function do the expected thing and filter on room_ids too, so its usable elsewhere. Separately I guess we could check that the room_id matches the filter, but even if it doesn't I think the query would be relatively quick\n. Maybe, though I'm slightly loathed to put tooooo many indices on the events table. I'd also want to check what actual queries are common, as e.g. file pagination would require a (room_id, topological, stream_ordering, contains_url) index\n. Err, yes, quite.\n. sighs\n. would be sorely tempted to change this line to: \npython\ndesired_username = body.get(\"user\", desired_username)\nAs all the isinstance(..., basestring) is making me sad\n. Missing yield, non?\n. We're changing the API from raise on failed login to returning bool? Does this not need a change at the calling site?\n. Err, ignore me.\n. What does a None device id mean?\n. Why are we catching the generic exception ooi? Rather than e.g. StoreError\n. Are these useful for actual packaged versions?\n. I think the \"source distribution\" is for distribution for running, rather than distribution for editing. But we can leave it in I suppose \n. I'd be sorely tempted to keep store this information for rejected events, at least for now, to keep this changeset minimal.\n. Ooops, good spot. Fixed\n. I felt it rude to completely destroy the only copy of tree (by removing lots of bits)\n. It's 2016 and everyone should do everything in UTF-8. Right. RIGHT?!\n:(\n. Yes\n. Woops\n. I prefer to keep try...except as narrow as possible, to ensure we don't accidentally consume legitimate errors. \n. It probably makes more sense to make the storage function return None rather than exposing StoreError. The _simple_select_one* functions should take a allow_none param.\n. Generally I'd write:\npython\nuri = \"%s/3pu/%s\" % (service.url, urllib.quote(protocol)))\nfor consistency\n. I'd be tempted to do:\npython\nresults = yield defer.DeferredList([\n    self.appservice_api.query_3pu(service, protocol, fields)\n    for service in services\n], consumeErrors=True)\n. Do we not want to explode\u2500or at least log\u2500on bad responses from AS's?\n. Generally we prefer:\npython\nlogger.warn(\n    \"Application service returned an invalid result %r\", r\n)\nor some such, ftr.\n. Do we really want to blindly proxy through query strings, rather than whitelisting?\n. There seems to be a large from above. Can this be factored out somehow? Possibly making a function that returns 2-tuple of lists of aliases and user ids?\n. Ah, yes, the appservice is quite ancient.\n. (5, 3) > (5,2) works as expected\n. Generally I prefer to use explicit joins, as it makes it easier to see what the actual conditions are. i.e.:\nSQL\nSELECT rl.room_id, rl.event_id, e.topological_ordering, e.stream_ordering FROM receipts_linearized AS rl\nINNER JOIN events AS e USING (room_id, event_id)\nWHERE user_id = ?\n. Ok.\n. I feel its nicer to have a cache context style thing, as its far from implausible we may want to expose other functionality/information from the cache in it.\n. Can you comment that we only want to set the callbacks, as its very confusing since this function does only get called once every 24 hours.\n. Generally private fields are prefixed by _ as a convention \n. We use underscores fore APIs?\n. there is a _simple_select_many_batch\n. Line was too long and my editor was complaining :(\n. I retract my previous statement, and replace it with: your style isn't inconsistent enough.\n. oops, thanks\n. TBH, mainly because otherwise the matrix.org table becomes huuuuuuuge.\n. Because we don't want to put the event into the current state?\n. Oh, point. Although it'd get filtered out by the get_if_users_have_pushers below\n. The CSP is saying that it can't run anything (default-src none implies script-src 'none'), except inline style sheets. However, turns out that PDF documents can run certain bits of javascript, but having looked online it feels that its quite limited on what javascript in can run. In particular it can't do HTTP requests and the like, so we should be OK.\n. why isn't this inline?\n. Why are we adding to an inbox in add_messages_to_device_federation_outbox? \n. What's the point of device_federation_inbox table?\n. Yes. We send a lot of transactions, so this needs to be optimised.\n. It's very strange to be pulling out here, given we check in _attempt_new_transaction whether there is anything to send.\n. So its used to do idempotency? Don't individual messages have an ID?\n. Can this only catch database exceptions please 0:-)\n. Generally you'd just do if not infos:\n. Generally you don't do type checking like this. If you're worried that info[\"instances\"] isn't going to be an iterable then you can catch the TypeError below where you do list(info[\"instances\"]). I'm also surprised this doesn't happen in appservice_api.get_3pe_protocol.\nUnless this is acceptable behaviour for an app service I'd also log\n. (At not point here are we actually deep cloning)\n. AFAICT slaves always update based on the position key\n. In particular, there is nowhere in the slaves where do a stream_token = max(last_token, new_token), we always just use what was given to us in the response.\n. Woops, that was a debug line\n. Because presence EDU's are a combination of multiple users presence, so we need to manually create the EDU at send time.\n. Yes.\n. Ugh. Also, doesn't apply to typing?\n. Fixed in fa20c9\n. :saddest of all faces:\n. I've been testing on postgres, and it appears to use the right indices.\n. Yes, the index will always be strictly less than len.\nA comment as to why you're choosing to stop then might be equally helpful. :)\n. You need to change the ID as this is a different condition to the other _message conditions\n. Yes, because we only want to delete entries where there are entries for the same room_id with a greater stream_ordering than the cut off point?\n. (In particular, note the top level AND stream_ordering < ? afterwards)\n. (Oh, I was just blind and rich was pointing out the spurious AS stream_ordering)\n. Just a clean up\n. True, will change.\n. Yeah they'll stack up, but the _handle_timeouts is designed not care about spurious wake ups.\n. Hmm, maybe, but I quite like the style of having a single function that occasionally gets woken up and checks if there is anything it needs to do.\n. Oh, true. It's probably better to make it re add a timer when we poke the remote.\n. Any reason not to just return LDAP3Connection or None? Or even throw an exception to make sure the case is handled?\n. Actually, i suppose that doesn't fit in with the way the rest of the stuff works.\n. I'm a bit dubious about relying on get_app_service_by_user_id always returning a deferred that has been resolved. Would it be feasible to change this function to not return a deferred?\n. This worries me a bit if we're not explicit about the cache invaliadtion timings\n. This is a confusing way of giving an example, I was quite confused for a minute. Maybe:\n``` yaml\ntls_fingerprints: []\ntls_fingerprints: [{\"sha256\": \"\"}, ...]\n``\n. 1. This is JSON not yaml\n2. Are we actually changing the API here? Won't that affect when other servers look up keys?\n. \\o/\n. Hmm, this is probably fine for now, but isn't going to work with servers that only allow e.g. LDAP auth.\n. It used to be a map ofroom_id -> tuple -> eventand is nowroom_id -> tuple -> event_id`, so the check should still make sense\n. Oops, no. Done.\n. This check looks like it could be relatively expensive and is on a vaguely hot path. (Its also wrong if multiple AS's register non-exclusive interest in it).\nI'd rather we did this by checking if the authenticated thing actually doing the sending was an AS. We can probably do this by adding a field to the requester type when we authenticate the sender in auth module and checking that field here.\n. Can we parse the stats here, rather than requiring the users of stat to know the magic numbers?\n. I'm not sure I like the name, given that its an ApplicationService rather than some AS user type. I would have said associated_application_service if it wasn't so long. Or maybe sending_as?\n. (Generally I prefer closing braces on a new line.)\n. This line is slightly too long.\n. I'd probably do:\npython\nRequester = namedtuple(\"Requester\", [\n    \"user\", \"access_token_id\", \"is_guest\", \"device_id\", \"app_service\",\n])\nor\npython\nRequester = namedtuple(\"Requester\", [\n     \"user\",\n    \"access_token_id\",\n    \"is_guest\",\n    \"device_id\",\n    \"app_service\",\n])\n. I think you need a .observe() on the end\n. Ditto a .observe() here too\n. Ah, I'd move this .observe() up into the actual cache to make things neater:\npython\ndef on_PUT(self, request, txn_id):\n    return self.txns.fetch_or_execute_request(\n        request, self.on_POST, request\n    )\n. No, as they come from the cache already.\n. You can replace the 3 lines with:\npython\nsub_out_dict = sub_out_dict.setdefault(sub_field, {}). I did a quick benchmark and the following list comprehension is actually quicker:\npython\nsplit_fields[:] = [ [field.replace(r'\\.', r'.') for field in field_array] for field_array in split_fields]. If the args are incorrect this should raise an exception.. And if we really cared about performance, we would pull this up to be calculated when we initially parsed the filter. Probably, but I think that can be dealt with later if necessary.. We probably want to get the latest version rather than a fixed one?. Might want to start at 1 :). Should this not be PYTHONPATH=\".\" trial tests?. lxml requires one of the xml parser libraries, i forget its name.. On the other hand, it also seems to work :s. Done.. We schedule a timeout in 3 minutes both before we send the request, and after we received the response.. Maybe? Would you prefer that? I somewhat like having all the helper functions for check bundled together. Done. Done. This should probably be debug level logging.. This should probably be debug level logging.. This should probably be debug level logging.. Why does this take a user param?. These functions can simply be rewritten as:\npython\ndef get_users_paginate(self, user, start, limit):\n    return self.store.get_users_paginate(user, start, limit). I'm a bit hesitant to add example scripts like this, as they can't directly be run. I believe the register_new_user script actually has an option to specify the new user is an admin or not.. typo accpount_data. Because we're using it below?. I'm not sure I necessarily like that, as its not clear that is_mine_id isn't a local function.. done.. done. This is only going to be a problem for remote servers that have been down for ages, and so this table gets filled up.\nI think that should probably be handled in a different way. Maybe a clean up job that deletes everything but the most recent poke if the entries are older than a day?. I wouldn't expect min(ts) < ? to filter out many rows though, as most users won't update particularly frequently.. Yeah, though personally I quite like the fact that each case of code is handled in order. I can change it if you think it makes it clearer?. No because we're looking up the room. The query we're optimising is essentially:\nsql\nSELECT * FROM current_state_events WHERE type = 'm.room.member' AND state_key = ?\nThe type is in the where clause.. Not all errors have a .code. Usually we do this sort of thing by adding an errBack to the deferred to remove the entry from the cache. I'd actually do this as self.transactions.pop(txn_key, None) just in case the txn has already been deleted somehow. (del will throw if it doesn't exsit). Done.. Ha, I got confused after copy pasting.... There's a mix. Possibly, but I'd rather keep it simple and just keep the most recently seen stream_ids.. Why do we do wait a reactor tick?. I know this isn't you, but this should be logger.info(\"..\", threepid_creds). If you're listing args please add type, e.g. identifier(str): .... This checking of required keys should probably be factored out as its shared between at least this and the email one. Is this the same block of code as in login_id_thirdparty_from_phone? Its probably worth factoring out as a) DRY and b) it'll probably be easier to see whats going on in this function. We should be avoiding using self.hs.get_*() outside of initialisers and instead pull out all the dependencies from the HS we need in the initialiser. This will likely fail as it doesn't have a parameter? If you just want to return None you can actually just do return. What's the reasoning for not just having this as one info log line?. Yeah, this would be much nicer to read if factored out a bit:\n```python\ndef on_POST(self, request):\n    body = parse_json_object_from_request(request)\n    check_required_keys(request, ('id_server', 'client_secret', ..))\nmsisdn = format_msisdn(body['phone_number'], body['country'])\n\nexistingUid = yield self.store.get_user_id_by_threepid('msisdn', msisdn)\nif existingUid:\n    raise\n\nret = yield self.identity_handler.requestEmailToken(**body)\ndefer.returnValue((200, ret))\n\n``. We should keep the auth checks and instead addallow_guest=Trueparam. . Bit of a spurious newline here.. Generally its best to doraise e, as if you later add ayield foothen you will re-raise the wrong error. This is fine for the first cut, but might be nice to changedelete_devicetodelete_devices` and then pass around the list through everywhere. This has a number of advantages: a) it reduces work as a lot of things are cheaper to do in bulk, b) it makes it easier to make the API either succeed or fail, rather than partially succeed if something fails halfway through. Pointless docstring is pointless. Could you add a docstring to say what this and what form the API roughly takes, e.g.:\n\nAPI for bulk deletion of devices. Accepts a json object with a devices key which lists the device_ids to delete. Requires user interactive auth.. Why have you changed this?. I'm not convinced that we want to blindly forward the error from the other side without any sort of annotation. It makes sense to forward e.g. a 404, but what about a 400? A 401? In both cases it would probably be more appropriate to return a 500. Why are we not using multiple except clauses here instead of isinstance?. Why are we including a stack trace if this is only a warn? Why is this only a warn when this will catch all sorts of python bugs?. Is this true? This might be a transient error? Would a 502 be more appropriate?. Please document how this converts between the two. It's not clear to me how this conversion should take place. Does a 400 get proxied through? A 401? Or does it just allow through well known OK error codes such as 404?. Right, if this is about sanitising how errors work then I suggest we get rid of response_code_message entirely, as it appears to be unused. I do think that we should be passing more than just the code to the base exception though.\nPreviously, for an HTTPResponseException, msg was being used for the HTTP reason message, and response_code_message was unused. For a SynapseError, msg was used for the matrix error message, and response_code_message was used for the HTTP reason message.\n\nAs far as I see in errors.py response_code_message is only ever set by LimitExceededError? . No print please. Generally we prefer flows.extend([..]) rather than concatenating two lists, but meh. I wouldn't be surprised if a 401 ended up logging you out :p. Does account data have a sender?. (done). Can you comment why we take the max please? kthx. It feels like that sort of comment would get out of date quickly, and wouldn't necessarily help that much.. This isn't being rendered. (the entire note block). Err, that's not even true, it just renders funny.. I think its probably fine for integers, and I don't think this function will be hit enough for it to be a problem. Oh bleurgh, thanks, have changed.. Yup.. Err, like this?\npython\nregex_obj[\"regex\"] = re.compile(regex)  # Pre-compile regex\nIsn't that commenting on what a line does? I don't see how it helps understanding?. This is basically against the code style, we never check parameters (except in exceptional circumstances). I think it hurts readability if we do type checking of all parameters, even worse when we only check one parameter.\nBesides, the call to re.match will implode if its not a string.. Yes, hence why I changed it at the call sites as per commit message. Hmm, in which case I think I'll change it to not clobber the existing value, or comment in the function name/docstring.\nA comment which is literally describing what a code line is doing always feels wrong to me, and from your comment it sounds like you more dislike the clobbering here than not understanding what's going on. The question is: who is this comment going to help? People who are trying to figure out what the type is will either a) not find the line and guess or b) see from the code its a regex object.. why not just create a Deferred(), yield on that here and .callback(None) later?. Does this need to wait? Or can it e.g. be replaced with yield 1? Or yield run_on_reactor() (which waits for one event loop tick)?. errrrrrrrr, !invoke naming-committee,  (I can't think of anything better either). Typing notifications aren't persisted and is simply in memory (the token gets reset to 0).\nMaybe it would be clearer to consistently pull the current tokens from the handlers? Most of the time they will just proxy through to the store, but then we'd have consistency.. Woops! Sorry, will reshuffle if we split this up more. Ah, no, but could use many more comments as to what the hell is going on.. What in particular? The process_replication to process_replication_rows? Or the fact that I think I have split the account_data stream into two? . In this case we want to get a list of results. I was mainly trying to get rid of all the cases we allocate the list only to use it as an iterable again.. No, as we don't immediately set a user's presence to offline if they \"stopped\" syncing, as they'll probably just come back. We instead set the last_user_sync_ts and time them out later.\nOTOH, we might want to not send \"stopped syncing\" notifs from the synchrotron each time a /sync call finishes. To be honest I'm concerned about this, but it makes cache hits much cheaper.. Hmm, yes, duplicates are probably unlikely. I'll look into it separately.. It may be nicer to let the replication resource register a callback rather than bouncing through a deferred?. Maybe it would be a lot clearer if this function looped until there were no changes? Although that is less immediately obvious is correct.\nIt may be more obvious if we can register this function directly with the notifer, rather than bouncing via a deferred in a loop.. Done on other PR.. Oh I got confused with the other comment about  state = <offline> :/  Yes we should remove it, does so on other PR. This was done as part of making it such that you only get the stream you asked for, as all three would come down if you asked for \"account_data\". I appreciate it would have been better to do it separately. Err, good point. Because some of the speed up comes from not having to bounce through all the deferred stuff (which is much more complicated than just unwrapping to get the value) at the call sites.\nThough we can also leave that to another PR. Done.. Will this param not also get picked up and passed to the db connector?. (done). As we always want to have the position available rather than having to jump through a deferred the first time round. This is the same as what we do with all the ID generators too, we fetch them out of the database during start up. I think I might want to change it, but I'll revert for now as I didn't mean for this PR to change any of the wire formats... :/. I think its better to ignore them rather than just get stuck but have the worker still running, though ideally we'd scream about the error somewhere. The other option is to completely kill the worker, and I'm a bit on the fence which one is better.. Done. Yeeeeees, though that's what its called everywhere else so might better to keep it like that for consistency? Or since we know that it is a TransactionQueue rather than a SendQueue it might be better to rename. It's really rather nice to have consistent naming so you don't have to keep checking types.\nWhat name would you recommend instead? I don't think transaction_queue is a appropriate as a) its not hugely descriptive, and b) most of the code doesn't care about how the federation sends stuff to remote servers, whether it does it using a transaction queue or sends it to the federation sender worker or whatever. To most of the code the the type of federation_sender is either TransactionQueue or SendQueue.\nBut we explicitly require it to be a transaction queue here, so may as well name it that.. Yeah, since the workers don't (generally) write to the db any effect from ignoring errors will be fixed on restart.. The above is copied verbatim from _get_interested_parties. The above is copied verbatim from the old send_presence function. Is this an acceptable thing to do style wise?. Should be: # Copyright 2017 Vector Creations Ltd. Just use a tuple: (room_id, user_id). This should be a function inside the storage function. Conventionally functions that start with _ are private.\nThis also should have a desc=\"...\" field so that that metrics work correctly. Usually its just the name of the calling function. I'd move this entire block of code into the storage function and have a dedicated is_event_after function or some such. Outdated comment?. We probably should be using a storage function that pulls out based on type too. I think there already is one?. This could also be written as:\npython\nexisting_read_marker = account_data.get(\"m.read_marker\", None). We don't need to notify the entire room about this change, just the user.. For future reference we tend to put spaces at the start:\npython\n\"Cannot set m.read_marker through this API.\"\n\" Use /rooms/!roomId:server.name/read_marker\"\nThis makes it more obvious that there is at least one space, which is quite important for e.g. SQL. Try to avoid taking a reference to hs if possible, and instead just pull out everything you need. This is for cleanliness and makes it clearer what the dependencies of this class is.. I usually do:\npython\nread_event_id = body.get(\"m.read\", None)\nif read_event_id:\n    ...\nbut its a matter of taste. I think you can actually write this as:\npython\nis_after = (to_1, so_1) > (to_2, so_2). Heh, for some reason I got it stuck in my head that they were different. This is not equivalent to (to_1, so_1) > (to_2, so_2)?. That's exactly what you want though, isn't it?. I've been trying to use .iteritems() everywhere fwiw, but its fine here. Removed. I'm a bit cautious about just shoving everything into the intern dict tbh.. Err, yes, woops. I hate rewriting if statements. I'm really not sure.. You'll want to be careful here and check the schema as well. To be honest I just copied from the filtering code. I'm happy to drop it if we think we can?. \u00af_(\u30c4)_/\u00af. no?. Done. Generally we prefer to list the types of exceptions, as otherwise its too easy to catch a typo or something. Its probably fine for me.. have_seen has been updated the line above, and have_seen needs to be rechecked as we just fetched some missing events. Is that what you mean? Or do you mean we should wrap the call to have_seen and seen in a function?. We should probably make sure that new_state has been to_ascii'd enough. Actually, I think it happens for free since we make the final dict out of state dicts that already have that conversion applied. . True here surely?. True. Because that's how this PR started and then I sort of got side tracked. normally one would just do if not localpart. It seems odd to dedupe state_groups_to_delete and then use the non-deduped list here. Can you comment this please? It took me a few moments to realise what was going on. I'm slightly concerned that this will leak private information into the logs. Generally we've tried to keep such things out for INFO logging and greater. What do you think of putting the notification_dict in a separate DEBUG log line?. Style nit: We prefer to never use \\ style new line continuations and instead use brackets.\ne.g. something like:\npython\nif (\n    'room' in filter_json\n    and 'timeline' in filter_json['room']\n    and 'limit' in filter_json['room']['timeline']\n):\n    ...\n(This could also be written as:\npython\ntimeline = filter_json.get('room', {}).get('timeline', {})\nif 'limit' in timeline:\n    ...\nbut I'm not sure if that's actually better in this case). Style nit: For multi line stuff we prefer the following style:\npython\nset_timeline_upper_limit(\n    content,\n    self.hs.config.filter_timeline_limit,\n) . Sorry, I meant having two log lines, as we still want the warning, e.g.:\nlogger.warn(\"Failed to push %s \", self.url)\nlogger.debug(\"Notification dict: %r\", notification_dict)\nSorry, I meant having two log lines, as we still want the warning, e.g.:\nlogger.warn(\"Failed to push %s \", self.url)\nlogger.debug(\"Notification dict: %r\", notification_dict). Similarly here:\nlogger.exception(\"Failed to push %s \", self.url)\nlogger.debug(\"Notification dict: %r\", d). Probably not on room_id, no.\nBut I've added one to user_id.. Done. I don't find it any more readable tbh. > I think you might want to remove the \"room_id\" from the join since we want it to force it to join using the room_memberships_event_id_key index.\nIt's hardly going to choose to join on room_id over event_id, but interestingly removing the room_id clause causes it to use an index rather than bitmap scan for me, for whatever reason.. Shorthand for AS u, needed because you can't have anonymous tables in FROM clauses. I guess it would have been nice to split the PR in two.. Woops, doesn't look like I implemented that bit.... Why? We don't call room names display names?. Is now. The only time we use display name is for users... but I guess i can change it. It feels like a very odd thing to be confused about the difference between a display_name and a name (its not like its called ID or anything), especially given we've already set a precedence that we use \"name\" for things like this (e.g. room name). (done). Yup, basically its a bit handy wavey the exact semantics for the admin/visibility stuff. is_privileged is a basically something that goes down the read APIs to tell the clients that \"this person has some power, so just let them try and do stuff and see if they get a 403\". probs. I think I actually I can still just inherit from BaseHandler. At this point I think I was close to purging  all the unit tests with fire so may not have been at my best...... This PR is TBC.... I'd tend to just do if self.data.get(\"format\") == \"event_id_only\":. usually we prefer:\npython\nis_requester_admin = yield self.auth.is_server_admin(\n    requester.user\n)\nif possible, but meh. yield async.sleep(0) will wait a tick too iirc. technically doesn't need brackets. Why are we doing this?. Technically no parens are required. we don't usually bother, but ok. So we're requiring this to be run synchronously? I.e., no IO while checking?. I was more wondering whether we really want to preclude the spam checkers from e.g. accessing the DB, but ok.. This function is almost an exact copy of is_host_joined above.. Do we want this to apply to server admins?. I wonder if we also want to include the room_id here, so that you can fonx all invites for known bad rooms (or whitelist known good rooms). Normally we call it room_id. double indent. you want .itervalues() here  (which returns an iterator rather than constructing a new list). It's faster to do:\npython\npl_event = context.prev_state_ids.get((EventTypes.PowerLevels, \"\",))\nif pl_event:\n   .... I'd probably also move this in to the else, and explicitly do:\npython\npl_event_key = (EventTypes.PowerLevels, \"\", )\npl_event_id = context.prev_state_ids.get((EventTypes.PowerLevels, \"\",))\nif pl_event_id:\n    pl_event = yield self.store.get_event(pl_event_id)\n    auth_events = { pl_event_key: pl_event }\nelse:\n    ...\ndefer.returnValue(get_user_power_level(event.sender, auth_events))\nto avoid some allocations. Almost certainly, so long as its obvious how its used. I think isinstance(spam_error, basestring) works fine?. Yes, it is very sad, but I don't know how else to do it since the writing to the backup can happen asynchronously, and so may last longer than the context which calls it.. (done). (done). (The other option is to rely on the GC closing the file, but that doesn't sound great either). I guess we could copy from the file we wrote into the primary media store, but thats a bit sad making in terms of having to reload that file back into memory.. (done). This actually returns absolute paths (now..). This actually returns absolute paths (now..). This actually returns absolute paths (now..). Yes, this was a spurious change, sowwy.\nIn other news, I've been looking at getting sytest to test both dynamic and static config, and it turns out that this dynamic code path doesn't work at all on master....\nI think we should look into fixing/removing this functionality, but that should probably wait for a separate PR.. Good point. > In other news, I've been looking at getting sytest to test both dynamic and static config, and it turns out that this dynamic code path doesn't work at all on master....\nAfter massaging sytest a bit I've exercised that code path in a way that returns 200, so it seems no more broken than before, at least.. That would explain why jenkins is unhappy....... FWIW I think you should be able to use self.assertRaises:\n```python\nwith self.assertRaises(SynapseError) as exc:\n    GroupID.from_string(id_string)\nself.assertEqual(400, exc.code)\nself.assertEqual(\"M_UNKNOWN\", exc.errcode)\n```\nThough actually I guess that is no cleaner at all than just try...except. What lint is picking this up?. > Max kine length. It gets used as well in the script?. We should probably only do this if the group exists, in particular this currently doesn't work well with create_group. (Speaking of which, you forgot to add requester_user_id to create_group, which is why its failing). You'll need to change the schema version in synapse.storage.prepare_database. You'll need to add this to the scripts/synapse_port_db list of tables with boolean columns. No doc comment?. I... am slightly surprised that check_auth doesn't either return or accept a user_id. OTOH, seems to be what everywhere else does so lets not try and fix it in this PR. Not that I'm in a position to complain, just wondered if it was accidental :). TBH I would probably just have an order param that could be anything, e.g. \"foo ASC, bar DESC\". For performance reasons, I'd probably rely on variable hoisting and do:\npython\nif keyvalues:\n    ...\n    query_values = keyvalues.values()\nelse:\n    query_values = []. I think it would help avoid confusion if upper_bound = self.current_max above this line was removed. .iteritems() would be nice. Ditto. Woops. I need to add brackets.... At this point the logging hasn't been set up and we've not yet daemonized, and using print is consistent with where we do it elsewhere. Just try and parse it as a synapse.types.GroupID instead of trying to come up with your own validation regex.\nWe should also check the server_name, which will probably require us to either pass in the hs object or server_name to the constructor.. I'd probably make this return a generator, which is technically a lot faster as it doesn't allocate. (Just use normal parens rather than square ones). Document types please:\n```\nArgs:\n    user_id (str)\nReturns:\n    iterable[str]: returns an iterable that yields group_id strings\n```\nor something. Unused. I mean, normally I'd either use square brackets (given the if guard) or:\npython\ngroup_id = regex_obj.get(\"group_id\")\nif group_id:\n    .... I think we might need to think if its fine that the invalidation happens after another yield or not, I'm suspecting not.. Why have we removed the conditional? We added it so that we wouldn't spam the logs with lots of pointless log lines. . not all traffic though. quit_with_error in _base.py is a thing. People specifically added a PR as it was annoying, fwiw. Once every ten seconds isn't too bad by itself, but we have quite a few background tasks that should probably be logging to the same extent. \nPersonally, I'd probably put the first log line after we ask the DB for expired URLs and then log both if any expired media ids were returned or we're at debug logging.. We really don't want to be editing the dict here, as it will invalidate any signatures. Why are we changing this? It doesn't seem to be used elsewhere in the code?. So there's always going to be only one access token per device?. I would move the if and fetching of profile into handle_local_profile_change rather than duplicating it everywhere. In fact, I would be tempted to do this all the time and do the checks when we filter. Otherwise we need to keep track of people toggling the option on and off. Do we want to include appservice users here?. I'm also worried that pulling out millions of users is going to be painful.. And its going to take matrix.org more than a day on the default settings to get through all its users. Given that we add users to the table when they are in a room with anyone else, wouldn't the vast majority of users already be in there?. This feels like the wrong place to do this check TBH. I guess maybe somewhere like https://github.com/matrix-org/synapse/blob/master/synapse/http/server.py#L119 would be better, but I'm worried we're merging application handling code into the HTTP rest layer. Nit: prefer iterkeys(), but its probably fine here given the list is going to be small. @ui_auth_handler could work. I assume that we'd notice it pretty quickly if we forgot to put it on there?. Cool. None of these solutions make me jump up and down with joy, but I think erring on the side of explicit wrapper might be the right/safe call here. Am happy to concede though if it feels a bit awful in practice.. Should really be using StoreError as e syntax. Do we really want the code, msg and errcode to be configurable?\nDo we not want to force the caller to include a current_version?. Would be good to have a quick comment on the handler to say what its responsible for. A two line description would probably be good enough,. No lock?. I'd do the loop as something like:\npython\nfor room_id, entry in room_keys['rooms'].iteritems():\n    for session_id in entry['sessions']:\n        etc...\nSo that we don't have to constantly look the key up. I'd be tempted to do some of the different rooms concurrently, given its in a lock.. Don't we need to lock to ensure that we don't change version while doing the checks?. Might be worth commenting on what this protects. I'd be tempted to split this logic out into a freestanding function, as its business logic that could be easily tested. It also gives a chance to document whats going on a bit.. Presumably this means that if I get your access token I can delete your history?. I'm wondering whether we really want the version to be a query param. Whats the rationale there?. Should we be checking that version was actually supplied? Would it make more sense to spit this class in two, one doing POST /room_keys/version and the other GET/DELETE /room_keys/version/<version>?\nIn fact, having POST  might makes things a bit clearer, e.g. POST /room_keys/create_version. Isn't there a _simple_upsert?. Unless you're planning on implementing this I'd rather we just got rid of it, especially if it isn't tested.. I think this can be written as:\npython\nsessions['rooms'].setdefault(row['room_id'], {\"sessions\":{}})['sessions'][row['session_id']] = { ... }\nOr if  you don't mind that we use an extra line:\npython\nroom_entry = sessions['rooms'].setdefault(row['room_id'], {\"sessions\":{}})\nroom_entry['sessions'][row['session_id']] = { ... }. If room_id and session_id aren't required I think it would be polite to make them optional arguments, even if that isn't used. It makes it a lot clearer just from the signature line that the params are optional.. Ermh, are you sure that you want these to be unique indices? What if you have multiple users uploading keys for the same room?. Also, does it make sense to have a session_id without a room_id?. Looking at the code I think we can get away with a single index of (user_id, room_id, session_id), which will be much faster.. This is not what you mean, I assume:\nsql\nCREATE UNIQUE INDEX e2e_room_key_versions_idx ON e2e_room_key_versions(user_id);. Room keys? There isn't a room_id in the table.. > I didn't bother checking that version was supplied; i think it will explode fairly sensibly if it isn't?\nMy hunch is that it'd 500 in a fairly non obvious way tbh, or possibly succeed as the database ends up executing SELECT * FROM versions WHERE version = null. Not hugely friendly.\n\nNot sure what the point of splitting into POST and GET/DELETE would be?\n\nSo you have a GET and DELETE that only work if a version is supplied, and a POST that only works if you don't supply a version. To save having to do checks everywhere, and to make it clearer when a version is required or disallowed, having this as separate classes seems much clearer.\n\nAnd shouldn't POST have the same path anyway? \n\nThey don't really share a path as it is. If you think that POST /room_keys/version is clearer than POST /room_keys/create_version then fair enough, twas but a thought.\nAnd yes, turns out naming APIs is hard.. I'd rather not have to review code that isn't used, and dead code just adds bloat to the code base and makes understanding things more annoying.\nAlso, I think I would ask you to rewrite.. Its probably worth documenting what happens in the presence of a null room_id and null session_id. Ditto with docstrings. What if there isn't a version for this userID. Honestly, the thought of changing the API shape was simply a tangential suggestion. The actual suggestion was to change the code layout to better avoid having to manually handle null values of version.\nHaving GET /version that returns the most recent version works, but what does it return if there isn't a version for that user? What does DELETE /version do? I note that we still don't seem to be checking if the version is null in that case.. Why is this a separate variable?. For query params its probably better to use parse_string and co\n  . I'm really not ecstatic by this API shape TBH, but I'm somewhat keen to ensure that the open file gets cleaned up correctly.. How does the background reindexer handle things that crash?. This won't work as you're doing deferred[..] rather than (yield deferred)[..]. I'd suggest:\nthign = yield foo\nresult = thing.get(\"users\", {}).get(user_id). AIUI, raise raises the last exception rather than the exception in the current block. So in this case raise would use any error thrown by the os.remove. These are options that will probably be used across any future storage providers, so it felt a bit silly to implement the same options across multiple ones (I have a S3 one lurking about).\nFor example, I can imagine in the future we might end up with config like:\nyaml\nstorage_providers:\n  - name: backup_fs\n    store_thmbnails: false\n    type: FileStorageProvider\n    params:\n       directory: /foo/bar\nor something. (We only call finish on success). Won't this mean that any transactions created by calling runWithConnection directly won't be measured? . It is a distribution here.\nHonestly I think it makes things clearer to always include the count, as otherwise it loos a bit odd to do: rate(metric_one:total)/rate(another_metric:count). They may not be picked up by db_txn_duration, but they are picked up by sql_txn_timer. Losing metrics for fetching event txn duration doesn't sound ideal. . > It seems really silly to me to maintain six identical copies of the same counter here. That's a lot of pointless objects, hash lookups, and integer increments.\nI would be surprised if they're not completely dwarfed by transaction overhead.\n\nIMHO what we ought to be doing is rate(synapse_http_server_response_db_sched_duration)/rate(synapse_http_server_response_count), which feels much more intuitive, but will take a bit of work to get there.\n\nPossibly, but having things consistent seems more intuitive than having a couple that don't fit. . Is k here really going to be a list? Why do we need to flatten this when we didn't previously?. Oh, I'm an idiot, nevermind. Mainly because we handle local and remote media differently in the DB, and so it returns different things. I think what has happened is that the local/remote code paths were almost entirely separate and have slowly converged over time, making this a bit strange.. I swear to god I just copied and pasted that. Today is not going well.. 2018 New Years resolution: Actually manage to copy and paste without fucking up. Just once.. I'm fairly sure it doesn't, and its not a problem as _resume_paused_producer checks self.paused_producer again anyway.. Ah, yup, oops.. Do you mean and not re.match?. What does require_msisdn mean? We don't seem to add a stage for it.\n\nAlso I really can't follow whats going on here, there are two many if and nots and ands and ors. It seems that we're building up flows based on required stages, so something like the following might work better:\n```python\nrequired_stages = []  # The stages that need to be in every flow\nif self.hs.config.enable_registration_captcha:\n    required_stages.append(LoginType.RECAPTCHA)\nif require_email:\n    required_stages.append(LoginType.EMAIL_IDENTITY)\n... etc ...\nNow we work out what flows we need to offer.\nflows = []\nFirst we add the base flow with only the required stages:\nflows.append({\"stages\": required_stages})\nIf we don't require email, then we add a flow to let people optionally specify it\nif not require_email:\n    flows.append({\"stages\": required_stages + [LoginType.EMAIL_IDENTITY]})\n``. Don't do string building, like most logging libraries it does it for you:logger.debug(\"foo: %s, bar: %s\", foo, bar)` . Nit: Normally I'd do the pattern of returning immediately rather than having an allow variable, e.g.:\n```python\ndef check_3pid_allowed(hs, medium, address):\n    if not hs.config.registrations_require_3pid:\n        return True\nfor constraint in hs.config.registrations_require_3pid:\n    if allowed:\n        return True\n\nreturn False\n\n``. Proper docstring please.. Nit: Generally we always try and use trailing commas. Don't do string building.. (See comment where we do this in v1 register). Can we not usecheck_3pid_allowed` here?. Don't need explicit string formatting, logger.debug does it for you.. Doesn't this need to check both msisdn and email?. Personally I would have the two config option entirely separate, as this doesn't support the use case of \"require a work email but let people bind personal emails\". Should have a:\nReturns:\n    bool: ...\nespecially since I think there are other check_ functions raise rather than return a bool. Ok, in this case it was an observation that this feels odd and questioning whether this is the right thing to do. The synapse review process is not just about whether functional changes are right, but if we should even be doing it like that.. Although a 100 connections per host seems a bit overkill for a pool to have tbh. I'm not sure whether its worth making this configurable via CACHE_SIZE_FACTOR to be honest.. I guess the point is that the pusher is a bit silly and needs that many connections, and so we may as well keep them around?. I'm not sure we want to being doing eviction metrics based on size of the entries? I'd have thought we'd want evictions to be comparable to hit/misses which aren't based on the size of the entries?. Fair enough, make sense. I wander if we should call it something other than \"evictions\" to make it clear? Maybe \"evicted_size\" or something?. > why is this entry.prev_group rather than context.prev_group as calculated above? \nThat was a typo tbh.\n\n(any idea when entry.state_group is falsy so we do the prev_group thing?)\n\nentry.state_group is falsey if the resolved state doesn't already have a state group. This would typically happen when the prev events for the event point to two different state groups.\n\ngenerally the logic in compute_event_context is mysterious :/\n\nI've tried to add some comments. Yup. Basically, we've been explicitly told the state at this point (old_state) and we need to persist that. This e.g. happens when we're backfilling and we're told the state at this oldest event. We could try and be clever and check if we've already persisted a state group with identical state, but we're not that clever atm.. Ooh, yes. I've cherry-picked that.. Oh, blast, I think that might have been vscode doing the changes without saving the open files. Sigh.. I have unfucked it now.. Its doable, but the diff would be quite big. We're currently only handling non-state events on this worker for now, as sometimes the membership state changes end up doing complicated things that probably need to be done on the master.. Nit: I do prefer always using tuples rather than relying on strings working.. Should this be None to be a bit more consistent?. Generally yes, (or (event_id,) without the space), as its very confusing if there is a bug and event_id suddenly becomes iterable and then the logging explodes. In this particular case its probably fine though. Yup, didn't realise until after i had submitted the review. Do we? work_mem should be reset if the transaction aborts: https://www.postgresql.org/docs/9.4/static/sql-set.html. The docs suggest analyzing temp tables if you're going to do complex queries on it. Not sure if that applies in this case.. fair. You can just use \"\"\" triple quotes rather than quoting each line individually fwiw. Ha, I hadn't noticed. I don't think it really matters for now though. Shouldn't be possible unless you super() it, but seems fair.. I'm not 100% convinced that we events_and_contexts can't be empty, given the number of times we filter it down. The rest of the code should be fine with it being empty.. We want to ensure that it always gets run, so that it clears up the staging area with all events.. Woops.. The push actions are lists of tuples, rather than dicts here, I think? We could go and change the function to take the push_actions as a dict.. Should I remove this and replace it everywhere with ApplicationServiceTransactionWorkerStore?. Its not a noop if all_events_and_contexts isn't empty.. Maybe it is? But there isn't any documentation that executemany is fine with empty lists and its the sort of thing I can imagine it complaining about.. Ah, oops. Yay go github. Yeah, we use it if we throw an exception between persisting the push rules and persisting the event.. We remove push actions in a try finally block after we call handle_push_actions_for_event in handle_new_client_event. Woops, must haven't confused with another PR where we hoist all the auth stuff to the worker too.. Ah, and ditto for the extra_users param. I've added a commit to send the two params over replication.. Ah, may as well set it to None. I think before we didn't call _find_stream_orderings_for_times_txn on start up whereas now we do, so that code won't be hit currently.. (done). Oh, good spot. TBH I was mostly using it so that I could track down all the various places we were doing annoying hs.get_*() calls. Am happy to put them back. Me too, but I think this is something to be investigated outside this PR.. s/12/120/. Oops, forgot about this debug logging. Perhaps we want to keep something like it here? WDYT?. Yeah, sorry, as I mentioned in a comment this was debug logging I forgot to remove, (SH was just a way for me to search in logs for). Do you think it'd be useful to keep this log line? This case should be hit rarely.. Yeeeeeeeeeeeeeeeeeees, though I really want to burn this code path with fire since its so inefficient and nothing should really be using it. Looking at the code again it actually may not be as bad to fix as I initially thought. (I'll do that). Hmm, though I think this code paths is actually broken, as it tries to instantiate RoomsForUser with too few arguments.. i.e., I'm wondering if we can just stub it out with a NotImplementedError or something. (The parentheses on the left are redundant). I wonder if we should log the purge_id too for all these log lines. Maybe set the request_id for the context or something?>. Why are we not logging as an exception?. For paranoia's sake I tend to prefer d.pop(key, None), as that won't throw if the key doesn't exist, but shrug.. I'm not entirely convinced this is better than just using a regular dict. Having a dedicated PurgeStatus class is useful for documenting and enforcing the return values, but I don't think that this particular construct really does either of those. \nI'd prefer either a subclass of namedtuple (it does helpfully provide an _asdict already), or have asdict be explicit about the properties it returns, i.e. {\"status\": self.status}. Also, a short docstring would be good.. Docstring?. Given this can take hours, I'd probably have it much higher, like 24hours or something. I wonder if it'd be better to merge completed status with an unknown token status, so that even if we remove the entry we get the same result?. We return failed not error. As in, why aren't we using logger.exception(...) rather than manually building a stack trace?. fair. > I tried a namedtuple to start with, but I wanted the individual fields to be mutable so that didn't work.\nAh, of course.. Yup, happy either way.. I was just thinking in terms of people manually curling. Given how small PurgeStatus is I think we may as well keep them for longer.. Currently a 404 means that either the token was invalid or the purge has completed but we've forgotten the ID.... Oh, I guess that's not true if we restart half way through. Nevermind.. Should be logger.info(\"...\", purge_id). This is going to be prone to non-obvious breakage depending on if slashes are added or not. Can we not use the server names here?. You don't need to explicitly do a return. Given this is a string rather than boolean, I'd just have it default to None here. Don't think you need to change any other code.. Spurious new line addition?. Oops, I misread the thingy. Ta.. Hmm. I thought we always put e.g. import logging last tbh. (Doesn't your IDE rearrange imports into that order?). This needs to be removed as its spurious. These need to be docced.. Yup, as we'll need to hit out to the master and we want to include the Requester in the logging there.. (We don't do it for the user_*_room as that just goes straight into the distributor which immediately strips the context). Oh, I had it in my head that it was user_join_room. Will change.. Its used to log the authenticated entity during Processed request... logging. Oh, this was just a cheeky thing to only do the != check if we do actually have node.callbacks. D'oh, I thought i'd explicitly not changed that :/. Good catch!. Oops, yes! I've added a guard inside too, but kept the outer one for the fast path. Yup, we could use an ObservableDeferred here. I think with the reseed logic it becomes a non-trivial rewrite, so I think I'll punt until we have a chance to look at how we should be doing this properly.. As in, we are creating a new event locally, as opposed to coming in from federation. I could change it to say \"when we create an event locally\"? Not sure if that is less confusing or not.. We look at each event until we find a match. If we were implementing this then if we found a match we'd just use the delta from that and return.. This should probably go in the changelog IMO, otherwise a) we'll forget to update $NEXT_VERSION and b) I think most people look at CHANGELOG. This doesn't exist in older versions of psutil, alas. We have theoretically support any version of psutil >= 2. and in practice I think the debian package (for jessie) relies on being able to use v4.x. Using 0 works to defer it to the next reactor tick, which is probably nicer than arbitrarily waiting 15 seconds. The other option is to add a callback to _base.start_reactor to accept a function to run on the reactor.. FWIW, you can just return self.runInteraction(..) and not annotate with @defer.inlineCallbacks. This is getting set from inside a local function, so an assignment won't work, e.g.:\n```python\nstats_proc = None\ndef get_proc():\n    stats_proc = object()  # This creates a new local variable\nget_proc()\nassert stats_proc is None\n```\nThough I think you're right that its a bit unclear at the moment, we generally write:\n```python\nContains the psutil.Process once we've fetched it.\nstats_proc = [None]\ndef get_proc():\n    stats_proc[0] = object()\n``. Do we need to include the time since the last call?. Oh, nvm. We should probably factor out the common code withaccept_invite.set_group_join_policy` needs a docstring, especially as we only want to accept certain values so we should document what they are.\nMight also be worth adding a assert join_policy in ('invite', 'open') (we should probably move some of those to constants somewhere at some point). If we can have defaults then we may as well do\nsql\nALTER TABLE groups ADD COLUMN join_policy TEXT NON NULL DEFAULT 'invite';. (I was expecting it to be settings plural, but that's a matter of taste). check_group_is_ours returns group_info. Why are we changing this to use inlineCallbacks?. This should probably be an internal function _add_user. Having looked at the sytest I now realise that this gets passed straight through to the client by /profile. This API doesn't make much sense as the join_policy isn't a string, but a dict.\nAs you can see the way we do this with visibility is to use a separate flag: we don't specify the precise visibility settings, but simply whether the group is fully public or not. Either we should have an is_openly_joinable flag or return the full join_policy dict. Personally I'd probably match the existing stuff and return is_openly_joinable (or some such).. If we're doing this then lets be explicit about what we're returning, e.g.:\njson\ngroup_description = {\n    \"name\": group_description['name'],\n    ...\n}\nMainly to stop us from running into the same problem when adding columns to the DB in future. Good catch. It shouldn't happen really, but it empirically seems to have on matrix.org in the past so is probably worth keeping for paranoia's sake. . So do logcontext.run_in_background(handle_room_events(evs))? Isn't that equivalent to preserve_fn?. Yeah, though I think in this case its more hassle than its worth. Another option would be to make the counter and gauge class the same and have it support both set and inc, but then you lose the easy ability to see if a metric is meant to be a counter or gauge. WDYT?. (I'd generally implement __len__ ). Shouldn't this be have_seen_events?. Reading through this PR I've been a bit confused about this name. I keep expecting it to just return the rejected events, rather than all events we've seen. Maybe something like get_seen_events_with_rejections? Its horrific but I suck at naming :/. We tend to do:\npython\n        chunks = [\n            iterable[i:i + batch_size]\n            for i in xrange(0, len(iterable), batch_size)\n        ]\nwhich I think is quite a bit clearer?. Oh, right, yes.. \\alpha f(x) = \\alpha(f(x)), i.e. for the event in the state f, \\alpha f(x) are its auth state keys. By depends on I mean, say: c_f(x) depends on r_f(x), then forall g where r_f(x) = r_g(x) then c_g(x) = c_f(x).\nIts basically saying that c could be written as a pure function from f(x), g(x) and r_{f,g}(\\alpha_{f,g}(x)). a_{f,g}(x) = x \\cup \\alpha_{f,g}(x) \\cup (\\alpha_{f,g})^2(x) \\cup .... Err, yes, (though \u03b1 is a subset of a, so its correct to say that it depends on a). Yes, if you mean the first \"depends on\". Though as above its correct to say it depends on a too.. yup. yup. Spurious \"ERROR\"?. It doesn't really change anything query optimisation wise, other than giving the optimiser more leeway over which index to use.. > However, there is a problem in that debian jessie has 0.14. There is a newer version in backports though - @erikjohnston is it ok to rely on things in backports?\nIt is, though I think we do some foo to host the backported packages we need on our repo. I've just had a look at it seems that we're already hosting v0.16, so this is fine.. What's this?. Why is this commented out?. I'd write this as: \npython\ndef __init__(self, hs):\n    Resource.__init__(self)\n    config = hs.get_config()\n    self.limits_dict = {\n        \"upload_size\": config.max_upload_size,\n    }\n. https://stackoverflow.com/a/42799031. Yup, there shouldn't be any functional change here.\n(I really wish GH made it clearer that stuff is mainly white space change, e.g. https://github.com/matrix-org/synapse/pull/3193/commits/06c0d0ed081b56716135c4881e600861b2e8cad5?w=1 makes this a lot clearer imo). (Done). Scary that that is not picked up by a sytest :(. Looking at it I don't really know why we don't always use the topological ordering, but I've added the comment.. This should be run_in_background(self._user_parter_loop) . Can we comment about what this is and why we're doing it?. Short docstring pls. Short docstring pls. If this throws an exception then we're going to be stuck constantly trying to retry this. We should probably catch the exception, log loudly and move on maybe? Or something?. Docstring pls. How does this interact with the Accept-Language headers?. Why are we using short keys here? I thought the other APIs tended to use fully words.. Can we use keyword args please, and a docstring would be nice.. Or unknown language? We probably want to fall back to something here.... Why are macroon_secret_key and form_secret handled differently?. I wonder if its better to have this set close to the rest of the consent config?. Why?. You don't need the __all__ for that?. Ok, but then can we properly fill out __all__ or comment that it is a hack? To me it looks like we're saying that ConfigError is the only thing we're really wanting to expose from synapse.config. (It's particularly eyebrow raising since the code style specifically talks about avoiding using wildcard imports). If this isn't a matrix API then we should probably host it under e.g. /_synapse or wherever we host synapse specific stuff.. If its easy to fix up then that would be good, as otherwise I reckon its going to cause confusion in the future.. \"oh\". You can just use self.clock.time_msec(). In fact, You probably want to get this before the query, so you do:\npython\nnow = self.clock.time_msec()\ntxn.execute(sql, (\n    today_start, today_start,\n    self._last_user_visit_update,\n    now,\n))\nself._last_user_visit_update = now\nThis ensures there isn't going to be any overlaps or missed updates.. Do you mean:\n\nit is important that the query is run often.... (The identing style we use tends to not use this continuation indent. See other comment for how it normally looks). How so?. This is looking at the events that point to the extremity, as we don't actually have the extremity events.. (And I think the check is the right way round?). OK, its different in terms that we're not returning the event that points to purged events but the purged events that we get pointed at, yes. (And this isn't anything to do with the change in the sql, and was wrong before). Each disconnected part of the DAG will have their backwards extremities in the event_backward_extremities table, so the event with the minimum depth must be one of them, no?. I don't think there is anything stopping B being in the middle, since theoretically if you inserted the chunks in the order A, C, B, D, then that obeys all the constraints and so the KB algorithm will leave things alone (I think).. Yes, there's a few cases where we want to order events by depth where this would be useful. Though admittedly I'm not 100% sure that it'll be needed in the end.. Aren't these usually documented under Attributes in the class level docstring? I'm finding it hard to read when done inline if I'm honest. Can you quickly comment that there is an asymmetry here to ensure we don't pick a room the system user is merely invited to, and that that is important. I missed that it was like that and almost complained.. Can we hang this off the user directory stuff that tracks users who share rooms, as this is quite an expensive thing to do?\n\n(I'm not sure if that is possible). Fair enough. As it currently stands if someone invites the system user to e.g. HQ, we need to make sure we don't accidentally pick that as the notice room.. Is there a good reason then to have the two code paths?. Do we want this here rather than in the sync handler? It feels odd to have this indirection, especially since I can see someone commenting out the presence handler in the sync code. This shouldn't be assigning on self.... It's mainly used in update to allow it to call from_context. This gets run before every call to /metrics, so should be fine. OTOH we may as well make it clearer by using a callback metrics. I'd be tempted to move it to sync code and then make it noop, possibly by having a dummy notice sender on workers. But not sure how worth it that is.. Ah. Do we not want to exempt AS users?. Oh, yo do that later. I'm not sure I really get the difference between the checks here and the checks later. Should this really be info?. get_domains_from_state returns a list[tuple[str, int]]. Have added a comment and typing info. We probably want to index this; a run on matrix.org takes about 1.5s. We're in synapse_federation_transaction_queue_. _rule_ not _role_. http_server rather than http_request. Gen 2 can sometimes take 30s, so probably worth adding a few more buckets. Getting an idea of large GC times gives us an insight into why things might occasionally be pausing for tens of seconds ,which is useful.. Why would they already be registered?. I really don't like that the idea of magically going and rewriting everything like this, but am prepared to accept it for now since presumably we need the flexibility.. Ah right, might be worth just putting a comment that its for tests.. The default histogram buckets expect them to be observed in seconds rather than milliseconds? I think we'll need to go through and change all the observations to use seconds instead.. start_http_server should spawn its own thread, so is it necessary to callInThread?. Do we not need to keep this for backwards compat for people using metrics_port?. You don't want this line.. If we're doing list(foo.keys()) can't we just do list(foo)? Rather than in py2 have the lists be copied twice. Wouldn't it be nicer to do list(iteritems(...))?. Well that's fun :/. I guess there isn't much of a reason to leave the prev_state out of this, since its simply an extra constraint. Though we no longer add prev_state stuff and in general I like that we are consistent with always using is_state: False. (It would in fact be nice to delete that entire column and all entries where it is true). The queries should all hit indices and so should be fast, though yeah, the number of them about does mean even the RTT will start adding up. I'm not sure how much caches will help tbh, as for most cases what we fetch will change each time (though we could possible prefill the caches).\nReally, I'd quite like to split a lot of the persist_event logic out into per room logic, so that if something goes slow for a particular room it won't block events in other rooms being persisted. I.e., when persisting an event it first gets added to a per room queue to have chunk/current_state/etc calculated, and then that result gets fed into the persist event queue. Maybe.. I'm not sure I see how?. Indeed. Ah, good point well made. (Done). Could do, it doesn't really matter I don't think since we enforce the limit anyway and this way was just easier. Can change if you think its worth it. Oh yes, this was a bug in that to get the token before you take one from stream_ordering rather than topological_ordering. I guess it matters less in this new world as topological_ordering is unique.. Possibly, I think I need to document that its an ordered list.. It shouldn't really happen. I think in a later PR I explicitly convert chunk less tokens to ones with chunks.. Was this meant to be left here?. I'd quite like to see a couple of tests for IPv4 and IPv6 literals with ports specified; I don't think IPv6 literal with port works.. I feel like this is too vague to go into a changelog. Something like \"Fix queued federation requests being processed in the wrong order\", might be better maybe?. Might be worth a quick comment as to why we don't use get_domain_from_id, I was a bit confused.. ooh, cool. Might be worth a quick comment here to say why this would be None. Presumably we shouldn't be returning NOT_DONE_YET if we have actually finished the request.\n@hawkowl how is this meant to work in twisted?. Thank you!\nI was desperately trying to figure out how on earth I could avoid having to subclass just for that method and I drew a complete blank. FTR assertRaises is a thing. Unfortunately we can't just override accessors since they would need to return a deferreds in the DeserializedContext. How unhelpful. (done). I used .misc here on the assumption that this will automagically get merged with the changelog entry for https://github.com/matrix-org/synapse/pull/3555. Oh yes. Do we want to remove the explicit include of EventsWorkerStore and rely on that EventFederationStore pulls in it? Personally I'd prefer to keep it.. I would probably not bother having limit_usage_by_mau_gauge, and simply set it to 0 or null if limit isn't enabled. Does it make sense for this to be done if hs.config.limit_usage_by_mau is false?. This should either accept a txn argument or use runInteraction, otherwise its going to be too easy to call this on the main thread (which is bad as this method blocks). count_monthly_users will need to be asynchronous and return a deferred, which we'll need to yield . LIES AND SLANDER. Can't this just be SELECT COALESCE(count(*), 0) FROM monthly_active_users?. I think this is spurious. Who's jeff?\nI'd probably write it/reformat to simply be:\npython\ndefer.returnValue(bool(user_present)). Upserts without locks are dangerous as they're racey. Upserts with locks are bad and should be avoided.\nI'd quite like to see how this is actually hooked up. Sorry, can we quickly change this to \"Add ability to limit number of monthly active users on the server\", or some such. Otherwise its going to be confusing for people to read the changelog who haven't had the full context.. This still needs a yield. FWIW, we generally start the docstring on the sameline of the quotes, so something like:\n```python\n\"\"\"Counts the number of users who used this homeserver in the last 30 days.\nThis method should be refactored with count_daily_users - the only\nreason not to is waiting on definition of MAU.\nReturns:\n    Deferred[int]\n\"\"\"\n```\nAnd that's also how you annotate return types (such that IDEs correctly interpret it)\n. Why are we setting this?. You can use keyword args here, rather than connection strings: http://initd.org/psycopg/docs/module.html#psycopg2.connect. Can we call this something like _synapse_unit_tests_temp_base or something, I can't see it far too easily dropping valid databases.. This shouldn't be necessary if we're creating it manually anyway?. Generally you should use a blank raise to avoid losing backtraces, right?. store is the same as self here. Deferred with two r's. Also, Returns with an s, and a newline before it. (This is so that IDEs can read it to get type hints). You don't need to include a LIMIT. These invalidations should only happen after the transaction has committed, which can be done by yielding on the self.runInteraction. This seems odd. Either this should raise an AuthError and callers can catch AuthErrors and re-raise as a more appropriate exception, or it should just return a boolean.. I know its a bit nitty, but consistency is quite important for readability:\n```python\n\"\"\"Generates current count of monthly active users.abs\nReturns:\n    Defered[int]: Number of current monthly active users\n\"\"\"\"\n```\n(Indentation, returns and square brackets for the type Deferred returns). This feels like it should be in monthly_active_users.py. I would avoid having to do an update on every request. One way of avoiding this is to have the is_user_monthly_active return the timestamp and use that to only insert if the difference is greater than, say, a couple of hours. Since that DB function is cached we avoid doing queries most of the time.. We should only invalidate if we actually added a new user to the table (rather than just updating), helpfully _simple_upsert returns True on insert and False on update.. Ugh, that's true. But it doesn't look like postgres supports negative limits. You can instead probably structure the query as:\nsql\nDELETE FROM monthly_active_users\nWHERE user_id NOT IN (\n   SELECT user_id FROM monthly_active_users\n   ORDER BY timestamp DESC\n   LIMIT ?\n). There's a _simple_select_one_onecol ftr. Can you quickly add a comment to say why we're not always upserting?. Can you add a quick comment saying what timestamp is? In particular, its probably worth calling out that it isn't necessarily accurate.. I'm not convinced about doing these checks twice, instead of trusting Config . I wonder whether its really a good idea or not to expose this as a config option? Its definitely not the sort of thing that I'd want most people to pin, outside of testing.. oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooh. Yeah, possibly. Not sure what we'd want to copy? @richvdh did you have opinions about how this is meant to work?. I think it'd be clearer to say something like:\nuser_id(str|None): The user ID of the requester, or None if registering.\nSo that the docstring doesn't require readers to understand what the MAU cohort is to know roughly whats going on. I wonder if we should call this check_server_limits or something. Is there a reason we don't replace respond_with_json_bytes with this?. Looks like you've manged to pull this in from the PR to change the error codes. I'm raising an eyebrow slightly that we're not able to differentiate between the mau/resource stuff and the generic disable HS option.. So this constructor now looks odd. We should either pass through **kwargs to the super constructor or take errcode as a parameter instead of *args, **kwargs. \nIts also worth noting that self.msg and self.errocde are set by SynapseError constructor, so we don't need to set them here.\nI'd probably write this as something like:\npython\n    def __init__(self, code, msg, errcode=Codes.FORBIDDEN, admin_url=None):\n        self.admin_uri = admin_url\n        super(AuthError, self).__init__(code, msg, errcode=errcode). Admin email or admin URI?. I guess we can leave it as is for now and add an option for setting the error code in the config when we disable, if it proves necessary.. We should probably not have two changelogs?. Oh good god, I had completely missed that.. I think we want to make sure they still inherit from BaseSlavedStore, though it might be simpler to just ensure that happens when we construct them in synapse/app/*. I'll leave it as a SlavedTransactionStore as we do that quite a bit for the other stores, and we can change it separately.. This is a spurious change, and in general we want to have trailing commas. Is m.server_notice.* already a thing?. Why are we removing the error handling?. We should add some documentation about what these options do. Traditionally, we usually do this buy including them in the default config below (commented out where appropriate). Some documentation in the docstrings would be fab.. Usually we just have self.config. It doesn't really matter, but makes it easier when writing unit tests where you can then cheekily change the config and have it updated everywhere where necessary.. Should this be here? Lets include the checks now if we should have them. This feels like a bit of an awful thing to do, but lets keep it like this for now, but write is as:\npython\ntry:\n    yield self.auth.check_auth_blocking()\n    is_auth_blocking = False\nexcept AuthError as e:\n    is_auth_blocking = True\nRather than having nested exception, which can get weird quickly. Aren't we renaming this to ResourceLimitError or whatever it was?. We should always use iteritems(events), to ensure that we don't needlessly copy in py2. Err, have we actually finally decided that clients will render anything with body rather than just those with type m.room.message?. Woops, fixed. There's from six import iteritems, which does it. We try and avoid storing the hs object itself, to avoid the temptation to do hs.get_foo() in the code. Can this be self.config = hs.config please?. Might be worth mentioning in docs/workers.rst that you can point presence endpoints at frontend worker when presence is disabled?. Ah, this used to be a required change but no longer. Will change it back for simplicity of PR. It gets reraised so should get logged as appropriate by the usual HTTP exception loggers, but will add to differentiate between the cases of \"no auth given\" vs \"there was an error\". NoAuthenticationError simply means that the request is missing auth, so I've explicitly said that rather than logging the actual error. I'm completely failing to find any documentation about what is and isn't safe TBH. We should probably pin psycopg2 (and libpq, whose version psycopg2 helpfully exports). Debian jessie have suitably up to date packages, so it should be safe.. Creation events will happily reach that point. We could, but this is how we do it for other handlers. I'm not sure I really think it'll be clearer moving it into the actual app. Certainly something we can revisit if/when we try and clean up the worker split out. We don't, but we do call compute_event_context, and that gets nooped in resolve_state_groups_for_events since it has not prev events. We're going to need to invalidated the cache when the users get promoted from trial users. Hang on, trial users aren't added to the mau table and so they'll never be picked up by the select here?. I kept them separate because this is doing a full integration type test, while the other ones do more unit test style stuff with mocking. I don't think we want to remove the equality check here.. Is this necessary given we seem to only be doing // in here?. The changelog is broadly aimed at server admins, so could this be something more like \"Fix bug in sending presence over federation\" or something?. Please doc threepid arg. Won't this throw if the session doesn't have the email login step?. Missing a yield. yield. Why is this in store rather than e.g. in the config object?. Personally I'd assert not (user_id and threepid) or something so that if someone does do it it gets picked up in tests.. What's the reason for converting all these functions to defer.inlineCallbacks?. So, fun fact: this now gets set on the slave replication stores as well as the store on master. This is a bit awkward because we do set self._cache_id_gen on the replication stores in synapse/replication/slave/storage/_base.py to something different.\nIn short, everything is awful and is scary and I'm scared about moving this here in case the replication stuff fail to properly overwrite this definition. I'm going to make you sad by saying that the only debian packages are 15.1.0. I think at this point its going to be cleaner if we get rid of *args and **kwargs and be explicit in what we expect, which I think is just headers and data.. Is this going to do the right thing? We explicitly moved to using a producer to ensure things didn't time out.. Can we just get rid of bodyProducer arg entirely and replace it with data?. Turns out git isn't psychic and needs to be explicitly told to switch branch.. So a comment to explain how this works is going to be necessary. I think this works by:\n\nThe git checkout above will fail if there is no merge branch, and so we'll bail out due to set -e\nIf it does exist, git branch --merged will list all branches that are merged into it. The grep will succeed if pr/.../head branch is merged into it, and fail if it isn't (and therefore bail out).\nIf pr/../head is merged in then that means pr/../merge must be an up to date merge commit, and so we're done.. If we can't find a CIRCLE_PR_NUMBER then we should probably bail out, rather than pretending we succeeded doing a merge build. handlers/. I assume changing from using 'utf8' to 'ascii' is fine?. Nit picky, but this is quite unreadable to me at the end, can you stick the trailing )) on a newline?. don't exceptions have a message?. Sure, so long as we do do it. Can we just do str(e) tbh, otherwise it feels a bit too awful. Does it need to be atomic? We're single threaded (database threads won't access anything here) so nothing should happen between the two calls? . I think by \"atomic\" it means \"doesn't yield\", tbh. Start with a capital please :). Can paths and hosts not be unicode?. I'm not sure we've specified that room_id must be ascii?. FYI you can write:\n\npython\nsql = \"\"\"\n    SELECT count(*), m.membership FROM room_memberships as m \n    INNER JOIN current_state_events as c\n    ON m.event_id = c.event_id\n    AND m.room_id = c.room_id\n    AND m.user_id = c.state_key\n    WHERE c.type = 'm.room.member' AND c.room_id = ?\n    GROUP BY m.membership\n\"\"\"\nrather than faffing around with quotes. It has the added benefit that it makes it much easier to c+p :). It'd be nicer to write\npython\nfor count, membership in txn:\n    ...\nso that its easier to verify that things match the intent. Please name these something like _get_room_summary_txn or whatever, it makes stack traces a lot easier to understand. Won't this explode if summary is None?. It will (or very much should) invalidate the caches on the workers, however it will take some non-zero amount of time to do so. As such usually you'll need to ensure that your sytests do the checks in a loop using try_repeat_until_success. Hmm, I'm not sure how worth while iterable is, since its the len of the return value is going to be at most four.. It feels a bit odd to pull out a random selection of memberships which will potentially change each time this is called?\nAlso, shouldn't this only include joined users? I guess we may want invited users too, but we probably don't want left or banned users?. I suppose it'll definitely not be None due the shape of the queries, but then we should probably not use get to make the intent a bit clearer.. I'm really not following what this is doing. Can we choose variable names and/or unpack tuples to help clarity please?\nUnpacking this a bit seems to give:\npython\nfor user_id, event_id in details.get(membership, empty_ms).members:\n     member_ids[user_id] = event_id\nI think?. Is there a reason that members is a list of tuples rather than a dict?. Why does this need an if statement? It feels clearer to have something like:\npython\nsummary['m.heroes'] = sorted([\n    user_id for user_id in (joined_user_ids + invited_user_ids + gone_user_ids)\n    if user_id != me\n])\n(Which is a bit inefficient, sure, but can also be done in terms of iterators and generators). Please don't use .keys() or .items() etc, they are expensive in py2 due to them copying the data into a list. Either use six.iteritems etc to get iterators, or in this case simply drop .keys() as iterating over a dict iterates over the keys anyway.. Also, can this have a comment to explain why we're not always including the summary and when we do include a summary? The logic is non-trivial and its hard to know whether its right or not without a guiding comment.. Traditionally this would probably be called --no-admin, to make it clearer that its the opposite of --admin.. Rather than doing this manually, we should probably use the inbuilt argparse conflict functionality: https://docs.python.org/2/howto/argparse.html#conflicting-options. I honestly can't remember how multiple if statements like this work, can we write split it out into actual if statements please?\n(You can also write this as args.admin or args.regular_user or None, but that's a bit special too). > (i'm assuming that tuples take up less room as they don't include key strings)\nWell this tuple is including the same number of strings, right? It might save a bit by not including the hash map I guess. If we're worried about the size of the cache then what we can do is have get_room_summary return an object with a custom __len__ implementation that returns the sum of the sizes of MemberSummary.members. This would ensure that the total number of tuples stored by the cache is less than the given cache size (as opposed to the number of room summaries being less than the given cache size). Fair enough. \n\nCan we rely on the ORDER returned by postgres for a given membership type being consistent over time however?\n\nNope, might be worth also sorting by user_id or event_id or something equally arbitrary.. Then why do we have an if guard?. oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooh. Comment maybe for us slow people at the back? 0:-). You also need to check that the returned event is not None. What do you mean by non-deleted? You can't delete state.. Capital please (and start with \"Add...\" while your there). Can we call this something other than reserved, since I'd expect it to match the number of threepids in the DB.. Que?. I don't think this null check can be removed as the  creator column was added at a later date, so there is not guarantee it'll exist.. Can we call this Queuing PDU... or something? \"Ignoring\" confused me a bit.. Please don't, as this can get really quite spammy iirc. Can you add quick comment why this is necessary?. Isn't the important thing in this PR that we fix the logging, rather than adding a test?. Well we raise and handle it later. There are a bunch of failure modes that are non-error case, but instead get retried: https://github.com/matrix-org/synapse/blob/master/synapse/storage/_base.py#L249-L280\nI'd really expect the exception to bubble up all the way to the client IP code, so I wonder if we're just swallowing it there?. get_all_entities_changed can return None if last_id is sufficiently old?. Mainly because the stream change caches are bound in size and will drop old rooms. Agreed its a bit wasteful to have both, but I'm not sure the best way of amalgamating them without causing us to send down all typing notifications for old clients.. Can this be \"dummy-device\" or None, as empty string can cause all sorts of silly issues, e.g. when looking at the db. Ah, for some reason I thought that this was consistent with what we did elsewhere, but it isn't.. > this is the same as return self._cache.pop(key, default) now.\nIt's not, actually, as self._cache.pop won't raise if default is None. Thinking about it we can probably just do return self._cache.pop(key, **kwargs). Argh, I've completely messed this up. I could have just done:\npython\ndef pop(self, key, *args, **kwargs):\n    \"Identical functionality to `dict.pop(..)`\"\n    return self._cache.pop(key, *args, **kwargs)\nBut that feels quite opaque to me?. Oooh, good point. We're copying the dict and lists from inside a lock?. Err, good point.. Glad I'm not the only one :grinning: . Woops. That's me failing to remove my debugging...... ... yes.\nThis PR is going terribly.. Hilariously it appears we never hit the non-cached code path, presumably because we insert into the cache on write.... This appears unused?. Its 2018. Can you also add Args section, giving types (and description if not obvious). Please just use raise rather than raise e as you end up losing a bunch of stack traces. Does this not want to be in the lock?. You can use self to access staticmethods fwiw. I think it would be clearer to return True rather than pass, as otherwise you need to scan down to figure out what it has to do.. This function seems a bit pointless, can we not just use self.store.get_e2e_room_keys_version_info directly in all the places?. Can we please split this servlet into two: 1) which doesn't accept a version and only works for PUT and 2) which requires a version and only works with GET/DELETE.\nThis has the advantages of:\n\nIts easier to grasp the API shapes without having to read the code\nDon't have to re-implement all the validations/error handling\n\nIt does somewhat look like we've forgotten to check that we're actually given a version in GET/DELETE handlers for example. Can you make a new error rather than rewriting the existing one please? Otherwise we may end up with bizarre hybrid exceptions :). TBH, I'm not even sure we want to bother rewriting anything here. If we do, we should probably do the same for the DELETE handler.\nIn fact, for consistency sake we should probably make the exceptions returned by the handler on unknown version be consistent, rather than the exception being specific to each REST endpoint.. We use just import json nowadays. I don't think its worth having this comment :). \n. (And the same for the other functions.). Oh, yes. I just assumed we already were (since we use functions from there elsewhere I think).. (I'd rather these big blocks of text were defined at the top of the file as constants, rather than stomping all over the indentation). Its not anchored at all, is it?. I suppose it'd be better to correctly anchor the regex both sides. Actually, its entirely unnecessary to have the default, as it'll be pulled in by the default_config. Will change.. Oh, true. I'll clean up the existing exceptions. Can we move this out of the process function please, as its not clear to me that self._is_processing will get set before we yield. Hmm, yes. We could move the if self._is_processing check inside the function, which would be basically the same as before except we're wrapping the entirety of the function in a run_as_background_process.. Isn't this a function?. (Note this has been moved up from just below so we can work out members_to_fetch in a single place). It's probably not picked up in the tests as its used as an efficiency hack, so as long as the returned filter is a superset then it will work. It'd just not be as efficient caching wise.\nIt's probably worth adding specific tests for StateFilter?. I'm pretty sure we load the config on top of the default_config?. (I added a check on init that removes wildcards from types when include_others=True). I don't suppose we could somehow be more helpful here? Like add a matrix.to link? IDK. A comment here would be good, the 50 feels a bit magical. Can we not just iterate over old_room_state_ids?. How on earth can we end up with bytes here?. A quick docstring about what this does would be nice (and you can then fold in __init__ docstring, rather than having a bunch of blank lines there). You could also pull this out of tombstone_context fwiw. Can we hook in somewhere to count the number of actual attempts by the email pushers? I feel like this is going to easily break if we add other things that attempt to make tcp requests during handling of events.. But we've asked for a filtered set, no? It doesn't really matter tbh. I'd probably avoid using else clause for statements that we know aren't going to raise an exception. I can never really remember if the else means \"if there was no exception\" or \"if there was an exception that we didn't catch\" or whatever.. I'd be reasonably happy special casing upgrading of rooms to always allow moving aliases on room upgrade tbh. (Though not suggesting this should be done in this PR). I think its obvious enough, especially since we use it in a fair few places and not just in purge history. Oh, my bad.. Why do we use -j 2 here rather than -j 4 like we do for the postgres tests?. Can we move the import up to the top please?\nAlso, I'd be tempted to instead add sendmail to DEPENDENCIES and define:\npython\ndef build_sendmail(self):\n    return sendmail\nWhich bring it inline with other dependencies. To override in the tests its enough to explicitly define sendmail on the HS object, which can be done by passing sendmail kwarg to setup_test_homeserver. We generally try and pull out dependencies in the constructor, so that things fail at startup if there is a problem with initialising in dependencies\n(I thought I made this comment, but GH forgot it :/). (Possibly a comment to that effect would be useful). Is there a reason to then not have them as strings in the database layer?. Would it be possible to move this out into a separate _clear() or _reset() function? Just so that its clearer that the typing handler can be reset. So many good points to counter my crankiness. Do we want to be nice and delete this directory when we tear down?. I'd prefer it if we're doing an API test case to do the checks against the API, rather than against the data store. It a) makes it feel cleaner due to working at one level, and b) means that if we change the storage APIs we don't randomly break tests that aren't actually testing the storage APIs.\nOTOH, I don't know much about the consent API, so if there isn't a nice way of doing this then that's fine.. Can haz docs for shorthand pls?. Can haz docs for shorthand pls?. Cunning!!!. Do we even need to check the datastore at this point then?. Is this just a style change?. Aaaaaaaaah, I'm blind. Cool :+1: . (Isn't that https://github.com/matrix-org/synapse/pull/4180?). I don't follow I'm afraid. That if statement doesn't block calls to _render_template?. I wonder if we should print/log that we're replacing inlineCallbacks? Just so that if we accidentally end up importing the tests package there will be some indication that this has happened. Do you mean msg = e.args[0]?. Does python3 recommend using the venv module?. Its a standard library equivalent to virtualenv, but probably fine to stick with virtualenv for now. a) I'm surprised that we even have OPTIONS, since GET requests aren't preflighted(?), and b) I'm assuming that send_cors=True are actually adding the CORS headers?. Wut. But ok fine.. There is a specific NotFoundError that may be more applicable. Why this change?. It's not safe to ignore database errors as the transaction will no longer be valid. This should probably be raised up into runInteraction or the like instead.. This feels fragile. Why not do server_version >= 90500? The docs also suggest doing server_version/100 >= 905 to determine feature compatibility based on major versions.. This is probably not safe, since I would be surprised if psycopg2 guaranteed that the error messages are stable. Please just use the error codes for this, as per: https://github.com/matrix-org/synapse/blob/b60749a1ec22269216a503ccd35aaf4454dc507d/synapse/storage/engines/postgres.py#L57-L63. Ermh, using xmax sounds like using an implementation detail, which sounds a bit scary? If this is really the only way then I think it deserves a big scary comment.. Where is it documented? All I could find was the basic system column documentation for it, which doesn't specify anything about upserts, and it doesn't appear on the insert documentation :(. Yup, transactions will be rolled back on error, but they're then effectively closed. Note that the link also says that you need to abort and retry the transaction. Ah, fair. I'd be tempted to pull this up as a top level template string and then use the multiline quotes, but that's a matter of taste. Fair. I've added some more words, hopefully they should be a bit more useful. If not I'll just move it into matrixfederationclient. This isn't really an end user feature, so I'd probably put it in .msic tbh. May as well use the _simple_{insert,delete}_txn wrappers here?. Some quick words about what the fuck this query is doing might be something that other people might appreciate. Something like:\n\nThis works by looking at all entries in the given time span, and then for each (user_id, access_token, ip) tuple in that range checking for any duplicates in the rest of the table (via a join). It then only returns entries which have duplicates, and the max last_seen across all duplicates, which can the be used to delete all other duplicates.\nIt is efficient due to the existence of  (user_id, access_token, ip) and (last_seen) indices.. cough. Spurious railing ;. Missing update name param. Dammit, I managed to miss this one.. Oh, my bad for not double checking. It's already included in the response and I assumed it was part of the MSC, but it looks like it wasn't included in the final MSC.. Why the rename of the file? It seems odd when we haven't renamed the class. . This is going to blow up if called before on_new_connection. This is probably unlikely, but it may be worth defaulting it to something like 0. Or have a _can_do_native_upsert parameter set to False by default instead, and have on_new_connection update it when its called. Why not just do can_native_upsert = False?. What does this do?. What does this do?. We don't seem to have added any of these sorts of files?. Presumably the idea here is that we add to this whenever we add an index that we may want to upsert against? This feels fairly fragile tbh, since it'll probably work in CI and then break in production. I wonder if we can hook into the register_background_index_update to add to this list when adding a unique index?\n\nIts possibly fine for now. I'm still concerned we're relying on an internal detail of how updates and vacuuming of rows work here. I ran this past @richvdh, and broadly the conclusion is that this should be an edge case (since we'll aim to add unique indices from the start to new tables), so we can leave it for now. (https://matrix.to/#/!yZHTGeDKZUeKaqeTeU:matrix.org/$1548086288327WrmxW:jki.re?via=matrix.org&via=half-shot.uk&via=sw1v.org is the conversation). TBH, I wonder if we can just get rid of the places where we care about inserted vs updated?. This is an incredibly nice change log :+1: , but alas it needs to be just the one line :cry: \nHowever the changelog entry will point to this PR, so people will be able to find this info from the PR description :tada:. I wouldn't bother adding these if they get added by federation. You might want to add a separate (commented out) entry to the resources section (like we do below for the manhole listener) to document that openid is a thing. Maybe something like:\n```yaml\n# If federation is disabled synapse can still expose the open ID endpoint\n# to allow integrations to authenticate users\n- names: [openid]\ncompress\n`` . Can you document theservlet_groupsparam please. Can you document theservlet_groupsparam please. Why is this necessary?. I'm not sure what this is testing? Can't we just test that the below attempt at requesting fails appropriately?. Ooooooh, fair :+1: . Oh, I hadn't realised we had done this somewhere else. Will poke @hawkowl to see if there's a better way of doing it, but if not I can live with the current stuff. This is just moving therow[0]from the if statement below into the function, as it feels cleaner. Sowwy, but can you add a docstring for these args please? Probably copying and pasting from the non-txn version.. Can you also document the fact that we returnNone` if we use a native upsert?. Can instead we do:\n```python\nTODO: Remove this code after we've bumped the minimum version of postgres to\nalways support upserts, so we can get rid of new_entry usage\nif new_entry is True:\n    ....\nelif new_entry is False:\n    ....\nelse:\n    raise RuntimeError(\"upsert returned None when 'can_native_upsert' is False\")\n```\nJust as a paranoia check :). https://github.com/matrix-org/synapse/pull/4447. https://github.com/matrix-org/synapse/pull/4448. I don't believe so, but may as well add a check anyway.. I'm assuming header names are case insensitive here?. I'd have thought this would now have one too many escapes?. Right, but single slashes is what you want in the yaml if its going to be fed to regex?. OH sorry, I'm with you. Good point! Will fix that in another PR. The reason for not also passing in the hashes is that we're gonna need to get rid of the concept of \"event_id + hashes\" in the brave new world. A docstring would be good here. Specifically how this interacts with SRV records returning multiple answers; this seems to be a possible route, rather than all possible routes.. Can you comment what's going on in this section please? Are we saying that : is banned in well known response unless its for a port? And if well known lookup fails for any reason we fall back to trying to connect directly?\nSeparately, should there be a log line here? As I think at this point its a configuration error (rather than someone not setting a well-known), and it'd be nice to log for debuggability.. cough docstring cough :innocent: . This should probably be debug. Oh, or is this trying to check if its an IPv6 literal?. The idea here is that if a server returns a 200 for a .well-known/matrix/server then we die if its not valid?. Bah, somehow thought it disabled allowing being hashed at all.. EventBuilder uses them, but it's probably better to just pass those in directly. Fair, though I'd be surprised if we actually let people send a create event if they're not in the room.. Turns out these were duplicated in validate_builder already :man_facepalming: . In practice, they're exactly the same, compute_event_context just resolves the state across the prev_events to get prev_state_ids.  From a protocol perspective, auth_events should be based on the state at the event.\nWe could make compute_event_context work with an EventBuilder, but I was slightly shying away from doing so in the interests of not changing too much. We could probably do so though. Is it worth logging when this is not the case? If I'm reading the PR correctly we expect everything in hs._listening_services to be TLS connections, right?. I don't think it matters, but I'm a bit surprised this is still in here.. It'd be nicer if you could move this out of the defer.returnValue, i.e. something like:\n```python\nresponse = {\n    ...\n}\ndefer.returnValue((200, response))\n```\nit just makes it a lot easier to see what's going on. You should pull this in from synapse.api.constants. Don't we also want a min cache period here here?. I think this needs some white space stripping? It'd be nice to have some tests that have multiple values.\nSome random examples from the internet:\n\nCache-Control: private; max-age=0 (hacker news, looks bogus with the semi colon?)\nCache-Control: max-age=0, private, must-revalidate (github.com)\ncache-control: private, max-age=0 (google.com). suggestion\n                            # Senders don't match, so the event isn't actually redacted. It currently gets done in #4515, I'm not sure why I didn't write it out fully here. This comment is now updated due to #4515 . Oh, I hallucinated you adding a MIN constant. I don't have strong feelings either way, though I wouldn't be surprised if people used max_age=0, but we can revisit it later if it proves a problem. It feels odd that the default will cause warnings?. fair enough, we can always clean it up later if necessary. The spec PR has version field in the body. I would probably do so, it may not be necessary but the fact that we do it elsewhere and we do two separate database queries makes me inclined to add it for consistency.\n\n(FTR, all the function does is make sure only one set of code is being executed for a user at any given point). Isn't this option getting deprecated?. Oh, I see you're dealing with that in the other pr. Yeah, probably spurious. suggestion\n        list[twisted.internet.tcp.Port]: listening for TCP connections. It's a perfectly legit thing to do, while remote users wouldn't be able to join the room local users still would happily be able to.\nThough I have a suspicion we might require an alias before we actually publish the room. Hmm, ok. It's somewhat annoying to have to comment about the config in the default config and have it in the read_config. FWIW what's in the default_config is the default if you omit the key. Hmm, true, though it is the same error message we use for other missing dependencies.\nI do think we need to say something, even I wouldn't necessarily know the right way is to do pip install matrix-synapse[sentry] or whatever.. I'm not a fan of the magic \"its enabled if $field is set\", as its quite unintuitive (at least to me), especially if you misspell \"dsn\" or whatever. We could easily enough add a \"enabled\" field?. I'd expect any errors to happen before then to be fatal configuration errors, which I don't think we'd want to bother reporting to sentry, so I don't think it really matters too much where in the setup code we initialise it.. I put it in RegistrationHandler. I was going to put it in LoginHandler, then AuthHandler and then DeviceHandler, but they all had various problems that made me cry, so I gave up and put it in RegistrationHandler.. I think I somewhat agree, though I think that is a change to consider outside of this PR. I don't think keys = list(itertools.chain([room_id], members_chained)) is any clearer or faster tbh. I've added some words. I haven't specified exactly what _CURRENT_STATE_CACHE_NAME means, as I feel like that's just going to quickly get out of date with the code and is probably unnecessary.. Ok, done.. I'm a bit cautious about catching all the exceptions here in case it masks actual programming exceptions, can we not catch HttpResponseException  etc?\nOTOH, it was already logging at warning, so this isn't the end of the world. Oh great. It also doesn't look like I added RequestSendFailed stuff to the normal http client either.. Isn't this important?. Fair. It's logging several times a millisecond with a reasonably a non-trivial dict, which feels a bit OTT. There are ~170K pushers, with a log length of ~600 characters, means about 102MB of logs\nI could make it so it logs in batches the progress?. Woops, I missed a code path where it wasn't handled.. Err, we know the type since we're only catching the one PusherConfigException exception?. Aha, yes. Assert is actually probably what we want here, yes. This needs more comments, obviously. The keys of events_to_state are the new backwards extremities, as those are the events that we fetched state for. Actually, thinking about this a bit more, I think we can simplify this a lot by having generate_room_entry returning the m.federate param in the returned result and doing the filter here (or in _matches_room_entry). That way we don't need to change the cache below. Can we rename the function too? Like maybe to can_do_action please? And msg_rate_hz to just rate_hz.. suggestion\n        \"\"\"Can the entity (e.g. user or IP address) perform the action?. You want i == 5, is is a bit special and while it works in this case its good not to get into the habit of using is.. Thinking about this, I think we should probably have this outside of the if, as then the limiting will happen on both master and worker, which is nice because:\n\nDoing the update on the worker means that the initial check in on_POST works (it won't if the update only happens on master)\nDoing the update on master means that if we do end up having multiple workers performing registration, the ratelimiting is correctly applied across all of them.. is tests for \"identity\" i.e. if the objects are literally the same object, whereas == tests for \"equality\". nyargh. This should be kept at num_args=1 if we're not adding a parameter.\n\nIn fact, why is there a change in the function def here (other than docstring, yay!) at all?. Err, yes. Point.. Hang on, can we keep this defaulted to None? (And SYNAPSE_POSTGRES_USER too?) That way it will just use the same default connection method as normal psql, rather than having different defaults.\n(For me, if the postgres user and host are both None then the connection just works, whereas with these defaults it doesn't). What does this return?. This seemed to take over 1 minute, so I'd be tempted to move after the wait. Don't we need to set batch_updates = []?. This is a little nit picky, but I think this would read better if written like:\npython\nif token is None:\n    batch_updates.append(update)\nelif current_token < token:\n    batch_updates = []\nelse:\n    batch_updates.append(update)\n    for update in batch_updates:\n        self.send_command(RdataCommand(stream_name, token, update))\n    batch_updates = []\n(with comments). You're absolutely right, I've now made it only check history visibility. I haven't factored it out as it seems like a relatively minor change to add it as a parameter to the function. OTOH I can get on board with factoring stuff out if you think its getting a bit too unwieldy. fixme. I don't think the finally block gets called in that case either?. Given there are only two buckets, I'd be sorely tempted to just have them as two attributes. It also saves from having to figure out when to create/delete a bucket or not.. I'd be tempted to set slots=True. I'd be tempted to set slots=True. I'd be tempted to give PerDestinationQueue the destination so that we don't have to keep creating new callbacks. Can we pull this constant up to the top too? It feels like something we may want to fiddle with. Also, do we want this to be smeared out a bit to further reduce any stampeding?. Given all the management of the task happens in PerDestinationQueue it feels odd for it to be added to the EduTransmissionBucket class.. I'm a bit wary of bouncing things via the reactor given this is a hot path tbh. It's also a bit of a footgun if we accidentally yield between calling get_or_create_edu_bucket and inserting things into the bucket. . It should be possible, I've updated the comment with roughly what's needed.. Since _register_with_store function is being called from outside the file, can we rename it to register_with_store please?. I would be tempted to have a second test case where we didn't try and register as guests . FTR we don't usually have indentation here.. This feels a bit fragile tbh. Can we not move this up above the validate_login? Or always do it after?. I haven't tested it yet but I'm fairly sure this isn't going to optimise correctly. Can we revert to the previous method of using LEFT JOIN which did work correctly?. Could  you doc some of this a little please.. Do we actually need this if we're starting from scratch? If the previous user dir PR forced it to start from scratch I'd vote to do that again rather than this. Mainly because I'm slightly scared at pulling out all users we've ever seen in public rooms into memory all at once.. (You don't need to construct a list here if you're gonna make a set?). Can you doc that this is basically just a deduplicated users_in_public_rooms. Can you name this after the user directory please? As we already have a function that answers that question using different means (and this function may not be up to date). So, the problem here is that while publicly_visible_users returns only one row, users_who_share_private_rooms may now return multiple rows. Since this is a join that will lead to duplicates. Either, we need to do the same thing that we've done for users_in_public_rooms and have a separate table such that the join doesn't return multiple rows, OR we need to rearrange the query to correctly handle multiple rows.\nI think we can use EXISTS to do that, which appears to give a sane ish query plan, i.e. something like:\nsql\nSELECT d.user_id AS user_id, display_name, avatar_url\nFROM user_directory_search AS t\nINNER JOIN user_directory AS d USING (user_id)\nWHERE\n    vector @@ to_tsquery('english', ?)\n    AND (\n        EXISTS (select 1 from users_in_public_rooms WHERE user_id = t.user_id)\n        OR EXISTS (\n            SELECT 1 FROM users_who_share_private_rooms\n            WHERE user_id = ? AND other_user_id = t.user_id\n        ) \n    )\nORDER BY ...\nLIMIT 5;. Using that form also means we don't need to have a separate publicly_visible_users table. We don't seem to handle the first user in any special way?. Ooh, yes!. Shouldn't this be part of the original changelog entry? As we haven't released this yet.. _do_intial_spam doesn't look like its called from anywhere now?. If we're only doing this for logging below, there's probably not much reason to store it in progress at all. Can we use self.get_users_in_room please, as that uses the current_state_events table, rather than using the state handler to recalculate it.. Instead of having stages I'd probably have them has three separate background updates, i.e. \"fill out temp table\", \"populate user dir\" and \"delete temp table\". . Nyargh, I swear it didn't work without these changes so I added them to try and get them into line but I've removed them and now it works and I'm very sad and confused.. The same could be said for a lot of tests tbh, I'd rather we just consistently did coverage stats than have to figure out which tests do and which don't.. I'm a bit nervous about not limiting the number of receipts going in here tbh. Can we limit it to less than 100 at least?. My concern is that we end up sending 100s of read receipts in a single transaction, causing the remote to fall over. It feels a bit weird to bother limiting EDUs if we end up circumventing that for read receipts.. ",
    "Kegsay": "Merging pull request so Mark can move /webclient so it is recognised by Python.\n. Merging pull request so Mark can move /webclient so it is recognised by Python.\n. Looks good to me. Is there any reason why we are not allowing the limit to be configurable though? pagin_config is always going to be None. \n. Looks good to me. Is there any reason why we are not allowing the limit to be configurable though? pagin_config is always going to be None. \n. Looks good to me.\n. Looks good to me.\n. > [M-kegan] Mjark: looks good, though any reason why you dropped the \"rest\" bit? If we decide to do websockets in synapse, it might be nice to have it namespaced.\n. LGTM\n. LGTM\n. LGTM.\n. LGTM\n. LGTM\n. LGTM, we may want to rename Client ID to something more descriptive, given the amount of IDs flying around.\nEDIT: LGTM with latest commit.\n. I've added v14.sql - I assume that's the right thing to do. There's no backwards-incompatibility here; I'm just adding tables.\n. I've added v14.sql - I assume that's the right thing to do. There's no backwards-incompatibility here; I'm just adding tables.\n. Finished work on this. Final thoughts?\n. Finished work on this. Final thoughts?\n. This isn't actually complete yet; pending some C-S extensions to allow an AS to create a room. Currently, their access_token isn't enough. This could have interesting implications because the AS would be the room creator.\n. This isn't actually complete yet; pending some C-S extensions to allow an AS to create a room. Currently, their access_token isn't enough. This could have interesting implications because the AS would be the room creator.\n. > why is it a problem if the AS is the creator?\nSynapse doesn't currently handle the idea that servers can be room creators because the room will have 0 members in it. As for the general idea, we do want to support the idea of servers creating rooms, but there's a lot of extra paperwork (read: auth, federation) to do to get it to work right. Spoke with Erik who confirmed that this is the case.\nAs a quick fix, I'm going to have to provision a user ID for each registered AS, which will be used when the AS's access_token is used. This would mean that the application service will be a joined member in the room, for rooms it has to lazily create. This is unfortunate, but even if the \"proper fix\" was done, there would be an HS entity in the room (because after all, the person joining the lazily created room may be on another HS, so you need an m.room.member event to tell their HS to send events to the HS with the AS).\n. > why is it a problem if the AS is the creator?\nSynapse doesn't currently handle the idea that servers can be room creators because the room will have 0 members in it. As for the general idea, we do want to support the idea of servers creating rooms, but there's a lot of extra paperwork (read: auth, federation) to do to get it to work right. Spoke with Erik who confirmed that this is the case.\nAs a quick fix, I'm going to have to provision a user ID for each registered AS, which will be used when the AS's access_token is used. This would mean that the application service will be a joined member in the room, for rooms it has to lazily create. This is unfortunate, but even if the \"proper fix\" was done, there would be an HS entity in the room (because after all, the person joining the lazily created room may be on another HS, so you need an m.room.member event to tell their HS to send events to the HS with the AS).\n. Right, now everything actually works. Any final thoughts before I merge?\n. Right, now everything actually works. Any final thoughts before I merge?\n. There's also a bug which Dave has found where registering for users does not return all events for rooms that user is a part of.\n. There's also a bug which Dave has found where registering for users does not return all events for rooms that user is a part of.\n. Done.\n. LGTM\n. Made the advised changes.\n. Do we want to implement a shim to support the older database format? I don't think there are currently many ASes out in the wild, so I would prefer to hard-change the format now, rather than supporting multiple representations in the system.\n. As a python script? Trivial.\n. Okay\n. LGTM: This is a great improvement on the old system.\n. LGTM\n. LGTM\n. LGTM\n. Now uses a push-based architecture, with try: except blocks, and won't block on individual ASes (each in their own queue).\n. Did requests; all seem sensible.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM other than in-line comments. I'm a little hesitant to use private_chat to mean \"invite only and people can only see history after they were invited\". What would we call rooms which you had to knock on? Or ones with a password? Are they not private? We may want to be more explicit here to avoid us having awkward situations in the future. Maybe private_invite_chat, private_knock_chat and private_password_chat? Not sure.\n. LGTM\n. LGTM\n. LGTM\n. Shakey LGTM - I don't know if you've got all display_name occurrences. Looks plausible though.\n. Shakey LGTM - I don't know if you've got all display_name occurrences. Looks plausible though.\n. LGTM, though it would be polite to say the conditions where you expect check_user_was_in_room to fail (for guest accounts), because you're relying on that for control flow.\n. Why does this depend on #363? All I see is\nhttps://github.com/matrix-org/synapse/commit/f8e2fd24c7131ae37841d680c95a1511a4bded5b\nwhich LGTM\n. LGTM\n. LGTM - though I'm shocked that we haven't seen this up until now.\n. LGTM - thank you :star: \n. LGTM\n. LGTM other than comments\n. Other than these points, LGTM though I don't have the full context to be confident on these changes.\n. Okay, LGTM\n. LGTM\n. LGTM\n. Each user that an AS creates are currently rate limited. There is no AS-specific rate limit. This PR removes the per-user rate limit.\n. Each user that an AS creates are currently rate limited. There is no AS-specific rate limit. This PR removes the per-user rate limit.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. This was fixed in https://github.com/matrix-org/synapse/pull/1624 because we no longer clobber based on the path without the txn ID. It uses the \"time-based\" component for reaping, which is current 30 minutes.. fetch_or_execute doesn't appear to pass the request object which is used to select the key in the cache. Was this intentional?\n. Also, I don't mind moving it to util, but that feels like a downgrade in specificity, since only the REST Servlets make use of this class, and the aforementioned reliance on a request object.\n. I'm guessing you're proposing I make it more generic (so txn_id is just the key in the cache)? Do we plan on using the generic form elsewhere?\n. > At the very least it should be moved up, but generally I quite helpers like this to live a bit separately, rather than being dumped alongside the rest servlets themselves\nsynapse/rest/client/transactions.py perhaps?\n\nWell, it is currently implemented in a generic fashion. I'm happy for the arg name to be txn_id or key or whatever\n\nDo you want the implementation to be generic or are you happy with it in its current form (accepting request objects which are then processed for their access_token for use as a key)?\n. SGTM\n. Hmmm. The old implementation was using transaction IDs as a way to prune the cache, but it means that you couldn't have multiple in-flight requests at the same time and get idempotency, which feels bad. I've removed that code in my fix, but now the cache will grow unbounded.\nHow do you propose I clear the cache? Periodic interval? 10 minutes? The generic form now just takes a key, so I can't be more intelligent like base it off the given user (access_token, which is now concatenated in the key).\n. > (Also, a python test case for the HttpTransactionCache class would be awesome)\nDone.\nFor cleaning entries, I'm just periodically checking every 30 minutes, and timestamping when functions were invoked (which means the actual time in the cache is between 30~60 minutes). This feels simpler and less wasteful compared to registering timeouts for each entry in the cache, which has comparatively more function call overhead.\n. @erikjohnston PTAL\nAlso, are the Dendron tests just flakey or should I be worried? Looking at the previous builds on http://matrix.org/jenkins/job/SynapseSytestDendronCommit/ makes me think flakey, but I don't know.\n. Though if you want to nitpick, the RFC does say:\n\nNote:  No \"charset\" parameter is defined for this registration.\n      Adding one really has no effect on compliant recipients.\n\nIn this case adding one does have an effect on the recipient :D. Though if you want to nitpick, the RFC does say:\n\nNote:  No \"charset\" parameter is defined for this registration.\n      Adding one really has no effect on compliant recipients.\n\nIn this case adding one does have an effect on the recipient :D. Looks like sydent not synapse?. Looks like sydent not synapse?. I have fixed this: https://github.com/matrix-org/synapse/pull/1913. @erikjohnston PTAL. Pending comment, but then LGTM. Good call, didn't see that when adding this. Will factor out the duplicate logic.\n. Absolutely. I already had # FIXME Would be nice to DI this rather than monkey patch:( in the tests for this handler, but I can't see a \"nice\" way of doing this which isn't just wodging it in handlers/__init__.py. Thinking about it some more, I guess I could just do that, since we don't rely on a single arg Handler construction anywhere.\n. Fixed in https://github.com/matrix-org/synapse/commit/e9484d6a9514d5c9aea3839bcc3fb25c9cb88cb0\n. Fixed in https://github.com/matrix-org/synapse/commit/11e6b3d18b5ae95857e01884960a01b9ea4d307d\n. Because the code needs the errors as json, not strings. CodeMessageExceptions are string messages, not json. \n. The lack of a public key on this line indicates a mis-configured server. Anyone testing captchas on their server should see the error logged stating that it is missing.\n. They are not displayed to the user. I'll add in support to show an error message for miconfigured servers.\n. I tried to use _simple_select but bumped into problems because it assumed a WHERE clause. Is there a particular one I should be using?\n. Ah, I had actually used Tables precisely for consistency with other code in the same file. I'll change that.\n. Should I update the other code in get_room_events_stream which also does this then?\n. Agreed it's hacky, but it seemed the least intrusive option at the time. Any preference for state_events vs room_memberships?\n. Not sure about this one. Would the bouncing be worse than having lots of regex checks being done in python in a transaction (when it doesn't need to be)? If it's timing information we want, we can surely decorate this function appropriately.\n. No particular reason why: though I'm not sure of the performance implications of seting all the things this early on, rather than in one fell swoop.\n. Will do.\n. Any particular reason for repring here rather than %s which is more standard?\n. Naming: It would be nice for this to be clearer whether it is applied or to be applied deltas. I appreciate you mention that in the docstrings here, but the ambiguity of delta_files is needless. Something like applied_deltas or applied_delta_files?\n. Again, would be nice if this more clearly indicated it is a table of applied schema_deltas to grok it faster.\n. This implies the execution order for multiple .sql and .py in a single delta is defined alphabetically. This should probably be mentioned in a prominent place so people writing upgrade scripts can be made aware of the execution order if it is important to them.\n. Dependency injection. The alternative would be to pass in a factory which could do the equivalent, which is a needless layer of indirection at this stage.\n. > This makes it more obvious if we forget a space.\nThat's a good point; thanks!\n. This seems like it should be a 403 to me.\n. Any particular reason for the random_string_with_symbols implementation? Is random_string inadequate for this use case for some reason? If it is, it should be explained why.\n. This seems like a NOOP to me. Isn't args.disable_registration a bool to begin with? In which case this is just doing bool -> str -> bool. In what cases will args.disable_registration not be a bool?\n. Yup, for testing. I don't think putting it in the HomeServer object makes it that much clearer, given the code which runs this is:\ndef build_handlers(self):\n    return Handlers(self)\nI'd rather keep the number of hops as low as possible without adding the HomeServer implementation into the DI chain.\n. Why are we losing the membership check here?\n. Doesn't this make it impossible for servers to stop receiving events for a room after all their members in a room have left?\n. Given register_json is just a dict from JSON, users may not be setting the right types of these keys. We should be type checking here, which we can actually do in one fell swoop with checking for the existence of keys by doing isinstance(register_json.get(\"mac\"), basestring)\n. It would also be Responsible of us to set a minimum password length.\n. It would be worth applying the same restrictions done on the REST API in terms of valid characters in user localparts until we decide how best to proceed on the hell of human readable IDs.\n. Right. If the event about to be sent (event) is an m.room.member event then you want to add the domain of the affected member (state_key) to the destinations. \nUnsure what k, s are in this; I would've assumed context.current_state.items() == A list of the current state events for the room, but there are 2 values from this which are being used interchangeably it seems.\n. I dislike the idea of putting every single DI component in HomeServer like this because it exposes them as effectively global variables. No other component needs to (or should need to) use AppServiceScheduler except ApplicationServicesHandler. Therefore, I strongly think that we shouldn't be exposing it in HomeServer. We should be selectively exposing things as global, rather than making it global by default simply so you can DI it in my opinion. If you still feel like it should be done for consistency sake though, then fair enough.\n. Empirically, no, it doesn't. --generate-config omits this field entirely, and using -c homeserver.yaml without this field doesn't cause any exceptions.\n. Would really prefer CONSTANT_NAMES here :)\n. I think it's a little unclear that everyone_ops really just means the room creator and the people in the initial invite list, no one else who subsequently joins/is invited. Surely if we really mean \"everyone\" then users_default should be 100?\n. Would it be nicer to have this as a namedtuple rather than an arbitrary dict? This would ensure than any new presets we add MUST specify all fields, rather than risking people missing one off and have it crash at runtime with KeyErrors due to direct config[key] accesses.\n. Please can we kwarg this, this looks horribly error-prone.\n. Please document the expected side effect here (that it will throw if it is an invalid room ID), else this looks very magical and doesn't intuitively look like it is doing what the docstrings describe.\n. http://matrix.org/docs/spec/r0.0.0/client_server.html#redactions makes no mention of history_visibility being a preserved key in the event of a redacted m.room.history_visibility event. This will throw if the event is redacted.\n. No list comprehension for this?\npython\nroom_list = [\n    GuestRoom(room_id, Membership.JOIN) for room_id in sync_config.filter.list_rooms()\n]\n. It looks like filter.list_rooms() will return None iff there is no rooms key but there is no 0-length array check. We should probably guard against { \"rooms\": [] } as well.\n. We don't do None checks in a ton of places in this PR which call list_rooms(). Either do the null-guards or make non-existence return an empty list, else this is too error-prone IMO.\n. This is an interesting one because if I'm reading this right this means that if you give just a single bad room ID the entire /sync will fail. Clients aren't fed enough information to resolve this programatically either. I'd like to see some keys to say \"these room IDs are bad\" so I can remove them programatically; the alternative (silently dropping bad IDs) leaves a bad taste in my mouth.\n. My bad; completely didn't see that you are indeed checking. Sorry!\n. I'm not seeing why this code is being removed. It is now:\npython\n    presence_stream = self.event_sources.sources[\"presence\"]\n    presence, _ = yield presence_stream.get_new_events(\n        from_key=0,\n        user=sync_config.user,\n        room_ids=joined_room_ids,\n        is_guest=sync_config.is_guest,\n    )\nwhich is close but not quite the same. Was this fixing the TODO?\n. Please log the file path which tried to use the ID, e.g. config_file.\n. Ditto; file path please!\n. You can probably compact the lot of this and remove should_rate_limit entirely:\npy\nfor service in self.store.get_app_services():\n    if service.is_interested_in_user(user_id) and not service.is_rate_limited():\n        return\nBut I defer to Erik's view on whether this is clearer / what he would prefer.\n. Done.\n. Done.\n. Done.\n. Done.. Done.. Done.. What should I do to check if there is a code attribute? Try to cast to CodeMessageException?. Done.https://github.com/matrix-org/synapse/pull/1913/commits/808ddf0ae72ef45d887e00c07ba834d0873ceb8d. Done.https://github.com/matrix-org/synapse/pull/1913/commits/feb15dc99f02e6cb0a84a53e397529c51743f114. Can you please comment that you're pre-compiling the regexps.. We've lost this type check entirely - is this check expensive enough to warrant that (eg in JS it actually kinda is, introspection of types is painful, python idk).. We've lost the return_obj arg. Was it ever used?. You're clobbering directly over a regex string with a regex object, but fail to say why you're doing this - which is to pre-compile it so you don't need to incur repeated compilation costs. A one-liner inline comment as you have there looks good to me.. > A comment which is literally describing what a code line is doing\nIt isn't. This is a comment which literally describes what a code line is doing:\n```py\nreplace regex string with regex object\nregex_obj[\"regex\"] = re.compile(regex)\n```\nWhat I want to know is why you're doing this. Why don't we keep them as strings and then do it on the fly? Because that's needlessly slow compared to pre-compiling the regex. I don't care about the fact you're clobbering, I care that you fail to describe your intent.. Okay.. Okay.. ",
    "dbkr": "You're on Mac OS X? What version?\n. You're on Mac OS X? What version?\n. Okay. It works for me but I don't have a Macports / Homebrew Openssl installed (it seems to work fine against the bundled one). Perhaps your Homebrew / Macports openssl libraries are of the wrong architecture? You can find out by running:\nfile /usr/local/opt/openssl/lib/*\n...for homebrew (or the appropriate place for Macports). I imagine they should be i386 / x86_64 fat binaries. If not, you'll probably need to reinstall it:\nbrew uninstall openssl\nbrew install openssl\nLet me know how you get on!\n. Okay. It works for me but I don't have a Macports / Homebrew Openssl installed (it seems to work fine against the bundled one). Perhaps your Homebrew / Macports openssl libraries are of the wrong architecture? You can find out by running:\nfile /usr/local/opt/openssl/lib/*\n...for homebrew (or the appropriate place for Macports). I imagine they should be i386 / x86_64 fat binaries. If not, you'll probably need to reinstall it:\nbrew uninstall openssl\nbrew install openssl\nLet me know how you get on!\n. The python cryptography library is trying to load libffi (through python's cffi) and it's unable to. The library it's attempting to load is a Macports library (/opt/local) which looks to be broken somehow. Check if it exists, if it does:\n/opt/local/lib/libffi.6.dylib\n...will tell you if it can find all of its dependencies. Have you switched to Macports or is it an old installation? You could try reinstalling libffi through macports although it may be its dependencies that need reinstalling. Alternatively, you may be better off uninstalling Macports.\n. The python cryptography library is trying to load libffi (through python's cffi) and it's unable to. The library it's attempting to load is a Macports library (/opt/local) which looks to be broken somehow. Check if it exists, if it does:\n/opt/local/lib/libffi.6.dylib\n...will tell you if it can find all of its dependencies. Have you switched to Macports or is it an old installation? You could try reinstalling libffi through macports although it may be its dependencies that need reinstalling. Alternatively, you may be better off uninstalling Macports.\n. Closing to replace with one with fixes for a bunch of these comments, thanks!\n. Will this not also prevent ASes from registering users?\n. If it's just a question of adding an \"if login_type != LoginType.APPLICATION_SERVICE\" and moving the code by a few lines, I think this would make this much more useful and less confusing.\n. Perfect. :)\n. NegativeMjark: Okay - I'd put user_name to mark them as taking a user id string rather than a user object, but I see that doesn't match precedent.\n. From my limited knowledge of the federation layer, LGTM.\n. lgtm\n. Now modified to do checks before daemonising, with its own database conn.\n. LGTM\n. LGTM\n. Just wasn't sure whether that was desired or not, so just noting that I hadn't done it.\n. Bumped\n. It will only edit homeserver.yaml, since synctl is hardcoded to only use this anyway. This seemed like an easy solution that kept it out of synapse core but if there is support in the core for something which makes automated editing/production of config files possible without sed/awk then I'm happy. \n. It will only edit homeserver.yaml, since synctl is hardcoded to only use this anyway. This seemed like an easy solution that kept it out of synapse core but if there is support in the core for something which makes automated editing/production of config files possible without sed/awk then I'm happy. \n. For audit purposes, Matthew was asking for this to reduce the notif spam we get by default: see Matrix Internal 1/12/2015 19:19 for discussion.\n. Not a bad idea\n. lgtm\n. ptal. This, I believe, correctly runs _filter... (and also processes redactions correctly). The former means more db queries since we need to fetch state and whether users are guests. These are ripe for optimisation but unsure whether doing so up front would be premature.\n. Good point. With this code, guest users will just never be able to clear their notifications I think. If we plan to continue not allowing guest users to send read receipts, I'll have to work around this somehow.\n. Conclusion is that we need to see read receipts from guests anyway, so no need for us to work around this. However this means we're probably blocked behind guest RRs being enabled.\n. This is a very good point.\n. This is a very good point.\n. lgtmt\n. lgtmt\n. lgtm\n. OK, I've mostly only looked at your 'Make notifications go quicker' but this lgtm.\n. lgtm\n. ptal, at least for the bits you didn't help me write. Have added the index on user_id to receipts_linearized too.\n. lgtm\n. LGTM\n. ptal\n. LGTM\n. LGTM. Yay for caches.\n. lgtm\n. The last_read_event_id_for_room_and_user can also be deleted as it's now redundant. lgtm.\n. Fair enough, presumably this ended up getting done by fetching the whole shebang then filtering, and I missed this. lgtm.\n. Presumably this is changing what the API returns, in line with the enabled change? If so, fine as long as this is reflected in the spec.\n. matrixbot: ok to test\n. ptal\n. ptal\n. done\n. We probably do care that session information gets dropped over restarts, but no more so now than before, so I think that would be a separate fix.\n. I've also fixed broken invite pushing and added a test for it: https://github.com/matrix-org/sytest/compare/dbkr/test_invites_pushed\nptal\n. I've also fixed broken invite pushing and added a test for it: https://github.com/matrix-org/sytest/compare/dbkr/test_invites_pushed\nptal\n. lgtm\n. ptal\n. lgtm\n. I'd be lying if I said this wasn't not an incorrect fix.\n(lgtm)\n. On received_ts, I think the bit you were looking at that was treating it \"when we sent a notif\" was just incorrect old code you correctly spotted was no longer used. This was also the inefficient query you pointed out. Now those are gone so the remaining ones should all actually be the time the event/notif arrived. Hopefully this is ok now. (The time was last sent a notif is stored in pusher_throttle).\nThere's no difference currently between highlight and non-highlight notifications. Digest mails are coming later and will look broadly similar.\n. lgtm\n. lgtm. Yeah, may be possible to simplify some counting logic, although we still need the counts for each room to send down the stream.\n. lgtm\n. Yeah, imagine at some point we'll need completely different strings for the different brands, but if this flexibility is good enough then lgtm, modulo conflicts.\n. Is there spec for this coming?\n. Done. Are these tests still 'expected' to fail?\n. Ootherwise lgtm.\n. lgtm apart from the test failures\n. Hold on, this will affect more things than I thought.\n. lgtm (assuming the upgrade scripts aren't expected to be idempotent!)\n. lgtm (assuming the upgrade scripts aren't expected to be idempotent!)\n. done\n. Huh... it was fine on mine. :/ Maybe an sqlite version thing?\n. Yep: https://www.sqlite.org/expridx.html - so we need version 3.9.0. Sigh. What do we want to do?\n. Hmm, true. I guess we could have a db script to migrate the current ones. wdyt?\n. If I'm understanding webpush correctly, the HTTP 2 pull side of it would basically end up looking very similar to the existing sync protocol but over HTTP 2 (and with a filter for just notifications) so I suspect it would make sense to go more in that direction (although that doesn't rule out offering the same with the web push protocol if it would allow compatibility with other things talking web push). @matrixbot test this please. @erikjohnston @richvdh ptal. That would make a lot more sense.\n. Ah, thanks for spotting.\n. Done\n. Thank you!\n. Me too, but this is how it was before.\n. did you mean to also remove the underscore?\n. ~~also maybe better to return the empty list~~ actually the caller handles none anyway, so nm.\n. Is this used, if the annotation here is commented out?\n. Actually good point, and this would make this a lot simpler.\n. capturing is not so straightforward for things that need to be mutable :/\n. Because I got confused\n. They get sent to the client\n. Yeah, maybe - this one only goes into json so it should be fine, but possibly the extra token space isn't worth it.\n. https://github.com/matrix-org/matrix-doc/pull/306\n. Meh, my brain gets much less confused by this way, but sure :)\n. Turns out you were pointing out it was actually broken. Fixed.\n. ah yeah. unlikley to be many there though.\n. I did this within _unsafe_process\n. I've moved this to _process to try & keep all the try/finally stuff in one place and the actual logic in another. Hopefully this means the logcontexts are fine too since it's now just the same place calling it.\n. Done. Was debating which was neater but I think you're right.\n. Because I wanted to make it conditional and that needs access to the HS object\n. Me too, but this is something to add a little later I think.\n. Did you mean events? We join against that to get the received_ts field.\n. Yeah, primary key is implicitly an index.\n. Yeah, since the option is essentially asking the function to return None rather than try to make up a name (so the caller can handle the situation where there is no actual name more naturally).\n. Is this actually necessary or is it, by definition, the domain part of the published alias?\n. Oh, of course :)\n. I appreciate github supports svn, but if we're switching to a git repository I think it makes sense to check it out with git: this is likely to confuse people.\n. No - vector actually handled it, but was calling the ID directly and therefore would never get that error code.\n. Ah, good to know, just copied it from the other handlers.\n. requestEmailToken takes **kwargs so it shouldn't do (next_link is passed through this way)\n. It probably should be\n. Wait, this isn't going to work in the case where a user's account is registered after they come back from verifying their email address, where the parameters to registration will come out of check_auth )params, not the body of the current request.\n. Was this meant to be here?\n. ootherwise\n. Much as I don't want to go further down this refactoring rabbit hole, it would be nice to move this up one more layer so this function returned None or raise a sane error, and contain the 403 code to validate_password_login which is used for login and login only. wdyt?\n. Yeah, the fact that check_auth will clobber it with a 401 anyway is why I thought it might be clearer to use an exception without a specific code, so it's then catching an specific exception and turning it into one the upper layer understands, rather than catching the 403 exception and replacing the code. If you see it throwing the 403 error, it's surprising when that's re-caught, but less surprising if it's, say, AuthCheckException. I don't really hugely bothered though, either way this is an improvement over what was there before.\n. OK, I see the problem: the different auth checkers all throw LoginError, so you'd have to change all of them. Yeah, ok - it's not worth it.\n. isn't this checking if a list of event IDs contains a tuple?\n. ah right, yes\n. In this case, the msisdn canonicalisation will have been done by the ID server (or the thing doing the verification). In fact, with us now having decided to have a separate thing to do the actual validation of 3pids, the email canonicalisation would go there too (it's a bit tricky for email given that squelching the localpart down to lowercase is not technically valid).. Fixed, although accidentally on develop.. done. done. done. done. done. done. done. done. This would have to be the ID server giving an invalid response. Because these functions are all specified to return a deferred, so we need to yield somewhere in the function for it to actually return a deferred.. It probably was me in a former life. done. done. done. done. done. hmm, it probably used to be longer. fixed.. done. ah yes. fixed. u haz doc. Oops, thanks. Ah interesting, I wrote that first but then sort of concluded the opposite.. It would probably be better to just have one place that calls sendmail: the default for the other params is None, so it should be fine to just pass them through, and presumably requireAuthentication could just be self.hs.config.email_smtp_user is not None.. Need examples for smtp_user and smtp_pass too (this way they're in the template and it's obvious that they're options). Probably not, yeah. Basically we just want to indicate that an error has occurred, and since post_json_get_json just returns the body, previously we were masking the error status code and behaving as if the endpoint returned 2xx which confused things. The main thing is that we raise an exception on error responses, and if we turn it into a SynapseException then it just works without having to handle it specifically in all the different places.. is this path supposed to be here? it isn't referenced anywhere.... Spurious 'content' param?. I think you meant 'admin'. just to make it clear the variable is at this level  (even though they all get hoisted). yeah, same as before basically (it doesn't yield on the function call). hmm, I guess not actually. mm, could be useful. is it worth s/values/itervalues/ in the place I copied it from and all the other places that copied it from that too? :). Is it worth clarifying that this must be a file name?. Mismatched backticks here?. as in the commented version should be include_content: true or the description should say the default is true, or both?. Yeah, this is probably sensible - done.. a. Not necessarily, since there's nothing to mandate that the user had to proxy their requestToken via the HS, so this check is important.. Should this be PUT or POST? The client API is a PUT.. Done, although it's in the /_matrix/federation path so I've said it's an API that's implemented by sydent rather than part of the IS API as such.. done. They'll get different batch numbers depending on which one got serviced first, then probably the first call to _replicate_profiles will send both batches and the second will do nothing. If it collides with the looping syncer it'll depend which db txn gets done first.. ah, yes it does, good spot. done. done. ah yep, done (plus the others). You're doing this for msisdns too - is this going to fail for these (presumably there just won't be a parts[1]). Adding a '1' on the end could be a bit confusing for msisdns. oops, good spot. good catch. done. cargoculting probably. removed.. done. done. fixed. oops. done. point. done. To make sure it's always distinct from a request to a homeserver with the same name, eg. that you could reuse the same signature for a request to the matrix.org HS to sign the same request to the matrix.org IS as they're different destinations (although in practice are unlikely to support the same request).. oops, because I didn't mean to commit that. Have added comment to hopefully clarify (we've already done the checks in account deactivation so we'd just have to fake up a requester to pass in.). mm, so it does. done. ah, good to know. where by lock you mean try block? I don't think so as the try is just catching 404s from the get.. mm, agreed. mm, I see what you mean. done. ah yes :). It's a string in the API, ie. when json encoded for the client it needs to be \"2\" rather than 2, so  we need to stringify it at some point. I don't really mind whether we model them as int throughout the whole of synapse & convert to str at the last minute for marshalling or just keep them as ints at the database layer.. It currently does a MAX() at the db layer to get the largest version, then increments it in python, which breaks when the column type is a string because \"10\" < \"2\" which is the bug this fixes.. #e2e-dev:matrix.org has the API / spec discussion: this one was: https://matrix.to/#/!uewiilduiDRfPomIha:matrix.org/$15397878202555374QpBig:matrix.org. My reason for bumping it here is that the original e2e room keys tables were added in 51 and this changes obviously needs to happen after that.. ah, probably because I branched off before that. ",
    "winsontan520": "OSX Yosemite 10.10.1\n. OSX Yosemite 10.10.1\n. Thanks for reply!\nReinstall brew openssl remain same. Seem something wrong with homebrew in Yosemite. I uninstall Homebrew and now the command running ok.\n. Thanks for reply!\nReinstall brew openssl remain same. Seem something wrong with homebrew in Yosemite. I uninstall Homebrew and now the command running ok.\n. Sorry my bad. I dint realize the log \"Library not loaded: /opt/local/lib/libffi.6.dylib\"\nin fact I already uninstall macport and its all ports.\nSolution:\nI reinstall the macport for Yosemite https://www.macports.org/install.php\ninstall the port: sudo port install libffi\nfollowing the remaining guides, the server is now able to start and now I able to play at localhost:8008 Hurray~!\n@dbkr Thank you so much for your quick reply!\n. Sorry my bad. I dint realize the log \"Library not loaded: /opt/local/lib/libffi.6.dylib\"\nin fact I already uninstall macport and its all ports.\nSolution:\nI reinstall the macport for Yosemite https://www.macports.org/install.php\ninstall the port: sudo port install libffi\nfollowing the remaining guides, the server is now able to start and now I able to play at localhost:8008 Hurray~!\n@dbkr Thank you so much for your quick reply!\n. ",
    "matrixbot": "Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Increasing the priority on this as it's getting really confusing tracking which homeservers my various clients connect to.\n-- @ara4n\n. Announcing the version would be particularly useful, to check whether a bug is due to a server being too old for a client or vice versa.\n-- @ara4n\n. ...and we need to actually announce the canonical hostname of the server, rather than guessing it from the C-S API url\n...and it'd be good to announce config data like maximum content upload size limit.\n-- @ara4n\n. This surely falls under the remit of CS v2 capabilities API? https://github.com/matrix-org/matrix-doc/blob/master/drafts/general_api.rst#capabilities-api-ongoing\n-- @Kegsay\n. There are a few separate classes of things we might wish to return to the client:\n\nIs it static or changes often, e.g. server name vs. message of the day.\nIs it for internal usage or for human consumption, e.g. turn uris vs message of the day.\nIs it something immediately required by the client to work, or can it be fetched after client startup.\n\nIt may be worth having multiple APIs for distributing this data, e.g. required static information gets sent once on login, whereas optional, dynamic data like MotD could be a separate API.\n-- @erikjohnston\n. I can't believe this has been open for >2 years - it's becoming a defining UX problem of Matrix.\nAfter talking to [~erikj] tonight, there are basically two solutions:\n- Use presence data (nowadays persisted, yay!) to run a bot per-channel to clear out idlers from a channel.\n- Use presence data (or access_token usage info) on a HS to let HS admins \"clean up\" idlers on their server - parting them from public rooms etc, perhaps based on idler policy hints in room state.\nThere's concern that fixing up Guest access and other changes might be entangled with the 2nd solution, so i suggest we go for the 1st solution at least as a short-term fix.\n-- @ara4n\n. Jira watchers: @erikjohnston\n. We need to think this through better before it's too late.\nIf I decide to rebrand from foo.com to bar.com, it sounds like my only choice is to create a new HS DB containing the same account/profile names as before, and then somehow bootstrap these new users into the same rooms as the old ones (by inviting them using the old users)?\nThis feels very unwieldy.  I guess supporting forwarding addresses would be a step in the better direction, and then we can migrate like email.  For now, however, I can't see anything better than a script which creates the new DB and helps guide you through rejoining your users into rooms as the new user (and possibly leaving those rooms as the old user).\n(Thank goodness we don't have 1:1 rooms!)\n-- @ara4n\n. The old users won't necessarily have permission to invite new users into the room.\n-- @erikjohnston\n. Jira watchers: @erikjohnston\n. Once I open an incognito browser (for different cache) I did get more, mainly avatars and images. The channel ID showed up, not the alias. \nSo I feel there's still some disconnect, but not a big one.\n-- John Hogemiller\n. After 24 hours, the channel alias still hasn't shown up, just the ID (as seen in the screenshot). I can click on the cog and see the alias. I just submitting it as is, changing it to be an alias on my server, and listing both: [\"#matrix-dev:matrix.org\", \"#matrix-dev:matrix.ytnoc.net\"]. In all cases, it reverts back to the list propogated from matrix.org.\n-- John Hogemiller\n. Can a project admin edit the description? I think some of my initial issues (no avatars) were browser cache related, and the key issue remaining is that the channel alias won't show up.  \n-- John Hogemiller\n. Did you have multiple clients open? Were the ones that did not get the complete state the ones that you didn't use to join the room?\n-- @erikjohnston\n. I initially had one client open. It did not get the room member's list/complete state (first screenshot). It showed the room as my username.  Later, upon opening an incognito client, I got the member list, and it showed the room id and member list. Refreshing my main client got the room id and member list to show. m.room.alias can be viewed by clicking on the gear, but does not appear on the left channel list.\nThis finicky behavior seems to be based on room size.\nJoining #test:matrix.org worked just fine.\nJoining #matrix:matrix.org (today) shows me usernames on the left side (screenshot \"usernames only\"). Hitting the gear, no m.room.alias appears. I see the same in chrome, chrome incognito, firefox.\n-- John Hogemiller\n. There was much discussion about this the other week.  Conclusions were:\n- The storage API should be either high level or low level.  It has to be aware of business objects in some places in order to handle transactions properly.  Therefore we should be consistently high-level - dealing in terms of objects rather than primitives (unless the business object itself /are/ primitives, or we're deliberately exposing a method which returns a single primitive).  In other words, we shouldn't be passing around rows or tuples of raw DB values - we should be passing them as objects instead.\n-- @ara4n\n. This should also have some way of having a ban history, even after a ban expires.\n-- Christine Dodrill\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n @richvdh\n. Links exported from Jira:\nis blocked by SPEC-1\nrelates to SPEC-289\n. split out case sensitivity into syn-109\n-- @ara4n\n. syn-109 became SPEC-289, ftr\n-- @richvdh\n. Jira watchers: @erikjohnston @ara4n\n. Links exported from Jira:\nrelates to SPEC-17\n. This sounds like an example where the behaviour of a 1:1 room is different from that of a private group chat.\nIf a 1:1 room is implemented in terms of a room with the following properties:\n- No one can invite\n- The two people are in the \"may join\" list.\n  Then if one participant leaves a room they can always rejoin.\n-- @erikjohnston\n. We also want to be careful about the fact that if everyone leaves a room, then we currently have no way to resurrect it.\nI guess the question is, why do users leave a 1:1 chat? Is it so they no longer get notified? That should be done via a different mechanism. \nWould it be easier to just create a new 1:1 chat if a participant leaves?\n-- @erikjohnston\n. Jira watchers: @erikjohnston\n. Links exported from Jira:\nrelates to SYN-64\n. Jira watchers: @NegativeMjark @ara4n\n. Running:\npip install --user --process-dependency-links https://github.com/matrix-org/synapse/tarball/develop\nwill install synapse. \nNow we just to work out how to upload stuff to PyPI.\n-- @NegativeMjark\n. A few nitpicks:\n1.) --process-dependency-links is deprecated pending removal\n2.) On some distributions, such as arch, python3 is the default - but synapse does not work on python3\n3.) While --user allows installing dependencies without impinging on the system as a whole, it may not be sufficient - in particular, system dependencies that are later upgraded or uninstalled may break synapse.\nThe following command worked for me, and addresses all of the above issues:\nshpip2.7 install --user --upgrade --ignore-installed https://github.com/matrix-org/synapse/tarball/develop\nThe --upgrade argument causes pip to install the best version available to satisfy dependencies rather than making do with what may already be present, and --ignore-installed tells it to not rely on system modules even if they are the best available version. The result is that only a change of Python version or config can break it, which is considerably less likely.\nThe command may also be abbreviated to:\nshpip2.7 install --user -UI https://github.com/matrix-org/synapse/tarball/develop\n-- Alex Elsayed\n. Jira watchers: @leonerd\n. Jira watchers: @NegativeMjark\n. Jira watchers: @NegativeMjark\n. Jira watchers: @NegativeMjark\n. Jira watchers: @dbkr\n. https://github.com/matrix-org/synapse/pull/514 disables the rule to to fix this temporarily\n-- @dbkr\n. Jira watchers: @NegativeMjark\n. Jira watchers: @ara4n\n. Links exported from Jira:\nis duplicated by SYN-134\nrelates to SYWEB-83\n. this is still an embarrassing problem. according to syn-134 the federation_authorization branch should be 404ing invites to nonexistent users, but it doesn't :(\n-- @ara4n\n. Jira watchers: @leonerd @NegativeMjark\n. I tackled this issue in previous projects by synthesising list of rooms the client is in at the start token of the request and then updating that list dynamically as new join/leave events appear in the stream.\nThis doesn't work very well if there are a mixture of \"joins\" and \"leaves\" for the same room in the stream since the client won't know which messages were excluded.\n-- @NegativeMjark\n. Actually it occurs to me you can post-process the events quite nicely.\nStart off with the code as it is, then walk backwards through the proposed list of events, seeing if there are any that we have to remove. Construct the set of rooms that the requesting user is currently in, and walk backwards over the list of proposed events, updating that set of rooms by inspecting the prev_content of any room membership events about the requesting user themself, and use that set to further exclude other room events that they ought not have been allowed to see.\nIn effect this will mean that if the event list would have (under the current) implementation been the room create and setup events, then the join (as in the scenario), the post-processing filter will notice the room join, updating the previous state of membership to not present, and then realise the requesting user at that moment is not a member of the room so should not be able to see the setup and create events.\n-- @leonerd\n. Jira watchers: @NegativeMjark @ara4n\n. Taken from \"Matrix Internal\".\n{\n  \"@&#8203;LeoNerd:matrix.org\": 100,\n  \"@&#8203;Mjark:matrix.org\": \"100\",\n  \"@&#8203;dave:matrix.org\": \"100\",\n  \"@&#8203;erikj:jki.re\": \"100\",\n  \"@&#8203;kegan:matrix.org\": \"100\",\n  \"@&#8203;matthew:matrix.org\": \"100\",\n  \"@&#8203;neb:matrix.org\": 100,\n  \"@&#8203;oddvar:matrix.org\": 99,\n  \"default\": 0\n}\nPossibly due differences between Leo's perl client and the web client? We should probably have better C2S and S2S validation for the event content.\n-- @NegativeMjark\n. Jira watchers: @ara4n\n. Jira watchers: @erikjohnston\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @NegativeMjark\n. Links exported from Jira:\nis blocked by SPEC-29\n. Jira watchers: @ara4n\n. Jira watchers: @Kegsay\n. Jira watchers: @ara4n\n. Links exported from Jira:\nrelates to SYN-49\n. Jira watchers: @ara4n\n. Links exported from Jira:\nrelates to SPEC-85\nrelates to SPEC-76\n. Jira watchers: @ara4n\n. Jira watchers: @dbkr @ara4n\n. Twisted doesn't really seem to support this as far as I can tell. It does support If-Modified-Since though.\n-- @dbkr\n. Jira watchers: @Kegsay\n. Links exported from Jira:\nrelates to SYWEB-145\n. Jira watchers: @NegativeMjark @ara4n\n. Jira watchers: @leonerd\n. obviously there's no point in upscaling images, so we'd just serve the original if something bigger is requested.\nThe rationale here is that if people are uploading huuuge images, and i ask for (say) a 480x960 thumbnail to fill my screen, i don't want to be forced to download the huge original just because the HS decided that it was only going to thumbnail 100x100 and 320x320 or something.\nAnd as a designer I would want the best looking image in thst scenario - resamplee once from the original rather than via an intermediate.\nIn other words, we want to try to support giving people the stuff they ask for by default, only compromising if resources really are constrained.\n-- @ara4n\n. Designers and client implementers thus need to handle the case where the content repo does not respond with the exact resolution that is being requested. So is your main concern then that you want to be able to request any resolution, but with a \"guarantee\" that you're not going to accidentally download the original 50MB image?\nIf so, could we not simply thumbnail at increasing resolutions. For example, if you requested 480x960, the server may respond with 720x1440. These increasing thumbnails do not need to be precomputed, but can be cached once computed for the first time (e.g. in a CDN.)\nMy main concern is for large scale deployments; my understanding is that rescaling images are relatively expensive CPU wise. If a content repository dynamically generates thumbnails, then the usefulness of CDNs is limited (if different apps all ask for different resolutions.) I am cautious about creating an expectation of Matrix services that can only be fulfilled by smaller scale deployments.\n-- @erikjohnston\n. I agree that we should not be overly concerned with performance, and should not prematurely optimise our code base. However, I believe we do need to make sure that our solutions can scale without loss of quality of any of the services.\n-- @erikjohnston\n. Yes, clients will always have to handle a different resolution of image being returned. I wasn't suggesting changing the contract; just preferring that we try to return the request resolution if at all possible.\nWe could preencode a pyramid of images, but then we will always be resampling the image twice; once for the prerender and once again for the actual display resolution. This loss of quality makes me sad; i'd prefer we give the best image we can.\nIn terms of the required storage & cpu resources... i am not expecting us to see a wide range of requested image sizes; probably less than a precomputed pyramid. The only argument i can see against generating the 'right' sizes by default is if it becomes a DoS risk for malicious clients chewing CPU and filling disk.\nHmm. I'm trying to think how we'd actually sidestep the DoS risk...\n-- @ara4n\n. I'm not necessarily suggesting we pre-compute the pyramid, but having a pyramid allows us a guarantee that only X amount of CPU and RAM are going to be used per image. \nbq. ... i am not expecting us to see a wide range of requested image sizes...\nWhy not? Surely each app would decide to use a different size depending on their design and the screen space available for it? What is the point of having an API that allows you to get arbitrary size thumbnails if we don't think anyone is going to use it?\nOff the top of my head, there are at least two ways to mitigate against DoS attacks:\n- Requests to the media repository require an access token, and thus we can apply rate limiting.\n- Allowing the servers to cap the amount of CPU and RAM that is dedicated to producing thumbnails for any given image.\n-- @erikjohnston\n. [20:11]   I'm currently looking into image scaling and it's behaving in a weird way\n[20:11]   s/scaling/thumbnailing/\n[20:11]   i think matrix.org is running 0.7.0a\n[20:11]  * Arathorn checks\n[20:11]   client or server misbehaviour?\n[20:12]   Server.\n[20:12]   right, matrix.org is on master as of a268c31 (i.e. 0.7.0a)\n[20:12]   https://matrix.org/_matrix/media/v1/thumbnail/matrix.org/CoQtPDCsBFDtQIxdkrUzhBKI?width=300&height=300&method=crop\n[20:12]   gives a thumbnail 96x96 in size\n[20:12]   300x300 is advisory\n[20:13]   if the original image is smaller, or it precalculated it at a smaller size, then you're not guaranteed you get the size you asked for\n[20:13]   as much as that irritates me; the concern is letting people DoS the server by requesting arbitrary sizes\n[20:13]   right, so the original image is 2448x3264\n[20:13]   Ah, that makes sense.\n[20:13]   iirc we precalculate 96x96 and 320x320?\n[20:14]   hm, nope...\n[20:14]  * Arathorn looks more carefully\n[20:14]   Wouldn't a way around that be to only allow authed views of the image and do per-user rate limiting?\n[20:14]   (theoretically, not saying it's a priority\n[20:14]   i'd much prefer that\n[20:15]   but for some reason mjark/erik have some Very Strong Ideas about not wasting disk space with accurately sized images ;)\n[20:15]   i think there's a holy war in a JIRA about it\n[20:16]   right, so for some reason, the server in its infinite wisdom chose to precalculate:\n[20:16]   180-240-image-jpeg-scale\n[20:16]   32-32-image-jpeg-crop\n[20:16]   360-480-image-jpeg-scale\n[20:16]   96-96-image-jpeg-crop\n[20:16]   i guess because it belives that crops are only used for smallish profile photos\n[20:16]   whereas scales are used for actual thumbnails\n[20:16]   which is sadly misguided, given we show big cropped images as avatars in things like the settings page.\n[20:16]   on the webclient\n[20:17]   Image messages also.\n[20:18]   you'd normally want to show image message thumbnails as a scaled image rather than a cropped image, surely?\nIn the current setup, does this mean we can only crop images to be square in shape?\n-- @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @giomfo\n. Jira watchers: @erikjohnston @ara4n\n. We need to make sure that it doesn't cause synapse to use all the memory.\n-- @erikjohnston\n. Jira watchers: @ara4n\n. Links exported from Jira:\nrelates to SYN-576\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @erikjohnston @ara4n\n. Or include it as part of a /server-info API.\n-- @erikjohnston\n. Or include it as part of a /server-info API.\n-- @erikjohnston\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. The problem seems to be that twisted's http agent is hardcoded to ipv4:\nhttp://twistedmatrix.com/pipermail/twisted-python/2012-August/026012.html\n-- @ara4n\n. ...and our federation endpoint is hardcoded to ipv4 too:\nif ssl_context_factory is None:\n        transport_endpoint = TCP4ClientEndpoint\n        default_port = 8008\n    else:\n        transport_endpoint = SSL4ClientEndpoint\n        endpoint_kw_args.update(sslContextFactory=ssl_context_factory)\n        default_port = 8448\n-- @ara4n\n. Twisted uses its own resolver lib, which plays nice with IPv4 addresses, but not with IPv6. Related to twisted ticket #4362.\n``` python\npython -m twisted.conch.stdio\n\n\n\nfrom twisted.names import client\nresolver = client.createResolver(servers=[('2001:4860:4860::8888', 53)])\nresolver.getHostByName('google.com')\n>>\nresolver = client.createResolver(servers=[('8.8.8.8', 53)])\nresolver.getHostByName('google.com')\n\n```\n\n\n\n-- Sander Ruitenbeek\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @erikjohnston @ara4n\n. Jira watchers: @erikjohnston @ara4n\n. it's now 1.4GB...\n$ cat homeserver.sql | grep -P -o '^INSERT INTO \".*?\"' | sort | uniq -c\n   5297 INSERT INTO \"access_tokens\"\n   1046 INSERT INTO \"copied_room_hosts\"\n   7452 INSERT INTO \"current_state_events\"\n     39 INSERT INTO \"destinations\"\n 297415 INSERT INTO \"event_auth\"\n     63 INSERT INTO \"event_backward_extremities\"\n 112265 INSERT INTO \"event_content_hashes\"\n 117641 INSERT INTO \"event_edge_hashes\"\n 133789 INSERT INTO \"event_edges\"\n   1057 INSERT INTO \"event_forward_extremities\"\n 112270 INSERT INTO \"event_json\"\n 112270 INSERT INTO \"event_reference_hashes\"\n 112270 INSERT INTO \"events\"\n  63438 INSERT INTO \"event_signatures\"\n 146406 INSERT INTO \"event_to_state_groups\"\n    666 INSERT INTO \"local_media_repository\"\n   2351 INSERT INTO \"local_media_repository_thumbnails\"\n   1112 INSERT INTO \"presence\"\n    278 INSERT INTO \"presence_allow_inbound\"\n    317 INSERT INTO \"presence_list\"\n   1112 INSERT INTO \"profiles\"\n      8 INSERT INTO \"pushers\"\n      7 INSERT INTO \"pushers_old\"\n     30 INSERT INTO \"push_rules\"\n    217 INSERT INTO \"redactions\"\n      1 INSERT INTO \"rejections\"\n     67 INSERT INTO \"remote_media_cache\"\n    248 INSERT INTO \"remote_media_cache_thumbnails\"\n    346 INSERT INTO \"room_aliases\"\n    359 INSERT INTO \"room_alias_servers\"\n   1050 INSERT INTO \"room_depth\"\n    902 INSERT INTO \"room_hosts\"\n  18467 INSERT INTO \"room_memberships\"\n    509 INSERT INTO \"room_names\"\n    768 INSERT INTO \"rooms\"\n2117803 INSERT INTO \"sent_transactions\"\n     34 INSERT INTO \"server_signature_keys\"\n     34 INSERT INTO \"server_tls_certificates\"\n      7 INSERT INTO \"sqlite_sequence\"\n  23202 INSERT INTO \"state_events\"\n   7962 INSERT INTO \"state_forward_extremities\"\n  57699 INSERT INTO \"state_groups\"\n2934070 INSERT INTO \"state_groups_state\"\n    156 INSERT INTO \"topics\"\n      2 INSERT INTO \"user_filters\"\n   7089 INSERT INTO \"user_ips\"\n   1112 INSERT INTO \"users\"\nSurely we should be reaping sent_transactions and do we really need all the state_groups_state table?\n-- @ara4n\n. it's now 1.4GB...\n$ cat homeserver.sql | grep -P -o '^INSERT INTO \".*?\"' | sort | uniq -c\n   5297 INSERT INTO \"access_tokens\"\n   1046 INSERT INTO \"copied_room_hosts\"\n   7452 INSERT INTO \"current_state_events\"\n     39 INSERT INTO \"destinations\"\n 297415 INSERT INTO \"event_auth\"\n     63 INSERT INTO \"event_backward_extremities\"\n 112265 INSERT INTO \"event_content_hashes\"\n 117641 INSERT INTO \"event_edge_hashes\"\n 133789 INSERT INTO \"event_edges\"\n   1057 INSERT INTO \"event_forward_extremities\"\n 112270 INSERT INTO \"event_json\"\n 112270 INSERT INTO \"event_reference_hashes\"\n 112270 INSERT INTO \"events\"\n  63438 INSERT INTO \"event_signatures\"\n 146406 INSERT INTO \"event_to_state_groups\"\n    666 INSERT INTO \"local_media_repository\"\n   2351 INSERT INTO \"local_media_repository_thumbnails\"\n   1112 INSERT INTO \"presence\"\n    278 INSERT INTO \"presence_allow_inbound\"\n    317 INSERT INTO \"presence_list\"\n   1112 INSERT INTO \"profiles\"\n      8 INSERT INTO \"pushers\"\n      7 INSERT INTO \"pushers_old\"\n     30 INSERT INTO \"push_rules\"\n    217 INSERT INTO \"redactions\"\n      1 INSERT INTO \"rejections\"\n     67 INSERT INTO \"remote_media_cache\"\n    248 INSERT INTO \"remote_media_cache_thumbnails\"\n    346 INSERT INTO \"room_aliases\"\n    359 INSERT INTO \"room_alias_servers\"\n   1050 INSERT INTO \"room_depth\"\n    902 INSERT INTO \"room_hosts\"\n  18467 INSERT INTO \"room_memberships\"\n    509 INSERT INTO \"room_names\"\n    768 INSERT INTO \"rooms\"\n2117803 INSERT INTO \"sent_transactions\"\n     34 INSERT INTO \"server_signature_keys\"\n     34 INSERT INTO \"server_tls_certificates\"\n      7 INSERT INTO \"sqlite_sequence\"\n  23202 INSERT INTO \"state_events\"\n   7962 INSERT INTO \"state_forward_extremities\"\n  57699 INSERT INTO \"state_groups\"\n2934070 INSERT INTO \"state_groups_state\"\n    156 INSERT INTO \"topics\"\n      2 INSERT INTO \"user_filters\"\n   7089 INSERT INTO \"user_ips\"\n   1112 INSERT INTO \"users\"\nSurely we should be reaping sent_transactions and do we really need all the state_groups_state table?\n-- @ara4n\n. What /is/ going on in the state_groups_state table?!\nsqlite> select count(*) as c, event_id, room_id from state_groups_state group by event_id having c>1000;\n18728|$1416420717069yeQaw:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1334|$1416420717073efgQs:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4103|$1416420717079YOCAM:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17061|$1416420717256OtQnJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17055|$1416420717373CyQzu:localhost|!cURbafjkfsMDVwdRDQ:matrix.org\n11460|$1416420717416rmLEi:snowtree.se|!cURbafjkfsMDVwdRDQ:matrix.org\n17046|$1416420717541tMxRS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17039|$1416420717681PQZlZ:31.48.80.57|!cURbafjkfsMDVwdRDQ:matrix.org\n17038|$1416420717695IfEeI:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n13980|$1416420718205nfVXh:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2197|$1416420718348MiJRP:arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n17027|$1416420718587gBgcl:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17026|$1416420718626WtLwU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17025|$1416420718723rrfUb:leonerd.org.uk|!cURbafjkfsMDVwdRDQ:matrix.org\n17022|$1416420718742aWcZC:negativecurvature.net|!cURbafjkfsMDVwdRDQ:matrix.org\n17021|$1416420719541vTuOk:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17019|$1416420721952opPpr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17017|$1416420722139jQMMX:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17016|$1416420722245JEMUj:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17015|$1416420722378xiuyM:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16979|$1416420722861IKPvF:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17012|$1416420722891lHznP:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17007|$1416420725041TFMYe:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n13047|$1416420725095byNtM:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17005|$1416420725713kkKDz:hrfns.com|!cURbafjkfsMDVwdRDQ:matrix.org\n17002|$1416420728634hhcEF:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17001|$1416420728770xOTCX:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n16991|$1416420729770iszYu:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16990|$1416420729802Vxmgt:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16362|$1416420730169IMBUn:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16952|$1416420730857BWSuf:localhost|!cURbafjkfsMDVwdRDQ:matrix.org\n5822|$1416420733710niUzv:garden.of.the.hesperides.net|!cURbafjkfsMDVwdRDQ:matrix.org\n14690|$1416420739404anSQd:erikjohnston.com|!cURbafjkfsMDVwdRDQ:matrix.org\n16878|$1416420740732BUIPI:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16865|$1416420741328tNpCM:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16856|$1416420742498NURDH:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16746|$1416420747169LbqDD:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16737|$1416420747516KjAgo:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16667|$1416420748597fYCJL:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1750|$1416420748650ALEbH:oddvar.org|!cURbafjkfsMDVwdRDQ:matrix.org\n14511|$1416420749214zjHnS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4598|$1416420749290udlHc:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16683|$1416420749996HpYrg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n13028|$1416420750731RCRhm:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1144|$1416420751271pSwfl:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16651|$1416420751468avuPh:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1139|$1416420751515oTpYH:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1247|$1416420751661trOnb:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11159|$1416420752099GiKsg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n13365|$1416420752536lbQfZ:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n11100|$1416420752737lsaMm:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n15396|$1416420752799lDevr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3340|$1416420752986RNzxU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11755|$1416420753058nzRwW:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3204|$1416420753105jepIv:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n15166|$1416420753345DPfTb:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12930|$1416420757058cIVln:oddvar.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3905|$1416420757940YgaFr:arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n9355|$1416420758336HjAWp:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n14947|$1416420758384LlPhN:perlsite.co.uk|!cURbafjkfsMDVwdRDQ:matrix.org\n1010|$1416420758898SoPKi:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n13526|$1416420758924gcmew:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n12094|$1416420759785CZaZi:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12303|$1416420760186ueVaS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n8559|$1416420760559doWho:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12299|$1416420760749tarbd:perlsite.co.uk|!cURbafjkfsMDVwdRDQ:matrix.org\n12298|$1416420764288aMESI:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12297|$1416420764385Bezwf:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12296|$1416420764620SrZqe:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12295|$1416420764815XYYOU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12294|$1416420764910oxoxx:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12293|$1416420764943vNPUg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12292|$1416420765167GIAII:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12216|$1416420765957twmuz:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12290|$1416420767843KZcog:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12288|$1416420768430kqCPR:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12286|$1416420768977qjrsJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12250|$1416420769433iriKL:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12283|$1416420769487kzgHZ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12282|$1416420769839TkpEc:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12281|$1416420769883mbmiP:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12280|$1416420769964YIkcK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12279|$1416420770276OZVvv:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12278|$1416420770308BDbLJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12277|$1416420770355vOHLV:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12276|$1416420770511QVbZP:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12275|$1416420770653FzCWl:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12274|$1416420770695MLBXi:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12063|$1416420770945OiBNK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12270|$1416420770983yvZpg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12269|$1416420771020wBDlp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12266|$1416420771343AsGYg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12265|$1416420771494YxZrr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1127|$1416420771531LamDP:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12263|$1416420771615meROC:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12262|$1416420771674LcEJv:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12261|$1416420771789FgSru:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12260|$1416420771833IxsMK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n6720|$1416420772380xnaFN:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12257|$1416420773136YMAWs:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12256|$1416420773386uUmgL:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12255|$1416420773831aRhEU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12254|$1416420774091sDPei:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11697|$1416420776189PCIfU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11138|$1416420777391hUXIL:perlsite.co.uk|!cURbafjkfsMDVwdRDQ:matrix.org\n11137|$1416420778621gCEbc:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11136|$1416420779925FddIr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n6177|$1416420781870eDykP:arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n11134|$1416420782075mfgdS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11133|$1416420782378FesIb:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11132|$1416420782443ALDeb:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11131|$1416420782540XjQeq:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11130|$1416420784368obHNx:sw1v.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11129|$1416420786412ZNnEM:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11122|$1416420786845pNTsS:garden.of.the.hesperides.net|!cURbafjkfsMDVwdRDQ:matrix.org\n7294|$1416420787136OOjli:perlsite.co.uk|!cURbafjkfsMDVwdRDQ:matrix.org\n11120|$1416420787173UGDfP:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n7220|$1416420787210VWMAK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n7290|$1416420787269hLzzC:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n10566|$1416420788313pEEgy:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n10565|$1416420790393yoGdY:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n10564|$1416420790593Aiqkf:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n10563|$1416420792162Kmrsb:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n6703|$1416420796357lXqCS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5567|$1416420797388wToqk:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5600|$1416420797517kIMlV:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5599|$1416420798229qWPPj:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5598|$1416420800107Biych:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5562|$1416420800314VRDdL:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5595|$1416420800390kxXMK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4379|$1416420800542ElLoZ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5593|$1416420800590jvbdF:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5576|$1416420801535tbioV:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5575|$1416420801572gYZWA:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5566|$1416420806122vffRr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5518|$1416420807158uVfVQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1602|$1416420812295wdSTI:snowtree.se|!cURbafjkfsMDVwdRDQ:matrix.org\n5539|$1416420812931FKFbw:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3421|$1416420813934cmWzy:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5537|$1416420814330mKmpu:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5536|$1416420814379evHzf:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5495|$1416420823046AgXHd:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5185|$1416420826052EEJKQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4919|$1416420826142uCJeQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1168|$1416420826394tOkZQ:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n4965|$1416420826666gqKnw:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4964|$1416420826753JBQSZ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4963|$1416420826981TVtNH:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4714|$1416420829203leIQj:arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n1096|$1416420830271KPsKp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1239|$1416420834316BHbWV:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4002|$1416420834524uTuxw:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4001|$1416420834608FfPgp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3972|$1416420843467mqeBw:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3958|$1416420844496FKHEL:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3954|$1416420845628lhRNm:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3828|$1416420846252riDut:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3943|$1416420846538aXHeS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3881|$1416420849598nihOl:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3914|$1416420849820BWXAo:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3912|$1416420850182DXcTU:snowtree.se|!cURbafjkfsMDVwdRDQ:matrix.org\n3911|$1416420850281vRZHA:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3788|$1416420850817wbVfW:perlsite.co.uk|!cURbafjkfsMDVwdRDQ:matrix.org\n1161|$1416420851112NfpGD:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1127|$1416420851731wNqKS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3889|$1416420853095KGDzT:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3888|$1416420853143MvZDR:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3885|$1416420854199YsWYb:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3879|$1416420854973HAjgm:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3878|$1416420855236cXoaU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3876|$1416420855438wBkna:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3874|$1416420855597yokdg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3869|$1416420856083YZABC:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3867|$1416420856199ZKlZU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3862|$1416420856512QGtku:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3857|$1416420856805YrmqU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3818|$1416420857342GqSmM:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3851|$1416420857508TOcuH:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3813|$1416420857867VguEm:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3720|$1416420858389munSo:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3800|$1416420858895HCMiK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3829|$1416420861986HKBPg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3819|$1416420862700lpTSc:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3823|$1416420862754wouYp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2349|$1416420862809fqkmu:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3284|$1416420881907tfMSo:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2807|$1416420882174tftIX:arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n3105|$1416420882365gKDth:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2579|$1416420882423YHwfE:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3313|$1416420882533LakGx:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2859|$1416420882591IaNeP:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3277|$1416420882647vrHND:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3274|$1416420882982TSUAr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3299|$1416420884250mUuIr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2910|$1416420884345vbjxa:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2565|$1416420884456JKmgp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1086|$1416420884563BosKY:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1161|$1416420885191VRdgl:oddvar.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3252|$1416420885684ZUiip:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3285|$1416420885833sdHVD:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3284|$1416420885897AYGQm:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1030|$1416420886687VDmUZ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3267|$1416420889751UjLby:ply42.com|!cURbafjkfsMDVwdRDQ:matrix.org\n3232|$1416420889857uPRnU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3263|$1416420890276zZflv:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3051|$1416420891592ydDtW:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3260|$1416420891648Phmiy:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3259|$1416420892257xDLrQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1135|$1416420892624aWeGe:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1373|$1416420910522mQfXQ:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1372|$1416420910529mzqgm:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1368|$1416420910538EkGDl:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1360|$1416420910571GKYlb:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1359|$1416420910579Luior:perlsite.co.uk|!XqBunHwQIXUiqCaoxq:matrix.org\n1358|$1416420910588dZiXc:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1357|$1416420910596DtYDo:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1356|$1416420910606lQtFd:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1355|$1416420910616oFTTZ:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1350|$1416420910784pdqOM:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1229|$1416420910797aBfrs:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1346|$1416420910943cDMHw:localhost|!XqBunHwQIXUiqCaoxq:matrix.org\n1343|$1416420911240NlpYz:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1342|$1416420911262iitPd:192.168.1.7|!XqBunHwQIXUiqCaoxq:matrix.org\n1328|$1416420911472pnYfW:perlsite.co.uk|!XqBunHwQIXUiqCaoxq:matrix.org\n1327|$1416420912022fJsQH:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1319|$1416420913229qPazk:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1317|$1416420914478UxsOL:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1307|$1416420915114lUDNm:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1303|$1416420915300YPOeT:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1301|$1416420915567BMEot:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1300|$1416420915742NQoXP:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1298|$1416420916528LUXWH:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1295|$1416420916884dajjM:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1294|$1416420918249zVeZL:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1283|$1416420930516ucDKo:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1139|$1416420930650ZDaIU:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1229|$1416420945969fiQue:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1226|$1416420948392SjmKV:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1183|$1416420962355lXWmM:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1120|$1416420992944OPvTv:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1113|$1416420994680SdKVt:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1083|$1416421009533vfDhR:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1073|$1416421015341kLOpD:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1049|$1416421032418vKMwW:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1030|$1416421046425hcSIy:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1029|$1416421049924bSkUU:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1027|$1416421050022ayPzD:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1026|$1416421050073wSUwI:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1014|$1416421055396TJLpQ:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n19328|$1416421146219OLQyu:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n18815|$1416421146223QSTqY:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1265|$1416421146227nKsys:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n9074|$1416421146232QncPa:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1174|$1416421146263glZNK:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n4313|$1416421146274yKWeG:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n14963|$1416421146299YpmVR:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2066|$1416421146309eARPg:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n10068|$1416421146320GCFcw:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n14402|$1416421146329mERPX:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n3183|$1416421146338tpiwT:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n4369|$1416421146381AXjcd:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1492|$1416421146404KhWvd:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n3663|$1416421146432knGyR:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2887|$1416421146445RczWe:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2880|$1416421146512AMdCQ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n5328|$1416421146575SzvoL:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n7614|$1416421146609pJiiJ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2666|$1416421146625AXGXu:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1749|$1416421146650rYlZG:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1751|$1416421146690wbwWl:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n11104|$1416421146746ruqpY:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n11218|$1416421146917VSlje:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1181|$1416421146947mJWdN:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n4410|$1416421146977YKvfo:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2704|$1416421147139gZSXr:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1545|$1416421147319hYrhd:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n7417|$1416421147365KwjfG:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n10599|$1416421147845NsqhF:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n10596|$1416421147956gQqxL:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n4740|$1416421147984UxosK:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n9474|$1416421148276PBzjo:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2674|$1416421148463hgdEP:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1135|$1416421148503PVCSJ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1133|$1416421148527HXHip:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1147|$1416421148611eKkbs:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1148|$1416421148648MkrAu:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1146|$1416421148668QVUGu:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n4335|$1416421148781DdywD:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n8905|$1416421148804Jpiyh:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1516|$1416421148831wAJqj:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1144|$1416421149084Xgjxj:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2532|$1416421149221YWtbK:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n8332|$1416421150552eFDMF:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n5634|$1416421154085rTNTk:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1472|$1416421158011hcucm:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1472|$1416421159849QnKcw:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n3745|$1416421159894bPpkh:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n3186|$1416421159972JNyAn:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n3183|$1416421167345vfOuJ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n3134|$1416421171549UUxap:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n7696|$1416421171905quVkq:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n7648|$1416421186652GjIbo:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n3223|$1416421186683vMQxx:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n3891|$1416421194308HHfEQ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2870|$1416421214507wmOTk:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2679|$1416421221554QizEa:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2860|$1416421221583nLOLj:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2659|$1416421227761SornK:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2650|$1416421227795pubFc:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2741|$1416421227823shIQt:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2650|$1416421227852PWaKw:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2652|$1416421227910ebUmX:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2655|$1416421227942waklg:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2563|$1416421228269onXEn:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2724|$1416421228304sqzYP:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2657|$141642206210bmfyE:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2557|$141642206912HrMwZ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n6848|$141642259736bhbbD:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1537|$141642270740OzbNf:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n4990|$14164230341lNztJ:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n3241|$1416445510195uloNs:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3240|$1416445670197icPGo:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2104|$1416473443254xGfiX:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1428|$1416511087782kxJvG:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4736|$14165809161079ZbSSh:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2752|$14166063101465pFkjW:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2745|$14167439957xglZv:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2742|$1416780564253TefsN:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1586|$141683152215uMhuQ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1399|$1416836115142rMYPT:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2257|$14168371138akGnX:arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n1987|$1416866413397IcNvH:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2248|$1416867312435NLKxe:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2242|$1416957540203zlxzY:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2238|$1417013427144QAcHW:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4569|$1417013736175xxFFU:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2027|$1417013967194djfqk:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2095|$141702577014bCGnN:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n2217|$14170296295LeIIC:erikjohnston.com|!cURbafjkfsMDVwdRDQ:matrix.org\n2215|$141704862260MoIBx:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2213|$141704876262RZoSC:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2211|$1417095807380HBzYQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2208|$1417099593526FZWAK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2207|$14170999683OCInL:erikjohnston.com|!cURbafjkfsMDVwdRDQ:matrix.org\n1357|$1417103832613TNbxa:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2164|$1417104408650AOkae:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2194|$14171061421mtTHy:cirrus.arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n2177|$1417125474132OfRkJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1705|$141717609411imsVh:oddvar.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4560|$141718392527KvsmT:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n2180|$14171871451261oziXF:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2177|$14172006202497WEMJY:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2175|$14172035672516GMBsO:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2162|$14173154932688CZReB:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2158|$14173598842724vHlUe:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2144|$14174319322967uGhFp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2031|$14174319332969moien:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2134|$14174443853211dCxto:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2123|$1417459708238uhgEK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2110|$1417477647387oOhWh:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2112|$14174961724cfNYp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1492|$141749957714iAPYf:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1456|$141751963416KpdNZ:vanderkraan.net|!cURbafjkfsMDVwdRDQ:matrix.org\n2083|$141753132241UFuoo:matrix.sammachin.com|!cURbafjkfsMDVwdRDQ:matrix.org\n2061|$1417534621111lzDjs:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1943|$141753604317OlkTF:matrix.grids.be|!cURbafjkfsMDVwdRDQ:matrix.org\n3669|$1417537190278IcTDf:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2278|$141754693188BdygE:oddvar.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2037|$1417618361486Xtzlu:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2035|$1417621378681Cnepc:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2030|$1417634750101SlPLy:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2028|$1417635115137ZayGn:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2025|$1417643008213izCmA:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2024|$1417643021214qoqHj:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2007|$141768665313EpFRR:matrix.soho-piper.de|!cURbafjkfsMDVwdRDQ:matrix.org\n1963|$1417690190323pCAID:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1227|$1417690190324ZjcOJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1752|$1417690202325tTrYJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1987|$1417709089288RlcJA:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1779|$1417715506392MMBRp:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n1448|$1417731087510TybiD:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3236|$1417731103524ljrwn:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1458|$1417802225631KlKgn:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1450|$14178232861VSwey:thewordnerd.info|!cURbafjkfsMDVwdRDQ:matrix.org\n1201|$141791050336lsbKQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1441|$141791152498QxdZc:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1410|$14179509961zWOTG:setkeh.com|!cURbafjkfsMDVwdRDQ:matrix.org\n1409|$14179513534DovFi:setkeh.com|!cURbafjkfsMDVwdRDQ:matrix.org\n1406|$14179928209jxfCB:matrix.telekomlabs.sk|!cURbafjkfsMDVwdRDQ:matrix.org\n1359|$141805643076rYYvE:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3160|$1418062604190xPtfn:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1381|$1418069529275qJGzw:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1379|$1418085574402MALen:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1377|$1418117653503Pnhap:tp.mu|!cURbafjkfsMDVwdRDQ:matrix.org\n1374|$1418121572539VMqay:tp.mu|!cURbafjkfsMDVwdRDQ:matrix.org\n1371|$1418128287664kLdmJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1366|$14182217572077VbmXh:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2948|$14182323242338eGiGq:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1358|$14182346022386PpKtf:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1345|$1418308621344SsEQz:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1163|$141833676153yRNHl:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1338|$1418340260219zrjqQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3110|$1418384259285cIBbw:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n1735|$1418384262286jEIEu:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n1213|$14183914271090SenTN:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3097|$1418653717447wmsFB:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1571|$1418751854151KvUKT:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2510|$1418810403597GzTSk:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1276|$14188899041522kiisW:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2690|$14188901074zWFzq:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1333|$1418898057186nINPL:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2055|$14194369061651aAtyg:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1520|$14194395611711OKCgP:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1110|$14199578692881DvBeI:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2603|$14199596292895twEDn:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1641|$14199667452910VWXpd:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1123|$14201992513483ZophC:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1130|$14202361973922trAfD:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2592|$14204503574252jWbkZ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2571|$142055924810pSmVk:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2188|$142064604367hJWPe:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2491|$14210843042420iAQpO:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2057|$14211396143085lnaxm:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2476|$14211408323111OmzvJ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1886|$14211434303186XKMju:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2457|$14212333482155DFJLF:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1049|$14212333662157nmJTH:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2453|$14212335402164WjLlu:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2452|$14212346622176CbjDN:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2445|$14212550443026wkPPU:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1123|$14213387573870xtLhG:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1821|$1421339257133EvDBw:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n1413|$14213983994187yhCET:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1196|$14220084501192pkWOL:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1388|$14220271749VHYwx:oddvar.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1369|$1422368570498IvhZA:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1367|$1422536094509VOVWC:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1025|$1422611668284InoeS:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1356|$1422697086358IJpYh:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1190|$14230746194356FRKSL:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n-- @ara4n\n. What /is/ going on in the state_groups_state table?!\nsqlite> select count(*) as c, event_id, room_id from state_groups_state group by event_id having c>1000;\n18728|$1416420717069yeQaw:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1334|$1416420717073efgQs:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4103|$1416420717079YOCAM:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17061|$1416420717256OtQnJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17055|$1416420717373CyQzu:localhost|!cURbafjkfsMDVwdRDQ:matrix.org\n11460|$1416420717416rmLEi:snowtree.se|!cURbafjkfsMDVwdRDQ:matrix.org\n17046|$1416420717541tMxRS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17039|$1416420717681PQZlZ:31.48.80.57|!cURbafjkfsMDVwdRDQ:matrix.org\n17038|$1416420717695IfEeI:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n13980|$1416420718205nfVXh:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2197|$1416420718348MiJRP:arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n17027|$1416420718587gBgcl:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17026|$1416420718626WtLwU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17025|$1416420718723rrfUb:leonerd.org.uk|!cURbafjkfsMDVwdRDQ:matrix.org\n17022|$1416420718742aWcZC:negativecurvature.net|!cURbafjkfsMDVwdRDQ:matrix.org\n17021|$1416420719541vTuOk:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17019|$1416420721952opPpr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17017|$1416420722139jQMMX:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17016|$1416420722245JEMUj:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17015|$1416420722378xiuyM:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16979|$1416420722861IKPvF:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17012|$1416420722891lHznP:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17007|$1416420725041TFMYe:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n13047|$1416420725095byNtM:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17005|$1416420725713kkKDz:hrfns.com|!cURbafjkfsMDVwdRDQ:matrix.org\n17002|$1416420728634hhcEF:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n17001|$1416420728770xOTCX:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n16991|$1416420729770iszYu:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16990|$1416420729802Vxmgt:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16362|$1416420730169IMBUn:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16952|$1416420730857BWSuf:localhost|!cURbafjkfsMDVwdRDQ:matrix.org\n5822|$1416420733710niUzv:garden.of.the.hesperides.net|!cURbafjkfsMDVwdRDQ:matrix.org\n14690|$1416420739404anSQd:erikjohnston.com|!cURbafjkfsMDVwdRDQ:matrix.org\n16878|$1416420740732BUIPI:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16865|$1416420741328tNpCM:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16856|$1416420742498NURDH:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16746|$1416420747169LbqDD:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16737|$1416420747516KjAgo:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16667|$1416420748597fYCJL:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1750|$1416420748650ALEbH:oddvar.org|!cURbafjkfsMDVwdRDQ:matrix.org\n14511|$1416420749214zjHnS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4598|$1416420749290udlHc:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16683|$1416420749996HpYrg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n13028|$1416420750731RCRhm:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1144|$1416420751271pSwfl:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n16651|$1416420751468avuPh:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1139|$1416420751515oTpYH:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1247|$1416420751661trOnb:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11159|$1416420752099GiKsg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n13365|$1416420752536lbQfZ:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n11100|$1416420752737lsaMm:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n15396|$1416420752799lDevr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3340|$1416420752986RNzxU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11755|$1416420753058nzRwW:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3204|$1416420753105jepIv:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n15166|$1416420753345DPfTb:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12930|$1416420757058cIVln:oddvar.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3905|$1416420757940YgaFr:arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n9355|$1416420758336HjAWp:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n14947|$1416420758384LlPhN:perlsite.co.uk|!cURbafjkfsMDVwdRDQ:matrix.org\n1010|$1416420758898SoPKi:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n13526|$1416420758924gcmew:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n12094|$1416420759785CZaZi:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12303|$1416420760186ueVaS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n8559|$1416420760559doWho:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12299|$1416420760749tarbd:perlsite.co.uk|!cURbafjkfsMDVwdRDQ:matrix.org\n12298|$1416420764288aMESI:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12297|$1416420764385Bezwf:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12296|$1416420764620SrZqe:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12295|$1416420764815XYYOU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12294|$1416420764910oxoxx:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12293|$1416420764943vNPUg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12292|$1416420765167GIAII:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12216|$1416420765957twmuz:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12290|$1416420767843KZcog:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12288|$1416420768430kqCPR:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12286|$1416420768977qjrsJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12250|$1416420769433iriKL:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12283|$1416420769487kzgHZ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12282|$1416420769839TkpEc:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12281|$1416420769883mbmiP:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12280|$1416420769964YIkcK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12279|$1416420770276OZVvv:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12278|$1416420770308BDbLJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12277|$1416420770355vOHLV:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12276|$1416420770511QVbZP:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12275|$1416420770653FzCWl:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12274|$1416420770695MLBXi:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12063|$1416420770945OiBNK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12270|$1416420770983yvZpg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12269|$1416420771020wBDlp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12266|$1416420771343AsGYg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12265|$1416420771494YxZrr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1127|$1416420771531LamDP:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12263|$1416420771615meROC:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12262|$1416420771674LcEJv:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12261|$1416420771789FgSru:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12260|$1416420771833IxsMK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n6720|$1416420772380xnaFN:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12257|$1416420773136YMAWs:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12256|$1416420773386uUmgL:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12255|$1416420773831aRhEU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n12254|$1416420774091sDPei:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11697|$1416420776189PCIfU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11138|$1416420777391hUXIL:perlsite.co.uk|!cURbafjkfsMDVwdRDQ:matrix.org\n11137|$1416420778621gCEbc:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11136|$1416420779925FddIr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n6177|$1416420781870eDykP:arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n11134|$1416420782075mfgdS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11133|$1416420782378FesIb:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11132|$1416420782443ALDeb:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11131|$1416420782540XjQeq:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11130|$1416420784368obHNx:sw1v.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11129|$1416420786412ZNnEM:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n11122|$1416420786845pNTsS:garden.of.the.hesperides.net|!cURbafjkfsMDVwdRDQ:matrix.org\n7294|$1416420787136OOjli:perlsite.co.uk|!cURbafjkfsMDVwdRDQ:matrix.org\n11120|$1416420787173UGDfP:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n7220|$1416420787210VWMAK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n7290|$1416420787269hLzzC:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n10566|$1416420788313pEEgy:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n10565|$1416420790393yoGdY:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n10564|$1416420790593Aiqkf:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n10563|$1416420792162Kmrsb:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n6703|$1416420796357lXqCS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5567|$1416420797388wToqk:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5600|$1416420797517kIMlV:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5599|$1416420798229qWPPj:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5598|$1416420800107Biych:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5562|$1416420800314VRDdL:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5595|$1416420800390kxXMK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4379|$1416420800542ElLoZ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5593|$1416420800590jvbdF:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5576|$1416420801535tbioV:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5575|$1416420801572gYZWA:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5566|$1416420806122vffRr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5518|$1416420807158uVfVQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1602|$1416420812295wdSTI:snowtree.se|!cURbafjkfsMDVwdRDQ:matrix.org\n5539|$1416420812931FKFbw:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3421|$1416420813934cmWzy:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5537|$1416420814330mKmpu:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5536|$1416420814379evHzf:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5495|$1416420823046AgXHd:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n5185|$1416420826052EEJKQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4919|$1416420826142uCJeQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1168|$1416420826394tOkZQ:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n4965|$1416420826666gqKnw:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4964|$1416420826753JBQSZ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4963|$1416420826981TVtNH:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4714|$1416420829203leIQj:arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n1096|$1416420830271KPsKp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1239|$1416420834316BHbWV:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4002|$1416420834524uTuxw:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4001|$1416420834608FfPgp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3972|$1416420843467mqeBw:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3958|$1416420844496FKHEL:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3954|$1416420845628lhRNm:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3828|$1416420846252riDut:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3943|$1416420846538aXHeS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3881|$1416420849598nihOl:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3914|$1416420849820BWXAo:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3912|$1416420850182DXcTU:snowtree.se|!cURbafjkfsMDVwdRDQ:matrix.org\n3911|$1416420850281vRZHA:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3788|$1416420850817wbVfW:perlsite.co.uk|!cURbafjkfsMDVwdRDQ:matrix.org\n1161|$1416420851112NfpGD:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1127|$1416420851731wNqKS:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3889|$1416420853095KGDzT:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3888|$1416420853143MvZDR:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3885|$1416420854199YsWYb:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3879|$1416420854973HAjgm:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3878|$1416420855236cXoaU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3876|$1416420855438wBkna:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3874|$1416420855597yokdg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3869|$1416420856083YZABC:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3867|$1416420856199ZKlZU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3862|$1416420856512QGtku:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3857|$1416420856805YrmqU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3818|$1416420857342GqSmM:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3851|$1416420857508TOcuH:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3813|$1416420857867VguEm:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3720|$1416420858389munSo:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3800|$1416420858895HCMiK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3829|$1416420861986HKBPg:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3819|$1416420862700lpTSc:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3823|$1416420862754wouYp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2349|$1416420862809fqkmu:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3284|$1416420881907tfMSo:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2807|$1416420882174tftIX:arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n3105|$1416420882365gKDth:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2579|$1416420882423YHwfE:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3313|$1416420882533LakGx:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2859|$1416420882591IaNeP:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3277|$1416420882647vrHND:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3274|$1416420882982TSUAr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3299|$1416420884250mUuIr:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2910|$1416420884345vbjxa:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2565|$1416420884456JKmgp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1086|$1416420884563BosKY:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1161|$1416420885191VRdgl:oddvar.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3252|$1416420885684ZUiip:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3285|$1416420885833sdHVD:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3284|$1416420885897AYGQm:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1030|$1416420886687VDmUZ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3267|$1416420889751UjLby:ply42.com|!cURbafjkfsMDVwdRDQ:matrix.org\n3232|$1416420889857uPRnU:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3263|$1416420890276zZflv:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3051|$1416420891592ydDtW:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3260|$1416420891648Phmiy:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3259|$1416420892257xDLrQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1135|$1416420892624aWeGe:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1373|$1416420910522mQfXQ:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1372|$1416420910529mzqgm:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1368|$1416420910538EkGDl:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1360|$1416420910571GKYlb:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1359|$1416420910579Luior:perlsite.co.uk|!XqBunHwQIXUiqCaoxq:matrix.org\n1358|$1416420910588dZiXc:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1357|$1416420910596DtYDo:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1356|$1416420910606lQtFd:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1355|$1416420910616oFTTZ:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1350|$1416420910784pdqOM:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1229|$1416420910797aBfrs:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1346|$1416420910943cDMHw:localhost|!XqBunHwQIXUiqCaoxq:matrix.org\n1343|$1416420911240NlpYz:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1342|$1416420911262iitPd:192.168.1.7|!XqBunHwQIXUiqCaoxq:matrix.org\n1328|$1416420911472pnYfW:perlsite.co.uk|!XqBunHwQIXUiqCaoxq:matrix.org\n1327|$1416420912022fJsQH:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1319|$1416420913229qPazk:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1317|$1416420914478UxsOL:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1307|$1416420915114lUDNm:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1303|$1416420915300YPOeT:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1301|$1416420915567BMEot:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1300|$1416420915742NQoXP:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1298|$1416420916528LUXWH:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1295|$1416420916884dajjM:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1294|$1416420918249zVeZL:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1283|$1416420930516ucDKo:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1139|$1416420930650ZDaIU:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1229|$1416420945969fiQue:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1226|$1416420948392SjmKV:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1183|$1416420962355lXWmM:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1120|$1416420992944OPvTv:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1113|$1416420994680SdKVt:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1083|$1416421009533vfDhR:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1073|$1416421015341kLOpD:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1049|$1416421032418vKMwW:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1030|$1416421046425hcSIy:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1029|$1416421049924bSkUU:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1027|$1416421050022ayPzD:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1026|$1416421050073wSUwI:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n1014|$1416421055396TJLpQ:matrix.org|!XqBunHwQIXUiqCaoxq:matrix.org\n19328|$1416421146219OLQyu:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n18815|$1416421146223QSTqY:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1265|$1416421146227nKsys:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n9074|$1416421146232QncPa:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1174|$1416421146263glZNK:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n4313|$1416421146274yKWeG:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n14963|$1416421146299YpmVR:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2066|$1416421146309eARPg:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n10068|$1416421146320GCFcw:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n14402|$1416421146329mERPX:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n3183|$1416421146338tpiwT:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n4369|$1416421146381AXjcd:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1492|$1416421146404KhWvd:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n3663|$1416421146432knGyR:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2887|$1416421146445RczWe:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2880|$1416421146512AMdCQ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n5328|$1416421146575SzvoL:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n7614|$1416421146609pJiiJ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2666|$1416421146625AXGXu:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1749|$1416421146650rYlZG:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1751|$1416421146690wbwWl:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n11104|$1416421146746ruqpY:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n11218|$1416421146917VSlje:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1181|$1416421146947mJWdN:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n4410|$1416421146977YKvfo:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2704|$1416421147139gZSXr:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1545|$1416421147319hYrhd:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n7417|$1416421147365KwjfG:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n10599|$1416421147845NsqhF:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n10596|$1416421147956gQqxL:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n4740|$1416421147984UxosK:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n9474|$1416421148276PBzjo:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2674|$1416421148463hgdEP:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1135|$1416421148503PVCSJ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1133|$1416421148527HXHip:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1147|$1416421148611eKkbs:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1148|$1416421148648MkrAu:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1146|$1416421148668QVUGu:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n4335|$1416421148781DdywD:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n8905|$1416421148804Jpiyh:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1516|$1416421148831wAJqj:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1144|$1416421149084Xgjxj:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2532|$1416421149221YWtbK:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n8332|$1416421150552eFDMF:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n5634|$1416421154085rTNTk:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1472|$1416421158011hcucm:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1472|$1416421159849QnKcw:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n3745|$1416421159894bPpkh:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n3186|$1416421159972JNyAn:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n3183|$1416421167345vfOuJ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n3134|$1416421171549UUxap:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n7696|$1416421171905quVkq:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n7648|$1416421186652GjIbo:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n3223|$1416421186683vMQxx:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n3891|$1416421194308HHfEQ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2870|$1416421214507wmOTk:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2679|$1416421221554QizEa:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2860|$1416421221583nLOLj:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2659|$1416421227761SornK:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2650|$1416421227795pubFc:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2741|$1416421227823shIQt:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2650|$1416421227852PWaKw:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2652|$1416421227910ebUmX:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2655|$1416421227942waklg:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2563|$1416421228269onXEn:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2724|$1416421228304sqzYP:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2657|$141642206210bmfyE:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2557|$141642206912HrMwZ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n6848|$141642259736bhbbD:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1537|$141642270740OzbNf:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n4990|$14164230341lNztJ:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n3241|$1416445510195uloNs:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3240|$1416445670197icPGo:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2104|$1416473443254xGfiX:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1428|$1416511087782kxJvG:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4736|$14165809161079ZbSSh:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2752|$14166063101465pFkjW:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2745|$14167439957xglZv:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2742|$1416780564253TefsN:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1586|$141683152215uMhuQ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1399|$1416836115142rMYPT:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2257|$14168371138akGnX:arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n1987|$1416866413397IcNvH:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2248|$1416867312435NLKxe:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2242|$1416957540203zlxzY:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2238|$1417013427144QAcHW:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4569|$1417013736175xxFFU:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2027|$1417013967194djfqk:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2095|$141702577014bCGnN:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n2217|$14170296295LeIIC:erikjohnston.com|!cURbafjkfsMDVwdRDQ:matrix.org\n2215|$141704862260MoIBx:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2213|$141704876262RZoSC:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2211|$1417095807380HBzYQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2208|$1417099593526FZWAK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2207|$14170999683OCInL:erikjohnston.com|!cURbafjkfsMDVwdRDQ:matrix.org\n1357|$1417103832613TNbxa:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2164|$1417104408650AOkae:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2194|$14171061421mtTHy:cirrus.arasphere.net|!cURbafjkfsMDVwdRDQ:matrix.org\n2177|$1417125474132OfRkJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1705|$141717609411imsVh:oddvar.org|!cURbafjkfsMDVwdRDQ:matrix.org\n4560|$141718392527KvsmT:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n2180|$14171871451261oziXF:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2177|$14172006202497WEMJY:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2175|$14172035672516GMBsO:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2162|$14173154932688CZReB:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2158|$14173598842724vHlUe:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2144|$14174319322967uGhFp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2031|$14174319332969moien:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2134|$14174443853211dCxto:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2123|$1417459708238uhgEK:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2110|$1417477647387oOhWh:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2112|$14174961724cfNYp:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1492|$141749957714iAPYf:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1456|$141751963416KpdNZ:vanderkraan.net|!cURbafjkfsMDVwdRDQ:matrix.org\n2083|$141753132241UFuoo:matrix.sammachin.com|!cURbafjkfsMDVwdRDQ:matrix.org\n2061|$1417534621111lzDjs:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1943|$141753604317OlkTF:matrix.grids.be|!cURbafjkfsMDVwdRDQ:matrix.org\n3669|$1417537190278IcTDf:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2278|$141754693188BdygE:oddvar.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2037|$1417618361486Xtzlu:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2035|$1417621378681Cnepc:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2030|$1417634750101SlPLy:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2028|$1417635115137ZayGn:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2025|$1417643008213izCmA:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2024|$1417643021214qoqHj:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2007|$141768665313EpFRR:matrix.soho-piper.de|!cURbafjkfsMDVwdRDQ:matrix.org\n1963|$1417690190323pCAID:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1227|$1417690190324ZjcOJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1752|$1417690202325tTrYJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1987|$1417709089288RlcJA:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1779|$1417715506392MMBRp:jki.re|!cURbafjkfsMDVwdRDQ:matrix.org\n1448|$1417731087510TybiD:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3236|$1417731103524ljrwn:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1458|$1417802225631KlKgn:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1450|$14178232861VSwey:thewordnerd.info|!cURbafjkfsMDVwdRDQ:matrix.org\n1201|$141791050336lsbKQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1441|$141791152498QxdZc:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1410|$14179509961zWOTG:setkeh.com|!cURbafjkfsMDVwdRDQ:matrix.org\n1409|$14179513534DovFi:setkeh.com|!cURbafjkfsMDVwdRDQ:matrix.org\n1406|$14179928209jxfCB:matrix.telekomlabs.sk|!cURbafjkfsMDVwdRDQ:matrix.org\n1359|$141805643076rYYvE:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3160|$1418062604190xPtfn:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1381|$1418069529275qJGzw:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1379|$1418085574402MALen:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1377|$1418117653503Pnhap:tp.mu|!cURbafjkfsMDVwdRDQ:matrix.org\n1374|$1418121572539VMqay:tp.mu|!cURbafjkfsMDVwdRDQ:matrix.org\n1371|$1418128287664kLdmJ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1366|$14182217572077VbmXh:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n2948|$14182323242338eGiGq:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1358|$14182346022386PpKtf:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1345|$1418308621344SsEQz:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1163|$141833676153yRNHl:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n1338|$1418340260219zrjqQ:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3110|$1418384259285cIBbw:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n1735|$1418384262286jEIEu:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n1213|$14183914271090SenTN:matrix.org|!cURbafjkfsMDVwdRDQ:matrix.org\n3097|$1418653717447wmsFB:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1571|$1418751854151KvUKT:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2510|$1418810403597GzTSk:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1276|$14188899041522kiisW:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2690|$14188901074zWFzq:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1333|$1418898057186nINPL:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2055|$14194369061651aAtyg:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1520|$14194395611711OKCgP:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1110|$14199578692881DvBeI:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2603|$14199596292895twEDn:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1641|$14199667452910VWXpd:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1123|$14201992513483ZophC:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1130|$14202361973922trAfD:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2592|$14204503574252jWbkZ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2571|$142055924810pSmVk:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2188|$142064604367hJWPe:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2491|$14210843042420iAQpO:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2057|$14211396143085lnaxm:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2476|$14211408323111OmzvJ:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1886|$14211434303186XKMju:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2457|$14212333482155DFJLF:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1049|$14212333662157nmJTH:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2453|$14212335402164WjLlu:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2452|$14212346622176CbjDN:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n2445|$14212550443026wkPPU:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1123|$14213387573870xtLhG:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1821|$1421339257133EvDBw:jki.re|!zOmsiVucpWbRRDjSwe:matrix.org\n1413|$14213983994187yhCET:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1196|$14220084501192pkWOL:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1388|$14220271749VHYwx:oddvar.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1369|$1422368570498IvhZA:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1367|$1422536094509VOVWC:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1025|$1422611668284InoeS:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1356|$1422697086358IJpYh:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n1190|$14230746194356FRKSL:matrix.org|!zOmsiVucpWbRRDjSwe:matrix.org\n-- @ara4n\n. sqlite_analyzer (http://www.sqlite.org/download.html) is a useful tool ftr. Most of the storage seems to disappears into state_groups_state.\nstate_groups_state really isn't optimized for storage, and I have ideas of how to make it a lot more efficient, but they require architectural/invasive changes of how we store current state.\nI believe, without tooo much evidence, that there was a bug the first time I deployed the state cache to matrix.org that caused us to generate a new state group for every event. (There is also evidence that it was adding state groups for outliers as well.) This is fixed and the rate of growth seems to have slowed down. This is all very much guessing, I haven't had the time to investigate this fully.\nThe DB was 562MB on 6th Jan.\n-- @erikjohnston\n. sqlite_analyzer (http://www.sqlite.org/download.html) is a useful tool ftr. Most of the storage seems to disappears into state_groups_state.\nstate_groups_state really isn't optimized for storage, and I have ideas of how to make it a lot more efficient, but they require architectural/invasive changes of how we store current state.\nI believe, without tooo much evidence, that there was a bug the first time I deployed the state cache to matrix.org that caused us to generate a new state group for every event. (There is also evidence that it was adding state groups for outliers as well.) This is fixed and the rate of growth seems to have slowed down. This is all very much guessing, I haven't had the time to investigate this fully.\nThe DB was 562MB on 6th Jan.\n-- @erikjohnston\n. reopening 'cos we're still not reaping sent_transactions\n-- @ara4n\n. reopening 'cos we're still not reaping sent_transactions\n-- @ara4n\n. Jira watchers: @ara4n @richvdh\n. Links exported from Jira:\nrelates to SPEC-425\n. Jira watchers: @ara4n @richvdh\n. Links exported from Jira:\nrelates to SPEC-425\n. This would be the implementation of SPEC-425\n-- @richvdh\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. This should be fairly easy to implement, since I believe we already have read the necessary files by the time we daemonize. The places that would need to be changed are:\n- Adding config option to: https://github.com/matrix-org/synapse/blob/master/synapse/config/server.py\n- Pass the user/group config to Daemonize: https://github.com/matrix-org/synapse/blob/master/synapse/app/homeserver.py#L282\n-- @erikjohnston\n. This should be fairly easy to implement, since I believe we already have read the necessary files by the time we daemonize. The places that would need to be changed are:\n- Adding config option to: https://github.com/matrix-org/synapse/blob/master/synapse/config/server.py\n- Pass the user/group config to Daemonize: https://github.com/matrix-org/synapse/blob/master/synapse/app/homeserver.py#L282\n-- @erikjohnston\n. Jira watchers: @dbkr\n. Jira watchers: @dbkr\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @erikjohnston @ara4n\n. Links exported from Jira:\nis duplicated by SYN-493\n. Jira watchers: @erikjohnston @ara4n\n. Links exported from Jira:\nis duplicated by SYN-493\n. My first question is: what is the point of the current redactions system? The current implementation of it seems to be trying to do two separate things.\nOriginally, the intent was that redactions should be used to remove content that server admins wouldn't want on their server, e.g. illegal content. In this scenario it's important that admins can cause redacted content to be deleted. The idea was to have an admin API that allowed you to look at the redacted event before deciding whether or not to delete it.\nHowever, people can now redact their own events, which is used as a crude \"retraction\" mechanism. In my opinion these shouldn't be auto deleted (and also shouldn't be flagged to server admins lest they look at the retracted content). For example, if someone sends a bunch of abusive messages into Matrix HQ and later retracts them, moderators still need to be able to see what those messages were when people complain so that they can take the appropriate action.\nOn a more practical level, whether we delete content or not is not something we can enforce on a server. Certainly the first thing I would do would be to disable it on my server, and I'm fairly sure I would not be in the minority in doing that. Why? Because its infuriating to have messages disappear while I'm reading/responding simply because the author decided to or accidentally redacted their event, which has happened several times now. Given this, I'm not entirely sure what the purpose or need of having redacted events auto deleted from any server really is.\nMy opinion on this mess is: we should have separate redact and retract mechanisms and implement the admin API for dealing with redactions, but never delete retractions from the DB (we could possibly have a separate flag for asking server admins to redact the event).\n-- @erikjohnston\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @dbkr\n. Links exported from Jira:\nis blocked by SPEC-116\n. Jira watchers: @dbkr\n. Links exported from Jira:\nis blocked by SPEC-116\n. Jira watchers: @erikjohnston @richvdh\n. Links exported from Jira:\nrelates to SPEC-112\nrelates to https://github.com/matrix-org/synapse/issues/1403\nrelates to SYN-259\n. We now use macaroons, but the token is still in the query param, so presumably still suffers the same problems\n-- @richvdh\n. We now use macaroons, but the token is still in the query param, so presumably still suffers the same problems\n-- @richvdh\n. (copied from SPEC-112)\nSo, this bug had a few references to Macaroons, but I feel that none of the posts that did so explained how Macaroons help - so I'll try and do so.\nThe really nice thing with Macaroons is that anyone can further constrain them, but nobody can remove a constraint once it's added. This allows the client to constrain the macaroon sent back to the server to a very short lifetime (on the order of seconds), while the one it actually holds may have a very long validity period indeed. If anyone sniffs the in-flight Macaroon, it will (by and large) be useless too soon to do them any good.\nIn addition, it can be constrained to the operation in question (if Synapse supported such caveats), so the sniffed macaroon would (say) only be usable for sending messages (and not state events), or perhaps even only to a specific room.\nIt can also be constrained to the user's external IP, which helps even more.\nThis would (partially) resolve https://github.com/matrix-org/synapse/issues/1290, too, so I'm copying it there, although TBH the right solution to that is probably \"Authorization: Macaroon \"\n-- Alex Elsayed\n. Jira watchers: @dbkr @ylecollen\n. Jira watchers: @dbkr @ylecollen\n. I think this is because updating the display name causes synapse to emit join events for every room the user is in. Whenever synapse emits a join event in a room it broadcasts the presence to every remote server in the room. I think sending the presence per remote server per room is what is causing some of the problems.\nHopefully this will be improved by https://github.com/matrix-org/synapse/pull/410\n-- @NegativeMjark\n. [~markjh]: Was this improved?\nLonger term I would like to separate out profile information from joins, and potentially other things to make this nicer.\n-- @erikjohnston\n. I'd also be interested to see if this issue was improved by my recent fix to the way server key handling happens - the bugfix where it requeried every remote server every time...\n-- @leonerd\n. Jira watchers: @dbkr\n. The HS now remembers what email addresses are associated with an account and will only add to this list if it's validated the association. They can still be bound in the ID server without say-so from the HS.\n-- @dbkr\n. Jira watchers: @erikjohnston @leonerd @NegativeMjark\n. Links exported from Jira:\nrelates to SYN-336\n. Some further analysis here on the results of syload under various 2minute tests.\nHammering it with:\n/initialSync requests alone, with no messages or eventstreams ==> no growth.\nSending a message with no local viewers at all (not even the sending user) ==> grows ~8k per message:\ntested [2223 in 2m00s; 18.52/sec]...\nprocess_resource_maxrss |   245891072 |   264699904   +18808832 (8461.01 /call)\nSending a message with only the sending user viewing the room ==> grows ~52k per message\ntested [1869 in 2m00s; 15.57/sec]...\nprocess_resource_maxrss |   285736960 |   384155648   +98418688 (52658.47 /call)\nSending a message with 3 other local viewers as well as the sender ==> grows ~54k per message\ntested [621 in 2m00s; 5.17/sec]...\nprocess_resource_maxrss |   401752064 |   435781632   +34029568 (54798.02 /call)\nSending a message with the same 3 local viewers + remote viewers over federation ==> grows ~52k per message\ntested [509 in 2m00s; 4.24/sec]...\nprocess_resource_maxrss |   442925056 |   469762048   +26836992 (52724.94 /call)\nReceiving a message over federation with all 4 local viewers, but no local senders ==> grows ~52k per message\ntested [572 in 2m00s; 4.77/sec]...\nprocess_resource_maxrss |   472530944 |   502366208   +29835264 (52159.55 /call)\nReceiving a message over federation with no local viewers ==> grows ~13k per message\ntested [535 in 2m00s; 4.46/sec]...\nprocess_resource_maxrss |   504758272 |   511885312   +7127040 (13321.57 /call)\n-- @leonerd\n. It's also interesting to note that with four local actors (1 sender or 3 viewers, or 4 viewers), the leak rate of 52k/message is around four times that of having no local actors, receiving on federation, where it's 13k/message.\n-- @leonerd\n. Is this with or without the caches?\n-- @erikjohnston\n. With; basically stock code off develop. I'll put in a quick oneline hack to just bypass all of the caches and try it again.\n-- @leonerd\n. With the caching layer disabled (by having it not store anything in the dict, so every request looks like a miss)\nSending (no viewers):\nprocess_resource_maxrss |   244072448 |   266092544   +22020096 (9483.25 /call)\nSending (only sender viewing):\nprocess_resource_maxrss |   282673152 |   379551744   +96878592 (53642.63 /call)\nSending (other local viewers):\nprocess_resource_maxrss |   389906432 |   420167680   +30261248 (53089.91 /call)\nSending (local and remote viewers):\nprocess_resource_maxrss |   423378944 |   449429504   +26050560 (56022.71 /call)\nReceiving (local viewers):\nprocess_resource_maxrss |   457654272 |   526893056   +69238784 (128457.86 /call)\nReceiving (no local viewers):\nprocess_resource_maxrss |   534740992 |   534757376   +16384 (29.90 /call)\nThis very last one is somewhat interesting - suggests that actually there isn't a leak when receiving with no viewers, other than the extra usage the cache consumes. This also agrees with my observation on leonerd.org.uk.\n-- @leonerd\n. Now doing some manhole+objgraph based debugging around the first leaking test (local sender + just itself viewing):\nBefore the test:\n```\n\n\n\nobjgraph.show_most_common_types()\ndict                       21171\ntuple                      13741\nfunction                   10282\nfrozendict                 7025\nlist                       3647\nweakref                    3057\nbuiltin_function_or_method 2045\ninstance                   1757\nPointerType                1492\nwrapper_descriptor         1315\n```\n\n\n\nAfter having done tested [1777 in 2m00s; 14.81/sec]:\n```\n\n\n\nobjgraph.show_most_common_types()\ndict                   46240\ntuple                  27002\nfrozendict             21746\nfunction               10992\nlist                   6524\nweakref                3183\n_EventInternalMetadata 3108\nFrozenEvent            3108\ninstance               2589\ncell                   2131\n```\n\n\n\n-- @leonerd\n. Huh; oops. Turns out a lot of those were still coming from the main getEvents LruCache. I'll disable that and try it again...\n-- @leonerd\n. Before:\n```\n\n\n\nobjgraph.show_growth()\nfunction                      10282    +10282\ndict                          10108    +10108\ntuple                          7596     +7596\nlist                           3587     +3587\nweakref                        3234     +3234\nbuiltin_function_or_method     2045     +2045\ninstance                       1759     +1759\nPointerType                    1492     +1492\nwrapper_descriptor             1315     +1315\ntype                           1251     +1251\n```\n\n\n\nAfter doing tested [476 in 2m00s; 3.97/sec]:\n```\n\n\n\nobjgraph.show_growth()\ndict                      11606     +1498\nfrozendict                  780      +780\nlist                       4356      +769\ntuple                      8332      +736\ncell                       1013      +326\nfunction                  10436      +154\nFrozenEvent                 130      +130\n_EventInternalMetadata      130      +130\ninstance                   1886      +127\ninstancemethod              584       +85\n```\n\n\n\nAmusingly there therefore, we could only possibly have leaked 1 list, 1 frozendict and 3 dicts per event, maximum. Everything else grew too little to account for it.\nHmmmmm.\n-- @leonerd\n. Turns out in my previous tests of memory leaking, I forgot about the getEvents LruCache. Running again with that disabled too is much slower, but leaks much less. Confusingly, some of the tests that do more things don't appear to leak, while subsets of that do. I suspect at this point we're not even looking at a leak at all, just extra memory temporarily used for results, etc..., combined with the extra usage in that cache.\nAnnoyingly, maxrss isn't the most useful metric to be looking at here, but I can't work out how to ask Python itself how much memory it thinks it's allocated to internal objects :(\n-- @leonerd\n. Well, that doesn't seem to pan out.\nWe tried an experiment at capping the getEvents cache to 1024 entries, a limit it hit well within a few hours, growing in memory from a restart-time level of 185MiB to 2.3GiB. After that, it stayed at 1024 entries for almost a day, by which point it grew in memory usae to 5.5GiB.\nSo yes, more leakage than just the cache.\n-- @leonerd\n. Looking again at today's graphs after almost a week of continuous uptime shows another curious fact.\nIt seems like the notifiers list grows fairly unbounded, and that sharp increases in memory usage do look correlated with increases in notifiers. This is also supported by my home server, which has no notifiers because there's no client connected to it, and its memory usage hasn't grown a byte in two weeks.\nWe seem to be currently missing an \"open file descriptors\" metric count; I'll add one of those and then we can compare that to the notifier list - maybe we're failing to notice some cases of clients disconnecting?\n-- @leonerd\n. We are attempting to reproduce the memory leak using syload so that we can study the heap with objgraph. Latest develop (5b89052d2f) doesn't appear to leak memory doing basic message sending. In order to try and reproduce the leak we intend to expand the range of things syload tests.\nWe will need to test:\n- ~~Sending messages with listening clients~~\n- ~~Sending messages with transaction ids~~.\n- ~~Sending messages over federation~~.\n- ~~Receiving messages over federation~~.\n- Joining/leaving rooms.\n- ~~Typing/presence with listening clients~~.\n- Sending messages with pushers.\nWe should test Application Servers at some point. But we believe that the memory leak was present before the application server code was added so we shouldn't need to include tests for them in order to find the leak.\n-- @NegativeMjark\n. Have added:\n  [master c91770a] Perform a room send test with client-specified transaction IDs\n-- @leonerd\n. [master d8ccb02] Some load tests involving EDUs - presence and typing notifications\n-- @leonerd\n. I can confirm that this is definitely happening as well. \nI'm running on a Ramnode instance (256M real, 128M swap) and Synapse is getting OOMKilled about every 4 hours. At the moment, I've got my settings scaled way back.\nOne thing I've found eats lots of memory is the webclient. Removing the webclient from my config has slowed the time-to-oomkill fairly heftily. I've been unable to disable the non-HTTPS listener without crashing, and that's fodder for another ticket, but I'd assume that that would cut the memory footprint by about a third or so.\nNote that my instance ( cortex.zaibatsutel.net ) is only joined up to two rooms: #matrix:matrix.org and #matrix-dev:matrix.org\n-- Morgan Gangwere\n. Jira watchers: @leonerd\n. Links exported from Jira:\nis duplicated by SYN-454\nis duplicated by SYN-474\n. Still happening as of 6825eef.\nCurrent stack trace:\n2015-06-29 17:34:58,306 - synapse.http.server - 107 - ERROR - POST-23 - Failed handle request synapse.http.server._async_render on <synapse.rest.client.v1.ClientV1RestResource object at 0x7fed794de6d0>: <SynapseRequest at 0x7fed78ee6908 method=POST uri=/_matrix/client/api/v1/join/%23test-1:localhost:8001?access_token=<redacted> clientproto=HTTP/1.1 site=8002>\nTraceback (most recent call last):\n  File \"/home/leo/src/matrix/synapse/synapse/http/server.py\", line 86, in wrapped_request_handler\n    yield d\n  File \"/home/leo/src/matrix/synapse/env/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1097, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/leo/src/matrix/synapse/env/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/leo/src/matrix/synapse/synapse/http/server.py\", line 213, in _async_render\n    callback_return = yield callback(request, *args)\n  File \"/home/leo/src/matrix/synapse/env/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1097, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/leo/src/matrix/synapse/env/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/leo/src/matrix/synapse/synapse/rest/client/v1/room.py\", line 241, in on_POST\n    ret_dict = yield handler.join_room_alias(user, identifier)\n  File \"/home/leo/src/matrix/synapse/env/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1097, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/leo/src/matrix/synapse/env/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/leo/src/matrix/synapse/synapse/handlers/room.py\", line 395, in join_room_alias\n    yield self._do_join(event, context, room_hosts=hosts, do_auth=True)\n  File \"/home/leo/src/matrix/synapse/env/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1097, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/leo/src/matrix/synapse/env/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/leo/src/matrix/synapse/synapse/handlers/room.py\", line 453, in _do_join\n    context\n  File \"/home/leo/src/matrix/synapse/env/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1099, in _inlineCallbacks\n    result = g.send(result)\n  File \"/home/leo/src/matrix/synapse/synapse/handlers/federation.py\", line 660, in do_invite_join\n    room_queue = self.room_queues[room_id]\nKeyError: '!HVnbDqXJchLIlebJch:localhost:8001'\n-- @leonerd\n. Jira watchers: @ara4n\n. Links exported from Jira:\nis blocked by SYN-305\n. Jira watchers: @erikjohnston\n. Links exported from Jira:\nis duplicated by SYN-329\n. Jira watchers: @leonerd\n. Jira watchers: @dbkr\n. Jira watchers: @ara4n\n. Jira watchers: @erikjohnston\n. Jira watchers: @NegativeMjark @ara4n\n. this is starting to get annoying given our heavy use of SVGs in vector and similar.\nIt's bad practice to return the raw SVG (but better than nothing) given if I upload a 2MB SVG it'd suck if everyone ended up downloading a 2MB SVG thumbnail...\n-- @ara4n\n. Alternatively we could do something like pyrsvg and http://stackoverflow.com/questions/6589358/convert-svg-to-png-in-python\n-- @ara4n\n. Workaround using the original image at https://github.com/matrix-org/synapse/commit/2c838f6459db35ad9812a83184d85a06ca5d940a. Closing this to hand over to that PR\n-- @ara4n\n. had to back this out due to https://github.com/matrix-org/synapse/commit/bd77216d06518ace2ec6213aa0ac0c834e923456\n-- @ara4n\n. Jira watchers: @dbkr @ara4n\n. What's the desired behaviour here?\n-- @dbkr\n. Jira watchers: @leonerd\n. Jira watchers: @leonerd\n. Jira watchers: @dbkr @illicitonion\n. Are you using python from homebrew or OS X's standard python?\n-- @dbkr\n. Response via email was that it's OS X python, which is surprising as OS X I think has libffi built in, and it's fine on my machine with neither libffi nor python from homebrew.\n-- @dbkr\n. Jira watchers: @erikjohnston\n. 2015-04-26 17:48:12,689 - synapse.http.server - 171 - INFO - GET-900823 - Received request: GET /_matrix/client/api/v1/directory/room/\n2015-04-26 17:48:12,690 - synapse.http.server - 199 - ERROR - GET-900823 - string index out of range\nTraceback (most recent call last):\n  File \"synapse/http/server.py\", line 174, in _async_render\n    code, response = yield callback(request, *args)\nIndexError: string index out of range\n2015-04-26 17:48:12,692 - twisted - 455 - INFO - GET-900823 - \"83.166.68.175\" - - [26/Apr/2015:16:48:12 +0000] \"GET /_matrix/client/api/v1/directory/room/ HTTP/1.1\" 500 33 \"-\" \"curl/7.37.1\"\n-- @erikjohnston\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. This would be pretty trivial to do - just needs the config options to be improved, and start_listening in app/homeserver.py to be fixed up to loop over reactor.listenSSL() and/or reactor.listenTCP() - similarly for JsonResource in http/server.py.\n-- @ara4n\n. Jira watchers: @dbkr\n. Jira watchers: @NegativeMjark\n. Instead of checking for keys individually synapse should collect a list of keys that it is missing and query for them in bulk from the perspective servers using the bulk /keys/v2/query API.\n-- @NegativeMjark\n. Jira watchers: @erikjohnston\n. Links exported from Jira:\nrelates to https://github.com/matrix-org/synapse/issues/1322\n. Jira watchers: @erikjohnston\n. Links exported from Jira:\nrelates to SYN-220\n. Jira watchers: @Kegsay\n. The AS went down, so the HS would've been backing off. Matthew's instinct here was right : \"i suspect it's doing exponential backoff on retrying to the AS\".\nI'm open to suggestions on how to improve this, probably providing a way to kick the timers to retry immediately. How the kick is exposed (http poke, shell command, etc) and whether this is spec worthy would make for an interesting discussion.\n-- @Kegsay\n. For record keeping, the transcript from #matrix:\nI've just hit an issue where synapse doesn't seem to be notifying my application service of events. I see the events going from my browser to synapse... but then not on to the application service. homeserver.log doesn't show synapse attempting to send notifications (and they don't show up in tcpdump either). This was working earlier, but then there was a period where my application service was down, and I wonder whether synapse has \"blacklisted\" it? \n-- @Kegsay\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Links exported from Jira:\nis blocked by https://github.com/matrix-org/synapse/issues/1337\n. Jira watchers: @erikjohnston\n. Links exported from Jira:\nblocks https://github.com/matrix-org/synapse/issues/1336\n. Jira watchers: @ara4n\n. Jira watchers: @erikjohnston @ara4n\n. Jira watchers: @leonerd\n. Links exported from Jira:\nblocks SYT-2\n. Jira watchers: @leonerd\n. Links exported from Jira:\nblocks SYT-6\n. Jira watchers: @erikjohnston @ara4n\n. Which version of postgres are you using? It looks like IF NOT EXISTS was only added in postgres 9.1\n-- @erikjohnston\n. We should assert a minimum supported postgres version in the docs and the script, needless to say.\n-- @ara4n\n. Thanks, i have found a solution for this problem (upgrade version of PostgreSQL).\nCan you make a setup scripts which automatically generate database and config on PostgreSQL ?\n-- Jajk\n. bq. We should assert a minimum supported postgres version in the docs and the script, needless to say.\nAgreed.\nbq. Can you make a setup scripts which automatically generate database and config on PostgreSQL ?\nSetting up the database and config requires a fair amount of input from the user, I believe. Though at some point we are planning on creating an interactive config creation script for synapse, so we might be able to include it in that.\n-- @erikjohnston\n. Thanks for all.\n-- Jajk\n. Jira watchers: @erikjohnston\n. Jira watchers: @leonerd\n. Jira watchers: @erikjohnston\n. This is due to the fact we haven't implemented all the reliability layers yet. The one that would help here is: keeping track of unsent transactions/pdus and resending them when we hear from the remote HS (#2526).\n-- @erikjohnston\n. Jira watchers: @leonerd\n. Links exported from Jira:\nis blocked by SYWEB-381\n. Logs:\n2015-08-16 20:29:16,849 - synapse.access.http.8080 - 474 - INFO - GET-1174513 - 83.166.68.175 - 8080 - Received request: GET /_matrix/client/api/v1/rooms/!XqBunHwQIXUiqCaoxq:matrix.org/messages?dir=b&from=t40793-1859290_38524_7520_1&limit=20&access_token=<redacted>\n2015-08-16 20:29:16,892 - synapse.http.outbound - 117 - INFO - GET-1174513 - {GET-O-761471} [matrix.org] Sending request: GET matrix://matrix.org/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24141881326710lKsZH%3Anegativecurvature.net&v=%2414229720470EGZhu%3Ajki.re&v=%24142065226722bWvPd%3Acirrus.arasphere.net&v=%2414187545253uXvFH%3Anegativecurvature.net&v=%2414188127746eKIIM%3Anegativecurvature.net&v=%24141875666110yGiSq%3Ajki.re&v=%24141753589783whHVy%3Aoddvar.org&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414187456425Ojtrz%3Ajki.re&v=%2414259308140PzRgE%3Aleonerd.org.uk&v=%2414187544922mIfPV%3Anegativecurvature.net\n2015-08-16 20:29:19,056 - synapse.http.outbound - 192 - INFO - GET-1174513 - {GET-O-761471} [matrix.org] Result: 200 OK\n2015-08-16 20:29:19,108 - synapse.http.outbound - 117 - INFO - GET-1174513 - {POST-O-761501} [matrix.org] Sending request: POST matrix://matrix.org/_matrix/key/v2/query\n2015-08-16 20:29:19,132 - synapse.http.outbound - 192 - INFO - GET-1174513 - {POST-O-761501} [matrix.org] Result: 200 OK\n2015-08-16 20:29:19,305 - synapse.handlers.federation - 306 - INFO - GET-1174513 - backfill: Got 100 events with 2 edges\n2015-08-16 20:29:19,307 - synapse.http.outbound - 117 - INFO - GET-1174513 - {GET-O-761502} [matrix.org] Sending request: GET matrix://matrix.org/_matrix/federation/v1/state/!XqBunHwQIXUiqCaoxq:matrix.org/?event_id=%24142065164111WeeSw%3Aarasphere.net\n2015-08-16 20:29:19,373 - synapse.http.outbound - 192 - INFO - GET-1174513 - {GET-O-761502} [matrix.org] Result: 500 Internal Server Error\n2015-08-16 20:29:19,373 - synapse.api.errors - 49 - INFO - GET-1174513 - HttpResponseException: 500, Internal Server Error\n2015-08-16 20:29:19,374 - synapse.handlers.federation - 475 - INFO - GET-1174513 - Failed to backfill from matrix.org because 500: Internal Server Error\n2015-08-16 20:29:19,375 - synapse.http.outbound - 117 - INFO - GET-1174513 - {GET-O-761504} [perlsite.co.uk] Sending request: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24141881326710lKsZH%3Anegativecurvature.net&v=%2414229720470EGZhu%3Ajki.re&v=%24142065226722bWvPd%3Acirrus.arasphere.net&v=%2414187545253uXvFH%3Anegativecurvature.net&v=%2414188127746eKIIM%3Anegativecurvature.net&v=%24141875666110yGiSq%3Ajki.re&v=%24141753589783whHVy%3Aoddvar.org&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414187456425Ojtrz%3Ajki.re&v=%2414259308140PzRgE%3Aleonerd.org.uk&v=%2414187544922mIfPV%3Anegativecurvature.net\n2015-08-16 20:29:19,396 - synapse.http.matrixfederationclient - 175 - WARNING - GET-1174513 - {GET-O-761504} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24141881326710lKsZH%3Anegativecurvature.net&v=%2414229720470EGZhu%3Ajki.re&v=%24142065226722bWvPd%3Acirrus.arasphere.net&v=%2414187545253uXvFH%3Anegativecurvature.net&v=%2414188127746eKIIM%3Anegativecurvature.net&v=%24141875666110yGiSq%3Ajki.re&v=%24141753589783whHVy%3Aoddvar.org&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414187456425Ojtrz%3Ajki.re&v=%2414259308140PzRgE%3Aleonerd.org.uk&v=%2414187544922mIfPV%3Anegativecurvature.net: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2015-08-16 20:29:32,720 - synapse.http.matrixfederationclient - 175 - WARNING - GET-1174513 - {GET-O-761504} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24141881326710lKsZH%3Anegativecurvature.net&v=%2414229720470EGZhu%3Ajki.re&v=%24142065226722bWvPd%3Acirrus.arasphere.net&v=%2414187545253uXvFH%3Anegativecurvature.net&v=%2414188127746eKIIM%3Anegativecurvature.net&v=%24141875666110yGiSq%3Ajki.re&v=%24141753589783whHVy%3Aoddvar.org&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414187456425Ojtrz%3Ajki.re&v=%2414259308140PzRgE%3Aleonerd.org.uk&v=%2414187544922mIfPV%3Anegativecurvature.net: TimeoutError - TimeoutError: \n2015-08-16 20:29:37,498 - synapse.http.matrixfederationclient - 175 - WARNING - GET-1174513 - {GET-O-761504} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24141881326710lKsZH%3Anegativecurvature.net&v=%2414229720470EGZhu%3Ajki.re&v=%24142065226722bWvPd%3Acirrus.arasphere.net&v=%2414187545253uXvFH%3Anegativecurvature.net&v=%2414188127746eKIIM%3Anegativecurvature.net&v=%24141875666110yGiSq%3Ajki.re&v=%24141753589783whHVy%3Aoddvar.org&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414187456425Ojtrz%3Ajki.re&v=%2414259308140PzRgE%3Aleonerd.org.uk&v=%2414187544922mIfPV%3Anegativecurvature.net: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2015-08-16 20:29:44,312 - synapse.http.matrixfederationclient - 175 - WARNING - GET-1174513 - {GET-O-761504} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24141881326710lKsZH%3Anegativecurvature.net&v=%2414229720470EGZhu%3Ajki.re&v=%24142065226722bWvPd%3Acirrus.arasphere.net&v=%2414187545253uXvFH%3Anegativecurvature.net&v=%2414188127746eKIIM%3Anegativecurvature.net&v=%24141875666110yGiSq%3Ajki.re&v=%24141753589783whHVy%3Aoddvar.org&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414187456425Ojtrz%3Ajki.re&v=%2414259308140PzRgE%3Aleonerd.org.uk&v=%2414187544922mIfPV%3Anegativecurvature.net: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2015-08-16 20:29:52,343 - synapse.http.matrixfederationclient - 175 - WARNING - GET-1174513 - {GET-O-761504} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24141881326710lKsZH%3Anegativecurvature.net&v=%2414229720470EGZhu%3Ajki.re&v=%24142065226722bWvPd%3Acirrus.arasphere.net&v=%2414187545253uXvFH%3Anegativecurvature.net&v=%2414188127746eKIIM%3Anegativecurvature.net&v=%24141875666110yGiSq%3Ajki.re&v=%24141753589783whHVy%3Aoddvar.org&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414187456425Ojtrz%3Ajki.re&v=%2414259308140PzRgE%3Aleonerd.org.uk&v=%2414187544922mIfPV%3Anegativecurvature.net: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2015-08-16 20:30:10,067 - synapse.http.matrixfederationclient - 175 - WARNING - GET-1174513 - {GET-O-761504} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24141881326710lKsZH%3Anegativecurvature.net&v=%2414229720470EGZhu%3Ajki.re&v=%24142065226722bWvPd%3Acirrus.arasphere.net&v=%2414187545253uXvFH%3Anegativecurvature.net&v=%2414188127746eKIIM%3Anegativecurvature.net&v=%24141875666110yGiSq%3Ajki.re&v=%24141753589783whHVy%3Aoddvar.org&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414187456425Ojtrz%3Ajki.re&v=%2414259308140PzRgE%3Aleonerd.org.uk&v=%2414187544922mIfPV%3Anegativecurvature.net: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2015-08-16 20:30:10,067 - synapse.http.outbound - 192 - INFO - GET-1174513 - {GET-O-761504} [perlsite.co.uk] Result: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2015-08-16 20:30:10,068 - synapse.handlers.federation - 484 - ERROR - GET-1174513 - Failed to backfill from perlsite.co.uk because Connection was refused by other side: 111: Connection refused.\n2015-08-16 20:30:10,070 - synapse.http.outbound - 117 - INFO - GET-1174513 - {GET-O-761852} [localhost] Sending request: GET matrix://localhost/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24141881326710lKsZH%3Anegativecurvature.net&v=%2414229720470EGZhu%3Ajki.re&v=%24142065226722bWvPd%3Acirrus.arasphere.net&v=%2414187545253uXvFH%3Anegativecurvature.net&v=%2414188127746eKIIM%3Anegativecurvature.net&v=%24141875666110yGiSq%3Ajki.re&v=%24141753589783whHVy%3Aoddvar.org&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414187456425Ojtrz%3Ajki.re&v=%2414259308140PzRgE%3Aleonerd.org.uk&v=%2414187544922mIfPV%3Anegativecurvature.net\n2015-08-16 20:30:10,573 - synapse.http.outbound - 192 - INFO - GET-1174513 - {GET-O-761852} [localhost] Result: 401 Unauthorized\n2015-08-16 20:30:10,574 - synapse.api.errors - 49 - INFO - GET-1174513 - HttpResponseException: 401, Unauthorized\n2015-08-16 20:30:10,577 - synapse.http.server - 94 - ERROR - GET-1174513 - 401: Unauthorized\n2015-08-16 20:30:10,579 - synapse.access.http.8080 - 491 - INFO - GET-1174513 - 83.166.68.175 - 8080 - {@&#8203;kegan:matrix.org} Processed request: 53730ms 62B 401 \"GET /_matrix/client/api/v1/rooms/!XqBunHwQIXUiqCaoxq:matrix.org/messages?dir=b&from=t40793-1859290_38524_7520_1&limit=20&access_token=<redacted> HTTP/1.1\" \"Dalvik/1.6.0 (Linux; U; Android 4.4.2; SM-G900F Build/KOT49H)\"\n-- @Kegsay\n. Reading the logs it looks like it was trying to backfill messages from \"perlsite.co.uk\" which seems a bit odd.\n-- @NegativeMjark\n. I tested this, and it works fine to just comment out https://github.com/matrix-org/synapse/blob/master/synapse/push/httppusher.py#L91-L92.\nThe IOS client at least then says \"$user posted in $channel\", so you lose the notification text, but if SYIOS-194 and SYAND-139 are fixed, we should be able to just drop those lines with no loss of functionality, I think.\n-- Tollef Fog Heen\n. Jira watchers: @NegativeMjark\n. Jira watchers: @NegativeMjark @richvdh\n. Links exported from Jira:\nis duplicated by SYN-84\nis duplicated by SYN-460\nrelates to https://github.com/matrix-org/synapse/issues/1377\n. Jira watchers: @dbkr @ylecollen\n. Presumably there are no push notifications working from your home server at all? I can see some coming from your home server in the sygnal logs that are going to  GCM and not being rejected, so it looks like they could be going to an app somewhere. Could you rageshake in the app so we can get the app logs?\n-- @dbkr\n. I just did a rageshake from ryan@\u200bwhatthefuck.computer about an hour ago, and referenced this issue in it\n-- Ryan Rix\n. The android logs don't contain any GCM event\nWhen a GCM push is received, you have \"onMessageReceived\" (you can filter the logs with the tag \"GcmListenerService\").\nThere was a received message \"breaking news : Judge...\" which fulfilles a bing rule.\n-- @ylecollen\n. Thanks. Yannick is investigating: it looks like the GCM isn't getting to your phone for some reason. You might also want to update to the latest client version.\n-- @dbkr\n. Another question about your android device : does it use an official ROM ?\nif the GCM registration fails, you should have a \"listen for events\" in the notifications list.\nThe latest android client tries to perform another GCM registration when the application is debackgrounded.\n-- @ylecollen\n. So after chatting with Ryan yesterday, it seems that the push works properly on my side with an account created on the Ryan's home server\nTo summarize the test i've done on my side with the new account (test on a Asus ZE550KL android 5.0.1\n1- 1:1 chat : i've got the pushes when the application is on foreground, background or the device is in idle mode\n2- private group chat (3 members) : seems ok too\n3- i joined a public rooms on the Ryan's HS : i got the pushes in the 3 cases. I created a dedicated rule to have notifications with sound for this room : it worked properly too.\nTell me if you think i forgot some use cases but everything seems working on my side.\nIs it a device issue ?\n-- @ylecollen\n. Also, per our chat yesterday, I found that GCM is claiming a successful register:\nD/RestAdapterCallback(17534): Succeed : [manageHttpPusher]\nD/GcmRegistrationManager(17534): registerPusher succeeded\nD/GcmRegistrationManager(17534): registerSessions : session @\u200brrix:whatthefuck.computer is registred\nD/GcmRegistrationManager(17534): registerSessions : all the sessions are registred\nD/MXFileStore(17534): loadReceipts 69 rooms in 315 ms\n-- Ryan Rix\n. Jira watchers: @erikjohnston @ara4n\n. Is this different from the current anonymous usage stats reporting?\n-- @erikjohnston\n. this bug was talking about usage stats, but please make sure there's a bug for exposing a queryable admin API (and web interface or shell tools or whatever) so that folks can see who is using their server\n-- @ara4n\n. Jira watchers: @erikjohnston\n. Jira watchers: @oddvar\n. oddvar.org is being maintained, but not as an official matrix.org alternative (and AFAIK it's only advertised on the https://matrix.org/blog/project/matrix-console-web/ page). \nThe original intention was to have a list of known clients/servers which could then turn into a \"recommended servers\" list given that not everyone will/can run their own server. However this is separate to having a \"matrix.org\" grade alternative server that we commit to maintaining as well as matrix.org\n-- @oddvar\n. Links exported from Jira:\nrelates to SYN-520\nrelates to SYN-548\n. Links exported from Jira:\nrelates to https://github.com/matrix-org/synapse/issues/1362\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @NegativeMjark\n. Jira watchers: @leonerd\n. As a solution: I imagine one of these wants removing, though this would change the on-the-wire- format of join messages. We'd have to first ensure that that the federation client can accept a response in either format (which should be a trivial test of the toplevel container type), and additionally publish some sort of announcement for developers of other homeservers to adapt it suitably.\nOr maybe ignore it for v1 and fix that in federation v2?\n-- @leonerd\n. Conclusion: So much other stuff in federation needs fixing that we'll have to adopt a \"v2\" sometime anyway. So we'll just ignore this for now and treat it as a v1 quirk (much like HTTP 1.1's \"referer\" header)\n-- @leonerd\n. Also the /invite API\n-- @leonerd\n. Links exported from Jira:\nis duplicated by SYN-791\n. By @\u200bmatthew:matrix.org: intelfx: I think Ive spotted a minor usability issue: if my HS has a downtime (and comes back afterwards), I dont see any messages which were sent during the downtime until someone sends a message after the downtime. The latter apparently causes the HS to retrieve the missing vertices of the history graph (which is a very neat demonstration of the Matrix core functionality, btw!), but it would be good if a HS was able to \"pull the current HEAD\" off the room (speaking in terms of git) or something like that automatically when it comes back online.\n-- NEB (Bot)\n. Jira watchers: @leonerd\n. Jira watchers: @illicitonion\n. Or at least being able to append on-the-fly\n-- @illicitonion\n. Jira watchers: @leonerd\n. Jira watchers: @illicitonion\n. Jira watchers: @erikjohnston @ara4n\n. Links exported from Jira:\nrelates to https://github.com/matrix-org/synapse/issues/1463\n. It seems we (still) have a really serious regression on federation retries\narasphere is trying to hammer dead homeservers for every event it emits\nsqlite> select * from destinations where destination='tyler.cat';\ntyler.cat|1452137060029|15000000\nimplies to me that it should be trying tyler.cat every 4 hours?  (15 million milliseconds)\nbut i'm seeing every event I emit into matrix hq from arasphere causing at least 5 retries over federation to that server:\n2016-01-07 03:16:24,131 - synapse.http.matrixfederationclient - 183 - WARNING - GET-31539 - {GET-O-371} Sending request failed to tyler.cat: GET matrix://tyler.cat/_matrix/media/v1/download/tyler.cat/LPaWtHDwcLyglmqQlsDKBySP: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2016-01-07 03:17:02,587 - synapse.http.matrixfederationclient - 183 - WARNING -  - {PUT-O-3794} Sending request failed to tyler.cat: PUT matrix://tyler.cat/_matrix/federation/v1/send/1451931591285/: ConnectionRefusedError - ConnectionRefusedError: Connection refused\nConnectionRefusedError - ConnectionRefusedError: Connection refused\n2016-01-07 03:24:20,340 - synapse.http.matrixfederationclient - 183 - WARNING -  - {PUT-O-4600} Sending request failed to tyler.cat: PUT matrix://tyler.cat/_matrix/federation/v1/send/1451931592091/: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n-- @ara4n\n. Hmm, it seems to be working correctly on jki.re\n-- @erikjohnston\n. After restarting arasphere.net to turn on manhole, the retry time for tyler.cat seems to have been reset and is now incrementing correctly.\nNo idea what's going on, will continue to monitor.\n-- @erikjohnston\n. Jira watchers: @leonerd\n. Actually, this seems not quite true.\nWhile send_join appears to be happy, and causes the joining HS to return a 200 OK to the requesting client along with the room ID, any subsequent queries by the user's client on their HS seem to reply with 403 \"user is not in the room\".\n-- @leonerd\n. Ugh. I retract my previous comment. It was working fine if I actually use the room ID, not the room alias.\n-- @leonerd\n. Jira watchers: @erikjohnston @Kegsay @ara4n\n. The JS SDK just calls straight through to the HTTP API. Synapse will try the domain for a while then give up. When testing just now, it was about 30s before coming up with an Internal Server Error. Either way, this is not blocking forever and this is not the JS SDK's role to fix this.\n-- @Kegsay\n. Rather than won't fixing we should make this a spec or synapse bug then, as it's still a major bad UX bug(!!)\n-- @ara4n\n. 30 seconds seems reasonable though?\n-- @Kegsay\n. It's terrible UX if the user mistypes an mxid and then sits there staring at a spinner for 30s.  If Synapse gets an early failure (i.e. a 500 or 404 or connection refused) from the target homeserver, it should fail immediately rather than block and timeout.\n-- @ara4n\n. Jira watchers: @leonerd\n. Jira watchers: @ara4n\n. And again, as of 23:10 GMT today:\nJon (@\u200bjon:terracrypt.net)\nRyan Rix: Vector has shown you as \"typing\" for the last few hours for me\n-- @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @dbkr @ara4n\n. [~markjh] - any thoughts on what could be going on here? I get it roughly 20% of the time currently, which makes presence pretty useless.\n-- @ara4n\n. Jira watchers: @illicitonion\n. Jira watchers: @ara4n\n.  \"remember I told you about that account that is not on any matrix.org rooms? Now I restarted ivarbot, which means full login+initialsync on that client. And now my bob-client got a presence updated with exactly 1000 entries in it. With most of them being offline\n1000:\n  type: m.presence\n  content:\n    presence: offline\n  sender: @\u200bleon:matrix.org\"\n-- @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @leonerd\n. RTT tester \"receive time\" flame graph over the weekend + this morning.\n-- @leonerd\n. What's particularly interesting is that all of the buckets were trending up towards 50%, not 100%.  I'd be tempted to blame that one of the synchrotron was being slow, except that\n- We run three synchrotron currently, and\n- The frontend dendron \"LB\" performs sticky session pinning by access token, so the RTT tester ought to be hitting the same backend synchrotron each time.\n-- @leonerd\n. Well, this is interesting. Last weekend (and in fact Friday) we didn't restart the synapse either, only this time no performance leak has been observed. The receive RTT graph is looking happy and flat, barely even any flecks of blue.\nI wonder if last weekend's slowdown was specific to some of the traffic it saw; e.g. a lot of the freenode DDoS was happening around that time.\n-- @leonerd\n. Jira watchers: @richvdh\n. Jira watchers: @leonerd\n. Jira watchers: @ara4n\n. also, avatar isn't showing up in HQ (on iOS), although bizarrely the displayname is.\n-- @ara4n\n. This looks to be the same as https://github.com/vector-im/vector-web/issues/312\n-- @ara4n\n. Jira watchers: @leonerd\n. Jira watchers: @dbkr\n. Jira watchers: @erikjohnston @ara4n\n. Jira watchers: @Kegsay @NegativeMjark\n. select origin_server_ts, e.event_id, membership from events as e join room_memberships as m on e.event_id = m.event_id where m.room_id = '!PcCidzjUKXHKImhTrB:matrix.org' and user_id = '@&#8203;kegan:matrix.org' order by origin_server_ts;\n origin_server_ts |             event_id              | membership \n~~--~~~~--~~~~--~~~~--~~~~-<ins>~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~-</ins>~~~~--~~~~--~~---\n    1435246759312 | $143524675924484UPVfM:matrix.org  | join\n    1435252267045 | $14352522671614HlgPR:matrix.org   | join\n    1438068632211 | $1438068632152181SIWsE:matrix.org | leave\n    1438614565606 | $14386145652310OXZzN:matrix.org   | join\n    1438897834613 | $1438897834192376KWpIJ:matrix.org | leave\n    1439198697102 | $1439198697319472xTZrN:matrix.org | join\n    1439211973906 | $14392119739431ESAPJ:matrix.org   | leave\n    1439373037727 | $143937303726681HOwZP:matrix.org  | join\n    1439373086587 | $143937308626695ankKB:matrix.org  | leave\n    1439383109186 | $143938310930013UoAsK:matrix.org  | join\n    1439388374713 | $14393883741199UOWWU:matrix.org   | leave\n    1439819915315 | $14398199155696ONYFW:matrix.org   | join\nselect * from current_state_events as c join room_memberships as m on c.event_id = m.event_id where m.room_id = '!PcCidzjUKXHKImhTrB:matrix.org' and user_id = '@&#8203;kegan:matrix.org';\n            event_id             |            room_id             |     type      |     state_key     |            event_id             |      user_id      |      sender       |            room_id             | membership | forgotten \n~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~<ins>~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--</ins>~~~~--~~~~--~~~~--~~~~-<ins>~~~~--~~~~--~~~~--~~~~--~~~~-</ins>~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~<ins>~~--~~~~--~~~~--~~~~--~~~~--</ins>~~~~--~~~~--~~~~--~~~~--~~~~-<ins>~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--</ins>~~~~--~~~~--~~~~--+~~~~--~~~~--~~--\n $14398199155696ONYFW:matrix.org | !PcCidzjUKXHKImhTrB:matrix.org | m.room.member | @&#8203;kegan:matrix.org | $14398199155696ONYFW:matrix.org | @&#8203;kegan:matrix.org | @&#8203;kegan:matrix.org | !PcCidzjUKXHKImhTrB:matrix.org | join       |         0\n-- @NegativeMjark\n. select b.event_id, c.membership from event_to_state_groups as a join state_groups_state as b on a.state_group = b.state_group join room_memberships as c on b.event_id =c.event_id where a.event_id = '$145027524191739jloZh:matrix.org' and b.state_key='@&#8203;kegan:matrix.org';\n             event_id              | membership \n~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--~~~~--+~~~~--~~~~--~~---\n $1438068632152181SIWsE:matrix.org | leave\n-- @NegativeMjark\n. It looks like the state from \"event_to_state_groups\" and the state from \"current_state\" have got out of sync somehow.\n-- @NegativeMjark\n. Jira watchers: @NegativeMjark\n. Jira watchers: @leonerd\n. Jira watchers: @NegativeMjark\n. Jira watchers: @leonerd\n. After some analysis, it seems to be getting slightly confused around synapse/handlers/federation.py lines 310 or so. It computes the list of \"dangling edges\" in the backfilled chunk response (which in our case is an empty set, because the backfill returns the entire history of the room, as it's so small). As this list of edges is empty, it doesn't manages to look up any existing auth events for the room. It then notices that it needs two, and makes outbound requests for them.\n-- @leonerd\n. An initial fix for this bug is now pushed to the paul/https://github.com/matrix-org/synapse/issues/1453 branch. Still to be answered is what might happen if the backfill result doesn't contain the required event, but the local event database still did. I'm unclear currently whether that would therefore appear in the edges list and be picked up, or not.\n-- @leonerd\n. Jira watchers: @richvdh\n. It also returns the redaction itself in the context; which is, at least, unhelpful. Vector doesn't display the redaction event, so this ends up looking like a search result which lacks context.\n-- @richvdh\n. Jira watchers: @dbkr\n. This could be optimised in a few ways, including:\n- Getting a standard answer for the default rules and not running default rules for every user (modulo user_id and display_name)\n- Finding rulesets that only had simple event_match conditions and just matching against those rather than running the full rules.\n-- @dbkr\n. Jira watchers: @ara4n\n. To clarify: the redact API worked as intended (removing human readable contents of a join event: displayname and avatar). However, we have a seperate problem that the redacted data still leaks into the view of the room via the user's global profile data. I am proposing that redacting a this data on a join or profile event should also remove it from the per-room profile data (and that we should implement and uphold per-room profile data). This could be done as a synapse-specific feature for now, hence filing it here rather than blocking it on Matrix spec.\n-- @ara4n\n. Jira watchers: @dbkr @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @erikjohnston\n. Links exported from Jira:\nrelates to SYN-43\n. Jira watchers: @erikjohnston\n. Links exported from Jira:\nrelates to SYN-43\n. Links exported from Jira:\nrelates to https://github.com/matrix-org/synapse/issues/1404\n. Links exported from Jira:\nrelates to https://github.com/matrix-org/synapse/issues/1404\n. Jira watchers: @NegativeMjark\n. Jira watchers: @NegativeMjark\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. A workaround patch I did for Charlie on HQ:\n```\n(env)sierra:synapse matthew$ git diff\ndiff --git a/synapse/rest/client/v1/room.py b/synapse/rest/client/v1/room.py\nindex 926f77d..ed80908 100644\n--- a/synapse/rest/client/v1/room.py\n+++ b/synapse/rest/client/v1/room.py\n@\u200b@\u200b -284,6 +284,7 @\u200b@\u200b class PublicRoomListRestServlet(ClientV1RestServlet):\n @&#8203;defer.inlineCallbacks\n def on_GET(self, request):\n\n\nuser, _, _ = yield self.auth.get_user_by_req(request)\n         handler = self.handlers.room_list_handler\n         data = yield handler.get_public_room_list()\n         defer.returnValue((200, data))\n```\n\n-- @ara4n\n. A workaround patch I did for Charlie on HQ:\n```\n(env)sierra:synapse matthew$ git diff\ndiff --git a/synapse/rest/client/v1/room.py b/synapse/rest/client/v1/room.py\nindex 926f77d..ed80908 100644\n--- a/synapse/rest/client/v1/room.py\n+++ b/synapse/rest/client/v1/room.py\n@\u200b@\u200b -284,6 +284,7 @\u200b@\u200b class PublicRoomListRestServlet(ClientV1RestServlet):\n @&#8203;defer.inlineCallbacks\n def on_GET(self, request):\n\n\nuser, _, _ = yield self.auth.get_user_by_req(request)\n         handler = self.handlers.room_list_handler\n         data = yield handler.get_public_room_list()\n         defer.returnValue((200, data))\n```\n\n-- @ara4n\n. Jira watchers: @Kegsay\n. Jira watchers: @Kegsay\n. Sample requests on my local HS:\nChronological order:\n200 GET OK - http://localhost:8008/_matrix/client/v2_alpha/sync?filter=1&timeout=30000&since=s7749_5_4_14_1&access_token=MDA...\nFailed because I ./synctl stopped it - http://localhost:8008/_matrix/client/v2_alpha/sync?filter=1&timeout=30000&since=s7750_5_4_14_1&access_token=MDA...\n[ ./synctl start ]\nBlocks forever - http://localhost:8008/_matrix/client/v2_alpha/sync?filter=1&timeout=1&since=s7750_5_4_14_1&access_token=MDA...\n[3 mins later]\nBlocks forever - http://localhost:8008/_matrix/client/v2_alpha/sync?filter=1&timeout=1&since=s7750_5_4_14_1&access_token=MDA...\nThis works correctly if timeout=0\n-- @Kegsay\n. Sample requests on my local HS:\nChronological order:\n200 GET OK - http://localhost:8008/_matrix/client/v2_alpha/sync?filter=1&timeout=30000&since=s7749_5_4_14_1&access_token=MDA...\nFailed because I ./synctl stopped it - http://localhost:8008/_matrix/client/v2_alpha/sync?filter=1&timeout=30000&since=s7750_5_4_14_1&access_token=MDA...\n[ ./synctl start ]\nBlocks forever - http://localhost:8008/_matrix/client/v2_alpha/sync?filter=1&timeout=1&since=s7750_5_4_14_1&access_token=MDA...\n[3 mins later]\nBlocks forever - http://localhost:8008/_matrix/client/v2_alpha/sync?filter=1&timeout=1&since=s7750_5_4_14_1&access_token=MDA...\nThis works correctly if timeout=0\n-- @Kegsay\n. Jira watchers: @erikjohnston @NegativeMjark\n. Jira watchers: @erikjohnston @NegativeMjark\n. I've added a sync response exhibiting this bug, but with the \"timeline\" portions of the sync response removed. \n-- @NegativeMjark\n. I've added a sync response exhibiting this bug, but with the \"timeline\" portions of the sync response removed. \n-- @NegativeMjark\n. The request that generated this was (apparently) of the form:\nhttps://matrix.org/_matrix/client/v2_alpha/sync?access_token=...&since=s10734877_250226_35660_410173_3020&timeout=30000\n-- @erikjohnston\n. The request that generated this was (apparently) of the form:\nhttps://matrix.org/_matrix/client/v2_alpha/sync?access_token=...&since=s10734877_250226_35660_410173_3020&timeout=30000\n-- @erikjohnston\n. https://github.com/matrix-org/synapse/pull/481\n-- @erikjohnston\n. https://github.com/matrix-org/synapse/pull/481\n-- @erikjohnston\n. Jira watchers: @erikjohnston @richvdh\n. Jira watchers: @erikjohnston @richvdh\n. Were you joined at the time? What was the history visibility?\n-- @erikjohnston\n. Were you joined at the time? What was the history visibility?\n-- @erikjohnston\n. Yes, I was joined at the time. To be fair, in the above example, the history visibility at the time of the event was unset; however I can also reproduce it on a later event, once the history_visibility was set to invite (but still before I joined the room):\ncurl 'https://matrix.org/_matrix/client/api/v1/events/$143769525125400gNQaz:matrix.org?access_token=<redacted>'\n-- @richvdh\n. Yes, I was joined at the time. To be fair, in the above example, the history visibility at the time of the event was unset; however I can also reproduce it on a later event, once the history_visibility was set to invite (but still before I joined the room):\ncurl 'https://matrix.org/_matrix/client/api/v1/events/$143769525125400gNQaz:matrix.org?access_token=<redacted>'\n-- @richvdh\n. Jira watchers: @dbkr\n. Jira watchers: @dbkr\n. Jira watchers: @ara4n\n. Jira watchers: @ara4n\n. ```\nsierra:~ matthew$ time wget 'https://matrix.org/_matrix/media/v1/download/matrix.org/xNTZpOfZtfJLdhcoKqoIEAAK'\n~~-2016-01-15 17:47:40~~-  https://matrix.org/_matrix/media/v1/download/matrix.org/xNTZpOfZtfJLdhcoKqoIEAAK\nResolving matrix.org... 83.166.64.33\nConnecting to matrix.org|83.166.64.33|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 1853174 (1.8M) [image/jpeg]\nSaving to: 'xNTZpOfZtfJLdhcoKqoIEAAK'\nxNTZpOfZtfJLdhcoKqoIEAAK        12%[=====>                                              ] 231.81K  34.7KB/s   eta 48s \n```\n-- @ara4n\n. ```\nsierra:~ matthew$ time wget 'https://matrix.org/_matrix/media/v1/download/matrix.org/xNTZpOfZtfJLdhcoKqoIEAAK'\n~~-2016-01-15 17:47:40~~-  https://matrix.org/_matrix/media/v1/download/matrix.org/xNTZpOfZtfJLdhcoKqoIEAAK\nResolving matrix.org... 83.166.64.33\nConnecting to matrix.org|83.166.64.33|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 1853174 (1.8M) [image/jpeg]\nSaving to: 'xNTZpOfZtfJLdhcoKqoIEAAK'\nxNTZpOfZtfJLdhcoKqoIEAAK        12%[=====>                                              ] 231.81K  34.7KB/s   eta 48s \n```\n-- @ara4n\n. Jira watchers: @ara4n @richvdh\n. Links exported from Jira:\nrelates to SPEC-141\n. We absolutely need to provide a way to expire data older than a timestamp or N events.  SPEC-141 (and linked bugs) is where this is being tracked - we just haven't got to it yet :)\n-- @ara4n\n. Don't we have this, via the admin API?\n-- @richvdh\n. Also: dup of SYN-361?\n-- @richvdh\n. Jira watchers: @erikjohnston\n. Links exported from Jira:\nrelates to SYJS-41\n. Another issue is that currently Matrix uses a two-phase commit, like so:\nsubmit  :: txn -> server\nconfirm :: txn -> client\n// server frees txn at some point\nBecause the server frees the txn without knowing that the client received the confirmation, this can result in eventual duplicates no matter what storage strategy is used (except buffering forever).\n(Erik raised that resubmitting past 1h is silly; I pointed out that knowing it's been 1h is depressingly nontrivial. Erik pointed out that he hates time; I concurred.)\nA solution would be to use three-phase commit, like so:\nsubmit  :: txn -> server\nconfirm :: txn -> client\nreap    :: txn -> server // server frees txn immediately\nAs reap is inherently idempotent, it does not need a txn itself.\nThis can be optimized further, by having reap take a list of txn IDs to reap, and having it return a list of unreaped txns.\nHowever, this raises the question of unbounded resource usage, if the client never reaps (and as Erik pointed out - unless it must, it won't.)\nMy suggestion is to, for txns submitted via post-reap API versions, reject the transaction with 'm.transactions.unreaped' (or similar) when the number of unreaped transactions is at a (configurable) cap.\nFor txns submitted by pre-reap API versions, some form of autoreaping is needed to avoid either unbounded resource usage or breaking clients. I suggest reaping the single oldest unreaped txn when the cap is reached; though Erik seems to favor a time-based component to the autoreaping.\n-- Alex Elsayed\n. Jira watchers: @erikjohnston\n. Probably due to:  https://github.com/matrix-org/synapse/blob/297ede/synapse/rest/client/v2_alpha/sync.py#L240\n-- @erikjohnston\n. Jira watchers: @erikjohnston\n. Jira watchers: @richvdh\n. Jira watchers: @ara4n @richvdh\n. Links exported from Jira:\nis duplicated by SYN-233\n. Jira watchers: @dbkr\n. The room #testingGuest:matrix.org appears to have started out with guest access enabled and then has it disabled. When loading the timeline for this room, the state is given with guest access enabled (since this reflects the state at the point represented by the start of the timeline) and the timeline then contains an event setting guest access to disabled.\nCurrently this can be witnessed by creating a guest account on matrix.org from vector, clicking on 'Testing Guest Access' in the directory and clicking join. No composer bar appears because the join request succeeds but there is no join event for the user in the room state that comes down.\nUnsure yet whether it's possible to get a new room into this state.\n-- @dbkr\n. Better still, when I sync my account, the room comes down with state guest_access: can_join and no guest_access state events in the timeline (the timeline has 7 events). When I try to join the room as a guest, I get the same room state but a timeline 10 events, of which the last (9) is Amandine setting guest_access to forbidden with event id $145461849139154seYfI:matrix.org!\n-- @dbkr\n. Jira watchers: @erikjohnston\n. Sounds like the spec gets it right, but synapse gets it wrong.  See https://github.com/matrix-org/synapse/pull/596 for more details.\n-- @ara4n\n. So,\n1) all re-joined rooms get affected;\n2) this is not influenced by regenerating or retaining HS's signing keys on db nuke;\n3) In fact, rooms \"heal\" themselves after some time. Exact conditions unknown, but each affected room got \"healed\" after a long enough conversation on that room (where \"long enough\" is not really defined, but exchanging one to three test messages didn't help).\n-- Ivan Shapovalov\n. So we have https://github.com/matrix-org/synapse/issues/1506 already for this thing :)\n-- Ivan Shapovalov\n. Jira watchers: @richvdh\n. Fancy taking a look, [~markjh]?\n-- @richvdh\n. Jira watchers: @erikjohnston\n. Jira watchers: @erikjohnston\n. Links exported from Jira:\nrelates to https://github.com/matrix-org/synapse/issues/1513\n. Jira watchers: @erikjohnston\n. Links exported from Jira:\nrelates to https://github.com/matrix-org/synapse/issues/1512\n. Jira watchers: @erikjohnston\n. Jira watchers: @dbkr @richvdh\n. Links exported from Jira:\nrelates to https://github.com/matrix-org/synapse/issues/1559\n. Irrespective of peeking, apparently.\nJust says, \"Guest access not allowed\"\n-- @dbkr\n. Jira watchers: @dbkr\n. Actually, the error message is the same for guests even if the room is private and they still wouldn't be able to join even if they registered.\n-- @dbkr\n. Jira watchers: @erikjohnston\n. Logs: https://gist.githubusercontent.com/tfheen/e802ceca794f3dcf5d90/raw/d7bf6557fd836350b52831b2135afca4e6cb50eb/gistfile1.txt\n-- @erikjohnston\n. Jira watchers: @manuroe\n. My quick fix is something like this:\n``` bash\n!/bin/bash\nUSER=\"matrix-synapse\"\nGROUP=\"matrix-synapse\"\nPRIVKEYFILE=/etc/matrix-synapse/homeserver.tls.key\nSIGNKEYFILE=/etc/matrix-synapse/homeserver.signing.key\nif ! getent group $GROUP >/dev/null; then\n  addgroup --quiet --system $GROUP\nfi\nif ! getent group $GROUP | cut -d : -f 4 | grep $USER > /dev/null; then\n    addgroup $USER $GROUP\nfi\nif [ -f $PRIVKEYFILE ]; then \n    chgrp $GROUP $PRIVKEYFILE\n    chmod 640 $PRIVKEYFILE\nfi\nif [ -f $SIGNKEYFILE ]; then \n    chgrp $GROUP $SIGNKEYFILE\n    chmod 640 $SIGNKEYFILE\nfi\n```\nThe key files get created by the init script using --generate-config if they don't exist.   If there were an easy way to get tls_private_key_path and signing_key_path from the synapse.config module then the key permissions could be checked on every start.  \n-- Billiam Crashkopf\n. Jira watchers: @erikjohnston @Kegsay @richvdh\n. Was this an actual bug, or was it just cached value?\n-- @erikjohnston\n. This did go away with time IIRC, so cached value.\n-- @Kegsay\n. If initialsync is deprecated, do we care?\n-- @richvdh\n. Jira watchers: @NegativeMjark\n. Jira watchers: @erikjohnston\n. During initial sync?\n-- @erikjohnston\n. By @\u200bkegan:matrix.org: There were 3 federation invites from sw1v, the later two were 2016-05-10 18:49:19,122 - synapse.access.http.8080 - 91 - INFO - PUT-332545 - 109.74.200.146 - 8080 - {sw1v.org} Processed request: 234ms (10ms, 0ms) (15ms/1) 1965B 200 \"PUT /_matrix/federation/v1/invite/!qvexBSLAApNfNMslmn:matrix.org/$14629025581557tcKum:sw1v.org HTTP/1.1 Synapse/0.14.0 (b=develop,3c79bdd)\" and 2016-05-10 18:49:35,746 - synapse.access.http.8080 - 91 - INFO - PUT-333146 - 109.74.200.146 - 8080 - {sw1v.org} Processed request: 33ms (0ms, 0ms) (6ms/1) 2169B 200 \"PUT /_matrix/federation/v1/invite/!qvexBSLAApNfNMslmn:matrix.org/$14629025751558dKCqU:sw1v.org HTTP/1.1 Synapse/0.14.0 (b=develop,3c79bdd)\" \n-- NEB (Bot)\n. Jira watchers: @richvdh\n. Links exported from Jira:\nrelates to SPEC-403\nrelates to SPEC-275\nrelates to SYN-396\n. Jira watchers: @ara4n\n. Trevor was using the wrong IS (matrix.org), which 500'd him. Synapse then choked on the 500.  Synapse shouldn't choke.\n-- @ara4n\n. I also get a lot of:\nJun 12 14:12:07 servername python[2090]: 2016-06-12 14:12:07,645 - synapse.http.server - 314 - WARNING - GET-257- Context have unexpectedly changed <synapse.util.logcontext.LoggingContext object at 0x7fc8cc045440>, <synapse.util.logcontext.LoggingContext object at 0x7fc8cc045fa0>\n-- Elias\n. Jira watchers: @erikjohnston\n. Jira watchers: @ara4n\n. Jira watchers: @dbkr\n. I've now seen a couple of people reporting logs similar to: https://vector.im/develop/#/room/!XqBunHwQIXUiqCaoxq:matrix.org/$146911178742yWwDe:kentshikama.com\nLooks like synapse is picking a dead server to use to join a room then when it doesn't respond, not trying another one. Apparently it still fails even if you try & join again?\n-- @dbkr\n. Jira watchers: @dbkr @richvdh\n. Links exported from Jira:\nrelates to https://github.com/matrix-org/synapse/issues/1574\n. From Dylanger:\n\nBasically I took richvdh's identity\nAnd his domain\nUnder my HS\nHad his privs\nThen gave myself permissions\nI just changed my HS'es domain name \nIn YAML\n\nSo Dylanger has convinced his own HS that he has admin, and used that to generate a kick event, which has then been sent to Yaniel's, which has then accepted the kick despite the broken auth chain.\n-- @richvdh\n. I think the spoofed event ID here is $14691813430ugbai:onedefence.com\n-- @dbkr\n. From [~erikj]:\n\nI don't think it was the spoof that actually caused the issues, but that auth rejected events were accidentally being inserted inserted into the state\n(as opposed to events that were rejected way earlier due to bad sigs)\n\n-- @richvdh\n. Jira watchers: @NegativeMjark\n. Links exported from Jira:\nrelates to https://github.com/matrix-org/synapse/issues/1571\n. What about creating a script in Synapse to import data from a JSON file containing users, messages, rooms, etc?\nCancel/revert a bad import wouldn't be a problem in the case of a new server, if anything goes wrong the database can be recreated.  \n-- Michael Paul\n. Fixed by https://github.com/matrix-org/synapse/pull/997\n-- Will Hunt\n. Jira watchers: @leonerd\n. Jira watchers: @ara4n\n. actually, i'm not entirely sure that's true - perhaps there's a special case that lets you reuse aliases if they don't point to a valid room?  but you can't delete them via API?\n-- @ara4n\n. It looks like this is also easy to reproduce on #homeowners:matrix.org\n-- Benjamin Saunders\n. Jira watchers: @dbkr @erikjohnston\n. Looks like this was caused by a bug fixed by: https://github.com/matrix-org/synapse/pull/1117\n-- @erikjohnston\n. Jira watchers: @leonerd\n. Jira watchers: @leonerd\n. Jira watchers: @ara4n\n. Jira watchers: @dbkr\n. If you go to the (new) room directory and enter loki.sockspls.com in the field, the type a character and delete it a few times, sooner or later you'll get no results. Type something else and the one room will come back.\n-- @dbkr\n. Jira watchers: @dbkr\n. Jira watchers: @dbkr\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?\n. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. Can one of the admins verify this patch?. ",
    "stefanalund": "Twisted version: 13.2.0. \nOS X Version: 10.10.2\n. I installed through git and pip, the tried to start the server according to: https://github.com/matrix-org/synapse#running-your-homeserver\n. Now testing to --user stuff:\nstefan@Stefans-MBP:~/Developer/github/synapse (master)$ python setup.py test\nrunning trial\nTraceback (most recent call last):\n  File \"setup.py\", line 65, in <module>\n    \"\"\"\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/core.py\", line 152, in setup\n    dist.run_commands()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n    self.run_command(cmd)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 972, in run_command\n    cmd_obj.run()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/setuptools/command/test.py\", line 128, in run\n    self.distribution.fetch_build_eggs(self.distribution.install_requires)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/setuptools/dist.py\", line 263, in fetch_build_eggs\n    parse_requirements(requires), installer=self.fetch_build_egg\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py\", line 580, in resolve\n    raise VersionConflict(dist,req) # XXX put more info here\npkg_resources.VersionConflict: (pyOpenSSL 0.13.1 (/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python), Requirement.parse('pyopenssl>=0.14'))\n. (After successfully running python setup.py develop --user)\n. ```\n\n\n\nimport OpenSSL\nprint OpenSSL.file\n/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/OpenSSL/init.pyc\n.\nprint sys.path\n['', '/Users/stefan/Developer/github/synapse', '/Library/Python/2.7/site-packages/pip-6.0.6-py2.7.egg', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python27.zip', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages', '/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old', '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload', '/Users/stefan/Library/Python/2.7/lib/python/site-packages', '/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/PyObjC', '/Library/Python/2.7/site-packages']\n```\n\n\n\nand \nls ~/Library/Python/2.7/lib/python/site-packages/pyOpenSSL*\nPKG-INFO        dependency_links.txt    requires.txt\nSOURCES.txt     installed-files.txt top_level.txt\n. That did the trick, passing all tests now. \nMust admit it's a bit hard to understand, from reading the README, the difference between installing the server through pip or for local development.\nThanks guys.\n. ",
    "mpi4you": "Why closed it exists,...\nRequirement already satisfied (use --upgrade to upgrade): pillow in ./env/lib/python2.7/site-packages\n(env)joni@mpi1:/mpi3/S4/synapse$ python -m synapse.app.homeserver \\\n\n--server-name=mpi1.kurrola.allowed.org \\\n--config-path=homeserver.yaml \\\n--generate-config\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/runpy.py\", line 162, in _run_module_as_main\n    \"main\", fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"/mpi3/S4/synapse/synapse/app/homeserver.py\", line 20, in \n    from synapse.storage import prepare_database, UpgradeDatabaseException\n  File \"synapse/storage/init.py\", line 31, in \n    from .keys import KeyStore\n  File \"synapse/storage/keys.py\", line 20, in \n    import OpenSSL\n  File \"/usr/local/lib/python2.7/dist-packages/OpenSSL/init.py\", line 36, in \n    from OpenSSL import crypto\nImportError: cannot import name crypto\n(env)joni@mpi1:/mpi3/S4/synapse$ \n\nTried to install as python to home and trough git,... same error.\njoni\n. ",
    "NegativeMjark": "\nWe're using ints as filter ids?\n\nApparently so\n\nWhy are we not using auto incrementing row ids?\n\nSo that each user gets their own set of auto-incrementing filter IDs I guess.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. jenkins: test this please\n. jenkins: test this please\n. LGTM\n. LGTM\n. LGTM\n. Do we ever need to evict entries from the cache? Do we expect a server's view of the state before an event to change?\n. It'd be nice to log some hit/miss counters for the cache.\n. Sorry I meant: Do we need to evict entries from the cache upon receiving a new old state event?\n. Otherwise LGTM.\n. Closed because pylru is GPL licensed\n. Might want to install simplejson on jenkins. \n. I've pip installed simplejson in the venv on jenkins.\n. Might be worth having a TODO to limit the cache size. Otherwise LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM. Telling the deferred list to prevent errbacks heading off into the unhandled void seems like a good idea.\n. LGTM\n. LGTM\n. LGTM\n. Apart from having a ',' in the user agent token it looks good.\n. LGTM\n. It might be an idea to bump the soft limit to match the hard limit by default.\nOtherwise LGTM.\n. LGTM\n. Might want to say that it blocks AS signup in the help?\nOtherwise LGTM.\n. I wonder if \"POST  /get_missing_events\" is the best verb/noun combination for this API.\nBut \"POST query_events\" doesn't sound much better.\nOtherwise LGTM.\n. \"POST events_batched\" ? For symmetry with \"GET /event\"\n. Would it make sense to move this to somewhere in synapse/utils rather than synapse/storage/_base.py? Or is the cached wrapper going to be specific to the storage layer?\n. LGTM\n. LGTM\n. Does get_push_rules_enabled_for_user_name take a user_id string?\nIf so it might be better to call it get_push_rules_enabled_for_user for consistency with the other database apis? (such as get_rooms_for_user)\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Jenkins won't build it because it has the wrong version of syutil installed.\n. Is it possible to migrate from postgress back to sqlite3?\n. A lot of the schema files seem to use \"VARCHAR(150)\" for strings. Is there a good reason to pick 150? I tend towards picking 255 as an arbitrary value since that is the maximum that mysql can store using a single length byte https://dev.mysql.com/doc/refman/5.0/en/char.html.\n. I've tested the fix manually against python-2.7.9 and it seems to work. \n. LGTM\n. Other than what I've commented on inline it looks good to me.\n. I think we already running queries on the database before the reactor has started to do the schema version checks before daemonising.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Also the database config and perspective config are included within the config yaml itself rather than being separate files.\n. I've tested it against the old file format a bit and it seems to work\n. It's hard to add new keys or modify existing keys without losing any comments within the yaml. My feeling is that as we include more options within the config the comments added by us or by the admin will be more valuable than being able to run generate config to update an existing file.\n. Also now that we expose the yaml to the config code it is much easier to add or change keys in the config while preserving backwards compatibility because we don't have to include every config key we understand in the generated default config file.\n. I've gone back to allowing synapse to --generate-config with an existing config-file. It will auto generate missing key and logging files, but won't fill out any of the default keys.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM, although might be worth documenting in ObservableDeferred what the semantics of cancelling an observer are.\n. LGTM, although might be worth documenting in ObservableDeferred what the semantics of cancelling an observer are.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM. It might be nice if when a file name is supplied in the URL when downloading then it is used to set the content-disposition file name.\n. LGTM. It might be nice if when a file name is supplied in the URL when downloading then it is used to set the content-disposition file name.\n. LGTM\n. LGTM\n. Could do with a bit of documentation on the methods. Otherwise LGTM.\n. Could do with a bit of documentation on the methods. Otherwise LGTM.\n. LGTM\n. Could you de-duplicate the \"thumbnail\" function by passing the thumbnail path as an argument?\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Closed in favour of PR #245\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Does quit_with_error cause synapse to fail to start? Would it be better to serve up some static content pointing at https://matrix.org/blog/try-matrix-now/ if the client couldn't be found?\n. LGTM\njenkins: retest this please\n. What happens if the config key is a dictionary?\n. jenkins: retest this please\n. LGTM\n. > How do you run the tests with tox?\nYou run:\ntox\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Slightly concerned by the s/user/user_id/. We fairly consistently use \"user_id\" when passing a str, and use \"user\" when passing a UserID object.\nI'd prefer better names, but I'd rather keep consistency with the rest of the code.\n. LGTM\n. LGTM\n. LGTM\n. In particular it fails sytest/tests/50federation/11query-directory.pl.\nWhich seems to be making a request to:\n```\nPUT https://localhost:8001/_matrix/client/api/v1/directory/room/%2350federation-11query-directory:localhost:8001\nHost: localhost\nContent-Type: application/json\n{\"room_id\":\"!the-room-id-for-test:example.org\",\"servers\":[\"example.org\"]}\n```\n. LGTM\n. LGTM\n. I'm not sure about the self documenting config key. I suspect that it could be replaced with something a bit shorter. It would be good if it included a string of characters like \"do_not_use_testing_only\" so that it's easy to spot them if they accidentally turn up in real configs. It might also be an idea to only allow the config if a flag is passed on the cmdline so that it can't be accidentally included in things started with synctl.\n. LGTM\n. LGTM\n. - Does the unsigned key make it into the C-S APIs? In particular does it make it into initialSync?\n- Is this added to the specification?\n- Do we have tests in sytest for it?\n. LGTM.\n. @illicitonion I think I've addressed all your comments.\n. @illicitonion I think I've addressed all your comments.\n. I don't feel particularly strongly about the PaginationConfig stuff. So I think I'll leave as it is for now.\n. I don't feel particularly strongly about the PaginationConfig stuff. So I think I'll leave as it is for now.\n. Is \"m.federate\" specified somewhere?\nOtherwise LGTM\n. Is \"m.federate\" specified somewhere?\nOtherwise LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Other than the short variable names and lack of commentary it LGTM. \n. Other than the short variable names and lack of commentary it LGTM. \n. Might be worth adding docstrings to the other \"count_.\" methods and possibly hinting that they are used for reporting usage stats.\n. Might be worth adding docstrings to the other \"count_.\" methods and possibly hinting that they are used for reporting usage stats.\n. Otherwise LGTM.\n. Otherwise LGTM.\n. Otherwise LGTM.\n. Otherwise LGTM.\n. LGTM\n. LGTM\n. LGTM, other than the merge conflicts\n. LGTM, other than the merge conflicts\n. So having stared at https://github.com/matrix-org/synapse/blob/8899df13bf80a5a3dda2a2df2bc28da0808faa4e/synapse/federation/federation_client.py#L107 a bit I can confirm that the federation send_edu will return immediately so we don't need to worry about yielding on it.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Is there a matrix-doc PR for this?\n. > check_joined_room gets called somewhere else too\nFixed d58edd9\n. LGTM\n. How do these times compare with what synapse did before?\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM modulo not really knowing what the API is supposed to look like.\n. LGTM modulo not really knowing what the API is supposed to look like.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Might want to have a comment referencing https://sqlite.org/optoverview.html#crossjoin\n. LGTM\n. LGTM\n. LGTM\n. Looks good, however we tend to use the google style for docstrings.\nhttps://google.github.io/styleguide/pyguide.html?showone=Comments#Comments\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\nIt might be interesting to try running sytest with the --coverage option so that we get coverage reports from that as well.\n. I've fixed up the git clone to be a bit simpler. Hopefully this still does what @illicitonion wanted.\n. LGTM\n. LGTM\n. LGTM apart from missing docstring and slightly odd sql.\n. LGTM\n. LGTM other than the spelling. I wonder if it would be simpler to leave it to a background update task like the schema update script does.\n. LGTM\n. LGTM although you might want to add a comment explaining why you are doing this.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Other than the slightly curious changelog update it LGTM.\n. LGTM\n. LGTM\n. Might want to update https://github.com/matrix-org/sytest/blob/develop/tests/43search.pl\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM if it works\n. LGTM\n. LGTM\n. LGTM other than the potential fun for guest users since they can't set read receipts.\n. I'm happy for this to land, since the guest access is orthogonal. It's not like the clients have to read the notification count fields.\n. Other than the potential for rate-limiting problems LGTM\n. LGTM\n. Other than the copyright year, LGTM.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. So that clients that change their filter can sync up to a point in the stream to get the things that their new filter accepts that their previous filter didn't.\n. So that clients that change their filter can sync up to a point in the stream to get the things that their new filter accepts that their previous filter didn't.\n. On reflection this is probably a terrible API shape for changing filters mid-stream.\nGiven that guest access was the motivating example for changing filters mid-stream and we want to do guest access differently anyway I'm going to close this. \n. On reflection this is probably a terrible API shape for changing filters mid-stream.\nGiven that guest access was the motivating example for changing filters mid-stream and we want to do guest access differently anyway I'm going to close this. \n. LGTM\n. LGTM\n. LGTM. What's the worst that could happen.\n. LGTM. What's the worst that could happen.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM. Might be worth pointing out to @illicitonion in case there was a sane reason for calling user_joined_room\n. LGTM. Might be worth pointing out to @illicitonion in case there was a sane reason for calling user_joined_room\n. LGTM\n. LGTM\n. Other than breaking a sytest it LGTM.\n. Other than breaking a sytest it LGTM.\n. > Should we be encoding things as JSON at the handler level rather than the rest/api level?\nI dunno, I was encoding the things as JSON here to make the handler APIs for typing/presence match the storage level APIs for events and account data. The idea was to as close to a database row of primitive types as possible. I'm not sure whether this level of the API was the best place to enforce that consistency.\n. > Are there any docs for the design of this API anywhere? In particular this API is trying to fulfil two different styles of replication:\nI've add some more doc-string to explain how the API might be used  1acc319\n. > Are there any docs for the design of this API anywhere? In particular this API is trying to fulfil two different styles of replication:\nI've add some more doc-string to explain how the API might be used  1acc319\n. > For the second case, streaming the \"streams\" meta-stream doesn't give you enough information to intelligently invalidate the caches\nIt gives enough information to pull the changes from the shared database so as to expire the caches. That might give better performance than including the changes directly in the replication stream since the master is performing fewer db queries.\nTrying to replicate the cache invalidation seems like a lot effort, and I struggle to think of when it would be significantly faster.\n. > For the second case, streaming the \"streams\" meta-stream doesn't give you enough information to intelligently invalidate the caches\nIt gives enough information to pull the changes from the shared database so as to expire the caches. That might give better performance than including the changes directly in the replication stream since the master is performing fewer db queries.\nTrying to replicate the cache invalidation seems like a lot effort, and I struggle to think of when it would be significantly faster.\n. LGTM\n. LGTM\n. Is there an change to the matrix-doc for this as well? \n. LGTM\n. LGTM\n. LGTM\n. LGTM if it works\n. Eh, I wanted this to make sytest start up a bit quicker, I've made it poll synapse's http listener instead.\n. It might be nice to include the expiry for the entries and maybe even actually use it as a DNS cache to reduce the request volume.\nOtherwise LGTM\n. LGTM\n. > Does the TreeCache ever get pruned? Or will it fill up with empty dicts?\nThe last bit of the pop method prunes the empty dicts.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Apart from the missing index needed for get_max_topological_token_for_stream_and_room it LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. You should probably create your own Exception type rather than using the base Exception class everywhere.\n. LGTM\n. LGTM\n. probably fine.\n. There are still clients out there that read from this repository. I think the android client and the angular web client based on the apache logs for matrix.org\n. Nothing is writing to it, So you can probably get rid of that half of the API\n. They shouldn't be writing to it. However there are a number of image events and member events in the older rooms that have https:// URLs for images that point to /media/content. Newer clients ignore those URLs cause they tend to have SSL issues cause of the self-signed certificates used by most HSes.\nHowever some of the older clients still read from those URLs. It should be reasonable to stop serving the old URLs, but it will have an effect on the older clients.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. @matrixbot: Please test this\n. LGTM\n. LGTM\n. LGTM if it works.\n. LGTM\n. LGTM\n. >  If so, fine as long as this is reflected in the spec.\nIt matches the spec added in matrix-org/matrix-doc#282.\nI don't believe that this bit of the API was specified before then.\n. Might want to land matrix-org/sytest#195 first. Otherwise LGTM\n. LGTM\n. The m.push_rules is documented by matrix-org/matrix-doc#288\n. @erikjohnston PTAL\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. retest this please\n. LGTM\n. Do we need to update the docs at https://github.com/matrix-org/matrix-doc/blob/master/api/client-server/create_room.yaml#L130 ?\n. LGTM\n. LGTM\n. LGTM apart from the sytests.\n. Code LGTM. Some sytests would be nice. [\"published\", \"unpublished\"] or [\"published\", \"hidden\"] might be better words than [\"public\", \"private\"].\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. I think you need to run apt-get install libxslt1-dev before you can install lxml on debian fwiw.\n. Can we make the entire thing optional somehow? We probably can't run it by default anyway given that it needs an IP blacklist.\n. Other than fixing the typo's and style warnings, it LGTM. I'm slightly concerned by the lack of tests for it though.\n. LGTM\n. Other than maybe indenting, commenting, and docstringing it LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Is there a reason to only deduplicate joins, or could this be used for all membership changes?\n. Is there a reason to only deduplicate joins, or could this be used for all membership changes?\n. LGTM\n. LGTM\n. Maybe add a few comments explaining how the thing is supposed to work inside the queue method.\n. Maybe add a few comments explaining how the thing is supposed to work inside the queue method.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. @erikjohnston I've moved setting __eq__ operators to be inside the tests. 57fa180 PTAL\n. @erikjohnston I've moved setting __eq__ operators to be inside the tests. 57fa180 PTAL\n. I've added the is_exclusive_room back for now, even though it isn't called anywhere. @erikjohnston PTAL\n. @erikjohnston I've opened PR #714 that uses this thing for injecting the handlers into each other.\n. Yep. If there's a dependency cycle then the second object will receive a reference to the first object before the __init__ method is run for the first object.\n. It'll only cause problems if they try to call a method or access a field on the reference before __init__ is called. In theory you could overload __getattribute__ to check that __init__ has been called, but that'll add some overhead to all subsequent accesses. \n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. I have no way to tell if this is fixing the problem or introducing a new one without doing all the things you suggest above. But otherwise LGTM.\n. Otherthan maybe returning an errcode LGTM.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Is this to disable certificate validation? I thought we already had a way to disable certificate validation for testing the identity server.\n. Is this to disable certificate validation? I thought we already had a way to disable certificate validation for testing the identity server.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\u203d\n. LGTM\u203d\n. @matrixbot test this please\n. @matrixbot test this please\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Codewise LGTM, Why are you making it optional?\n. LGTM\n. @matrixbot: retest this please\n. LGTM\n. You'll need to add the new database methods to https://github.com/matrix-org/synapse/blob/develop/synapse/app/pusher.py#L98\nIf you add a cached thing then you'll need to add it to the appropriate thing in https://github.com/matrix-org/synapse/blob/develop/synapse/replication/slave/storage/\n. @ara4n I think either one of my suggestions would make the tests pass. I don't think I have any further comments.\n. Other than adding an incrementing ID so the schema can be updated incrementally. LGTM\n. LGTM.\nWe might want to only allow one report per event per reporter. but like so much else with this PR it can probably wait until later.\n. LGTM\n. Would it be an idea to create a special cached database API for getting the ignore list that could populate the cache with a default empty list if the user hasn't set an ignore list?\n. The logging looks okay, but you probably really want to put the logging into the replication client in synapse/app/pusher.py.\n. LGTM\n. LGTM\n. Looks good, Do we need to do anything special to make the log contexts work?\n. LGTM\n. Maybe this could be called \"delete old event push actions\"?\n. LGTM\n. LGTM\n. LGTM\n. LGTM. Might want to be careful about merging this to make sure it doesn't end up on one of our servers by accident.\n. LGTM. Might want to be careful about merging this to make sure it doesn't end up on one of our servers by accident.\n. LGTM\n. I'm folding it into message handler because the message handler is one of the consumers of the API,\nIt's a bit ugly. I'd like to find a nicer way to do this sort of thing, but I'd like to do it more consistently across the code base.\n. LGTM\n. Other than spelling LGTM\n. LGTM\n. LGTM\n. Other than the topics table it LGTM\n. (they only broke on the merge PR because I let you commit code that broke develop)\n. LGTM\n. LGTM\n. Still LGTM\n. LGTM\n. LGTM\n. LGTM\n. Lgtm\n. Lgtm\n. LGTM\n. Lgtm\n. Lgtm\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. > It'd probably be nice to poke the master on shutdown, so that presence doesn't get stuck for 5 mins\nFixed 48340e4\n@erikjohnston PTAL\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. > clobber_with_worker_config feels a bit fragile to me\nI've replaced it with code that accesses the worker config directly bde1383 364d616\n@erikjohnston PTAL\n. So rather than folding all the worker configs into a single dictionary, I've added \"worker_\" prefixes to all the config keys so that the existing mechanisms for merging multiple config files can be used.\n@erikjohnston PTAL\n. LGTM\n. LGTM provided that sytest is prodded.\n. LGTM\n. LGTM\n. I think the porting script is fine because it uses create_engine rather than calling the DatabaseEngine constructors directly.\n. @erikjohnston Having looked at how postgres handles the UNION all version I'm less sure that it's actually doing what we want here. It turns out that postgres really wants you to format things as (a,b) < (x,y) to use multi-column indexes.\nI've switched everything to use lower_bound/upper_bound from the streams.py and made those functions switch on the database engine to decide which format of SQL to use :(\n. > Can you elaborate?\nWhen I ran that query in a test harness it resulted in a scan over half the index.\n```\nDROP TABLE IF EXISTS t;\nCREATE TABLE t (c INT, a INT, b INT);\nINSERT INTO t (c,a,b) SELECT 0, data., data. FROM\n    (SELECT * FROM generate_series(1,1000000)) AS data;\nCREATE INDEX t_c_a_b ON t USING btree (c,a,b);\nANALYZE t;\nEXPLAIN ANALYSE\n        SELECT a,b FROM t WHERE c = 0 AND a < 500000\n    UNION ALL\n        SELECT a,b FROM t WHERE c = 0 AND a = 500000 AND b < 100\n    ORDER BY a DESC, b DESC LIMIT 1;\n```\nResulted in:\n```\n                                                             QUERY PLAN                                                             \n\nLimit  (cost=24416.59..24416.59 rows=1 width=8) (actual time=123.093..123.094 rows=1 loops=1)\n   ->  Sort  (cost=24416.59..25663.78 rows=498876 width=8) (actual time=123.093..123.093 rows=1 loops=1)\n         Sort Key: t.a DESC, t.b DESC\n         Sort Method: top-N heapsort  Memory: 25kB\n         ->  Append  (cost=0.00..21922.21 rows=498876 width=8) (actual time=0.009..91.581 rows=499999 loops=1)\n               ->  Seq Scan on t  (cost=0.00..16925.00 rows=498875 width=8) (actual time=0.009..71.667 rows=499999 loops=1)\n                     Filter: (a < 500000)\n                     Rows Removed by Filter: 500001\n               ->  Index Only Scan using t_a_b on t t_1  (cost=0.42..8.45 rows=1 width=8) (actual time=0.009..0.009 rows=0 loops=1)\n                     Index Cond: ((a = 500000) AND (b < 100))\n                     Heap Fetches: 0\n Planning time: 0.050 ms\n Execution time: 123.109 ms\n(13 rows)\n```\n. > This presumably still has terrible performance on SQLite?\nYes. Interestingly SQLite does a reasonable job of optimising the UNION ALL version of the query.\nsqlite> EXPLAIN query plan  \n   ...> SELECT a,b FROM t WHERE c = 0 AND (a < 50000 OR (a = 50000 AND b < 100))\n   ...> ORDER BY a DESC, b DESC LIMIT 1;\n0|0|0|SEARCH TABLE t USING COVERING INDEX t_c_a_b (c=?)\nsqlite> EXPLAIN query plan\n   ...>         SELECT a,b FROM t WHERE c = 0 AND a < 50000\n   ...>     UNION ALL\n   ...>         SELECT a,b FROM t WHERE c = 0 AND a = 50000 AND b < 100\n   ...>     ORDER BY a DESC, b DESC LIMIT 1;\n1|0|0|SEARCH TABLE t USING COVERING INDEX t_c_a_b (c=? AND a<?)\n2|0|0|SEARCH TABLE t USING COVERING INDEX t_c_a_b (c=? AND a=? AND b<?)\n0|0|0|COMPOUND SUBQUERIES 1 AND 2 (UNION ALL)\n. So for a sqlite3 database only the UNION ALL form has the desired performance :(\n```\nsqlite> EXPLAIN query plan SELECT a,b FROM t WHERE c = 0 AND (a < 500000 OR (a = 500000 AND b < 100)) ORDER BY a DESC, b DESC LIMIT 1;\n0|0|0|SEARCH TABLE t USING COVERING INDEX t_c_a_b (c=?)\nsqlite> EXPLAIN query plan SELECT a,b FROM t WHERE (c = 0 AND a < 500000) OR (c = 0 AND a = 500000 AND b < 100) ORDER BY a DESC, b DESC LIMIT 1; \n0|0|0|SEARCH TABLE t USING COVERING INDEX t_c_a_b (c=? AND a<?)\n0|0|0|SEARCH TABLE t USING COVERING INDEX t_c_a_b (c=? AND a=? AND b<?)\n0|0|0|USE TEMP B-TREE FOR ORDER BY\nsqlite> EXPLAIN query plan SELECT a,b FROM t WHERE (c = 0 AND a < 500000) UNION ALL SELECT a,b FROM t WHERE (c = 0 AND a = 500000 AND b < 100) ORDER BY a DESC, b DESC LIMIT 1;\n1|0|0|SEARCH TABLE t USING COVERING INDEX t_c_a_b (c=? AND a<?)\n2|0|0|SEARCH TABLE t USING COVERING INDEX t_c_a_b (c=? AND a=? AND b<?)\n0|0|0|COMPOUND SUBQUERIES 1 AND 2 (UNION ALL)\n```\n```\nIn [47]: %time f(\"SELECT a,b FROM t WHERE c = 0 AND (a < 500000 OR (a = 500000 AND b < 100)) ORDER BY a DESC, b DESC LIMIT 1;\", ())\nCPU times: user 61.6 ms, sys: 7 ms, total: 68.6 ms\nWall time: 68 ms\nOut[47]: [(499999, 499999)]\nIn [48]: %time f(\"SELECT a,b FROM t WHERE (c = 0 AND a < 500000) OR (c = 0 AND a = 500000 AND b < 100) ORDER BY a DESC, b DESC LIMIT 1;\", ())\nCPU times: user 279 ms, sys: 8.64 ms, total: 287 ms\nWall time: 287 ms\nOut[48]: [(499999, 499999)]\nin [49]: %time f(\"SELECT a,b FROM t WHERE (c = 0 AND a < 500000) UNION ALL SELECT a,b FROM t WHERE (c = 0 AND a = 500000 AND b < 100) ORDER BY a DESC, b DESC LIMIT 1;\", ())\nCPU times: user 368 us, sys: 75 us, total: 443 us\nWall time: 268 us\nOut[49]: [(499999, 499999)]\n```\n. Complete test harness for postgresql fwiw\nbtree_desc.sql.txt\n. @erikjohnston PTAL\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Amusingly postgres doesn't optimise out queries with a = 0 AND a != 0.\n```\nDROP TABLE IF EXISTS t;\nCREATE TABLE t (c INT, a INT);\nINSERT INTO t (c, a) SELECT 0, data.* FROM\n    (SELECT * FROM generate_series(1,1000000)) AS data;\nCREATE INDEX t_c_a ON t USING btree (c, a);\nANALYZE t;\nEXPLAIN ANALYSE\n    SELECT c, a FROM t WHERE c = 0 AND c != 0;\nEXPLAIN ANALYSE\n    SELECT c, a FROM t WHERE c = 0 AND false;\nSELECT VERSION();\n```\nGives:\n```\nDROP TABLE\nCREATE TABLE\nINSERT 0 1000000\nCREATE INDEX\nANALYZE\n                                           QUERY PLAN                                            \n\nSeq Scan on t  (cost=0.00..19425.00 rows=1 width=8) (actual time=59.416..59.416 rows=0 loops=1)\n   Filter: ((c <> 0) AND (c = 0))\n   Rows Removed by Filter: 1000000\n Planning time: 0.139 ms\n Execution time: 59.434 ms\n(5 rows)\n                                   QUERY PLAN\n\n\nResult  (cost=0.00..14425.00 rows=1 width=8) (actual time=0.001..0.001 rows=0 loops=1)\n   One-Time Filter: false\n   ->  Seq Scan on t  (cost=0.00..14425.00 rows=1 width=8) (never executed)\n Planning time: 0.032 ms\n Execution time: 0.009 ms\n(5 rows)\n                                         version\n\n\nPostgreSQL 9.5.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 4.8.2-19ubuntu1) 4.8.2, 64-bit\n(1 row)\n``\n. Amusingly postgres doesn't optimise out queries witha = 0 AND a != 0`.\n```\nDROP TABLE IF EXISTS t;\nCREATE TABLE t (c INT, a INT);\nINSERT INTO t (c, a) SELECT 0, data.* FROM\n    (SELECT * FROM generate_series(1,1000000)) AS data;\nCREATE INDEX t_c_a ON t USING btree (c, a);\nANALYZE t;\nEXPLAIN ANALYSE\n    SELECT c, a FROM t WHERE c = 0 AND c != 0;\nEXPLAIN ANALYSE\n    SELECT c, a FROM t WHERE c = 0 AND false;\nSELECT VERSION();\n```\nGives:\n```\nDROP TABLE\nCREATE TABLE\nINSERT 0 1000000\nCREATE INDEX\nANALYZE\n                                           QUERY PLAN                                            \n\nSeq Scan on t  (cost=0.00..19425.00 rows=1 width=8) (actual time=59.416..59.416 rows=0 loops=1)\n   Filter: ((c <> 0) AND (c = 0))\n   Rows Removed by Filter: 1000000\n Planning time: 0.139 ms\n Execution time: 59.434 ms\n(5 rows)\n                                   QUERY PLAN\n\n\nResult  (cost=0.00..14425.00 rows=1 width=8) (actual time=0.001..0.001 rows=0 loops=1)\n   One-Time Filter: false\n   ->  Seq Scan on t  (cost=0.00..14425.00 rows=1 width=8) (never executed)\n Planning time: 0.032 ms\n Execution time: 0.009 ms\n(5 rows)\n                                         version\n\n\nPostgreSQL 9.5.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 4.8.2-19ubuntu1) 4.8.2, 64-bit\n(1 row)\n``\n. Hmm, but it does optimise \"a = 0 AND a = 1\". How peculiar.\n. Hmm, but it does optimise \"a = 0 AND a = 1\". How peculiar.\n. Also postgresql seems to optimisea < 0 OR (0 < a AND a < 2) OR 2 < abetter thana != 0 AND a != 2` FWIW.\n(Not sure that's actually useful for us, but it seemed interesting)\nRunning:\n```\nDROP TABLE IF EXISTS t;\nCREATE TABLE t (a INT, b INT);\nINSERT INTO t (a, b) SELECT 0, data. FROM\n    (SELECT * FROM generate_series(1,500000)) AS data;\nINSERT INTO t (a, b) SELECT 2, data. FROM\n    (SELECT * FROM generate_series(1,500000)) AS data;\nCREATE INDEX t_a_b ON t USING btree (a, b);\nANALYZE t;\nEXPLAIN ANALYSE\n    SELECT a,b FROM t WHERE a = 1;\nEXPLAIN ANALYSE\n    SELECT a,b FROM t WHERE a != 0 AND a != 2;\nEXPLAIN ANALYSE\n    SELECT a,b FROM t WHERE a < 0 OR (0 < a AND a < 2) OR 2 < a;\nSELECT VERSION();\n```\nGives:\n```\nDROP TABLE\nCREATE TABLE\nINSERT 0 500000\nINSERT 0 500000\nCREATE INDEX\nANALYZE\n                                                  QUERY PLAN                                                  \n\nIndex Only Scan using t_a_b on t  (cost=0.42..6.19 rows=1 width=8) (actual time=0.018..0.018 rows=0 loops=1)\n   Index Cond: (a = 1)\n   Heap Fetches: 0\n Planning time: 0.151 ms\n Execution time: 0.038 ms\n(5 rows)\n                                          QUERY PLAN\n\n\nSeq Scan on t  (cost=0.00..19425.00 rows=249998 width=8) (actual time=74.798..74.798 rows=0 loops=1)\n   Filter: ((a <> 0) AND (a <> 2))\n   Rows Removed by Filter: 1000000\n Planning time: 0.035 ms\n Execution time: 74.810 ms\n(5 rows)\n                                                 QUERY PLAN\n\n\nBitmap Heap Scan on t  (cost=13.30..17.32 rows=1 width=8) (actual time=0.021..0.021 rows=0 loops=1)\n   Recheck Cond: ((a < 0) OR ((0 < a) AND (a < 2)) OR (2 < a))\n   ->  BitmapOr  (cost=13.30..13.30 rows=1 width=0) (actual time=0.021..0.021 rows=0 loops=1)\n         ->  Bitmap Index Scan on t_a_b  (cost=0.00..4.43 rows=1 width=0) (actual time=0.010..0.010 rows=0 loops=1)\n               Index Cond: (a < 0)\n         ->  Bitmap Index Scan on t_a_b  (cost=0.00..4.43 rows=1 width=0) (actual time=0.003..0.003 rows=0 loops=1)\n               Index Cond: ((0 < a) AND (a < 2))\n         ->  Bitmap Index Scan on t_a_b  (cost=0.00..4.43 rows=1 width=0) (actual time=0.007..0.007 rows=0 loops=1)\n               Index Cond: (2 < a)\n Planning time: 0.071 ms\n Execution time: 0.035 ms\n(11 rows)\n                                         version\n\n\nPostgreSQL 9.5.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 4.8.2-19ubuntu1) 4.8.2, 64-bit\n(1 row)\n``\n. Also postgresql seems to optimisea < 0 OR (0 < a AND a < 2) OR 2 < abetter thana != 0 AND a != 2` FWIW.\n(Not sure that's actually useful for us, but it seemed interesting)\nRunning:\n```\nDROP TABLE IF EXISTS t;\nCREATE TABLE t (a INT, b INT);\nINSERT INTO t (a, b) SELECT 0, data. FROM\n    (SELECT * FROM generate_series(1,500000)) AS data;\nINSERT INTO t (a, b) SELECT 2, data. FROM\n    (SELECT * FROM generate_series(1,500000)) AS data;\nCREATE INDEX t_a_b ON t USING btree (a, b);\nANALYZE t;\nEXPLAIN ANALYSE\n    SELECT a,b FROM t WHERE a = 1;\nEXPLAIN ANALYSE\n    SELECT a,b FROM t WHERE a != 0 AND a != 2;\nEXPLAIN ANALYSE\n    SELECT a,b FROM t WHERE a < 0 OR (0 < a AND a < 2) OR 2 < a;\nSELECT VERSION();\n```\nGives:\n```\nDROP TABLE\nCREATE TABLE\nINSERT 0 500000\nINSERT 0 500000\nCREATE INDEX\nANALYZE\n                                                  QUERY PLAN                                                  \n\nIndex Only Scan using t_a_b on t  (cost=0.42..6.19 rows=1 width=8) (actual time=0.018..0.018 rows=0 loops=1)\n   Index Cond: (a = 1)\n   Heap Fetches: 0\n Planning time: 0.151 ms\n Execution time: 0.038 ms\n(5 rows)\n                                          QUERY PLAN\n\n\nSeq Scan on t  (cost=0.00..19425.00 rows=249998 width=8) (actual time=74.798..74.798 rows=0 loops=1)\n   Filter: ((a <> 0) AND (a <> 2))\n   Rows Removed by Filter: 1000000\n Planning time: 0.035 ms\n Execution time: 74.810 ms\n(5 rows)\n                                                 QUERY PLAN\n\n\nBitmap Heap Scan on t  (cost=13.30..17.32 rows=1 width=8) (actual time=0.021..0.021 rows=0 loops=1)\n   Recheck Cond: ((a < 0) OR ((0 < a) AND (a < 2)) OR (2 < a))\n   ->  BitmapOr  (cost=13.30..13.30 rows=1 width=0) (actual time=0.021..0.021 rows=0 loops=1)\n         ->  Bitmap Index Scan on t_a_b  (cost=0.00..4.43 rows=1 width=0) (actual time=0.010..0.010 rows=0 loops=1)\n               Index Cond: (a < 0)\n         ->  Bitmap Index Scan on t_a_b  (cost=0.00..4.43 rows=1 width=0) (actual time=0.003..0.003 rows=0 loops=1)\n               Index Cond: ((0 < a) AND (a < 2))\n         ->  Bitmap Index Scan on t_a_b  (cost=0.00..4.43 rows=1 width=0) (actual time=0.007..0.007 rows=0 loops=1)\n               Index Cond: (2 < a)\n Planning time: 0.071 ms\n Execution time: 0.035 ms\n(11 rows)\n                                         version\n\n\nPostgreSQL 9.5.3 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 4.8.2-19ubuntu1) 4.8.2, 64-bit\n(1 row)\n```\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Actually LGTM\n. LGTM apart from the test failures\n. LGTM\n. LGTM other than the possibility for KeyErrors\n(Which is probably what's causing the test failures)\n. > Done. Are these tests still 'expected' to fail?\nNo, but they're now failing due to changes that were snuck in while the CI was broken :(.\n. LGTM\n. Lgtm\n. LGTM\n. LGTM\n. Eh LGTM\n. LGTM but we should probably get jenkins working before landing it.\n. LGTM\n. Otherwise LGTM\n. LGTM. Does mean we can get rid of the other bit of de-duplication that happens in persist event?\nhttps://github.com/matrix-org/synapse/blob/develop/synapse/storage/events.py#L439\n. LGTM\n. LGTM apart from the flake8 failures.\n. LGTM\n. LGTM appart from the flake8 failures.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Hmm might be something to do with: https://github.com/matrix-org/synapse/blob/master/synapse/app/synchrotron.py#L122\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Otherwise LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Other than naming it's looking pretty good to me.\n. Other than naming it's looking pretty good to me.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Actually LGTM?\n. Actually LGTM?\n. otherwise LGTM\n. otherwise LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM?\n. LGTM\n. I was going to say that the PR could be called 'Make the appservice \"URL\" optional in the appservice config'. But it's not really optional. Maybe call this 'Make \"URL\" optional in the appservice config in a really awkward way to prevent people omitting it by accident'? :)\n. YAML can represent None using ~ or null FWIW. Which might be a clearer way to explicitly omit the URL?\n. Looks alright apart from the comments.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM appart from the commented out code\n. Maybe explain why we can use WITH Recursive on postgres but not on sqlite?\n. Maybe explain why we can use WITH Recursive on postgres but not on sqlite?\n. LGTM\n. LGTM\n. Tested by matrix-org/sytest#300\n. Tested by matrix-org/sytest#300\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. @erikjohnston This PR might have become non-awful enough to actually land PTAL.\n. @erikjohnston This PR might have become non-awful enough to actually land PTAL.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Otherwise LGTM\n. Otherwise LGTM\n. LGTM\n. LGTM\n. Was this meant to come with a schema update for the depends_on?\n. Was this meant to come with a schema update for the depends_on?\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. > what clients are you expecting to be using this, btw\nNone at the moment. I was thinking of hacking up the JS client to use it at somepoint.\n. LGTM\n. LGTM\n. Might fix vector-im/vector-web#2156\n. LGTM other than possible dodginess when not supplying a highlight=1` clause.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Might fix vector-im/vector-web#2107\n. Might fix vector-im/vector-web#2107\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM <- not sure why I typed that yet. I should probably actually read the PR... :(\n. LGTM\n. LGTM\n. As long as _event_stream_cache already exists on the slave store it will probably be fine.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM apart from the Unit Test failures.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Sure. LGTM\n. I think received_transactions is a write-only table as well. Should we stop writing to it as well while we are at it?\n. LGTM\n. Other than the possibly spurious comment, LGTM.\n. LGTM\n. Please add docstring to explain that this only exists for the cache decorator?\n. LGTM\n. LGTM\n. LGTM\n. It'd be totes awesome to have some metrics on the total number of blocked and executing things for each limiter.\n. LGTM apart from the missing comments. LGTM\n. LGTM.\n. LGTM. LGTM. LGTM I guess.. LGTM. We might want to remove the refresh_tokens database table at somepoint, but fitting that into the schema upgrade process might be subtle given that there are background updates run against that table. So lets leave that for another PR so that it can be reviewed properly.. Other than the stale docstring LGTM.. LGTM. Installing them in one go can occasionally fail if a package depends on a previous package being installed to run thesetup.py``. But it looks like that isn't the case for the current set of dependencies.\n. LGTM. I don't think the application/json mime-type has any parameters? But I guess people are silly enough to put parameters there, otherwise you probably wouldn't be making this PR. https://tools.ietf.org/html/rfc7159#section-11\nLGTM if it works.. I don't think the application/json mime-type has any parameters? But I guess people are silly enough to put parameters there, otherwise you probably wouldn't be making this PR. https://tools.ietf.org/html/rfc7159#section-11\nLGTM if it works.. What is an appservice_id look like ooi?. Please make running setup.py test fail in a helpful fashion rather than:\n```\n/usr/lib/python2.7/dist-packages/setuptools/dist.py:285: UserWarning: Normalizing '0.18.5-rc2' to '0.18.5rc2'\n  normalized_version,\nrunning test\nSearching for pyasn1\nReading https://pypi.python.org/simple/pyasn1/\nBest match: pyasn1 0.1.9\nDownloading https://pypi.python.org/packages/c3/ea/03328a42adfc16a1babbe334ad969f6e27862bcaff9576444d423d2c9257/pyasn1-0.1.9-py2.7.egg#md5=08eef0e822233609f6cad55b419ae00c\nProcessing pyasn1-0.1.9-py2.7.egg\nMoving pyasn1-0.1.9-py2.7.egg to /home/testmarkjh/synapse/.eggs\nInstalled /home/testmarkjh/synapse/.eggs/pyasn1-0.1.9-py2.7.egg\nSearching for pysaml2<4.0.0,>=3.0.0\nReading https://pypi.python.org/simple/pysaml2/\nBest match: pysaml2 3.0.2\nDownloading https://pypi.python.org/packages/a0/c6/71f2944e8d192f700c28793c6522e1adcf844330f910b4c9dba5e282bb4d/pysaml2-3.0.2.tar.gz#md5=9a618b472c3057fadaa97a1414be9a6d\nProcessing pysaml2-3.0.2.tar.gz\nWriting /tmp/easy_install-8JxVNl/pysaml2-3.0.2/setup.cfg\nRunning pysaml2-3.0.2/setup.py -q bdist_egg --dist-dir /tmp/easy_install-8JxVNl/pysaml2-3.0.2/egg-dist-tmp-2vMdmn\nwarning: no files found matching 'README'\ncreating /home/testmarkjh/synapse/.eggs/pysaml2-3.0.2-py2.7.egg\nExtracting pysaml2-3.0.2-py2.7.egg to /home/testmarkjh/synapse/.eggs\nInstalled /home/testmarkjh/synapse/.eggs/pysaml2-3.0.2-py2.7.egg\nTraceback (most recent call last):\n  File \"./setup.py\", line 83, in \n    scripts=[\"synctl\"] + glob.glob(\"scripts/*\"),\n  File \"/usr/lib/python2.7/distutils/core.py\", line 151, in setup\n    dist.run_commands()\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n    self.run_command(cmd)\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 972, in run_command\n    cmd_obj.run()\n  File \"/usr/lib/python2.7/dist-packages/setuptools/command/test.py\", line 150, in run\n    self.distribution.install_requires)\n  File \"/usr/lib/python2.7/dist-packages/setuptools/dist.py\", line 313, in fetch_build_eggs\n    replace_conflicting=True,\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/init.py\", line 825, in resolve\n    dist = best[req.key] = env.best_match(req, ws, installer)\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/init.py\", line 1063, in best_match\n    dist = working_set.find(req)\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/init.py\", line 700, in find\n    raise VersionConflict(dist, req)\npkg_resources.VersionConflict: (Jinja2 2.7.2 (/usr/lib/python2.7/dist-packages), Requirement.parse('Jinja2>=2.8'))\n`\n. Please make runningsetup.py test`` fail in a helpful fashion rather than:\n```\n/usr/lib/python2.7/dist-packages/setuptools/dist.py:285: UserWarning: Normalizing '0.18.5-rc2' to '0.18.5rc2'\n  normalized_version,\nrunning test\nSearching for pyasn1\nReading https://pypi.python.org/simple/pyasn1/\nBest match: pyasn1 0.1.9\nDownloading https://pypi.python.org/packages/c3/ea/03328a42adfc16a1babbe334ad969f6e27862bcaff9576444d423d2c9257/pyasn1-0.1.9-py2.7.egg#md5=08eef0e822233609f6cad55b419ae00c\nProcessing pyasn1-0.1.9-py2.7.egg\nMoving pyasn1-0.1.9-py2.7.egg to /home/testmarkjh/synapse/.eggs\nInstalled /home/testmarkjh/synapse/.eggs/pyasn1-0.1.9-py2.7.egg\nSearching for pysaml2<4.0.0,>=3.0.0\nReading https://pypi.python.org/simple/pysaml2/\nBest match: pysaml2 3.0.2\nDownloading https://pypi.python.org/packages/a0/c6/71f2944e8d192f700c28793c6522e1adcf844330f910b4c9dba5e282bb4d/pysaml2-3.0.2.tar.gz#md5=9a618b472c3057fadaa97a1414be9a6d\nProcessing pysaml2-3.0.2.tar.gz\nWriting /tmp/easy_install-8JxVNl/pysaml2-3.0.2/setup.cfg\nRunning pysaml2-3.0.2/setup.py -q bdist_egg --dist-dir /tmp/easy_install-8JxVNl/pysaml2-3.0.2/egg-dist-tmp-2vMdmn\nwarning: no files found matching 'README'\ncreating /home/testmarkjh/synapse/.eggs/pysaml2-3.0.2-py2.7.egg\nExtracting pysaml2-3.0.2-py2.7.egg to /home/testmarkjh/synapse/.eggs\nInstalled /home/testmarkjh/synapse/.eggs/pysaml2-3.0.2-py2.7.egg\nTraceback (most recent call last):\n  File \"./setup.py\", line 83, in \n    scripts=[\"synctl\"] + glob.glob(\"scripts/*\"),\n  File \"/usr/lib/python2.7/distutils/core.py\", line 151, in setup\n    dist.run_commands()\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n    self.run_command(cmd)\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 972, in run_command\n    cmd_obj.run()\n  File \"/usr/lib/python2.7/dist-packages/setuptools/command/test.py\", line 150, in run\n    self.distribution.install_requires)\n  File \"/usr/lib/python2.7/dist-packages/setuptools/dist.py\", line 313, in fetch_build_eggs\n    replace_conflicting=True,\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/init.py\", line 825, in resolve\n    dist = best[req.key] = env.best_match(req, ws, installer)\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/init.py\", line 1063, in best_match\n    dist = working_set.find(req)\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/init.py\", line 700, in find\n    raise VersionConflict(dist, req)\npkg_resources.VersionConflict: (Jinja2 2.7.2 (/usr/lib/python2.7/dist-packages), Requirement.parse('Jinja2>=2.8'))\n`\n. Without your changes runningsetup.py test`` on my box installs tox and runs the tests.\ncat /etc/lsb-release \nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=14.04\nDISTRIB_CODENAME=trusty\nDISTRIB_DESCRIPTION=\"Ubuntu 14.04.5 LTS\". Without your changes running setup.py test on my box installs tox and runs the tests.\ncat /etc/lsb-release \nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=14.04\nDISTRIB_CODENAME=trusty\nDISTRIB_DESCRIPTION=\"Ubuntu 14.04.5 LTS\". On a clean account without a virtualenv.\nWith a virtualenv it fails in the way you describe.. On a clean account without a virtualenv.\nWith a virtualenv it fails in the way you describe.. Although pip install virutalenv; python setup.py test seems to work fine.. Although pip install virutalenv; python setup.py test seems to work fine.. I'm not trying to argue that you should make setup.py test run tox correctly fwiw. I'm happy to see that hack die.\nIt'd just be nice to make setup.py test give a more helpful error message.. I'm not trying to argue that you should make setup.py test run tox correctly fwiw. I'm happy to see that hack die.\nIt'd just be nice to make setup.py test give a more helpful error message.. Can you put back the Tox command, but rather than making it run tox, could it just print an error explaining how people are supposed to run the tests?. I don't think people should ever run the default implementation of setup.py test fwiw.. In fact if we can discourage people from running setup.py at all it'd be nice. It exists entirely as a way for pip, and the debian packaging tools to learn the dependencies and the package metadata.. Maybe link to the README once the README has the correct instructions?. LGTM. Presumably https://github.com/matrix-org/sytest/pull/320 needs updating as well?. We already point one of twisted logging systems at the python logging system in https://github.com/matrix-org/synapse/blob/master/synapse/config/logger.py#L183-L184\nFrom reading https://twistedmatrix.com/documents/current/core/howto/logging.html it seems that the PythonLoggingObserver is part of a legacy logging framework.\nIt might make sense to replace PythonLoggingObserver with the STDLibLogObserver rather than adding it as an additional observer.\nAlso setting up the observer in config/logger.py will mean that it will work correctly in worker processes in addition to the main synapse process.. Closing in favour of #1731. It might be worth noting in the comment that this disables HTTP client retries entirely.\nhttps://github.com/matrix-org/synapse/blob/master/synapse/http/matrixfederationclient.py#L189\nAlso worth noting in the comment that this increases the chances of falling back to fetching state, which curiously isn't guarded by the same lock as the get_missing_events.\nAlso might be worth mentioning in the comment that we don't want to block for a long time because we are holding a lock on the room that could block other transactions that needed to fetch missing events.\nOther than lack of comments LGTM.\n. LGTM. Looks like https://github.com/matrix-org/synapse/blob/v0.18.5/synapse/federation/transaction_queue.py#L146-L170 doesn't have a check to make sure we only send events from this server.. This was probably introduced when we split out the federation sender to a worker and the code was rewritten to pull events from the database. #1635. It looks like synapse pre-0.18.5 used to send messages on behalf of other servers under certain circumstances. https://github.com/matrix-org/synapse/pull/1635/files#diff-3f6de39b112e0c501c3c2925a571b908L850\nI guess that was why the check to ensure the event came from this server was omitted from #1635.. #1764 might fix this.. I've removed the\nif event.type == EventTypes.Member:\n\ufffc      if event.content[\"membership\"] == Membership.JOIN:\n\ufffc             destinations.add(get_domain_from_id(event.state_key))\nbecause it would only have been used to send a join event to a server that joined, and that server  already has event because it created it. (all join events are created by the server that is joining the room.). We limit the prev_events on one of the code paths:\nhttps://github.com/matrix-org/synapse/blob/v0.18.5/synapse/handlers/message.py#L427\nHowever the code path at:\nhttps://github.com/matrix-org/synapse/blob/v0.18.5/synapse/handlers/room_member.py#L291\nhttps://github.com/matrix-org/synapse/blob/v0.18.5/synapse/handlers/room_member.py#L72\nhttps://github.com/matrix-org/synapse/blob/v0.18.5/synapse/handlers/message.py#L225\nhttps://github.com/matrix-org/synapse/blob/v0.18.5/synapse/handlers/message.py#L416\nUses an unlimited number of prev events loaded at:\nhttps://github.com/matrix-org/synapse/blob/v0.18.5/synapse/handlers/room_member.py#L209\n. LGTM. (although capitalisation). LGTM. (although capitalisation). The query should probably be:\nSELECT user_id, MAX(stream_id) FROM (SELECT user_id, stream_id FROM device_inbox ORDER BY stream_id DESC limit 100000) AS a GROUP BY user_id;\n```\n                                                         QUERY PLAN                                                         \n\nHashAggregate  (cost=12044.46..12059.26 rows=1480 width=27)\n   Group Key: device_inbox.user_id\n   ->  Limit  (cost=0.43..10544.46 rows=100000 width=27)\n         ->  Index Scan Backward using device_inbox_stream_id on device_inbox  (cost=0.43..508668.03 rows=4824225 width=27)\n```\n. The query should probably be:\nSELECT user_id, MAX(stream_id) FROM (SELECT user_id, stream_id FROM device_inbox ORDER BY stream_id DESC limit 100000) AS a GROUP BY user_id;\n```\n                                                         QUERY PLAN                                                         \n\nHashAggregate  (cost=12044.46..12059.26 rows=1480 width=27)\n   Group Key: device_inbox.user_id\n   ->  Limit  (cost=0.43..10544.46 rows=100000 width=27)\n         ->  Index Scan Backward using device_inbox_stream_id on device_inbox  (cost=0.43..508668.03 rows=4824225 width=27)\n```\n. This causes an error when processing incoming events with a low depth. I dunno how much of an impact it has since old events will need to be backfilled anyway so it's not obvious how much value we gain by processing the ones we receive via the federation send API.\nhttps://github.com/matrix-org/synapse/blob/v0.18.7-rc2/synapse/federation/federation_server.py#L559. LGTM. LGTM. LGTM codewise but I don't think it'll actually fix the perf for device_inbox prefill since the query is doing an index scan rather than a backwards index scan. See query plans #1768.. K, makes sense. (would be really awesome if we could tune this on a worker by worker basis, but I digress).. Does this index actually help? What does the explain look like for the queries before/after?\nIs this trying to fix #1768 ?. Hmm the only change I see is that it's using an index only scan now, which looks like it's removed a constant factor from the query.. I don't think it's worth it. I suspect the change proposed in #1768 would be a better fix to the query performance.. Hmm, you seem to have 4 Pull Requests rolled into one pull request here. Would it be possible to split this up into separate PRs for each of the commits?. I've found a load more of these issues so I've decided to fold them into #1831. LGTM. This looks like it probably fixes the ISE in #1785. I would appreciate if we had a slightly better idea of what the code is doing here since I think it should only be reached via https://github.com/matrix-org/synapse/blob/v0.18.7-rc2/synapse/federation/federation_server.py#L559. This looks like it probably fixes the ISE in #1785. I would appreciate if we had a slightly better idea of what the code is doing here since I think it should only be reached via https://github.com/matrix-org/synapse/blob/v0.18.7-rc2/synapse/federation/federation_server.py#L559. It seems a bit weird to attempt to store an outlier with state since I thought the whole point of an outlier was that it was an event without state. Would it make more sense to treat the event as some weird form of backfill in this case?. It seems a bit weird to attempt to store an outlier with state since I thought the whole point of an outlier was that it was an event without state. Would it make more sense to treat the event as some weird form of backfill in this case?. Other than maybe tweaking the wording in the comments LGTM . Other than maybe tweaking the wording in the comments LGTM . Structure looks sensible to me. Might want to tweak some of the method names and tone down the logging, but otherwise LGTM. Structure looks sensible to me. Might want to tweak some of the method names and tone down the logging, but otherwise LGTM. LGTM apart from the possibly redundant check?. LGTM. LGTM. Other than updating the comment for https://github.com/matrix-org/synapse/pull/2013#discussion-diff-106187847R268 LGTM. Looks good codewise. I think the comments could be improved slightly but overall it looks pretty good.. Looks better I guess? Do we know what the jenkins Dendron test failures are about?. Oh dear?\n. Should this be \"rej.reason\"?\n. This could use a little bit of doc string to explain what \"rejects\" and \"missing\" mean.\n. Erik says that this should only be the auth events for the event itself.\n. Do we need all this debug logging?\n. Maybe the requirement should be \">=\" to match develop.\n. Might want to add a bit of doc string for the get_event now that it has a few parameters.\n. Should on_directory_query be updated in the same way?\n. Should the appservice_api be injected through DI rather than being constructed directly?\n. Why are we returning the json.loads(e.msg) in the except handler?\n. Missing newline at the end of file.\n. Might be an idea to wrap the cancel in a try: except:\n. Cancel the timer if the deferred errors?\n. Might want to remove the debug logging\n. might be worth using keyword args to indicate which dict is the JSON body and which is the query args\n. Presumably because post_urlencoded_get_json has been changed to throw a CodeMessageException on error?\n. Might want to make it that the response body will be used as the error message if the request fails?\n. Does this work if the request hits a proxy which returns something that's not JSON?\n. Might nice to call this something other than \"fail_cache\" if it caches more than just failures.\n. Might want to have some doc-string so we know what these options do.\n. I'm not sure that ',' is a allowed in tokens and I think the product version has to be a token.\nhttp://tools.ietf.org/html/rfc7231#section-5.5.3\nhttp://tools.ietf.org/html/rfc7230#section-3.2.6\n. Are \"console.error\" messages displayed to the user or do they have to go hunting in the inspector to see them?\n. Hmm, looks like cancel_call_later just calls IDelayedCall.cancel. Which as you point out will throw if the timer has already fired.\n. The parameter is named \"context\" not \"ctx\".\nDetermined by testing on 2.7.9.\nOtherwise the fix seems to work.\n. The check_same_thread for sqlite3 seems to have gone missing\n. Would it make more sense to parse the database config in the config package?\n. The name made me think it was a way to list all the users on a domain. I guess I'd prefer it to be \"are_all_users_on_domain\" and to have some docs to say what the method does.\n. Should there be a % (self.hostname) here?\n. runInteraction will dispatch to a db thread. So self._compute_current_max will happen without the lock being held. Is this a problem?\n. You don't need to call \"% ()\" explicitly when logging:\nlogging.debug(\"Binding emails %s to %s\", threepid, auth_user.to_string())\n. I think this could do with some doc string to explain what \"add_oob_auth\" does and what the return value means.\n. It might be nice to elaborate more on how to fix the error here\n. using __all__ might be a cleaner way to appease PEP8. Although you're not the only one to be bitten by this.\nhttps://bugs.launchpad.net/pyflakes/+bug/1178905\n. Previously on_new_room_event hit the database, synapse.handlers.BaseHandler._create_new_client_event depended on that to make sure the notifications didn't block the request that created a new request. Since we no longer hit the database we need another way to cycle through the reactor before poking the notification_listeners.\n. It's used in the notifier_performance branch.\n. I'll look into it for the notifier performance work.\n. The notifier_performance branch does this.\n. Why \"3\"?\nDoes this mean we will lock up a database thread for 300ms each time we get a list of events?\nHow much does locking up the database waiting for more requests for events help performance?\n. ~~Is this \"3\" the same as the previous \"3\"?~~\nIs the \"3\" here the maximum number of database threads to lock up doing event fetches?\n. s/for events/for requests for events/ ?\n. Might want to change the log-line here\n. Some doc-string explaining how the timeout is used and what units it is in might be nice.\n. Some doc string explaining how the timeout is used and what units it is in, and what happens if the timeout is reached might be nice.\n. This could do with some doc-string for timeout as well.\n. What is this check doing?\n. Why are these commented out?\n. If they aren't being read from I guess we should remove them. We can always add them back if they turn out to be necessary.\n. Presumably this will switch between _respond_remote_thumbnail and _select_or_generate_remote_thumbnail when the config option is added.\n. Will this actually result in an error? Or will the observed deferred swallow it?\n. This could be done using a single list comprehension:\n[event for event in events if allowed(event, event_id_to_state[event.event_id])]\n. It would probably be clearer to do:\nfor i in range(0, len(d_list), n):\n  ds = d_list[i:i + n]\n. Some docstring with example usage would be lovely here.\n. Could we have some doc string for the arguments here? In particular could we have a description of what \"types\" can be?\n. Might be worth splitting this into two methods: one for types is None, one for types is not None. Given the number of type is None branches.\n. We can have a name that's more meaningful than \"k\"?\n. Do we need the \"evs\" list? Can't we do a single dictionary comprehension?\n. Do we need to duplicate suppression on the list of event ids?\n. Why do we need to pre-populate a state_dict with Nones?\n. Would it be worth making a namedtuple for the (state_type, state_key) pairs to make it clearer what's going on?\n. Is this intended? I thought these were regexps. \"registerrrrrrrr\"\n. Should be be accessing keys in the body before checking the absent list?\n. Actually I think I'd prefer:\nfor event_id in state_ids:\n   state_event = state_events[event_id]\n   state_dict[(state_event.type, state_event.state_key)] = state_event\n. It might be nice to have a more meaningful variable name than \"p\" here.\n. ~~We might want to check that the _newTimedCalls attribute exists if we are rummaging around in twisted internals.~~\nOh we do further down the file. Nevermind\n. Do we need to check if the \"threadCallQueue\" attribute exists?\n. Might want to pick a more sensible name for content rather than \"event_id\".\nIf the name isn't much longer then this will fit on a single line.\n. Should this be \"matrix-angular-sdk\" rather than syweb? Should we include specific instructions on how to pip install syweb.\n. \"source to server\"\n. ^ Does this actually work.\nDoesn't it have to be https://github.com/matrix-org/matrix-angular-sdk/tarball/v0.6.6/ or something?\n. I think:\npip install https://github.com/matrix-org/matrix-angular-sdk/tarball/master\n. I thought we were doing git-flow on the angular-sdk?\nAlternatively you could do:\npip install https://github.com/matrix-org/matrix-angular-sdk/tarball/v0.6.0\nWhich was how we were installing it before.\n. > Hard code the version?\nIs that different to hard coding it in the python_dependencies file?\n. I'd hardcode the version here for now. We can always review that decision if we get round to wanting a new version of the sdk.\n. Should we complain about files or directories that aren't yaml?\n. I wonder if \"generated-keys-directory\" or something would be a better name.\n. It might be worth saying that if the location of a key file is explicitly given in the config then that location will be used.\n. Did you mean to leave a \".py\" extension?\n. That might be more confusing than helpful since the pynacl being the wrong version of 0.3.0 caused the pymacaroons import to fail. If people are presented with too many failures they might end up not reinstalling the right packages.\n. \"WoefullyInsecureContextFactory\" could be \"InsecureInterceptableContextFactory\".\n\"Factory for PyOpenSSL SSL contexts which accepts any certificate for any domain. Do not use this since it allows an attacker to intercept your communications.\"\n. Can we have a some documentation for what this method does?\n. I'd prefer a more meaningful variable name than a.\n. It might be nice to give a short narrative in english of what this code does.\nFor example explaining that it does the auth.check and explaining why do we need to compute_event_context for each event.\n. Yeah. It didn't seem worth breaking out of flow to setup a separate PR at the time.\n. I dispute the \"mostly duplicated method\". The overall structure is the same for the two methods. But nearly every step is different. I think that adding forcing the two code paths into the same method would necessitate a lot of branches which would be make the code less clear, and make it harder to check that the behaviour of the existing code is unaltered by this PR.\n. Oops. Fixed in 1e101ed\n. Does this log something helpful if the PUT fails?\n. My preference is to put the \" \" space on the start of the lines rather than the end since it allows me to check that every line has a space in O(1).\n. I think that might be nice. I'd rather we didn't have unhandled errors hanging around. Probably enough to yield on the PUT and stick a try except around it.\n. Docstrings might be nice. Possibly worth calling out that it returns None if it's been too long since it last reported?\n. Probably don't need two levels of if block here:\nif room_alias and (EventTypes.CanonicalAlias, '') not in initial_state:\n. Surely the time has come to factor this out into a separate function. I think this the forth copy of this function now?\n. Would it make sense to move this into a method on the db engine rather than doing \"isinstance\" checks?\n. Might be worth commenting why are limiting it the results to '500'.\n. Again it might better to shift this out to a method on the database_engine rather than switching on the type of the engine.\n. It might nicer to split this into a run_upgrade_postgres and a run_upgrade_sqlite3 so that it's easier see which logic is being applied to which database type.\n. Can we have some doc string?\n. Can we have some doc-string please?\n. This should probably be \"elif isinstance(self.database_engine, Sqlite3Engine)\" if the sql is specific to sqlite3\n. Fair enough. I'm happy enough for this to be a isinstance switch for now. If you can't think of a nice way to move this to the engine then it probably isn't worth it.\n. It might be an idea to do \"elif isinstance(self.database_engine, Sqlite3Engine):\" explicitly here\n. I guess we should include banned rooms.\n. Does this mean the clauses are added if the user is in more than 500 rooms?\n. I assume that filtr is because filter is a builtin. I'd prefer something like search_filter rather than dropping vowels.\n. If the clauses are omitted do we have a way to ensure that the user only sees the events for the rooms they are in?\n. Fixed 06986e4\n. Fixed 5897e77\n. This might need a comment to explain why len(events_to_return) < len(events) means that a guest is forbidden.\n. spurious newline\n. It'd be nice to have a short explanation of what enabling guest access does here.\n. Should probably add is_guest to the doc string.\n. Is it possible for an event to be marked as \"include_if_later_joined\" after an event with membership JOIN has been processed? Should the event be included in that case?\n. Why is \"is_guest\" set to false here?\n. Why doesn't this have a \"is_guest=False\"?\n. Why not room_ids.add(batch_group_key)?\n. Ah. Cause & mean intersection.\n. Maybe room_ids.intersection_update({batch_group_key}) ?\n. I'm not sure that this loops 5 times if i is being incremented by 5.\n. This test seems a little bit redundant given the test above\n. Might be nice to split this into a maybe_kick_guest_users and a kick_guest_users where the latter just takes the current_state and the user doing the kicking\n. Shouldn't the sender be the user doing the kicking rather than the user being kicked.\n. It'd be good to have newlines between the if blocks here. Especially if we have multiple lines in the conditions.\n. It might be worth elaborating on what the right indexes are. Something like \"We want to use the full text search index on event_search to extract all possible matches first, then lookup those matches in the events table to get the topological ordering. We need to use the indexes in this order because sqlite refuses to MATCH unless it uses the full text search index\"\n. Won't this fail if a \"remote\" called upstream already exists?\n. Ah, it's creating a new git repository each time.\n. I wonder if the --mirror=fetch makes sense here.\nThen we might be able to avoid need to faff around adding a remote below.\n. docstring\n. docstring\n. Why is this not just SELECT forgotten FROM room_memberships?\n. spelling differently\n. Why isn't this just SELECT forgotten FROM room_memberships?\n. Because there might be incomplete updates still being inserted into the db the max_token might be lower than the next_id inserted. If we told the client the latest max_token now it might end up skipping those incomplete updates.\n. It should probably be enforced.\n. I'm slightly confused as to why the change log update is appearing in this PR.\n. I don't think it matters if we are extending the markers until they don't appear in the string.\n. I dunno. I don't think this changes the behaviour of the code from before. I don't think we should be seeing events without a sender either. I'm happy to switch this to a conditional if you prefer.\n. Where should it be?\n. I don't think we use the optional +s anywhere else.\n. Done 4b0f697\n. Done 4eaa721\n. For the benefit of us who aren't familiar with regexeps it might be worth explaining what this code is doing.\nAlso since it is duplicated with the for sqlite below it might be worth lifting it out of these functions and moving it to the call site.\n. Done c2c70f7\n. So that I don't need to check if the context is the sentinel when using the functions.\n. https://docs.python.org/2/library/threading.html#threading.Thread\nThe wording makes it fairly clear that there is \"a main thread object\". So I'm fairly happy to use a \"is same object\" comparison here.\n. Fixed 5231737\n. Done  070e28e\n. This probably should check that the key \"name\" is present.\nroom_name_event.content.get(\"name\", \"\")\n. You could do:\nroom_join_rules = join_rules_event.content.get(\"join_rule\", \"\")\n. I don't think this will throw because we check if the history_visibility is in the content before accessing it.\nThis the same check as used for /events FWIW\n. Done 251aafc\n. Does it matter? I'm not sure if passing an empty list of rooms is invalid or not here.\n. This is sort of fixing the TODO. The presence event stream has extremely similar implementations for get_new_events and get_pagination_rows. Switching to using get_new_events gives me more confidence that it will actually return the events we want it to return, since it should now give the same events that the client would have received in an incremental sync.\nThe main reason for switching it now is because I can supply a list of room_ids so that it can be used for guest access.\n. Yep. I made it match /events in that respect. Sadly I suspect that pointing out that you could bisect the list to search for the bad ids would not be considered constructive. I'll look at including the bad ids in the response somehow.\n. We check that the list is non-None before calling into these handlers. I'd rather have a hard error here than a default.\n. Copyright year should be 2015\n. Is this used anywhere?\n. Should this be something like EventPushActionsStore, or EventNotificationActionsStore to make it clearer that it relates to notifications?\n. Is the hs used here?\n. Pass the hs and call hs.get_datastore() to get the store.\nIf you are just using the store then just pass that.\nTry to avoid storing the hs on the object if possible to make it clearer what the object uses\n. I'd prefer something more specific like handle_push_actions_for_event\n. Use map(lambda or use a list comprehension, but probably not both in the same expression.\nWe've generally used list comprehensions in the rest of the code.\nI'd drop the [] inside the join, e.g:\njoin(\"?\" for _ in user_ids_to_fetch)\n. Shouldn't this be min? \n. Done d12c00b\n. Done d12c00b\n. Can we use named args here? So that I know what's being set to None\n. Will the do_3pid_invite be ratelimited?\n. It might be 2016 now.\n. Done 4cec90a\n. \"access\" is traditionally spelt with 2 \"s\"s.\n. You could compile the regexp at the module level.\n. Why is this commented out here?\n. \"Assumes that the string passed to the function is lower case\"?\n. Is the glob a str?\n. Why not just return r.match?\n. Why is this a thing?\nWhy not do all this in the constructor?\n. What is this?\n. Should this be commented?\n. I don't think this takes a txn object.\n. Should this loop be inside the txn?\n. Can the iterable be empty?\n. Eh I thought this line was earlier in the file.\n. This might want to be called something like new_datastore to make it clearer that it makes a datastore.\nAlso could do with some documentation to explain why it is a thing. It's not immediately obvious why this doesn't happen in the datastore constructor.\n. It might be nice to add comment to explain that this is stripping the connection pool config.\n. Some docstring would be nice here.\n. Why is this still here?\n. If you are going to enumerate the popped tree here then you might as well return a list of popped entries for the LruCache to remove from its linked list.\n. Why not just self.value = value?\n. Also why didn't this fix the problem OOI?\n. \"this is an initial sync\"\n. I wonder what the point of the [:] is.\n. It seems rude to sys.exit() unless you being run as the main program, but I don't think it should cause any problems for any of the likely ways this code will be run.\n. Could you add a comment explaining what W503 is and why we are disabling it\n. it looks like get_room_avatar isn't called anywhere now.\n. get_rooms is only called in one place now, and that is to get the number of rooms in synapse.app.homeserver:phone_stats_home. It might be nice to kill it for good.\n. I generally prefer list comprehensions to lambdas\n. I'd usually use \"%r\" for logging strings so that it gets escaped.\n. Do the other sys.exit()s need to be removed as well?\n. Maybe we shouldn't call this the parent_context anymore. Something like previous_context might be more appropriate?\n. If we're entering the context multiple times perhaps we shouldn't be tracking the context to restore on the object itself.\n. maybe this should have a txn suffix\n. This should probably have a txn suffix\n. Why call this identifier instead of room_id?\n. I wonder if identifier.startswith('#') would be clearer than relying on the exceptions thrown.\n. Sure, that would work for me.\n. Eh, I don't think the method without a limit would be useful to anyone. I'd rather that the parameter stayed and the method was fixed.\n. I think the _remote_offline_serials are in reverse serial order so we can terminate the loop early here.\n. \"event\"\n. When would a membership event not be a state event?\n(you've already read the state key with target_user = UserID.from_string(event.state_key))\n. If there are no \"gaps\" in the in the entries list, then why do we need to scan to find the appropriate entry?\nCould we simply index into the entry list instead?\n. Could we fix up the call sites rather than adding a *args?\n. Do you need to close the cursor?\n. \"You are not...\"\n. Because we want to dereference the .deferred attribute from when the timer fired, not when the timer was started.\n. Fixed 99757e4\n. I don't think _simple_select_many_batch allows multiple columns in the WHERE clause.\n. I think the server is supposed to assume that the room is \"shared\" if it doesn't understand the value of history_visibility.\nhttps://matrix.org/speculator/spec/HEAD/client_server.html#id31\n. Is discarding the invalid invites the right thing to do?\nShould we be 400ing the identity server instead?\n. Maybe this should be docstring rather than a comment?\n. The indentation here is a bit strange.\n. This probably deserves some doc string, just so I can tell whether the behaviour is deliberate or not.\n. nitpick: the around the comprehension are unnecessary here.\n. We are probably rejecting the notification rather than discarding it.\n. What is the point of this method?\n. Added tests 9a0c386 and 3ba118f\n. Just do json.dumps on the response. bdc1962\n. Hmm, yeah I wasn't sure if they were going to be useful, I didn't think there was any harm in including them though.\n. I means that all the stream positions go up. Not sure if that is a useful property.\n. Fixed 37a141e\n. Done deda480 9848b54\n. Done 2dba948\n. Done  2dba948\n. I thought that the notifier preserved the logging context.\n. I've added a comment to give some clue as to why there's a unique constraint  ba660ec\n. Is the user_id different from the requester?\n. maybe add some doc string\n. I guess this is so we don't have to pull in the entire room state for each room? Might be worth adding a comment explaining why we've pick this particular performance trade off.\n. I wonder if we should give an empty list rather than omit the key.\n. Does this need to be a function.\n. This isn't strictly relevant to the PR, but I came across it when trying to see how we decide when to store a state group.\n. Again, this wasn't strictly relevant to the PR, but there isn't much point in giving defaults in an internal function called from exactly one place.\n. We can do the is_outlier check inside store_mult_state_groups_txn.\n. Does store.forget work if the user doesn't have a membership in the room?\n. The comment is probably misleading.\n. Hmm, I tend to prefer to pass in the current time to these things to make testing easier.\n. As above wrt to passing in the current time, or using a mockable clock for getting the current time.\n. Now that resolve_service takes a clock, it might be worth using a mock clock here?\nAlso might be nice to have a test that checks that things expire.\n. We seem to be switching to the :param <type> <name>:, style of docstring.\n. Maybe note when the deferred resolves?\n. Maybe add a comment explaining what this is doing and why.\n. This shouldn't be necessary.\n. We need to restrict which hosts the GET requests are sent to. Otherwise we have a bit of a security problem.\nThat probably involves applying an IP blacklist _after resolving DNS.\n. You probably want to be doing ORDER BY download_ts DESC LIMIT 1 rather than max(download_ts)\n. You probably want to be doing ORDER BY download_ts ASC LIMIT 1 rather than min(download_ts)\n. Ugh, I wish we weren't adding a lxml dependency, But I don't see how to do the xpath stuff otherwise.\nIt might be worth adding some notes to upgrade.rst to remind us about it when we do a release.\n. Use cache.get() rather try: except:\n. Could you elaborate on what the bodge is?\n. Maybe comment?\n. Maybe docstring\n. It feels like this should be indented a bit to me.\n. Should remote_room_hosts and third_party_signed be part of the request key here?\n. Might not want to throw away the thing passed to the callback.\n. Why is this setdefault rather than get?\n. Oh, I see. This is only ever passed the None from _trigger_defer_manager\n. Would it be clearer to merge the _trigger_defer_manager and the remove_if_current into one thing? \n. Is this going to have the right log context when it resolves?\n. I think having two functions and an addBoth is less clear in this case.\n@contextmanager\n def manager():\n    try:\n        yield\n     finally:\n         d = self.key_to_defer.get(key)\n         if d is new_defer:\n             self.key_to_defer.pop(key, None)\n         d.callback(None)\n. might want to use a different d to avoid confusion.\n. The not html probably throws if lxml isn't installed.\n. maybe raise an actual exception rather than None.\n. Its RuntimeError not RunTimeError. This sort of typo can be picked up by running flake8 synapse fwiw.\n. You can probably get rid of the try: except: block\n. Could you add a comment explaining why this is needed?\nAlso possibly elaborate on what the behaviour of the caller will be?\n. What happened to the backfilled=True here?\n. Are you supposed to be appending to ev_infos here?\n. Does this mean we give up if a single server returns 0 events?\n. Could you explain why this might happen and what the callers will do in this case?\n. Maybe comment to explain why we persist these events one at a time?\n. Maybe give pip install instructions for getting lxml?\n. Do we say what version of lxml is needed anywhere?\n@ara4n: What's the rational for requiring >=3.6.0 ooi?\n. Would it be worth chucking an errcode of \"M_TIMEDOUT\" or something?\n. It might be running as __main__\n. Which I think is the reason that synapse.app.homeserver does the same thing.\n. Done f22f46f\n. You will want to set self.whitelist even if there isn't a url_preview_ip_range_whitelist in the config.\nPerhaps self.whitelist = getattr(hs.config, \"url_preview_ip_range_whitelist\", None)?\n. a timestamp and an incrementing ID might be useful here.\n. Would it make sense to store the empty IPSet if the config key is missing?\nI think you could then remove all the conditionals on having a whitelist from the spider code.\n. Maybe make the id a primary key?\n. Maybe chuck an index on the received_ts? (Not the end of the world if you don't. I imagine it should be fairly easy to add one later)\n. Given how this is used maybe this wants to be a cached list and for the function to take a list of userids rather than a single user?\n. Hmm. Unfortunately this doesn't work because I was stupid and some of the response streams appear implicitly and don't have a corresponding entry in the request_streams.\nFor example asking for an \"events\" stream will also give an implicit \"state_reset\" stream.\n. It's part of the OpenID/Oauth spec I'm afraid.\n. Maybe, something we can change down the line if needed.\n. I was thieving the method and path from http://openid.net/specs/openid-connect-core-1_0.html#TokenRequest.\n. Done 573ef3f\n. I'm afraid this won't work. You'll need to implement cache invalidation for the account_data using the replication streams. There are examples of how to do that in synapse/replication/slave/storage.\n. I think that either I'd want to keep this index or get rid of the entire table given that it is write only in synapse, and can be fairly easily constructed from the state tables for ad-hoc queries.\n. \"existing\"\n. Why is this being moved?\n. Oh so that the topological_ordering can be used below\n. Might be interesting to collect stats about the different levels of collection going on.\n. Spelling?\n. Hmm, will this race with adding an item under a different key?\n. Why sorted?\n. If \"change\" was stored as \u00b11 in the db then you could use an SQL aggregate sum to compute whether it had changed. Please don't though.\n. What is \"arr\"?\n. I've kind of lost track of which if statement this relates to. I wonder the block above should be a function \n. Could this be called \"count_notifications?\n. I guess it's consistent with the other \"_generate\" methods\n. Maybe comment what this list is sorted by?\n. It would be if inclusive was ever specified by the user.\n. I've made inclusive a boolean to make it a bit clearer. d44d11d\n. What happens if someone creates a user with password = \"password\" and admin=False and then someone nicks their mac and registers a user with password = \"passwordnot\" and admin=True?\n. Similar thoughts on shifting characters between the \"user\" and \"password\" fields.\n. Maybe 400 here rather than 500?\nMaybe comment on why this is bad.\n. Done dfde67a\n. Is it worth adding the rooms filter for /messages? Either the room is filtered out by the filter or it isn't.\n. Maybe add an index on (room_id, contains_url, ...whatever columns the pagination queries can by indexed against)?\nIt's probably not necessary if if people are posting things with URLs frequently enough.\n. I guess I'd be impressed if postgres had a hard time optimising room_id = '1' and room_id != '1'. So this seems fine\n. Don't you mean a (room_id, contains_url, topological, stream_ordering) index?\n. Maybe add a comment to explain why we can do do_sig_check=False here?\n. Maybe add a comment to explain why we can do do_sig_check=False here?\n. Maybe add a comment to explain why we can do do_sig_check=False here?\n. Maybe add a comment to explain why we can do do_sig_check=False here?\n. We currently allow wildcard matches for event types. https://github.com/matrix-org/synapse/blob/a98d2152049b0a61426ed3d8b6ac872a9ca3f535/synapse/api/filtering.py#L235\n. You can't call getPeer() here cause the connection might have disappeared.\n. Maybe use .get to default the 'hostname' key here?\nresp_body.get('hostname', \"<missing hostname key>\")\n. > Do we have any mechanism to unreject an event yet?\n\nDo we have any mechanism to asynchronously reject an event that we already accepted?\nIt looks like the answer to both question is no in the current code base. The only place we write to the rejections table is in _persist_event, after we've filtered out events that we already have in the db\n\nTherefore I'm sorely tempted to exclude everything except the events and the event_json table until it is demonstrated that it is necessary and safe to do so.\n. I'm not sure I can reasonably factor it out since it is such a mess in it's current state.\nNote the wonderfully inconsistent mixture of tables being interfered with here.\n. Might want to update sytest to use unstable rather than v2_alpha?\n. I see that you already have.\n. Is there a reason to remove the v2_alpha path?\n. Why do they need to match? Do they match in vector now, or will vector need to be updated for this to work?\n. Is Vector the only thing using that API? I though Tor had got a client using the e2e stuff.\n. Might it be worth holding off adding this check until vector is updated? Or are we concluding that it's okay to break it on the old vector?\n. Maybe update the docstring with the changes?\n. Could you add a couple of lines explaining that it will fetch missing events, and under what conditions it will do so?\n. Probably don't need to inherit from BaseHandler here.\n. I'd prefer it if this was grabbed in the __init__ method. (and if it was called server_name rather than hostname)\n. Are you actually falling back here? I'm not seeing any calls to transport_layer.get_room_state\n. Does this work as a callback for both errors and callbacks?\n. Why is it (result,val), (e_id, _) here but (r, e), e_id) in the list comprehension above. What's the difference between result and val.\n. I can remove all this stuff because it is vestigial code left over from when this script ran the unit tests as well as running the sytests.\n. Should this be seen_events rather than auth_chain?\n. Maybe move the rest of the function inside the try block rather than returning here?\n. Fair enough\n. maybe cache_invalidation_stream. Maybe put a comment here explaining what it is?\n. This probably deserves some comments explaining what's going on.\n. Note that the other streams use a short-circuit inside the storage method to do this.\n. I would probably call this \"on_invalidate\" and have it take a callback rather than a \"cache_context\" object.\n. I'd probably call this something like \"cache_invalidator\" and make it a function.\n. If the cache entry doesn't get expired is there a risk that many callbacks could accumulate here over time?\nFor example if a secondary cache depends on two primary caches where one of the primary caches is expired more frequently than the other,\n. synchrotron.\n. Might be worth noting that this shouldn't be exposed to the public internet since it exposes sensitive information.\n. I wouldn't remove these metrics, since the outer metrics won't know what callback is being invoked,\n. Is fragment the same as kind at this point?\n. What happened to the https://?\n. This could get interesting if there were a lot of users on this server that had left the room. But I don't think we need to worry too much about it.\n. camelcased:\n/_matrix/client/r0/createRoom\n/_matrix/client/r0/initialSync\n/_matrix/client/r0/publicRooms\n/_matrix/client/r0/voip/turnServer\n^/_matrix/client/r0/rooms/[^/]*/initialSync$\nunderscores:\n^/_matrix/client/r0/profile/[^/]*/avatar_url$\n^/_matrix/client/r0/user/[^/]*/account_data/[^/]*$\nlowercase:\n^/_matrix/client/r0/pushrules/\n^/_matrix/client/r0/profile/[^/]*/displayname$\n. Are you sure about the check here? Shouldn't we only skip fetching messages if the stream_ids are equal?\n. I'm not sure about the since_stream_id check here either. I guess you are trying to avoid setting the stream_id to nonzero and therefore triggering the delete_messages_for_device code above?\n. Maybe comment that this won't delete the most recent batch of messages until a new message comes along?\n. This may wish to be unpersisted.\n. I'd probably start the line \" will since it makes it easier to spot the spaces. Also I'd be tempted to omit the '+' operator.\n. Why six hours for this one, but one month for the other?\n. What's the point of this check?\n. Maybe docstring to explain whether the state is before or after the event?\n. Please comment on why we need to have a state and an auth_chain here.\nI assume it's because we need to have a state and auth_chain to persist in the block below?\n. Does _get_joined_users_from_context only return the local users?\n. While I do usually approve of comments, I'm not so sure about these ones.\n. Maybe replace this with some kind of TODO:...\n. Why not prev_state[prev_group]?\n. This probably wants to be behind a stream change cache to avoid hitting the DB for every TXN we want to send.\n. We should probably only store messages for destinations that are valid homeservers. I'm not sure how to check for that here.\n. This hack is pretty awful. Any thoughts on a nicer way of doing it would be welcome.\n. I've added comments. 7d893be\n. Not at the moment.\n. Done 31a07d2 and cb98ac2\n. Done cb98ac2\n. Maybe use parse_string from synapse.http.servlet?\n. Do you need to add the pending update to the queue when its dependencies finish?\n. Oh wait this will probably just work when do_next_background_update is called once the dependency finishes.\n. What do database exceptions look like?\nDo you have an example I can crib off?\n. Does this cause the readers to reset their typing_stream token? If not then they will keep requesting from replication with the large token, meaning that every request will return all typing updates?\n. Won't this be a bit noisy for INFO logging?\n. Why do we need separate both pending keyed edus and pending presence? Why can't presence be a keyed EDU?\n. Should the key include the EDU type?\n. https://github.com/matrix-org/synapse/blob/master/synapse/replication/slave/storage/slaved_id_tracker.py\n. Fair enough. Maybe comment on that?\n. Oh quite possibly. I'm possibly misremembering how the slave works.\n. Maybe add a comment to Typing thing in synapse/app/synchrotron.py to say that the current behaviour is important.\n. Given the shape of the index it might be better to run the query twice with highlight = 1 and highlight = 0 when querying for notifications when only_highlight is False.\n. Are you sure about this? I thought it was possible to query this without the \"highlight = 1\" clause.\n. Can this not inherit from BaseHandler? I've been trying to move the code away from using it.\n. Will this be quick on postgres, or will you need to use window functions there?\n. Not that it really matters since the table will probably be small to start with.\n. FIXME?\n. \"the only entries for a room?\"\n. We aren't changing the API. The comment is just a tiny bit out of date.\n. Is the TODO still valid?\n. Maybe comment on why we do the ratelimit check here?\n. Are you sure about the received_transactions?\n. some Docstring might be nice.\n. If \"UPDATE.\" are postgres specific then maybe they should be called \"POSTGRES_UPDATE._\"?\n. Maybe comment on what the fields are?\nIs the \"content\" JSON? Maybe comment on whether it is or not.\n. Is this comment accurate?\n. Docstring?\n. Docstring\n. docstring?\n. docstring?\n. Docstring?\n. Docstring?\n. Docstring?\n. Docstring?\n. Docstring?\n. Docstring\n. Docstring\n. Docstring?\n. Docstring?\n. The sample size is always 5 here, since this code is only hit if len(latest_ret) > 10.\n. Do we need to intern strings on this code path?\n. ```\nkey_to_defer is a map from the key to a 2 element list where\nthe first element is the number of things executing\nthe second element is a list of deferreds for the things blocked from executing.\n.\nIf the number of things executing is greater than the maximum\nthen add a deferred to the list of blocked items\nWhen one of the things currently executing finishes it will callback\nthis item so that it can continue executing.\n.\nWe've finished executing so check if there are any things blocked waiting to execute and start one of them\n.\nIf nothing else is executing for this key then remove it from the map\n.\nRestrict the number of events that can happen concurrently in a room.\nOtherwise synapse may try to add many event simultaneously, forking the room state and making state resolution more expensive\nSee (link to github issue) for more information.\n```\n. Comment on the choice of 5 here.\n. Might be worth trying to use a separate parameter for controlling the acks. For example there's a script in scripts-dev that tails all replication rows, if you ran it againtst synapse it might inadvertently delete all the federation queues. That could be awkward.\nIf you used a separate parameter for acknowledging like ack_federation or  something and didn't report it in the list of streams then I don't think this would be such a problem.\nAlthough it might be that case that we are better off not exposing the federation in the list of streams.. I wonder if we send lots of identical messages to multiple dests. I wonder if it might be possible to reduce the duplication here if that is the case.. Might as well remove the verify_expiry config option while you are at it.. and put a comment explaining why we aren't ever going to check the \"time < \" caveats.. But leave the v.satisfy_general(lambda c: c.startswith(\"time < \")) so that existing tokens will still work.. Except you can't remove the verify_expiry option because it's used in validate_short_term_login_token_and_get_user_id. But you probably want to add a comment to explain what's going on.. The doc-string still refers to refresh_tokens. Could we have some docstring for the parameters here?. Could we have docstring for what the params are and what this does?. Maybe add comment on what this table is for?. Does the comment need updating if we aren't caching the appservice lists as well?. The libxslt1-dev one I think? Might be worth mentioning it again here.. The other ones seem to use kwargs name=\"...\".. Add a comment to explain that this is to turn the pre-fill startup query into a index-only scan on postgresql.. Would it make sense to make these top level functions rather than staticmethods?. Isn't check_size_limits defined as a staticmethod on the Auther class above?. I would prefer that. I would also prefer it we took this opportunity to move the event auth functions to a separate file.. (which would go someway towards separating the code for authing CS interactions from code for authing events). Is _get_send_level called from anywhere? I can't see a reference to it.. It would be awesome if this was a top level function so that typos get checked by flake8.. This is probably sub-optimal since it iterates the entire cache. You will probably need to store the current size somewhere and update it as things are added or removed.. This is probably sub-optimal since it iterates the entire cache. You will probably need to store the current size somewhere and update it as things are added or removed.. If you want to be awful you can move the if statement outside the function def and define the function twice.... This doesn't seem necessary if we aren't modifying the cache.. Maybe use callbacks=[m] here?. Maybe call this membership rather than e_type?. Doesn't this clobber the auth_events argument?. Maybe the argument should be called auth_event_ids?. I wonder if state_map should be called state_events_by_id to make it clearer that it's a map from event_id to event.. Put some comments here to explain what's going on please.\n(Also you could be super awful and use the unconflicted_state and the conflicted_state dict to track if you've seen the key before...)\n((Which would mean that you could defer constructing the set until you had an actual conflict...)). python\nfor state_set in state_sets[1:]:\n  for key, value in state_set.iter_items():\n    # Check if there is an unconflicted entry for the state key.\n    unconflicted_value = unconflicted_state.get(key)\n    if unconflicted_value is None:\n        # There isn't an unconflicted entry so check if there is a conflicted entry.\n        ls = conflicted_state.get(key)\n        if ls is None:\n          # There wasn't a conflicted entry so haven't seen this key before.\n          # Therefore it isn't conflicted yet.\n          unconflicted_state[key] = value\n        else:\n          # This key is already conflicted, add our value to the conflict set.\n          ls.add(value)\n    elif unconflicted_value != value:\n        # If the unconflicted value is not the same as our value then we have a new conflict.\n        # So move the key from the unconflicted_state to the conflicted state.\n        conflicted_state[key] = {value, unconflicted_value}\n        unconflicted_state.pop(key, None)\n     . \"Caculates\". \"re-add\" ?. Why are you returning the \"type\" and \"state_key\" here?. Oh I failed to read that far down the file :(. entries. I've been doing self.is_mine_id = hs.is_mine_id in new code in a mostly futile attempt to avoid having self.hs scattered throughout the handlers.\n. You haven't actually removed the ignore_if_known argument.. Would \"last_stream_id\" be a better name than \"extremity\"?. Could we have some docstring for this.. This might be clearer as an if statement.. Maybe write this as ? < stream_id AND stream_id <= ?. Whats the include_all_devices parameter for? and could it have some docstring?. I assume you are binding the constant True here rather than putting a literal in the SQL query as some sort of postgresql vs sqlite compatibility hack. Maybe throw in a comment to that effect?. Is it reasonable to assume that the number of entries in the device_lists_outbound_pokes per user_id is small? Do we think that the (destination, user_id) index is good enough here?. I might prefer something more along the lines of.\n```\npostgresql and sqlite use different formats for boolean literals,\nso we pass True as a query parameter rather than including a\nliteral True in the query string itself\n. It's kind of nice to kill of theself.hs``  as it means that all the accesses to the homeserver object happen during start up rather than during the execution.\nEh, the usage count is now about 50/50 so I guess it doesn't matter that much which style you pick:\nsh\n$ grep -r self.hs.is_mine synapse | wc -l\n34\n$ grep -r self.is_mine synapse | wc -l\n29\n. Presumably it's safe to change this from a LEFT JOIN to an INNER JOIN because of https://github.com/matrix-org/synapse/blob/master/synapse/storage/schema/delta/33/devices_for_e2e_keys.sql. Isn't this logging a bit noisy?. I wonder if the name of this method should indicate that this is for outbound pokes?. Should we chuck a min(ts) into the SELECT so that we can filter out destinations that don't have anything to delete in them? I'm slightly worried at the number of deletes that we are spamming here.. If you throw in a count then you could probably discard all the destination, user_id pairs that only have a single row in them. . Maybe chuck in a short comment explaining what's going on here? Just to explain what a valid_err_code is and why 404, 429 and >500 are special?. Isn't the exc_val.code < 400 redundant because of the exc_val.code < 500 ?. I find it misleading because it makes it seem as though 4xx are handled differently to 2xx/3xx.. should this be [\"room_id\", \"state_key\"]?. Oh I see, this for rooms_for_user so you want to look up by user_id = state_key.. And the users_in_room is already handled by the (room_id, type, state_key) index.. Maybe explain why the results might be spurious and the nature of their spuriosity?. Capitalise \"OR\" please. . I guess we are leaking the cache_context.invalidate callbacks if this cache is smaller than the get_users_in_room or get_rooms_for_user caches. I wonder if we need a max_entries at all for dependant caches like this one since it can't be bigger than the get_rooms_for_user or get_users_in_room caches.. Maybe expound on the nature of the reliance?. (I'm worried that future me will find this comment and will have forgotten what bit of code relies on these having __eq__ and __hash__ defined \"sensibly\" or what sensible means in this case). Maybe explain what the compression scheme is?. \"replaces\", \"emtpy\"\nMaybe something more along the lines of \"We store these default actions as the empty string rather than the full JSON. Since the empty string isn't valid JSON there is no risk of this clashing with any real JSON actions.\". Do we still need the is_guest parameter in get_event_context? If you are leaving it could you add some docstring to indicate it is unused?. Umm, What happened to the (stream_id, user_id) index?\nShould the new index be called device_lists_stream_user_id_device_id?. Why isn't this in the device_inbox file anymore?. Is calling this idx or index more consistent with what came before?. \"edue\"?. Could we remove the prev_id from the seen_updates here?. Could you comment what's going on here? Just a quick comment to explain why both branches are necessary would be enough.. Maybe add a comment to explain why the \"user_id\" is optional? something like\nThe \"user_id\" is optional so that this function can be used to format presence \nupdates for client /sync responses and for federation /send requests.. Is this still needed? It looks like it is presence specific and presence should be handled as UserPresenceState tuples/. I don't remember tbh. I think only presence has a content.user_id though.. Would the doctring be clearer if it was written something like this?\n```python\n\"\"\"Returns true if there are any new events in the rooms the user is in since the last sync\nor if the user has changed membership in any room since the last sync. \nThis only makes sense when calculating an incremental sync.\"\"\". Would it make sense to have some docstring along the lines of:\npython\n\"\"\"Returns an immutable set of room_id strings for the rooms the user is joined to.\"\"\". Maybe comment on what expensive operations this avoids?. Why do we need to check if the user has forgotten the room? I guess it's because the user might have left the room and forgotten it but we are still getting new messages with them joined to the room over federation?\nShould we be checking whether the user is currently in the room instead?\nI'd really like to have some comments here to explain what we are doing and why.. aw, I liked the read-through cache it was useful for debugging.\nIf you really want to remove it from here you should probably remove the DEBUG_CACHES variable entirely.. Would it make sense to intern the strings?. Maybe add a comment on why we use a namedtuple for this that explains how much memory we save by doing so.. The {} is confusing me because it doesn't make sense as a default value here.\nHowever I see that the code works because of the if profile_info below.\nMaybe room_members.get(uid, None) or just room_members.get(uid) would make more sense here?. fair enough, might be worth looking into as a future optimisation given how much duplication we are expecting here.. Is this else still correct? Could the member have a profile_info.display_name == None?. Is this logging useful and how noisy is it?. Could you add a comment to explain why this is necessary?. I think you are safe to ignore the forgotten stuff if we are only looking for rooms that the user is joined/invited to. I think you can only forget a room that you have left?. Maybe add something like:\n```python\n(If the map wasn't immutable then this prefill could race with another update)\n``. Yes, we probably should. Should we be doing it here? or when the state is calculated?. Is this debug logging still correct?. Is this number of arguments here correct?. Is it worth interning the host strings here?. Did you meanif ev_entry:?. Should you be iterating over themember_event_idsinstead.. Should you be usingmissing_member_event_idshere?. Is there a reason this number is going down at the same time as changing the cache structure?. Hmm this looks a bit duplicated?. I think it's important that the RulesForRoom object is added to theself._get_rules_for_room.cachebefore any lookup methods are called on it, otherwise there would be a race inRulesForFroom.invalidate_all` between adding the object to the cache and fetching it from the cache to invalidate it.\nMight be worth chucking a comment in to that effect.. If we are optimising it might be worth noting that a, b  = key seems to be faster than a = key[0], b = key[1]. Could we have a comment explaining why this cache doesn't need invalidation.. Also might be worth explaining that \"uninteresting\" means \"will never have push rules on this server\". Maybe comment to say this is NULL if the key was added.. > Falsse. o. > hist_vis. It looks like lines 204-221 are duplicates of 172-197. Maybe lift them into a function?. Maybe add a UNIQUE index.. Why 100?. Should this be \"or if neither do\" ?. You could write this as:\npython\nold_value_is_public = prev_value == public_value\nnew_value_is_public = value == public_value\nif old_value_is_public == new_value_is_public:\n   defer.returnValue(None)\nelse:\n   defer.returnValue(new_value_is_public)\nI'm not sure if it is clearer or not.. The None is redundant.. Maybe comment on why this is necessary?. It might help the query optimiser if you threw in a type = 'm.room.member' on the where clause so that it can better use the current_state_events_room_id_type_state_key_key index.\nI think you might want to remove the \"room_id\" from the join since we want it to force it to join using the room_memberships_event_id_key index.\nOn matrix.org:\n```\nmatrix=# explain SELECT state_key FROM current_state_events \n  INNER JOIN room_memberships USING (room_id, event_id) \n  WHERE membership = 'join'\n  AND room_id = '!cURbafjkfsMDVwdRDQ:matrix.org' \n  AND state_key LIKE '%:matrix.org';\n                                                    QUERY PLAN\n\n\nNested Loop  (cost=898.53..95521.12 rows=11 width=18)\n   ->  Bitmap Heap Scan on current_state_events  (cost=897.97..32646.62 rows=7500 width=83)\n         Recheck Cond: (room_id = '!cURbafjkfsMDVwdRDQ:matrix.org'::text)\n         Filter: (state_key ~~ '%:matrix.org'::text)\n         ->  Bitmap Index Scan on current_state_events_room_id_type_state_key_key  (cost=0.00..896.09 rows=12205 width=0)\n               Index Cond: (room_id = '!cURbafjkfsMDVwdRDQ:matrix.org'::text)\n   ->  Index Scan using room_memberships_event_id_key on room_memberships  (cost=0.56..8.37 rows=1 width=65)\n         Index Cond: (event_id = current_state_events.event_id)\n         Filter: ((room_id = '!cURbafjkfsMDVwdRDQ:matrix.org'::text) AND (membership = 'join'::text))\n(9 rows)\nmatrix=# explain SELECT state_key FROM current_state_events\n  INNER JOIN room_memberships USING (event_id)\n  WHERE membership = 'join'\n  AND current_state_events.room_id = '!cURbafjkfsMDVwdRDQ:matrix.org'\n  AND state_key LIKE '%:matrix.org'\n  AND type='m.room.member';\n                                                       QUERY PLAN                                                        \n\nNested Loop  (cost=591.87..63361.07 rows=2660 width=18)\n   ->  Bitmap Heap Scan on current_state_events  (cost=591.31..23057.21 rows=4766 width=52)\n         Recheck Cond: ((room_id = '!cURbafjkfsMDVwdRDQ:matrix.org'::text) AND (type = 'm.room.member'::text))\n         Filter: (state_key ~~ '%:matrix.org'::text)\n         ->  Bitmap Index Scan on current_state_events_room_id_type_state_key_key  (cost=0.00..590.11 rows=7756 width=0)\n               Index Cond: ((room_id = '!cURbafjkfsMDVwdRDQ:matrix.org'::text) AND (type = 'm.room.member'::text))\n   ->  Index Scan using room_memberships_event_id_key on room_memberships  (cost=0.56..8.45 rows=1 width=34)\n         Index Cond: (event_id = current_state_events.event_id)\n         Filter: (membership = 'join'::text)\n``\n. I think this could be written asi < len(keys). >) u?. Did you mean for the power_level_content to end up in this PR?. Ah, I see that you are using the overrides as part of the shutdown API.\nThe override stuff is trivial enough for me to to review as part of this PR.\nIt just looked orthogonal to me at first, hence me asking whether you meant to push it as part of the PR :). This is slightly evil, I suspect that people looking at the _simple_select_one_onecol wouldn't expect someone to pass \"1\" as a column ID. But it's probably fine for now. :(. Do we also have to worry about client generated thumbnails?. > eitehr. > paramaters. Is this json? Should some indication of this either as a comment or as a suffix on the column?. What does \"is_public\" mean? Does it mean the group is public? or does it mean the room is public? or does it mean something else?. What does \"is_public\" mean? Does it mean the group is public? or does it mean the room is public? or does it mean something else?. Should \"name\" be called \"display_name\"?. Could you add some comments to explain what these numbers mean and what the effect of increasing or decreasing the would be?. Could you add a something to docstring to document the order the rooms are returned in?. Is this called anywhere?. Because it makes it easier to tell that it is just a display name. In my opinion we don't have a strong enough convention of using \"name\" only when we are talking about display names that I can infer that it is a display name just because it is called \"name\". So I think it either needs to be called \"display_name\" or it needs a comment to explain what it is.. Umm. Did you put the comment on the wrong line?. Eh, leave it as is if you insist, but I'd like to see a comment explaining what it is :). Umm, shouldn't this besize_callback=_size_calback?. Umm,self.self`?. Will this be larger than all the others, or the same as the largest?. Maybe use the empty string as the default ID here?. Maybe check that the category is not the default ID.. ensuer. Why do we need a single row OOI? (It might be helpful to say here in the comment). Should the \"desc\" be \"update_group\"?. Maybe check that the values are \"strings\" otherwise postgresql might become sad when we try to insert them, and sqlite will probably do weird things.. \"meme br ship\"?. Hmm, I thought we generally used \"join\" rather than \"joined\", \"invite\" rather than \"invited\" and \"leave\" rather than \"left\" etc.. I've somewhat lost track of whether we call this \"admin\" or \"privileged\" in the rest of the API. Is it intentional that we are calling this \"admin\" internally and \"privileged\" externally?. Maybe update the example as well?. Why is this a TEXT column?. > havent' . > subcscribed . I'm not sure I want to know why this is needed, but future generations deserve to know why we did what we did.. Is this actually called anywhere? Or is the cache write-only at the moment?. ",
    "thijstriemstra": "Here's the link you can click on: http://matrix.org/jira\n. Here's the link you can click on: http://matrix.org/jira\n. ",
    "Osndok": "I hope you will reconsider. I know that filing report in JIRA might help your in-place workflow, but consider what it is like from \"our side\". For a github user that contributes to 100's of different projects, the cost difference between \"zero\" (if people use github to track issues) and \"every project has their own mechanism and account credentials to store and recall\"... is huge.\nI have routinely passed on opportunities to contribute code, bug reports, and bug-fixes to various projects (even big-name projects) because the fix was easier than the increased and persistent overhead of adding one more account to keep track of, and the registration and dissemination associated therewith, or the subornation that might ensue.\nIMO, the greatest feature of github is lowering the barrier to entry; in theory, I can fix a typo here... a missing null-pointer check there... an unforeseen edge-case over there... but when compared to this \"social coding\" paradigm of zero overhead ... a per-project registration might as well be a brick wall.\nAnd I'm not alone... I believe it was on Coder Radio where the hosts agreed that even the initial registration overhead for ABRT ... which is supposed to make a vast array of bug reports possible with a single click .... is enough to keep them out. If even 1% of github users are similarly effected, you are literally missing out on hundreds of thousands of potential contributors.\nI think that the \"society\" has a far greater inertia than you realize. It may be driven by human laziness, but how great is that laziness!\nThankfully, it seems that you have not disabled issue tracking in github, or you would not have received even this grand-and-important communication! :-)\nAnyway... I hope that you might still consider github pull requests, as I had a few features in might that might integrate RetroShare ... which I think would be awesome... but I'll avoid filing a github feature tracker for it, to be in alignment with your wishes.\nBest wishes!\n. ",
    "richvdh": "To be clear: we have nothing against github pull requests - they are very welcome! The request to file issues in Jira just concerns bug reports and feature requests.\nSo if you would like to contribute with a PR, that would be great!\n. @NegativeMjark could you take a quick look?\n. @NegativeMjark could you take a quick look?\n. @erikjohnston: would you mind taking a look?\n. Thanks Mark. In view of yesterday's discussion about docstring format, I'm going to go ahead and merge this.\n. This was merged into develop, but github doesn't understand that.\n. Sigh. No, github, I merged the change to develop: https://github.com/matrix-org/synapse/commit/fddedd51d9ca44f385d412e8c2e3e8d99325ba67\n. dup #969 \n. I'm not sure what's left to do here. We have debian packages: http://matrix.org/packages/debian/.\n. lgtm\n. LGTM other than the recursion weirdness\n. ltgm!\n. lgtm\n. lgtm\n. yay twisted\nlgtm\n. yay twisted\nlgtm\n. LGTM.\n. LGTM.\n. Going to redo this, on the release branch\n. Going to redo this, on the release branch\n. This isn't what erik meant.\n. This isn't what erik meant.\n. retest this please\n. > The original reason for not including an event was that you generally would never see an event_id without the event.\nheh. Obviously we're changing that.\n\nAre there any doc PRs?\n\nNot yet. It's on my todo list.\n. ta\n. Please come to https://matrix.to/#/#matrix:matrix.org for support questions.\n. @illicitonion ptal?\n. retest this please\n. retest this please\n. retest this please\npleeeease\n. retest this please\n. retest this please\n. scratch this, it doesn't help the problem\n. retest this please\n. retest this please\n. retest this please\n. retest this please\n. retest this please\n. retest this please\n. retest this please\n. retest this please\n. retest this please\n. retest this please\n. retest this please\n. retest this please\n. I'm afraid I don't think this belongs here; it's too specific to your environment. It might be more appropriate in contrib, but if I'm honest I'm not sure it adds much value anyway.\nI'm going to close it for now.. @erikjohnston ptal\n. Please come to https://matrix.to/#/#matrix:matrix.org for support questions.\n. (The branch was based on v0.16.0 so if there are fixes to the dendron tests since then, this won't have them)\n. There will be. Currently it's in https://docs.google.com/document/d/1H8Z5b9kGKuvFkfDR1uQHaKdYxBD03ZDjMGH1IXQ0Wbw/edit. Per https://github.com/matrix-org/matrix-doc/blob/master/CONTRIBUTING.rst#specification-changes, it has to go into server and clients, first.\nThat's why it's only on /unstable...\n. @NegativeMjark: please could you take a look at the hackery to fix the tests?\n. ta\n. I can't speak to the correctness of the changes themselves, but in my experience, when stuff starts getting complicated, lots of comments explaining what is going on can really help. I'm surprised to see quite a lot of code here, with little attention to comments explaining why things are doing what they are doing. \n. LGTM, modulo the test fails\n. lgtm\n. (modulo the fails)\n. so this is fixed by upgrading Twisted to 17.1.0. We should recommend that in the README, but this is fixed.. looks ok, except for:\n- test fail\n- needs a database migration\n. The API has changed now, so I'm afraid this is out of date.. sorry, I don't think we're going to be able to accept a script of this complexity into the official documentation; we won't have the resources to maintain it.\nWe could consider putting something into contrib if you like.. I'm not sure what this is trying to achieve, but putting calls to sleep in twisted code certainly isn't the right way to achieve it...\n. I'm not sure what this is trying to achieve, but putting calls to sleep in twisted code certainly isn't the right way to achieve it...\n. you can't just put sleeps in twisted code. It freezes the whole reactor.\nyou may want synapse.util.async.sleep, but you'll have to learn about twisted's deferred mechanism first.\nIn any case, I'm not sure about the wisdom of allowing other things to carry on while the purge is in progress. Perhaps @erikjohnston can comment.\n. I appreciate this expands the scope significantly, but if we're going so far as to move the access token into headers, perhaps it's a good time to consider making the access token into a session key and using it to sign requests (per https://www.ietf.org/archive/id/draft-ietf-oauth-v2-http-mac-05.txt) instead of sending the whole thing back on each request?\n. matrixbot: ok to test\n. Backwards compatible in what sense? This should work with any spec-conforming CAS server (including our internal one).\n. And it won't affect the client side.\n. looks... plausible?\n. Are you trying to use your own server as an identity server? If so, you need https://github.com/matrix-org/sydent rather than synapse. Suggest asking for help in https://matrix.to/#/#matrix:matrix.org rather than here.\n. I think this is an issue with the docker image. I suggest raising it at https://github.com/silvio/docker-matrix.\n. I think this is an issue with the docker image. I suggest raising it at https://github.com/silvio/docker-matrix.\n. It's an issue with alpine linux, not synapse. . It's an issue with alpine linux, not synapse. . We're not going to stop using ujson just because alpinelinux ship a broken version of it, no.. We're not going to stop using ujson just because alpinelinux ship a broken version of it, no.. (or rather, whatever brokenness it is that alpinelinux has). (or rather, whatever brokenness it is that alpinelinux has). A segfault takes out the whole python process. We can't catch it and recover from within python. . A segfault takes out the whole python process. We can't catch it and recover from within python. . Despite wishful thinking on my part, this doesn't seem to have been fixed at ultrajson or alpinelinux, so it looks like we're going to have to find a workaround for this.. > How much faster than json is ujson anyway?\n\"much\", according to erik.. > @richvdh hasn't the workaround already been found? s/ujson/json/g\nWe'd prefer not to drop all use of ujson, for performance reasons.. Could anyone who has been having trouble with this see if the patch in https://github.com/matrix-org/synapse/commit/e961569e9330da2108fbf75d8d51938a953c8469 helps them?. I was trying to avoid setting up docker environments and hoping somebody else could test it.... great news. @silvio any chance you could bump your docker images to include the fix?. thanks all. either way it sounds like we can finally close this bug.. > Is it possible to configure federation for ports different than 8448?\nYes, this is exactly what the SRV record is for.\nRemember it may take a few hours for a changed DNS record to propagate. If you can't get it to work, we're better able to provide support in https://matrix.to/#/#matrix:matrix.org than in github issues.\n. This ticket amounts to \"federation isn't working for me\", which isn't a useful thing to track as an issue, because there are a number of things which could cause it - mostly related to configuration. So no, sorry.\n. We're currently working on a tool which will check that servers are set up correctly for federation, which might help.\n. Fix what? is there a bug? what isn't working?\nhttp://chris.beams.io/posts/git-commit/\n. sorry, I don't get this.\n. The offending method appears to have been removed in 05e01f21\n- which, given it was in June, makes me wonder why this has only just become a problem?\n. > which, given it was in June, makes me wonder why this has only just become a problem?\nOh, because it's a one-off background update, which will only be a problem for you if you are upgrading directly from before the reindex was introduced, to after 05e01f2.\n. > I heard, this can take hours if the database is large (3GB on our server)\nThis is incorrect.\nWhich version specifically? The device_inbox table was added in 0.17.2. \nThe synapse logs from when you started 0.18 would be helpful.\n. > How can I see, which version I had before?\nI was hoping you might remember. When did you last upgrade? Otherwise the version is in the logs, at startup, if you have something going back that far. For example: \n\n2016-09-24 23:13:37,048 - synapse.app.homeserver - 291 - INFO - - Server version: Synapse/0.18.0 (b=HEAD,t=v0.18.0,88acb99)\n\n\n\nIf you need some logs, maybe in my rsnapshot-backups.\nwhat exactly do you need?\n\nI'm interested in seeing the rest of the prepare_database lines from when you first tried to start 0.18.0. \n. Ok so the important bits are:\n2016-09-27 13:57:18,051 - synapse.app.homeserver - 309 - INFO - - Preparing database: sqlite3...\n2016-09-27 13:57:18,053 - synapse.storage.prepare_database - 212 - INFO - - Upgrading schema to v33\n2016-09-27 13:57:18,054 - synapse.storage.prepare_database - 212 - INFO - - Upgrading schema to v34\n2016-09-27 13:57:18,054 - synapse.storage.prepare_database - 256 - INFO - - Applying schema 34/appservice_stream.sql\n2016-09-27 13:57:18,330 - synapse.storage.prepare_database - 245 - INFO - - Running script 34/cache_stream.py\n2016-09-27 13:57:18,330 - synapse.storage.prepare_database - 256 - INFO - - Applying schema 34/device_inbox.sql\n2016-09-27 13:57:18,642 - synapse.storage.prepare_database - 256 - INFO - - Applying schema 34/push_display_name_rename.sql\n2016-09-27 13:57:18,643 - synapse.storage.prepare_database - 245 - INFO - - Running script 34/received_txn_purge.py\nand\n2016-09-27 14:02:46,283 - synapse.app.homeserver - 309 - INFO - - Preparing database: sqlite3...\n2016-09-27 14:03:16,406 - synapse.storage.prepare_database - 212 - INFO - - Upgrading schema to v34\n2016-09-27 14:03:16,406 - synapse.storage.prepare_database - 256 - INFO - - Applying schema 34/device_inbox.sql\nIt looks like the first time ran 34/device_inbox.sql, creating the device_inbox table, but failed to record that in the applied_schema_deltas table. The only thing I can think of is that you killed the synapse process during 34/received_txn_purge.py, and on restart sqlite ended up rolling back the update to applied_schema_deltas update but not the create table.\nIt's a bit of an edge-case, so I'm not sure we're going to do much about it, but perhaps we could run the schema delta and the applied_schema_deltas update in a single transaction? Or just try harder to make the deltas idempotent. Any thoughts, @erikjohnston ?\n. > creation of tables are done as part of the transaction\ns/done/not done/ ?\nSounds like we should do one of three things:\n1. turn this into a generic \"try to make the delta files idempotent\" bug\n2. WONTFIX this issue and say that we are going to try to make the delta files idempotent in future\n3. WONTFIX this issue and say that if you SIGTERM your synapse in the middle of the upgrade process you can expect to have to put the database back together manually\n. > I'm tempted by 2, personally.\nSounds sensible to me. We can always go back and do the others in the future if it turns out to be a big problem; meanwhile we can gain some experience of making them idempotent with new ones.\n@rubo77: tyvm for the report, and for the debugging help!\n. ok to test\n. the original does look completely bogus. @erikjohnston: can you review?\n. oh, you weren't talking to me, were you.\n. Should this fix vector-im/vector-web#2490?\n. pik: I edited your description slightly to correct some typing errors. I hope I didn't misunderstand you.\nThanks very much for all your thoughts on this. There is a /lot/ of stuff here though, covering a range of aspects; I'm not sure this is an actionable issue as it stands.\nSome random thoughts:\nI like the idea of extending the macaroons to apply further restrictions; however I think it's a mistake to try to do it in a general way so that clients can apply arbitrary restrictions based on HTTP method, URL, and query-parameters: this is always going to be leaky. Better to specify higher-level caveats (allowed_room_ids, read_only) which the server then enforces appropriately across all APIs.\nI'm not sure how plausible it is to have clients able to add a room_id caveat to an existing access-token: think of something like /sync, which returns data from many rooms (as well as non-room-specific information) - how would a room_id caveat apply to that? You could restrict the results from /sync based on the caveat, but that would mix up the authorisation with the behaviour in a bad way.  Better to have separate users who are restricted in which rooms they can join/peek in. Or maybe even users that are joined to specific rooms as soon as they are created, and cannot join or peek in any others.\nI don't necessarily think that having to register with the server necessarily harms UX. Your client, or indeed a server-side application can automatically register with the matrix server; provided this can be done without user-interaction there is no need for it to affect UX.\n. This was fixed by #1059.\nHowever, we actually no longer use sent_transactions at all, since #1188. (However, #1188 didn't actually delete the table, and it will contain the last 6 hours of transactions before upgrading to 0.18.4).. I believe this was fixed by https://github.com/matrix-org/synapse/pull/1098.. I believe this was fixed by https://github.com/matrix-org/synapse/pull/1098.. dup #1648 . I wish we would do this. A lot of time is spent helping everyone set up their synapse. . Yeah; it's not actually POSTing keys for a different user_id - it is allowing you to quote a different user_id in the key body, which doesn't do you a lot of good, since clients should reject it.\nOTOH, it would be helpful if synapse did actually reject such malformed key uploads, both to help with development, and as an additional security check.. I reinstated the test: https://github.com/matrix-org/sytest/blob/11cb286fa36dcf7d3bfe348eb84691083ee05798/tests/41end-to-end-keys/01-upload-key.pl#L38. I think we should assume, that modulo specific cases such as #1737, this has gone away.\nWorth noting that the limiter is applied more-or-less per api call, rather than in the federation http layer, so it's entirely possible for some retries to be happening even though a server is considered \"dead\" in general.. For some reason this particularly affects #matrix-dev.. Hopefully fixed by #2050 . Hopefully fixed by #2050 . Note that doing this needs a spec change, as per matrix-org/matrix-doc#612. spec bug: https://github.com/matrix-org/matrix-doc/issues/613. Looks like this is worth another look; the twisted PR has been closed with a link to an API \n. Dup #1491 \n. dup #1933. I remain unconvinced about the need to ship a client with synapse, ftr. I see enough people getting confused about the distinction between clients and servers (and thinking that they have to use the client that ships with their HS) that I think we would be better off separating them and making people jump through a separate hoop to install a client.\n(Also: the debian package doesn't include a client. We should at least be consistent.). > matrix.to supported a ?homeserver=\n+1 to this, in any case. FTR, I ripped out the string matching in vector because frankly \"you cannot rejoin an empty room\" was worse when the room wasn't empty.\nWe get this error when:\n The room never existed\n The room once existed, but everybody in it has left\n You are trying to join by room id, and the room id is on a different homeserver (and the room is not yet federated to your own homeserver).\n (I think?) You are trying to join by room alias, and the alias is on an unreachable homeserver.\n* Probably some other reasons. I rather hope this was fixed by #2016 . dup (or at least related to) #1405 . Hopefully fixed by #2050 . This is probably #1935 . hrm... maybe not.. works for me.. so notabug?. 016-11-10 19:50:29,436 - synapse.http.server - 139 - ERROR - GET-42- Failed handle request synapse.http.server._async_render on <synapse.rest.ClientRestResource object at 0x7f3e1f0927d0>: <SynapseRequest at 0x7f3e1e6db830 method=GET uri=/_matrix/client/r0/rooms/!RoiHwUcCARaykMwyRo%3Afred.sw1v.org/messages?from=t462-986_36147_0_444_14_20_1009&limit=20&dir=b&access_token=<redacted> clientproto=HTTP/1.1 site=8008>\nTraceback (most recent call last):\n  File \"synapse/http/server.py\", line 116, in wrapped_request_handler\n    yield request_handler(self, request, request_metrics)\n  File \"/home/rav/work/synapse/env/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/rav/work/synapse/env/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/http/server.py\", line 255, in _async_render\n    callback_return = yield callback(request, **kwargs)\n  File \"/home/rav/work/synapse/env/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/rav/work/synapse/env/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/rest/client/v1/room.py\", line 426, in on_GET\n    event_filter=event_filter,\n  File \"/home/rav/work/synapse/env/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/rav/work/synapse/env/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/handlers/message.py\", line 126, in get_messages\n    room_id, max_topo\n  File \"/home/rav/work/synapse/env/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1128, in _inlineCallbacks\n    result = g.send(result)\n  File \"synapse/handlers/federation.py\", line 611, in maybe_backfill\n    states = dict(zip(event_ids, [s[1] for s in states]))\nTypeError: '_StateCacheEntry' object does not support indexing\n. >  I got put into a room I didn't join myself, \nI think you did join it (at least) once, so I think what has happened here is that you got spuriously re-joined to the room after you left, which I think makes this the same as the issue I'm investigating at #1933 .. > I had the same issue with room !cURbafjkfsMDVwdRDQ:matrix.org which I never joined.\nAre you absolutely sure? If it is true, that is a serious issue. Please make yourself known on Matrix to clarify.. @penguin42: looks like you were specifying the height before, so that would imply the difference is the absence of an access token? Are you sure? Could this actually be https://github.com/matrix-org/synapse/issues/1401?. It's unclear what the problem is here. If you can provide a URL that gives a 500, we can investigate.. This is fixed in the next version of the spec: http://matrix.org/speculator/spec/HEAD/client_server/unstable.html#get-matrix-client-unstable-publicrooms. This is fixed in the next version of the spec: http://matrix.org/speculator/spec/HEAD/client_server/unstable.html#get-matrix-client-unstable-publicrooms. dup #1647 . dup #1647 . The pagination request (https://matrix.org/_matrix/client/r0/rooms/!XqBunHwQIXUiqCaoxq%3Amatrix.org/messages?from=t84649-58189869_83662686_533697_7129147_48871_22742_79637&limit=20&dir=b&access_token=...) gives a 401.\nIt appears to be attempting to backfill (from itself) and getting a rejection:\n2016-11-24 09:56:08,078 - synapse.access.http.8080 - 59 - INFO - GET-21759394 - 83.166.71.13 - 8080 - Received request: GET /_matrix/client/r0/rooms/!XqBunHwQIXUiqCaoxq%3Amatrix.org/messages?from=t84452-56988928_80666331_105075_6492258_42512_20549_49740&limit=20&dir=b&access_token=<redacted>\n2016-11-24 09:56:08,100 - synapse.http.outbound - 122 - INFO - GET-21759394 - {GET-O-36010242} [perlsite.co.uk] Sending request: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24144706665122FHIxp%3Aoddvar.org&v=%24141875666110yGiSq%3Ajki.re&v=%24146889759458Xz\nHkK%3Akentshikama.com&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414794849711587VZxnv%3Aldbco.de\n2016-11-24 09:56:08,226 - synapse.http.matrixfederationclient - 181 - WARNING - GET-21759394 - {GET-O-36010242} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24144706665122FHIxp%3Aoddvar.org&v=%24141875666110yGiSq%3Ajki.re&v=%24146889759458XzHkK%3Akentshikama.com&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414794849711587VZxnv%3Aldbco.de: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2016-11-24 09:56:09,136 - synapse.http.matrixfederationclient - 181 - WARNING - GET-21759394 - {GET-O-36010242} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24144706665122FHIxp%3Aoddvar.org&v=%24141875666110yGiSq%3Ajki.re&v=%24146889759458XzHkK%3Akentshikama.com&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414794849711587VZxnv%3Aldbco.de: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2016-11-24 09:56:09,981 - synapse.http.matrixfederationclient - 181 - WARNING - GET-21759394 - {GET-O-36010242} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24144706665122FHIxp%3Aoddvar.org&v=%24141875666110yGiSq%3Ajki.re&v=%24146889759458XzHkK%3Akentshikama.com&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414794849711587VZxnv%3Aldbco.de: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2016-11-24 09:56:12,646 - synapse.http.matrixfederationclient - 181 - WARNING - GET-21759394 - {GET-O-36010242} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24144706665122FHIxp%3Aoddvar.org&v=%24141875666110yGiSq%3Ajki.re&v=%24146889759458XzHkK%3Akentshikama.com&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414794849711587VZxnv%3Aldbco.de: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2016-11-24 09:56:12,646 - synapse.http.outbound - 207 - INFO - GET-21759394 - {GET-O-36010242} [perlsite.co.uk] Result: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2016-11-24 09:56:12,646 - synapse.handlers.federation - 589 - ERROR - GET-21759394 - Failed to backfill from perlsite.co.uk because Connection was refused by other side: 111: Connection refused.\nTraceback (most recent call last):\n  File \"synapse/handlers/federation.py\", line 562, in try_backfill\n    extremities=[e for e in extremities.keys()]\nConnectionRefusedError: Connection was refused by other side: 111: Connection refused.\n2016-11-24 09:56:12,646 - synapse.http.outbound - 122 - INFO - GET-21759394 - {GET-O-36010648} [localhost] Sending request: GET matrix://localhost/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24144706665122FHIxp%3Aoddvar.org&v=%24141875666110yGiSq%3Ajki.re&v=%24146889759458XzHkK%3Akentshikama.com&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414794849711587VZxnv%3Aldbco.de\n016-11-24 09:56:13,164 - synapse.http.outbound - 207 - INFO - GET-21759394 - {GET-O-36010648} [localhost] Result: 401 Unauthorized\n2016-11-24 09:56:13,165 - synapse.http.server - 126 - ERROR - GET-21759394 - 401: Unauthorized\nTraceback (most recent call last):\n  File \"synapse/http/server.py\", line 116, in wrapped_request_handler\n    yield request_handler(self, request, request_metrics)\n  File \"synapse/http/server.py\", line 255, in _async_render\n    callback_return = yield callback(request, **kwargs)\n  File \"synapse/rest/client/v1/room.py\", line 399, in on_GET\n    event_filter=event_filter,\n  File \"synapse/handlers/message.py\", line 127, in get_messages\n    room_id, max_topo\n  File \"synapse/handlers/federation.py\", line 595, in maybe_backfill\n    success = yield try_backfill(likely_domains)\n  File \"synapse/handlers/federation.py\", line 562, in try_backfill\n    extremities=[e for e in extremities.keys()]\n  File \"synapse/handlers/federation.py\", line 341, in backfill\n    extremities=extremities,\n  File \"synapse/federation/federation_client.py\", line 232, in backfill\n    dest, context, extremities, limit)\n  File \"synapse/http/matrixfederationclient.py\", line 398, in get_json\n    timeout=timeout,\n  File \"/mnt/disk/home/matrix/venv-synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1128, in _inlineCallbacks\n    result = g.send(result)\n  File \"synapse/http/matrixfederationclient.py\", line 217, in _create_request\n    response.code, response.phrase, body\nHttpResponseException: 401: Unauthorized\n2016-11-24 09:56:13,165 - synapse.access.http.8080 - 91 - INFO - GET-21759394 - 83.166.71.13 - 8080 - {@dave:matrix.org} Processed request: 5087ms (40ms, 0ms) (1ms/1) 46B 401 \"GET /_matrix/client/r0/rooms/!XqBunHwQIXUiqCaoxq%3Amatrix.org/messages?from=t84452-56988928_80666331_105075_6492258_42512_20549_49740&limit=2. The pagination request (https://matrix.org/_matrix/client/r0/rooms/!XqBunHwQIXUiqCaoxq%3Amatrix.org/messages?from=t84649-58189869_83662686_533697_7129147_48871_22742_79637&limit=20&dir=b&access_token=...) gives a 401.\nIt appears to be attempting to backfill (from itself) and getting a rejection:\n2016-11-24 09:56:08,078 - synapse.access.http.8080 - 59 - INFO - GET-21759394 - 83.166.71.13 - 8080 - Received request: GET /_matrix/client/r0/rooms/!XqBunHwQIXUiqCaoxq%3Amatrix.org/messages?from=t84452-56988928_80666331_105075_6492258_42512_20549_49740&limit=20&dir=b&access_token=<redacted>\n2016-11-24 09:56:08,100 - synapse.http.outbound - 122 - INFO - GET-21759394 - {GET-O-36010242} [perlsite.co.uk] Sending request: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24144706665122FHIxp%3Aoddvar.org&v=%24141875666110yGiSq%3Ajki.re&v=%24146889759458Xz\nHkK%3Akentshikama.com&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414794849711587VZxnv%3Aldbco.de\n2016-11-24 09:56:08,226 - synapse.http.matrixfederationclient - 181 - WARNING - GET-21759394 - {GET-O-36010242} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24144706665122FHIxp%3Aoddvar.org&v=%24141875666110yGiSq%3Ajki.re&v=%24146889759458XzHkK%3Akentshikama.com&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414794849711587VZxnv%3Aldbco.de: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2016-11-24 09:56:09,136 - synapse.http.matrixfederationclient - 181 - WARNING - GET-21759394 - {GET-O-36010242} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24144706665122FHIxp%3Aoddvar.org&v=%24141875666110yGiSq%3Ajki.re&v=%24146889759458XzHkK%3Akentshikama.com&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414794849711587VZxnv%3Aldbco.de: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2016-11-24 09:56:09,981 - synapse.http.matrixfederationclient - 181 - WARNING - GET-21759394 - {GET-O-36010242} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24144706665122FHIxp%3Aoddvar.org&v=%24141875666110yGiSq%3Ajki.re&v=%24146889759458XzHkK%3Akentshikama.com&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414794849711587VZxnv%3Aldbco.de: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2016-11-24 09:56:12,646 - synapse.http.matrixfederationclient - 181 - WARNING - GET-21759394 - {GET-O-36010242} Sending request failed to perlsite.co.uk: GET matrix://perlsite.co.uk/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24144706665122FHIxp%3Aoddvar.org&v=%24141875666110yGiSq%3Ajki.re&v=%24146889759458XzHkK%3Akentshikama.com&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414794849711587VZxnv%3Aldbco.de: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2016-11-24 09:56:12,646 - synapse.http.outbound - 207 - INFO - GET-21759394 - {GET-O-36010242} [perlsite.co.uk] Result: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2016-11-24 09:56:12,646 - synapse.handlers.federation - 589 - ERROR - GET-21759394 - Failed to backfill from perlsite.co.uk because Connection was refused by other side: 111: Connection refused.\nTraceback (most recent call last):\n  File \"synapse/handlers/federation.py\", line 562, in try_backfill\n    extremities=[e for e in extremities.keys()]\nConnectionRefusedError: Connection was refused by other side: 111: Connection refused.\n2016-11-24 09:56:12,646 - synapse.http.outbound - 122 - INFO - GET-21759394 - {GET-O-36010648} [localhost] Sending request: GET matrix://localhost/_matrix/federation/v1/backfill/!XqBunHwQIXUiqCaoxq:matrix.org/?limit=100&v=%24144706665122FHIxp%3Aoddvar.org&v=%24141875666110yGiSq%3Ajki.re&v=%24146889759458XzHkK%3Akentshikama.com&v=%2414396814951757TifFF%3Amatrix.sipgate.net&v=%2414794849711587VZxnv%3Aldbco.de\n016-11-24 09:56:13,164 - synapse.http.outbound - 207 - INFO - GET-21759394 - {GET-O-36010648} [localhost] Result: 401 Unauthorized\n2016-11-24 09:56:13,165 - synapse.http.server - 126 - ERROR - GET-21759394 - 401: Unauthorized\nTraceback (most recent call last):\n  File \"synapse/http/server.py\", line 116, in wrapped_request_handler\n    yield request_handler(self, request, request_metrics)\n  File \"synapse/http/server.py\", line 255, in _async_render\n    callback_return = yield callback(request, **kwargs)\n  File \"synapse/rest/client/v1/room.py\", line 399, in on_GET\n    event_filter=event_filter,\n  File \"synapse/handlers/message.py\", line 127, in get_messages\n    room_id, max_topo\n  File \"synapse/handlers/federation.py\", line 595, in maybe_backfill\n    success = yield try_backfill(likely_domains)\n  File \"synapse/handlers/federation.py\", line 562, in try_backfill\n    extremities=[e for e in extremities.keys()]\n  File \"synapse/handlers/federation.py\", line 341, in backfill\n    extremities=extremities,\n  File \"synapse/federation/federation_client.py\", line 232, in backfill\n    dest, context, extremities, limit)\n  File \"synapse/http/matrixfederationclient.py\", line 398, in get_json\n    timeout=timeout,\n  File \"/mnt/disk/home/matrix/venv-synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1128, in _inlineCallbacks\n    result = g.send(result)\n  File \"synapse/http/matrixfederationclient.py\", line 217, in _create_request\n    response.code, response.phrase, body\nHttpResponseException: 401: Unauthorized\n2016-11-24 09:56:13,165 - synapse.access.http.8080 - 91 - INFO - GET-21759394 - 83.166.71.13 - 8080 - {@dave:matrix.org} Processed request: 5087ms (40ms, 0ms) (1ms/1) 46B 401 \"GET /_matrix/client/r0/rooms/!XqBunHwQIXUiqCaoxq%3Amatrix.org/messages?from=t84452-56988928_80666331_105075_6492258_42512_20549_49740&limit=2. @erikjohnston any idea what is going on here?. oh, this is a dup of https://github.com/matrix-org/synapse/issues/1451. retest this please. retest this please. retest this please. TODO: update the spec to add these endpoints to the allowed-for-guests list. ta\n. > We might want to remove the refresh_tokens database table at somepoint, but fitting that into the schema upgrade process might be subtle given that there are background updates run against that table. So lets leave that for another PR so that it can be reviewed properly.\nyeah, I came to exactly the same conclusion.. test fails seem unrelated.. Yeah, I thought it must be something like that, but has always been fine for my testing. One of the reasons for this PR was to see if jenkins ran happily with the change.\n@NegativeMjark: I'd suggest that we merge this for now, and if we later discover why it was a bad idea, we can revert it with a comment explaining what exactly goes wrong. WDYT?. > Can we comment in the commit why we are reverting to non -n1 ?\nCan do. I'll amend the commit comment. Simply, it's much quicker; also less noisy.\n\nWhat does pip do if it fails to install one package in a list? Revert everything?\n\nIIRC it first does a build pass (which is the bit likely to fail), then an install pass. So if any of the packages fail, nothing gets installed.. (commit comment updated)\nAlso: the installation instructions in README.rst suggest just pip install https://github.com/matrix-org/synapse/tarball/master. Surely this will also install all the deps in a single pass, so would suffer the same problems?. (commit comment updated)\nAlso: the installation instructions in README.rst suggest just pip install https://github.com/matrix-org/synapse/tarball/master. Surely this will also install all the deps in a single pass, so would suffer the same problems?. I think it's reasonably well documented these days. Sorry, I already did something like this in #1660 . Sorry, I already did something like this in #1660 . This has broken the unit tests. Please can we not merge PRs without running the tests.. This has broken the unit tests. Please can we not merge PRs without running the tests.. http://matrix.org/jenkins/job/SynapseUnittestsCommit/2165/testReport/\nThe problems are probably in the unit tests rather than your fix, but nevertheless they need fixing. I can do so if you don't beat me to it. My snarky comment was aimed at @ara4n .... http://matrix.org/jenkins/job/SynapseUnittestsCommit/2165/testReport/\nThe problems are probably in the unit tests rather than your fix, but nevertheless they need fixing. I can do so if you don't beat me to it. My snarky comment was aimed at @ara4n .... tox -e py27 should do it\nOr if you already have a virtualenv, trial tests. tox -e py27 should do it\nOr if you already have a virtualenv, trial tests. (maybe tox doesn't work; it's a bit of a black box to me tbh). (maybe tox doesn't work; it's a bit of a black box to me tbh). @aurabindo: this looks like an issue from the sender's side. I'll raise it on the android project.. Again, looks like an issue on the sender.. matrixbot: ok to test. Thanks!. I'll leave then jenkins equivalents in place for now, but if we decide the travis jobs are working ok we can kill them off later.. @babolivier is this still a problem for you?. > Without your changes running setup.py test on my box installs tox and runs the tests.\nIn a clean virtualenv, following the instructions at https://github.com/matrix-org/synapse/blob/master/README.rst#synapse-development?\n. > Without your changes running setup.py test on my box installs tox and runs the tests.\nIn a clean virtualenv, following the instructions at https://github.com/matrix-org/synapse/blob/master/README.rst#synapse-development?\n. I'm a bit dubious, but have done as you suggest.. @erikjohnston @NegativeMjark ptal?. \"ubuntu 16.04\" is not a great bug report.. \"ubuntu 16.04\" is not a great bug report.. somewhat blocked on https://github.com/matrix-org/matrix-doc/issues/756. somewhat blocked on https://github.com/matrix-org/matrix-doc/issues/756. Yeah... apparently the tests don't think so though. Working on them.\n. retest this please. ok to test. yup, fixed by #1758 . dup https://github.com/matrix-org/synapse/issues/1975. I'm confused about this, but suspect it has gone away.. Hopefully fixed by #2050 . I've been looking at this over the last few days, as it appears to be a common cause of poor performance for many people. Conclusions so far follow.\nThere are two principal causes for the accumulation of extremities:\nThe first is your server being offline, or unreachable by other servers in the federation. This can lead to a gap in the room DAG. Your server will make an attempt to backfill when it receives events after a gap, but will cap this to 10 events, and the backfill attempt may not succeed. To some extent, this situation is to be expected. However, it is particularly nasty because the accumulation of extremities makes your server perform poorly, which makes it slow to respond to federation requests, which makes other servers more likely to consider your server offline and stop trying to send to it - thus exacerbating the problem.\nThe second cause is a rejected event. If your server receives an event over federation which it believes was forbidden under the auth rules of the room, it will reject it. However, if other servers in the federation accept it, then it will become part of the DAG as they see it; this means that your server will see a gap in the DAG, and the rejected event's predecessor will become a forward_extremity. This problem is also self-perpetuating, because a rejected event also causes the homeserver's view of the room state to be reset (#1935), which can lead to more rejections (and hence more forward extremities) down the line.\nThis second cause shouldn't really happen, because we don't expect to see rejections unless someone is doing something nefarious, because all HSes should agree on which events are allowed in the DAG. It clearly is happening though, so my current investigation is focussed on trying to pin down why. I'd also like to do something about #1935, such that when a rejection does happen (through incompetence or malice), it doesn't completely mess everything up thereafter.. > It clearly is happening though, so my current investigation is focussed on trying to pin down why\nThe rejections appeared to stem from the fact that the state of the room was out of sync from the very start - it looked like events were received over federation while the join was still in progress, and a race condition meant that the state ended up in an invalid, uh, state. Hopefully this will be fixed by https://github.com/matrix-org/synapse/pull/2016.. > I think i'm right in saying that the conclusion from the last wave of work on this was that we should just speed up state resolution so that it doesn't matter that the DAG is fragmented. @richvdh did this end up being #2864, and did it work?\nYes it did, and I think it helped a bit (though probably not so much on matrix.org where the extremity count tends to be fairly low anyway).\nThe situation is that now we should only have to do state resolution when we get a state event, rather than on every event. (State resolution gets more expensive with more extremities, and with a larger room state.)  For rooms where the traffic is dominated by messages rather than state, I would hope #2864 would make a reasonable difference. For rooms where there are a lot of state changes, it probably won't help much.\n. I thought I'd written this down somewhere, but I can't see it anywhere, so here goes:\nThe main reason not to have every server in the room start sending out \"noop\" events whenever it sees more than a few extremities is a concern that, in trying to fix things for itself, it will actually make the problem worse for everyone else. We would probably end up with quite a lot of these events and we could end up making the problem worse overall.\nIt's something that might be worth experimenting with a bit though.. Ok yes that was discussed at https://riot.im/develop/#/room/#matrix-core:matrix.org/$1516300707383452uirNl:matrix.org, but that conversation got a bit sidetracked by deciding to do #2864 instead. As I wrote there though:\n\nanyway if all the HSes in a room suddenly start generating events which heal their particular holes in the DAG, then the chances are that half of those events won't make it to half the other servers, and we end up in more of a mess than we started\n\nErik also suggested a solution in which we ignore all but the most recent component of connected events in the graph when calculating the current state of a room, and when sending new events (which is effectively what the query above does). The concern is that this would make it easy for somebody to take over a room by deliberately introducing a split in the DAG and giving themselves admin powers in the new component.. https://github.com/matrix-org/synapse/issues/1760#issuecomment-356270367 isn't great because it takes several minutes to run, and it has to be done while synapse is down otherwise the results get overwritten by the cache.\nAn alternative approach is to select the extremities to delete into a temporary table while synapse is running, and then just shut it down to do the actual delete:\n```sql\nBEGIN;\nSET enable_seqscan=off;\nSELECT e.event_id INTO extrems_to_delete FROM event_forward_extremities AS e,\n( \n    SELECT DISTINCT ON (room_id)\n    room_id,\n    last_value(event_id) OVER w AS event_id\n    FROM event_forward_extremities\n    NATURAL JOIN events\n    WINDOW w AS (\n        PARTITION BY room_id\n        ORDER BY stream_ordering\n        range between unbounded preceding and unbounded following\n    )\n    ORDER BY room_id, stream_ordering\n) AS s,\n(\n    select room_id from event_forward_extremities group by room_id having count(*)>1 \n) AS x\nWHERE\n    s.room_id = e.room_id\n    AND e.event_id != s.event_id\n    AND e.room_id = x.room_id;\nCOMMIT;\n-- shut synapse down here\nDELETE FROM event_forward_extremities WHERE event_id IN (SELECT event_id FROM extrems_to_delete);\n-- start it up again\nDROP TABLE extrems_to_delete;\n```\n. we have to figure out what the current state of a room is before we let you send an event (including typing notifications); likewise when you request the state of that room. To calculate current state, we have to state-resolve all of the forward extremities.\nI wouldn't necessarily expect us to have to do state resolution on an incremental sync unless there's been a change in that room (which, given !PcC is quite busy, would happen quite often). \nI would expect us to hit caches more often than not when doing the state resolution, so it should be pretty quick.\nIn short, nothing here jumps out at me.. This was fixed by https://github.com/matrix-org/synapse/pull/1758.. This was fixed by https://github.com/matrix-org/synapse/pull/1758.. This was fixed by https://github.com/matrix-org/synapse/pull/1758.. This was fixed by https://github.com/matrix-org/synapse/pull/1758.. This looks like a bit of a catalogue of fail, but the main issue is probably the same as #3527. Since this is now quite old, and it's unlikely we're ever going to dig into it deeply, I'm going to close it.. > Right - i think @kyrias's woes are solved for now by running twisted 16.6.0 release rather than trunk.\n... but @Lukasa 's patch which was supposed to fix this (https://github.com/twisted/twisted/pull/676/files) only made it into twisted 17.1.0, so this doesn't entirely make sense.. @tomprince: that matches my understanding. Just saying, I am surprised that the problem went away for @kyrias.. @glyph: that was certainly a cause for brokenness, but leaks were being observed even when it was disabled, per https://github.com/matrix-org/synapse/issues/1778#issuecomment-272296360. \nI don't think there is cause for concern here - there is no reason to believe that leaks are still present in twisted 17.1. I just remain a bit mystified as to why kyrias' server would be fixed by a change (downgrade from trunk?) to 16.6.\nRereading now, I wonder if kyrias was actually using 16.6 patched with the fix to 8992.. Oops. It'd be nice if someone could write something in https://github.com/matrix-org/synapse/tree/master/docs/admin_api about this. . The swagger spec is limited to the client-server API. These APIs are synapse-specific.\nOf course, you could give them a swagger UI, but it wouldn't be appropriate to include them in the current one.. Hopefully fixed by #2050 . guessing it's no longer urgent.. seems to be dead. Yes, matrix.org had problems last night: https://matrix.org/blog/2017/01/25/matrix-org-homeserver-outage-25th-jan-2017/. Yes, matrix.org had problems last night: https://matrix.org/blog/2017/01/25/matrix-org-homeserver-outage-25th-jan-2017/. which version of synapse? were you trying to create a new database? is it still a problem in synapse 0.20.0?. @schnuffle's leaked connections show the following in lsof:\npython2.7 12749 synapse   39u     sock                0,7       0t0   2131955 protocol: TCP\nI don't really know what that means.. @schnuffle's leaked connections show the following in lsof:\npython2.7 12749 synapse   39u     sock                0,7       0t0   2131955 protocol: TCP\nI don't really know what that means.. Turns out that sw1v.org leaks FDs too.\nI left a strace running for a while, and here is an example of an FD being opened and leaked:\n9:50:58 epoll_wait(12, [{EPOLLIN, {u32=49, u64=9386145937253990449}}], 42, 171) = 1\n09:50:58 accept(5, {sa_family=AF_INET, sin_port=htons(42796), sin_addr=inet_addr(\"5.9.168.181\")}, [16]) = 71\n09:50:58 fcntl(71, F_GETFD)             = 0\n09:50:58 fcntl(71, F_SETFD, FD_CLOEXEC) = 0\n09:50:58 fcntl(71, F_GETFL)             = 0x2 (flags O_RDWR)\n09:50:58 fcntl(71, F_SETFL, O_RDWR|O_NONBLOCK) = 0\n09:50:58 epoll_ctl(12, EPOLL_CTL_ADD, 71, {EPOLLIN, {u32=71, u64=9386145937253990471}}) = 0\n09:50:58 epoll_wait(12, [{EPOLLIN, {u32=71, u64=9386145937253990471}}], 42, 36) = 1\n09:50:58 recvfrom(71, \"\\26\\3\\1\\0\\317\\1\\0\\0\\313\\3\\3\\201a,\\230+\\237|[\\263b3\\362;\\330\\270J\\2Lf\\326\\245y[\\205\\211\\361\\327\\305W\\234\\0$\\0\\0:\\0\\243\\0\\237\\0k\\0j\\0009\\0008\\0\\210\\0\\207\\0\\242\\0\\236\\0g\\0@\\0003\\0002\\0E\\0D\\3000\\300,\\300(\\300$\\300\\24\\300\\n\\300/\\300+\\300'\\300#\\300\\23\\300\\t\\0\\377\\1\\0\\0h\\0\\v\\0\\4\\3\\0\\1\\2\\0\\n\\0\\34\\0\\32\n09:50:58 epoll_ctl(12, EPOLL_CTL_MOD, 71, {EPOLLIN|EPOLLOUT, {u32=71, u64=9386145937253990471}}) = 0\n09:50:58 epoll_wait(12, [{EPOLLOUT, {u32=71, u64=9386145937253990471}}], 42, 26) = 1\n09:50:58 sendto(71, \"\\26\\3\\3\\0I\\2\\0\\0E\\3\\3\\200t$k\\253z\\216\\224\\v\\1\\2PK\\213\\35\\334\\364\\344E'\\311\\22\\355m\\231\\300yAz\\271\\21\\351\\0\\0\\237\\0\\0\\35\\377\\1\\0\\1\\0\\0#\\0\\0\\0\\17\\0\\1\\1\\0\\20\\0\\v\\0\\t\\10http/1.1\\26\\3\\3\\2\\253\\v\\0\\2\\247\\0\\2\\244\\0\\2\\2410\\202\\2\\2350\\202\\1\\205\\2\\2\\3\\3500\\r\\6\\t*\\206H\\206\\367\\r\\1\\1\\v\\5\\0000\\0241\\0220\\20\\6\\\n09:50:58 epoll_ctl(12, EPOLL_CTL_MOD, 71, {EPOLLIN, {u32=71, u64=9386145937253990471}}) = 0\n09:50:58 epoll_wait(12, [{EPOLLIN, {u32=71, u64=9386145937253990471}}], 42, 0) = 1\n09:50:58 recvfrom(71, \"\\26\\3\\3\\1\\6\\20\\0\\1\\2\\1\\0\\273\\311\\r\\352%\\371\\361\\10\\221\\220\\226*\\311<\\300\\3635i\\230\\6\\241\\361\\2561\\312dtj\\376\\275\\25\\251<\\311\\217\\324\\331\\\\\\240 o\\225f^!\\vd\\vJ\\23|\\320w$\\264\\337\\346\\261[JM0)k\\356\\225W\\17\\203\\300\\324\\265\\331\\325e>G\\1L\\5b+\\222\\0375\\300\\264\\317R\\325\\1r\\325\\340:j\\377\\301\\307\\325%\\31\n09:50:58 epoll_ctl(12, EPOLL_CTL_MOD, 71, {EPOLLIN|EPOLLOUT, {u32=71, u64=9386145937253990471}}) = 0\n09:50:58 epoll_wait(12, [{EPOLLOUT, {u32=71, u64=9386145937253990471}}], 42, 11) = 1\n09:50:58 sendto(71, \"\\26\\3\\3\\0\\252\\4\\0\\0\\246\\0\\0\\1,\\0\\2400\\205\\223~\\32\\374\\242\\200\\36Y\\26h\\254XT\\370\\337O\\236\\333]_?!\\20\\236\\324\\360\\2565\\353\\3350\\3709 \\230[\\376\\370\\354\\337\\214\\247\\230\\323\\352\\304rD\\16G\\341\\311\\267\\260\\274\\307\\34\\227\\204&\\251 \\333\\372\\310y\\274\\304}\\224,\\7\\n\\213R(\\305\\366\\2106v\\345X\\243\\266Z\\237\\343\n09:50:58 epoll_ctl(12, EPOLL_CTL_MOD, 71, {EPOLLIN, {u32=71, u64=9386145937253990471}}) = 0\n09:50:58 epoll_wait(12, [{EPOLLIN, {u32=71, u64=9386145937253990471}}], 42, 499) = 1\n09:50:58 recvfrom(71, \"\\27\\3\\3\\0N\\222\\322\\217T(\\252R\\315\\266\\315\\353\\3538u\\355\\366\\257\\202\\205\\32#\\214E\\331z\\352\\307%\\337\\216\\237^\\323\\314,\\317\\34:r&l\\215\\35\\220\\f\\355\\300\\0(A\\246\\203\\204\\177\\16)\\337\\372\\2410\\270m\\223\\320Rm\\30\\315M\\361\\270\\263e\\220\\351\\224\\240_\\27\\3\\3\\0(\\222\\322\\217T(\\252R\\316\\371l\\364U6rJ\\204\\256\\3\n09:50:58 epoll_ctl(12, EPOLL_CTL_DEL, 71, 0x7fffa30b5800) = 0\n09:50:58 getsockname(71, {sa_family=AF_INET, sin_port=htons(8448), sin_addr=inet_addr(\"109.74.200.146\")}, [16]) = 0\n09:50:58 epoll_ctl(12, EPOLL_CTL_ADD, 71, {EPOLLOUT, {u32=71, u64=9386145937253990471}}) = 0\n09:50:58 epoll_wait(12, [{EPOLLOUT, {u32=71, u64=9386145937253990471}}], 42, 491) = 1\n09:50:58 sendto(71, \"\\27\\3\\3\\0\\270O\\333\\327\\204\\276i\\30\\1kt_A\\7\\5\\244\\30g\\356\\377X\\355\\2365\\246C\\226\\20VY\\374\\2543\\317\\357\\337{\\361\\226\\216\\216\\306P\\177\\311\\301?\\177T`~\\302\\254(CB-\\275\\2212e\\323(\\355\\254\\357\\356\\17f\\342\\365\\256\\340\\203YZ\\t\\257b\\373\\v\\311\\365M\\346\\277SaR\\221\\n\\303sT?\\361\\tLh\\377\\217\\266\\350\\332\\367\\2\n09:50:58 epoll_ctl(12, EPOLL_CTL_DEL, 71, 0x7fffa30b6db0) = 0\nIn other words:\n it was an inbound federation request (from 5.9.168.181)\n we read three packets from it, and sent replies, but then forgot about it.\n* we don't register any interest in reading further packets from it - or noting when it gets closed. Hence the leak.\nThere is nothing in the logs about it.\nIt looks like we have completed TLS negotiation on it, but haven't then read any HTTP requests from it. Perhaps something went wrong in the TLS layer?\nNext step is probably to try to get some more logging out of the accept/TLS code to see what it thinks is going on.. Turns out that sw1v.org leaks FDs too.\nI left a strace running for a while, and here is an example of an FD being opened and leaked:\n9:50:58 epoll_wait(12, [{EPOLLIN, {u32=49, u64=9386145937253990449}}], 42, 171) = 1\n09:50:58 accept(5, {sa_family=AF_INET, sin_port=htons(42796), sin_addr=inet_addr(\"5.9.168.181\")}, [16]) = 71\n09:50:58 fcntl(71, F_GETFD)             = 0\n09:50:58 fcntl(71, F_SETFD, FD_CLOEXEC) = 0\n09:50:58 fcntl(71, F_GETFL)             = 0x2 (flags O_RDWR)\n09:50:58 fcntl(71, F_SETFL, O_RDWR|O_NONBLOCK) = 0\n09:50:58 epoll_ctl(12, EPOLL_CTL_ADD, 71, {EPOLLIN, {u32=71, u64=9386145937253990471}}) = 0\n09:50:58 epoll_wait(12, [{EPOLLIN, {u32=71, u64=9386145937253990471}}], 42, 36) = 1\n09:50:58 recvfrom(71, \"\\26\\3\\1\\0\\317\\1\\0\\0\\313\\3\\3\\201a,\\230+\\237|[\\263b3\\362;\\330\\270J\\2Lf\\326\\245y[\\205\\211\\361\\327\\305W\\234\\0$\\0\\0:\\0\\243\\0\\237\\0k\\0j\\0009\\0008\\0\\210\\0\\207\\0\\242\\0\\236\\0g\\0@\\0003\\0002\\0E\\0D\\3000\\300,\\300(\\300$\\300\\24\\300\\n\\300/\\300+\\300'\\300#\\300\\23\\300\\t\\0\\377\\1\\0\\0h\\0\\v\\0\\4\\3\\0\\1\\2\\0\\n\\0\\34\\0\\32\n09:50:58 epoll_ctl(12, EPOLL_CTL_MOD, 71, {EPOLLIN|EPOLLOUT, {u32=71, u64=9386145937253990471}}) = 0\n09:50:58 epoll_wait(12, [{EPOLLOUT, {u32=71, u64=9386145937253990471}}], 42, 26) = 1\n09:50:58 sendto(71, \"\\26\\3\\3\\0I\\2\\0\\0E\\3\\3\\200t$k\\253z\\216\\224\\v\\1\\2PK\\213\\35\\334\\364\\344E'\\311\\22\\355m\\231\\300yAz\\271\\21\\351\\0\\0\\237\\0\\0\\35\\377\\1\\0\\1\\0\\0#\\0\\0\\0\\17\\0\\1\\1\\0\\20\\0\\v\\0\\t\\10http/1.1\\26\\3\\3\\2\\253\\v\\0\\2\\247\\0\\2\\244\\0\\2\\2410\\202\\2\\2350\\202\\1\\205\\2\\2\\3\\3500\\r\\6\\t*\\206H\\206\\367\\r\\1\\1\\v\\5\\0000\\0241\\0220\\20\\6\\\n09:50:58 epoll_ctl(12, EPOLL_CTL_MOD, 71, {EPOLLIN, {u32=71, u64=9386145937253990471}}) = 0\n09:50:58 epoll_wait(12, [{EPOLLIN, {u32=71, u64=9386145937253990471}}], 42, 0) = 1\n09:50:58 recvfrom(71, \"\\26\\3\\3\\1\\6\\20\\0\\1\\2\\1\\0\\273\\311\\r\\352%\\371\\361\\10\\221\\220\\226*\\311<\\300\\3635i\\230\\6\\241\\361\\2561\\312dtj\\376\\275\\25\\251<\\311\\217\\324\\331\\\\\\240 o\\225f^!\\vd\\vJ\\23|\\320w$\\264\\337\\346\\261[JM0)k\\356\\225W\\17\\203\\300\\324\\265\\331\\325e>G\\1L\\5b+\\222\\0375\\300\\264\\317R\\325\\1r\\325\\340:j\\377\\301\\307\\325%\\31\n09:50:58 epoll_ctl(12, EPOLL_CTL_MOD, 71, {EPOLLIN|EPOLLOUT, {u32=71, u64=9386145937253990471}}) = 0\n09:50:58 epoll_wait(12, [{EPOLLOUT, {u32=71, u64=9386145937253990471}}], 42, 11) = 1\n09:50:58 sendto(71, \"\\26\\3\\3\\0\\252\\4\\0\\0\\246\\0\\0\\1,\\0\\2400\\205\\223~\\32\\374\\242\\200\\36Y\\26h\\254XT\\370\\337O\\236\\333]_?!\\20\\236\\324\\360\\2565\\353\\3350\\3709 \\230[\\376\\370\\354\\337\\214\\247\\230\\323\\352\\304rD\\16G\\341\\311\\267\\260\\274\\307\\34\\227\\204&\\251 \\333\\372\\310y\\274\\304}\\224,\\7\\n\\213R(\\305\\366\\2106v\\345X\\243\\266Z\\237\\343\n09:50:58 epoll_ctl(12, EPOLL_CTL_MOD, 71, {EPOLLIN, {u32=71, u64=9386145937253990471}}) = 0\n09:50:58 epoll_wait(12, [{EPOLLIN, {u32=71, u64=9386145937253990471}}], 42, 499) = 1\n09:50:58 recvfrom(71, \"\\27\\3\\3\\0N\\222\\322\\217T(\\252R\\315\\266\\315\\353\\3538u\\355\\366\\257\\202\\205\\32#\\214E\\331z\\352\\307%\\337\\216\\237^\\323\\314,\\317\\34:r&l\\215\\35\\220\\f\\355\\300\\0(A\\246\\203\\204\\177\\16)\\337\\372\\2410\\270m\\223\\320Rm\\30\\315M\\361\\270\\263e\\220\\351\\224\\240_\\27\\3\\3\\0(\\222\\322\\217T(\\252R\\316\\371l\\364U6rJ\\204\\256\\3\n09:50:58 epoll_ctl(12, EPOLL_CTL_DEL, 71, 0x7fffa30b5800) = 0\n09:50:58 getsockname(71, {sa_family=AF_INET, sin_port=htons(8448), sin_addr=inet_addr(\"109.74.200.146\")}, [16]) = 0\n09:50:58 epoll_ctl(12, EPOLL_CTL_ADD, 71, {EPOLLOUT, {u32=71, u64=9386145937253990471}}) = 0\n09:50:58 epoll_wait(12, [{EPOLLOUT, {u32=71, u64=9386145937253990471}}], 42, 491) = 1\n09:50:58 sendto(71, \"\\27\\3\\3\\0\\270O\\333\\327\\204\\276i\\30\\1kt_A\\7\\5\\244\\30g\\356\\377X\\355\\2365\\246C\\226\\20VY\\374\\2543\\317\\357\\337{\\361\\226\\216\\216\\306P\\177\\311\\301?\\177T`~\\302\\254(CB-\\275\\2212e\\323(\\355\\254\\357\\356\\17f\\342\\365\\256\\340\\203YZ\\t\\257b\\373\\v\\311\\365M\\346\\277SaR\\221\\n\\303sT?\\361\\tLh\\377\\217\\266\\350\\332\\367\\2\n09:50:58 epoll_ctl(12, EPOLL_CTL_DEL, 71, 0x7fffa30b6db0) = 0\nIn other words:\n it was an inbound federation request (from 5.9.168.181)\n we read three packets from it, and sent replies, but then forgot about it.\n* we don't register any interest in reading further packets from it - or noting when it gets closed. Hence the leak.\nThere is nothing in the logs about it.\nIt looks like we have completed TLS negotiation on it, but haven't then read any HTTP requests from it. Perhaps something went wrong in the TLS layer?\nNext step is probably to try to get some more logging out of the accept/TLS code to see what it thinks is going on.. So, it turns out that I was seeing a completely different issue to @schnuffle: I was still on Twisted 16.3, which means that I was probably suffering from https://twistedmatrix.com/trac/ticket/8992. (I have now upgraded to Twisted 17.1, and no leaks so far).\nSchnuffle's logs show incoming requests for some media at kolab.schnuffle.de (the media in question appears to be an avatar for an old user).   kolab.schnuffle.de doesn't match the server_name, so the server forwards the request on... straight back to itself.\nSurely we shouldn't forward requests for remote media that come in over federation?\n. So, it turns out that I was seeing a completely different issue to @schnuffle: I was still on Twisted 16.3, which means that I was probably suffering from https://twistedmatrix.com/trac/ticket/8992. (I have now upgraded to Twisted 17.1, and no leaks so far).\nSchnuffle's logs show incoming requests for some media at kolab.schnuffle.de (the media in question appears to be an avatar for an old user).   kolab.schnuffle.de doesn't match the server_name, so the server forwards the request on... straight back to itself.\nSurely we shouldn't forward requests for remote media that come in over federation?\n. Right; I've filed a new bug #1991 to track the problem you are seeing.. schnuffle reports his woes seem to have been solved by the fix to #1991. schnuffle reports his woes seem to have been solved by the fix to #1991. Isn't this fixed in develop?. so notabug?. Sounds like we don't want to do this. Sure if you want proper IPv6 support you'll need Twisted 17.1, but we don't want to insist on that, or we'll break compatibility with all of the distros.\nA better solution might be to call out the need for 17.1 in the readme, as well as suggesting that people upgrade it in the changelog?. @tchncs your config really ought to work; something very similar (minus TLS) works fine here.\nyou don't have anything else in your coturn config?. this isn't a support forum. sounds like a client-side issue. Suggest discussing this in #riot:matrix.org, assuming you're using riot.. should work; please discuss online if not. Hum; having looked at storrgie's logs, and thought about this a little more, I'm not entirely sure it is #1935.\nIn this case the problem seems to have happened between 2017-02-04 15:42:13, when storrgie joined #matrix-dev and immediately left again (as seen on matrix.org), and Feb 18 06:40:03 when his client sent another join request on the room, which is rejected.\nAt some point in that period storrgie's HS has gone from thinking he was not a member of the room, to (at least in part) thinking he was.\n@storrgie: would you mind running a query for me to help diagnose:\nselect * from event_forward_extremities where room_id='!XqBunHwQIXUiqCaoxq:matrix.org';. Investigation of storrgie's db shows that his homeserver has recorded a very limited amount of state for matrix-dev, and in particular doesn't include his leave event:\nsynapse=# select stream_ordering, event_id, received_ts, type, sender, state_group, prev_event_id from events e left join event_to_state_groups esg using (event_id) left join event_edges using (event_id)  where e.room_id='!XqBunHwQIXUiqCaoxq:matrix.org' order by stream_ordering desc limit 50;\n stream_ordering |              event_id              |  received_ts  |        type         |        sender         | state_group |           prev_event_id            \n-----------------+------------------------------------+---------------+---------------------+-----------------------+-------------+------------------------------------\n          213479 | $1487813202327BLTuv:sw1v.org       | 1487813203133 | m.room.member       | @richvdh:sw1v.org     |             | $1487808645292bHAcq:sw1v.org\n          137042 | $14862229331WOUdC:epiphyte.network | 1486811207473 | m.room.member       | @agd:epiphyte.network |      124423 | $148622151325FsoQT:intelfx.name\n          137041 | $145191668846IYNfJ:jki.re          | 1486811207433 | m.room.power_levels | @erikj:jki.re         |             | $14482710929PBzzW:jki.re\n          137041 | $145191668846IYNfJ:jki.re          | 1486811207433 | m.room.power_levels | @erikj:jki.re         |             | $145191487043lSIsJ:jki.re\n          137040 | $144850062087elIJo:jki.re          | 1486811207410 | m.room.member       | @erikj:jki.re         |             | $142316567653uFnap:jki.re\n          137040 | $144850062087elIJo:jki.re          | 1486811207410 | m.room.member       | @erikj:jki.re         |             | $1448485645255678aTNwL:matrix.org\n          137039 | $14482710929PBzzW:jki.re           | 1486811207395 | m.room.power_levels | @erikj:jki.re         |             | $142375629822gFxyM:jki.re\n          137039 | $14482710929PBzzW:jki.re           | 1486811207395 | m.room.power_levels | @erikj:jki.re         |             | $144827073254999BSjlM:matrix.org\n          137038 | $142375629822gFxyM:jki.re          | 1486811207369 | m.room.power_levels | @erikj:jki.re         |             | $14229713842147qGCCG:matrix.org\n          137038 | $142375629822gFxyM:jki.re          | 1486811207369 | m.room.power_levels | @erikj:jki.re         |             | $142375628821IwXEC:jki.re\n          137037 | $142316567653uFnap:jki.re          | 1486811207351 | m.room.member       | @erikj:jki.re         |             | $14231442822Ljmbj:jki.re\n          137037 | $142316567653uFnap:jki.re          | 1486811207351 | m.room.member       | @erikj:jki.re         |             | $14231646891368oygLm:matrix.org\n          137036 | $14229713842147qGCCG:matrix.org    | 1486811207335 | m.room.power_levels | @erikj:matrix.org     |             | $14229713842146ZAjhF:matrix.org\n          137036 | $14229713842147qGCCG:matrix.org    | 1486811207335 | m.room.power_levels | @erikj:matrix.org     |             | $14229713842146ZAjhF:matrix.org\n          137035 | $14229713842146ZAjhF:matrix.org    | 1486811207316 | m.room.power_levels | @erikj:matrix.org     |             | $14229712692144ZqdYT:matrix.org\n          137035 | $14229713842146ZAjhF:matrix.org    | 1486811207316 | m.room.power_levels | @erikj:matrix.org     |             | $14229713082145GCJpk:matrix.org\n          137034 | $1416420930650ZDaIU:matrix.org     | 1486811207012 | m.room.member       | @erikj:matrix.org     |             | $1416420930634UfvTn:matrix.org\n          137033 | $1416420925146WUNCs:jki.re         | 1486811206997 | m.room.power_levels | @erikj:jki.re         |             | $1416420923842GbLym:jki.re\n          137033 | $1416420925146WUNCs:jki.re         | 1486811206997 | m.room.power_levels | @erikj:jki.re         |             | $1416420925128XcoKo:matrix.org\n          137032 | $1416420923842GbLym:jki.re         | 1486811206983 | m.room.power_levels | @erikj:jki.re         |             | $1416420915228Byipk:matrix.org\n          137032 | $1416420923842GbLym:jki.re         | 1486811206983 | m.room.power_levels | @erikj:jki.re         |             | $1416420923824Hdnta:matrix.org\n          137031 | $1416420915228Byipk:matrix.org     | 1486811206967 | m.room.power_levels | @matthew:matrix.org   |             | $1416420914880oFczF:jki.re\n          137031 | $1416420915228Byipk:matrix.org     | 1486811206967 | m.room.power_levels | @matthew:matrix.org   |             | $1416420915213BpjVc:matrix.org\n          137030 | $1416420914880oFczF:jki.re         | 1486811206954 | m.room.power_levels | @erikj:jki.re         |             | $1416420914858UvPkK:jki.re\n          137030 | $1416420914880oFczF:jki.re         | 1486811206954 | m.room.power_levels | @erikj:jki.re         |             | $1416420914858UvPkK:jki.re\n          137029 | $1416420914858UvPkK:jki.re         | 1486811206940 | m.room.power_levels | @erikj:jki.re         |             | $1416420913198wPxtf:matrix.org\n          137029 | $1416420914858UvPkK:jki.re         | 1486811206940 | m.room.power_levels | @erikj:jki.re         |             | $1416420914837zZuOf:matrix.org\n          137028 | $1416420914590avyez:jki.re         | 1486811206924 | m.room.member       | @erikj:jki.re         |             | $1416420910692FTaSj:jki.re\n          137028 | $1416420914590avyez:jki.re         | 1486811206924 | m.room.member       | @erikj:jki.re         |             | $1416420914572iFzgC:matrix.org\n          137027 | $1416420913198wPxtf:matrix.org     | 1486811206911 | m.room.power_levels | @LeoNerd:matrix.org   |             | $1416420910562CZaRR:matrix.org\n          137027 | $1416420913198wPxtf:matrix.org     | 1486811206911 | m.room.power_levels | @LeoNerd:matrix.org   |             | $1416420913185tdhzb:matrix.org\n          137026 | $1416420911042txvso:matrix.org     | 1486811206895 | m.room.member       | @matthew:matrix.org   |             | $1416420911033LHKDh:perlsite.co.uk\n          137025 | $1416420910562CZaRR:matrix.org     | 1486811206882 | m.room.power_levels | @LeoNerd:matrix.org   |             | $1416420910554DEyOl:matrix.org\n          137025 | $1416420910562CZaRR:matrix.org     | 1486811206882 | m.room.power_levels | @LeoNerd:matrix.org   |             | $1416420910554DEyOl:matrix.org\n          137024 | $1416420910554DEyOl:matrix.org     | 1486811206867 | m.room.power_levels | @LeoNerd:matrix.org   |             | $1416420910545FDbdr:matrix.org\n          137024 | $1416420910554DEyOl:matrix.org     | 1486811206867 | m.room.power_levels | @LeoNerd:matrix.org   |             | $1416420910545FDbdr:matrix.org\n          137023 | $1416420910545FDbdr:matrix.org     | 1486811206854 | m.room.power_levels | @LeoNerd:matrix.org   |             | $1416420910533PjyPo:matrix.org\n          137023 | $1416420910545FDbdr:matrix.org     | 1486811206854 | m.room.power_levels | @LeoNerd:matrix.org   |             | $1416420910538EkGDl:matrix.org\n          137022 | $1416420910538EkGDl:matrix.org     | 1486811206840 | m.room.join_rules   | @LeoNerd:matrix.org   |             | $1416420910533PjyPo:matrix.org\n          137021 | $1416420910533PjyPo:matrix.org     | 1486811206826 | m.room.power_levels | @LeoNerd:matrix.org   |             | $1416420910529mzqgm:matrix.org\n          137020 | $1416420910529mzqgm:matrix.org     | 1486811206811 | m.room.member       | @LeoNerd:matrix.org   |             | $1416420910522mQfXQ:matrix.org\n          137019 | $1416420910522mQfXQ:matrix.org     | 1486811206796 | m.room.create       | @LeoNerd:matrix.org   |             | \n(42 rows). Fixed by https://github.com/matrix-org/synapse/pull/2025, hopefully. It appears that @enckse saw two things:\n spontaneously being rejoined to matrix-hq, but in a way that he was able to leave the room again. Raised as #1953.\n Only seeing half the member list, making it appear that he was joined to a room that he had never joined, which is almost certainly an artifact of #1935.. this was fixed for @boli:boli.rocks by re-inviting him, after which he was able to reject the invite and resume normal service.. Example: @enckse:epiphyte.network left HQ on 2017-02-24 in event id $1487956741180WOzcD:epiphyte.network, but was rejoined on 2017-02-25 by event id $148803062826PXWcQ:potatofrom.space (and on a number of occasions thereafter). \nThis appears to be an artifact of the state resolution algorithm.. More details about the example above:\n@enckse:epiphyte.network had previously done the following in HQ:\n A: left ($1486594266447oNWWS:epiphyte.network)\n B: joined ($1487868651107pBFZY:epiphyte.network)\n* C: left ($1487956741180WOzcD:epiphyte.network)\nHis state after these was, of course, C (left). $1487985638318SHxfm:57north.org.uk rewound this to A via its prev_event to $1487677365376MdkVb:slxh.eu (state A), because (A, C) resolves to A. That was ok, because he was still left; however $148803062826PXWcQ:potatofrom.space then reset this to state B via its prev_event to $1487897356168153YJjYh:matrix.org and others (state B), because (A, B) resolves to B.. we also SELECT user_id FROM device_lists_stream WHERE stream_id > ?, rather than SELECT DISTINCT, so the query result is potentially huge, which can make synapse use all the memory.. To check if you are being affected by this, connect to the database and:\nSELECT count(*) c,user_id from device_lists_stream group by user_id having count(*) > 1000000;\nif the above shows users with many entries, you can delete them with:\nDELETE from device_lists_stream WHERE user_id=<user_id>;\n(Note that this may harm your ability to communicate with that user using end-to-end-encryption).\n. fixed in https://github.com/matrix-org/synapse/pull/1964 / https://github.com/matrix-org/synapse/pull/1969, I think.. @matrixbot: ok to test. FTR: this implements https://docs.google.com/document/d/1-6ZSSW5YvCGhVFDyD2QExAUAdpCWjccvJT5xiyTTG2Y/edit. good point. ptal.. Seems to have got stuck.\nLGTM, will merge this if nobody objects. Hum; I see that PROTOCOL_TLS only landed in python 2.7.13. \nThe synapse readme appears to claim we support any 2.7.x; Debian Jessie has 2.7.9. I don't think we can do this.. no. moved to https://github.com/matrix-org/internal-config/issues/84. (the receiving end then explodes, because of https://github.com/matrix-org/synapse/issues/1962). retest this please. Hopefully fixed by https://github.com/matrix-org/synapse/pull/1992.. > All checks have passed\nmiracles will never cease. I was able to reproduce this with a single client, fwiw\n. dup https://github.com/vector-im/riot-web/issues/2537. dup https://github.com/vector-im/riot-web/issues/2286. There might need to be some support from the server, but at the end of the day the client will need to do the device verification and encryption necessary to transfer the keys.\nRemember that the principle of E2E is that the server cannot be trusted.. fixed by #2010 . thanks!. this is not a support forum. fixes https://github.com/matrix-org/synapse/issues/2003. https://github.com/matrix-org/synapse/blob/29ed09e80a8c7ddeebe3f257a336e4c387a06c88/synapse/storage/util/id_generators.py#L51 isn't to get an int from a string. It seems to be to get an int from a long.\nBut, as you say, whatevs.. I don't think it's sensible to start trying to guard against every conceivable mistake an administrator might make in the database.. thanks. I'm afraid we need sign-off even for a tiny change like this: https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst#sign-off\nPlease try to give your commits a better summary line than \"Update README.rst\" in future\n. Agreed, sounds like a dup. @APwhitehat: thank you!. > If we have a rejected state event that attempts to replace an older state, do we still see that older state for subsequent events?\nyes.. Yup, I looked briefly at https://bitbucket.org/hipchat/txlocal when I was wondering why our stuff worked the way it did. I was put off by a few things: having to wrap every single function that gets added as a callback sounded fiddly; I was also bit alarmed by glyph's analysis that it dug around deep in twisted internals, and I think I read somewhere that it didn't work on Twisted 16 (and it's not been touched in the last year).\nI also came across twisted.python.context. Maybe I'm missing the obvious, but I couldn't see how it interacted with deferred - again it looks like you have to wrap everything you addCallback (and how it would work with inlineCallbacks is even more of a mystery).\nBut both of those approaches miss the point of this PR. We have a system in Synapse, which works tolerably well, and I don't think abuses the innards of Twisted too badly. If we started again now, we probably wouldn't do it like this - and yes, more support from the Twisted framework would be nice. But given we don't seem likely to be rewriting it any time soon, then for sanity's sake, let's at least have some record of how the current code works.. > I really hope I didn't come across as objecting to documenting code that had already been written!\nNot at all. Your feedback and ideas are very much appreciated - sorry for not saying so explicitly! . please can we not have a big \"lots of questions about matrix\" issue. I suggest asking questions in Matrix HQ, and raising specific issues to cover individual points.. Don't think so. \"Invalid signature for server lowpolydev.de with key ed25519:a_Ftqq\" means \"it was signed by a_Ftqq, but the signature didn't match\". Nothing to do with where the key came from.. that wouldn't explain why matrix.org is complaining about an invalid signature with a_Ftqq, but everywhere else sees the signature as claiming to be by a_pzkY.\neither lowpolydev.de is doing something different on matrix.org, or matrix.org is lying about the signature being by a_Ftqq.. I hope this will be fixed by #2042, at least once that lands on matrix.org.. thanks!\nA few points:\n I don't use CentOS, so can't assess this, but I am surprised that it is necessary. We use libsodium through PyNaCl, which ships with a copy of the libsodium sources, which gets built on installation. I have a suspicion that it wasn't installing libsodium itself which fixed things for you, but something else which got installed as a side-effect of installing libsodium.\n I would expect that upgrading pip made upgrading setuptools redundant.\n* We need signoff, per https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst#sign-off.\n. you'll need to back up and restore the database, media store, and configuration. \nYou can't just move the users to another server without taking the room data, so I think you want documentation on something you can't do?. That's my point. It is possible to move the room data. It's not possible to move the user data without the room data. I thought you were asking for the latter.\nIf you'd like documentation on how to back up and restore a synapse server, that would certainly make sense. Raised as https://github.com/matrix-org/synapse/issues/2046.\nCan't comment on the yunohost stuff.\n. See also https://github.com/matrix-org/synapse/issues/1411.. balls, the tests are failing. > shouldn't be subject to retry\ns/retry/backoff/, I assume\nI certainly wouldn't be averse to such a parameter. Presumably if such a request succeeded, we'd need to reset the backoff so that subsequent requests also didn't get backed off. (If I invite someone, it's no good being able to successfully invite them if I can't then speak to them).. @erikjohnston: PTAL?. ... which we were doing in some but not all cases?. ok so this now has a conflict, and I think the preserve_context_over_deferred hackery isn't needed. . wouldn't val = val[\"enabled\"] be clearer/easier than recursion here?\n. move these lines to ~ line 354, and combine the two if conditions?\n. It's a shame the log at lines 354/355 will be a lie if the prev_* keys are missing :(\n. so, what is r0.0.1? Hard to claim we support it before we've defined it.\n. needs a change now\n. this needs a change.\nHaving this list is horrible, though I realise fixing it is probably out of scope right now.\n. why is this change necessary?\n. But you're attempting to pick a starting point which is higher than any existing IDs? Or is it deliberate that you will re-issue any IDs which end up being a hole in the existing allocation? If the latter, 50 sounds like way too few.\n. In that case, I'm not sure I'm entirely happy with the \"try it and see if we get a SynapseError\" approach to this. Is there really nothing else which could cause a SynapseError in that code block? I guess I'd prefer an approach which checked more directly for duplicates -- in which case I think you could remove the limit altogether.\n. a doc-comment here could be useful to call out the fact that it will return the first hole in the sequence, rather than being relative to the highest allocation so far.\n. I don't think so. At least, that is not the convention we agreed last time it was discussed, which was https://www.jetbrains.com/pycharm/help/type-hinting-in-pycharm.html#legacy.\n. True, but I guess here we're actually less interested in whether the event arrived over federation, and more in whether we already have it in context.current_state. If the event is in context.current_state despite being received over federation, there's no point dropping the context.\n. I guess the comment is unclear. If you're happy otherwise I could update the comment.\n. done, and comment rewritten.\n. I just lifted the code from do_remotely_reject_invite. I guess your way is better\n if anybody had bothered to document what self.hs actually is, this would have been somewhat easier to figure out. \n. agreed; thanks.\n. Oh, we do? I hadn't realised that.\n. the number of rounds is recorded in the hash ($2a$12$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -> salt is 2a, # of rounds is 12) so synapse will be happy with the generated hash either way.\n. actually 2a describes the hashing algorithm rather than the salt\n. No, _check_password is changing from returning bool to raise, so this code becomes redundant\n. It'd be nice if this had a non-empty summary line (http://google.github.io/styleguide/pyguide.html?showone=Comments#Comments)\n. It means \"this access token is not associated with a device\".\n. well, _simple_insert won't ever throw StoreError.\nBut generally, good question. I cargo-culted this from similar code elsewhere. I thought the idea was to turn the database-layer exceptions into synapse exceptions here, and presumably catching every conceivable database-layer exception is tricky.\n. I don't know. what does MANIFEST.in do?\n. It seems to list the files which go into the sdist?\nI would certainly think that the .pyi should be part of the source distribution.\n. Right, yes. I think the way I've implemented this in the js-sdk (https://github.com/matrix-org/matrix-js-sdk/pull/151) means it will actually send a device_id in the follow-up request, but ISWYM.\nI think I want to add some sytests to this though, so that I know what I'm doing.\n. this code appears to have landed between a comment and the code it refers to, thus making the comment confusing. Because this method wasn't confusing enough before, I suppose.\n. to_remove is already declared at line 440. Is reinitialising it deliberate? needs explanation if so\n. is this acting on the last event in the loop at line 577 deliberately? needs explanation if so\n. factor this fucker out: you've already gone to the effort of moving it. Move it somewhere sensible instead.\n. or maybe it's the event from line 608? NOBODY KNOWS\n. ok I see it's deliberate. reusing the same variable is bad karma imho. But basically it stems from this method being too big. Factor some of this shit out.\n. surely you can make a _store_event_in_tables(self, txn, event) which is literally lines 646-663?\n. just that it's kinda BS, and Vector is using unstable.\n. It seems to be silly to allow you to upload keys for a different device.\nAnd sadly this does need fixing in vector. I'm trying to fix vector, but that is making me cry too.\n. yeah he does. https://github.com/torhve/weechat-matrix-protocol-script/blob/master/matrix.lua\nand I see he's using v2_alpha\nFUCK IT\nthis is why we shouldn't publish apis on v2_alpha until they are stable.\n. yeah and it's gonna break Tor's stuff too. argh fuckery I hate my life.\n. uh, really?\n. so why are you comparing the room_id with the cutoff point?\n. This needs a comment. Why are 3pid invites excluded from this check?\n. Ok so we no longer discard a third_party_invite where we couldn't find the original invite event? Convince me that this is a sane thing to do (or better yet, write a comment to convince a future reader that this is a sane thing to do)\n. What's stopping me making an event pretending to be a 3pid invite and subverting the auth checks in some way?\n. \"differnt\"\n. right. It seems that this happens in _verify_third_party_invite, via is_membership_change_allowed. I suggest saying as much.\n. is this related, or just a cleanup?\n. I think this is misleading. AIUI, it will appear every 5 seconds whether we are timing something out or not. Better: \"Checking for typing timeouts\"?\n. is there a danger of these stacking up, so that we get lots of entries for the same user?\n. I guess there is, but it's harmless?\n. could we skip this if was_present is true?\n. I'm slightly wondering if the code would be clearer if we had separate WheelTimer instances for timing out the typing, and doing the federation pings.\n. ack\n. can we reorder this to reduce the duplication?\n```\nquery=\"SELECT type, state_key, event_id FROM state_groups_state WHERE state_group = ?\"\nargs = [next_group]\nif types is not None:\n   query += where_clause\n   args += [i for typ in types for i in typ]\ntxn.exectute(query, args)\netc\n``\n. what's the point of this? I don't think its used anywhere?\n. I did try that. The thing is that, whatever error code_check_password_authputs in its exception,check_auth` is going to throw it away and turn it into a 401. So I'm not sure that's any clearer.\nI started wondering what the point of LoginError actually is, and why it's different to SynapseError, and why it lets you set the http code rather than leaving that to a higher layer, and then I decided to stop thinking about it.\n. or worse, only CAS auth :/\n. well, where does it end? do we include the python sdk? the react sdk? I'll add a link to the \"SDKs section\" of the project page, which I think will be clearer than listing the SDKs here.. yup, have linked to the matrix.org blog post.. From the commit comment:\n\n\nremove redundant \"where's the spec\" section: this would belong in \"About matrix\", but it's already there.\n\n\nIt could probably bear being made clearer in \"about matrix\", but I'm not sure that the synapse readme needs to be a comprehensive introduction to Matrix - that job is better done elsewhere on matrix.org.. Yeah, this is a difficult one, imho. The problem with trying to get people to use domain.com rather than mytestserver.domain.com from the get-go is that it means they need to grok the whole SRV business from the get-go, which is probably rather a lot to grasp.\nAs a compromise, I'll warn here that a server name can't be changed.. I've added a link to  the spec, but afaict this stuff is not well-documented.. Added some words.. added some words.. thanks, done. done. done, thanks. thanks!. done. I thought about that, but it's so unusable that I was reluctant to do so. I particularly didn't want to get into documenting how to parse the JSON.\nIn the end I concluded that this would cover most bases, and anything else they were best off coming for advice rather than trying to parse the test tool output themselves.. maybe. done.. I'm reluctant to get too deep into the various options for different ports for federation and clients here, because I think it just adds noise that will confuse the first-time user. It's set out in more detail in the reverse-proxy section.. I've tried to reword this a bit.. added. I disagree. The README is hard to grok as it is. I want to make it easier for people to get set up without support from us; anyone who gets that far and starts thinking about hacking on it will be able to find this.. well, maybe, but I know nothing about it. Can we make Mark document it here as a separate PR?. @kyrias: that's a good suggestion, but it's hard to see where to draw the line. At the end of the day, most of the README is installation instructions, so this might just lead to a massive INSTALL file. (plus we tend to link to bits of it from everywhere).\nAnother option might be to split more bits of it out into the docs directory and link to them from the README.\nEither way, I'd like to get this merged rather than blocking it until I have time to spend another day on it.. think this has got lost. also a few below.. a python lib, or a C one? libxslt1-dev is already mentioned in \"Installing from source\".. good spot. well, this is why I added the \"make sure you have the system dependencies installed\" paragraph. We might as well duplicate the whole section, and I'm super unkeen on that.. (should we also recommend installing python-dev? what if your distro calls it something else? argh). still wish we knew why Membership.JOIN had been special-cased previously :/. wouldn't hurt to document the type of the params, especially from_key. I always find it impossible to keep track of what type of sync token is what.. random trailing ,?. since you're modifying the input, I'd suggest not returning it, to make that clear.. geberic. let's factor out the (phone_number, country) -> msisdn_or_throw_400 conversion to a utility, since it appears in several places.. should be requestMsisdnToken?. could we not have an assert_params_in_request(body, required) utility rather than copying this pattern twenty times?\nsuggest sticking it alongside parse_json_object_from_request in servlet.py. s/email address/threepids/. aphone. when would this happen?. LIES!. technically not. can haz doc pls kthxbye. comment would help, then. you could do that with return success(True).\nA better answer might be: because it did before we got here, and changing it is scary.. can you? really? I thought it was naughty to have yield and return in the same function.. I assumed it was something to do with not wanting to put the email/msisdn in the log.. ah, you can return without a value.. Because I wanted to be able to turn an HTTPResponseException into a SynapseError without having my head explode.\nPreviously,  for an HTTPResponseException, msg was being used for the HTTP reason message, and response_code_message was unused. For a SynapseError, msg was used for the matrix error message, and response_code_message was used for the  HTTP reason message. \n\nI think. The comments were... unclear.\n. well, it could be a transient error. My thinking was that it was more likely a permanent error: an invalid hostname, for example - in which case a 4xx is a better response, and NotFoundError seemed the closest fit.\nAnnoyingly I don't think twisted.internet.endpoints.HostnameEndpoint gives us a way of distinguishing the two cases. We're already wrapping HostnameEndpoint with our own implementation, so we could conceivably improve on this - but I thought it better to go with the common case.\n. good questions. fixed.. merely to avoid c&ping the logging line. fixed.. Hrm. Possibly. I feel like a 401 might well want to end up as a 401 at the client end too, but I see your point. Fixed.\n. Updated.. done.. build, not /build. pip install installs things in the virtualenv, not the current directory, so I'm not sure what you're doing with the build directory here.\nI've never actually found this to be necessary - synctl should work without installing the synapse package.. space was correct. (a) this doesn't tell us why it couldn't stop it\n(b) it will then carry on with the rest of the script rather than aborting. waiting for process to exit, surely?. should we not check if the process is actually running, rather than just checking for the existence of the pidfile?. I find the keys to the innermost secrets of the universe and all I get is a correction to a typo? Sheesh. Tough crowd. \n:) . ha. No, I didn't. Possibly because the stupid github mobile site doesn't show them :(. content = {}\n. can has trailing comma please. feels asymmetric that we log the member_content for displayname but not avatar_url.\nThese should maybe be debug anyway?. I believe you want StateHandler.get_current_state for this. See https://github.com/matrix-org/synapse/blob/develop/synapse/api/auth.py#L123 for example.. as above, probably don't need this. better to call sys.exit than raise SystemExit directly.. no space before colon please. no space before colon please\n. a log line is useful, it just needs to say something different.\n\"Waiting for process to exit before restarting...\", for example. default should probably be stderr rather than stdout for these errors.. A few points about this section:\n\nAs I said at https://github.com/matrix-org/synapse/pull/2020#discussion_r107878979, we need some feedback on what's going on.\nMore complex deployments of synapse have a bunch of workers as well as the main synapse process (worker.pidfile for worker in workers).\nIf start_stop_synapse is false, we should not wait for synapse to exit.. This logic is unclear: invert the condition: replace != with == and swap the if and else actions.\n\n. No need for else here: you can return unconditionally if the if failed.. why not put this inside the try block?. technically the algorithm is part of the key - so it's valid to have an \"ed25519:aaaaa\" as well as a \"rot13:aaaaa\". I rather hope the index reflects that, but haven't checked.... ... and throw a 500 or something, presumably? I suppose that's fine because the client should retry on the 500 and hit the api again, at which point the lookup should conclude that it's all fine.. This appears to be missing a False case. . you need to look more carefully at what start_stop_synapse is for. We may need to restart the workers even if start_stop_synapse is false.. \ud83d\udc4d. \ud83d\udc4d . \ud83d\udc4d . what does this continue do? I don't think it's what you want.. I feel like this is a bit of a funny name, when it is equally applicable to the very first message we send to a destination (so in no way a 'retry'). Maybe would_send would be better? Or would_throw_on_send (and invert the result). Neither is particularly great though - I don't mind if you want to leave it.. please can we document types of args and return values, even if it's \"obvious\". I'm fed up with figuring it all out from first principles in the synapse codebase. You can even c&p most of it from get_retry_limiter in this case.. given we logger.debug when we get a NotRetryingDestination exception (a block of code which is now almost redundant, btw), should we do so here? should we in fact throw a NotRetryingDestination here?. Of course another way to do this is just to call get_retry_limiter, and throw away the result, and see if you get an exception.. woldn't. what's this for?. I bet this will break something somewhere :/. please can you document what this thing is and what type it has.. I am not in favour of further bodges on top of preserve_context_over_deferred, since afaict it is broken. Let me send you a counter-PR here.. very open to suggestions for better names here, btw.. I highly recommend moving the protocol docs out to separate rst files in docs. It'll be easier to find, and easier to read, there.. messaegs. ensures. theses. could you fabricate an example of a batched result? I'm still slightly unclear what they would look like at this point.. rst uses double-backticks for fixed-width text.... weren't you trying to get rid of fetchall the other day?. unnecessary fetchall. unnecessary fetchall\n. think this is the wrong type, but it's hard to be sure since THERE IS NO DOCSTRING \ud83d\ude20. needs logcontext faff. docstring please. update the docstring pls. do all of these really need deduping via a set? When would dups happen?. s/string/stream/?. funciton. its -> it's. can you document the return type. If I understand correctly, it has to be an integral type, and may not be deferred?. doc the return type please. again, doc the expected return type please. I'm a bit confused as to why this comes from the handler rather than the store. Doesn't the handler get its info from the stream, so wouldn't know what the current token is?. would have been awesome to have this in commit 390511f7, to make that easier to review, ftr.... propagate. missing yield, I think?. missing preserve_fn. subsribe. its -> it has\nupto -> up to. in-memory. subscripe. this looks incorrect for the case where is_syncing==False ?. do we not need to set state = <offline> here?. s/'//. why is all this changing around?. because that would run the second half of the lookup function in the logcontext provided for .callback. The point here was to replicate as closely and as simply as possible the standard yield-for-something-which-will-take-a-while pattern. \nOf course I could have done that with other things like PreserveLoggingContext, but then I would have had more moving parts which I had to trust.. sure, run_on_reactor is fine.. I guess async.sleep uses PreserveLoggingContext. FINE.. to be clear: I'm not suggesting doing much about it, other than watching for breakage when it lands.. ack. meh, sounds like more code with little value. it's fine how it is.. ok probably needs a preserve_fn then?. shouldn't we be removing user_id from process_presence, though?. we seem to have starrted with user_account_data, room_account_data, and tag_account_data (in that order), and have ended up with tag_account_data and account_data.\nI guess account_data is a combination of user_account_data and room_account_data; but I'm also confused by the reordering.\nThis change might make sense, but it's the sort of thing I'd prefer to see happening independently of the change of protocol.. I still don't think this is used?. now redundant afaict?. make_deferred_yieldable will work ok with a non-deferred, so I think this is redundant. otoh I guess it optimises the common path?. probably worth documenting it in a docstring.. excess `. This paragraph is going to look out of date real soon. I would go straight for:\nPreviously the workers used an HTTP long poll mechanism to get updates from the master, which had the problem of causing a lot of duplicate work on the server. This TCP protocol replaces those APIs with the aim of increased efficiency.\n[or something]. get rid of this line, it's too vague to be useful. it would be nice to give a complete list of the commands here, with the command syntax, the direction of transmission,  a quick summary and a reference to the section where it is explained in more detail.. consisdered. can you find some other way of writing \"master->worker\" so that github doesn't put a linebreak in the middle of \"->\". we'll hit this if is_syncing and user_id in process_presence. I think it's incorrect.. just use time_now_ms ?. yes, I think it would. it may be more efficient too. . suggest moving this up a bit to where you describe the protocol. I nearly missed it here.\nTbh I'm not sure you actually need the description of the protocol in this file - just referring to the doc would be fine imho. +1 to registering a callback\n-1 to looping until there are no changes. It will complicate this function and I don't think it will make anything clearer.. I'm not going to insist you go through and change them, but for future reference: AIUI docstrings are interpreted as RST and really ought to have double-backticks.. No, it returns a Deferred, which resolves to that lot.\n(I'd prefer it if we even put this on @defer.inlineCallbacks, but I won't insist there because it's \"obvious\". Here though, there is no clue that it actually returns a Deferred, rather than a list.). otherwise I think it needs a make_deferred_yieldable.. If it is valid for this function to return a Deferred, say so.\n. understood, leave it how it is. ... and yet it is still here.... why do we need to store this rather than let the handler just call get_federation_out_pos?. preserve_fn please. this seems to be returning a deferred which is dropped. Should there be a preserve_fn somewhere?. might be easier to make this defer.inlineCallbacks and preserve_fn when calling it?. might be worth a comment then?. I'm bored of seeing code where types aren't documented where they really should be, so I'm going to start getting anal about it.\ndocs for user_id please. docs for user_id please. comment please, why can we skip it in this case (\"we haven't yet told the master they were offline\", presumably). s/if/because/. doc string please. It's now harder to see by inspection what it returns.. what's a FederationStreamRow? needs a package: maybe synapse.replication.tcp.streams.FederationStreamRow. \"send them out\" sounds like you are sending them out over TCP. Can you say \"put them in the transaction queue ready for sending to the relevant homeservers\" instead?. federation_sender sounds like a silly name for a transaction queue.. containis. this comment is unhelpful; bin it.. BufferedToSend sounds like buffered for sending over TCP replication. Maybe ParsedFederationStreamData or something?. we used to reject these. (presumably getting ourselves stuck in some sort of loop). Are you sure it's better to ignore them?. I think this used to be a single-value dict {destination: str}, which may have had a bit of overhead, but did have the advantage that everything was a dict rather than having some rows being strings and some dicts?. could you document the type (and meaning) of rows next to where it is initialised? I think it is changing from a tuple(str, str, dict) to a tuple(str, BaseFederationRow) ?. I don't buy the consistency argument. Better to work towards improving the name across the codebase than to stick with the broken name. Given a choice between:\n things which have different names in different places, but are at least intuitively named in some places, vs\n things which are consistently but confusingly-named everywhere\nI'd rather have the first, when trying to grok this code for the first time.. Yup. If you figured out after a few hours/days that we'd been missing some rows in the stream due to a parsing error, how much operational effort would it be to fix it up?\nI think the answer is \"not much\", in which case I'd rather keep the worker running, as you have done.. > It's really rather nice to have consistent naming so you don't have to keep checking types.\nYou may have the mental capacity to remember the type of everything in the codebase; I don't; and given the number of times names are reused in synapse, I think it's a mistake to rely on it anyway.\n\nWhat name would you recommend instead? I don't think transaction_queue is a appropriate as a) its not hugely descriptive, and b) most of the code doesn't care about how the federation sends stuff to remote servers, whether it does it using a transaction queue or sends it to the federation sender worker or whatever\n\nThis is a better argument. One thing that's clear to me is that there's a file called federation_sender.py and it ain't one of those. The abstraction argument is weakened by the fact that we [ought to] document the type at each API boundary, and that type is TransactionQueue. The docstring also now says that this function puts rows \"in the transaction queue\". So I think transaction_queue would be a perfectly good name here.\nAll that said, I don't feel strongly enough to keep arguing about this. If you still disagree, leave it.. I think so. I think a comment saying # the caller should not yield on this on this line would help.. can you doc the type of states anyway, please. list(UserPresenceState), no?. since we're changing the signature of _get_interested_parties anyway, it would be a good time to rename it to reflect the fact it is being used outside PresenceHandler.\nsee below: I think _get_interested_parties needs to move anyway.. think this comment is dead. no more servers.. what are we expecting states to be here? A list(UserPresenceState) representing presence updates, presumably?. Shouldn't we be doing this in a SlavedPresenceStore?. can you document what presence_map and presence_changed mean in the constructor so I can understand if this is a sane thing?. can you comment to explain why we are filtering here. I guess it's so that we only send out presence updates for our own users, but also: why would we get as far as here with an update for someone else?. could you document what all three of these fields mean and their types?. \"Start sending\" ... \"if we are not already sending updates\" or something. please let's not c&p get_interested_parties here. How about moving this lump of code to the store or something?\n(For super-mega-bonus points, make it a separate PR which precedes this one...). comment on what this is going to be, please.. again, why are we filtering, and why would updates for remote users be getting in here? (and could we filter before deriving room_ids_to_states and users_to_states to avoid some work? happy if you want to leave this for now to avoid changing too much at once). the docstring says devices is an iterable rather than a list, and indeed there are call-sites where it is a generator. An empty generator is truthy, so this isn't going to work.\nMy inclination would be to skip this and instead bail if where_clauses ends up empty.. can we not use get_interested_parties here?. you didn't like my suggestion?. could do with a blank line here. not quite sure what this comment means, any more. now that you have an (excellent) description of the return value of the function, this probably doesn't really need a comment, but it's harmless enough. s/hosts_to_states/states/. sorry for not spotting that one before. there is still a reference to worker_replication_url in the previous para. is my understanding correct? this takes a user_id, and then ignores it? @morteza-araby . this error makes no sense. we really shouldn't log passwords at info.. pdy. there are other calls to defer.returnValue in this function; please update them too\nalso please update the docstring.. haven't we already got all this at https://github.com/matrix-org/synapse/pull/2170/files#diff-3f6de39b112e0c501c3c2925a571b908R199 ?. while you're in there, the docstring claims that prevs should be a list, which looks like a lie. my fault, but could you fix it?. use prevs here?. well, it looks very similar to me. what's the difference?. is it worth logging this?\nAlso: you need to either yield or preserve_fn on this I think. missing yield. missing yield. the set is for easy lookup at line 2101 rather than deduping. We can't easily divide a set into chunks, hence the use of the list here. There shouldn't be any dups because the query has a GROUP BY.. yup will do more comments. now redundant?. I think this is the wrong place for this check. Specifically, it blocks local users from requesting the directory from remote servers. It does nothing to stop users on remote servers from requesting our directory, which uses a different endpoint, and is what I think you're after.\nTry here: https://github.com/matrix-org/synapse/blob/b20602eeb87d5cba05ae6f1b808c4295cdbc4e3f/synapse/federation/transport/server.py#L574\n. oh, we probably need both checks.. this needs removing from the imports to be pep-8 compliant. could you add a comment about why this is a sensible thing to do (ie, explaining some of the problems discussed in #2232 ) ?. I'm not sure it makes sense to apply the same logic to the rabbithole or replication listeners, not least because if you're binding them to the wildcard addresses, you're probably doing it wrong.. this looks dodge. What happens if the user joined and then left? they appear in newly_joined and not newly_left?. oh right, we're merging the results across rooms. I think it's ok.. this is a PEP8 failure. I don't think we need to do this for the replication listener. it'd probably be better to create a new logger in this file than to pass around the logger from another file.. I feel like this would be neater hoisted outside if room_id in joined_room_ids or has_join:.. can you expand the comment to explain why this is the same thing as the condition? why does non_joins mean this?. we should probably continue here to avoid getting dups in newly_joined_rooms. surely this only happens if the user has left and joined\nor conceivably been invited and joined. Do we need this? I don't think it adds much other than confusion here.. Can we keep the link to the 'reverse-proxy' section?. s/highly//. If nothing else, you'll need a reverse-proxy if you have a synapse with split workers, so this is a bit strong.. ... or we've been rejoined to the room by a state reset.. erm; do we not need to arrange for this cache to be flushed?. document the arg types and return types please. nuh. it returns a deferred.\nalso: \"True if the host is/was in the room. Otherwise False\".. This is now tracked as https://github.com/matrix-org/synapse/issues/2522. yes it should.... should this get a _rel for consistency?. _rel? or at least clarify it in the comments?. _rel?. I'm missing why this is needed?. please doc the arg types. this needs to be in a finally block imho. broken, as above. doc the args please. Deferred[str]. path (str): .... preserve_context_over_fn is broken. I think you want make_deferred_yieldable.\nCan I suggest that you write a write_file_asynchronously which factors out this and the other instance below?. Though I have to say that having the close happen in the same function as the open generally seems less confusing to me. if we're changing the type of content, let's take the opportunity to doc it.\nEspecially if we're going to close the stream (which, as above, I am unconvinced about).. shouldn't this be done in _write_file_synchronously in case it blocks?. _rel looks incorrect here, and makes me worry that this hasn't been well tested.. can you call this something like write_to_file_and_backup? I kept confusing myself over whether it did the backup or not.. isn't the deduplication here important? . Isn't this going to result in us having all the thumbnails in memory at once? can't we do the write_to_file here (and for that matter, the store_local_thumbnail)?. again, dedup?. again, memory usage. for future ref, I prefer a space between path and (str), but no biggie. I'm confused.\n t_byte_source is the result from _generate_thumbnail\n _generate_thumbnail doesn't document its return type (grr) but apparently it's the result from thumbnailer.crop or thumbnailer.scale\n crop and scale return an ordinary BytesIO (at least according to their docs)\n BytesIO doesn't have a dimensions attribute\neither something's lying, or you (still) haven't tested this. Or I'm being a total crank.. why is this change happening, anyway?. ditto. shouldn't r_type be in the key rather than the value?. nope. looks like t_byte_source isn't being closed any more. Needs more with or finally.\n. ditto. this text was completely bogus, afaict. This function is called to check that files referenced from the config file exist, rather than the config file itself.. no groups.py :(. yeah. I did it this way so that I could show which id_string was failing to cause an exception.. https://github.com/matrix-org/synapse/pull/2568/commits/0be99858f34165258af5d2865818f5baee35118b\n\"E741 says \"do not use variables named \u2018l\u2019, \u2018O\u2019, or \u2018I\u2019\". can we have an else clause which logs something explicit here?. you need to do this in the get() path too. this is redundant, fwiw. likewise. hrm. slightly misleading given the result is a deferred which is (by definition) not yet complete.\npossibly just \"using cached deferred result\" ?. I'm a crank. ignore me.. I'm a crank. this looks bogus. else not. could move this to after the conditions? \\. ugh I got bored of writing them for existing functions. Suppose I should toughen up.. It doesn't really need to be a filename - any unique identifier will do. looks like the default is never used? I'd be inclined to leave it unspecified so that the caller has to specify it. this needs an update, if it's now possible to update groups this way. again, probably needs an update?. ja thx. are we doing this because sqlite doesn't support renaming index? A comment to say so would have been helpful.. this is redundant, I think.. prometheus.yaml, no?. prometheus.yaml is working in my running setup. vector.im is correct and this seems to be unrelated to the subject of the pr.. hash_password is definitely in scripts, not bin: https://github.com/matrix-org/synapse/tree/master/scripts. oh I see, you're using the version installed in the virtualenv. I guess that should work too.\n./script/hash_password should work fine too though - what was the problem?. I wondered that. But given there was no guarantee how quickly after the db update the invalidation was happening before, I couldn't see how it could make any difference. The extra yield is equivalent a sleep() in the db update thread before the call_after code returns.\nUnless, of course, there's a race already, in which case yes this will make it worse.... Because it makes a nice closure to https://github.com/matrix-org/synapse/blob/7098b65cb8c7e0b41a3bcb8ac7d2cc9e63f06f82/synapse/rest/media/v1/preview_url_resource.py#L355.\nI don't think that two log lines every ten seconds constitutes a significant amount of spam. It's useful to know it's running; if nothing else it highlights the fact that it was running four times every ten seconds (leading to #2701).. ours is on :8080. but fair enough, I guess :8008 is more common.. #NotAllEndpoints. I don't actually think that's true: I think that most of them can be load-balanced, though the greatest gains are to be found via the synchrotrons. I've identified the ones that definitely can't be load-balanced in 879adee.. > People specifically added a PR as it was annoying, fwiw.\nwat? people added a PR?\n\nwe have quite a few background tasks that should probably be logging to the same extent.\n\nProbably. I'm not going to fix them in this PR though.\n\nPersonally, I'd probably put the first log line after we ask the DB for expired URLs and then log both if any expired media ids were returned or we're at debug logging.\n\nI'm really unhappy about background tasks that run silently. Not least because it leads to the sort of fuck-up we had here where it's running much more often than we think it is and it's only good luck which stops the processes racing against each other and doing real damage.. done f24dc52. oh yes. Poop.\nany better suggestions? I'm kinda keen to avoid having to do a getattr every time we touch the hashes.\nPossibly a _event_dict_property_with_default which builds a property which has a default?. yes, that's what we expect.. we need the token_id so that we can delete the pushers which correspond to the deleted access tokens: https://github.com/matrix-org/synapse/pull/2722/commits/2c6d63922a5033a17c7d53a928892fbbcbd6fa63#diff-b8464485d36f6f87caee3f4d82524213R743. I had the same thought tbh; otoh the handlers got so much nicer when I was able to factor this out.\nline 119 was my first thought, but it's even further away from the handler.\nI guess I could define an @ui_auth_handler decorator to wrap the on_POST methods?. >  I assume that we'd notice it pretty quickly if we forgot to put it on there?\nwell, you'd get a 500 when you expected to get a 401 (all UI auth flows begin with the 401 normally), so I'd say so.. Ok. PTAL.. This is used outside the client reader. logging.getLogger(__name__), please.\n. looks like this TODO has now been DONE. vecotr. docs for param types and return type please. self.store is now redundant in the constructor (as are self.clock and self.version_string while you are there). Would have been helpful if you could have put the switch from respond_with_file to respond_with_responder in a separate commit to the switch from _respond_local_file to get_local_media, ftr.. for future reference: it would also have been helpful if you could have built this class up over separate commits showing how it is used, rather than presenting the whole class as a fait accomplit that I then need to cross-reference to the commits where it is actually used. For example, in the first commit, add fetch_media and use it in get_local_media. Then add store_file in the next commit.. this doesn't seem to exist. str, surely? (some info on what the values might be would be helpful). is this jpg/gif/etc? or?. square brackets pls. I think this should be Deferred[Responder|None], to emphasise the None option.. param/ret types pls. relative to... ?. I wonder if it would be better to make Responder implement an __exit__ method, so that you can use with. Responder|None, please. if not known, it should be None?. Fnished. mutliple. params, return type pls. Deferred[...]\nRespodner. itym deliberately. this condition is redundant. pls could you doc the params and ret val. what are file and fname ?. this needs to be in a finally block.. could you make it more explicit that finish_cb shouldn't be called on exception? I know it's implied by \"successfully\" but I missed it on first read.. s/raise e/raise/, which preserves the stacktrace from the original exception.. filepaths now also redundant in the constructor. StorageProviders. why is this a class field rather than a local var?. please doc the param types, especially the new one.. I feel a bit like this could just go into FileStorageProviderBackend, but perhaps you have plans or reasons that won't work. we can share this between the two branches provided you initialise worker_cache_factor correctly.. well, yes, but they aren't currently measured as part of db_txn_duration.\nLooks like the only thing that uses runWithConnection other than the background updates is the event_fetch code, which is not specific to any http requests. I'd like for time spent waiting for events to be fetched to be tracked somehow, but tracking transaction duration here wouldn't help.. > It is a distribution here.\ner, oops.\n\nHonestly I think it makes things clearer to always include the count, as otherwise it loos a bit odd to do: rate(metric_one:total)/rate(another_metric:count)\n\nIt seems really silly to me to maintain six identical copies of the same counter here. That's a lot of pointless objects, hash lookups, and integer increments. IMHO what we ought to be doing is rate(synapse_http_server_response_db_sched_duration)/rate(synapse_http_server_response_count), which feels much more intuitive, but will take a bit of work to get there.. so int|None I guess.. Retruns. Retruns. sorry, but please could you doc media_id, here and all the other places it's used? it would help me be less confused about the difference between it and file_id.. yes, I realised that belatedly. sorry.. true. In that case please can youdo the fiddling with sys.exc_info (raise exc_info[0], exc_info[1], exc_info[2])?. :). quarentined. we don't know for sure it is quarantined here. ditto. hrm. we're looking for local thumbnails of remote media, no?. s/remote/local/ ?. the fact that media_info[\"filesystem_id\"] and media_id give different values feels like a red flag to me. why doesn't  media_info[\"filesystem_id\"] work for the local case?. fwiw I'd have gone with:\nif not media_info:\n    respond_404(request)\n    return\nif media_info[\"quarantined_by\"]:\n    logger.info(\"Media is quarantined\")\n    respond_404(request)\n    return\nbut fine. Ok. I've now had a bit of a look at how this works. Taking a dict which can take one of two completely unspecified shapes is a horrible API. media_info is only used to pass the media_type and the file_id. Why don't we make both of those explicit parameters?\n. [Note to self: this is effectively reinstating the condition at https://github.com/matrix-org/synapse/pull/2767/files#diff-043e4890d840f3862222c34adf3a9459L476, which constructed the local filename from either file_id or media_id. We now always use file_id so need to get it right]. s/media_info[\"media_type\"]/media_type/\nmedia_info now appears to be redundant here. doc, please!. just media_type. would be nice to factor out a local media_type here too, given the number of times it's referenced, but shrug. huh?. vecotr. it's almost as if you're typing this by hand instead of having your editor generate it.... IConsumer?. can we declare this in the constructor?. is there a reason that some fields get underscores and some do not? I'd say they all should have one. s/pushed based consumer/PushProducer/ ?. should we have some sanity checks to prevent registering twice?. self._notify_empty is always truthy. does this block until the callee finishes, or not? if not we could end up resuming multiple times - is that a problem?. why does this make_deferred_yieldable when nothing else does?. I kinda feel like this might be better done by having the test file object let you wait for writes, rather than having the extra functionality in the consumer solely for testing, but ymmv\n. move this to line 81, then you only need one if backup_media_store_path:. this should be after the test on storage_providers. can we document the members on here somehow, please?. i. needs an @staticmethod. let's. is it even needed given FileStorageProviderBackend does it?. ok thanks. for future ref, I'd like to see their types made explicit too, but this is fine for now. Is there a reason to log these at debug rather than info? Debug logging is normally disabled, so I'm worried that people will  get obscure failure modes due to lack of logging . It feels very odd that you can whitelist everything by having an empty whitelist. I wonder if it would be better to make an empty whitelist actually mean that nothing is allowed, and have the default be *. This looks unrelated. Can you make it a separate PR please . s/nothing/everything?. this should probably be raise rather than raise e, unless there is a good reason to throw a new exception annd hence swallow the original stack trace.\nAlthough, looking at it, I don't think you'll ever get here, because FederationDeniedError is a subclass of SynapseError so the clause at line 382 will get taken instead. I think you might as well remove the whole thing. Keeping unrelated things in separate PRs makes it easier to review them, helps with bisecting, and makes it easier to back things out separately if they turn out to be ill-advised. It being trivial means it's all the easier to separate out.\nI've done it for you: c776c52eeded4cf4fe19f719bb93fc5288a1fb76 backs out the changes; #2821 is the new PR.. i'd be inclined to make this if not res:; continue, to reduce indentation, but no matter. PEP8 coding style mandates a space after the # - which is why the travis builds are failing. This function is supposed to return a dict - see https://github.com/matrix-org/synapse/blob/d02e43b15f6b9b24ffe5e0c0d696f8fd71fc8af3/synapse/handlers/room_list.py#L249 for the shape of it. . please could you document the args and return types (sorry I know synapse is bad about this in general - but I'm trying to not let it get any worse). it's confusing that this is called _get_media_ids_in_room when it gets mxcs rather than ids. \nThe convention we use elsewhere is to add _txn to the end of the name of the wrapper function (see store_room_txn for example). It doesn't need a leading _ if it's an inner function.. this could probably do with a _txn suffix now.\nAgain if you could doc the arg/return types that would be great.. the point is as described in the comments: yes it needs that many connections, and if we don't keep them around we end up killing ourselves with ssl nego.\nusing CACHE_SIZE_FACTOR was a crude hack to make it pool 1000 connections on matrix.org, and fewer on smaller homeservers.. this isn't really correct. The local media is just a list of media ids. Also, tuples don't have keys and values.. as far as I'm aware, it makes the updater get stuck in a loop, attempting to do the update every second forever.\nthis... sounds less than ideal.. what if the insert throws an exception? do we not need to reset work_mem in that case?. itym except Exception as e\n. ah, but a66f489678dc05fa89e6849405c37a9a390e62fc was an attempt to fix this.. hum. I wanted to be able to compare it with the \"cache size\" graph, which is of course measured in terms of the size of the entries.\nOne of the problems we have at the moment is that a single room can monopolise the cache, which means that a single eviction can empty the entire cache. I wanted to highlight this happening - hence basing it on entry size rather than treating all evictions as identical.\nOf course, we could compromise and monitor both.... could you mention that this will also store the state group?\n. do you not need to initialise this? (see ab8567a which I did when playing with this)\n. this looks to be redundant now?. this comment is misleading now. ditto. why is this entry.prev_group rather than context.prev_group as calculated above? (any idea when entry.state_group is falsy so we do the prev_group thing?). do we need to create a new state_group if it's not a state event?. generally the logic in compute_event_context is mysterious  :/. ditto. don't to. Let's. as per #synapse-dev: we don't currently store a state group here, and it's not obvious to me that the state group we will store will be meaningful.. ok. s/tables/table/. Or just s/tables//\n. ok. the state_group field on EventContext is documented as 'state_group (int): state group id', so if it can now be None as well as an int that needs updating, please.. aren't state groups ints?. if we're moving this anyway, and it's intended to be called from outside the handler, please can we drop the leading _ ?. I kinda wish it wish they were factored out, but I guess that is a problem for another time. it'd be nice if all these private fields were named with a leading underscore, but I suppose that increases the diff significantly?. yeah, you see you made the mistake of expecting the thing that is named like a private field to not be gut-wrenched across the codebase.. oh, no you didn't. you just did the other changes in a commit called \"Update copyright\" which ... I didn't expect.. does this need documenting in workers.rst ?. needs documenting?. yes.. s/communicate with/send data to/\n. might be worth mentioning here that only the event_creator worker needs this for now, to help people upgrading.. as in you'd prefer (event_id, ) ?. plausibly, but it's replaced in https://github.com/matrix-org/synapse/pull/2864/commits/ebfe64e3d69d0047ee9902a05beaf0249f11e072 anyway. fair. heh. good point :/. yeah. I'd prefer to avoid that if possible, because it will need special-casing to just be postgres (because sqlite will commit the txn on analyze). Let's see how it works in practice.. given event.is_state() does two lookups of state_key, leading to a total of six lookups in this function, I wonder if we could/should do getattr(event, 'state_key') once instead.\nprobably overkill though.. y'know, you're allowed to put comments in sql files that explain wtf a table is for.. ~the docstring on action_for_event_by_user probably needs updating to say it will do this~\nhmph. it happened in another commit. list of ... ?. indeed we could do with a comment here to explain why we are doing it. too many is_highlight =.\nAnd it's in the wrong commit :/. I'm a bit mystified about why this is in this PR. isn't homeserver.yaml used for all of the processes?. I think your phrasing is a bit misleading then.. well, they don't, necessarily. Possibly the comment ought to have stayed put.. isn't this the same as just passing push_actions? or are you deliberately copying?. stick this after lines 1171-1173?. why do we do this check?. it's a lovely parameter, but it doesn't seem to do much.. instantiate. should we make a habit of raising in abstract methods in case someone ends up calling one?. Nobody knows, because it's not documented. But yes, I see what you mean.. right, but if events_and_contexts is falsy, then this is a no-op, so you might as well move it down?. and why is this code not ok with it being empty?. https://github.com/matrix-org/synapse/blob/master/docs/code_style.rst says \"avoid relative imports\".. shouldn't _event_persist_queue be in the EventsStore?. this appears to be redundant, fwiw.. right, but it is if it is, which is what we're talking about here.\nI feel like we must be at cross-purposes here, so let me clarify. I am suggesting changing:\n```\n        self._set_push_actions_for_event_and_users_txn(...)\n    if not events_and_contexts:\n        return\n\n```\nto:\n```\n        if not events_and_contexts:\n            return\n    self._set_push_actions_for_event_and_users_txn(...)\n\n```\n(which, incidentally, also resolves the discussion below). oh ffs I was reviewing a previous commit and not realising that all_events_and_contexts was added later.\n. I wouldn't, because: (a) consistency with the other stores (b) at some point we might want to do something that needs to not be on the workers (c) it would be a faff. a comment to clarify mightn't hurt.. Are you going to be using this on the workers? I assumed it would just be for the master.. .encode goes from str to bytes, and according to the comment at line 391 (and the name of the variable), json_bytes is already a bytes, so this doesn't look right.. surely you need psycopg2 whether or not you use URL previews. this doesn't belong in this section.. You need lxml whether or not you're on debian, as the first sentence says. It isn't anything to do with libxml2.\n. handle_new_client_event claims \"This includes checking auth\", but then doesn't seem to do any auth checks before calling this, which says \"Called when we have ... authed the event\". Something seems to be lying.\nPerhaps you could also mention push actions here and how they are handled.. we don't seem to do  much with this when we have a worker.. this is a remarkably uninformative comment. Suggest ditching it.. do we not need to remove the push actions from the staging area if this fails?. yes, you need lxml for url-previews.\nHowever, you have written:\n\"This ... requires the libxml2 library to be available - on Debian/Ubuntu this means ... pip install lxml\"\nwhich is incorrect.. Ah yes. I was forgetting that the call to the master was synchronous and that the error would propagate back to the worker, which will do the cleanup.. I'd suggest adding a line of logging for the case where there is an entry in the cache already.. suggest logging something here.. can you preserve_fn this once rather than on every request?. this is in the wrong place. so is this. I wouldn't mind if you logged the state of result.called (ie whether we're returning a completed response or are still waiting for the request to complete), but this is fine.. ste. we have code here which appears to expect this to be initialised to None (though I see no evidence of it being intialised at all, so perhaps it was just broken before). for the other abstract worker stores, you've documented the methods that need to be implemented. Could do it here too?. it might be more obvious if these were near the top of the class (with some comments about what they do...). is the call to _get_cache_dict redundant now?. this appears to be broken. Perhaps we should remove it rather than moving it.. is there a reason to change this?. LIES. not necessarily a dict?. I'd really prefer it if we used\n@cached()\n@defer.inlineCallbacks\nbut I'm not going to argue too much about it. could maybe do with a comment here about why this is a useful thing to do (ie, make sure we close the context before calling the other thing). SH?. membe. do we not need to worry about the same thing here?. why is this a 500?. please can we not catch all exceptions here and assume that they must be due to an invalid range header.. we just ignore range headers which don't fit this pattern?. indentation this deep suggests you probably need to clean up this code.. raising an exception without further info is a bit nasty :/. I think this is a thing that could block, so probably shouldn't happen in the foreground thread.. no need to break this onto multiple lines. our coding style asks for a trailing comma here. this should have been in dbe80a2, but I'm a crank. what do you mean, and why would we do so?. I'd argue that knowing the key has gone missing would be a good thing.... the logic went that if you were polling, you'd get what you needed within an hour either way. Can change it to 24h if you like though.... I tried a namedtuple to start with, but I wanted the individual fields to be mutable so that didn't work.\nSo yes, I can make it a more explicit dict.. wat. Yeah could do. Or we could make sure we log the purge id against the existing request_id so that you could tie the log lines together through that?. ah right. Because Failure().getTraceback() will give us the proper stacktrace, whereas sys.exc_info (and hence logger.exception) get confused by the deferreds and only go one frame down.. ok, changed to log the purge_id. have made asdict more explicit, and turned status into a more enummy thing while I'm at it. done. done. fixed, thanks. I think Callable[str, dict] means \"a thing that takes a str and returns a dict\". You probably want Callable[[str, dict], Deferred[None]] or something?. Callable[dict, Deferred[dict]]. can we kill off the transport_layer param (and hence get rid of this whole constructor)?. meh in view of https://github.com/matrix-org/synapse/pull/2978/commits/ea7b3c4b1b829703a780418e6bb6b7860a5b5451 that's fine. why is it called replication client/server rather than federation client/server? I find the whole thing confusing.. please could you add a docstring documenting the params and return value? I don't want to have to go spelunking to figure it out. https://github.com/matrix-org/synapse/blob/master/docs/code_style.rst:\n\nAs per PEP-8, imports should be grouped in the following order, with a blank line between each group:\nstandard library imports\nrelated third party imports\nlocal application/library specific imports\n\nthis is going in the opposite direction!. it does not.. is there a reason to pass requester here?. requester is missing. likewise for some of the other methods. is this supposed to be checking if it's the last element? it looks fragile.\nWhy not do \" OR \".join(where_clauses), or something. needs a ,. probably put this on the previous line after the else. it'd be nice to define this inside the if clause where it is used. this can be unconditional now:\nargs = [next_group] + where_args. I may be going insane, but I can't see it being used outside the if clause?. simplicity, mostly. but I agree it's not a big deal.. I'm talking about where_clauses, which is used at lines 270, 273 and 275. They are all inside the next if clause.\nhttps://github.com/matrix-org/synapse/blob/b2aba9e43053f9f297671fce0051bfc18a8b655a/synapse/storage/state.py#L267-L275. from synapse.replication.http import membership, surely?. system libs first please. why \"join\" and \"left\", rather than \"joined\" and \"left\", or \"join\" and \"leave\"?. so, why are we doing this, given we don't appear to ever use request again?. might be worth a comment then?. isn't it outweighed by doing size_callback even when it doesn't change?. not entirely relevant here, but I wonder if it would be better to do\nentry =  self.cache.pop(key, None)\nif entry is None:\n    entry = DictionaryEntry(False, set(), {})\nto avoid the object creation overhead?. no. itervalues surely. I think if you're going to rely on stuff that's only in simplejson, you ought to import it as simplejson rather than json.\nOf course, this blows my \"simplejson is the same as json\" stuff out of the water.... surely we should have a test for self._next_generated_user_id is None inside the linearizer?. With the help of the twisted mailing list, I realised recently that our Linearizer is pretty inefficient, especially when you get lots of things queued up on it. In cases like this where you really just want to do a thing the first time we get to a bit of code, it's better to do it with a single Deferred that everything else hangs off:\nif thing_result is None:\n    if thing_deferred is None:\n        thing_deferred = run_in_background(do_the_thing)\n    yield make_deferred_yieldable(thing_deferred)\n(which is probably more-or-less equivalent to what some of our cache wrappers do)\nhaving said that, if you feel disinclined to rewrite all this right now, I won't insist. Just I think we should bear it in mind for the future.. please could you add comments to explain what these count?. what do you mean by \"this server\" ?. we only look at one of the events in ev_ctx_rm ?. \"When this server creates a new event (as opposed to receiving it over federation) it will use the forward extremities as the prev_events, so we can guess this by looking at the prev_events and checking if they match the current forward extremities\".. againn: we only look at one of the events in ev_ctx_rm ?. just for the record, our coding style says 'standard library imports, related third party imports, then local application/library specific imports' so re ought to go at the top. But since this file already violates the standard, meh. the idea here was to preserve the original traceback - IIRC a plain raise replaces the traceback with a new one.. as I understand it psycopg2 and psycopg2-binary are alternatives - why would we need both?\n(and even if we do need both, why do they need to be installed with separate pip invocations?). this will (I think) barf if the env var isn't set. Can you just import CACHE_SIZE_FACTOR from synapse.util.caches ?. why would this happen?\nif we're going to do this, surely we should at least log the event id?. this looks like it needs a preserve_fn. isintance is a bit nasty. Can we do something like get_state_ids() which is defined to return None if they are unknown?. Isn't this largely used on the master? Will this do anything on a system with a split-out event creator worker? a comment here might be useful.\n. looks like it's only a subset of the state groups of new_latest_event_ids?. we now only get the state group ids here. I'm slightly failing to follow how the new code relates to the old in this file, but it generally looks sane, and a cleanup which may well be worth shipping independently of StatelessEventContext?. could you explain why the cast to str is required under psycopg2cffi? this is such a hot path that I'm reluctant to add anything that isn't absolutely vital.. urllib.quote doesn't escape / by default... . let's not preserve_fn for every event.. Either preserve_fn once, or use run_in_background (?). logcontext.run_in_background(handle_room_events, evs)\nAnd yes it is, except that it doesn't create a new function object on each loop.\n. s/list/tuple/, fwiw. feels like a bit of a shame not to share this with CounterMetric with a baseclass. Timstamp. seems a shame to have to do a db hit for this, but I guess working around it is a faff.. can we move the events_processed_counter update here so that all the metrics updates are collected together?. again with events_processed_counter. what happens if the event id is unknown? exception, presumably?. I like them being separate. Happy for you to leave the code c&ped for now.. could have done with being a separate paragraph, ftr, since the first line is slightly special (https://www.python.org/dev/peps/pep-0257/#multi-line-docstrings). clearer, but doesn't actually work when iterable is an iterable rather than a sequence.. looks like. agrreed, will change.. (and involves copying the input). better described as \"unconflicted state keys\" maybe?. x \\in F. parens around f \\cup G ?. ITYM $c_{f,g}(x)$ is either ...\nI don't think it's true that c_{f,g} is either f or g. this could do with clarifying. ITYM:\nif $\\forall x (g(x) = g'(x)), x \\in U_{f_g}$, then .... it looks like you're about to prove this, which is confusing. Suggest just stating it rather than making it a Lemma.. what's going on here? what does \\alpha f(x) mean?. can't you use something other than a? (or something other than \\alpha?)  They look pretty similar.. I think more to the point, \u03b1 \u2192 F \u2229 G. I'm failing to grok the By depends on sentence. \"those are the same\": which are the same?\nthe term \"depends on\" is used heavily in the later proofs, so I think this needs defining more precisely.. why is x in a ?. u is only defined over the unconflicted part of the state key space. I think it's clear what you mean, but it might be good to be more precise here.. could you be consistent about  c_{f,g}\\alpha_{f,g}(x) vs c_{f,g}(\\alpha_{f,g}(x)) ? (with my preference heavily on the former). It's particularly weird to see r with extra parens in the same sentence as c without.. I think s/depends on a/depends on \u03b1/\n . depends on \u03b1 ?. could you split the result of what r(...) depends on to a separate \\begin{equation}, since you're about to use it for induction?. (i'd be tempted to abuse a proportionality symbol \\propto to represent the 'depends on' relationship.\nOr redefine it in terms of independence.. yup makes sense. more parens ftw.. apparently. Now fixed.. doesn't this need a yield?. you could just return self.runInteraction(...) rather than using inlineCallbacks. likewise below.. please can we get into the habit of commenting our schema files to describe what the tables and the columns therein do.. it'd be nice to add trailing commas while you're here. wouldn't it be preferable to update this to WHERE events.room_id = ? ?. doesn't the key function have to be passed as a named argument?\nmax(event.prev_events, key=lambda x: x.depth)\nHowever, the bigger problem here is that event.prev_events is a list of event ids, not a list of events. In the general case, we don't necessarily have the prev_events.\n. this appears to have been introduced in pyopenssl 0.15 - so at the very least we need to bump the requirement in python_dependencies.py.\nHowever, there is a problem in that debian jessie has 0.14. There is a newer version in backports though - @erikjohnston is it ok to rely on things in backports? \nOtherwise we might have to do some hackery dependent on the Twisted version.. not much point in leaving it here as a comment, then.. I wonder if there is any way we can fix this gut-wrenching at the same time.. why is it called _evCurve now?. let's. s/and then/, in which case/. it's a fail. I'd be inclined to make _escape_character take the match object, rather than create a new lambda for each label.. any chance of updating the comment to say what this is doing?. please could you make this the subject of a separate PR. haveq. stream_orderign. _paginate_events_txn ?. Is there any change in functionality here, or is it just:\n\nmove paginate_room_events to StreamWorkerStore instead of StreamStore\npull paginate_room_events_txn out to a member function rather than being a nested f within paginate_room_events\ndo some of the stuff that was in paginate_room_events in paginate_room_events_txn?\n\nI think it's the latter but I'm not sure if I'm missing something.. I think this should be deleting from event_search, rather than being removed altogether. This doesn't work:\npostgres@fred:/home/rav$ createuser synapse_user\npostgres@fred:/home/rav$ su - synapse_user\nNo passwd entry for user 'synapse_user'\nWhy not just add --pwprompt to the createuser command?. this is installation-specific. Not all distributions will have a unix user called postgres. . please wrap at 80 chars. I think we should continue to tell people to rename it.. pointint. Deferred[tuple[list[_EventDictReturn], str]], really. could you clarify somewhere that topological_ordering need not be set if topo_order==True ?. pointint. s/token[0]/token ?. I think it might be worth preserving this comment, but moving it to sync.py?. why should it be called homeserver-postgres.yaml rather than just homeserver.yaml?. docstrings go inside the class. please include docstrings summarising functionality and documenting the types of params. well, yes. But what does it do?. (ditto for all public methods). [] is falsy, so this would mean that an empty list of valid targets would mean that all domains are valid, which is counterintuitive to me.\nhow about if inviter_domain not in self.domain_mapping ?. You're telling people to call it homeserver-postgres.yaml.\nAnd while we're here, the user should already have written the file, so pointing them to example content now is unhelpful.. wonder if we ought to make the comparison at line 375 ignore topo ordering. Might fix the fact I currently have 1110 unread messages in #matrix-dev too.\n. because I want to use ConfigError from outside synapse.config.. inspired by https://github.com/SublimeLinter/SublimeLinter/issues/167. Yes, but this isn't part of the C-S API and I felt like shorter URIs would be a winner given we're going to be spamming them out.. Actually I think the macaroon_secret_key code is buggy. You end up with an explicit \"None\" as the secret key :/. yeah, though I rather envisaged it wouldn't be limited to just consent.. that would be /matrix/client/r0/admin, mostly.... RST uses double-backticks for preformatted text. this bit is now unnecessary. this bit (up to line 19) is now unnecessary: the pwprompt allows you to enter a password. s/cp/mv/. \"to match\" sounds more natural than \"so they match\" here. oh right. Might just be best to point to the base class, like https://github.com/matrix-org/synapse/blob/master/synapse/handlers/room_member.py#L885 etc. can use [] rather than .get here now. can you put this somewhere that isn't between the \"let's build a temporary table\" comment and the building of said temp table?. could you also use different names for the stringy token and the tokeny token?. might be worth commenting on why we need this index. the comment on this doesn't really seem to be true any more.. is this looking for the prev_event before the extremity? which we have likely just purged?. ```\nWe calculate the new entries for the backward extremeties by finding\nall events that point to events that are to be purged\n```\nwe now look for events we are about to purge, which point to events we are not going to purge. it's completely different.. oh right. ehm. I'm not convinced this is going to calculate the right thing in the presence of disconnected bits of dag.. ? it's still showing up in the diff at https://github.com/matrix-org/synapse/pull/1756/files. > this bit (up to line 19) is now unnecessary: the pwprompt allows you to enter a password\n. this is going to be expensive. Might want to warn users about it somewhere.. \"the first node one\"?. I'm confused: \"Suitable for use with\" or \"Implements\" ?. I think some more words about the assumptions being made here would be useful. Likewise re the interface being exposed, to save me having to go and grok the paper.\nFor example:\n Looks like this assumes nodes are identified by unique strings?\n How do edges and ordering interact?\n* does adding a node before/after another imply an edge between those nodes? . s/inbetween/between/. precision. s/reverse/reciprocal/ ?. s/are/is/. Two orderings, one difference. . I think it would be worth noting what a room chunk actually is, as well as noting that we are storing them in an ordered graph. looks like we use it as the end of the interval to me. please please please can we wrap at 80 chars!. wrapping. s/,/;/ or better yet rephrase it. ... and it will use up a bunch of disk space. should probably explain how we get into this situation, rather than the events just being in the same chunk.. s/we/ChunkDBOrderedListStore/ ?. s/is added//. are you planning to use this outside the tests? if not I'd move it to the tests heirarchy. \"it\" -> the set of chunks in a room?. right, but potentially a disconnected DAG. How does the ordering happen in that case?. If I have four chunks, with two connected parts (A->B , C->D), so we know that A<B and C<D, is it also the case that either B<C (so A<B<C<D) or D<A (so C<D<A<B) ? or could we end up with B in the middle of C and D or something?. fair enough. yeah but maybe another day. Yeah, it's not the easiest, but it made my IDE pick up the type right. sigh.. It might be possible, but it felt odd to be hanging this off the user directory code, and I had concerns about there being weird effects at a distance.\ngiven that I'm only really expecting this to get run once per user, I'm hoping that this db query won't matter too much.. I hadn't twigged that it was important tbh?. agreed. I'm more inclined to make sure we block invites to that room as per your other comment, though a safety-net here is probably valuable too.. aditional. \"We can therefore end up with multiple chunks in a room when...\". suggest moving \"As such\" to after the explanation about how they are constructed. probably worth noting somewhere here that chunks start out disconnected, and then get connected later when we receive events that, uh, connect them.. no, except that I couldn't think of a name for the method that would cover both bases.. the reason it's here is that it takes care of the fact that we don't want to run it on the workers. Agreed that it feels odd though. Alternative solutions very welcome. could you give this some type info: in particular that it contains _RequestMetricses?. will this not end up with stale results, because we never properly clear it?. is this actually used anywhere? I can't see it. oh yes. Why not pass it through from RequestMetrics, since that already knows the context? It would distinguish more clearly between the data (_RequestStats) and the thing to manage it (RequestMetrics). yes, but we'll still end up with stale items in _in_flight_requests_count ?\n+1 to fixing with a callbackmetrics. s/ lets/, let's/\nor s/ lets/, /\n. no.. well, it's a difference between \"does this action require consent to the privacy policy?\" and \"does this user need to consent to the privacy policy?\".\nthe distinction means that it is meaningful to call assert_accepted_privacy_policy from the RoomCreationHandler, where we have already established that the action requires consent, but not whether the user needs to do so.. why is this changing from for e_id in ids to for e_id in ids.itervalues() ?\nassuming you've just unpicked what states is in here, could you add some comments about it? I really shouldn't have to go and spelunk in resolve_state_groups_for_events for it.\n. this looks bogus?. well, because if you aren't doing this sort of stuff, you don't need it. Though maybe we should reconsider this.. I suspect it's not in docs if you've got a debian installation :/. \"part of communication of the server polices\" ? really?\n\"part of communicating\" maybe?. good point, done. done. ok, should be better now. yeah seems like flexibility ftw right now. isn't this the same as list(extremities)? Happy for this to be explicit but it's the opposite to what you've done at line 800. edition?. You can't use a comma to join independent clauses. s/,/./. I'm inclined to stick with the error code we have, now that it has started to land in clients, even if it's slightly misleading.. This is very surprising in a function called _compute_chunk_id. Rename the function?. doesn't this need to loop over events_and_contexts ?. what is \"it\" here?. smart ' is too smart. as a general comment in this function, all these db hits look sloooow. do you plan to go via caches at some point?. why?. I wouldn't expect to see dupes in forward_events - why set here?. this comment is hard to grok, somehow. How about:\n\nAll the prev_events of events in forward_events. \nNote that this will include the current event_id.. again, why. bit uneasy about the coalesce here. surely if we've got NULLs in here then this will give bad results, and we should fail loudly rather than subtly?. is it worth trying to optimise this, depending on which path we've taken above?. isn't this condition redundant?. why are we bothering to build a new set here rather than just iterating through prev_chunk_ids at line 1517?\n\n(and if you are going to build a new set, could it have a different name?). yup I'm worried about the RTT, and expecting that we ought to have prefilled caches in the common case.. hrm. I guess I misunderstood what is_state meant. I assumed it meant that one or other of the events was a state event. But actually it means the edge is a prev_state edge rather than a prev_event edge?. example 1: if it's a new chunk, it's not going to have any existing edges\nexample 2: if we've established that there is exactly one prev_chunk_id, then we know that we do not need to add any new prev_chunk edges.. I'm curious as to why this needs to be conditional.. I'm curious about this too.. If we're reformatting, we prefer:\nfoo(\n    1,\n    2,\n)\nover \nfoo(\n    1,\n    2)\n(https://github.com/matrix-org/synapse/blob/develop/docs/code_style.rst has some words on this). this looks wrong: we deliberately utf-8 decode query params here. \"%F0%9F%92%A9\" should give you a smiley poo, which python 2's urllib.unquote doesn't do.\nIn fact, I'm surprised we don't have a unit test which picks this up, since I'm fairly sure we've been bitten by it before. Any chance you could add something, possibly by factoring bits of this out?. what, out of interest, is the logic behind using \"utf-8\" here? simplejson.dumps will produce ascii by default, so presumably any encoding (ascii, utf-8, latin-1?) will do the same thing here: I'd be keen that we use whatever is fastest.. I feel like this might be the wrong place for this. parse_string is currently a synonym for parse_string_from_args, and you're changing that.\nWe should probably make it so that we don't have two identical functions, but meantime: how about putting this in parse_string_from_args instead?. uhhh, this looks correct, but also like it's going to break something. any ideas wtf is going on in the existing code here?. or just if \"\\x00\" in user ?. why is this not required on python 3?. ugghhh. sorry.. are we deliberately making depth and topological_ordering different? If so, could you document somewhere what each means?. suggest you take the opportunity to change this to the more conventional [\"a\", \"b\"] syntax. this docstring needs an update to explain the new format. why ~ ooi?. is wtf order means documented anywhere?. is it really correct that we drop the topo ordering if we don't have a chunk yet for this event?. what's with the change to the -1 here?. isn't this normally spelt _EventDictReturn(*row) ?. why do we do this?. do we not need to update the limit on each loop?. why is this necessary (and, if it is necessary, why is it conditional on limit > 0) ?. should we make extremities be a set or something?. do we not need to handle tokens that have a topological field but not a chunk?. missing a yield ?. s/first//. why?. can haz docstring pls. can haz doc for new param pls. Maybe we should use absolute names for these (import twisted.logger; tx_log=twisted.logger.Logger()) to reduce confusion between twisted and stdlib logging infrastructure. ftr, PEP8 has some opinions on import order which we try to follow - in this case that means that imports from synapse go after those from twisted. OTOH this file already breaks the convention by putting import logging at the end so \\. fair. just thought it would save us pulling 100 events out of the chunk if the limit was 100 and we had already got 99 from the previous chunk.. why is this just IPv4 rather than an IPv6 address too? (I see f551ac3923648899451f2a9e80918097404f5197 changed this, but the commit comment is, ahem, unenlightening.). this table doesn't appear to be working. Please take a look at the rendered version: https://github.com/matrix-org/synapse/blob/develop/docs/metrics-howto.rst#removal-of-deprecated-metrics--time-based-counters-becoming-histograms-in-0310. what's with the trailing \\ here?. what's with the + 1 ?\nI mean, I see you have tests which assert this is right. I just can't see how :). trailing , pls. I wonder why we bother with this rather than just using type_set below.... please can we have a unit test for this. I've stared at it for a while and I think it's correct, but it would be easy for it to not be.. > Presence of type of None indicates that types not in the list should not be filtered out\nI'm afraid I totally failed to grok this (which you have dutifully copied throughout the PR, thank you) without reading the code. I think it needs more explanation: \"An entry of (None, None) is treated as a special case which means that any state events whose type does not appear anywhere else in the list will be included in the returned value\", or words to that effect.\nI'm also led to wonder if we shouldn't just make include_other_types another separate argument rather than this rather obscure special case.\nFinally, I'm concerned that this API has rather surprising behaviour. For instance, suppose I wanted to get the list of all state events, except m.room.member which I want to filter by a list of users:\ndef get_limited_state(groups, users):\n    _get_state_groups_from_groups(\n        groups,\n        [('m.room.member', u) for u in users],\n        include_other_types=True,\n   )\nNow suppose I call that with an empty set of users. The expected behaviour is to get no m.room.member events; the actual behaviour is that I get all of them. Synapse has enough footguns without adding more.\nAn ideal solution might be for types to instead be a dict[str, iterable[str]|None] mapping from type to a set of state_keys, but that might require quite a lot of refactoring throughout the codebase. As a compromise: instead of the (None, None) special case (or a separate include_other_types param) add a filtered_types param (which would be set to ['m.room.member'] in the above usecase)?. see the above comments about obscure special-cases, but if we're going to stick with this, could it be made to check for (None, None) rather than (None, *) for consistency with _get_state_groups_from_groups. because when the cache was populated, it might have been done with a restricted set of state_keys, so the cache might be incomplete, I guess?. what are member types, and why would they be redundant?. trailing commas ftw in future, please. could you add a comment explaining what this is? what does it map from and to?. given it's only used in the full_state and batch.limited branches below, it might make more sense to declare it in those branches.. why are we doing this here and at line 582, rather than just doing it in _calculate_state based on a lazy_load_members flag?. confused. What is a redundant member? Why do they have event_ids? are we currently filtering them by event_ids, or is this a note to remind us not to mistakenly filter by event_ids in the future?. rly? we've only just added the damn thing.. whhhhyyyyy. oh, is it because of the TODO at line 578 - this is supposed to do something more intelligent?. \n. deferred what?\nDeferred[bool] I guess, but what does the bool mean?. I think not. s/null/None/. I think these are all meant to be bytes rather than str fwiw. Especially url_bytes which you are carefully .encodeing. the uri path of the request. so what is the logic behind putting this in a different field?. s/null/None/. bytes|None. bytes|None. well ish. It was left in to remind me how to enable debugging on the requests lib. Arguably it should be a better comment .... frankly I think it would be easier to bin these than to fix them. I think they've been cargo-culted. don't mind though.. can haz docstring for arg pls. can haz docstring for arg pls. looks like this will explode badly if called without a reactor param? might as well remove the default value. trailing , pls. why are we now using a threadpool here, ooi? (and what else does that threadpool do?). trailing , pls. trailing , pls. synapse.server.HomeServer. it would be nice to try and get the types for these right, to help editors implement clickthrough etc. I believe this is a synapse.util.Clock ?. I think you've missed a call to this in background_updates.py.. can haz docstring on arg pls. this seems to be a bit redundant, but \\. the reasons for it now historical: back in the day (before various other things got fixed) you would get better stacktraces from deferreds which failed asynchronously than those that failed synchronously. . can we make this do sleep(0) for now, and then replace it with self._clock.sleep in the PR which does the sleep replacement?. can we push this to a separate PR?. please could we have a comment to indicate that the list is important?. s/cast/copy/ maybe, technically.\nI assume this is an atomic operation from the point of view of python threading?. only in that if somebody has really turned their logs down, we probably want the WARNs but can live without this one.. I really wouldn't mind if this had a docstring; \"Returns the twisted reactor in use by this HomeServer\" or something?. please can we have the initialiser before any other methods.. can has docstring pls. how does this behave when the UA is not valid utf-8?. :/ thank you.... Logging would be useful, here and in the other places we 404. This is kinda nonsensical: if the content is erased, how can we serve it? \nAlso: what does \"content\"  mean, and what does it mean when it is \"from\" a user? . whyso?. whyso?. do we need to include tests in this too?. I'm not entirely convinced about putting mock, six, twisted and OpenSSL in separate groups. What's the thinking there?. this is duplicated below, and probably can't actually be made PY2-only, because it provides https://matrix.org/docs/spec/client_server/unstable.html#id95, which isn't deprecated. again, this can't be removed because it's used for peeking.. this could do with updating. looks like it returns a list to me. shouldn't this be if from_key is not None?. can we have a comment here please? why is this a sensible thing to do?. could you clarify that this is a Deferred[list] ?. can we call this check-isort, to stop me thinking it's going to somehow magically do our isorting?. it'll be quicker to do result = changed_entities.intersection(entities) here, since intersection is an optimised bit of C (which does do the right thing when given a non-set argument). this is duplicated below. I'd rather not have to go and figure this out myself...\nit seems odd that it would be needed here and not in the upsert case.. how does this interact with include_all_devices? can haz doc pls. I'm pretty sure this is correct. Your options for returning from a render_* method are:\n- return a bytes, which twisted will then render as the body and call request.finish()\n- return NOT_DONE_YET, which skips the above two.\nthe implication is that if you have rendered the body and called finish() yourself, you should call NOT_DONE_YET.\nNote that this is exactly what happens with a whole bunch of our handlers that look like they are asynchronous, but actually complete synchronously.\nHOWEVER. There is a problem here, in that wrap_json_request_handler does important things (1: adds exception handling, though that may be moot here; 2: adds logging). So, can haz wrap_json_request_handler please?. can we deprecate this for now, rather than remove it, please?. ditto. I don't think this is correct.. I'm a bit confused as to what's going on here?. can we have a comment to explain what this does?. how do we know it's being reused?. can we have a comment for this, please? what does it map to and from?. ok, but can we define what it does? . >  I think the 'fix' needs to be done in Docker Hub to just make the latest tag be a real thing.\nis this a thing that we need to do, or?. I'd let this fall through to the \"unknown login type\"/\"Invalid password\" code below. I don't think \"Local DB Authentication Disabled\" is a helpful message for users.\nIn other words, just change line 681 to be:\nif login_type == LoginType.PASSWORD and self.hs.config.password_localdb:. can we call this password_localdb_enabled or something slightly more intuitive?. can we wrap at 80 chars please?. NULs. so it's dict[str, int] ?. sigh. ok. thanks.. could we record the circumstances under which we expect it to be set, and which None? (likewise prev_state_ids). do we expect it to return None, ever?. this comment seems a bit out-of-place now. this looks racy: what if two threads call get_current_state_ids at once?. [I suggest you store a deferred while the fetch is taking place]. shouldn't this be conditional on event_state_key being not-None?. this feels like a funny name, given it may have a state.\nIndeed I wonder if having it separate from  EventContext is worthwhile? maybe combine them and have DeserializedContext just override the accessors?. I can see myself getting annoyed with trying to navigate this file and find this class. I really wouldn't mind if it ended up in its own file (pagination_handler.py or similar).\nCan we also be a bit more specific that it's about paginating messages? MessagePaginationHandler would do.. this might be better achieved by moving _check_in_room_or_world_readable to Auth?. these are redundant, though as above, I question the wisdom of the subclassing.. ok, the critical piece of information here was that device_id_exists_cache only caches the presence of devices, not the absence of them, which is why we don't need to update it when we insert a new device.. trailing comma would be nice here. @jcgruenhage: I've read your comment on #3407 and I'm still confused. should we accept this PR? Reject it? should we ask for it to be changed in a specific way?. I know, but it's not that convenient when it has to be combined with a yield.. yes, but that's also true for EventContext. I don't understand why that means we can't override the accessors.. if this is going to be a Deferred, then it needs a different name.. you need a run_in_background here (and in get_prev_state_ids). fwiw there's no need to construct the intermediate set; this can be written as (((c_ids | ts_ids) - p_ids) - tc_ids).union(timeline_start_members.values()) which should be somewhat more efficient.\nIt looks like the previous authors of this function didn't know this either.. is it really correct that we include the tsm_ids even if they are in tc_ids ?. I don't follow this bit either.\nI assume the idea here is to ensure that any state updates which happen in the \"gap\" of a limited sync end up in the state dict of the result: normally they would be missed because they would be filtered out of state_at_timeline_start.\nBut I don't understand how this code fixes that. Am I being stupid?\n(If I'm right, it suggests you're missing a sytest...). I'm afraid I don't find this comment a clear description of what is happening here.\nuhm, what is happening here?. it's a shame that this code is duplicated from above. Could it go into _calculate_state instead?. Iterable[str]|None, I think. trailing comma please. trailing comma please. your parens have got a bit lost here.\nalso, can the first member of the tuple really be None?\nalso, looks like this can be any iterable rather than just a list? worth saying so.\ntypes (Iterable[str, str|None]|None): list of 2-tuples.... I think it would be clearer to inline this (ie, s/include_other_types/filtered_types is not None/ below). > Only apply filtering via types\nno, this (and the subsequent implementation) misses the whole point of my suggestion here, which was based around the case of wanting to behave sensibly when types ended up empty.\nThe usecase I was worrying about was:\n  I want to get the list of all state events, except for m.room.member, which I want to filter by a list of users.\n Due to reasons, that list of users is empty.\nSo, we have:\nstore._get_state_groups_from_groups(groups, [], filtered_types=['m.room.member'])\nYour code will return everything here (afaict). \nA correct description of how I envisaged this parameter would be:\n\nIf not None, gives a list of state types which must match entries in types to be returned; other types of state are returned unfiltered. If None, all state types must match entries in types.\n\n(which is still pretty confusing, and I welcome better suggestions. I do think that the current impl is a foot-gun, though.). this seems very circular. any more clues?. shouldn't we decide if it's meant to be a str or a bytes? or document it as such if it's really meant to be either?\n(also, shouldn't this be written:\nif isinstance(password, bytes):\n    password = password.decode('utf8')\npw = unicodedata.normalize(\"NFKC\", password). as above. why are we now encoding this when we weren't before? And why doesn't it need to happen on py3?. why don't we decode when we have PY3?. decode() without an explicit encoding makes me twitchy.. likewise encode(). why do we only do this for py2?. why does it vary?. can we update the docstring to note that this returns a dict[str,bytes] please?. ... or if we don't have a cache, presumably. could do with a comment here. > ```python\n\nstore._get_state_groups_from_groups(groups, [], filtered_types=['m.room.member'])\n```\ngets turned into:\nsql\nselect stuff where type <> 'm.room.member'\n\nDoes it? Are you sure? [] is falsy, so this block will get skipped: https://github.com/matrix-org/synapse/pull/2970/files#diff-6ee0c965f89a99e084e8500580e3ec17R258. Perhaps you could test this case in the UT.\n\nThe fact I can't understand what you're proposing makes me wonder how anyone else is going to understand it in future, unless this is just me being particularly thick.\n\nI don't claim that what I'm suggesting is particularly elegant - as I say, I welcome better suggestions. I'm just trying to avoid this landing with the current massive footgun.\nI think you just need to change the line I linked above (and its sqlite equivalent) to if types is not None.. would you humour me with a test for self.store.get_state_for_event(e5.event_id, [], filtered_types=[EventTypes.Member]) ?. can haz docstring for lazy_load_members pls. yeah, but I still don't quite get why this is the right thing to do; or at least, I don't find this comment enlightening on the subject.\nIs it true to say:\n\"If we are lazyloading room members, we may not previously have sent all of the members in the previous state, so we need to include them now.\". I wonder if this would be clearer rewritten as:\np.ids -= set (e for t, e in timeline_start.iteritems() if t[0] == EventTypes.Member)\nor, more efficiently, especially when p_ids is empty, as it is for the initialsync case:\np_ids.difference_update(e for t, e in timeline_start.iteritems() if t[0] == EventTypes.Member)\n. it looks like this is going to do the wrong thing in the presence of an unwildcarded types but a non-empty filtered_types: in particular it isn't going to fetch the event types that aren't listed in filtered_types.\nI'd say that, if filtered_types is not None, types_to_fetch should be set to None.. I'm not sure this method does the right thing with filtered_types.. At the risk of being stabbed, now that you've done all the work to update _get_state_groups_from_groups...\nI don't think we're ever going to get here with filtered_types set without types_to_fetch being None (and hence filtered_types being ignored).\nUnless you want to put in the work to make the DictionaryCache more intelligent, I suspect you need to pull the filtered_types support back out of _get_state_groups_from_groups.. also: the update the result code below needs to take filtered_types into account.. > Or are you saying that because filtered_types acts as wildcard (i.e. \"please return me all state outside this list\"), we should go and blindly load all state out of the DB and then apply the filtering in the update the result phase?\nyes, this.. aren't the two equivalent?. yay! I understand!. currently we have:\n```\nll_ids = set (\n    e for t, e in timeline_start.iteritems()\n     if t[0] == EventTypes.Member and e not in tc_ids\n)\nstate_ids = (((c_ids | ts_ids) - p_ids) - tc_ids) | ll_ids\n```\nwhich is equivalent to:\n```\nll_ids = set (\n    e for t, e in timeline_start.iteritems()\n     if t[0] == EventTypes.Member\n)\nll_ids -= tc_ids\nstate_ids = (((c_ids | ts_ids) - p_ids) - tc_ids) | ll_ids\n```\nwhich is equivalent to:\nll_ids = set (\n    e for t, e in timeline_start.iteritems()\n     if t[0] == EventTypes.Member\n)\nstate_ids = (((c_ids | ts_ids) - p_ids) | ll_ids ) - tc_ids\nwhich (given that ll_ids is a subset of ts_ids) is equivalent to:\nll_ids = set (\n    e for t, e in timeline_start.iteritems()\n     if t[0] == EventTypes.Member\n)\nstate_ids = (c_ids | ts_ids) - (p_ids - ll_ids) - tc_ids\nwhich is equivalent to what I put up there.. ok, suppose we have a partial cache of the state, including the m.room.member events, but not the m.room.history_visibility events. Suppose this is called with:\nstore._get_some_state_from_cache(group, [('m.room.member', 'user1')], filtered_types= ['m.room.member'])\nWe have all the events we need to satisfy the types list, so missing_types will be empty (and hence got_all will be True), even though we are missing important state.\n. I'm not sure a link that you have to reconstruct which proves that this implementation is equivalent to some other implementation that never landed is terribly helpful.\ncan we just say something like \"In practice, we do this by removing them from p_ids, which is the list of things we know we have already sent to the client.\" ?\n. can we do iterkeys if we're not using the values? Or just in existing_state\n. can we clarify when the second is None but the first is not?. ok, so now what happens when we have\nstore._get_some_state_from_cache(group, [], filtered_types= ['m.room.member'])\n?\nAt this point I feel like I'm being a human unit-test rig, and it makes me sad.\n. mmkay. it should probably be a .feature, then?. lucky for you, and has higher precedence than or. I had to go and look it up though. Parens please.. can't we just write is_all or (not missing_types and filtered_types is not None) rather than special-casing over a particular bug elsewhere in the algorithm?. worth noting that missing_types isn't actually used in the result. Suggest removing it; I think it might open some clearer options in how to implement this function. I still don't think this is right; I don't think e22700c actually fixed the case I mentioned.\nProve me wrong with a test!\n\ni strongly suspect i'd have missed it in a UT too.\n\nWell, can you add one now, please.. why is this necessary? surely login_submission is coming from the json body so should already have been un-utf8'ed?\n(and if it is necessary, why don't we do it on PY3?). (should it not just be password = unicode(password) ?). I think it might be worth clarifying that it will be a str on python3. Something like:\npassword (str|unicode): the provided password. On python2, *must* be a unicode.\n(and similar on validate_hash etc etc)\nOf course what's really happening is that elsewhere we have been sloppy about saying str when we mean str|unicode, though I don't suggest we change that.... again, (str|unicode) with words of explanation. why do we not utf-8 decode here?. why do we encode('ascii') here?. if there's a reason for doing password.decode('utf-8') rather than body[\"password\"], can you add a comment to say what it is?. again, why not unicode(new_password) ?. this smells wrong. Surely we should be storing the same type in the session as is in the original params?. also, haven't params already been decoded?. ok comments please to explain this.. ok, but the fact that you are special-casing the empty list makes me suspect that there are bugs elsewhere.\nand sorry, it should have been is_all or (not missing_types and filtered_types is None). Maybe it should be:\ngot_all = is_all\nif not got_all:\n    # the cache is incomplete. We may still have got all the results we need, if \n    # we don't have any wildcards in the match list.\n    if not missing_types and filtered_types is None:\n        got_all = True\n. and now that we aren't returning missing_types, I wonder why we are bothering to build a set rather than just using a boolean. But let's just land the damn thing.. as per https://docs.google.com/document/d/11yn-mAkYll10RJpN0mkYEVqraTbU3U4eQx9MNrzqX1U/edit?disco=AAAACEx0noo, we should consider validating the value passed by the client - presumably in the constructor rather than here.\n(this applies to lazy_load_members too, of course; I just forgot it there.). trailing comma please. why are we doing this here, rather than where the cache is used below?. it seems problematic that we only populate the cache if lazy_load_members and not include_redundant_members. what if the client calls sync with include_redundant_members=False, and then later calls it with it True?\nI can see an efficiency argument, but if we're going to say that's a thing that clients can't do, let's spell it out in the proposal, along with the steps they would need to take to change their mind (presumably a re-initial-sync?)\nRelatedly, is there a danger of it breaking for people who switch between client versions that have support and those that don't? I can't think of a failure offhand, but it might be worth thinking a bit harder about it?. I've got a feeling this isn't going to be adequate. It's possible for state to revert to an earlier event thanks to state resolution: so for example Bob's member event might be A, then B, then back to A. In this case we won't tell clients it's gone back to A, because A is already in the cache.\n(Admittedly there are probably other bugs in the sync code in this area, but let's not add more.)\nI suspect you need to maintain the latest (type, state_key) => event_id mapping in the cache, rather than just a list of event ids.. I won't ask you change the existing state_ids var, but can you s/state_id/event_id/ if it's an event id? To me a state_id sounds more like a state group id than an event id.. ok, as discussed, unicode seems the right answer here. However, the difference with user_id and the return type is now very striking; suggest you update them too.. s/str/bytes/ ?. s/str/bytes/ ?. yes they are, but that's not the point.\nthe question is why we do the encoding here and not for python3. Likewise, I still don't understand why we decode the result on py2 and not on python3.\nIs it that urllib.parse.unquote takes and returns raw bytes on python2 and unicode on python3?\nwhatever the answer is, could we have some explanation in comments?. s/str/unicode/ ?. can we not use the PY3 path under py2 as well?. fwiw I'd find a dict comprehension clearer here:\nreturn {k: v.encode('ascii') for k, v in txn}. this is the default \\. I don't think this should be necessary (and it makes simplejson much slower). Could you add comments to explain why it is necessary?. oooh I hadn't spotted that. well, yay!. hum; does this actually work?\nthe docstring on wrap_json_request_handler says:\n\nThe handler method must have a signature of \"handle_foo(self, request)\",\n    where \"self\" must have a \"clock\" attribute (and \"request\" must be a\n    SynapseRequest).\n\nI don't think the first is true. You might need a self.clock = hs.get_clock() in the constructor.. @turt2live: any suggestions for what would be more appropriate?. a comment to explain why we are doing this would be good.. how about isinstance(content.get(\"url\"), basestring) ?. now that we're beginning to get things working on python3, it's helpful to avoid python2-only-isms.\nin this case, I think you want isinstance(..., six.text_type). yarp. https://github.com/matrix-org/matrix-doc/issues/687.. I don't really understand this comment. What do you mean, for now?. (it would be helpful to link to the bug in the comment, I guess). hrm, can we use a set rather than a dict here?\n```\nmembers = set()\n...\nmembers.add(ev.sender)\nor even:\nmembers = set(ev.sender for ev in itertools.chain(\n        results[\"events_before\"],\n        (results[\"event\"],),\n        results[\"events_after\"],\n))\n```\n. I guess this won't mean much to the average reader of the synapse changelog. You probably need to say it's a new endpoint for clients. A link to the proposal might help.. needs auth?. this looks like  bad merge?. lower-case str, and it can be None.\nalso: sorry, but can you copy the slightly longer/clearer descriptions from get_state_ids_for_events etc? It's really not obvious how this works from reading this description.. you've been writing too much javascript :)\nbool. ditto. str|None. Can you explain what it means if it is None?. gentle reminder to use trailing commas in this situation. don't mind if you want to leave these now they are done.. it feels confusing that at_event doesn't work in the Leave case.. do we not need to check that the user has permission to view the room at this point?. I guess you've got three choices:\n\n\ntreat each call to get_filtered_current_state_ids as a separate cacheable thing - so for example if you do a lookup of get_filtered_current_state_ids(room, None, None), a lookup of get_filtered_current_state_ids(room, [(t, k)], None) would not hit the cache. To do this, you just need an @cached decorator, plus invalidation calls.\n\n\nImplement this in terms of a call to get_current_state_ids followed by a filter. This might increase cache hits, but cache misses will of course be very expensive.\n\n\nuse a DictionaryCache, like _state_group_cache uses, since DictionaryCache has support for partial caches. The keys would be room ids rather than state group ids. again you'd need to consider invalidation.\n\n\nNot bother with caching and see how much it hurts?. don't mind really. I guess it makes sense to keep it explicit so we don't forget it's needed.. ugh, what a mess. thanks for clarifying this.. as discussed, let's just coerce the result to unicode. he. can you update the docstring?. I'm struggling to keep track of which methods do the notification and which do not. Could you update the docstring on persist_auth_tree?. again, can you update the docstring to say that we may notify. as the CONTRIBUTING.rst file says, anyone making a PR is welcome to add themselves, for any contribution. It's not the size that that matters.... ok this looks good to me, but the error code will still be M_UNKNOWN. Really it ought to be M_NOT_FOUND as per https://matrix.org/docs/spec/client_server/unstable.html#get-matrix-client-r0-directory-list-room-roomid.\n\n\nI think that there's a NotFoundError or something you can raise instead?. nuke-community-from-db.sh. can has link?. can has link?. also, can has wrapping at 80 chars?. that's not how you link in MD. think it's [text](http://link).. we're in the process of porting to python 3, and this won't work. Maybe you want host.encode('ascii') ?. Am I right in thinking this is no longer used for making outbound connections? Could you update the docstring if so.. might be nice to copy _idnaBytes and _tolerateErrors (both of which seem to be trivial) rather than using the private impls from twisted.. for future reference, we have a NotFoundError which does some of the boilerplate here.. why would we trust config ? Note that it's the dict from the client, as opposed to self.hs.config. mmhmm. ok will remove it for now at least.. could maybe use cls.NAME instead of send_federation_events_to_master. please could you document the format of the URI - particularly since it seems to be changing.. (ditto below). can we have METHOD (set to one of POST/GET/PUT etc) instead?. does whatnow?. if you just want the event id, use get_recent_event_ids_for_room.. this doesn't exist. get_joined_users_from_context really isn't a useful thing here.. Should this not be in the sytest repo rather than here?. this field may be absent. why not just if not joined_user_ids and not invited_user_ids. Or better, invert the if clause: if joined_user_ids or invited_user_ids.. can we use a set rather than a dict here?. is it a given that a member event in the timeline is sufficient? What if it's the hero leaving - do we want instead to get their join event? (That said, presumably in that case the previous state would be in the state block anyway?). presumably state might be large? would it be better to just build a set of the members in the timeline, and then look up the heroes directly in state as well as the set?. lazy_loaded_members_cache claims to map to an event id, not a True, so this looks bogus. I think state dicts was right. For each event it returns the dict mapping from state key to event id.. grr. can you fix the docstring while you are there?. someone really wanted that sweet sweet utf-8 encoding. err, not really. It feels like it's probably not something a user is going to do much about, so I'm not sure there is much value in including it in the response.\nWhat we probably should do is log the error.. You can write # noqa: E722 to disable the pep8 test. See https://github.com/matrix-org/synapse/blob/develop/synapse/handlers/message.py#L583 for an example. . sorry, I was being stupid here. Let's not go defining unicode though.\nI think you actually want host.decode('ascii') ?\n. there. this is dead. their. > Is there a specific reason you want to use decode('ascii'), otherwise I would suggest decode('utf-8') to keep it more generic?\nWell, I think we're expecting a plain ascii hostname here. If it's not plain ascii, something is going wrong.\nAnd yes, there are currently other python 3 problems in this area. @hawkowl  is working on python 3 support.... can haz docstring for cleanup_func?. It's been removed on develop; you are reintroducing it.. (\"it\" being _check_in_room_or_world_readable). nit: trailing comma would be nice :/. no, it's not; as you note, there is a problem if we don't yet have an event after the token, which is moderately likely given my understanding of the proposed usecase (cf https://docs.google.com/document/d/11yn-mAkYll10RJpN0mkYEVqraTbU3U4eQx9MNrzqX1U/edit?disco=AAAACCLJnz0: please can we have an answer there?)\nI'd suggest doing the same as SyncHandler.get_state_at (which is basically to call get_recent_events_for_room and then apply the change implied by the event in question - though as the comments there say, that is buggy too :/)\n. why allow_none? it's only going to make it explode in a more subtle way. nit: just if visible_events is more pythonic here. What's the logic for returning an empty result rather than a 403?. can we do an early return if name_id or canonical_alias_id rather than having this massive if block?. Again, make this into an early return?. could you stick this under docs/admin_api, with a link here to say \"there is an API which is documented at [...]\"?. under. \"a lot of users\". Or better: \"a large number of registered users.\". s/with//. if you drop the access_token (which is kinda obvious), does this fit on one line?\nIf not, can you indent this line more?\nalso, I suggest @user:host rather than @dest:user. I feel like sending a message to all users is a dangerous thing that might happen by accident. Would it be better to have separate APIs\n/admin/send_server_notice_to_user/<user_id>\n/admin/send_server_notice_to_all_users\n?. surely we should yield here to wait for the request to complete?. well, fair enough. I won't insist.. I'm trying to figure out whether there is a difference in behaviour between /admin/send_server_notice/ (with a trailing slash and an empty user_id) and /admin/send_server_notice (with no trailing slash). AFAICT the former will fail, but the docs say it is valid?\nI'd suggest that you should not accept /admin/send_server_notice/, and the docs should be updated to clarify.. duplicating all this code from FederationHandler feels like a certain path to things getting out of sync. Can we not call the FederationHandler code here?. oh god. TransactionStore inherits from TransactionStore ? I can see this is a pre-existing horridness, but ... ugh. Shouldn't this be a SlavedTransactionStore?\n. [indeed if it can inherit the whole of synapse.storage.transactions.TransactionStore, can't it just be replaced with that?]. we've been documenting abstract methods with abc elsewhere:\n@abc.abstractmethod\n    def make_homeserver(self, reactor, clock):\n        \"\"\"some docstring\"\"\"\n        raise NotImplementedError()\ncould we do that here too?. yes I agree this needs more discussion :/.\nFor example, presumably the change to push rules strictly means that we don't support < r0.2.0 any more.\nMy inclination would be to avoid poking at this hornet's nest for now.. let's use NotFoundError here. (done in 0d5770d). fixed in f5189b9. nit: in future, please do add docstrings to public functions: in particular it's important to document the args and return types.. trailing comma would be nice.... Is there not a danger of races if the *_remote_profile_cache methods are called from a worker?. I'm not entirely sure I'm happy that we end up with a UserDirectoryHandler which we then carefully don't use. Could we have some sort of stub handler which just provides a notify_profile_changed and is implemented by different classes on the workers than on the master?. on closer inspection, it looks like efforts are made to not call those methods from a worker, in which case I think they should probably stay in ProfileStore rather than moving.. it might be a good time to shift this (and the things it calls) to a MasterProfileHandler. it seemed pretty redundant. We're already assuming that get_resource_usage doesn't throw elsewhere.. can we change the docstring on this method to say it returns a unicode rather than a str ?. can has docstring for encoding please. it feels odd that encoding applies to both the name and the result. I feel like it should just apply to the result, and the name should always be encoded as ascii (if it's not already a bytes). also can you change the strs in the docstrings to be bytes or unicode or both as appropriate?. why is this changing?. surely we should never get here for an m.room.create, because we should never have to do state resolution?\nIn other words: explicit_room_version seems redundant.. this looks redundant, since it's passed as an arg.. suggest \"To run unit tests on a development environment ...\" to distinguish from the previous paragraph about CI and PRs. can we stick the Dockerfile in the docker directory to avoid cluttering the top-level more than necessary?. this is probably redundant if the dockerfile is in the docker dir?. #!/bin/bash is conventional for shell scripts.\nDoes it need a set -e so that it doesn't plough on with the run if the build fails?. could do with a shebang line and a comment saying what it does?\nand a set -e maybe?. can it go in a subdir?. can it also have a comment saying what it does?. shebang / comment / set -e, please. also chmod +x ?. I think that conflicting PRs don't get a /merge ref, so this will fail, and the next command is a bit strange. what is your thinking here?. environment. can you log the value of the exception so we have a clue why it failed?. ditto. ok, so suppose I call _get_state_groups_from_groups([group_id], types=[('m.room.topic', '')], members=False).\nI think this means we will do two separate selects:\nSELECT {...} WHERE state_group IN (...) AND type='m.room.topic' AND state_key='';\nSELECT {...} WHERE state_group IN (...) AND type<>'m.room.member';\n... which doesn't sound right?. we'll need to remember to tune this when we deploy it.. it would be useful to have a block comment somewhere (and here seems like a reasonable place) which explains in detail what's going on here, and what the two caches do.. bool|None. Also the description could do with being a bit clearer. How about:\n\"If not None, then, in addition to any filtering implied by types, the results are also filtered to only include member events (if True), or to exclude member events (if False)\". you can't use % interpolation on a ? ... I guess you mean %s here\n. nit: generally we prefer % (foo, ) over % foo to avoid unpleasant surprises when foo turns out to be a tuple.\n. Could we, instead of building additional_clause, do sql += \" AND type = '%s' % (EventTypes.Member,) (and put it at line 350)? I think I'd find that clearer than messing with additional_clause.. I'm finding the multiple calls to _get_state_for_groups_using_cache quite hard to reason about, and the special-case of checking for filtered_types == [EventTypes.Member] is a bit sad (apart from the case of longer lists including EventTypes.member, what if filtered_types is actually a tuple or a set? I know the docstring claims it should be a list but I can't see any reason for that, and the failure mode will be subtle if someone gets it wrong).\nHow about:\n```python\n        if types is not None:\n            non_member_types = [t for t in types if t[0] != EventTypes.Member]\n        if filtered_types is not None and EventTypes.Member not in filtered_types:\n            # we want all of the membership events\n            member_types = None\n        else:\n            member_types = [t for t in types if t[0] == EventTypes.Member]\n\n    else:\n        non_member_types = None\n        member_types = None\n\n    non_member_state = yield self._get_state_for_groups_using_cache(\n        groups, self._state_group_cache, non_member_types, filtered_types,\n    )\n    member_state = yield self._get_state_for_groups_using_cache(\n        groups, self._state_group_members_cache, member_types, None,\n    )\n\n```. this is a bit horrid and feels a bit backwards.\nCan you pass a bool param (use_members_cache?) into this function instead of cache?. these are redundant now. given that this is also used as a base class on the master instance, can you either give it a different name (BaseProfileHandler?) or a docstring that explains the situation?. could we have this return WorkerProfileHandler and then override it in synapse.server.HomeServer? possibly with a comment here to say that's what's going on?. can we assert that hs.config.worker_app is None here?. I guess you could explicitly assert that event.type != EventTypes.Create here to give a slightly more comprehensible failure if/when it happens.. sorry, this was unclear.\nI'm suggesting:\nrather than pass a cache into _get_state_for_groups_using_cache, pass a bool which is True to use _state_group_members_cache and False to use _state_group_cache. Then on the first line (or wherever) of _get_state_for_groups_using_cache, do\ncache = self._state_group_members_cache if use_members_cache else self._state_group_cache\nand then on this line here you can just use use_members_cache instead of going back to a bool.\nIt just felt odd to be going back to a bool here. Though I don't feel that strongly about it so if you want to leave it alone that's fine.. I think this should be \"subset of state keys\" ?. \"The point of using\". I think if the param was \"we're lazy-loading members\", I'd agree with you. But for better or worse, it's not.. ok.. hrm, ok, let's punt it for now, though I'm not sure I agree.. oh. why would we ever be doing state res on create events?. I'm struggling to remember what this block is for (it's a shame there's no comment). AIUI, this is dealing with the situation that:\n\nWe're returning an incremental sync, with no \"gap\" since the previous sync, so normally there would be no state to return\nBut we're lazy-loading, so the client might need some more member events to understand the events in this timeline\nSo we fish out all the member events corresponding to the timeline here, and then dedupe them below\n\nCould you confirm and add a comment?. this should probably include something to set the X-Forwarded-For header ?. the point is to get apache to set the header, so that synapse can use it.. > I think by \"atomic\" it means \"doesn't yield\", tbh\nthis, ftr. can haz wrapping pls. sorry, this file just needs to be a short statement, since it ends up in the changelog.. indeed. thanks.. would be nice if this had the same text as #3906 so that the changelog entries get combined. I'll just change that on develop.. sorry, that doesn't mean a lot to me. How about: \"Fix problem when playing media from Chrome\" (if that is an accurate description)? . nit: I'm not really sure that there is any point in specifying default values for these params, given they are always passed.. there are other reasons that you might not have a read receipt. You can't assume that all of these notifications are invites.. outboud. I'm afraid I don't really follow what the bug you're trying to fix is, and this seems like an odd way to go about it.\nPlease could you try to explain the bug more clearly, and how this fixes it?\nIt's not obvious to me that I want a mix of old and new events in the email: it sounds confusing. Furthermore, doubling the number of database queries sounds unsatisfactory.\n. done. for example, the user may be using a client which doesn't send read-receipts.. (we don't use jenkins any more...). it's not obvious to me that this needs copying: why not just additional_args = unique_types ?. TIL you can do this in python.. why do we bother to update and check room_serials as well as the stream change cache?. I can't see why this would happen.. could you log the reason for the failure (ie, e) as well as the fact it's failed?. > I had to look at it a few times to understand the intent \n(I had the same reaction tbh). why would types be empty here if lazy_load_members was true, now that #3916 is a thing?. so this can go back to being just types now, right?. the problem is really that the belt-and-braces check on types and batch.events makes me wonder what I am missing.\nI guess you can argue this both ways though, so \\. this should be redundant now due to https://github.com/matrix-org/synapse/pull/3948, and I'm a bit concerned it is rather fragile (we'll get a surprise down the line if we ever change that line in setup.py). Can we remove it?\n(if you want to exclude synctl from the final image, do it in the rm below?). I would not call this an eviction. To me, eviction means that we have removed a valid entry to make room for a new one. I'd consider this as equivalent to an update with a magic \"doesn't exist\" value.. doesn't this need listing under envlist ?. I wonder if we really care about the coverage here.. could you add some comments explaining the exceptions?. suggest one sed with multiple -es rather than multiple seds. could you add a comment explaining what this env does (and why)?. s/older/newer/?\nCould you give more specific examples? which OSes do these libs not compile on? (Travis runs on a pretty ancient os (ubuntu 14.04 ?), so I'd be surprised if there were things which we needed to support for xenial which don't compile on there). release-.* surely. y'know jq can add too ...\ndoesn't matter, this works. I still think we're going to stare at this in a month's time and try to remember the history here. Could you put\n\"although we support psycopg2 2.6 (because that's what's in xenial), the Travis build images use postgres 10, which is incompatible with 2.6, so we make 2.7 our minimum. Similarly, blah blah pyopenssl\".\n. [given we're not running the tests against postgres here, why do we care about psycopg2 at all?]. I think you can just return failure here.. note that HttpResponseException has a to_synapse_error method which you probably want here.. I think I'd like us to be conservative about which error codes we pass through here; can you start with if e.code == 403 and we'll work up from there?. well, lxml and psycopg2 are only required if you enable certain features (url previews and postgres db, respectively), so aren't installed by default.\nI added the others because they take ages to build, and I got bored of waiting for them each time I rebuilt the image.. generally we prefer to do the hs.get_foo() calls in the constructor (not least because it avoids suprises later). this is redundant. if it's not callable, we ignore it silently?. this seems to be unused?. @hawkowl: so I think you're agreeing with me? If so I'll remove this bit of code and merge it.. this is the same as return self._cache.pop(key, default) now.\ndocstring wouldn't go amiss.. it feels very random to be doing this at this point. (Which is when the first user is registered? when they log in?). what if two users register at once? what if the first user didn't qualify for autojoining for some reason?\nCan we not do this when the HS first starts, somehow?. can we not do the alias bits by passing room_alias_name to create_room ?. could you document what name is naming?. this looks unrelated, though useful.\nI would s/Assuming develop/Assuming it will be based on develop/ though.. yeah sorry, I hadn't quite twigged that dict.pop(foo) was different to dict.pop(foo, None).. ok, fair enough, but still, having _join_user_to_room magically do something different if there is now exactly one registered user feels very magical.\ncan we pull out the is this the first user logic to register (where we only have to do it once per user, rather than once per user per room)? and have a separate _create_auto_join_room method?. > and have a separate _create_auto_join_room method\nor just call room_creation_handler.create_room directly from the for r in self.hs.config.auto_join_rooms loop in register.. synapse != pynacl. 1.7lol. it feels odd that this will be a (boolean) False if the env var is unset, but a str (or a bytes?) if it is set. How about\nUSE_FROZEN_DICTS = \"SYNAPSE_USE_FROZEN_DICTS\" in os.environ\n?. I think we normally call them \"the Synapse worker apps\". this is going to fail on debian unless we backport frozendict 1.x... which we probably should, tbh, but is this really the best way to compare a pair of dicts?. > Because then SYNAPSE_USE_FROZEN_DICTS=0 would enable them.\nthat was true with your version too ;). is there an intention to set this for the tests somewhere?. I'm wondering if this is actually used (since afaict use_frozen_dicts is only read by code which is never run under the UTs), and if not I would probably choose to omit this. But I'm not that bothered and this needs merging.. can you update this to match the description of the original PR so that the changelog entries get combined, please.. what is to say that this will be thread-safe when the loop below was not?. surely this is nothing to do with the display name?. ffs. I should probably learn to read.. is there a reason for doing this rather than adding an errback to the deferred returned by call.start?. this won't actually catch any asynchronous failures.. could you not have msg and consumeErrors as params to log_failure and then just do addErrback(log_failure, msg) ?. a groups. each state group only has one prev group, so this doesn't really make sense. \"A descendant is a state_group whose chain of prev_groups includes the given state_group.\" ?. the problem here is that we might be about to delete a bunch of the events :/. I think you need a WHERE event_id NOT IN events_to_delete.. can we not do this for more than one state group at a time?. worth remembering that we already have this on matrix.org, so would ideally not spend ages building another copy of the index.. let's. can you not inline this, for less ugliness and fewer random locals?\nnon_member_state, missing_groups_nm = (\n    yield self._get_state_for_groups_using_cache(\n        groups, self._state_group_cache, non_member_types, filtered_types,\n    )\n). s/set[dict]/set[int]/ afaict. s/state groups/state_group ids I think. worth noting that said state groups might not be entirely missing - we may just have incomplete data for them.. also, I think incomplete_groups might be a more appropriate name than missing_groups. opinions vary on the desirability of this, so up to you, but I prefer an early bail-out than 100 lines of indent which I have to scroll through to find out if there's an else clause:\nif not missing_groups:\n    defer.returnValue(state)\n(or better yet, factor out a separate function)\n. s/filtered types/filtered_types/. this if statement currently does not split up filtered_types into non-member vs member.  (It maybe should, to save problems further down). this forgets the fact that we have two DictionaryCaches now, with the express purpose of one of them having all the state except the membership events and considering itself complete when that happens.\nso, we can have types=[('m.room.member', '@bob')], filtered_types = ['m.room.member'], which means \"get me all the non-membership events, plus bob's membership event. In that case we definitely don't want to expand the query to fetch all of the membership events, even though filtered_types is non-null.\nso basically this code is going to need to consider membership types and non-membership types separately, and make a decision on whether to expand the search accordingly. (I don't think we ever want to expand to fetch all of the membership events?). isn't this the same as non_member_types above? (except that types might be None, in which case this will explode). likewise, the same as member_types?. looks like you can now remove the members param from the definition of _get_state_groups_from_groups. this is a bit redundant now. does this not need splitting by membership/non-membership?. also: I'm not sure there's any point in updating the existing dict, rather than just overwriting it. [I'm surprised this isn't making the UTs fail tbh]. \"apparently\" best practice is for these to be called xyz_total .... full_state_sync. I'm sort-of wondering if we should only bump this when the result is non-empty (ie, do it in current_sync_for_user rather than here). Not bothered though.. you could hoist this outside of the if and remove the initialisation at line 142. can we not just make the absence of a u param mean \"public_version=True\" ?. don't forget to update the docs and examples on the consent templates. this could do with some expansion. the second param is a description. why not use it!. could you expand on this a bit so that it makes sense for users, please?. maybe explain what will happen if it is false, and conversely what happens if it is true?. can you put this in the constructor?. if the alias is invalid, we silently ignore it? If you're going to sanity check it, put the sanity check in the config module, and raise a ConfigError if it's wrong. . you need to initialise auto_create_rooms for the case where autocreate_auto_join_rooms is False.\n. I think if you've created the room, you don't need to join it.. it feels dangerous to silently drop the domain part here - we should sanity-check that it is the same as the local server name.. please no. if it's redundant, remove it, don't comment it out. this seems to be the default; you could argue it should be set here for certainty but in that case let's have a comment. else just remove it. can we also have a UT with autocreate_auto_join_rooms=False please?. yay. if you're going to reference methods in StateGroupWorkerStore, can you make EventsStore inherit from it?. s/auto join/auto-join/\ns/should/will now/\ns/first user/the first user/\npossibly, s/autocreate/automatically create/. it'd be nice to merge this into line 18 while you're at it (absolute imports are preferred over relative ones). generally prefer % (room_alias, ) in case room_alias turns out to be a tuple. s/exists/exist/. s/auto joined/auto-joined/. can we not check this when loading the config?. I know it's the only place it's used, but we prefer to get the handlers in the constructors where possible, so that we detect problems earlier.. can you import this from synapse.config rather than the private _base module, please? (not that it's really appropriate to be raising ConfigErrors at runtime imho). ... and if we can't check it during startup, it's probably more appropriate to warn and move on than to 500 reject the whole registration.. this is missing its argument too.. erm, why does this not throw an exception?. fair. could you just catch the AttributeError instead?. (and maybe not even bother checking if colour==NORMAL). we should probably spell out that the regex is anchored at the end but not the start of the string.. this needs to be match rather than search, because the regexes generated by glob_to_regex aren't anchored.. should the default be a single allow-all rule, to avoid breaking existing configs?. can we raise an AuthError, or indeed anything that doesn't result in an M_UNKNOWN error code?. where would you have it moved to?. oh, iswym. yes ok. done, though I'm not entirely sure I agree it's better. In particular if run_as_background_process fails to start the process for some reason (stack overflow, perhaps), then we'll get stuck with _is_processing = True forever.. yeah, though run_as_background_process has enough stuff in it that I'd prefer to short-circuit it if possible.. a comment about what we're doing here wouldn't go amiss.. Still some problems here:\ns/, should/will now/\ns/first user/the first user/. again, absolute imports are preferred over relative ones.  Please s/._base/synapse.config._base/. why are we raising an exception here (and why does it have no message, but that's a side-issue). fwiw (just a nit fyi): logger.warn is deprecated, prefer logger.warning. the logger methods automatically interpolate their arguments (with the benefit of doing it after checking if logging is enabled), so, you can write:\nlogger.warn('message with %s', r)\nrather than using % explicitly. might be nice to do RoomAlias.from_string(r) once and use a local var, rather than twice. a comment on why we are inheriting from StateGroupWorkerStore mightn't hurt; otoh perhaps it's obvious enough.. given this is now inherently tied to purging via the join on events_to_purge, I think it might make more sense to leave it alongside the other purge code.. I'd be inclined to do:\ncurrent_search = set(islice(next_to_search, 100))\nnext_to_search -= current_search. surely cnt will never be zero?. should we not do this before adding to next_to_search?\n``\nprevs = set(row[\"state_group\"] for row in rows)\nprevs -= state_groups_seen\nnext_to_search |= prevs\nstate_groups_seen |= prevs. (so why not doSELECT DISTINCT state_grouprather than theGROUP BY`). this type suggests it is a 1-tuple.  Also, it returns lists and I think you should say so:\ntuple[List[str, str|None]|None, List[str, str|None]|None]\n... yeah, I know.. this needs to check filtered_types, I think. this is missing an is not None. fucksticks. who would have a a field and a function with the same name modulo an underscore. having said that: why not just split it into get_member_types (which could return just a list[str]|None for the state_keys)  and get_non_member_types?. afaict we iterate over this stuff multiple times, so a plain iterable won't do. s/Iterable/list/, possibly.. I think the comment below about why this is a useful thing to do now belongs up here somewhere.. s/specified types/specified non-member types/. this seems a bit redundant. We know self.types is going to be a list.. can we just do \"\"\"...\"\"\"\" + where_clause rather than interpolating the where clause later?. having said having said that: I think we should do this during construction, as per the above.. Fifth time lucky ;)\nsuggestion\nServers with auto-join rooms will now automatically create those rooms when the first user registers. the params need to not be a tuple in this case:\nsuggestion\n                            'it does not match server domain', \n                            r,. can we rename this now?. (and the v2 impl). this could do with a comment (now that the one at line 393 has gone). if this is now intended as a private method, could you give it a name starting with an underscore?. hum; have you tested this works? I think the dbconn you get during init might be intended to be read-only (any changes are not committed). This should be Args, and there should be a blank line above it.. I kinda wish I knew what this meant, but I guess that's not a new problem here :/. Args. also, this is over-indented.. This should be Args. the type here is incorrect. we are missing txn. seems to be missing Returns: label. I'm a bit worried about the footgun of upsert_monthly_active_user and upsert_monthly_active_user_txn being different. Is there a good reason to avoid doing this during init?. why is the list extracted from the config during the constructor and then passed in as a param, but the limit is retrieved from the config here? it seems very inconsistent. I'd apply the limit in the constructor too.. can has docstring?. could you try and expand on this a bit, please? what are reserved users, and where are they being populated?. I'm not entirely convinced that having this in here is helpful, but whatever. @hawkowl it would have been nice to fix the comment if you thought it was wrong :/.. docstring pls. suggestion\n        types (dict[str, set[str]|None]): Map from type to set of state keys (or. is it not the case that include_others=True, types={\"m.room.member\": None} (as per https://github.com/matrix-org/synapse/pull/4011/files#diff-e5a2ca91711e824742df5a954e885172R416) is also a \"full\" filter?\n(and if you want to rely on that never being a thing that can happen, you should probably assert it somewhere)\n. this looks like it is looking for None in the set of state_keys (which is meaningless), rather than the set itself being None. use itervalues if you're not going to use the key?. suggestion\n        \"\"\"Return the filter split into two: one which assumes it's exclusively. suggestion\n        matching against member state, and one which assumes it's matching. suggestion\n        either exclusively contain member events or only contain non-member. suggestion\n            Deferred[dict[tuple[str, str], str]]: Map from type/state_key to. can we use from_types here? just thinking it might make it easier to track down usages in future.. Again, I'd quite like to see us using a helper to construct this (maybe StateFilter.from_lazy_load_member_list) I think that ensuring everything goes through a helper will be helpful in future to see what StateFilter actually needs to support.. again this appears to be checking for None in the set of state_keys. I'm rather worried that the tests haven't picked this up.. suggestion\n        Note that since we have two caches, one for membership events and one for. suggestion\n        other events, we can be a bit more clever than simply returning. I think I'd like us to be a bit clearer about the strategy here.\nI think it's something along the lines of:\n\nthe list of membership events to return is never changed\nfor other events, if there is a wildcard, we expand the wildcard to cover all non-membershup events.. this is a slightly misleading name. Possibly it should be has_non_member_wildcard. this is the same as the get_all_non_members case: you could just have get_all_non_members = self.include_others or ... below.. yes include_others clearly is False, but I don't think it helps explain this.\n. no, because f is still a StateFilter.... is this necessary?. surely\n\nsuggestion\n        return len(self.concrete_types()). I think I'd find this clearer:\nsuggestion\n                sql += \" AND (%s)\" % (where_clause,). we seem to return the empty string for both a \"full\" filter and a filter which returns nothing (ie, StateFilter.none()). Might want to do something about that.. given that this is a private method, and a value is always passed for state_filter, I would be inclined to drop the default. this conment is a bit unclear now. why would it be an underestimate?. oh does this refer to member_types/non_member_types rather than member_filter/non_member_filter ? might be clearer if the blank line at https://github.com/matrix-org/synapse/pull/4011/files#diff-6ee0c965f89a99e084e8500580e3ec17R999 were between the comment and the code below rather than in the middle of the code.. I'm still pretty unclear how this is going to for an existing deployment. Adding it to default_config doesn't help that.. I feel like an action should be allow or deny rather than allowed or denied.. sorry, this isn't terribly easy to read; and I think it's actually more important to put something in the _txn method. How about getting rid of this, and instead, putting the following in the docstring of the _txn method:\n\nNote that, after calling this method, it will generally be necessary to invalidate the caches on user_last_seen_monthly_active and get_monthly_active_count. We can't do that here, because we are running in a database thread rather than the main thread, and we can't call txn.call_after because txn may not be a LoggingTransaction.\n. Suggest an extra blank line here:\n\n```suggestion\n    Note that, after calling this method, it will generally be necessary\n\n``. I'm slightly concerned that a user might end up seeing an old (cached) version of the policy, but that we then record that they have seen the most recent. Could you include thev=param in the URI (and then make sure we track the version through the session or sth?). sure, but cloudflare or something could cache the consent form unless there is a query param to stop that happening.. that would be news to me. I think you should define in the docstring what the empty result means. . could this go at the top, whereinit` would normally go?. ok, sorry: this file is what ends up in the changelog, so needs to be a succinct one-line summary. see https://github.com/matrix-org/synapse/blob/master/CHANGES.md#synapse-0337rc1-2018-10-15 for some examples, but basically, you want something more like \"Configure the Docker image to listen on IPv6 addresses\".\nI'm sorry the CONTRIBUTING.rst doesn't make that clearer :/. Maybe, I guess? The intention is that the client can interpret the tombstone event anyway.. It's not entirely obvious to me that we want to copy the entire state. The MSC just says \"Replicates PL/privacy/topic/etc events to the new room.\"\n. DomainSpecificString.to_string returns a str, which is a bytes under python 2.. done. done. done. we certainly don't want to copy the member events, for example.. oh, right, yes. Fixed.. We do move the alias anyway in this case: it's just that we can't send the m.room.aliases event.. NotFoundError is a thing, fwiw. does this return a 404 or a 400? . I'm finding this a bit opaque, and I think it could do with some comments to explain what's going on.\nIt feels odd to me that, if the room is missing from the backup,  we 404 if the session_id is passed, but not if it isn't.. Generally I prefer to use an explicit tuple with %, in case your argument unexpectedly turns out to be a tuple. Agreed it's pretty unlikely here though.\nsuggestion\n    factory.path = KEY_API_V2 % (urllib.parse.quote(key_id), ). could you update the docstring to say when this is raised?. if this is only used for registration, can it be called registration_policy_name ?. when you say \"requires require_at_registration to be enabled\", you mean \"will be ignored unless require_at_registration is enabled\" rather than \"will explode in a heap unless require_at_registration is enabled\", right? It would be good to be clearer :). I really didn't understand what \"the name of the policy users will see\" meant: is it a filename? Turns out it's not, but please could you be clearer.. should this maybe be combined with the changelog entry for #4004 and #4133?. this is not correct; it's better to use an Authorization header than a query param. In any case, it's why it says \"including an access_token of a server admin\" on the next line, as do all the documents in this directory. Please don't mix up changes to the official docs with your contrib changes.. I'd suggest purge_api would be a better directory name than API. s/In py3//.\n. hum I guess actually you're right: it doesn't matter in py2 because bytes can be compared to unicode. suggestion\n            # We try and pull out an event ID so that if later checks fail we. suggestion\n                logger.info(\"Ignoring PDU for unknown room_id: %s\", room_id). looks like get_e2e_room_keys_version_info returns a str here anyway?. (though it would be helpful if its docstring actually said as much). someone (@erikjohnston ?) remind me what our policy is for when we have to bump this? is it written down somewhere?. well, that seems a good reason. Another good reason is that we are already up to 52 in develop; I'm not sure why it is being shown as a change here.. sorry, but could you put the coverage stuff in a separate PR?. suggestion\n            request headers.. surely this will fail if there was no content_disposition header?. surely we shouldn't decode the entire header as utf-8?. presumably this only happens in the py2 case? can it be moved into that branch of the if PY3 condition?. what does <utf8 escaped> mean? %-encoded? Is that even valid?. oh, duh.. >  someone is putting UTF-8 literal bytes into the header (non Synapse implementations?)\nI think the content disposition comes from clients for uploaded media?\n\ncgi.parse needs str\n\nsounds like cgi.parse_header might be broken then :/. My reading of the RFC is that you ought to split out the params before you decode it, because different params might be encoded differently, and you don't know what encoding they are using.\nOTOH: fair enough, I can see that this is going to work in the majority of cases, and reinventing parse_header is probably more hassle than its worth. If you want to take that approach, can you expand the comment to record some of this?. oh wait you rewrote it already. ugh. Ignore the above; I'll re-review this after dinner.. we're excluding python 3.6 deliberately: we get four workers on Travis, so this one just slows things down pointlessly.. bump.. buttons labelled OK are an anti-pattern. why is this happening?. Obligatory reference to https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags#1732454 here.\n(yeah, I don't know how you're supposed to parse the HTML before you know what encoding it is, either). I'd find a comment which documents the type of this useful. It seems to be a map from a unicode to a bytes?\n(Edit: I see that you kinda document this below, but I'd find it clearer here. Also the terms \"decoded\" and \"unencoded\" are pretty overloaded and unclear here). fully agreed. Half of this comment seems to apply to PY2 as well as PY3, so could it be pulled up? Also \"quoted\" doesn't mean much to me, even if that's what urllib calls it. Can we call it \"%-encoded\" or \"%-escaped\" or something?. \"decoded\" is unclear to me. Can we say something like:\n\nFirst decode the ascii bytes to a str, then we can %-decode it safely. suggestion\n                # On Python 2, we can %-decode it directly, and then decode the utf8 bytes to a unicode. doesn't the test have an overall timeout?. I guess I don't mind having an explicit timeout here, but what is a problem is making it an expected part of a test.. well, that's sad, but given that if we're in that situation the test should have failed, is it really a problem?. nit: it'd be preferable to do self.clock = hs.get_clock() in the constructor. update_membership returns a deferred; you need to yield it ior you'll leak logcontexts. don't we hit this codepath for all membership changes, not just invites? surely we shouldn't be sending invites when we leave a room?. does this really need to run in the background? can't we block for it?. for future reference, synapse.metrics.background_process_metrics.run_as_background_process is probably preferable to run_in_background for this sort of thing, as it will give the background thread its own metrics, and a fake \"request-id\" for the logs.. This is a subjective thing, but +1 to early bailout and less indentation.. suggestion\nSpecial-case a support user for use in verifying behaviour of a given server. The support user does not appear in user directory or monthly active user counts.. could you make this a docstring rather than an inline comment?\n\n(and use full stops rather than commas between sentences...). suggestion\n        # that an auto-generated support user is not a real user and will never be. comment would be good here. why is this dependent on whether the user is a support user?. wouldn't the database transactions be no-ops for support users? why not just let them happen?. I'm a bit surprised if this is a safe thing to do - can you justify why it is ok to do the stuff at lines 340-355 if change is None?. should this be s/state_key/user_id/? But surely the support user would never appear in the results from get_users_in_dir_due_to_room so I'm confused.. erm no. I'd feel happier about this if you actually checked that the user wasn't a support user in _initialise_reserved_users and made sure that there was a warning about it on the docstring of upsert_monthly_active_user_txn.\nAlternatively, you could assume that the overhead of doing the is_support_user check is negligible compared to the MAU upsert, and define an is_support_user_txn (without a cache) which you can call from upsert_monthly_active_user_txn.. nit: trailing comma would be nice. I'm a bit surprised we can remove these?. can has docstrings please. errrm surely this has a massive security hole, because there is no guarantee that we will connect to the same IP address when we come to do the fetch?. I can see that; why?. I'm really not a fan of mixing in the reformatting with other changes. It makes it much harder to review.. I know it's internal, but I think a very quick docstring would be useful on this. What does the deferred returned by get_deferred resolve to? (And assuming it doesn't follow the synapse logcontext rules, please make this clear). this looks like a logcontext leak.. could you document the exception in the request docstring?. I think it would be helpful to log something here, including the hostname being resolved and the IP address being blocked.. (this more for future reference than a demand that you change it now). please could you document the expected type of path somewhere?. could do. I'm unconvinced such a warning would be noticed.. sigh. yes. thank you.. It's not always necessary to bump this - you can just keep adding more delta files into the current delta directory.. New Vector didn't write it, so this isn't really true.\nYou wrote it (all six words of it), so it's copyright yourself (with a license for us to use it via the DCO), either implicitly or explicitly. So either: Copyright 2018 Aaron Raimist, or just omit it.. It would be useful to have a comment here explaining why this is a useful thing to do and some of the history. this doesn't look right. servers with no users in the join state won't receive updates in the room, so need to do the full make_join dance to get an up-to-date room DAG.. this isn't a very meaningful description for the average user, I'm afraid.. I'm unfamiliar with the venv module.. I'm not super keen on this being in the root. It looks like a docker thing anyway - can it go in the docker dir?\n(and can it have a comment saying what it does?). suggestion\n/debs/. suggestion\n!/debian/homeserver.yaml. these should all have / prefixes I think. where does this come from?. shouldn't this be in vcs?. can you give it a different name to distinguish it from the py2 packaging please.. not really.... /me checks calendar. please can you break up the dependencies lines into one package per line, sorted alphabetically. why do we pre-depend on python3?. what's this for?. what do you mean by \"the mounted dir\"?. I understand the problem. I'm saying this will break more than it fixes.. you'll end up with out-of-date room state.. I'd really rather we fixed the bug than baked this into the README so that it becomes normality. I'm particularly concerned that, even if we do fix the bug, we'll end up forgetting to update the readme. #3971 already documents the workaround in the issue description - is there any need to repeat it here?. this has lost its trailing NL. could this have a comment saying what it does? It looks like it assumes it's running in a docker environment - could it say so?\n. Since we're completely changing the debian packaging, it's probably worth mentioning that here, even though the info is to some extent duplicated in the main changelog.\n. please can you reinstate the lost NL. I'm guessing we still depend on debconf?. ... and probably this?. trailing NL pls. are these not still inside the debian directory?. rather than do this, can we give the --name=matrix-synapse argument to dh_installinit, which will also mean that we can preserve the name of the .default file?. trailing NL please. > Python 2 for now\nseems to be a bit of a lie.\n. don't we have to do something in the postinst to handle the triggers?. s/provide/listen to/?. what's this doing?. I'm not sure there's any value in this override. Let's let the default do its thing.. do we really need separate version numbers for different dists? it doesn't sound like a very debian thing to do to me. . I'm sorry, I've still not grokked why this is going away. shouldn't it be 3.0 (native) (https://www.debian.org/doc/manuals/maint-guide/dother.en.html#sourcef) or something?. it feels like a mistake to rename the config settings. The existing config settings for the existing package can equally well apply to the new package, and it will save the user having to answer the question again when switching.. A comment about what this does would be helpful.. this one actually has a spurious trailing NL fwiw ;).. trailing NL please. (and I'd prefer scripts that exist solely to be run in docker images to live in the docker directory). can has comment pls?. I think if we're going to keep the alternatives around, we should maintain them:\n```suggestion\ndocker run -it --rm --volume=$(pwd)/../\\:/synapse/build dh-venv-builder:stretch\n```\nis it right that it . (i'm also not sure that /lib is the right place for this file, but that becomes moot if we do it with installinit instead). trailing NL please. (I'm also wondering if ~ is the right separator here, though I guess it is as good as any other). can we do this by messing around with dch (presumably before firing up dpkg_buildpackage) instead? My experience is that the debian tooling will get confused if the package version doesn't match the latest in debian/changelog.. who has made new assertions?\nplease can we have docstrings for the params?\n. I wouldn't bother with this unless you feel there is a particular reason we need these metrics. Notifier.on_new_event doesn't return a Deferred so there is no need to yield it. what does the new argument do? docstring please. docstring for (at least) the new param please. can you document its type please.\nCan you also document what it is used for - the description of the function sounds like a thing that should be independent of the requesting users. And what does it mean for it to be None?. this will surely fit on one line. should we not be rejecting (with a 400) other attestations, rather than ignoring them?. the user_id param is redundant, and immediately overwritten on the first line of the function.. surely we attest devices, not users?. is it deliberate that this comment says something completely different to the one at line 652? if not, which one is right?. I'm a bit confused about why this bit is conditional here, but in the other branch of the function it isn't.. this looks like a C&P of the code at line 654 and on. please can we avoid it?\nI feel like it might be more elegant to have two completely separate methods rather than squashing two somewhat separate bits of functionality into one. Haven't really thought it through fully though.. please document the params. again, please can this have a type, an explanation of what it is used for, and an explanation of what None means.. docstring please. could you give the link some text that doesn't take up a whole line in the doc?. actually not this, because afaict it was only used by the init script, which has gone away. well, let's not just cargo-cult stuff without understanding it please.... I'm not sure that's relevant. debian/source/format is a standard thing for any debian packaging aiui. ok the docs on https://manpages.debian.org/stretch/debhelper/dh_installinit.1.en.html convince me that /lib is the right spot, but not that we should be doing it this way.. ok, seems fair.. what does this do?. why is this required?. (I think it's a deprecated option for dh_strip, but since we're disabling dh_strip anyway, it seems redundant?). ohhhh gosh. We'll return to this..... can we not provide override_dh_clean rather than overriding the whole of clean ?. where do we actually use this (as opposed to python-virtualenv)?. should this not be ${misc:Depends}, given it's in the Depends section?. do we not need this? dh_virtualenv's man page suggests we do. I'm afraid I'm completely failing to grok this. why does the presence of the debian dir make it go haywire?\n(pip install . works just fine for me). can you break this into multiple lines with \\?. can you break this up too?. given that most of these only apply to dh_virtualenv, can we put them in an override_dh_virtualenv target rather than passing them to every single debhelper script?. overriding the whole of build-arch seems pretty brutal. can we just put it in an override_dh_virtualenv ?. ok fair.. I see. could you add a comment to say so please?. rly?. now this opens up the can of worms that is https://github.com/matrix-org/synapse/issues/2425. It sounds like it is needed, but we might have to make it a separate PR so we can argue about it separately.. I think this (and hence $(PACKAGE)) is unused now. s/perl/python/ maybe?\n. even better \\o/. yay. \\o/. Sigh; I see what you mean. Having stared at the docs, the dh-virtualenv source, the generated postinst... I also have no idea what they are trying to achieve with this.\n. could you add a comment somewhere here that explains a little bit about why we use builtin-venv?. suggestion\n    dh_gencontrol -- -v$(RELEASE_VERSION)-1matrix$(DEBIAN_RELEASE_NUMBER)~$(DISTRO_RELEASE)\n... so that downstream packagers can go wild with debian versions starting -0....\n. wait, I ballsed that up. suggestion\n    dh_gencontrol -- -v$(RELEASE_VERSION)-0matrix$(DEBIAN_RELEASE_NUMBER)~$(DISTRO_RELEASE)\n... so that downstream packagers can go wild with debian versions starting -[1-9].\n. why are these no longer needed?. why .. ? (though it seems to work, which I find baffling). does sticking everything on one line actually buy anything here? it makes it harder to read and means that we have to start from scratch each time the image gets built.. ping?. > fwiw we can do it the \"right way\" when we rename the package, I didn't find a way for dh_systemd to install it under a name that wasn't the package name. :/\nI'm totally failing to follow your logic here. We aren't using dh_systemd* at all currently (because we are on debhelper compat 9, which doesn't enable it by default, and instead dh_installinit does the installation of the service file).\nEither way, the solution is just to add a --name argument in the relevant override_dh_* sections.. (putting this comment here for want of anywhere else to put it):\nwe're currently installing the default file as /etc/default/matrix-synapse-py3, so this won't work. We shouldn't rename it, because that will drop any local changes that people have made.. (you explained this already: because we're using static libs). docstring please. (you've moved this out of the dockerfile, so nm). nit: parens are redundant here. can you document this in https://github.com/matrix-org/synapse/blob/da3b1259129a7787036d3c1879a8a374409684ea/docs/admin_api/register_api.rst please. also it's probably worth validating before we stick it in the database to stop our users shooting themselves in the foot with it. also it probably ought to be part of the MAC. this is a lot of words and I suspect people are going to fail to get the point.\nCan you just say \"Don't call this method with support users. (Support users should not appear in the MAU stats.)\". suggestion\n            user_type (synapse.api.constants.UserTypes|None): type of user. trailing comma would be good here as well. This is kinda stating the obvious and will be unhelpful if we ever add more user types. How about:\nThe type of the user: NULL for a regular user, or one of the constants in synapse.api.constants.UserTypes. it seems to be a way of checking the access token is correctly passed through by get_or_create_user. So let me rephrase: is it necessary to remove these and weaken the result _token tests below?. I don't think it is?. (if it is, why is the command *debian*/matrix-synapse-py3/opt/venvs/matrix-synapse/bin/python?). as per my comments in #synapse-dev, it would be nice to preserve backwards-compatibility for users of this API who just want to make a regular user.. suggestion\n            user_type (str|None): type of user. One of the values from api.constants.UserTypes, or None for a normal user.\nsorry to be nitpicky but it's important to get right, so that the tooling can understand it.. best not to allow the empty string by accident here:\nsuggestion\n        if user_type is not None and user_type not in UserTypes.ALL_USER_TYPES:. as above:\nsuggestion\n            user_type (str|None): type of user. One of the values from api.constants.UserTypes, or None for a normal user.. ok, the reason this works is because twisted.python.reflect.filenameToModuleName falls back to returning the final component of the path (tests in this case) if it can't find a matching python package anywhere else.. this needs to be conditional :/. we'll need to document this in the README (grep for lxml - there's more than one place) as well as the upgrade notes, and put something in the changelog about it, to stop people getting surprised by it suddenly not working.. all these unrelated formatting changes make this a much bigger diff, so make it much harder to review. pleeeease can we keep formatting and functional changes separate in future?. suggestion: would be nice to document the param types. suggestion: call these ip_{white,black}list ?. wouldn't None be more conventional than False? or am I missing something?. I find it a bit counterintuitive that the _agent param is ignored in this case. Suggestion: put whole the if self._blacklist block inside the else clause above. I'm slightly confused about the point of this. Why do we need to check the blacklist here as well as in the resolver? Some comments to explain would be useful.. suggestion: it'd be nice to avoid duplicating the Agent-creation code. How about setting self.reactor = IPBlacklistingResolver(...) in the constructor if there is a blacklist?. > Currently, this is only if the IP we are\n\ntrying to fetch from is blacklisted.\n\nThis really isn't true - get_file can raise a SynapseError for plenty of other reasons.\nThat's not to say that what you're doing here is wrong, but I find the last sentence of the comment misleading. Could you get rid of it?. indeed.. currently, we're only ever planning on shipping packages for x86-64, though I'm inclined to agree it's a shame that this will stop anyone else using our build scripts to build packages for other archs.\nI'm not sure that I can think of a better way though?. ok I've moved a bunch of this stuff out to a separate shell script, and made the CFLAGS conditional on dpkg-architecture -q DEB_HOST_ARCH as per @uhoreg 's suggestion. thanks!. GET requests are preflighted if they have a custom Auth header, iirc. I'm not really clear what you mean by \"an IP address lookup\" here.\nIs this just an optimisation? I'm not sure the extra complexity it introduces makes it worthwhile if so.. can we not keep this? looks like it should be easy enough, and it will avoid confusion when people don't install the optional deps and then enable url previews or something?. suggestion: it'd be nice to keep this link so I don't have to go and look it up.. [per discussion online: it never worked anyway]. right, so it never hits the IPBlacklistingResolver? Is this not a problem if we get a 302 redirect to an IP address?. the spec says \"includes only events with a url key in their content\"\nit doesn't say it has to be a string.... well, if there are compelling reasons to do so, then sure, let's change the spec. Are there, though?\n[if you actually want to check it's a string, you probably want six.string_types rather than six.text_type]. ok, but (a) that's not quite the same as 'filters have to check for the stringiness' and (b) \"might as well\" doesn't sound worth the effort of changing the spec to me.. yeah, that would have been a good idea. I just c&ped it tbh.. this looks like it will fail on IPv6 addresses.. > Sending the request failed\nsending which request?\nI'd suggest either expanding the docstring to explain more clearly the circumstances under which this is raised, or moving the definition into matrixfederationclient.py so that you can see it is related to federation requests.. could this file be described in the README?. erm; surely this (and device_inbox) will be empty, so this is a no-op?. this will get applied on top of the full schemas, which seems redundant. I'd suggest moving it to the 53 directory?. no upgrade notes yet :/. please can this script have a short description saying what it does? How does it decide which entries to remove? When should I run it? Is it safe to run it on a live database?. argparse can do this for you. can you add a docstring which documents the acceptable types of user?. Why is this necessary, btw? is there not a danger of user being a unicode?. nit: could this be called test_object or something, since it's not a real instance method?. I think it needs to be a TestCase (instance) rather than a UnitTest (class)?\nsuggestion\n        self (twisted.trial.unittest.TestCase): The test instance. this = is assignment, not comparison, so needs to stay as =, not IS. why are we checking values here?\n(and why keyvalues.get rather than keyvalues[] ?). given that val is a key as opposed to a value, could it be called key ?. for some reason, the change makes this now throw some exceptions synchronously, hence moving it inside the try/catch. It should have been there anyway imho.. this gives a slightly more helpful error when it fails.. yes :). I'm unconvinced that:\nPATH = \"/invite/(?P<context>[^/]*)/(?P<event_id>[^/]*)\"\n    PREFIX = FEDERATION_V2_PREFIX\nis clearer than\nPATH = \"/v2/invite/(?P<context>[^/]*)/(?P<event_id>[^/]*)\"\n(in other words: although it's a ballache, would it be better to go through adding /v1 to the starts of all the PATHs?). related to my other comment: we may as well hardcode /v1 here.. s/room/event/. we should consider dropping these test versions imho. what's the plan here?. docstring for room_version pls. in general, please can we have docstrings for params, even if they are blindingly obvious.. are we proposing to add this? I might have missed the MSC?. is this redundant?. this comment looks dead. why?. why here? isn't it already done by the room creation code?. still needed afaik. still needed afaik. any reason this can't be done in schema version 53?. I'd rather we didn't add more shit to BaseHandler if we can avoid it. Indeed I'd rather not use BaseHandler at all; it makes dataflows hard to follow.. ... but only if acme is enabled? Can you clarify the comment or move it into the if. could this be (a) a proper yaml list rather than a string you have to parse, and (b) be called bind_addresses for consistency with the listeners config?. suggestion\n                    lambda _: acme.provision_certificate(hs.hostname)\nit's a slightly confusing name, but is used everywhere in the codebase, so better to stick with that convention than go back to config here.. could a bunch of this be moved out to a separate function?. could this move inside start ? I think it would be clearer if so.. comment here to explain what exactly \"acme\" gives you would be nice.. /me checks calendar. I'd kinda like to see this stuff done unconditionally. basically the logic feels like it should be:\nif acme_enabled:\n   check the certificate\n   provision a certificate\nload the certificate\nstart listening\nwhereas currently we have:\nif not acme_enabled:\n   load the certificate\n   start listening\nelse:\n   check the certificate\n   provision a certificate\n   load the certificate\n   start listening\n... only much worse, because the two branches are at completely different points in the file.\nIn other words, can we delay loading the cert and starting listening even if acme is not enabled?. some gut-wrenching going on here. surely it should be possible to avoid?. as an aside: we should renew the cert before it expires. Indeed, if somebody's synapse stays up for 90 days (hah!) we'll have to re-provision it.. does this write the whole chain, or just the leaf cert?\nIf the former, could you comment to say so. If the latter, we probably need to think about fixing it.. (see also https://github.com/matrix-org/synapse/pull/4384#discussion_r249056366). (see also https://github.com/matrix-org/synapse/pull/4384#discussion_r249056366). suggestion\nAdd a simple HTTP proxy option for Synapse to send federation traffic through before reaching other servers.. could you throw a ConfigError if you don't like the value, rather than subtly and mysteriously ignoring it?. this is going to look up the SRV record for the proxy, I think. I don't think that's what you want to do. . you've misspelled \"separate\", but in any case, I think this could do with rewording (and the option renamed).\nAFAICT, it expects a regular HTTP proxy; could you call it that rather than a \"gateway\" or a \"relay\"?. Filters are currently immutable, and I think that's a good thing for being able to reason about them. One way to do this would be to have a with_room_ids method which returns a new Filter, having replaced the room list.\nNeeds a docstring too, please.. should this not happen after we add the historical rooms to the filter?. we ought to have the create event for any room that the user has ever been a member of, so I don't think this is relevant. I'd suggest adding a get_room_predecessor to StateGroupWorkerStore alongside get_room_version.. I don't think it's a dict...\nItym Deferred[list[str]]: predecessor room ids, or better yet, Deferred[iterable[str]]: predecessor room ids. please try to avoid unrelated reformatting in your PRs; it makes git history harder to read.. this generally looks much saner now.. please can this lose its _ if it's going to be public. it feels fragile to tie this to FirstError. should it not extend to any Exception? (and indeed, should it not apply to the whole of start ?). suggestion\n            # We want to reprovision if cert_days_remaining is None (meaning no. this seems redundant now? If there's a good reason to do it anyway, can you comment to say so?. please can you document the return types?. this probably wants to come out of the try block?. can we distinguish between \"doesn't exist\" and \"couldn't read it\", and only return None in the former case?\nan INFO line might be useful too.. fully on board with killing this off; however can you grep for it appearing elsewhere and make sure that we kill it off properly? (it's in the README for one, and we might want to think about getting rid of it from the debian package and docker image)\nit kinda would have been nice to pull it out to a separate PR tbh... or perhaps just do the cleanup in a separate PR now we've got this far.. still hoping for a comment on what \"acme\" means.. still hoping for a comment on what \"acme\" means.. yeah I guess we ought to, really. Mostly it felt odd to add a special-case for this one line.. please could this be called [acme_]client_key_*path*, since it's a filename rather than the key itself?. also, it probably needs a call to self.abspath, which is the convention for filenames in the config file (synapse does a chdir after loading the config).. also, the default looks bogus.. acme_client_key is missing from this list. Current convention is to list all the options here, even if they aren't really expected to be used much, since there's no other reference for the config options.. GENERATE_DH_PARAMS is still defined (line 25). think this should be end_last_seen. Though I do feel like it would be clearer to tweak the sql if end_last_seen is None rather than have this special-case. The fact that these params have the same names as their counterparts in the parent scope is a recipe for confusion imho.\nCould you either:\n Remove the params and just reference the vars via the parent scope\n Rename the params so that they don't clash with the parent scope. still:\nsuggestion\n                # We want to reprovision if cert_days_remaining is None (meaning no. evidently this can also be not a dict?. that feels like a lower risk then them wondering why their cert doesn't work, tbh. The fact that the whole thing is disabled by default is enough of a safetynet imho.. for future ref: I'd be inclined to merge these into one if statement, to reduce indentation.. For the record, I'm not generally a fan of datetime objects when a simple \"seconds since the epoch\" will do and be much more explicit. They have a whole bunch of arithmetic and timezone logic which is pretty redundant here. (In this case, self.clock.time() + 60 will do what you want).\nI'm happy if you want to leave this though, given it's a quick hack.. (as a question to ponder: what will this do when the clocks change? I think it will do the right thing, but tbh who knows. It's a question you just don't need to worry about with \"seconds since the epoch\".). None is probably better as a magic value than 0, fwiw. this is a funny name for it. For a start, this will get persisted in the db, so we'll end up with \"new\" remote events which are months old; secondly, what is remote about it?\nHow about \"out_of_band_membership\", or something?. could you add something to the docstring to say that we will do the hashing/signing magic?. is this not the default?. could you define \"processed\" a bit better?. Aside: it would be nice to rebuild this thing with attr.s or something at some point, rather than the somewhat opaque getattr calls. Probably one for another time though.. it will work with any iterable, and please specify the types of the entries:\nsuggestion\n            room_ids (iterable[unicode]): The room_ids to add. suggestion\n            Deferred[unicode|None]: predecessor room id. technically these will be unicodes on pythons where they are different things to strs:\nsuggestion\n            Deferred[iterable[unicode]]: predecessor room ids. this is redundant fwiw: get_event cannot return None.. please can this stuff move out to a separate function? as a rule of thumb, try to keep functions within a screenful.. presumably we can use the method from the search PR for this. feels weird when this is up here and not used until later on. think this condition is redundant? get_tags_for_room always returns a dict, even if it's empty.. given you just want the first item in the tuple you can write:\nuser_account_data, _ = yield ...\nwhich then saves the slightly cryptic [0] indexes later. suggest you do direct_rooms = user_account_data.get(\"m.direct\", {}) and you can drop these conditions.\nHOWEVER it may be worth sanity-checking that nobody has decided to make m.direct a list or something else other than a dict, so if isinstance(direct_rooms, dict).. for tag, tag_content in room_tags.items():\n. this isn't a change since the last release, so doesn't make sense to list in the changelog. (If it was a change since the last release, it would be a bugfix, not a misc.)\nIt would make more sense to consider it as part of the PR which introduced the breakage (#4306, it turns out). So copy 4306.misc to 4466.misc, and the two will share a line when towncrier builds the changelog.. need to raise something here. could you clarify that event_format is one of the values in synapse.api.constants.EventFormatVersions ?. is it possible for us to get here without a create_event (if the auth chain is faulty), in which case this will explode rather than failing sensibly?. deep.. yeah, twisted sorts that out for us.. We can't add V3 here yet, because doing so will allow us to accept joins/creates for V3 rooms, but won't actually implement the things that make V3 V3.. empirically, it now works. as per the pr description: -escapes are interpreted by python \"\"\" strings, so this ends up with single-backslashes in the yaml.. one to fix another time, but this default for key_values looks disastrous, since we modify it and the modifications will get reused next time it is called.. yes. the MSC says:\n\nThe response must have a Content-Type of application/json, and must be valid JSON which follows the structure documented below. Otherwise, the request is aborted.. I'm minded to leave it as info for now as otherwise it's quite hard to see what's going on. I've moved it down a bit to print out the parsed response though.. oops.. yes. Added a comment.. I was thinking specifically of get_room_predecessor, which is in the Store I think?. ITYM Deferred[None] ?. Deferred|None means: \"either a Deferred (of unspecified value type), or None\", which is different to what your method does. it's a dict, not a json. It'd be nice to add some docstrings about types while you are here, too.. s/this class/objects of this class/. can I point you at the big red warning about hash on https://www.attrs.org/en/stable/hashing.html? I think you want cmp=False (which disables generation of __eq__ and friends, and also implies hash=False). Otherwise can you add a comment to explain.. the stuff above for calculating depth is now redundant?. we seem to have lost the cap to MAX_DEPTH. these don't seem to be used (yet?)?. I reckon you can get here without there being a room_version, if you hit PUT /rooms/<room_id>/state/m.room.create. Obviously that's a silly thing to do, but blowing up with an exception doesn't seem like the right thing to do.. could you give this an underscore since it looks like it's meant to be internal?. this is in validate_builder so redundant here. in fact, why is it not inline in validate_new?. suggestion\n                raise SynapseError(400, \"'%s' not a string type\" % (s,)). I'm a bit unclear on why these need to be here rather than in validate_builder.. good plan. done.. this looks like it will get overwritten later?. Auth.add_auth_events is unused now, I think.. Has this gone somewhere else? was it important?. Slightly concerned that we used to do context.get_prev_state_ids, which might return something different to this?. there's a self.abspath to do this boilerplate for you. so!. can't we just drop VDH_TEST ?. can has docstring please - what does this mean?. suggestion\n            # Starting in room version v3, some redactions need to be rechecked if we. surely event.format_version should be an event version, not a room version?. does this not need to be different?. could you update the comment at line 230 about event_id?. nit: this return is redundant fwiw. this probably wants to be at least an info (and not contain a mahoosive list of events). I'm really not sure I'd bother with this. The spec doesn't say that this will be present for a non-200 response, and synapse will ignore it.\n\n(in any case Transaction doesn't have a __getattr__, so transaction[\"pdus\"] will fail, and the pdus are a list not a dict.). \"is allowed to redact any event\". no vdh here. Not sure, tbh. What would you set it to? If someone says \"don't cache\", I'm minded to respect that.. thanks. fixed.. SADFACE. well, mostly I wanted it to be consistent with what we do for the other listeners. I kinda agree, but :/. I fear this needs to say something different given it's going in post-RC. It shouldn't be possible to get here. Suggest you throw the NotFoundEvent (and update the docstring accordingly). meh, let's leave this out. we should mention that they can be the same cert if the server_name is the same as the hostname that the client connects to.. s/redirect/proxy/. suggestion\nInstall ``authbind``. For example, on Debian/Ubuntu::. there is no systemd file; need to change this to use synctl. I don't think this is limited to initial testing?. suggestion\nthe default 8448.). the acme setup section doesn't say anything about reverse-proxying port 8448. Suggest removing this sentence.. suggestion\nSynapse v1.0 will require valid TLS certificates for communication between servers. suggestion\n``authbind`` allows a program which does not not run as root to. can we take this out of the acme>authbind section? maybe put it above 'ACME setup' ?. I don't think there's anything terribly relevant in the \"Using a reverse proxy\" section; I'd omit the link.. which ports?. this makes no sense.\nI think the recommendation (if you're going to use a reverse-proxy) should be:\n\nset no_tls: True and remove the tls listeners from the synapse config\nhave reverse proxy listen on both 443 and 8448, and forward both to port 8008.\n\nHowever, this is starting to all get out of scope. For now I suggest: you remove this paragraph and just say \"An example nginx configuration for forwarding client connections to synapse is::\". le sigh. clarified, I hope.. this is only correct if you installed from source; I moved it out deliberately. doesn't really belong under \"Connecting to Synapse from a client\" imho. ftr double-backticks seem to mostly work in md; cleaning them up is good though. suggest \"please be aware that, before Synapse v1.0 is released around in March 2019, you will need to ... \". suggestion\nSynapse v1.0 will requirs that federation TLS certificates are verifiable by a. suggestion\nway to get one is with Synapse's ACME support (new as of Synapse 0.99), which will use the ACME. we need to combine this with the introduction - it basically says the same thing.. need to do this for reverse-proxy mode too. that's where it's meant to be.. for future ref: please can you wrap text at 80 chars. you don't need to set acme:port if its port 80, and it's starting to just be a duplicate of the information below. Can we make this snappier and handwavier: \"enable acme support in homeserver.yaml\".. again, I think specifying the destination port here is overdetailed. surely just stick the two halves of this under the relevant sections above?. can haz docstrings for the params please?. do we not still need this, or something like it, since we don't seem to be calling _base.start?. ditto. wouldn't mind a docstring on this. What happens to the function that gets passed in: what are its arguments?. where does this get written to?. this is redundant. ... and restart synapse. not finally, because you have to restart. this would be better before the authbind, because we need to restart synapse afterwards. ah ISWYM. hopefully they will figure it out.. Interesting. https://github.com/matrix-org/synapse/pull/4586/files#diff-7604431227e17cc581f690570dfacca6L306 appears to say the opposite for Mac OS (by which I assume it means macOS, or however Apple are spelling it this month) ?. is this not important?. maybe a bugfix? shrug. suggestion\n        yield self.runInteraction(. no idea why this was doing a callInThread, incidentally.. I understand the problem. I'm saying this will break more than it fixes.. controls. I don't understand this comment. who can be published? makes no sense. I don't really understand this comment either. Is it just saying \"wildcard is wildcard\"?. what is the behaviour if a room has more than one alias?. what does the user_id match against?. it'd be nice to only do this if making_public is true. does this match on all aliases (using the m.room.aliases event ?) or just local aliases?. doc your args pls. the convention we've used elsewhere is to document options at the top of the section rather than using inline comments, which feel a bit cluttered to me. - see https://github.com/matrix-org/synapse/blob/develop/synapse/config/server.py#L336 for example.. agaisnt. what does it even mean to publish a room in the room directory when it doesn't have an alias, ooi?. I think we're adopting a convention that new sections should be commented out in the default config, which apart from anything else answers the question of \"does it matter if I don't include this section in my config\". See https://github.com/matrix-org/synapse/blob/develop/synapse/config/server.py#L461 etc.. does an empty list mean that everyone can publish or nobody can publish?. can we hoist the room_id check higher up, and them do an early return here?. I'm a bit concerned that we tell people to install with synapse[all], and it's starting to pull in the entire internet. Perhaps we should consider revising that advice.. \"for enable\". I don't think we should recommend this. It's only useful for people who don't know what they are doing, who are exactly the sort of people who are likely to run this as root and hose their whole system.. wouldn't it make more sense to enable sentry if the dsn is set, rather than if the section is present?. doesn't this want to be earlier?. (anyway, it's sentry-sdk). what's the logic here, ooi? Given we have to pick one version of postgres to test against, it feels like we should be testing against the oldest one we support.. This comment really isn't doing anything to help me. How about something like:\n\nIf values is empty, then all of the values we care about are in the unique key, so the UPDATE would be a no-op. We can just do a SELECT instead.. s/update any rows/find an existing row/. if an empty/absent value_values is special, can you say so in the docstring?. oh I see, it's because postgres 9.4 doesn't support upsert. hrm, we need to figure out what to do here. As I just wrote in #synapse-dev:\nI am sorely tempted to say that we should do both [9.4 and 9.5], and the solution to the pain that it will cause is to either do our CI better or drop support for 9.4. should this not be called allnames ?. this will need docs in the workers_howto. I think this is supposed to be spelt\n\ndefer.Deferred[Tuple[str, str]]. I wish we didn't have to duplicate this code between the rest code and here. Can it not find a handler to go and live in?. I think it would probably be better to do this with a separate call to get_filtered_current_state_ids.. this looks like it needs to go away. I call it a feature rather than a bugfix.. we may need an \"installing optional dependencies\" section in INSTALL.md which can explain that it is different whether you are installing from source or a system package.\nIn the meantime I honestly think it's better to say nothing.. well, I don't mind tbh. but if you want to stick with doing it this way can you sanity-check that dsn is set rather than throwing a KeyError?. I'd argue that's incorrect, then. This is a new feature for room upgrades as far as I'm concerned.. how big was your room? ;-p. yup. could you fetch self.hs.config.acme_domain into an instance member (self._acme_domain) in the constructor? That will mean (a) it'll be noticed sooner if there's a problem reading it; (b) it's more concise). I think we can be clearer here.\n\nThe domain that the certificate should be for. Normally this should be the same as your matrix domain (ie, 'server_name'), but, by putting a file at 'https:///.well-known/matrix/server', you can delegate incoming traffic to another server. If you do that, you should give the target of the delegation here.\nFor example: if your 'server_name' is 'example.com', but 'https://example.com/.well-known/matrix/server' delegates to 'matrix.example.com', you should put 'matrix.example.com' here.\n. .feature, maybe? I think people should be excited about it. I'd like to see some words about this (and in general what the 'caches' stream means) documented in docs/tcp_replication.tcp.. where. it can be any iterable, rather than just a set, right?. any iterable will do?. where. itertools.chain?. keys = itertools.chain([room_id], members_chained) is clearer and faster than this, imho. You don't need the list constructor.. I don't mind not listing the exact caches, but please can you define the special cache name?. iterable. iterable. \\o/. please can you wrap your paragraphs at 80 characters?. I'd recommend using Type=simple (and making sure that synapse is not configured to daemonize). Systemd is better at managing daemonization than synapse, and it will solve your problem with the pid files.. let's get rid of this? we don't have it for any of the other proxies and I think it's confusing.. matrix-federation might be a better name. \"Matrix-Synapse\" doesn't really mean much.\n\n\"Matrix client traffic\", maybe?. wellll....\nnormally I'd agree with you, but the exception that was causing a problem is a twisted.web._newclient.RequestGenerationFailed: [<twisted.python.failure.Failure twisted.internet.defer.CancelledError: >]. AFAICT that doesn't seem to be part of twisted's public interface, so it seems to be not a great idea to try and catch it here.. oops. good spot, thanks.. what does this mean?. reference. surely it's possible for me to be able to see some earlier events in a room even if I can't see the extremities' successors? For instance, if history vis was changed at some point?. well, maybe, but we don't use it.. will we actually log any less for a PusherConfigException than for a TypeError or whatever it was?. I'm not entirely convinced by this. it's the only thing that gets logged during minutes of cpu-spinning, and it's not massively high-volume.. I think you generally need the type of the exception as well as the stringification\n(mostly because KeyErrors are otherwise extremely confusing:\n```\n\n\n\ntry:\n...     {}['a']\n... except Exception as e:\n...     print(e)\n...\n'a'\n```\n\n\n\n). fair enough. let's see how it looks.. this seems to be in conflict with the comment at line 775 that says \"... state get persisted as outliers\". What am I missing?. this sort of thing always alarms me slightly; if outlier was set doesn't it mean that something else has gone wrong? shouldn't we just raise an AssertionError or something?. I think the raise is redundant here?. This is not very idiomatic, and is a bit confusing.\nsuggestion\n        if data.get('requires_invite', False) and not data.get('invited', False):. it would seem a whole lot less opaque to iterate over edges rather than the keys of events_to_state, but ok.. needs a full-stop. full-stop?. docstring pls. > all of the calculation involved when rate limiting is done based on the HS clock, not the reactor's clock\nthis is a bad thing, but the hs clock should be a thin shim around the reactor clock anyway?. ?. why do we not just pass ?. result may be None. Suggest adding\nif not result:\n    return\n. suggestion\n                              from_federation=False, \n                              timeout=None,\n    ):\n(or whatever the right alignment for the closing paren is with this style). docstring for from_federation wouldn't hurt.\n. int|None. str|None. dict|None. int|None. Again, if you're going to add these, please get the types right. not result[\"m.federate\"] is clearer. unless I'm completely misreading this, it will never do anything if from_federation is true.\nI still suggest adding:\nif not result:\n    return\nbefore looking at from_federation or whatever.. I'm struggling to make sense of this comment. \"we only keep track of this for local users\", and yet \"we do keep track of which remote users share a room\"?. well, m.federate will always be present in this case afaict.\nHowever, for the record, what you want to handle the case you mention is if not result.get(\"m.federate\", True).\nAlso, consider merging it with the other if: if from_federation and result.... I think you want synapse.util.batch_iter here.. given that mxids have a maxlen of 255 chars, we can still easily overflow the max line length of 16K. beware that this method is overridden in derived classes, so this won't work right.\nIn any case it feels odd that a method called get_foo has side effects. should we not be managing the list of pending streams in ClientReplicationStreamProtocol ?. can you try and clarify what exactly is stored in this table? For example, if Alice and Bob are both local users, will there be two entries for each room they share (one with user_id == alice and one with user_id == bob) ? What if one of them is a remote user?. or will there even be four entries? (alice, alice, alice, bob, bob, alice, bob, bob). @erikjohnston please can we not use the word \"crash\" when we mean \"throw an exception\". \"crash\" sounds like the whole process dies.. I find this name a bit confusing - it sounds a bit like forward extremities.\nget_successor_events ?. I don't think filter_events_for_server is quite what we want here. There are reasons that an individual event might be filtered whilst the rest of the timeline is still visible (eg, gdpr erasure).\nI fear you need to extract the bits of filter_events_for_server that are actually relevant here. I think you might also find you can skip a bunch of it.. suggestion\nAdd support for /account/3pid REST endpoint to client_reader worker.. the main thinking is that some things won't have good support for filename, and we should cater to simple clients where possible.. sorry, yes that's what I mean.. point, done. As a rule, we try to avoid generic self.hs references, in favour of pulling things out of hs in the constructor. It makes dependencies more explicit and gives a better chance of detecting broken references early.. is this not still required?. no longer used?. initially_handled_users_in_public seems unused and can be removed from the class. Likewise self.initially_handled_users_share, self.initially_handled_users_share_private_room.. .... .... > If it is a local user, there will also be an entry making the user in the same room as themselves\nThis sentence is a bit confusing; can you reword it?. it looks like we're not adding an entry for (user_id, user_id) in this loop, despite what the comment at https://github.com/matrix-org/synapse/pull/4537/files#diff-1e2e5961053881c6b1db2b573fb34036R24 says.. it feels like we're (still) repeating ourselves here.\nSuppose there are 3 local users in the room: A, B, C.\nFirst we call _handle_new_user with A. That will add entries: (A, A), (A, B), (A, C), (B, A), (C, A).\nThen we call _handle_new_user with B. That will add entries: (B, B), (B, A), (B, C), (A, B), (C, B).\nFinally we call _handle_new_user with C. That will add entries: (C, C), (C, A), (C, B), (A, C), (B, C).\nSo most of those entries are being added twice.\n(happy if you want to say that's an existing problem, to be ignored for now, but since we're rewriting this it seems a reasonable time to consider it, or at least add a comment). given that we allow users to be in the directory before they join a room, I question whether this is necessarily correct behaviour?\n(Though it may well be a pre-existing issue that we should ignore for now; I've not entirely followed the old logic). doesn't this need a where clause? (or the existing where clause being moved to apply to the result of the UNION, assuming the optimizer can handle that). having said that, I'm not quite sure why we want entries for (user_id, user_id). It feels like we have to go to special effort to add it, and then more special effort to remove it, and it would be simpler all round to avoid it in the first place?\n(if we're going to avoid it, I'd advocate enforcing that with a database constraint if possible because you know it's going to leak in otherwise). DROP TABLE IF EXISTS is preferable (likewise create table if not exists, create index if not exists) because occasionally you can end up with a delta being run twice.\n(this tends to get forgotten, which is why a whole bunch of the other deltas don't have it, but it's supposed to be a thing.). There's also an argument that we should remove the CREATE TABLEs from the deltas that create them, since they're just pointless. I don't mind about that though.\n. missing full-stop.. I'd prefer it if we could avoid adding more top-level headings to the README, which is already pretty complicated.. broken link. In practice we now encourage people to create their configs up-front, and then tweak them later to enable TLS and federation. This is therefore backwards.. I kinda feel like it would make more sense to move the whole \"setting up federation\" section to a separate file, rather than just the well-known info, but up to you.. I'm \nsuggestion\nIf it is not possible to acquire a certificate valid for your matrix domain,. suggestion\nthe correct method is create a .well-known file. For more details on how to. missing >.\nAlso, any reason for the absolute link?. missing full-stop. can we use a relative link?. missing full-stop. which example?. yeah, it's downloading and installing all of the python deps. It seems a shame that (a) we can't do better caching here, and (b) the virtualenv isn't shared between the builds.. you want ? for \"0 or 1\".. this doesn't look right. surely we should not be accepting trailing slashes where we do not currently have them?. ah, the confusion is over what should happen when the category_id is absent. I don't actually know if that's a valid thing.\neither way, this doesn't do what we want.. \"Next\" doesn't make sense here now that it's the first thing we do. this could probably do with some clarification. could you say \"backward extremities\" here rather than just \"extremities\". then?. how would we do this? is it a thing we are ever likely to be able to do? if not, a TODO is inappropriate. I still wonder if a function dedicated to this usecase could end up being simpler, but this is fine.. there is a zwsp hiding in the --> here. think this could do with expanding a bit. the icons and logos are staying the same - it's just the urls that are changing, no? Or am I misunderstanding?. Well, if you want to argue that the advantages of this style outweigh the disadvantages, it's a topic for a retro or something. For now please put it back as it was.. > Without the adding yourself, that drops one of those\nIronically the \"adding yourself\" was the only entry which wasn't being redone.\n\nyes, it does repeat that, but that's an existing problem.\n\nFair enough. I'd still be happier if you could add a TODO or something so that I know I'm not going mad next time I look at this code.. good point. comments would help.. I'm also concerned that the mention of riot.im in our changelog will set alarm bells ringing, not without reason. Let's make clear that it's just the default notif templates that are affected.\nsuggestion\nUpdate URLs for riot.im icons and logos in the default notification templates.. hmm. ok.. good point, well made.. > lmao i didnt do it for the indexes because thats a pg 9.5+ feature :)\nin theory you could DROP INDEX IF EXISTS it before creating it, but happy to leave this as-is.. suggestion\ndoing so may require more advanced setup: see [Setting up Federation](docs/federate.md).. I've a suspicion this anchor will be used somewhere. It would probably be a good idea to keep it (maybe at the \"installation\" section).. lots of default here.\n\"By default, it is also the hostname that other servers will use to try to reach your server (via port 8448).\". suggestion\nport (ie: ``synapse.example.com:443``). There are two ways to do this:. this isn't so much a limitation as a feature.. you can't start a sentence with \"Meaning that...\". .well-known is considered before SRV, so should be listed first, and these bullet points should somehow reflect that.. :: is a RST thing which doesn't work in markdown. You just want : here (and all the other points below).. suggestion\n- adding a ``/.well-known/matrix/server`` URL served on ``https://example.com``.. In fact, everything after the first sentence should go away, and be added in the relevant longer sections below. . these three paragraphs are probably redundant?. again, we should list .well-known before SRV. suggestion\nThis method requires the target server to provide a. Needs a capital F too. needs a . too. suggestion\n     _matrix._tcp.<yourdomain.com> <ttl> IN SRV <priority> <weight> <port> <synapse.server.name>. I would not recommend using 0 as a weight.\nsuggestion\n     _matrix._tcp.example.com. 3600 IN SRV 10 5 443 synapse.example.com.. should all of this be under a \"Delegation\" section?. I'd really like us to make clear that the port is optional here, somehow.. I think this paragraph needs a rethink, but I'm not quite sure what it should look like.. \"then\" is confusing here.. We're going for a model where you get your server working first and then enable federation, so this section doesn't seem very useful.. comma tax. you can't start a sentence with \"Or\", either.... let's get rid of this if it's moved to federate.md?. oops I'm looking at the wrong PR, sorry. comma tax.\nsuggestion\nAlmost all installations should opt to use PostreSQL. Advantages include:. https://github.com/matrix-org/matrix-doc/blob/master/meta/documentation_style.rst#stylistic-notes\nsuggestion\nSynapse offers two database engines:\n... and full-stops after the entries.. I'm pretty sure we decided adding an optional / here was incorrect. ditto. As I mentioned in the chat: I'm not sure if adding all these parameters is the best choice, but I'm also not sure if anything else would be better.. couldn't this boilerplate be wrapped up inside a method in Ratelimiter ?. are there not easier ways of creating a user than through the rest api?. it would be nice to see these config settings pulled out into member fields in the constructor.. how about doing this inside the auth handler? that would mean:\n\nyou wouldn't have to add the user_rate_limiter to HomeServer (you can just create it in the auth handler)\nyou wouldn't have to special-case m.id.user below. The instructions above talk about generating the config and setting the server_name, so this is too late.. this is only valid when installing from source - the packaged installations generally have different ways of doing things.\n\n. you almost certainly don't want to do this here.. basically it feels like this section isn't adding anything here. One idea would be to have a section which explains what the server_name does, but instructions here on how you change this one configuration option don't seem to be very helpful.. I can't see where you've moved this to?. suggestion\n``homeserver.yaml``) defines how resources (users, rooms, etc.) will be. suggestion\ntry to reach your server (via port 8448). This is easy to set. suggestion\n[connect to your server with a client](../README.rst#registering-a-new-user-from-a-client),. given that you should be able to connect with a client before this, it feels slightly confusing to reiterate this - I am left wondering if I should now be using a different method to connect. In short, I'd be inclined to miss out the \"you should be able to connect\" phrase and go straight for \"you should be able to join rooms via federation\".. suggestion\n- a room for Synapse admins.). suggestion\nport (eg: ``synapse.example.com:443``). There are two ways to do this:. suggestion\nexpect to find your server via ``example.com:8448``. The. I still think this paragraph is just duplicating the paragraph above \"For a more flexible configuration ...\".. suggestion\nresources (eg: ``@user:example.com``) served by a different host and. suggestion\nidentified (eg: ``@user:example.com``, ``#room:example.com``). By. I think it might be worth reiterating somewhere around here that in both cases, server_name should be kept as example.com, so that user ids, room aliases, etc continue to look like *:example.com.. suggestion\n        \"m.server\": \"<synapse.server.name>[:<yourport>]\". no, it won't.\nIf you don't specify a port, it will go on to do a SRV lookup, which may in turn specify a port. If there is no SRV record on the target of the delegation, it will default to port 8448.. suggestion\nMost installations will not need to configure .well-known. However, it can be. \"will contact the given hostname's IP and\" adds nothing here; delete.. comma tax!\nsuggestion\n.well-known support first appeared in Synapse v0.99.0. To federate with older. suggestion. This (\"so the delegate domain...\") isn't really true: SRV adds a whole bunch of functionality including failover and round-robin. I don't think the sentence adds anything anyway. Suggest deleting.. suggestion\ndelegation method if this isn't what you want. (For more details on the. suggestion\nrationale [see here](https://github.com/matrix-org/matrix-doc/blob/master/proposals/1711-x509-for-federation.md#interaction-with-srv-records).). I'm not sure this sentence adds much either, but if you think it's worth keeping, suggest rewording as \"You should use [.well-known delegation][link] if this isn't what you want.\".. suggestion\nencourage the server admin in question to upgrade :).. suggestion\nTo use this delegation method, you need to have write access to your. suggestion\n_matrix._tcp.<server_name>``. In our example, we would expect this:. suggestion\nNote that the target of a SRV record cannot be an alias (CNAME record): it has to point. this is a bit of a funny place for this.. suggestion\nconfigured correctly. Alternatively try the [JSON API used by the federation tester](https://matrix.org/federationtester/api/report?server_name=DOMAIN).. suggestion\n``server_name``. Hitting the API directly provides extra detail.. when do you expect user_id to be None? There's a lot of code here which seems like it will never be run.. even if there is a reason to allow this to work over multiple user_ids: is there a reason for doing it this way rather than having a function copy_push_rules_from_room_to_room_for_user which does the whole process for a single user_id, and calling it iteratively? It seems like that would be simpler and clearer.. you haven't defined push_rules, but in any case: is there any point in a temporary list?\njust do:\nif not <rule applies to this room>:\n    continue\n<do the conversion>. is this really the right way to check for which room a rule applies to? surely the id is meant to be opaque?. these are now unused: just delete them. hrm, if we're going to have these things, please let's at least anchor them in the root directory:\n/*.db\nAlso, please could the entries under \"stuff that is likely to exist when you run a server locally\" be sorted alphabetically? (and yeah, /media_store ought to be before /uploads). why not just:\nfor condition in rule[\"conditions\"]:\n    if condition[\"key\"] == \"room_id\":\n        condition[\"pattern\"] = new_room_id\nalso: I note that you are checking for the existence of \"key\" in condition in the calling function. Shouldn't we do that here?\n. s/copy/move/. Likewise in the docstring. old_room_id seems unused? kill it.. How about simply:\nsuggestion\n                if condition.get(\"key\") == \"room_id\":. should we check for the existence of \"pattern\" in condition ?. s/copy/move/. this doesn't seem to have worked. it may need more whitespace around it or something?. markdown technically uses single-backticks for inline preformatted text, though you can often get away with double-backticks. Triple-backticks are for preformated blocks, and a mix of them really messes things up.\nsuggestion\nfollowing methods allow you retain a `server_name` of `example.com`. suggestion\nso that your user IDs, room aliases, etc continue to look like `*:example.com`, whilst having your federation traffic routed to a different server.. SSL doesn't need preformatting, and we should be consistent about TLS vs SSL. TLS is more correct.\nsuggestion\nURL. Having an active server (with a valid TLS certificate) serving your. SRV records always specify a port.\nsuggestion\nis performed, as described below. If the target of the. suggestion\nfederation servers will check for a valid TLS certificate for the delegated. suggestion\nvalid TLS certificate for the original ``server_name``.\n(delete \"domain zone\"). conditions is apparently optional:\nsuggestion\n            for condition in rule.get(\"conditions\", []):. we probably need to worry about what happens if somebody makes a rule that has two conditions that match: I suspect your code will blow up.\nan easy fix might be:\npython\nconditions = rule.get(\"conditions\", [])\nif any((c.get(\"key\") == \"room_id\" and c.get(\"pattern\") == old_room_id) for c in conditions):\n    # ... move. orphaned sentence. please wrap. orphaned. wait, this is misworded. A certificate can't include a chain: you need the full chain of certificates.\n\"use a .pem file which includes the full certificate chain including any intermediate certificates\".\nLikewise for the config text,. suggestion\n                 try_trailing_slash_on_404=False,\n             ):. it might be worth adding a note on why this is a useful thing to do (\"workaround for #3622 in Synapse 0.99.2 and earlier\" ?). /me shakes fist. why do we switch to get_json here?. You've tested this, have you?. are you sure this is the right thing to do?. you seem to have missed the 400 case here, which brings me to:\nhow about implementing this with a wrapper which you can use in both cases?\ndef _send_request_with_optional_trailing_slash(request, try_trailing_slash_on_404=False, **kwargs):\n    self._send_request(request, **kwargs)\n    if that_worked:\n        return\n    fiddle_with(request)\n    self._send_request(request, **kwargs). suggestion\nThis is a setup for managing synapse with systemd including support for. suggestion\nworker_app: synapse.app.homeserver \ndaemonize: false. suggestion\n**Note** that from an inactive synapse the bots/bridges will only be started with. isn't this the default? Is there any reason to add it here?. shouldn't this be simple ?. > However I personally am a friend of doing important things explicitly\nI think you could argue that there are a bunch of other default settings which are just as important, and pretty soon you end up with a unit file a mile long. \nHowever, I don't have strong feelings here.. this looks like it will fix https://github.com/matrix-org/synapse/issues/4783 ?. can we make these be commented out in the generated config?\nI'd recommend having a big comment block at the top explaining the structure, followed by a commented-out example. Something a bit like https://github.com/matrix-org/synapse/blob/b6ebef323e657c5413ac28d2dfb025b911e53cf1/docs/sample_config.yaml#L522.. can you pull out these config settings in the constructor please?. Please could you add a note to the docstrings of the methods in here which do ratelimiting that they will do ratelimiting?. probably worth pulling out these 6 lines to a separate function. as per #synapse-dev, I think you should downcase the user_id.. make this a global constant or something?. nice tests, good work.. check that this is in a sensible range?. classes have CamelCase.. also it's not a ratelimiter; it is config therefor. Suggest RateLimitConfig.. I don't understand how this works, and generally I think rclogin is confusing; I'd be inclined just to have rc_login_address and rc_login_account properties in the RateLimitConfig object.\nrc_login_config = config.get(\"rc_login\", {})\nself.rc_login_address = ratelimiter(rc_login_config.get(\"address\", {})). reinstate? re-add?. these changes look spurious: the py27-old env deliberately uses its own pip incantations rather than letting tox do them.. does this and the next line actually do anything? I'd expect them to be redundant now.. I'm a bit dubious about this poking into the guts of EventCreationHandler - it looks fragile. OTOH I can't really think of a better way of testing it, other than creating a new test class (possibly a subclass of RegistrationTestCase) which uses a different config - which might be a bit fiddly right now.. this doesn't seem to make sense?. the comment was your friend. do we actually need to run the coverage checks here? is there any reason to imagine the coverage will be any different to the other runs?. This is technically unrelated, but I just spotted it and it's near enough. #4852 introduced a logcontext leak here.. fair. I guess, though given it's a 3-level dict, that's not completely trivial. What are your concerns?. \"Whether\", though I prefer to set the example to false and say something like \"Uncomment to disable searching the public room list\".. lists?. do we not pull out the setting in the constructor, normally?. it looks like it makes it return empty results rather than blocking it.. put this before the log?. blank line here pls. suggestion\n        # Defaults to true.. some more detail on what happens if it's set to false?. If the far end falls over because it has received too many RRs, we ought to spec a limit rather than trusting other servers not to DoS us.\nI'd rather hope that we won't end up with that many RRs queued up. But ok, suppose we decide to limit the number of RRs in an EDU. Presumably you'd actually want me to limit the number in a transaction rather than just sending two edus with 100 RRs in each in a single transaction?\nIt just feels like a bunch of work that I'm not convinced is justified. It's certainly not a nit.. I'd suggest making this a **kwargs so that you don't need to build a dict in the calling code.. it's not called that. why do we only do this on the retry? surely it is just as applicable for the first one?. you don't seem to be checking the reseponse code or the errcode at all here. this is a no-op. suggestion\n                raise. I don't think this (or the other instance need to be in here). The exception, if it happens, will get thrown by _send_request. Suggest having _send_request_with_optional_trailing_slash return the response, and leaving the calls to _handle_json_response where they were.. I'm not sure what this comment means. nice test, thanks.\n(might be nice to test that we don't retry on other sorts of errors, cf https://github.com/matrix-org/synapse/pull/4840/files#diff-eaf1ef90b23076afc24efff2afdfe772R232). ",
    "silvio": "two things: its not tested with not-git builds and if some one has checked out a tag or a commit. I think the last one (commit checkout) will crash this implementation. But Its only a reference implementation if this is a good direction.\n. @erikjohnston for the pip-version thing, it should enough to add the __devel_version__ to version in setup.py, or? like version += \"-\" + devel_version.\nI can add the --version-option.\nWe can move the get_version_string() to the setup.py function and set from here the __devel_version__ or version. The get_version_string-function is only one time referenced.\n. The problem isn't docker related. This problem exists on all alpine installations without docker.\n. ",
    "intelfx": "could you please also bump version in setup.py? otherwise, works for me, thanks.\n. ",
    "glyph": "Was just perusing this project (looks very cool!) and noticed it used Twisted; can I just say, it warms my heart that you folks are actually taking care to adopt new APIs like this! :-D\n. > @glyph :) Twisted has served us pretty well - thank you for creating it!\nFantastic.\n\nThat said, we have been bitten pretty badly by https://twistedmatrix.com/trac/ticket/4362 (lack of IPv6 resolver for Agent) though - many people dismiss Matrix because of not supporting IPv6 for federation.  If there is anything that can be done here we would owe you eternal thanks... O:-)\n\nThis is actually annoying me quite a bit as well!  Honestly I'm kind of glad somebody noticed; IPv6 is so subtle and sadly niche that folks often don't notice it or don't think to report it.\nIn fact it's what I'm working on right now (although I'm addressing some infrastructure issues that make it hard to test first).\n(You can read a bit more about my personal story with IPv6 here.)\n. On the HTTP client side, the twisted ticket PR has landed, so it should be available by default in the next release.. @kyrias I'm afraid I don't understand the question. Twisted's trunk only recently added support for them.  What do you consider an \"IPv6 resolver\"?. @kyrias Oh, so just an IPv6 address for looking up A records, not a resolver that can resolve AAAA records? Huh. In what sense does that not work?  Are you talking about something in twisted.names?. @kyrias This is definitely a serious bug in Twisted. It's been filed here - https://twistedmatrix.com/trac/ticket/8877 - unfortunately that's still fairly recent.  Sorry about that!. @swift11: Priority is not really used in our bugtracker. You can tell if something is really high priority by whether it gets fixed or not :). Since 16.7 was full of ghosts, the next release will be 17.1 or 17.2.. \ud83d\ude4c \ud83c\udf89 The system works!!!\ud83c\udf89\ud83d\ude4c. See #1689 and #1690 . Since this has been superseded, shall I close it?. Since this has been superseded, shall I close it?. It may be worth noting that the empty string may cause Twisted to listen on IPv6 addresses as well, depending on your platform; :: might cause you to listen on IPv4 as well, depending on vagaries of your IP stack.  This is an ongoing discussion in Twisted-land and it's not really clear how we're going to fix it; given that different platforms have very different ideas about what :: and 0.0.0.0 mean, we might need to add our own special string that means \"set IPv6_V6ONLY\" or \"don't set it\".. Really glad to help.  (Thanks to Rackspace for sponsoring my time to work on open source infrastructure like this in the Twisted ecosystem... :)). @kyrias - thanks for bringing this to my attention.  I have a rough idea what might be causing the pop from empty list issue; \"leaking inbound FDs\" really worries me, but it might be a side-effect caused by the unexpected failure type breaking error handling (either within Twisted or in your code).\nI'm going to mark this as a potential blocker on our issue tracker - https://twistedmatrix.com/trac/ticket/8963 - can you test with 16.7rc1 specifically to make sure this issue affects the release and wasn't introduced just on trunk?. For what it's worth I've spent my entire Sunday night looking at this, the last 4 hours straight, and... I've got nothing.  I also had @markrwilliams and @mithrandi poking at it and all of us are scratching our heads at how on earth this code https://github.com/twisted/twisted/blob/88a71947b41af21065f7fdfa56a3ffe22a7f5c57/src/twisted/internet/endpoints.py#L817-L886 can result in that traceback.  I've tried a half a dozen unit tests that all succeeded.\nIs there anything else relevant in your environment which might be interesting?  Very slow or very fast networks?  A custom name resolver installed on your reactor?  We're looking at \"cosmic rays\" and \"a bug in malloc\" at this point :).. @kyrias I don't know that it would, but at this point I am just at a loss, so it might help to at least be able to inspect the runtime configuration of the reactor.. @ara4n The problem is stdlib logging.  This is one of the reasons that Twisted has its own logging system :).  Adjusted to this:\n```\nfrom twisted.logger import globalLogBeginner, textFileLogObserver, Logger\nfrom twisted.internet.defer import inlineCallbacks\nimport sys\nimport twisted\nprint \"Twisted:\", twisted.version\nlog = Logger()\n@inlineCallbacks\ndef oops():\n    x = 1 / 0\n    yield x\n@inlineCallbacks\ndef foo():\n    yield oops()\n@inlineCallbacks\ndef bar():\n    try:\n        yield foo()\n    except:\n        log.failure(\"oops\")\nglobalLogBeginner.beginLoggingTo([textFileLogObserver(sys.stdout)])\nbar()\n```\nyou get this traceback instead\nTwisted: 16.6.0dev0\n2017-01-12T13:56:59-0800 [__main__#critical] oops\n    Traceback (most recent call last):\n      File \"/Users/glyph/Projects/Twisted/src/twisted/internet/defer.py\", line 1445, in unwindGenerator\n        return _inlineCallbacks(None, gen, Deferred())\n      File \"/Users/glyph/Projects/Twisted/src/twisted/internet/defer.py\", line 1299, in _inlineCallbacks\n        result = g.send(result)\n      File \"what.py\", line 16, in foo\n        yield oops()\n      File \"/Users/glyph/Projects/Twisted/src/twisted/internet/defer.py\", line 1445, in unwindGenerator\n        return _inlineCallbacks(None, gen, Deferred())\n    --- <exception caught here> ---\n      File \"/Users/glyph/Projects/Twisted/src/twisted/internet/defer.py\", line 1299, in _inlineCallbacks\n        result = g.send(result)\n      File \"what.py\", line 11, in oops\n        x = 1 / 0\n    exceptions.ZeroDivisionError: integer division or modulo by zero. OK, if this is a Twisted regression in HTTP flow control, we might want to loop in @Lukasa as well.. I thought we conclusively diagnosed this as debug_deferred completely breaking the semantics of Deferreds?. I wouldn't say that our library is \"better\" or \"less hacky\" - it doesn't really address the following-deferreds case either, it's just that this ought to be built in to Twisted :).  After all, you'll want logging from Twisted itself to follow your context, not get lost.. More importantly, to really close the loop on this, Twisted will need to change, probably to modify Deferred, since functions in Twisted and other libraries will not follow Synapse's Deferred-creation rules :). > But both of those approaches miss the point of this PR.\nSorry I didn't reply sooner -\nI was asked for my feedback, and I thought that the request was for feedback on the system as a whole.  I really hope I didn't come across as objecting to documenting code that had already been written!  Just trying to suggest directions for future possible collaboration.  If anything, this documentation will be a very useful resource in doing so.\nThank you for doing this work.. It should probably be removed from there; TCP4ClientEndpoint is only interesting as a low-level implementation detail.. Gotcha; yeah.  I'd be inclined to eliminate the default, personally; I find that default args are useful a lot more rarely than they seem like they'd be useful :). The rationale is as follows:\n\nThis dictionary is going to be used as **kw, meaning it needs to be native str mapped to some object.\nTo facilitate python 3 portability, all modules should slowly be getting as many __future__ imports as possible, to make the py2 environment and the py3 environment consistent.  One such import is from __future__ import unicode_literals.\nIf you rely on \"\" to produce a native str, this assumption will be broken with unicode_literals imported.\nHowever, dict(**kw) will produce kw unaltered; meaning, it will be a native str even if a quoted string would produce a unicode.\n\nSo this is generally a habit I believe one should get into for py3 hygiene.. Hrm. I'm not sure I fully agree with that thread, but definitely unicode_literals is not without its pitfalls.  Nevertheless, dict(**kw) is a clearer expression of the intent of \"I intend to use this for keywords\".. Thread here.. ",
    "muthusuba": "Thank you for the quick review!\na) Made saml2 optional\nb) I thought I ran pep8 on login.py :( the style warnings should hopefully be fixed\nc) logger moved to top of the file.\n. Thank you for the quick review!\na) Made saml2 optional\nb) I thought I ran pep8 on login.py :( the style warnings should hopefully be fixed\nc) logger moved to top of the file.\n. Should I sign-off every commit or would it be ok to add one on the top?\n. Should I sign-off every commit or would it be ok to add one on the top?\n. I just realized that https://github.com/matrix-org/synapse/blob/master/CONTRIBUTING.rst#sign-off says even a comment in the pull request is fine (?) So, here it is:\nSigned-off-by: Muthu Subramanian muthu.subramanian.karunanidhi@ericsson.com\n. Resubmitted: https://github.com/matrix-org/synapse/pull/201\n. My/Our pleasure to send PRs :) Thank you for the quick review and merge!\n. ",
    "illicitonion": "LGTM\n. LGTM\n. Done\n. LGTM\n. Done\nI don't care enough to make it harder with a flag or similar\n. One last one was:\n\"Adding a limit_or_default property to PaginationConfig would centralise this kind of defaulting in perhaps a nicer way than doing it everywhere. Or maybe not.\"\nBut generally, LGTM :)\n. One last one was:\n\"Adding a limit_or_default property to PaginationConfig would centralise this kind of defaulting in perhaps a nicer way than doing it everywhere. Or maybe not.\"\nBut generally, LGTM :)\n. I'm about to update this PR to get rid of that diff, and also fix a bug - stand by :)\n. I'm about to update this PR to get rid of that diff, and also fix a bug - stand by :)\n. shrug LGTM\n. shrug LGTM\n. I certainly don't understand all of the subtleties, but seems reasonable... LGTM?\n. I certainly don't understand all of the subtleties, but seems reasonable... LGTM?\n. Replaced by https://github.com/matrix-org/synapse/pull/285\n. Replaced by https://github.com/matrix-org/synapse/pull/285\n. Done\n. Done\n. It does exactly as much as it used to...\n. It does exactly as much as it used to...\n. Not that I'm aware of :) But if there's some magical way in which it used it, it still will!\n. Not that I'm aware of :) But if there's some magical way in which it used it, it still will!\n. Done\n. Done\n. We don't 200 the binding until we're done processing all of the events, and sydent will retry any requests it didn't see succeed, which I think means we're ok across inconveniently timed restarts?\n. Squash-merged as 2cebe53\n. LGTM\n. Squash-merged as f522f50\n. Squash-merged as f522f50\n. Squash-merged as ca2f907\n. Squash-merged as ca2f907\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Accidentally pushed as ca2f907 in a squash-merge of another PR... Oops...\n. Accidentally pushed as ca2f907 in a squash-merge of another PR... Oops...\n. Basically looks good; a few random language nits, and a little duplication to get rid of and I think we're good to go :)\n. Basically looks good; a few random language nits, and a little duplication to get rid of and I think we're good to go :)\n. LGTM when I see a sytest :)\n. LGTM when I see a sytest :)\n. Added comments\n. LGTM\nWould love if a test could catch this...\n. Yep, that was added to delay me needing to work out the ACLing until I had time to actually audit the code and caller and such; I have now done the audit and just removing the is_guest does the right thing.\n. I leave coverage as an exercise to the reviewer :)\n. Added v2 sync filtering, PTAL\n. LGTM modulo comments\n. LGTM\n. LGTM\n. LGTM modulo one question\n. LGTM maybe this is fine probably perhaps I guess I don't know I hope so\n. Seems reasonable. LGTM.\n. LGTM\nPlease can we kill v1 login & registration soon? Please?\n. shrug LGTM I guess\n. Rubberstamp LGTM\n. I have no idea whether this is correct.\nLGTM.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. This should probably also go onto develop...\n. Fixed copyright years\n. LGTM probably\n. LGTM probably\n. https://matrix.org/jira/browse/BOTS-131\n(Note that I'm actually shelving this PR until I make some fixes to Synapse, because it doesn't quite work as-is)\n. https://matrix.org/jira/browse/BOTS-131\n(Note that I'm actually shelving this PR until I make some fixes to Synapse, because it doesn't quite work as-is)\n. If all the tests pass, this is fine. I assume there was some reason this was there at the time, but the test coverage is sufficient that you should be fine. Probably.\n. If all the tests pass, this is fine. I assume there was some reason this was there at the time, but the test coverage is sufficient that you should be fine. Probably.\n. @Kegsay heads up, I re-wrote this completely\n. @Kegsay heads up, I re-wrote this completely\n. LGTM\n. LGTM\n. https://github.com/matrix-org/matrix-doc/pull/264\n(Sorry, should have sent that your way too :))\n. LGTErik\n. Tests are in https://github.com/matrix-org/sytest/pull/154\n. LGTM\n. LGTM\n. LGTM\n. Eww. Sadsies. We should fix that, probably...\n. bleh, as far as I can tell neither the android app nor the angular client use /content on master. How long do we need to support obsolete things?\n. Fix the test please :)\n. LGTM aside from typo\n. They are now!\n. Note that I reverted this because it broke an important sytest in a way that sytest subtly failed about: 4de08a4\n. LGTM with one comment\n. LGTM\n. @matrixbot ok to test\n. @Rugvip LGTM, will merge if jenkins is happy\n. This breaks our unit tests; can you throw in this patch?:\n``` diff\n$ git diff\ndiff --git a/tests/utils.py b/tests/utils.py\nindex bf7a31f..11d9acb 100644\n--- a/tests/utils.py\n+++ b/tests/utils.py\n@@ -50,6 +50,7 @@ def setup_test_homeserver(name=\"test\", datastore=None, config=None, **kargs):\n         config.macaroon_secret_key = \"not even a little secret\"\n         config.server_name = \"server.under.test\"\n         config.trusted_third_party_id_servers = []\n+        config.room_invite_state_types = []\n if \"clock\" not in kargs:\n     kargs[\"clock\"] = MockClock()\n\n```\n. Can you wrap one per line?\n. LGTM, one minor comment\n. LGTM\n. LGTM\n. LGTM\n. Done\n. Done\n. Done. All of the examples I've seen use spaces as padding, but there's no good reason to.\nI've documented the constraints in https://bit.ly/matrix-auth - we should push it into the spec at some point, when it's a little more stable.\n. Done\n. Would be vaguely friendly to do this in a loop, and include all missing dependencies in the command line we print\n. It is unclear from this comment whether it will return the join event (from when the user was in the room) or the leave event, if the user has left the room.\n. Would be nice for this commit to have been a separate PR, to avoid noise :)\n. What if to_key is defined and newer than leave_token?\n. Specifically elif event.membership == Membership.LEAVE for clarity\n. synapse.streams.config.PaginationConfig\n. \"A JSON object\" implies it has been serialised to a string.\n. Are two separate mostly duplicated methods really clearer than one? The branching looks pretty small\n. Adding a limit_or_default property to PaginationConfig would centralise this kind of defaulting in perhaps a nicer way than doing it everywhere. Or maybe not.\n. Fiiiiiiiine\n. Something helpful:\n2015-09-22 13:11:23,634 - twisted - 154 - CRITICAL - - Unhandled error in Deferred:\nTraceback (most recent call last):\n  File \"/home/wadaniel/.virtualenvs/synapsemacaroons/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 501, in _startRunCallbacks\n    self._runCallbacks()\n  File \"/home/wadaniel/.virtualenvs/synapsemacaroons/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 588, in _runCallbacks\n    current.result = callback(current.result, _args, _kw)\n  File \"synapse/util/logcontext.py\", line 169, in g\n    res = f(res, _args, _kwargs)\n  File \"/home/wadaniel/.virtualenvs/synapsemacaroons/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1184, in gotResult\n    _inlineCallbacks(r, g, deferred)\n---  ---\n  File \"/home/wadaniel/.virtualenvs/synapsemacaroons/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1128, in _inlineCallbacks\n    result = g.send(result)\n  File \"synapse/http/client.py\", line 223, in put_json\n    raise CodeMessageException(response.code, body)\nsynapse.api.errors.CodeMessageException: 400: {\"error_message\": \"unable to process request\"}\nSomething clean, not necessarily. Would you like an explicit errback or something?\n. Done\n. Done\n. Done\n. Done\n. Nope; this is just a logic method to tell you whether there is a thing being satisfied; the caller is responsible for handling that how it will.\n. Good question. Re-added. Shame it didn't make any tests fail...\n. Done\n. Done\n. Done\n. Done\n. Done\n. Aah yes, I forgot all about this placeholder. Done.\n. Of course not. We do here, now, though :)\n. We'll explode when we try to look up the value in the check, later.\n. Done\n. Done\n. While that does work, the replication layer assumes that the iterable it's passed is ordered, and that the first element will be the first destination which is contacted.\n. Added comment\n. When I am testing locally manually, changing this to http:// is much less hassle than me having to actually serve my sydent over SSL.\nNot sure it's worth a comment...\n. Done\n. Done\n. Would be quite nice to have this query written once with a substitution for ASC/DESC, rather than written twice\n. What would you hand to federation_server? The list of invites? It doesn't seem worthwhile to have this chain of methods:\n``` python\nTransport server\n@defer.inlineCallbacks\ndef on_POST(self, request):\n    content_bytes = request.content.read()\n    content = json.loads(content_bytes)\n    if \"invites\" in content:\n        yield self.handler.on_3pid_bind(content[\"invites\"])\n    defer.returnValue((200, {}))\nFederation_server\n@defer.inlineCallbacks\ndef on_3pid_bind(invites):\n    for invite in invites:\n        yield self.handler.exchange_third_party_invite(invite)\nFederation handler\n@defer.inlineCallbacks\ndef exchange_third_party_invite(self, invite):\n    # ...\n```\n. Done\n. Done\n. Yep, there isn't an obviously correct order to check the sender and room_id.\n. Done\n. Does the line above this not do so?\n. s/deffered/deferred/\n. FYI I'm changing this method signature on a separate branch; I imagine you'll get this in first, though\n. Done 3b0b09b\n. Done d72ea09\n. Done 810c842\n. Done d75a7c7\n. Done cd06a61\n. Done: added comment.\n. It should. It does now. This implies that there is zero test coverage for this method.\nDone\n. Done\n. Why are we duplicating this (and basically all of the code below in this file) from synapse/api/auth.py rather than referring to it?\nYou can get an instance of synapse/api/auth.py by calling self.hs.get_auth() (you may need to self.hs = hs in this constructor).\nFrom there, I'd fold all of the new macaroon functions into extra arguments on the existing functions, and call those.\nIt looks like you'll need to add an optional type parameter to _validate_macaroon, drop some leading underscores from function names, and then everything else should just fall out for free by calling functions on self.hs.get_auth()\n. Perhaps:\ndef get_access_token_for_user_id(self, user_id):\n    \"\"\"\n    Gets an access token for the user with the given user ID.\n    The user is assumed to have been authenticated by some other mechanism (e.g. CAS).\n    \"\"\"\n. Drop the returnValue, it's the default behaviour\n. nit: client_redirection_url\n. http_client = self.hs.get_simple_http_client()\n(Sorry that this is so undiscoverable)\n. s/clientRedirectUrl/client_redirect_url/\n. Convention is to use _ as a variable name if you're ignoring a return value, i.e.\nuser_id, _ = yield self.handlers.registration_handler.register(localpart=user)\n. s/redirectUrl/redirect_url/\n. Drop the defer.returnValue(None)\n. I'm vaguely just assuming this is correct; if it's not, it will just 500 people I guess :)\n. Done\n. Done\n. Done\n. The guest = true should always Just Work, is there a reason it needs to be pulled out?\nAnd can you add a boolean verify_expiry to the validate_macaroon function, and pass that through to verify_expiry function as an arg, rather than passing in custom lambdas?\n. snake_case (and throughout this method)\n. I leave this as an exercise to the reviewer :)\n. Done\n. Added the docstring; I don't think repeating the information here is useful.\n. Done\n. Done\n. I was doing this because it's possible no rooms will be returned, and consistently handling a COUNT is a little cleaner imo than having to handle different rowcounts in python.\nNow that I look at the schema, though, there are no uniqueness guarantees around room_memberships rows (which should have been obvious, I guess), so I've fixed this up to also cover the forget + re-join cases properly, and added some tests for them.\nDone something a little different :)\n. Done\n. As per spec comment, with is this v2_alpha not v1?\n. Throw in the optional +s to be explicit and clear that you're concatenating strings here\n. The point in the stream since which to get updates\n. Nothing currently guarantees that body be a dict, but add_account_data_to_room's documentation requires that it is.\nShould this be enforced? Or should the documentation be loosened?\n(And the non-room version)\n. Why not just defer.returnValue(next_id) rather than getting the max token again? (And below)\n. Why only if exists?\n. Should this only set if it's present? I don't like the number of random nulls we already add to responses...\n. We overwrite the sqlite3 results?\n. I think I accidentally merged out from master :S\nUndone, fixed\n. This file should no longer be in the v2_alpha directory\n. Done - Spec has changed\n. Ignore me. I am being dumb.\n. Why do you need these start and stop functions?\n. Why is this an is check? (And below)\n. What?\n. Done\n. Done\n. It does?\n. The thing I'm about to cut as soon as https://github.com/matrix-org/matrix-doc/pull/250 lands :)\n. Done\n. Done\nI was also unhappy to find this. In particular, the digging through when all I knew was that the thing 404'd, was not fun.\n. Done\n. Done\n. Bleugh, not it doesn't, I checked that the file gets loaded but not the actual functionality.\nHow about we just remove the name check? Either way this code won't work without its deps...\n. We're now deterministically generating the things, so there's more likelihood of collisions.\nOn matrix.org we're ok with attempts > 2, but other servers may have more than 5 sequentially allocated numeric IDs\n. It's filling holes.\nI can bump to 5k or something if you'd prefer.\n. Nope. Undone.\n. Tidied up a bit. Reduced the scope of what can SynapseError. Removed the limit.\nI could push the logic into a few different places (e.g. have the ID allocation be done in the store), but I don't care enough to make more invasive changes.\n4a688a3\n. Done fc3b7d8\n. Done\n. Done\n. Done\n. typo: s/suceeds/succeeds/\n. Done\n. I prefer not to duplicate the definition of what an alias is.\n. I could live with an is_valid function on DomainSpecificString which returned a boolean?\n. Done\n. This actually gets the latest per-user, rather than all of them, right?\n. Remove the limit param until we respect it?\n. Why is this a break not a continue?\n. Remove limit until implemented\n. What would invalidate this?\n. Note that this can only be called if txn is locking the table\n. opt: inline\n. Done\n. Yay for copy and paste!\nDone\n. Param style is wrong here; should be:\nArgs:\n    argname (type): Description\n(and below)\n. I've talked with Erik, and we believe the reason for this is that it allows clients to actually see that history visibility changes happened, partially because they can't see the event which opens up history visibility itself.\nI contend that this is bad, partially because it leaks membership information about otherwise restricted rooms.\nI'm fairly convinced that what we want to do is either:\n1) Stop special casing it completely. This means that they necessarily won't see a room become shared.\n2) Special case it by allowing it to be returned if the state before or after the event would allow you to see it, rather than just before as we currently do.\n. s/he was/they were/\n. s/he has/they have/\n. Done\n. Done\n. Done\n. Done\n. Being incredibly, incredibly consistent with Erik's style of layering. Even if it makes me sad.\n. Done\n. Done\n. Call this context_event_ids\n. self.hs.is_mine(inviter)?\n. Being really picky, I could argue that this should probably be an append not an overwrite, because the caller may have specified some useful hints.\nI know that none of the callers currently do, but...\n. Presumably None means no restriction, rather than no allowed values?\n. No errcode?\n. ",
    "stevenhammerton": "@erikjohnston - Fixed conflict by rebase, hope that's okay although I realise you'll probably need to give it a once over again because of that :(\n. @erikjohnston - Fixed conflict by rebase, hope that's okay although I realise you'll probably need to give it a once over again because of that :(\n. Yes, good point. Maybe this requires more thinking. I'll close the PR for now as the conflict error has already been fixed.\n. Yes, good point. Maybe this requires more thinking. I'll close the PR for now as the conflict error has already been fixed.\n. @erikjohnston - Updated the fallback stuff and tested now. All works :)\n. @erikjohnston - Updated the fallback stuff and tested now. All works :)\n. @illicitonion @erikjohnston All comments should now be addressed :)\n. @illicitonion @erikjohnston All comments should now be addressed :)\n. This code has changed in 059bb26.\n. No, fixed in 3be3580.\n. Fixed in ba94524\n. Fixed in 059bb26\n. I'd argue it's safer to be required with empty string supported but requires explicit enablement. That way, the likelihood of enabling CAS and that allowing someone else to log in as an already created user is reduced.\n. The ET XML library expand namespaces to {namespace-url} in element tags. (https://docs.python.org/2/library/xml.etree.elementtree.html#parsing-xml-with-namespaces)\nI'm ignoring namespaces here.\n. Neat, I'll change.\n. Fixed in 01a5f19\n. Fixed in 7f8fdc9\n. I had pulled the stuff in synapse/api/auth.py down to here, but then the guest login stuff caused conflicts and I got lazy. Will fix.\n. ",
    "wldhx": "I see. The second option is probably better for now because of its simplicity. Also, considering 'shiny' is relevant: it'd be nice to have https://try.matrix.org or something like this.\n. Sounds nice. What's the ETA for this?\n. Ok. But the problem is not fully solved yet as there are some mentions of 'matrix.org/beta' in some other projects too. Shall these be changed to 'try-matrix-now', or is it acceptable to just wait for matrix.to?\n. Ok. But the problem is not fully solved yet as there are some mentions of 'matrix.org/beta' in some other projects too. Shall these be changed to 'try-matrix-now', or is it acceptable to just wait for matrix.to?\n. ",
    "almereyda": "@tracker1 I am soon to push separate images composed at https://github.com/allmende/docker-matrix\n. The WiP of this lives in https://hub.docker.com/u/allmende/.\n. In which way would you expect it to change?\n. I can only support a vote for official Docker images of the Matrix ecosystem, especially since services can be quickly spun up with that infrastructure.\nYet as the Docker ecosystem is moving fast and breaking often, the recent moves on compose and swarm ask for catching up and splitting a server into a combination of individual services. The links in #378 show an approach which forked of the excellent preliminary work of @silvio:\n- https://github.com/allmende/docker-matrix/blob/master/docker-compose.yml\n- https://hub.docker.com/u/allmende/dashboard/\nI was using a two step set up procedure involving docker-compose -f generate.yml up (generate.yml) as a one off command preparing the configs, and only then starting the deamons via docker-compose up -d. Unfortunately this is not yet documented in the docker-matrix README.\nThe source repositories for the individual images live at:\n- https://lab.allmende.io/allmende/docker-vector/tree/master\n- https://lab.allmende.io/allmende/docker-synapse/tree/master\n- https://lab.allmende.io/allmende/docker-coturn/tree/master\nI was always thinking I had something to hide, why they are not on GitHub (yet) as the configurations used include already public facts of the actual allmende.io deployment and are not generalised.\nI am especially not fond of https://lab.allmende.io/allmende/docker-vector/blob/master/Dockerfile#L72-73, but believe the new ARG keyword may come in handy here.\nPlease have a look, fork off and see if we can build something together out of our different branches.\n. If an additonal opinion would be asked here, we're also running from debian:jessie in https://github.com/allmende/docker-synapse/blob/master/Dockerfile#L1 without issues.. ",
    "rzr": "it would help to have one per package , it wont pollute master branch if it is done in separate debian branch to be used with g-b-p ...\nI will write a short tutorial how to use those packages ...\nKeep in touch\n. Ok I see you took my fix in latest release , thanks...\nI made this short howto to make it run on minnowboard :\nhttps://dockr.eurogiciel.fr/blogs/embedded/matrix-debian/\nI'll may share a demo image ready to be dumped too and update article next week.\nRegards\n. i built it once using apt-build on ARM board\nI can do it again if you trust me enough to have them published ;)\n. hint: Try to open a RFP bug on debian.org\n. Thanks, maybe it worth also to check status of each \"~matrix\" packages too\n. I rebuilt them in the past, and can do it again for you, please tell me which for which target 1st?  like raspbian / rpi2 or rpi0 ?\nRelated hints\nhttps://www.element14.com/community/people/rzr/blog/2015/11/24/how-to-setup-a-webrtc-gateway-using-matrix-on-minnowmax\n. ",
    "ghost": "@krisak Seems like it reading the InRelease file Architectures: amd64 i386 (no arm).\n. So are there any arm deb packages for this? Trying to install from source with pip seems highly unreliable.\n. armhf\n. Another possibility might be ssl.PROTOCOL_TLSv1_2\nI also tried allowing all protocols and then disabling SSL 2 and 3, but that didn't work for me.. OpenSSL API is confusing and bad, but this should not be changed to anything except perhaps PROTOCOL_TLS\nhttps://docs.python.org/2/library/ssl.html#ssl.PROTOCOL_SSLv23. ",
    "jvalleroy": "I see the packaging repository for matrix-synapse. For the other packages on http://matrix.org/packages/debian, are there repositories available?\nI have opened an RFP at https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=830601. But if you are interested in maintaining these packages within Debian, you could make an ITP and find a sponsor to upload the packages.\n. ",
    "AppleDash": "I don't think I can upgrade it - the package is up to date according to apt.\n. @erikjohnston Here's the output, it seems you might be right:\nsqlite> CREATE VIRTUAL TABLE IF NOT EXISTS test1 USING fts4 ( column );\nError: near \"NOT\": syntax error\nsqlite> CREATE VIRTUAL TABLE test2 USING fts4 ( column );\nsqlite>\n. ",
    "roblabla": "Woops, need to merge into develop.\n. Woops, need to merge into develop.\n. ",
    "koobs": "My pleasure :)\n. My pleasure :)\n. ",
    "turt2live": "I know it's 2 years late, and probably not all that helpful, but the issue is that public is not a valid preset. I think the preset you're looking for is public_chat.\nOn synapse 0.29 a KeyError is thrown for the public preset, but public_chat happily returns me a room ID.. There's received_ts and origin_ts, is there another that's needed?. This should be fixed by https://github.com/matrix-org/synapse/pull/3642. I appear to have run into the same issue (HS: t2l.io). The full log is available here: homeserver.log.1.tar.gz. Apologies if this is the wrong issue - please let me know if this should be posted elsewhere. I also apologize for the length of this comment - part of it is me building an understanding of how synapse is behaving.\nStrangely, it seems to have stemmed from an event I invoked. Prior to this mess, I decided to join #mozilla_#rust:matrix.org.\n2017-01-08 20:51:26,066 - synapse.access.https.8448 - 59 - INFO - PUT-225636- 50.196.182.78 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483901255361/\n2017-01-08 20:51:26,071 - synapse.federation.transport.server - 138 - INFO - PUT-225636- Request from matrix.rjryan.me\n2017-01-08 20:51:26,072 - synapse.federation.transport.server - 244 - INFO - PUT-225636- Received txn 1483901255361 from matrix.rjryan.me. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-08 20:51:26,076 - synapse.federation.federation_server - 164 - INFO - PUT-225636- Accepting join PDU $148392668146CDwqf:t2l.io from matrix.rjryan.me\n2017-01-08 20:51:26,078 - synapse.storage.events - 1087 - INFO - PUT-225636- Loading 1 events\n2017-01-08 20:51:26,080 - synapse.storage.events - 1090 - INFO - PUT-225636- Loaded 1 events (0 rows)\n2017-01-08 20:51:26,087 - synapse.federation.federation_server - 642 - INFO - PUT-225636- Still missing 1 events for room '!PcCidzjUKXHKImhTrB:matrix.org': ['$1483926665734516ChlNj:matrix.org']...\n2017-01-08 20:51:26,088 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-33065} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/state_ids/!PcCidzjUKXHKImhTrB:matrix.org/?event_id=%24148392\n668146CDwqf%3At2l.io\n2017-01-08 20:51:26,090 - synapse.metrics - 162 - INFO - PUT-225636- Collecting gc 0\n2017-01-08 20:51:26,134 - synapse.http.endpoint - 246 - INFO - PUT-225636- Connecting to matrix.rjryan.me:8448\n2017-01-08 20:51:26,134 - twisted - 131 - INFO - PUT-225636- Starting factory <twisted.web.client._HTTP11ClientFactory instance at 0x7fccc3a8cf80>\n2017-01-08 20:51:26,136 - twisted - 131 - INFO - PUT-225636- (UDP Port 56963 Closed)\n2017-01-08 20:51:26,137 - twisted - 131 - INFO - PUT-225636- Stopping protocol <twisted.names.dns.DNSDatagramProtocol object at 0x7fccf35300d0>\n2017-01-08 20:51:27,570 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-33065} [matrix.rjryan.me] Result: 200 OK\n2017-01-08 20:51:28,080 - synapse.storage.events - 1087 - INFO - PUT-225636- Loading 14656 events\n2017-01-08 20:51:31,238 - synapse.storage.events - 1090 - INFO - PUT-225636- Loaded 14656 events (0 rows)\nFor brevity the unrelated log messages have been excluded. After the above section, several groups, similar to the following, appear.\n2017-01-08 20:51:31,283 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-33066} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/event/$148376901025086WHtKj:matrix.org/\n2017-01-08 20:51:31,284 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-33067} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/event/$1481281607292659Mvtty:matrix.org/\n2017-01-08 20:51:31,287 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-33068} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/event/$1457896471135702pKfHX:matrix.org/\n... 17 more\n2017-01-08 20:51:32,097 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-33076} [matrix.rjryan.me] Result: 200 OK\n2017-01-08 20:51:32,101 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-33082} [matrix.rjryan.me] Result: 200 OK\n2017-01-08 20:51:32,104 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-33075} [matrix.rjryan.me] Result: 200 OK\n... 17 more\n... until it finally hit this:\n2017-01-08 20:56:59,010 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-41470} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/event/$14393253158546KsWJQ:matrix.org/\n2017-01-08 20:56:59,012 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-41471} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/event/$147950331576361TQRiA:matrix.org/\n2017-01-08 20:56:59,015 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-41472} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/event/$14809708594043686HEftR:matrix.org/\n...\n2017-01-08 20:56:59,311 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-41470} [matrix.rjryan.me] Result: 429 Unknown Status\n2017-01-08 20:56:59,315 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-41471} [matrix.rjryan.me] Result: 429 Unknown Status\n2017-01-08 20:56:59,320 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-41472} [matrix.rjryan.me] Result: 429 Unknown Status\n...\nThe other requests in the batch of 20 succeeded, but those 3 did not. After the 429 there were several thousand messages like the following:\n2017-01-08 20:57:11,004 - synapse.federation.federation_client - 262 - INFO - PUT-225636- Not retrying server matrix.rjryan.me.\n2017-01-08 20:57:11,005 - synapse.federation.federation_client - 262 - INFO - PUT-225636- Not retrying server matrix.rjryan.me.\n2017-01-08 20:57:11,005 - synapse.federation.federation_client - 262 - INFO - PUT-225636- Not retrying server matrix.rjryan.me.\n2017-01-08 20:57:11,006 - synapse.federation.federation_client - 262 - INFO - PUT-225636- Not retrying server matrix.rjryan.me.\neventually leading to...\n2017-01-08 20:57:20,922 - synapse.federation.federation_client - 309 - WARNING - PUT-225636- Failed to get set(['$1481282139295898GjExR:matrix.org', '$145033834267533mZXDi:matrix.org', '$145444961233473fOQJk:matrix.org', '$14781938531702853PuxAD:matrix.org', '$1451345693378684lbixX:matrix.org',\n(truncated - the collection size is about 14,000 entries long)\nThis is not the first time a sequence like the above appears in the log. Similar sequences are present as the following IDs:\n PUT-225636 - shown above (rust)\n PUT-225684 - Different room, but still 8134 events (#mozilla_#rust-beginners:matrix.org)\n  * Also interesting because it looks like it forgot my own join event: PUT-225684- Still missing 1 events for room '!DKTALuSIPGrKqdJmPQ:matrix.org': ['$148392664544PoGow:t2l.io']...\nThere are several more IDs. A grep for PUT-.*Loading.*events yields plenty of IDs with >7000 events.\nSomething else noticed in the logs is an alarming number of Event content has been tampered, redacting-style messages. I'm not sure if this is related or not.\nSeveral other homeservers triggered the large number of outgoing GET requests, eventually running into my HS getting itself 429'd from them as well (including matrix.org). Each time a 429 occurred, many thousand (103,047 in the sample log) Not retrying-style message appear.\n. I appear to have run into the same issue (HS: t2l.io). The full log is available here: homeserver.log.1.tar.gz. Apologies if this is the wrong issue - please let me know if this should be posted elsewhere. I also apologize for the length of this comment - part of it is me building an understanding of how synapse is behaving.\nStrangely, it seems to have stemmed from an event I invoked. Prior to this mess, I decided to join #mozilla_#rust:matrix.org.\n2017-01-08 20:51:26,066 - synapse.access.https.8448 - 59 - INFO - PUT-225636- 50.196.182.78 - 8448 - Received request: PUT /_matrix/federation/v1/send/1483901255361/\n2017-01-08 20:51:26,071 - synapse.federation.transport.server - 138 - INFO - PUT-225636- Request from matrix.rjryan.me\n2017-01-08 20:51:26,072 - synapse.federation.transport.server - 244 - INFO - PUT-225636- Received txn 1483901255361 from matrix.rjryan.me. (PDUs: 1, EDUs: 0, failures: 0)\n2017-01-08 20:51:26,076 - synapse.federation.federation_server - 164 - INFO - PUT-225636- Accepting join PDU $148392668146CDwqf:t2l.io from matrix.rjryan.me\n2017-01-08 20:51:26,078 - synapse.storage.events - 1087 - INFO - PUT-225636- Loading 1 events\n2017-01-08 20:51:26,080 - synapse.storage.events - 1090 - INFO - PUT-225636- Loaded 1 events (0 rows)\n2017-01-08 20:51:26,087 - synapse.federation.federation_server - 642 - INFO - PUT-225636- Still missing 1 events for room '!PcCidzjUKXHKImhTrB:matrix.org': ['$1483926665734516ChlNj:matrix.org']...\n2017-01-08 20:51:26,088 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-33065} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/state_ids/!PcCidzjUKXHKImhTrB:matrix.org/?event_id=%24148392\n668146CDwqf%3At2l.io\n2017-01-08 20:51:26,090 - synapse.metrics - 162 - INFO - PUT-225636- Collecting gc 0\n2017-01-08 20:51:26,134 - synapse.http.endpoint - 246 - INFO - PUT-225636- Connecting to matrix.rjryan.me:8448\n2017-01-08 20:51:26,134 - twisted - 131 - INFO - PUT-225636- Starting factory <twisted.web.client._HTTP11ClientFactory instance at 0x7fccc3a8cf80>\n2017-01-08 20:51:26,136 - twisted - 131 - INFO - PUT-225636- (UDP Port 56963 Closed)\n2017-01-08 20:51:26,137 - twisted - 131 - INFO - PUT-225636- Stopping protocol <twisted.names.dns.DNSDatagramProtocol object at 0x7fccf35300d0>\n2017-01-08 20:51:27,570 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-33065} [matrix.rjryan.me] Result: 200 OK\n2017-01-08 20:51:28,080 - synapse.storage.events - 1087 - INFO - PUT-225636- Loading 14656 events\n2017-01-08 20:51:31,238 - synapse.storage.events - 1090 - INFO - PUT-225636- Loaded 14656 events (0 rows)\nFor brevity the unrelated log messages have been excluded. After the above section, several groups, similar to the following, appear.\n2017-01-08 20:51:31,283 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-33066} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/event/$148376901025086WHtKj:matrix.org/\n2017-01-08 20:51:31,284 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-33067} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/event/$1481281607292659Mvtty:matrix.org/\n2017-01-08 20:51:31,287 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-33068} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/event/$1457896471135702pKfHX:matrix.org/\n... 17 more\n2017-01-08 20:51:32,097 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-33076} [matrix.rjryan.me] Result: 200 OK\n2017-01-08 20:51:32,101 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-33082} [matrix.rjryan.me] Result: 200 OK\n2017-01-08 20:51:32,104 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-33075} [matrix.rjryan.me] Result: 200 OK\n... 17 more\n... until it finally hit this:\n2017-01-08 20:56:59,010 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-41470} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/event/$14393253158546KsWJQ:matrix.org/\n2017-01-08 20:56:59,012 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-41471} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/event/$147950331576361TQRiA:matrix.org/\n2017-01-08 20:56:59,015 - synapse.http.outbound - 124 - INFO - PUT-225636- {GET-O-41472} [matrix.rjryan.me] Sending request: GET matrix://matrix.rjryan.me/_matrix/federation/v1/event/$14809708594043686HEftR:matrix.org/\n...\n2017-01-08 20:56:59,311 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-41470} [matrix.rjryan.me] Result: 429 Unknown Status\n2017-01-08 20:56:59,315 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-41471} [matrix.rjryan.me] Result: 429 Unknown Status\n2017-01-08 20:56:59,320 - synapse.http.outbound - 209 - INFO - PUT-225636- {GET-O-41472} [matrix.rjryan.me] Result: 429 Unknown Status\n...\nThe other requests in the batch of 20 succeeded, but those 3 did not. After the 429 there were several thousand messages like the following:\n2017-01-08 20:57:11,004 - synapse.federation.federation_client - 262 - INFO - PUT-225636- Not retrying server matrix.rjryan.me.\n2017-01-08 20:57:11,005 - synapse.federation.federation_client - 262 - INFO - PUT-225636- Not retrying server matrix.rjryan.me.\n2017-01-08 20:57:11,005 - synapse.federation.federation_client - 262 - INFO - PUT-225636- Not retrying server matrix.rjryan.me.\n2017-01-08 20:57:11,006 - synapse.federation.federation_client - 262 - INFO - PUT-225636- Not retrying server matrix.rjryan.me.\neventually leading to...\n2017-01-08 20:57:20,922 - synapse.federation.federation_client - 309 - WARNING - PUT-225636- Failed to get set(['$1481282139295898GjExR:matrix.org', '$145033834267533mZXDi:matrix.org', '$145444961233473fOQJk:matrix.org', '$14781938531702853PuxAD:matrix.org', '$1451345693378684lbixX:matrix.org',\n(truncated - the collection size is about 14,000 entries long)\nThis is not the first time a sequence like the above appears in the log. Similar sequences are present as the following IDs:\n PUT-225636 - shown above (rust)\n PUT-225684 - Different room, but still 8134 events (#mozilla_#rust-beginners:matrix.org)\n  * Also interesting because it looks like it forgot my own join event: PUT-225684- Still missing 1 events for room '!DKTALuSIPGrKqdJmPQ:matrix.org': ['$148392664544PoGow:t2l.io']...\nThere are several more IDs. A grep for PUT-.*Loading.*events yields plenty of IDs with >7000 events.\nSomething else noticed in the logs is an alarming number of Event content has been tampered, redacting-style messages. I'm not sure if this is related or not.\nSeveral other homeservers triggered the large number of outgoing GET requests, eventually running into my HS getting itself 429'd from them as well (including matrix.org). Each time a 429 occurred, many thousand (103,047 in the sample log) Not retrying-style message appear.\n. Bot should be working again ^.^. I've managed to reproduce this (again) on Synapse 0.19.3-rc2 by joining #freenode_#smartos:matrix.org. I'm not too comfortable with dumping logs here, so feel free to message me (@travis:t2l.io) and I'll provide the log package (11mb compressed, 145mb expanded).. fwiw, later on in this file is This need a user have a administrator access in Synapse. . Suggestion: Include some text to ask for log snippets. It's hard to troubleshoot issues without stacktraces or any indication as to what is going on. Similar to the \"please screenshot it\" in Riot.. 2015?. Shouldn't that also be if not is_user_in_group...?. I'm not sure if there's actually an identity server running on riot.im. After using source above you should be able to just use hash_password. It was. Updated!. for clarity, the other workers should indicate that they cannot be load balanced. Probably just a paragraph above the workers saying \"All workers cannot be load balanced unless otherwise stated\".. :8008 instead?. This doesn't seem to affect just registrations and could be misleading to some people.\nEdit for clarity: I'm talking about the config key name. This should probably be pointed at master, otherwise the version will be forgotten about and a bunch of old servers will be spun up.. thumbnails. An environment variable for the cache factor would be neat, although most people aren't going to need it.. master is effectively latest, but yes: latest would be safer.. Defaulting to yes honestly feels like an argument waiting to happen. I'd somewhat recommend it be a required variable with no default.. It is, however the main worker is different in that it refuses to work with the standard worker_ options. I wanted to add a reminder that the homeserver.yaml is used instead.. There doesn't seem to be a handler for this. Are profiles intended to be replicated to a non-homeserver?. iirc this can't change after initially being set otherwise synapse can't understand previous access tokens. . Some added documentation to say \"don't ever change this\" would be nice :). avatar too just because reasons? likewise for the sender. to be fair, the ID being a random string was a convention started with the js-bridge library. There's still quite a few bridges which have the default ID \"telegram\" or similar.. any reason why this is INFO and the other two are WARN?. m.upload.size. this is config now. r0 not v1, surely? (also, should the admin endpoints be specced?). develop is generally not safe to run in production, so yes: this should be latest imho. I think the 'fix' needs to be done in Docker Hub to just make the latest tag be a real thing.. Pleeeeeeease provide an error code to SynapseError. I really want to avoid future problems where M_UNKNOWN appears in the spec.. I thought we had an M_BAD_REQUEST, but it looks like not. Seems to be a theme in the spec to use M_UNKNOWN for 400 anyways.. Was this the conclusion of that conversation? I thought for r0 we were saying Y was effectively the major version. . I think this needs a bit more discussion, which should probably happen outside of the comment box on github.\nr0.3.0 isn't compatible with r0.2.0 (push rules changed, some APIs removed, event formats changed) and if I recall correctly r0.3.0 was released intentionally as r0 given the constraints of the API.. For documentation purposes in the hopes that it becomes uncovered:\nhttps://github.com/matrix-org/synapse/pull/960 originally added 0.2.0 as well as 0.1.0 after a question asking if it should be added. Not a lot of descriptions for why, however.. This is missing the arg for %d, which I assume is len(prevs - seen) ?. Can we please get a :latest for master?. added some longish comments. In order for someone to change the version they'd have to restart synapse, which results in the session being lost (there's technically a bug for this somewhere - GitHub on mobile is crap)\nI can add the tracking, but it doesn't seem all that useful with the current state of things.. Please correct me if I'm wrong about how to stack changelog entries. > search. I'd rather not, as this will eventually be used for other things if https://github.com/matrix-org/matrix-doc/pull/1692 goes through.. Taking off the config flag causes a different set of errors. If the policy template doesn't correctly block usage of the missing variables, it will explode.\nI'd highly recommend maintaining the flag.. Github helpfully wasn't showing me that userhmac is defined above here and therefore fine (I think). \nThe problem is more of one where undefined variables can make it through _render_template and cause problems when the template tries to use them. When I was testing the template stuff originally, the thing exploded if stuff like userhmac wasn't defined at template time if the template didn't have an !is_public if statement around it.. There's the potential for tens, possibly even hundreds, of invites to be sent. It's not something critical we need to block on either.. correct, I misinterpreted the code and thought this was only for joins. Will fix.. yes, although I didn't really want to risk people adding things to the end and wondering why they aren't be called in the future. Happy to switch it around though.. done. (this might be a good opportunity to clarify the spec so it makes sense). There's not really a use case for a singular-named variable to contain an object/array, and it's somewhat implied it is a string anyways. Might as well just say it is a string.. err, spec wants this to be {} at a minimum, not a boolean directly. I think we should modify the MSC to have this be the capability:\n\"m.change_password\": {\n  \"enabled\": true\n}. Some of them have changed to the new logo and colour scheme, but most are just moved.. ",
    "floviolleau": "Thank's for the merge :-)\n. ",
    "Rugvip": "Updated with comment explaining change\n. Needs https://github.com/matrix-org/synapse/pull/599\n. Actually wth, added that commit into this instead :p\n. In https://github.com/matrix-org/synapse/pull/598 instead :p\n. Reopened since https://github.com/matrix-org/synapse/pull/598 might not be merged in a while\n. ... It wouldn't let me update this one ... https://github.com/matrix-org/synapse/pull/601\n. sign'd\n. Ok, thanks :) And just to fix some confusion, the PR is #2011, not #2010. Use parse_json_object_from_request instead\n. Put this by itself and with a comment\n. Yeah that's probably a better option, I'll have a look\n. ",
    "killua-eu": "@souvikbhattacharyas, does setting url_preview_enabled: False and restarting your server help? See also my ticket #883 \n. exactly. since this is my first hello to matrix, i just forced \"testing\" as a replacement and will go on and see what happens. it at least installed without a fuss, not sure if i run into runtime problems though.\n. sorry, the IDP was commented out. dpkg-reconfigure asks for the server_name, but doesnt really set it for some reason.\n. just noticed that the ip range blacklisted doesnt even has anything to do with this problem. Only url_preview_enabled: True is needed to fail register_new_matrix_user\n. @ara4n, the thing is: \nwith url_preview_enabled: True calling register_new_matrix_user works.\nwith url_preview_enabled: False calling register_new_matrix_user doesnt work.\nI thought at first that there's a firewall problem, but a simple trial/error with telnet showed this isnt the case.\n. @erikjohnston my bad, sorry, \nwith url_preview_enabled: True calling register_new_matrix_user doesnt work\nwith url_preview_enabled: False calling register_new_matrix_user works\ndang ...\nPlease be aware that I used the testing deb package on ubuntu 16.04, so I may be causing this myself by mixing stuff. If the deb package isnt in good shape and the default correct way is to use the pip install, I'll revert to continue testing with that.\n. nope, plain good old ascii.\n. I set up an ansible playbook https://github.com/Vaizard/mage.matrix-stack to create a repeatable environment where this fails.\n. ",
    "blide": "Fixed\n. Thanks for a good project. \nSigned-off-by: Roman Shakhov r.intval@gmail.com\n. ",
    "souvikbhattacharyas": "Yes it's working now. Thanks.\n. ",
    "rokups": "I second this. One room i am maintaining has over 500 hundred participants, but in reality its several tens of actual active users. Rest of them are guest accounts. Whats even more funny is that same person coming to chat multiple times picks same alias, but if he does not register then room contains 10 participants with same alias and they will never be coming back.. ",
    "gonight": "Is there any known fix or workaround for this yet?. Can't we add a right-click or some sort of menu option with a 'forward' button that functions as specified? There are use cases where some users (myself, for example) don't care about security, i.e. forwarding the latest 'dank meme' to a friend.\nRE: 'who can delete', I would argue that any forwarded/sent image no longer exists as solely tied to the original user. The snapchat 'delete' function is so commonly worked-around (screenshot being the most obvious and basic example) that it's almost a counter-example. Ultimately, users will save data in their possession that they wish to retain. Deletion should work the same in 'forwarded' and 're-sent' files.\nDepending on implementation, this seems like a pretty solid method to give users the option to save data on the homeserver they're using, and arguably even the entire network, in a pretty intuitive way without compromising functionality.. ",
    "simsasaile": "Thanks to DoubleMalt LDAP-Auth should now been possible: https://github.com/matrix-org/synapse/pull/701\n. Hi @DoubleMalt \nJust tried your LDAP-Module for synapse. It seems that I need a PW for my LDAP, is there a possibility to add this config option too? \nUpdate: Or do you maybe have an hint how to configure OpenLDAP that it works even without  a password? \nUpdate2: Found out that I can use LDAP also without a password_bind and I did a mistake in the synapse-ldap configuration (search_property should really only be cn and not something like cn=user,dc=example,dc=com ...)\nNow it's working great, thank you very much for this work!\n. Added it to Jira: https://matrix.org/jira/browse/SYN-674\n. Hi @mweinelt,\nthanks for the improvement for the ldap-authentication.\nHow can I get python-ldap3 >=1.0 on debian jessie?\n- With apt-get install python-ldap3 the version is 0.9.4.2 as you already commented above\n- also tried pip install ldap3 but matrix-synapse still doesn't start with the ldap-config, so maybe that's not the problem?\nThis is my new synapse ldap-config:\nldap_config:\n   enabled: true\n   uri: \"ldap://127.0.0.1:389\"\n   start_tls: false\n   base: \"ou=users,dc=example,dc=com\"\n   attributes:\n        uid: \"cn\"\n        mail: \"mail\"\n        name: \"givenName\"\nThat's the config which worked till synapse v0.17.0:\nldap_config:\nenabled: true\nserver: \"ldap://127.0.0.1\"\nport: 389\ntls: false\nsearch_base: \"ou=users,dc=example,dc=com\"\nsearch_property: \"cn\"\nemail_property: \"mail\"\nfull_name_property: \"givenName\"\n. Hi Martin,\nthanks for the fast reply even quite late in the night! :)\nThe package python3-ldap3 wasn't installed. \nSynapse doesn't show much at start:\nname@server:~$ sudo service matrix-synapse restart \nJob for matrix-synapse.service failed. See 'systemctl status matrix-synapse.service' and 'journalctl -xn' for details.\n```\nname@server:~$ sudo service matrix-synapse status -l\n\u25cf matrix-synapse.service - Synapse Matrix homeserver\n   Loaded: loaded (/lib/systemd/system/matrix-synapse.service; enabled)\n   Active: activating (auto-restart) (Result: exit-code) since Do 2016-08-11 03:27:31 CEST; 2s ago\n  Process: 3291 ExecStart=/usr/bin/python -m synapse.app.homeserver --config-path=/etc/matrix-synapse/homeserver.yaml --config-path=/etc/matrix-synapse/conf.d/ (code=exited, status=0/SUCCESS)\n  Process: 6786 ExecStartPre=/usr/bin/python -m synapse.app.homeserver --config-path=/etc/matrix-synapse/homeserver.yaml --config-path=/etc/matrix-synapse/conf.d/ --generate-keys (code=exited, status=1/FAILURE)\n Main PID: 3291 (code=exited, status=0/SUCCESS)\nAug 11 03:27:31 server systemd[1]: Failed to start Synapse Matrix homeserver.\nAug 11 03:27:31 server systemd[1]: Unit matrix-synapse.service entered failed state.\n```\nI did add some more infos about my config in the first post, maybe there is something wrong?\nIf I comment out all ldap config lines, the server is starting normal. Just setting enabled: false is not enough.\n. Found one problem in my config:\nI used tabs for \nuid: \"cn\"\n        mail: \"mail\"\n        name: \"givenName\"\nthat's the reason that synapse did not start even with ldap enabled set to false. \nUnfortunately synapse is still not running with my ldap-config.\n. Ok, it's all working now! Added bind_dn and bind_password.\nThanks again for your work and your help!\n. ",
    "nikriek": "Thanks! I'll fix these things if you are ok with the rest. \n. I'm using PyJWT for JWT decoding, but I can't get it work with Synapse's dependency management.\n. Give me one day. I thought about adding another configuration parameter. \n. Jep, few things. I will finish it this weekend!\n. Actually I was already done. I thought about adding another config var that allows to change the key to get the user identifier. But in my understanding the sub key should sufficient\nBtw: The Flake8 link is invalid.\n. Done :)\n. ",
    "DoubleMalt": "Unfortunately it depends on openldap-dev. How could I make it optional in the python-dependencies file?\n. Unfortunately it depends on openldap-dev. How could I make it optional in the python-dependencies file?\n. All checks pass :)\n. All checks pass :)\n. thx\n. I endorse this message ... erm pull request ;)\n. There is still a mix of \"simple_bind\" and \"simple\" for the modes. Is there a file in Matrix, that holds global constants?\n. But that holds \"\"\"Contains constants from the specification.\"\"\" ... These \"simple\" and \"search\" are very much implementation detail.\n. Probably best in synapse/config/ldap.py\n. the first line of _check_ldap_password bails immediately if ldap_enabled is false. I can put the log level for the message on debug.\nI honestly have a harder time parsing your code to see that it returns true if any of the two methods return true, but that's probably just my personal preference. I don't have a problem to change the code to you suggestion if you feel strongly about it :)\n. Good point. Will fix.\n. ",
    "aperezdc": "JFTR if you want to avoid the dependency of OpenLDAP installed in the system, a pure-Python option would be the ldap3 package.\n. JFTR if you want to avoid the dependency of OpenLDAP installed in the system, a pure-Python option would be the ldap3 package.\n. FWIW, some databases may do additional work during a VACUUM which may result in improved performance, especially for very busy tables. In particular, for PostgreSQL it is documented that vacuuming will make the query planner and index accessing work faster:\n\nPostgreSQL's VACUUM command has to process each table on a regular basis for several reasons:\n\n\nTo recover or reuse disk space occupied by updated or deleted rows.\n\n\nTo update data statistics used by the PostgreSQL query planner.\n\n\nTo update the visibility map, which speeds up index-only scans.\n\n\nTo protect against loss of very old data due to transaction ID wraparound or multixact ID wraparound.\n\n\n\nMaybe it would be good idea to add a note to postgres.rst recommending automatic vacuuming in postgresql.conf, so Synapse does not need to it by itself (though it's something that maybe needs to be handled anyway in Synapse when using SQLite).. The code in question lives in synapse/push/mailer.py:\n```python\ndef make_room_link(self, room_id):\n        # need /beta for Universal Links to work on iOS\n        if self.app_name == \"Vector\":\n            return \"https://vector.im/beta/#/room/%s\" % (room_id,)\n        else:\n            return \"https://matrix.to/#/%s\" % (room_id,)\ndef make_notif_link(self, notif):\n    # need /beta for Universal Links to work on iOS\n    if self.app_name == \"Vector\":\n        return \"https://vector.im/beta/#/room/%s/%s\" % (\n            notif['room_id'], notif['event_id']\n        )\n    else:\n        return \"https://matrix.to/#/%s/%s\" % (\n            notif['room_id'], notif['event_id']\n        )\n\n```\nProbably a new setting for the email section in homeserver.yaml would do, for example:\nyaml\nemail:\n  riot_base_url: \"http://riot.domain.com/\"\n  ...\nWhat do you think about this? I can make a PR for this.\n. ",
    "negzi": "@erikjohnston: Sorry about that I will change the PR to the develop branch ASAP\n. Hi Erik, you are welcome :)\nActually the intention is to register the user if doesn't exist or login the user and generate a short term token with expiry. \nI will edit your based on your comments also I have made some other fixes based on Patrik's comments.\nIs it OK to abandon this PR and make a new one with fixes and publish it on the develop branch?\n. Actually this interface can be used from server to server. While ago Patrik explained it in vector, I will paste it here for more clarification. \n\"think an online game where all users already exist in a database, and you want to use synapse for chat\nso the game login server just calls the AS to get an access token for a user with a matching id, and you're kinda done\nuser 'foo' logs into game, login service calls AS and asks for an access token for '@player_foo:mygame.com', and returns that to the user\nin that case it doesn't really make sense to have a separate login integration that makes synapse call the game server, it's easier to do it the other way around\u201d\n. Great! \n. Oj, sure I will pull the develop. Sorry for the clumsy mistakes, I will do better for the next pull request ;p I am leaving for the weekend now but will answer and fix soon :) Thanks for quick responses and all the help!!\n. Does this need to use an AS? AS's require a fair bit of config to set up, which isn't ideal if the only thing the other server needs to do is to create users. On the other hand, using an AS means that you can ensure the other server only creates users with a certain prefix.\n- The reason for using AS with AS auth which gives full access to home server.\nCould the other server register the user once, and then store a token? As the other server could simply add the time constraint to the macaroon/token itself each time it served the token to whatever used it.\n         - saving tokens and reusing then would be too inconvenient\nThere is also the registration_shared_secret config option that might be another way of doing this; instead of requiring the other server be a registered AS, auth using the registration shared secret.\n    - the createUser API gives full access to the homeserver.\n. Does this need to use an AS? AS's require a fair bit of config to set up, which isn't ideal if the only thing the other server needs to do is to create users. On the other hand, using an AS means that you can ensure the other server only creates users with a certain prefix.\n- The reason for using AS with AS auth which gives full access to home server.\nCould the other server register the user once, and then store a token? As the other server could simply add the time constraint to the macaroon/token itself each time it served the token to whatever used it.\n         - saving tokens and reusing then would be too inconvenient\nThere is also the registration_shared_secret config option that might be another way of doing this; instead of requiring the other server be a registered AS, auth using the registration shared secret.\n    - the createUser API gives full access to the homeserver.\n. Thanks for the review Erik, I really appreciate it :)\n. Thanks for the review Erik, I really appreciate it :)\n. Signed-off-by: Negar Fazeli negar.fazeli@ericsson.com\n. Signed-off-by: Negar Fazeli negar.fazeli@ericsson.com\n. Signed-off-by: Negar Fazeli negar.fazeli@ericsson.com\n. @erikjohnston \nI looked at the Jenkins job console output and do not think the failure in Sytes Dendron is related to what I have changed. Could you please take a look at this?\n. @erikjohnston \nPlease let me know if I need to add more test cases. Thanks!\n. Signed-off-by: Negar Fazeli negar.fazeli@ericsson.com\n. Signed-off-by: Negar Fazeli negar.fazeli@ericsson.com\n. do you mean this way \nauth_handler = AuthHandler(self.hs.get_handlers().auth_handler)\n. Oops, my bad :/\n. Sure, I will rename this.\n. hmm I am not sure what you mean here.\n. Right!\n. Oops :/ Thanks for the comments Erik. I will need to fix and test it on Sunday though (Flying to London soon and back on Sunday).\n. Yes, but by default it is False.\n. If I understood wat you mean here, would the following doc work better?\n    Creates a new user if the user does not exist but if the user exists it will replace the user's old access token with a new one.\n. yep, it will be cleaner if I move it there :)\n. Great, I have made the changes. please check when you have time, thanks\n. oh i haven't seen this comment will fix it after adding the integration test if that is OK :)\n. I agree that the message in Autherror should be changed. But the problem with this function is it never raises if the access token is expired and not valid anymore, it just looks in database and returns the user anyway with the fallback. That is why I would like to raise if the access token is expired\n. Yes, I agree you cannot really tell which Caveat(restriction) is failing here. But I didn't understand your last comment very well. Could you please explain a bit. Do you mean you would just raise here with no error message?\n. Sure I will remove this actually forgot to do it, wanted to know if the exception raises for invalid token and for my own assurance :)\n. Thanks for the awesome explanation :) I will fix this now\n. ",
    "ogarcia": "The links, for example, are outdated. And I think that need more explain, for example, when it talks about the turn_uris don't specify if this uris must be public or not.\nIMHO, would have a full guided sample and do mention that coturn is packaged in most distributions.\n. ",
    "KlausHans": "I agree. I tried to get voice and video calls to work on my Debian home server and Riot clients on Android. I got Coturn to run and Synapse seems fine too (made the turn configurations of course), but if i initiate a call nothing happens. Only the blank voice call screen pops up but the partner receives nothing. So i am kind of lost now and can not find any help on the web. A better documentation might help. Some points:\n- how do i know my configurations are correct?\n- how can i test coturn?\n- how can i test synapse is communicating with coturn?\n- Troubleshooting, pitfalls. I've got the same issue.\nschnuffle, what do i have to do if i have installed synapse via apt and the matrix repository?\nI have no idea where synapse is installed, thus i don't know where the scripts folder is.\nEdit: Downloaded the git project... now i got the hash and i think i've updated the password. Did not work though, maybe i missed something.\nI did:\nsynctl stop\ncp homeserver.db homeserver.db.bak\nsqlite3 homeserver.db\nUPDATE users SET password_hash='longhash' WHERE name='name';\n.exit\nsynctl start\nEdit2: ok, got it now and it works.\nIt has to be:\nUPDATE users SET password_hash='longhash' WHERE name='@name:server.tld';\nWhy the f*** has sqlite3 absolutely no feedback if something was not applicable. -.-\n. I've got the same issue.\nschnuffle, what do i have to do if i have installed synapse via apt and the matrix repository?\nI have no idea where synapse is installed, thus i don't know where the scripts folder is.\nEdit: Downloaded the git project... now i got the hash and i think i've updated the password. Did not work though, maybe i missed something.\nI did:\nsynctl stop\ncp homeserver.db homeserver.db.bak\nsqlite3 homeserver.db\nUPDATE users SET password_hash='longhash' WHERE name='name';\n.exit\nsynctl start\nEdit2: ok, got it now and it works.\nIt has to be:\nUPDATE users SET password_hash='longhash' WHERE name='@name:server.tld';\nWhy the f*** has sqlite3 absolutely no feedback if something was not applicable. -.-\n. Ok, i got it. I need Twisted 16.0.0.. But\npip install --upgrade --force \"Twisted>=16.0.0\" \ninstalled Twisted 17.1.0.\nWith a \npip install --upgrade \"Twisted==16.0.0\"\ni solved this issue.. ",
    "devz3r0": "i have the same issue with emailadresses which didn't respond.. ",
    "rubo77": "Can you move this to the vector Buglist?\nIf i get some hints, I will try to implement that\n. moved here: https://github.com/vector-im/vector-web/issues/1549\n. You could add  a cronjob, that calls the script suggested in https://github.com/matrix-org/synapse/pull/1034 regularly on all rooms\n. If you want to call it via a script you can use the script from my PR here: https://github.com/matrix-org/synapse/pull/1034\n. A start would be to \"Redact all events older than a certain time\" #1730. In  #916 I posted a gist, that could work. If it works, we should add that in the api-rst file\n. @erikjohnston can you take part of my example gist from #916 into that documentation?\nhttps://gist.github.com/rubo77/458eb4808d665e619feeaf556476f73f\n. I updated to 0.17 now, and now my gist file works fine\n. https://github.com/matrix-org/synapse/pull/1034 will add an example to the API Documentation\n. Do you mean this? \nhttps://github.com/matrix-org/synapse/blob/master/docs/admin_api/purge_history_api.rst\n. I created a gist file here: https://gist.github.com/rubo77/458eb4808d665e619feeaf556476f73f\nBut I need some more help\n. https://github.com/matrix-org/synapse/pull/911 added this \nso is there a vacuum needed after pruning old history?\n. So is there a workaround?\nMaybe a call to the database?. I am not running synapse with that mysql database, I just converted the sqlite.db, so I can use mysql-tools to analyze the db structure.\nI guess, there would be some more work to be done, to set up the mysql-db right, cause the types are a bit different and I just bulk-changed the keys to nearly fitting types.\nand also the keys, I added by hand like \nKEY (`room_id`),\nKEY (`event_id`)\n. For info: here I posted a structure dump of the complete PostgreSQL database: https://gist.github.com/rubo77/29a18ccc04800dbd6fbf946b0118b2fd#file-postgresql-database-dump-sql. I fixed the database is locked problem with a pragma busy timeout, so this can be merged now\n. I fixed the database is locked problem with a pragma busy timeout, so this can be merged now\n. I thought the busy_timeout will sort this out further?\nAnd if you call via API,  the calls are rolled out one after another. I thought the busy_timeout will sort this out further?\nAnd if you call via API,  the calls are rolled out one after another. @rryan do you mean we have to change something more? or do you just explain, why I used this?\nEVENT_ID=$(echo $BUFFER|awk '{print $2}'). @rryan do you mean we have to change something more? or do you just explain, why I used this?\n\nEVENT_ID=$(echo $BUFFER|awk '{print $2}'). @richvdh: the changes are not relevant to my script\n\n. I added hints how to solve this in Postgres too.\nAnd I added the command to really delete local events and messages, which is what users want to achieve mostly i think.. changelog added and commits squashed.. You could easily adapt the script to delete all rooms with a loop like\n```\nROOMS=$(sudo -u postgres psql -t -A --dbname=\"$DBNAME\" --command=\"SELECT room_id FROM rooms;\" 2>/dev/null | grep -v 'Pager')\nfor ROOM_NAME in $ROOMS; do\n  ...\n```\nwith a more sophisticated select command you can select only the rooms that are not encrypted already:\npsql -t -A --dbname=\"synapse\" --command=\"SELECT room_id FROM rooms where room_id not in (SELECT distinct room_id FROM events where type ='m.room.encrypted');\" | grep -v 'Pager'\n. But I suggest to only purge old history in rooms with many users, for example more than 10 users:\nselect * from (select count(*) as numberofusers, room_id from current_state_events where type ='m.room.member' group by room_id) as q left join room_aliases a on q.room_id=a.room_id where q.numberofusers >= 10 order by numberofusers desc\ninstead of purging before a certain age\nI think better it is to only purge messages in rooms that are more than 1000 messages ago, so you keep old conversations, that someone might still be interested in. \nI think this would be the select for the right event to start the purge upon:\nselect event_id from events where type='m.room.message' and room_id ='$ROOM' order by received_ts desc limit 1 offset 999\". I created a new PR in #4155 that adds the script to contrib/scripts instead and  with a much enhanced script, that loops over more rooms and waits for one purge to finish until the next one starts. The goal is, that during a purge call the front-end stays not responsive.\nAtm it is like this, that the server is 100% blocked until all clearing is done.\nIf there were some pauses in the code,  some minor actions could be done on the front-end in between\n. The goal is, that during a purge call the front-end stays not responsive.\nAtm it is like this, that the server is 100% blocked until all clearing is done.\nIf there were some pauses in the code,  some minor actions could be done on the front-end in between\n. If this is a Problem them only with sqlite db. in our homeserver.db:\n.schema device_inbox \nCREATE TABLE device_inbox ( \n  user_id TEXT NOT NULL, \n  device_id TEXT NOT NULL, \n  stream_id BIGINT NOT NULL, \n  message_json TEXT NOT NULL ); \nCREATE INDEX device_inbox_user_stream_id ON device_inbox(user_id, device_id, stream_id);                                             \nCREATE INDEX device_inbox_stream_id ON device_inbox(stream_id);\nwhich is exactly like https://github.com/matrix-org/synapse/blob/develop/synapse/storage/schema/delta/34/device_inbox.sql\nmaybe deleting the table? it is empty anyway.\n. i deleted the (empty anyway) table with drop table device_inbox and now synctl runs until - synapse.storage.prepare_database - 245 - INFO - - Running script 34/received_txn_purge.py \nI heard, this can take hours if the database is large (3GB on our server)\n. It took about 30 minutes, so it is OK.\nsolution is:\ndelete the table by hand on sqlite with\ndrop table device_inbox\nthen synctl start could continue without error for 30 minutes until it started successfully\n. How can I see, which version I had before?\nIf you need some logs,  maybe in my rsnapshot-backups.\nwhat exactly do you need?\n. ```\n2016-09-27 12:36:52,939 - synapse.app.homeserver - 289 - INFO - - Server version: Synapse/0.16.1-r1\n2016-09-27 12:36:52,941 - synapse.app.homeserver - 308 - INFO - - Preparing database: sqlite3...\n2016-09-27 13:48:47,359 - synapse.python_dependencies - 113 - INFO - - Using 'bcrypt' version None from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/bcrypt/init.pyc' to satisfy 'py-bcrypt'\n2016-09-27 13:48:47,359 - synapse.python_dependencies - 113 - INFO - - Using 'frozendict' version None from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/frozendict/init.pyc' to satisfy 'frozendict>=0.4'\n2016-09-27 13:48:47,359 - synapse.python_dependencies - 113 - INFO - - Using 'OpenSSL' version '16.0.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/OpenSSL/init.pyc' to satisfy 'pyopenssl>=0.14'\n2016-09-27 13:48:47,359 - synapse.python_dependencies - 113 - INFO - - Using 'pydenticon' version None from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/pydenticon/init.pyc' to satisfy 'pydenticon'\n2016-09-27 13:48:47,359 - synapse.python_dependencies - 113 - INFO - - Using 'pymacaroons' version '0.9.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/pymacaroons/init.pyc' to satisfy 'pymacaroons-pynacl'\n2016-09-27 13:48:47,359 - synapse.python_dependencies - 113 - INFO - - Using 'service_identity' version '16.0.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/service_identity/init.pyc' to satisfy 'service_identity>=1.0.0'\n2016-09-27 13:48:47,359 - synapse.python_dependencies - 113 - INFO - - Using 'signedjson' version '1.0.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/signedjson/init.pyc' to satisfy 'signedjson>=1.0.0'\n2016-09-27 13:48:47,360 - synapse.python_dependencies - 113 - INFO - - Using 'blist' version '1.3.6' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/blist/init.pyc' to satisfy 'blist'\n2016-09-27 13:48:47,360 - synapse.python_dependencies - 113 - INFO - - Using 'yaml' version '3.11' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/yaml/init.pyc' to satisfy 'pyyaml'\n2016-09-27 13:48:47,360 - synapse.python_dependencies - 113 - INFO - - Using 'unpaddedbase64' version '1.1.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/unpaddedbase64.pyc' to satisfy 'unpaddedbase64>=1.1.0'\n2016-09-27 13:48:47,360 - synapse.python_dependencies - 113 - INFO - - Using 'ujson' version '1.35' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/ujson.so' to satisfy 'ujson'\n2016-09-27 13:48:47,360 - synapse.python_dependencies - 113 - INFO - - Using 'nacl' version '0.3.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/nacl/init.pyc' to satisfy 'pynacl==0.3.0'\n...\n2016-09-27 13:48:47,361 - synapse.python_dependencies - 113 - INFO - - Using 'PIL' version None from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/PIL/init.pyc' to satisfy 'pillow'\n2016-09-27 13:48:47,418 - synapse.app.homeserver - 290 - INFO - - Server hostname: matrix.myserver.de\n2016-09-27 13:48:47,419 - synapse.app.homeserver - 291 - INFO - - Server version: Synapse/0.17.0\n2016-09-27 13:48:47,421 - synapse.app.homeserver - 309 - INFO - - Preparing database: sqlite3...\n2016-09-27 13:48:47,462 - synapse.storage.prepare_database - 212 - INFO - - Upgrading schema to v33\n2016-09-27 13:48:47,786 - synapse.app.homeserver - 327 - INFO - - Database prepared in sqlite3.\n2016-09-27 13:48:47,787 - synapse.server - 139 - INFO - - Setting up.\n2016-09-27 13:49:37,258 - synapse.storage.event_push_actions - 417 - INFO - - Searching for stream ordering 1 month ago\n2016-09-27 13:49:37,544 - synapse.storage.event_push_actions - 423 - INFO - - Found stream ordering 1 month ago: it's 290892\n2016-09-27 13:49:37,671 - synapse.config.appservice - 77 - INFO - - Loaded application service: ApplicationService: {'sender': '@xxxx:matrix.myserver.de', 'url': 'http://localhost:3500', 'hs_token': 'xxxxxxxxxxxxxxxx', 'token': 'xxxxxxxxxxxxxxx', 'namespaces': {'aliases': [{'regex': '#hackint_.:.', 'exclusive': True}], 'rooms': [{'regex': '!xxxx:matrix.myserver.de', 'exclusive': False}, {'regex': '!xxxx:matrix.myserver.de', 'exclusive': False}, {'regex': '!xxxx:matrix.myserver.de', 'exclusive': False}, {'regex': '!xxxx:matrix.myserver.de', 'exclusive': False}, {'regex': '!xxxx:matrix.myserver.de', 'exclusive': False}, {'regex': '!xxxx:matrix.myserver.de', 'exclusive': False}], 'users': [{'regex': '@irc_.:.', 'exclusive': True}]}, 'id': 'xxxxxxxxxxxxxxx'}2016-09-27 13:49:37,672 - synapse.server - 141 - INFO - - Finished setting up.\n2016-09-27 13:49:37,699 - synapse.util.httpresourcetree - 43 - INFO - - Attaching  to path /_matrix/client/r0\n2016-09-27 13:49:37,700 - synapse.util.httpresourcetree - 43 - INFO - - Attaching FilePath('/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/synapse/static') to path /_matrix/static\n2016-09-27 13:49:37,700 - synapse.util.httpresourcetree - 43 - INFO - - Attaching  to path /_matrix/client/versions\n...\n2016-09-27 13:49:37,701 - synapse.util.httpresourcetree - 43 - INFO - - Attaching  to path /_matrix/federation/v1\n2016-09-27 13:49:37,702 - twisted - 154 - INFO - - SynapseSite (TLS) starting on 8448\n2016-09-27 13:49:37,702 - twisted - 154 - INFO - - Starting factory \n2016-09-27 13:49:37,702 - synapse.app.homeserver - 199 - INFO - - Synapse now listening on port 8448\n2016-09-27 13:49:37,704 - synapse.util.httpresourcetree - 43 - INFO - - Attaching  to path /_matrix/client/r0\n...\n2016-09-27 13:49:37,706 - synapse.util.httpresourcetree - 43 - INFO - - Attaching  to path /_matrix/federation/v1\n2016-09-27 13:49:37,706 - twisted - 154 - INFO - - SynapseSite starting on 8008\n2016-09-27 13:49:37,706 - twisted - 154 - INFO - - Starting factory \n2016-09-27 13:49:37,706 - synapse.app.homeserver - 199 - INFO - - Synapse now listening on port 8008\n2016-09-27 13:49:37,707 - synapse.app.homeserver - 421 - INFO - - Scheduling stats reporting for 24 hour intervals\n2016-09-27 13:49:37,721 - synapse.app.homeserver - 242 - WARNING - - Starting daemon.\n2016-09-27 13:49:37,721 - synapse.app.homeserver - 31 - INFO - - Set file limit to: 65536\n2016-09-27 13:49:37,729 - synapse.storage.background_updates - 94 - INFO - - Starting background schema updates\n2016-09-27 13:49:37,799 - synapse.metrics - 212 - INFO - - Collecting gc 0\n2016-09-27 13:49:37,851 - synapse.push.pusherpool - 184 - INFO - - Starting 27 pushers\n2016-09-27 13:49:37,851 - synapse.push.pusher - 34 - INFO - - trying to create_pusher for {'lang': u'de', 'kind': ....\n...\npp_display_name': u'org.matrix.androidsdk.alpha', 'id': 838}\n2016-09-27 13:49:37,852 - synapse.push.pusher - 40 - INFO - - email enable notifs: False\n2016-09-27 13:49:37,852 - synapse.push.pusher - 46 - INFO - - found pusher\n2016-09-27 13:49:37,852 - synapse.push.pusher - 34 - INFO - - trying to create_pusher for {'lang...\n...\n2016-09-27 13:54:23,892 - synapse.app.homeserver - 70 - WARNING - - Stopping daemon.\n2016-09-27 13:57:17,962 - synapse.python_dependencies - 114 - INFO - - Using 'bcrypt' version None from '/home/irc-bridge/.synapse/local/lib/\npython2.7/site-packages/bcrypt/init.pyc' to satisfy 'py-bcrypt'\n2016-09-27 13:57:17,962 - synapse.python_dependencies - 114 - INFO - - Using 'msgpack' version None from '/home/irc-bridge/.synapse/local/lib\n/python2.7/site-packages/msgpack/init.pyc' to satisfy 'msgpack-python>=0.3.0'\n...\n2016-09-27 13:57:17,964 - synapse.python_dependencies - 114 - INFO - - Using 'PIL' version None from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/PIL/init.pyc' to satisfy 'pillow'\n2016-09-27 13:57:18,029 - synapse.app.homeserver - 290 - INFO - - Server hostname: matrix.myserver.de\n2016-09-27 13:57:18,030 - synapse.app.homeserver - 291 - INFO - - Server version: Synapse/0.18.0\n2016-09-27 13:57:18,051 - synapse.app.homeserver - 309 - INFO - - Preparing database: sqlite3...\n2016-09-27 13:57:18,053 - synapse.storage.prepare_database - 212 - INFO - - Upgrading schema to v33\n2016-09-27 13:57:18,054 - synapse.storage.prepare_database - 212 - INFO - - Upgrading schema to v34\n2016-09-27 13:57:18,054 - synapse.storage.prepare_database - 256 - INFO - - Applying schema 34/appservice_stream.sql\n2016-09-27 13:57:18,330 - synapse.storage.prepare_database - 245 - INFO - - Running script 34/cache_stream.py\n2016-09-27 13:57:18,330 - synapse.storage.prepare_database - 256 - INFO - - Applying schema 34/device_inbox.sql\n2016-09-27 13:57:18,642 - synapse.storage.prepare_database - 256 - INFO - - Applying schema 34/push_display_name_rename.sql\n2016-09-27 13:57:18,643 - synapse.storage.prepare_database - 245 - INFO - - Running script 34/received_txn_purge.py\n2016-09-27 14:02:46,129 - synapse.python_dependencies - 114 - INFO - - Using 'bcrypt' version None from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/bcrypt/init.pyc' to satisfy 'py-bcrypt'\n2016-09-27 14:02:46,129 - synapse.python_dependencies - 114 - INFO - - Using 'msgpack' version None from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/msgpack/init.pyc' to satisfy 'msgpack-python>=0.3.0'\n2016-09-27 14:02:46,129 - synapse.python_dependencies - 114 - INFO - - Using 'frozendict' version None from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/frozendict/init.pyc' to satisfy 'frozendict>=0.4'\n2016-09-27 14:02:46,130 - synapse.python_dependencies - 114 - INFO - - Using 'OpenSSL' version '16.1.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/OpenSSL/init.pyc' to satisfy 'pyopenssl>=0.14'\n2016-09-27 14:02:46,130 - synapse.python_dependencies - 114 - INFO - - Using 'pydenticon' version None from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/pydenticon/init.pyc' to satisfy 'pydenticon'\n2016-09-27 14:02:46,135 - synapse.python_dependencies - 114 - INFO - - Using 'pymacaroons' version '0.9.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/pymacaroons/init.pyc' to satisfy 'pymacaroons-pynacl'\n2016-09-27 14:02:46,135 - synapse.python_dependencies - 114 - INFO - - Using 'service_identity' version '16.0.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/service_identity/init.pyc' to satisfy 'service_identity>=1.0.0'\n2016-09-27 14:02:46,135 - synapse.python_dependencies - 114 - INFO - - Using 'signedjson' version '1.0.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/signedjson/init.pyc' to satisfy 'signedjson>=1.0.0'\n2016-09-27 14:02:46,135 - synapse.python_dependencies - 114 - INFO - - Using 'blist' version '1.3.6' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/blist/init.pyc' to satisfy 'blist'\n2016-09-27 14:02:46,135 - synapse.python_dependencies - 114 - INFO - - Using 'yaml' version '3.12' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/yaml/init.pyc' to satisfy 'pyyaml'\n2016-09-27 14:02:46,135 - synapse.python_dependencies - 114 - INFO - - Using 'unpaddedbase64' version '1.1.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/unpaddedbase64.pyc' to satisfy 'unpaddedbase64>=1.1.0'\n2016-09-27 14:02:46,136 - synapse.python_dependencies - 114 - INFO - - Using 'ujson' version '1.35' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/ujson.so' to satisfy 'ujson'\n2016-09-27 14:02:46,136 - synapse.python_dependencies - 114 - INFO - - Using 'nacl' version '0.3.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/nacl/init.pyc' to satisfy 'pynacl==0.3.0'\n2016-09-27 14:02:46,136 - synapse.python_dependencies - 114 - INFO - - Using 'nacl.bindings' version '0.3.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/nacl/init.pyc' to satisfy 'pynacl==0.3.0'\n2016-09-27 14:02:46,136 - synapse.python_dependencies - 114 - INFO - - Using 'daemonize' version '2.4.7' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/daemonize.pyc' to satisfy 'daemonize'\n2016-09-27 14:02:46,136 - synapse.python_dependencies - 114 - INFO - - Using 'canonicaljson' version '1.0.0' from '/home/irc-bridge/.synapse/\nlocal/lib/python2.7/site-packages/canonicaljson.pyc' to satisfy 'canonicaljson>=1.0.0'\n2016-09-27 14:02:46,136 - synapse.python_dependencies - 114 - INFO - - Using 'twisted' version '16.4.1' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/twisted/init.pyc' to satisfy 'Twisted>=15.1.0'\n2016-09-27 14:02:46,136 - synapse.python_dependencies - 114 - INFO - - Using 'saml2' version '3.0.2' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/saml2/init.pyc' to satisfy 'pysaml2>=3.0.0,<4.0.0'\n2016-09-27 14:02:46,137 - synapse.python_dependencies - 114 - INFO - - Using 'pyasn1' version '0.1.9' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/pyasn1/init.pyc' to satisfy 'pyasn1'\n2016-09-27 14:02:46,137 - synapse.python_dependencies - 114 - INFO - - Using 'PIL' version None from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/PIL/init.pyc' to satisfy 'pillow'\n2016-09-27 14:02:46,249 - synapse.app.homeserver - 290 - INFO - - Server hostname: matrix.myserver.de\n2016-09-27 14:02:46,249 - synapse.app.homeserver - 291 - INFO - - Server version: Synapse/0.18.0\n2016-09-27 14:02:46,283 - synapse.app.homeserver - 309 - INFO - - Preparing database: sqlite3...\n2016-09-27 14:03:16,406 - synapse.storage.prepare_database - 212 - INFO - - Upgrading schema to v34\n2016-09-27 14:03:16,406 - synapse.storage.prepare_database - 256 - INFO - - Applying schema 34/device_inbox.sql\n2016-09-27 14:03:47,077 - synapse.python_dependencies - 114 - INFO - - Using 'bcrypt' version None from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/bcrypt/init.pyc' to satisfy 'py-bcrypt'\n2016-09-27 14:03:47,077 - synapse.python_dependencies - 114 - INFO - - Using 'msgpack' version None from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/msgpack/init.pyc' to satisfy 'msgpack-python>=0.3.0'\n2016-09-27 14:03:47,077 - synapse.python_dependencies - 114 - INFO - - Using 'frozendict' version None from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/frozendict/init.pyc' to satisfy 'frozendict>=0.4'\n2016-09-27 14:03:47,077 - synapse.python_dependencies - 114 - INFO - - Using 'OpenSSL' version '16.1.0' from '/home/irc-bridge/.synapse/local/lib/python2.7/site-packages/OpenSSL/init.pyc' to satisfy 'pyopenssl>=0.14'\n```\n. @Half-Shot  sais:\n\nI want to be clear that what your asking is also against the use case of the Prune API.\nIt's sole purpose is to free up space on the host. It is not intended for redaction. Redaction is a different concept designed for removing events across servers.\nhttps://github.com/matrix-org/synapse/issues/1730#issuecomment-269839453\n\nI will try to create a script that doesn't just prune the room, but also redacts all messages older than X days\nsee also #1480. You could redact all old messages with a script like this: https://github.com/matrix-org/synapse/issues/1730#issuecomment-269846513. @kythyria: don't you think data parsimony is a desired option for matrix?\nI think we should add an option to each room, if redaction really deletes content from database or just flags it as deleted.\nIn most cases a deletion is not desired, but it should be an option the room admin may choose for each room.\nAlso I think it should be visible in the room, that users see, that what they write could be redacted, so they cannot rely on the messages to stay there forever.\nOn the other hand It should also be visible that you have to be careful, because messages written there are undeleteable, so you know, that, what you post there stays there forever. So summarized:  this is about \" Purge History API doesn't remove events from database \", which seems true \u2013 and desired. Maybe the bug is caused by a minutely purge script, we use for one of our rooms, that started during the upgrade process:\n```\n!/bin/bash\ncrontab -e\n* *  *   *   *     bash /home/irc-bridge/.synapse/EIGENE_purge_history_minuntely > /dev/null 2>&1\ncd /home/irc-bridge/.synapse/\nDOMAIN=\"matrix.ourserver\"\nTIME='1 minute ago'\nADMIN=\"@rubo77:matrix.ourserver\"\nTOKEN=$(sqlite3 homeserver.db \"select token from access_tokens where user_id like '$ADMIN' order by id desc limit 1;\")\nROOM='!LPRsNFBlKAAaaamFed:matrix.ourserver' # #whisper:matrix.ourserver\ncreates a timestamp from the given time string:\nUNIX_TIMESTAMP=$(date +%s%3N --date='TZ=\"UTC+2\" '\"$TIME\")\nEVENT_ID=$(sqlite3 homeserver.db \"select event_id from events where type='m.room.message' and received_ts<'$UNIX_TIMESTAMP' and room_id='$ROOM' order by received_ts desc limit 1;\")\nsleep 1\ncurl -v -X POST $DOMAIN':8008/_matrix/client/r0/admin/purge_history/'$ROOM'/'$EVENT_ID'?access_token='$TOKEN\n```. It depends on the use case.\nThe history-first directive isn't always what's needed.\nMaybe make it configurable . It depends on the use case.\nThe history-first directive isn't always what's needed.\nMaybe make it configurable . I clarified the title and the initial message, so it is clear what I aim for.\nThere are several usecases, where it is desired to clear old messages for the sake of data avoidance and data parsimony\nThis was requested before already here: https://github.com/matrix-org/synapse/issues/1480. I clarified the title and the initial message, so it is clear what I aim for.\nThere are several usecases, where it is desired to clear old messages for the sake of data avoidance and data parsimony\nThis was requested before already here: https://github.com/matrix-org/synapse/issues/1480. that is true, you cannot unsay it, but you could globally flag it as redacted. that is true, you cannot unsay it, but you could globally flag it as redacted. yes, that is what I meant.\nAnd additionally you could prevent an email from being sent, if it is still in your outbox. Meaning in Matrix: you could prevent a redacted message from being federated to other servers, if there are no other servers connected with your room yet. This actually is desired in private rooms a lot by people that are trying to avoid excessive data collection in the internet. yes, that is what I meant.\nAnd additionally you could prevent an email from being sent, if it is still in your outbox. Meaning in Matrix: you could prevent a redacted message from being federated to other servers, if there are no other servers connected with your room yet. This actually is desired in private rooms a lot by people that are trying to avoid excessive data collection in the internet. I am perfectly fine with that.\nWhat I aim for here is, that there will be an option to automatically redact all messages older than a certain timeframe, not deleted from the database (thats what #1621 is about) but redacted as it already works right now.\nSo if that option is turned on, all old messages are not shown in the clients (Riot) any more (although they theoretically still exist as \"redacted\" in the database) so normal users cannot scroll back in history more than this time.\nIf the room is federated, this redaction-flag should be federated too, so the admin has full control over the history of the room. I am perfectly fine with that.\nWhat I aim for here is, that there will be an option to automatically redact all messages older than a certain timeframe, not deleted from the database (thats what #1621 is about) but redacted as it already works right now.\nSo if that option is turned on, all old messages are not shown in the clients (Riot) any more (although they theoretically still exist as \"redacted\" in the database) so normal users cannot scroll back in history more than this time.\nIf the room is federated, this redaction-flag should be federated too, so the admin has full control over the history of the room. A script to redact the history would start like this:\n```\n!/bin/bash\nthis script will purge all messages of a given room older than a definable age\nDOMAIN=yourserver.tld\nadd this user as admin in your home server:\nADMIN=\"@username:$DOMAIN\"\nchoose the room to prune old messages from\nROOM='!cURbafjkfsMDVwdRDQ:matrix.org' # for example: \"Matrix HQ\"\nchoose a time before which the messages should be pruned:\nTIME='2016-08-31 23:59:59'\nTIME='3 months ago'\ncreates a timestamp from the given time string:\nUNIX_TIMESTAMP=$(date +%s%3N --date='TZ=\"UTC+2\" '\"$TIME\")\nBUSY=\"pragma busy_timeout=20000\"\nBUFFER=$(sqlite3 homeserver.db \"$BUSY;select event_id from events where type='m.room.message' and received_ts<'$UNIX_TIMESTAMP' and room_id='$ROOM' order by received_ts;\")\nfor line in $BUFFER; do\n  # use the api to redact those events\n  # ...\n```\n. A script to redact the history would start like this:\n```\n!/bin/bash\nthis script will purge all messages of a given room older than a definable age\nDOMAIN=yourserver.tld\nadd this user as admin in your home server:\nADMIN=\"@username:$DOMAIN\"\nchoose the room to prune old messages from\nROOM='!cURbafjkfsMDVwdRDQ:matrix.org' # for example: \"Matrix HQ\"\nchoose a time before which the messages should be pruned:\nTIME='2016-08-31 23:59:59'\nTIME='3 months ago'\ncreates a timestamp from the given time string:\nUNIX_TIMESTAMP=$(date +%s%3N --date='TZ=\"UTC+2\" '\"$TIME\")\nBUSY=\"pragma busy_timeout=20000\"\nBUFFER=$(sqlite3 homeserver.db \"$BUSY;select event_id from events where type='m.room.message' and received_ts<'$UNIX_TIMESTAMP' and room_id='$ROOM' order by received_ts;\")\nfor line in $BUFFER; do\n  # use the api to redact those events\n  # ...\n```\n. I don't understand what is the problem with flagging a message as \"redacted by ....\"? And Yes, every federated server can choose how to handle that flag, which is fine.\n. I don't understand what is the problem with flagging a message as \"redacted by ....\"? And Yes, every federated server can choose how to handle that flag, which is fine.\n. The \"sense of security\" wouldn't be false, if the history length would be visible in the head of the room.\nlook at Telegram: there are rooms that delete everything after some minutes and this is very visible to the user.\nAnd moderated rooms are a fine option in chat systems like Slack and Matrix. There only has to be a fine configuration option who is allowed to delete messages or if it is not allowed.\nAnd it has to be transparent. The \"sense of security\" wouldn't be false, if the history length would be visible in the head of the room.\nlook at Telegram: there are rooms that delete everything after some minutes and this is very visible to the user.\nAnd moderated rooms are a fine option in chat systems like Slack and Matrix. There only has to be a fine configuration option who is allowed to delete messages or if it is not allowed.\nAnd it has to be transparent. https://github.com/matrix-org/synapse/issues/1621#issuecomment-269859232 by @kythyria\n\nIf and only if the room is completely unfederated, and the server honours the relevant messages, will redaction do what @rubo77 seems to think it does.\n\nSo is this all true?\n\nredacting does \"flag\" a message in the database, so it should not be shown in clients (but still could be shown anyway)\nthis \"flag\" is federated to other servers too\nIf every client would obey not to show the redacted messages any more, they would be visible nowhere anymore (Riot does obey this)\nIf clients don't obey, they can still show the content of messages that were redacted\nIf a server is not federated to other servers a complete deletion of the content of a message could be a possibility to implement in the future. https://github.com/matrix-org/synapse/issues/1621#issuecomment-269859232 by @kythyria\nIf and only if the room is completely unfederated, and the server honours the relevant messages, will redaction do what @rubo77 seems to think it does.\n\n\n\nSo is this all true?\n\nredacting does \"flag\" a message in the database, so it should not be shown in clients (but still could be shown anyway)\nthis \"flag\" is federated to other servers too\nIf every client would obey not to show the redacted messages any more, they would be visible nowhere anymore (Riot does obey this)\nIf clients don't obey, they can still show the content of messages that were redacted\nIf a server is not federated to other servers a complete deletion of the content of a message could be a possibility to implement in the future. @kfatehi i think you are causing havoc on your database like this. There are a lot more tables affected and the federation completely breaks if you Yost delete stuff directly.\n\nPlease use the implemented prune functionality for this. There is a purge Feature that really deletes the messages #911\nThis request was another idea instead of Prune,redact. The problem is following: In some Rooms, there is just the need of the history being deleted after a certain time. Since really deleting the messages is not possible if the room is federated, because you can only delete it in your homeserver and it will be federated back to live from other  homeservers.\nThe only solution at the moment is to redact all old posts, which will be federated then. (I am aware, that some homeservers could be modified to not to obey the redact flag, but the solution would be \"best effort\")\nIt would be easy to create a script, that redacts all posts older than a certain time, so this would be a nice feature, if it would exist directly in the room configuration.\nSuch an option should be completely transparent to all members, so you see, that if you write something in that room, it will  only last for that long.. @Half-Shot said:\n\nsignatures are always left.\n\nI can only guess what he meant: if you redact messages, there is a rest left in the database, for example the dateof the posts, and who posted it but \"signature\" is not the correct term for these \"relics\". Yes, Great conclusion! So please include this behaviour someone.\nWhat can we do to help accelerate the development in this direction, so we get these options?\n. Any news here? An optional per-room auto-deletion feature is strongly needed!. I added a script to the contrib section, that you can use: https://github.com/matrix-org/synapse/tree/develop/contrib/purge_api\nThis script only purges the history, so if the rooms are federated, the messages are not gone (unless purged everywhere). If you have enhancements to the script then create a pull request here.\nOr contact me in https://riot.im/app/#/room/#synapse-admins:yuhu.ddns.net as user rubo77. finding out, how to create the user and password for the postgresql database took us 2 hours to find out. so with this small hint, you help users that are not used to Postgresql a lot.. Is this still an issue?. related: https://github.com/turt2live/matrix-email-bot. I had the same problem, but I had no entry in event_forward_extremities, only one in current_state_events I only had to delete the current state for only my user. No need to restart the synapse server:\npsql --dbname=\"synapse\" --command=\"delete FROM current_state_events WHERE room_id like '%XqBunHwQIXUiqCaoxq:matrix.org' and state_key like '@rubo77:matrix.ec%';\"\n\nAfter that I could rejoin matrix-dev. My synapse thought, I was in #matrix-dev, although I wasn't there. My database had this entry:\nselect * FROM current_state_events WHERE room_id like '%XqBunHwQIXUiqCaoxq:matrix.org\n' and state_key = '@rubo77:mydomain';                      \n               event_id                |            room_id             |     type      |        state_key\n---------------------------------------+--------------------------------+---------------+--------------------------\n $14713765517956PLlfc:mydomain | !XqBunHwQIXUiqCaoxq:matrix.org | m.room.member | @rubo77:mydomain\nI could fix it by deleting the current state with:\ndelete FROM current_state_events WHERE room_id = '!id:matrix.org' and state_key = '@rubo77:mydomain';\n\nThen I could rejoin the room and everything is back to normal. If a very active user would be deleted this way you suggest, that would destroy conversations completely.\nimagine this user chatted a lot with others in hundreds of rooms, others took a lot of effort to answer questions of this user,....\nall those work of others would be in vain. that wouldn't be fair.\nAlso this would violate the Idea of the Matrix: What is said can't be unsaid.\nAn exception would be rooms, where everyone agrees, that they are moderated and messages are not persistent all the time.\nThe only possibility I can imagine to free a username for a new registration would be to remap the old posts to a new user with the same name, so the messages are unlocked from the user, that wants to be deleted.\nOnly a user that has never said anything could be deleted completely!. You can redact all your messages already one by one before you delete your account.\nThose redactions are already federated to other servers, so you can write a script that does this for you already..\nBut you can never be sure, that other servers obey to the redact command though.. ok. But I share my solution here:\n1.\nI created a backup table from a psql-dump we did earlyer, by splitting that dump into smaller files with\nhttp://unix.stackexchange.com/questions/351546/split-a-large-postgresql-dump-into-smaller-files\n\n\nI created the backup table:\nCREATE TABLE event_forward_extremities_bak (\n event_id text NOT NULL,\n room_id text NOT NULL\n);\nALTER TABLE event_forward_extremities_bak OWNER TO \"irc-bridge\";\n\n\n3.\ncreated the data for the backup:\nsed s/event_forward_extremities/event_forward_extremities_bak/g event_forward_extremities.sql > event_forward_extremities_bak.sql\n\n4.\nimported the data:\npsql --dbname=\"synapse\" <event_forward_extremities_bak.sql\n\n\n\ninserted the data from the backup table into the main table:\nINSERT INTO event_forward_extremities(event_id, room_id) select event_id, room_id from event_forward_extremities_bak where room_id='!GcVTCMTBlioxonJYWO:matrix.eclabs.de';\nINSERT 0 1\n. Another solution is to just add a new entry into event_forward_extremities for that room by getting the last event_id from the history of that room and add this as new value:\nINSERT INTO event_forward_extremities(event_id, room_id) values ('$148843969015013bQuUW:matrix.eclabs.de', '!SOTLohXjvBbIlLJHgT:matrix.eclabs.de');\nINSERT 0 1\n. It seems like auto_vacuum = FULL does not have any effect?\n. And why did i get the error, that the package is missing eventually, only right after I enabled url-previews?. And why did i get the error, that the package is missing eventually, only right after I enabled url-previews?. extra PR here: https://github.com/matrix-org/synapse/pull/3194. I added it as second commit. Why renaming a file, that you just created?. I thought, the name is irrelevant. Just this instruction here should use only one name as example. I think the difficult part here is, that you have to create that file yourself with the example above. It is irrelevant how you name it. I am not sure if this is the most elegant solution to create the user, I have no system at the moment to try out a shorter solution. \n\n\nfeel free to edit this section if there is a shorter solution.\nI just wanted to make sute, that this section is included in the istructions, cause it is essential to know for unexperienced users.. this is outdated. this is outdated. Ok,so I guess those 2 lines have to be removed too:\n su - synapse_user\n psql\n\n    . done. This should have been \"Please click the button below if you **have read** the privacy policy of this homeserver.\"\n\nBecause if you have a button to \"Agree\" you also need a workflow to \"disagree\" later on, which we don't want to provide.\nsee https://github.com/matrix-org/synapse/pull/4185. ",
    "mweinelt": "Traceback:\n2016-06-05 01:09:27,618 - synapse.handlers.auth - 461 - INFO - POST-0- Authenticating @hexa:darmstadt.ccc.de with LDAP\n2016-06-05 01:09:27,625 - synapse.http.server - 135 - ERROR - POST-0- Failed handle request synapse.http.server._async_render on <synapse.rest.ClientRestResource object at 0x7fa3c5361490>: <SynapseRequest at 0x7fa3c0638440 method=POST uri=/_matrix/client/api/v1/login clientproto=HTTP/1.1 site=8448>\nTraceback (most recent call last):\n  File \"/home/matrix/synapse/synapse/http/server.py\", line 114, in wrapped_request_handler\n    yield request_handler(self, request)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/matrix/synapse/synapse/http/server.py\", line 260, in _async_render\n    callback_return = yield callback(request, **kwargs)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/matrix/synapse/synapse/rest/client/v1/login.py\", line 96, in on_POST\n    result = yield self.do_password_login(login_submission)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/matrix/synapse/synapse/rest/client/v1/login.py\", line 150, in do_password_login\n    password=login_submission[\"password\"])\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/matrix/synapse/synapse/handlers/auth.py\", line 361, in login_with_password\n    if not (yield self._check_password(user_id, password)):\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/matrix/synapse/synapse/handlers/auth.py\", line 435, in _check_password\n    valid_ldap = yield self._check_ldap_password(user_id, password)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1128, in _inlineCallbacks\n    result = g.send(result)\n  File \"/home/matrix/synapse/synapse/handlers/auth.py\", line 468, in _check_ldap_password\n    self._connection.start_tls_s()\nAttributeError: 'AuthHandler' object has no attribute '_connection'\n. This also prevents the \"TLS already started\" error message, when both ldaps and ldap_tls: True were specified.\n. Indeed this will break when using the dist-package on Debian Jessie (python3-ldap==0.9.4.2):\nTraceback (most recent call last):\n  File \"/home/matrix/.synapse/bin/synctl\", line 4, in <module>\n    __import__('pkg_resources').require('matrix-synapse==0.16.0rc1')\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2927, in <module>\n    @_call_aside\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2913, in _call_aside\n    f(*args, **kwargs)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2940, in _initialize_master_working_set\n    working_set = WorkingSet._build_master()\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 635, in _build_master\n    ws.require(__requires__)\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 943, in require\n    needed = self.resolve(parse_requirements(requirements))\n  File \"/home/matrix/.synapse/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 829, in resolve\n    raise DistributionNotFound(req, requirers)\npkg_resources.DistributionNotFound: The 'ldap3' distribution was not found and is required by matrix-synapse\nThis, I believe, is because the package name was changed in 0.9.7.1 2015.01.05:\n- Project renamed from python3-ldap to ldap3 to avoid name clashing with the existing python-ldap library\n. - moved ldap3>=1.0 into optional dependencies\n- rewrote the config parser, stating requirements and testing for ldap3 availability\n- try/except for ldap3 import in auth.py\n. Hi. \nMake sure to uninstall python3-ldap3 via apt. Then run pip install --upgrade ldap3. \nWhat issue does synapse report on start? \nBest regards \nMartin \nOn 11 August 2016 03:05:06 CEST, simsasaile notifications@github.com wrote:\n\nHi @mweinelt,\nthanks for the improvement for the ldap-authentication.\nHow can I get python-ldap3 >=1.0 on debian jessie?\n- With apt-get install python-ldap3 the version is 0.9.4.2 as you\n  already commented above\n- also tried pip install ldap3 but matrix-synapse still doesn't start\n  with the ldap-config\n\n\nDiese Nachricht wurde von meinem Android-Mobiltelefon mit K-9 Mail gesendet.\n. fixed in e380538b594d4fa55e98818df0061efbdf3cb35b\n. lgtm\n. I don't think that pull request addresses an actual issue.\nThe way I see it there are three ways for synapse to connect to your ldapd:\n ldap://127.0.0.1 or ldap://localhost with start_tls: False\n  which is plain, unencrypted\n ldap://127.0.0.1 or ldap://localhost with start_tls: True\n  connect plainly, but request an upgrade to TLS on the plain port\n* ldaps://ldap.yourdomain.com with start_tls: False\n  connect with TLS, use a valid hostname for certificate validation\nAnyway, please open your issue over at https://github.com/matrix-org/matrix-synapse-ldap3/issues.. @erikjohnston probably tonight.\n. This was addressed in https://github.com/matrix-org/matrix-synapse-ldap3/commit/f7460ece6b3552810f82d7d1080067080c113c92.. This was addressed in https://github.com/matrix-org/matrix-synapse-ldap3/commit/f7460ece6b3552810f82d7d1080067080c113c92.. Can you please rebase your issue against the latest version of https://github.com/matrix-org/matrix-synapse-ldap3 and then resubmit the issue over there? The ldap module was externalized.. Can you please rebase your issue against the latest version of https://github.com/matrix-org/matrix-synapse-ldap3 and then resubmit the issue over there? The ldap module was externalized.. For what it's worth, ldap changes should be requested against https://github.com/matrix-org/matrix-synapse-ldap3.\nI don't think your pull request to make StartTLS work for you is the correct way, because you would send your credentials in plain, before switching over to TLS.. This was addressed in https://github.com/matrix-org/matrix-synapse-ldap3/commit/f7460ece6b3552810f82d7d1080067080c113c92.. Agreed, that I missed.\n. Glad to work on this in another iteration.\n. Prefixing with _ and calling it internal looks like a duplication, why not call it _ldap_bind?\n. As I understand it that would mean to authenticate against the ldapd in plaintext.. This was addressed in the matrix-synapse-ldap3 module. Whether SIMPLE or AUTH_SIMPLE works for you is dependant on your ldap3 version.. ",
    "bartekrutkowski": "Signed-off-by: Bartek Rutkowski \n. Signed-off-by: Bartek Rutkowski \n. ",
    "pik": "What's the status on this? Is there a summary of the issues / intended or even a log of the discussion around somewhere? \nProbably related: https://github.com/vector-im/riot-web/issues/2825 https://github.com/vector-im/riot-web/issues/2737. @erikjohnston Thanks for catching up on this. I'm not very familiar with vector-web either but https://github.com/matrix-org/matrix-react-sdk/blob/master/src/components/structures/UserSettings.js#L101 refreshFromServer is called every-time the settings page is toggled, since there is no way to guarantee update order (it can still race atm, the refresh just reduces the probability). \nThe idea is that adding a lock_version will allow the server to load the settings right away (and say trigger a background refresh) but if it sends an out-dated update to the server it can be safely ignored with an error message (again, this can be handled on the front-end maybe via. push subscription etc. but closer-to-real-time-updates != locking and I think the later is the more technically correct approach, even if push updates are later added to the client). \nIf this sounds good I will add updated tests. As far as I know the API is backwards compatible (but internal tests need to be updated). \n@ara4n \nI would like to make one observation which maybe is relevant, atm the default home-server implementation Synapse is effectively built to run vector-web and it's corresponding mobile-clients (e.g. api endpoints specific to the IRC/Slack style usage for Matrix), but in reality user-settings doesn't need a custom implementation per say, since any user-setting could technically be represented by a single-user room (e.g. I just write my settings as messages to the room) - with an aggregation behavior (it defines how to generate state from the message log and prunes old messages). Just something for future consideration.\n. @erikjohnston Thanks for catching up on this. I'm not very familiar with vector-web either but https://github.com/matrix-org/matrix-react-sdk/blob/master/src/components/structures/UserSettings.js#L101 refreshFromServer is called every-time the settings page is toggled, since there is no way to guarantee update order (it can still race atm, the refresh just reduces the probability). \nThe idea is that adding a lock_version will allow the server to load the settings right away (and say trigger a background refresh) but if it sends an out-dated update to the server it can be safely ignored with an error message (again, this can be handled on the front-end maybe via. push subscription etc. but closer-to-real-time-updates != locking and I think the later is the more technically correct approach, even if push updates are later added to the client). \nIf this sounds good I will add updated tests. As far as I know the API is backwards compatible (but internal tests need to be updated). \n@ara4n \nI would like to make one observation which maybe is relevant, atm the default home-server implementation Synapse is effectively built to run vector-web and it's corresponding mobile-clients (e.g. api endpoints specific to the IRC/Slack style usage for Matrix), but in reality user-settings doesn't need a custom implementation per say, since any user-setting could technically be represented by a single-user room (e.g. I just write my settings as messages to the room) - with an aggregation behavior (it defines how to generate state from the message log and prunes old messages). Just something for future consideration.\n. > I think this is probably going to be less of an issue with the new profile API, where you can download all the profile information in one go, rather than doing different requests. \nDoes that change the current situation much? Any re-opening of the profile-page will still require a request to complete before the profile page can load (or otherwise show potentially stale info while it's updated in the background)? I think optimally profile updates should be pushed out to different clients (rather than re-requested) but imho locking is still the more technically correct kind of way to handle changes which do not have a dedicated ordering? \nI'll create a spec proposal if what I'm saying still seems to apply. . > I think this is probably going to be less of an issue with the new profile API, where you can download all the profile information in one go, rather than doing different requests. \nDoes that change the current situation much? Any re-opening of the profile-page will still require a request to complete before the profile page can load (or otherwise show potentially stale info while it's updated in the background)? I think optimally profile updates should be pushed out to different clients (rather than re-requested) but imho locking is still the more technically correct kind of way to handle changes which do not have a dedicated ordering? \nI'll create a spec proposal if what I'm saying still seems to apply. . Yeah probably needs to come with a pre-migration 'clean-up-task'. I will update. . Ah, apologies, it seems what I am asking about already exists (still navigating my way around the code-base). Updated. . > I don't necessarily think that having to register with the server necessarily harms UX. Your client, or indeed a server-side application can automatically register with the matrix server; provided this can be done without user-interaction there is no need for it to affect UX.\nYeah any automatic registration to a restricted permission set would also work (guest accounts are really too powerful I think to hand out automatically atm). So an ephemeral kind of access token (as I mentioned above) or being able to register a guest account with further restrictions would work for my particular use-cases. \nMy concern with any too specific implementation is that next time someone needs a different kind of restrictive access e.g. consider a user wants to give an application read/write but only to a particular room_id then there is another unsolved problem. \n\nI like the idea of extending the macaroons to apply further restrictions; however I think it's a mistake to try to do it in a general way so that clients can apply arbitrary restrictions based on HTTP method, URL, and query-parameters: this is always going to be leaky. Better to specify higher-level caveats (allowed_room_ids, read_only) which the server then enforces appropriately across all APIs.\nI'm not sure how plausible it is to have clients able to add a room_id caveat to an existing access-token: think of something like /sync, which returns data from many rooms (as well as non-room-specific information) - how would a room_id caveat apply to that? You could restrict the results from /sync based on the caveat, but that would mix up the authorisation with the behaviour in a bad way. \n\nYeah I was also worried about this as well. I agree that endpoint restrictions sounds very leaky and having to pass caveat conditions down to behavior (e.g. handlers.get_stream(caveat_restrictions, *args) doesn't sound very nice. \nWhat about making restrictions based on creating a kind of sub-user? Than a token would fetch (whether from DB or by parsing the macaroon) user_info with any valid subset of existing user_info. So if the current user is a member of rooms A, B, C - a restricted token might retrieve a 'mock' version of that user who is only a member of room B. At least that would solve the /sync issue. \nFor request method, I guess just read, write, read/write might be high level enough or alternatively allow the mock user token to specify a restricted a power-level for joined rooms.  e.g. \njs\njoined_rooms = { \n  room_id: 'any room the original user is a member of', \n  access_type: ['read', 'write', 'read/write'] //one of\n  // Or\n  power_level: 'any power level equal or lower to the original user's' \n}\n. > We should still move it to a googledoc if you're okay doing so. \nApologies for the delay on the spec part. Here is a link to a preliminary Google Doc: https://docs.google.com/document/d/1CnNbYSSea0KcyhEI6-rB8R8u6DCZyZv-Pv4hhoXJHSE/edit?usp=sharing\nSince a lot of choices made in this PR (implementation wise) depend on some specification choices I didn't go into exact detail of implementation pending agreement on the Spec more generally (they can be fleshed out later). \n\nHow does it actually sum the aggregates? O:-) In other words, if 100K users click 'like' on an event, do we then get 100K blobs in the aggregation_data field? I'd expect to receive the sum instead.\n\nIf Slack style emoji's are desired e.g. Matthew, Pik reacted with :fireworks: -- than I guess append would be the only way to do it, depending on the application they might not care for those details though, in which case client-side aggregation or support for more conditional operators (I added the discussion to the google doc under Conditional Logic & Aggregation Logic).\n\nThe idea of being able to define a freeform schema for the aggregation metadata is interesting. We don't let users define schemas for events anywhere else; they're always defined out-of-band (i.e. in the swagger spec). What is the advantage of defining a schema here?\nHow does it handle federation?\n\nLet's pick these up in Google Doc discussion/comments? \n. > We should still move it to a googledoc if you're okay doing so. \nApologies for the delay on the spec part. Here is a link to a preliminary Google Doc: https://docs.google.com/document/d/1CnNbYSSea0KcyhEI6-rB8R8u6DCZyZv-Pv4hhoXJHSE/edit?usp=sharing\nSince a lot of choices made in this PR (implementation wise) depend on some specification choices I didn't go into exact detail of implementation pending agreement on the Spec more generally (they can be fleshed out later). \n\nHow does it actually sum the aggregates? O:-) In other words, if 100K users click 'like' on an event, do we then get 100K blobs in the aggregation_data field? I'd expect to receive the sum instead.\n\nIf Slack style emoji's are desired e.g. Matthew, Pik reacted with :fireworks: -- than I guess append would be the only way to do it, depending on the application they might not care for those details though, in which case client-side aggregation or support for more conditional operators (I added the discussion to the google doc under Conditional Logic & Aggregation Logic).\n\nThe idea of being able to define a freeform schema for the aggregation metadata is interesting. We don't let users define schemas for events anywhere else; they're always defined out-of-band (i.e. in the swagger spec). What is the advantage of defining a schema here?\nHow does it handle federation?\n\nLet's pick these up in Google Doc discussion/comments? \n. I might be missing something - but I don't think this is sufficient or an effective way to breakdown sync - since which room is synced is still not granular. The client should really be able to specify which room should be synced first, otherwise it's going to waste time syncing rooms which the user might not be currently interested in, no? . ",
    "kyrias": "Does this still happen for you?. @glyph Do you know the state of using IPv6 resolvers in twisted, if there's any work going on regarding it?  Currently twisted's trunk still doesn't work with them.. @glyph An IPv6 resolver is a resolver queried over IPv6.. @glyph Yes.\n>>> from twisted.names import client\n>>> client.getHostByName('google.com')\n<Deferred at 0x7f1818a1f290 current result: <twisted.python.failure.Failure twisted.internet.error.InvalidAddressError: >>. Would be nice if this supported Postgres too, but you should probably recommend stopping synapse before running the query against the sqlite3 DB, because multiple writers to an sqlite3 DB is a recipe for corruption.. Would be nice if this supported Postgres too, but you should probably recommend stopping synapse before running the query against the sqlite3 DB, because multiple writers to an sqlite3 DB is a recipe for corruption.. LDAP support was moved out of synapse, so I migrated this issue over to that repo instead.. Hm, wouldn't it make more sense to have this use the git repo by default, and then optionally supporting the latest release?. For the record, I got confirmation in #matrix-dev that the separated one works [here](https://matrix.to/#/!XqBunHwQIXUiqCaoxq:matrix.org/$148110723933KEYSm:matrix.molinkx.com).. Overall the issues related to system dependencies being updated is solved by using virtualenvs.. What would clash?  It's just the same risk as with anything you install manually using pip, where any system-dependency that a package depends on is updated or removed might break things, which is why virtualenvironments are generally recommended for production use of things installed with pip.. I wonder if it would make sense to have support for user aliases, similarly to room aliases.\n\nEdit: Actually, eventual group support would be rather nice for this.. I am working on it, though I can't make any promises on how much freetime I'll have to work on it. And next-gen HS work ey? ;D. I am working on it, though I can't make any promises on how much freetime I'll have to work on it. And next-gen HS work ey? ;D. I'm getting the following:\n2016-11-29 08:46:52,266 - synapse.http.server - 126 - ERROR - GET-146558- 401: Unauthorized\nTraceback (most recent call last):\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/synapse/http/server.py\", line 116, in wrapped_request_handler\n    yield request_handler(self, request, request_metrics)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1258, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/synapse/http/server.py\", line 255, in _async_render\n    callback_return = yield callback(request, **kwargs)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1258, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/synapse/rest/client/v1/room.py\", line 399, in on_GET\n    event_filter=event_filter,\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1258, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/synapse/handlers/message.py\", line 127, in get_messages\n    room_id, max_topo\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1258, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/synapse/handlers/federation.py\", line 595, in maybe_backfill\n    success = yield try_backfill(likely_domains)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1258, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/synapse/handlers/federation.py\", line 562, in try_backfill\n    extremities=[e for e in extremities.keys()]\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1258, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/synapse/handlers/federation.py\", line 341, in backfill\n    extremities=extremities,\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1258, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/synapse/federation/federation_client.py\", line 232, in backfill\n    dest, context, extremities, limit)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1258, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/synapse/http/matrixfederationclient.py\", line 398, in get_json\n    timeout=timeout,\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1260, in _inlineCallbacks\n    result = g.send(result)\n  File \"/home/kyrias/code/matrix/env/lib/python2.7/site-packages/synapse/http/matrixfederationclient.py\", line 217, in _create_request\n    response.code, response.phrase, body\nHttpResponseException: 401: Unauthorized. On my own HS. Err, whops, deleted the wrong branch .-.. Err, whops, deleted the wrong branch .-.. (Also, why is it doing it five times?). (Also, why is it doing it five times?). Huh, which test?  Because without it, this case is broken due to py2 handling of Unicode.. Huh, which test?  Because without it, this case is broken due to py2 handling of Unicode.. And I just tried running the tests from master, and they succeed without any failures?  Can't find any failures related to this or the develop branch after this in develop either.. And I just tried running the tests from master, and they succeed without any failures?  Can't find any failures related to this or the develop branch after this in develop either.. s/from master/from develop/. s/from master/from develop/. Ah, seems they're also using non unicode strings.  Is there a simple way to run those tests from the commandline btw, since it didn't fail from setup.py test?. Ah, seems they're also using non unicode strings.  Is there a simple way to run those tests from the commandline btw, since it didn't fail from setup.py test?. Yeah, it seems setup.py test runs the same tests as tox -e py27 though when I try running ./jenkins-unittests.sh I just get the help output of the coverage command, argh.. Yeah, it seems setup.py test runs the same tests as tox -e py27 though when I try running ./jenkins-unittests.sh I just get the help output of the coverage command, argh.. tox -e py27 seems to run coverage properly, but no actual unit tests?. tox -e py27 seems to run coverage properly, but no actual unit tests?. Oh, managed to get them run by setting PYTHONPATH manually.. One problem though is that the default bind_address is an empty string which twisted interprets as \"listen to all IPv4 addresses\", so we're still not IPv6 friendly by default.  I'd recommend we switch to use :: as the default bind address, which will cause it to bind to all IPv4 and IPv6 addresses.. Seems I missed to add the fixed imports originally, so the tests would need to be re-run.. ```\nNo output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.\nCheck the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received\nThe build has been terminated\n```\nuh, is this a known issue?. org.tap4j.parser.ParserException: Error parsing TAP Stream: Missing TAP Plan.\n?. It would also be a good idea to be able to specify multiple bind_addresses, and I have this implemented uncommitted locally already.. (Thanks for the quick merge \u2764). It seems like this should have worked for a long time, but for some reason hasn't.  On my HS it's started working properly though, which I think is a twisted change.. Having poked at it more it seems like somehow using HostnameEndpoint is causing it, but I'm not sure what exactly, and haven't looked at the twisted code yet.\n@Glyph Any thoughts?. Thanks for looking into it!  Currently running twisted 16.7.0rc1 and synapse v0.18.7-rc2-33-g2f4b2f47, and have it set to listen only to 0.0.0.0.\nNothing that I can think off of the top of my head, alas.  Not very fast, just tested and got 773.23 Mbit/s down and 407.13 Mbit/s up.  Don't have any code changes, so shouldn't be!. @glyph I can probably get you access to the manhole ssh service in synapse if that would help though.. I can confirm that it does seem to be fixed by that for me as well, though I'm going to let it run for a couple hours and report back after that just in case there's anything else going on, heh.. \nThat's the open FDs over the last 3 hours, which I'm pretty happy with!\n@Lukasa I guess it depends on the timeout.  If possible a graceful termination would pretty much always be preferable, but this is of course not always possible, hm.. I think it might be worth it to split all the install instructions into an INSTALL file to get the README a bit more manageable.. Gah, d'oh, to greedy of a regex, sorry about that, fixed now.. Missing closing paren. TCP4ClientEndpoint is used as a default value in in the SpiderEndpoint and SRVClientEndpoint init functions.. This wrapper also needs to take a timeout parameter for use in HostnameEndpoint.. Mostly pointing it out as another place where it should have been replaced with HostnameEndpoint, but since they're only instantiated in one place, I'm not sure whether it would be simpler to just remove the default value.. I was thinking about that, but also need to specify that having both uncommented at the same time won't work on Linux, so I was thinking about whether to document this in the default config or somewhere else?. On Linux you'll get an errno 98, yeah, annoyingly.\nComment added below.. I just didn't change that part, but it seems dict() is used in a bunch of places as well\n\u03bb git grep ' dict\\(' | wc -l\n61\nI can certainly change it to {} instead though.. ",
    "dkastl": "I have the same issue with Japanese full text search, and it's a serious problem. I have learned about PGroonga (http://pgroonga.github.io/), which looks like a good solution.\nHowever, I'm not sure if this would be a practical solution here, and where I had to make changes to make it work. It would be best, if PGroonga could be used if available.. ",
    "KentShikama": "Yeah 2. would be ideal indeed. Diaspora already does something like that with a Prosody (XMPP) mod: a couple hundred lines of lua code I believe.\nThanks for allowing this!\n. Actually let me double check something before this is merged.\n. Actually let me double check something before this is merged.\n. Conversation for why this would be useful: https://kentshikama.com/messenger/#/room/#vector-dev:matrix.org/$14686556611517EDanG:kentshikama.com\nEssentially I need a way to poll for the total unread notifications without doing a full sync every couple of milliseconds.\nUnfortunately, I just realized that if a filter is applied then this code might return a count that is less than I expect.\n. Conversation for why this would be useful: https://kentshikama.com/messenger/#/room/#vector-dev:matrix.org/$14686556611517EDanG:kentshikama.com\nEssentially I need a way to poll for the total unread notifications without doing a full sync every couple of milliseconds.\nUnfortunately, I just realized that if a filter is applied then this code might return a count that is less than I expect.\n. > how about doing a full sync but with everything filtered out? \nYeah that was our initial implementation doing this every few ms. It still made the log file bloat up quite a bit.\nA blocking long poll returns only the notification counts for a specific room (assuming it was a messaging event from that room). We could use a client side dictionary to add up notification counts but how will we decrement the count if a user read a room?\n. @ara4n What do you say about a PR that would make it so that the long poll would return when the notification count for any room changes?\nEdit: nvm\u2026still need to think\n. @ara4n So I dug up this\n\"always_include(bool): Always include this room in the sync response, even if empty.\" \nfrom https://github.com/matrix-org/synapse/blob/master/synapse/handlers/sync.py#L945\nand \n```\n            if room_sync or always_include:\n                notifs = yield self.unread_notifs_for_room_id(\n                    room_id, sync_config\n                )\n            if notifs is not None:\n                unread_notifications[\"notification_count\"] = notifs[\"notify_count\"]\n                unread_notifications[\"highlight_count\"] = notifs[\"highlight_count\"]\n\n```\nfrom https://github.com/matrix-org/synapse/blob/master/synapse/handlers/sync.py#L1015\nwhich is why the room isn't part of the sync result if it doesn't contain updates. Would you accept a solution which exposes the always_include? Currently always_include is set based on whether it is a full_state sync or not.\n. Yeah it does indeed\n. Whoops\u2026I wonder how this passed on my local machine. Perhaps I forgot to restart the server once I removed the hardcoded pepper I was testing with.\n. ",
    "4nd3r": "@erikjohnston is this manual per room API documented somewhere or can anyone can give an example?\n. @erikjohnston thanks. does this API also delete uploaded media from disk?\n. FYI #1621. FYI #1621. messages content stay in database, so that's bug.\nif I delete something I don't want to be there for various reasons, I expect it will be deleted, not just hidden.. there are companies who are using or wish to use synapse for internal communication, so no federation. sometimes they need to wipe all data about certain project, when project ends. that's quite common in some areas. that also includes chat logs, encrypted or not. so deleting events is about compliance and audits.\nalso without deleting content you don't have plausible deniability.\ni think it's about labeling things correctly - if you enable federation, you lose control over your messages. but if your room (and maybe server) is unfederated, then you should have complete control over your data, that includes ability to safely delete events or other infromation from database.\nedit: also GDPR. please see my comment here: https://github.com/matrix-org/synapse/issues/1621#issuecomment-269857023. joined, idled a while and /part - got error Not a known room. joining again didn't help.\nafter 15 minutes or so room came to life with lots of messages and after that /part worked.. btw, debian doesn't have twisted 17. . > I had missed a new Twisted version was out.\ndoes new version always means improvements?\ndoes synapse use or want to use something v17 specific?\nhow long twisted developers support older versions?\nthis can be only valid reason for requirements bump imho.\n\nThis is going to be a nuisance.\n\nstretch (next stable) is in freeze and with v16, same in sid (unstable). maybe Debian Python Modules Team will package v17 after stretch release in testing/unstable and backport it for stable... who knows.\nbut untill then I really hope that I and other Debian purists don't have to mess with pip, virtualenvs etc. also when synapse is released as package (in b4 docker), it's easier to set up, manage and upgrade. pips, dockers and other magic just adds unnecessary layer of complexity. YMMV. and \"bleeding edge\" is just stupid reason for upgrading things.\nof course, nobody have to listen crumpy sysadmins or BOFHs  :>. nobody is really using ipv6, not even github :>\nok, sorry for noise, didn't pay attention because in https://github.com/matrix-org/synapse/issues/1002#issuecomment-279232114 he said \"error was because of incorrect reverse proxy setup, not IPv6\". so I misunderstood.\nanyway, there was someone who said he is going to package synapse for Debian propely.... what does the journalctl -xn or /var/log/matrix-synapse/homeserver.log say?. ",
    "Ekleog": "Sorry for being so slow to answer, I completely forgot to answer. On latest release everything seems to work fine, so I guess this issue is solved.\nThanks!\n. ",
    "plinss": "Having the same issue. Trying to join the \"ongoing conference\" creates a new room FWIW (and doesn't seem to work).. ",
    "aoh0x7DE": "That's not quite how the filtering works. If all of a room's events for the current poll are filtered out, a change in the room's notif count will neither trigger the response nor cause the notification count to be included when the response is sent. As such, with or without the global count, we'll actually need to allow one event of every type that could change the number of notifications even though we're not interested in the event at all other than as a trigger for the response being sent.\nIn terms of summing the notif count per room, it's a possibility we considered, but I dislike it as a solution inasmuch as it requires the client to duplicate work being done by the server (i.e., keeping track of all rooms the user is in and their individual counts) and introduces the potential for some nasty errors should the client's model of what's going on diverge from the server's.\nWhether this should be part of /sync is debatable, since it is, as you say, somewhat redundant with the data already included and does also still require the client to ask for a bunch of events they're not really interested in to get the changes in real time, but I think having a clean and simple way to track the total number of unread notifications is something that should be in the API.\n. ",
    "jots": "nice!  Are you running synapse with a mysql backend?  I would prefer mysql to postgresql myself but haven't found much out there about people using synapse with mysql.\n. ",
    "Half-Shot": "Ooookay? So is dendron testing off an older synapse? set_state now has 4 arguments with one optional.\nEDIT: If this is about maintaining some kind of backwards compat then I could just write another function just for sync, but I don't understand the problem here.\n. O.o\n...I'll make it happy\n. I stealth edited it on my original message?\n. Hm, strange. \n. Looks like it's getting stuck: Too many open files: '/proc/28412/statm'\n. Heh, I appear to be getting symptoms of this too now. Hanging (and in some cases, hanging the whole system due to pushing the load averages to the point of no return). I also seem to have the Too many open files error. . I'm quite excited for a feature like this, as it also fits my needs for counting various properties of messages.\nHowever, could you make this into a google doc or something as a spec doc. It feels too cramped to be stuck on a PR. Especially since this is a spec change and really needs to be reviewed in matrix-doc first.. -m synapse.app.homeserver is telling python what module to load, which is synapse. This shoudln't need to be changed.. Been having this too. Synapse is now on the matrix user on my server (got around to doing it) with it's own file limits which seems to help somewhat. \nRegardless, it concerns me hugely that it just gets stuck spinning at 100% usage causing my system to freeze up when it can't open a file... I'm not happy with this. Pruning is intended to be used to save space, not to erase history. Redaction and pruning are entirely different things. By pruning, you are saving space on your server, not everyones.\nI would consider it counterproductive to the history-first nature of Matrix to start allowing mass history removal across servers.. I'm not happy with this. Pruning is intended to be used to save space, not to erase history. Redaction and pruning are entirely different things. By pruning, you are saving space on your server, not everyones.\nI would consider it counterproductive to the history-first nature of Matrix to start allowing mass history removal across servers.. I want to be clear that what your asking is also against the use case of the Prune API.\nIt's sole purpose is to free up space on the host. It is not intended for redaction. Redaction is a different concept designed for removing events across servers.\nWhat you are asking for is a separate API to remove events in bulk, as a redaction. I don't see this happening due to my reasons given before.\nTL;DR - The prune API is a local admin api to free space, not to delete history.. I want to be clear that what your asking is also against the use case of the Prune API.\nIt's sole purpose is to free up space on the host. It is not intended for redaction. Redaction is a different concept designed for removing events across servers.\nWhat you are asking for is a separate API to remove events in bulk, as a redaction. I don't see this happening due to my reasons given before.\nTL;DR - The prune API is a local admin api to free space, not to delete history.. I don't understand, what are you hoping to achieve by redacting over pruning. The only difference is that everyone's server gets affected v.s. yours. Redaction will leave some data, and as Erik explained here, you will still lose more or less the same amount of information in both cases. On top of the fact that deleting events is literally impossible to do entirely due to Matrix's design, so signatures are always left.\nThe only pro I can see to your argument is that by redacting, people can't paginate to get it back which causes issues for people like me, who want to retain all my history where I can.\nTL;DR\n\nIf you want to delete old messages from your server, that's fine. You have exactly no right--and no ability to enforce--that I also delete them.\n\nEDIT: I would like to clear up that #1480 is a bug predating pruning which became it later on.. I don't understand, what are you hoping to achieve by redacting over pruning. The only difference is that everyone's server gets affected v.s. yours. Redaction will leave some data, and as Erik explained here, you will still lose more or less the same amount of information in both cases. On top of the fact that deleting events is literally impossible to do entirely due to Matrix's design, so signatures are always left.\nThe only pro I can see to your argument is that by redacting, people can't paginate to get it back which causes issues for people like me, who want to retain all my history where I can.\nTL;DR\n\nIf you want to delete old messages from your server, that's fine. You have exactly no right--and no ability to enforce--that I also delete them.\n\nEDIT: I would like to clear up that #1480 is a bug predating pruning which became it later on.. Should this be moved to matrix-react-sdk? \nServer deduplication is a separate bug but this seems more like something that should be done in the client.. Unless synapse also generates this. I'm tempted to say this isn't a bug. Could you clarify on whether this was user generated or the synapse configuratoratron did this?. Apologies, we should definitely be throwing something more meaningful to the user that it shouldn't be used. \n\nPatch the code to allow for special characters\nYou'd need to replace all the \\ in the string with \\\\ which is probably fine.\n\nWe should also be wrapping round this and throwing for anything unexpected just in case. I would prefer it if synapse crashes so the user isn't under the false understanding that the shared_secret is in use.\n. Forever.. That should be configurable already in Riot?\n\n. Recommendation would be to remove the invite from the db if the room can't be found? You're risking upsetting the room on the remote server, but it's that or having stuck notifs for everyone else.\nAdditionally, some kind of check to ensure an incoming invite makes sense before it makes it's way into storage?. okay to merge?\n\n. Releases are signed.\n\n. uuuuuhuh. Not quite sure how https://github.com/matrix-org/sytest/blob/develop/tests/30rooms/30history-visibility.pl#L375 is now failing :/. Alrighty, then I'll just ignore that one for now. When you've got a second, could you look through this and see if there is anything wrong with the PR itself?. Changes made. \nNow looking at @erikjohnston like https://cloud.githubusercontent.com/assets/2072976/24215816/e11c02ea-0f31-11e7-9dda-48448d03b6d3.jpg\nEDIT: ~~And the tests have done weird things :worried:~~ Nvm, stray for.. >I'm a bit worried that if the display names get out of sync we won't have any way of just resetting all the display names. This is particularly annoying because the updating of the memberships events happen one at a time, so confusion reigns if someone sets their display name twice in rapid succession.\nYeah this worries me too. I have a few options:\n\nCustom members should have an additonal key that says \"leave me alone\"\nStandard member events should do the inverse of the above, which might be more sensible.\nSynapse keeps a table of what local member events it is allowed to modify, which is extra ick.\nDo nothing, and sad things happen when I try to update my profile.. Sounds good.\n. Done.. Quite right. I think I glanced below and guessed it might have contained the events but that never seemed likey. And yeah, unless you defer this event until you have fetched the preceeding events and so on, then it could become quite stuck. Not to mention if there is some circular dependency maliciously ingested or if the preceeding event is invalid or has vanished..\n\nYet still we need some way to determine the most likey previous depth. Brain corrected EC to EV (work product is called EV, my bad). Left here mainly as a tombstone since it's a drop in replacement mostly, but to be fair git serves that purpose.. Oh. I had no idea what it was for and forgot to ask. So errm, what is it for?. Gotcha . Eh, the reason for this was to leave it open for more configuration options in the future. Personally I'd be fine with your suggestion if I was only planning to use it once.\nBut uh, I could go either way with this.. I'd rather this label was somewhat more human readable, but I don't think there is anything in service that tells us the name of the service so the ID is the best bet. Probably an oversight in the registration file to be honest.. Sure, want me to fix?. Wasn't aware of that, changing. Doesn't handle */* or sometype/*. If content type is not supported we should 415 here.. We should throw a 406 instead.. It's currently going through spec review land and this is just a demo, but yeah seeing as it's likely to be fine I'll probably like a hand with it :). Oh yes, duh.. \nRiot seems to request OPTIONS and so I implemented it way back. I don't know if we need it for the request to succeed though.. suggestion\nAllow registration to be handled by a worker instance.. ",
    "swift11": "@glyph Weird: it's a bug with \"normal\" priority in Twisted.... ",
    "reactormonk": "https://github.com/twisted/twisted/pull/649. ",
    "jython234": "It looks like 17.1 was just released yesterday, going to try and test it out.\nEDIT: Doesn't seem to work, getting a 401 UNAUTHORIZED in homeserver.log when I try to join #matrix:matrix.org through my homeserver:\n2017-02-12 10:38:10,226 - synapse.access.http.8008 - 59 - INFO - GET-25- 127.0.0.1 - 8008 - Received request: GET /_matrix/client/r0/directory/room/%23matrix%3Amatrix.org?access_token=<redacted>\n2017-02-12 10:38:10,227 - synapse.http.outbound - 124 - INFO - GET-25- {GET-O-1} [matrix.org] Sending request: GET matrix://matrix.org/_matrix/federation/v1/query/directory?room_alias=%23matrix%3Amatrix.org\n2017-02-12 10:38:10,229 - twisted - 131 - INFO - - /etc/resolv.conf changed, reparsing\n2017-02-12 10:38:10,230 - twisted - 131 - INFO - - Resolver added ('2001:4860:4860::8844', 53) to server list\n2017-02-12 10:38:10,230 - twisted - 131 - INFO - - Resolver added ('2001:4860:4860::8888', 53) to server list\n2017-02-12 10:38:10,232 - twisted - 131 - INFO - - DNSDatagramProtocol starting on 43979\n2017-02-12 10:38:10,232 - twisted - 131 - INFO - - Starting protocol <twisted.names.dns.DNSDatagramProtocol object at 0x41b7ad0>\n2017-02-12 10:38:10,233 - synapse.metrics - 162 - INFO - GET-25- Collecting gc 0\n2017-02-12 10:38:10,252 - twisted - 131 - INFO - GET-25- DNSDatagramProtocol starting on 39985\n2017-02-12 10:38:10,252 - twisted - 131 - INFO - GET-25- Starting protocol <twisted.names.dns.DNSDatagramProtocol object at 0x41aadd0>\n2017-02-12 10:38:10,253 - twisted - 131 - INFO - GET-25- (UDP Port 43979 Closed)\n2017-02-12 10:38:10,253 - twisted - 131 - INFO - GET-25- Stopping protocol <twisted.names.dns.DNSDatagramProtocol object at 0x41b7ad0>\n2017-02-12 10:38:10,271 - synapse.http.endpoint - 248 - INFO - GET-25- Connecting to 83.166.64.33:8448\n2017-02-12 10:38:10,274 - twisted - 131 - INFO - GET-25- Starting factory <twisted.web.client._HTTP11ClientFactory instance at 0x41bbf38>\n2017-02-12 10:38:10,275 - twisted - 131 - INFO - GET-25- (UDP Port 39985 Closed)\n2017-02-12 10:38:10,275 - twisted - 131 - INFO - GET-25- Stopping protocol <twisted.names.dns.DNSDatagramProtocol object at 0x41aadd0>\n2017-02-12 10:38:10,296 - synapse.storage.TIME - 207 - INFO - GET-25- Total database time: 0.000% {update_presence(0): 0.000%, update_cached_last_access_time(0): 0.000%, store_device(0): 0.000%} {}\n2017-02-12 10:38:13,494 - synapse.http.outbound - 209 - INFO - GET-25- {GET-O-1} [matrix.org] Result: 401 Unauthorized\n2017-02-12 10:38:13,495 - root - 180 - WARNING - GET-25- Error retrieving alias\n2017-02-12 10:38:13,496 - synapse.http.server - 126 - ERROR - GET-25- 401: Unauthorized\nTraceback (most recent call last):\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/synapse/http/server.py\", line 116, in wrapped_request_handler\n    yield request_handler(self, request, request_metrics)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1299, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/twisted/python/failure.py\", line 393, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/synapse/http/server.py\", line 255, in _async_render\n    callback_return = yield callback(request, **kwargs)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1299, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/twisted/python/failure.py\", line 393, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/synapse/rest/client/v1/directory.py\", line 49, in on_GET\n    res = yield dir_handler.get_association(room_alias)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1299, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/twisted/python/failure.py\", line 393, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/synapse/handlers/directory.py\", line 177, in get_association\n    retry_on_dns_fail=False,\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1299, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/twisted/python/failure.py\", line 393, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/synapse/federation/transport/client.py\", line 185, in make_query\n    timeout=10000,\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1299, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/twisted/python/failure.py\", line 393, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/synapse/http/matrixfederationclient.py\", line 390, in get_json\n    timeout=timeout,\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1301, in _inlineCallbacks\n    result = g.send(result)\n  File \"/home/jython234/synapse/lib/python2.7/site-packages/synapse/http/matrixfederationclient.py\", line 219, in _create_request\n    response.code, response.phrase, body\nHttpResponseException: 401: Unauthorized. It turns out my error was because of incorrect reverse proxy setup, not IPv6. I fixed it and all is well now! This should be fixed, I submitted a pull #1909 which simply bumps the dependency.. It's impossible to get synapse to work with a dual stack server without 17.\nThe only \"solution\" is to disable IPv6 entirely on the server, which is not\na solution at all in my book. The dependency needs to be changed for a big\nreason, not just because \"it's cool\".\nOn Feb 13, 2017 1:49 PM, \"Ander Punnar\" notifications@github.com wrote:\n\nnobody is really using ipv6, not even github :>\nok, sorry for noise, didn't pay attention because in #1002 (comment)\nhttps://github.com/matrix-org/synapse/issues/1002#issuecomment-279232114\nhe said \"error was because of incorrect reverse proxy setup, not IPv6\". so\nI misunderstood.\nanyway, there was someone who said he is going to package synapse for\nDebian propely...\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/matrix-org/synapse/pull/1909#issuecomment-279501149,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFtT5m2_DaumHXyoZKs66dbG4v89lM_oks5rcLMZgaJpZM4L-i4B\n.\n. As long as it's mentioned somewhere, I had a really hard time figuring out\nwhy I couldn't get federation to work on my server.\n\nOn Mar 31, 2017 8:34 AM, \"Erik Johnston\" notifications@github.com wrote:\n\nClosed #1909 https://github.com/matrix-org/synapse/pull/1909.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/matrix-org/synapse/pull/1909#event-1024091197, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AFtT5ltl2csHntWTWusyLStIu1bpgywRks5rrQDRgaJpZM4L-i4B\n.\n. \n",
    "sargon": "I will close this one and open a new one.\n. Why is that bot commenting 5 times in a row?\n. No offense, just curious about it. \nBut that explains.\n. Done.\n. ",
    "Jental": "Synapse hang up and stopped responding to anything.\nNow absolutely quietly.\nHave seen such behaviour for the first time\nSynapse was run with the following command:\n/usr/bin/python2.7 -m synapse.app.homeserver --config-path=/etc/synapse/homeserver.yaml --verbose\nHere's a log (log parts). It contains previous error too.\nhomeserver.log.4.txt\nhomeserver.log.3.txt\nhomeserver.log.2.txt\nhomeserver.log.1.txt\nhomeserver.log.0.txt\n. Maybe the second problem caused the first one.\nI've commented a register_memory_metrics call in app/homeserver.py\nso the first problem described should not happen. And it really doesn't.\nSynapse just hangs now, as it was described in the previous comment, without errors in log.\n. ",
    "duckbrain": "Thanks, I am having trouble with the vector.im interface because I'm trying to run it on an ARM CPU, but this resolves the issue. Closed.\n. Thanks, I am having trouble with the vector.im interface because I'm trying to run it on an ARM CPU, but this resolves the issue. Closed.\n. ",
    "rryan": "This was helpful, thanks! BTW the pragma busy timeout adds an additional line of output to BUFFER which prevents awk from properly selecting the event ID.. This was helpful, thanks! BTW the pragma busy timeout adds an additional line of output to BUFFER which prevents awk from properly selecting the event ID.. ",
    "benhylau": "Updated my homeserver to this branch. Backfill is working and I no longer see ERROR in my logs now. Thanks @erikjohnston! Merge?\n. Updated my homeserver to this branch. Backfill is working and I no longer see ERROR in my logs now. Thanks @erikjohnston! Merge?\n. This is the room where all the people having issues are gathered:\nhttps://chat.tomesh.net/#/room/#tools:tomesh.net. Also, the room is public. I am unsure whether the it was private or public when I initially invited @cschmittiey but when @ansuz sent the invite it's definitely already public.. Everything is back in sync now. The two Synapse hs were out for sync for about 12 hours, and then bridge came back about another 4.. Everything is back in sync now. The two Synapse hs were out for sync for about 12 hours, and then bridge came back about another 4.. @richvdh Any idea what may have caused this federation breakage for 12 hours? Was there anything special going on at the Matrix hs? I was hoping we'd find something in its logs.. @richvdh Any idea what may have caused this federation breakage for 12 hours? Was there anything special going on at the Matrix hs? I was hoping we'd find something in its logs.. ",
    "hawkowl": "python -m is the preferred way of running Python applications nowadays, especially since it removes the problem of \"what Python did I install this with\" and \"what Python am I running it with\".. A noble goal, but not a useful ticket, so I'll close it.. @erikjohnston @ara4n does server acls satisfy this?. Duplicate https://github.com/matrix-org/synapse/issues/1475. Added 2.5, 5, 7.5, 15, 30, 45, and 60 second buckets.. Tests, because otherwise prom throws an error. We could get around this by making them top level and putting the names as labels always, as prom_client will throw an exception if you register something with the same name twice (like in tests).. Fixed.. Fixed!. Fixed.. Good idea, done.. That's about twice as slow on Python 2, unfortunately:\n~ $ python3 -m timeit \"list(globals().items())\"\n1000000 loops, best of 3: 0.75 usec per loop\n~ $ python -m timeit \"list(globals().items())\"\n1000000 loops, best of 3: 0.67 usec per loop\n~ $ python -m timeit \"list(globals().iteritems())\"\n1000000 loops, best of 3: 1.02 usec per loop. I had issues with it jamming Twisted, for some reason, and this made it work fine. ~the mysteries of threading~. The hash should only ever be 7-bit ASCII, according to https://passlib.readthedocs.io/en/stable/modular_crypt_format.html, so it's just a case of being strict in what we accept, here.. It isn't (I was chasing another bug, this obviously wasn't what fixed it). SocketServer (from the stdlib that Prometheus Client uses) only supports IPv4 out of the box, so it refuses IPv6 addresses. :(. That was a good question, and then I realised that max_size was * the cache factor.\nNow, it mocks out the cache factor, and this mis-solution is removed :). me hitting my keyboard wrong with my dumb monkey hands (fixed). @richvdh stray comment. They do seem a bit weird to me, to be honest. I don't really see any benefit to putting things back on the reactor thread.... deferToThread implicitly uses the global reactor's threadpool -- so, this technically doesn't change behaviour, other than telling it explicitly what reactor (and what threadpool) we want to use. If we wished, we could add another threadpool explicitly for auth, here, rather than use the global one.. fix'd. fixed. done. done. done. done. Hmm, yeah. Don't think I meant to cherry pick this out. Fixed.. Yes, this will be locked by the GIL.. errrr no... but it probably doesn't harm anything for right now :). By default, isort skips init files. We put a lot of implementation code in init files, so we have to run them on it too.. The reasoning for six being separate is that when we go Py3 only, that compat section gets removed (as six isn't needed and mock is in the stdlib in py3).\nTwisted being separate is basically aesthetics for me, I added it after a test run to see how it would look. Since we import so much from it, it just adds a bit of whitespace between all those imports and the other third party ones, otherwise the list can get pretty dense.. To match our flake8 configuration, basically.. Good catch.. fixed. fixed. Hmm, yeah. Fixed.. Importing the admin APIs loads the media storage providers code, which tries to iterate over this (and you can't iterate over a mock). done. Changed the comment to be a bit more accurate. done. done. reverted. json/simplejson returns str (so unicode on py3, bytes on py2). We want it as unicode, so we have to decode it on Py2.. That would be a nicer way of writing it, but password isn't in a writable scope (because it's inside another function).. wrt the type -- it's being passed in as str, but since it's not clear that it would only be decoded on py2, I've changed it to be a Py3 check.. Given the URL encoded sequence string \"%E2%98%83\", encoded as a unicode string:\nPython2:\n```\n\n\n\nurllib.unquote(u\"%E2%98%83\")\nu'\\xe2\\x98\\x83'\n```\nThis is wrong, it returns Unicode but the ASCII escaped character codes.\n\n\n\nPython 2:\nurllib.unquote(u\"%E2%98%83\".encode('ascii')).decode('utf8')\nu'\\u2603'\nCorrect, returns the Unicode literal, but escaped for display as Py2 will usually not print real Unicode characters by itself.\nPython 3:\n```\n\n\n\nurllib.parse.unquote(u\"%E2%98%83\")\n'\u2603'\n```\nCorrect, returns the Unicode literal (not escaped, as Python 3 has the correct terminal encoding set up).\n\n\n\n. fixed. fixed. It shouldn't, so I removed the if.. done. We aren't encoding this because we now parse the incoming arguments to Unicode in _get_handler_for_request.. (as to why we encode it on py2, see https://github.com/matrix-org/synapse/pull/3569/files/4831ead29a575a299d8e377f26bc8fc35dc49cc2#r205017485 ). (also the decodes in the functions below have been moved to this one spot). @Half-Shot ideally, this would be 3585.bugfix, as the news file should point to the bug where one is available, and the bug should reference the fix (which github does automatically if you say the PR \"fixes\" a ticket). yeah, thanks. I would have but then I have to set up git things to clone it down :(. json.loads() does not do any decoding, it returns a dict with str keys/value, so bytes on Python 2 and unicode on Py3. We then need to decode it to utf8 to get the Unicode which we then need to pass to unicodedata.normalize.. unicode(password) also will decode it with ASCII, as it's forced decoding.. It's clearer to use bytes (flat bytes), str (str on either platform), or unicode (unicode), even though there is no such thing as unicode on Python 3.. It's already decoded by _get_handler_for_request.. URLs are 7-bit ASCII.. The original params are str (so bytes on Python 2) because json.loads returns strs, not Unicode, we don't want that.. abc.abstractmethod requires the class is an ABC, which this isn't. (Also, abcs are a bad idea). done. I made it hs_config (seemed clearer to me). Yeah, fair. Fixed.. fixed. fixed. I have no idea -- to be honest, this is just cargo culting. I haven't had any luck finding ANY documentation on the /merge ref, or the pr/ refset at all on GitHub -- my google-fu has failed me unfortunately. This is just the method that was recommended on the CircleCI forums (because Circle doesn't have a \"merge before run\" functionality like Travis).. fixed. requeuests? . I feel like dict(_background_processes) shouldn't require a lock?. @ara4n I noticed this coming out of your homeserver :). it does, because otherwise the tests fail :(. maybe not, I don't think. wait, shit. that's right. thanks for catching it, let me fix that up.. me trying things and inadvertently committing it :) -- reverted. this changelog seems out of place though. \n. If I put E731 in pep8 it gets ignored (since it's pyflakes?), if I just put E731 in flake8 it stops ignoring the ones in pep8 :(. The hashes are ASCII hex, so yes.. not on python 3, .message is removed. can we save that for running black on things? :). whoops. s/fedreation/federation/. This makes it non-atomic -- it should be self.pending_pdus_by_dest[destination].extend(leftover_pdus), maybe?. I guess, yeah -- the comment above just concerns me, though?. if potential threading isn't a concern, then, looks fine to me.. nope, must be ascii-encoded (maybe punycode if it's a hostname or url-encoded if it's a path), because http. we'll bail out upwards (we check if CIRCLE_PR_NUMBER is defined). because it also runs on master/develop. idk. done. I fixed the logging in another PR (that caused the exception). The logging fix here is just a sneaky b'' showing up fix :). From the ticket from @richvdh :\n\nif update_client_ips is failing, it needs to log at ERROR or above.\n\nDo we not want to know when SQL fails?. Nope, not really.. The envlist is just what's run on tox with no args, so I guess not?. done. done. done. I guess we could just remove it entirely, yeah.. I think the problem is that we're potentially conflating \"eviction because of invalidation\" (which this code may do) with \"eviction because of some automated process\" in the statistics. If something pops from the cache so it won't be cached anymore deliberately, I don't think that's useful to track in what this metric appears to do (assessing whether our cache is effective).. oh. 1.7, ahh, such a classic pip release (which literally won't install packages now). Because then SYNAPSE_USE_FROZEN_DICTS=0 would enable them.\nWrapping it in a bool() will work, instead.. done. This doesn't seem like a useful thing to log at INFO.. I tested it, -j 2 is faster for SQLite, which has less I/O blocking and therefore is approximate to the speed of your CPU. -j 4 is better for Postgres which has a lot more I/O blocking (mostly creating the database).. done. Can we not just keep this as an int?. That's true, and I prefer it too (I wish it was a syntax error, because sometimes I forget). why does the API have it as a string when JSON has numbers?. sure. Are these ordered? Should we always return them as a set, vs a list?\nalso docstrings plz. (I also ask wrt set because a set comprehension will mean we don't have to cast it to a set in various places, if we declare the events have no fixed order). No, since trial's mktemp makes it in the _trial_temp dir, which is cleaned up automatically (or should be).. fiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiine. sure, done. nope, fixed. No - the bugfix is the \"?s on either side which will strip quotes from charset=\"utf-8\", which used to break us. I had to reformat it as the line got too long.. It would be nice if we had a docstring format that tools could autoformat for us.... No, because above it does a .get with the default argument being a list containing empty bytestring.. Well, we can't decode it as ASCII (which is the original bug), which means that someone is putting UTF-8 literal bytes into the header (non Synapse implementations?). cgi.parse needs str on Python 3, as per the comment, we have to decode it as something.. yes, #4180 :) (If we merge that first then this squashed merge won't have it, which is why I didn't bother removing it). because i mismergedddddd. Yeah, when I was coming up with this, I had two solutions:\n\nDecode as latin1 (which will decode any 8 bit stream) or ascii with errors set to ignore\nRegex looking for a <meta beginning block and then charset=<foo>, which is likely to be in a http-equiv=\"Content-Type\".\n\nSince I consider this best-effort (correctly configured servers ought to be serving the correct header in the Content-Type), I decided a regex was better than parsing it, then parsing it again. I chose not to check for the http equiv part since it can go before or after the content=\"charset=utf8\" bit and make the regex far more complex.. It's only a 2/10 on the HE COMES scale :). Lack of a timeout here causes an infinite loop on jammed web requests in tests.... The timeout is done by the global reactor, this here does not yield to the global reactor, and therefore can run infinitely and not trip the global reactor timeout.. You could change this into a if not hs.config.enable_search: return to avoid a big diff here.. We'll be able to catch cases like that with tests, I hope :). This isn't new code, this is existing code that's moved. And yes, potentially.. Oh, hmm, I guess it does add something, as it was in connect before... let me think on this.. Actually, looking at it, the current code has the same problem (since it then passes it to HostnameEndpoint for IPv6).. The syntax here should be \"No row found (%s)\" % (table,). This won't work on Python 3. (as an aside, do you want some help with unit tests for this code?). no, because it's loaded from the mounted dir and is purely temporary while building.. the synapse repo is mounted into the docker image, and as part of building, it copies it from the mounted source dir into the debian/ dir to work on as a copy.. done. I haven't noticed any problems thus far, and it appears to be a supported method.. so, the old system would copy the entire tree into the source dir, and so it would be. This one only extracts a tarball, so instead of getting it from the 'source' we need to go back down into the original debian directory and fish it out.. /lib is the right spot, it's symlinked into /etc by systemctl enable.. that is true :thinking: . yes, the #DEBHELPER# bit which is in there.. idk, this is from the cookiecutter template :). something that it doesn't need to do, fixed. we don't distribute a source package now. fixed. It's what I've seen before, and we do need to make different debs for different diffs (because targeting different Python 3 versions). https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-version says it looks fine, I think. So that things like Twisted with C extensions compile with a generic compiler flag set -- the generic x86-64 one, not like haswell.. python-virtualenv is broken on sid, so we use --builtin-venv so dh_virtualenv uses the built in one. Debian breaks it up into its own package, because Debian.. yep. their packaging cookbook doesn't use it.... I'll remove it, this was from the cookiecutter, it looks like modern pip is more sensible.. I guess we don't need it all, if the tarballing works.. sure. I think I fixed it!. well i'm also cargo culting it from the dh_virtualenv docs, I have no idea what it means in a real sense. . dh complains I haven't used it, so I added it. :S. yep!. OK, reverted.. done. debiaaaaaaaaaaaaaaaaaaaaaaaaaaaaaan :D. fwiw we can do it the \"right way\" when we rename the package, I didn't find a way for dh_systemd to install it under a name that wasn't the package name. :/ Once it's just matrix-synapse again, we'll be able to use dh_systemd and it'll suck less.. removed. done. because our current working dir is the debian/ directory. not for ones without source packages, as far as I can tell?. Other than having that set in the environment using -e CFLAGS=\"-march=x86_64\" in the docker run, and testing that it gets passed through. That would probably work fine.. This should only affect people on Twisteds older than 17.5, which hard depends on hyperlink. (I guess this affects xenial and so?) Maybe I should add it to our pip dependencies?. done. done. yeah i don't actually need this, so, elided!. done. added some docs. done. yeah actually that's fair, it does it on sizes and things too.. Accessing an IP address directly means that it doesn't do a DNS lookup for said IP address.. UPSERTs, as far as I can tell, automatically roll back under REPEATABLE READ? https://www.postgresql.org/docs/10/transaction-iso.html#XACT-REPEATABLE-READ. xmax is a documented PostgreSQL thing. It's not in SQLite (which is why this doesn't support sqlite :( ). To note -- ON CONFLICT DO UPDATE is PostgreSQL syntax that SQLite reused, it's not portable anyway.. I was reading off https://www.postgresql.org/docs/10/transaction-iso.html#XACT-REPEATABLE-READ , that didn't give anything nice. That works better, though.. Oh, this was from my attempt at making a strategy similar to https://github.com/matrix-org/synapse/pull/4306#issuecomment-450564229 work. It didn't. :(. true, i just copy pasted so I couldn't mess it up :). done. because i'm silly . yeahhhh but everything else in this function is sql :P. HMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM \nyeah need some coffee. Maybe https://twistedmatrix.com/documents/current/api/twisted.test.proto_helpers.StringTransport.html would reduce some duplication here? (twisted.test.proto_helpers is public API). it's still 2018 in my heart. Yeah, that was one of the next little thinkies that I have to tackle. I was going to do it in the \"enable cert reloads without restarting\", since it  means I have to stop things listening and then start them again, which I think is making this a bit too big of a PR.. sure. sure, good idea.. done. yeah i simplified it. done. done. done. not really, but i encapsulated it a little better. Does this matter?. Yeahhhh I guess catching the entirety (and then special casing FirstError, which can only come from the DeferredList to provide a nicer log message) will be better.\nNot sure about making the entirety of start in a block. I guess we ought to, since there's now more in it?. yeh that was something I didn't get to before bed and classed as superficial and not blocking putting it up for review. I'll have it done for the next cycle :). as it stands, it will renew if there's less than 10 days left, so it shouldn't boot with a cert which will immediately expire. Of course, that's not a permanent solution, but it gives people who want to immediately use the feature in the meantime some headroom.. because it shadows a global package :/. precomputes the xml for codecov. probably don't need it, was experimenting.. ah, that was from when I had the full schema (which I pulled out of this PR). Will remove.. fixes our coverage to actually cover the storage APIs :(. it doesn't have to be one line (or if we strip whitespace, we can configure towncrier not to). the real problem is breaking the dot-pointing, which i forget how to stop with markdown.. sure. yeah. hmm. I am not entirely sure about the difference to the code. is it that we would want to raise and bail out if we couldn't read the certificate?. done. yeah it's redundant. removed.. Split out into another PR: https://github.com/matrix-org/synapse/pull/4429. oops. fixed.. done. now: returns None if it doesn't exist, bails out if it can't read it or can't parse it.. @anoadragon453 you can't return in an inlinecallbacks. txacme does not yet support v2. We can probably put a little bit of work in to make it support it, later.. WRT live endpoint -- I think it should be the staging one by default, since the real one has rate limits, and we dont' want someone to get accidentally blacklisted while setting up their server, I think.. err i thought i committed that. hmm, okay. done. done. done. This won't ever be called before we're actually connected, since it's in transaction code?. done. yes, every change needs a changelog.. Could we SYNAPSE_ namespace this, like https://github.com/matrix-org/synapse/blob/master/tests/utils.py#L46 ?. done. does it? i'm confused. oh. done. The reason why I want 9.5 here is that we need to test the native upsert path, which can use the postgres-specific batch code.\nWe should do our CI better and support more postgreses, but if we have to pick one, 9.5 is the one that covers the most code.. ... .fred?. instead of mockclock, you want self.reactor.advance(time). done. There will be four entries. Hopefully the new comments spell it out a bit better.. you know. configure the.. It also makes it impossible to reload or edit config during tests :/. yeah it is fixes. No, we want all users who are in a public room, don't we?. I am not entirely sure with the logic of the old functionality, and I'm trying to preserve it.. yep. added the not exists/if exists/etc.\nI think removing them from the deltas is maybe a good idea, but not something I'll do here.. done. lmao i didnt do it for the indexes because thats a pg 9.5+ feature :). okay, so I've removed (user_id, user_id) and fixed the sytests that rely on being able to search for yourself.\nThere is also the bug that by using the users_who_share_public_rooms table, a user who is in a public room with nobody else and no other rooms will not share a room with anybody and therefore will not show up in search. I think this is probably fine, though.. Without the adding yourself, that drops one of those, but yes, it does repeat that, but that's an existing problem.. done. I think the not-having-multiple-tables option is better. Done.. removed due to the below. done. done. as discussed: this doesn't include the profile. sob. it's kept there because it's the only shared state (since synapse can be restarted). good idea, done. ",
    "VShell": "@erikjohnston Nope, no need to change anything.\n. ",
    "jcgruenhage": "I have this issue too, on Synapse v0.18.7, would you please reopen the issue?. I have this issue too, on Synapse v0.18.7, would you please reopen the issue?. okay, thanks. okay, thanks. Has this issue been reported on their side somewhere? I can not find anything in their bugtracker.\nEdit: After searching some more, and still not finding anything, I posted a bug report: https://bugs.alpinelinux.org/issues/6765. Has this issue been reported on their side somewhere? I can not find anything in their bugtracker.\nEdit: After searching some more, and still not finding anything, I posted a bug report: https://bugs.alpinelinux.org/issues/6765. @ptman I don't think it will. Dendrite however will most likely not use ujson, once that is ready. Until then, I guess you'll just need to avoid alpine linux for running synapse.. @ptman I don't think it will. Dendrite however will most likely not use ujson, once that is ready. Until then, I guess you'll just need to avoid alpine linux for running synapse.. How much faster than json is ujson anyway?. @richvdh hasn't the workaround already been found? s/ujson/json/g\nIt's a simple enough patch.. also, there is an open PR, they seem to be working on it over at ujson: https://github.com/esnme/ultrajson/pull/281\n. I've switched to Debian as a base long ago, but I still have the dockerfile from when I tried to use alpine. Do you want it?. @richvdh: @silvio has stopped maintaining the docker image, and it was Debian based for more than a year now anyway. . You can generate a new homeserver.yaml with the following command:\npython -m synapse.app.homeserver \\\n    -c /etc/matrix-synapse/homeserver.yaml \\\n    --generate-config \\\n    -H $MATRIX_DOMAIN \\\n    --report-stats $MATRIX_REPORT_STATS\nYou should remove the old file though. \nThis command generates an up to date config file.. Also, it would be great if the swagger ui supported this.. It would probably be more appropriate to write a little synapse admin client instead\n(Or maybe even a web interface for those :D). Wouldn't it make more sense to base this on docker.io/alpine:3.7? docker.io/python:2-alpine is based on docker.io/alpine:3.4 doesn't receive non-security updates (bug fixes etc) anymore, which means we are potentially stuck on old versions of dependencies.. Wouldn't it make a lot more sense to let the regular generate command take care of this? Having a complete config file here feels like duplicating what the generate command does. Adding the used environment variables as either command line flags to the generate command or having the generate command read the env vars itself would make this a lot more portable.. I'd go with docker.io/postgres:10-alpine instead. Going with latest always has the disadvantage that when a new major version comes and you update, your database won't work anymore. You can't for example start postgres 10 with a data dir from postgres 9.. While this is not specific to this PR, more a general thing, I'd like this to include which registry to pull the image from, so docker.io/matrixdotorg/synapse:latest, or (if that happens) matrix.org/synapse:latest.. It would maybe be nice to provide an example that maps out different things to different mount points. For any serious deployment, performance critical things should be stored on fast storage, like an SSD, and media would be a better fit for storage on HDDs.. I think that the mode should be generate whenever there is no config file, and not generate if there is one. If the user wants to regenerate the config, (re)moving the config would IMO be better than just overwriting it.. Not sure if this is just my python being rusty, but why is su-exec twice in there?. This var name is misleading. It doesn't contain permission data, it contains ownership data.. IMO synapse would be a better fit, for user and database.. I'd leave out the webclient. It's deprecated.. See above.. I'm strongly against making this possible without manually fiddling in the config. The webclient is deprecated.. Do we really need the SYNAPSE prefix for all of those? Where env is shared across multiple applications, to avoid collisions, sure, but in this container we won't have any other applications.. I'd default to yes instead.. Doesn't this mean that one can never remove this env var? Even after the generation of the config?. This would be additional work, but wouldn't it be a lot nicer to have folder based configuration for this? Have a path in the homeserver.yaml, in this case /data/appservices, and have synapse load all config files in there? . Why is this hardcoded when there is an env var for this?. The people over at alpine are pretty fast at updating, and at the moment the versions of python in both images are the same. Looking over the python images again, a compromise might be docker.io/python:2-alpine3.7, which is basically the same image as docker.io/python:2-alpine, but is based on a 3.7. I am not sure why they don't default to that though, it doesn't really make sense to me.. I guess I should have read the documentation more carefully, I didn't get this thing with the dynamic config mode. That's a really cool feature!. Okay, good to know!. AFAIK this doesn't really matter, because in docker-compose, environment variables are defined per container, not per project.. This is fine too. I just feel like if it defaults to no, nearly no one will activate it.. While it gets the point across fine, I'd put the two modes of operation somewhere more visible. People are likely to overlook it (buried in the env var list) and will likely be confused by this when things don't behave as they expect.. Isn't it \"no\"? . I'd suggest the same as you already did above: prepend docker.io/\nI'd also do it in the Dockerfile, for the alpine base, whichever that'll be (alpine or python-alpine).. After the change in the compose file (the docker.io/ prefix), you should probably change it here too. If someone builds the image and then tries to run the compose file, docker-compose will still try to pull in the image from docker.io. The default \"no\" has just been moved now, I am still not sure people will take a serious look at this.. If so, the default also seems to be \"synapse\" too.. docker.io/matrixdotorg/synapse?. perhaps we should document that people can skip building and specify the version where we have latest in the docker-compose file, to pull it from docker hub.. This should definitely not be develop. About using latest, take a look at my comment on #3407 . Also, while it is possible to remove the docker.io/ prefix, I'd prefer to keep it, to make sure that it pulls from the registry we expect it to pull from. While many systems try docker.io first, that is not true for all systems.. I'd say we should reject this PR and instead clarify our documentation. The latest tag that is currently in the docker-compose file and in the documentation are for when people build the images themselves.. This file is kept for not breaking links I guess?. I'm relatively sure we can skip over this whole section because all of those are dependencies of the build dependencies anyway. Listing them explicitly was only required because we removed the build dependencies, which also removed those if they were not explicitly installed separately.\nConsidering we're not uninstalling any packages but throwing away containers instead, we can even skip the whole --virtual .*_deps part, because that is only needed for easier deletion of the packages.. As said above, we don't need .build_deps here. We shouldn't need --no-cache either, because this is a throwaway build container where we don't care about caches making the image larger. OOI, where do these 3 new entries come from? Aren't they installed as part of synapses dependencies in the next pip command? For that matter, shouldn't that also apply to those we had there already?. So it's caching, okay :+1: . ",
    "ptman": "Yes, same problem. Can synapse avoid using ujson?. I also tried to report this problem to ujson https://github.com/esnme/ultrajson/issues/254. alpine can also be used as the base, see https://github.com/ptman/synapse-docker. ",
    "pbruna": "@richvdh I second that, but I think it will be a good idea to Throw a better error when the json parsing fails.. ",
    "kdltr": "Ugly workaround: https://github.com/kdltr/synapse/commit/4d6cfa4363cd4a8f9ea91cfdea9e4dac82489f9b. ",
    "BastienAr": "I've tested your commit in this image. So far so good. I will come back here if I notice something bad.. ",
    "andreaspeters": "@silvio @richvdh @jcgruenhage : I my fork I changed  to \"debian:stable-slim\". Before I will merge it with the official docker-matrix version, I need some peoples who like to test it (https://hub.docker.com/r/avhost/docker-matrix/tags/). Just now, I have no plan to change back to alpine. . ",
    "steckerhalter": "I tried several things and couldn't make it work so now I reverted to expose port 8448 and using synapse directly and removed the SRV record. Now I can join rooms on other servers.\n. ",
    "icaruseffect": "I encountered the same problem.\nIn contrast to @steckerhalter i cannot choose my ports freely, because i'm using a shared host.\nI tried exactly the same steps (including srv to port 443) and failed with the same result.\nIs it possible to configure federation for ports different than 8448?\n. Hi @simonszu, i sadly cannot help you further, because i deactivated my server because of job related time constraints.\nI guess the reason for the failure of federation in my setup were cause by using a reverse proxy, not using the initially generated keys. They must be hard coded somewhere after initialization.\nBut sadly i cannot further contribute to this problem because of i don't use matrix any longer in production. . ",
    "donpdonp": "I have this exact problem! I've been in matrix-dev multiple times but the fix is still a mystery. Can this ticket be re-opened? The configuration of a reverse-proxy and no ports beyond https is the most desirable setup. \nAfter seeing the 401 in the logs, I have verified that matrix.org is requesting the signing key from my homeserver and its being delivered (status 200). Then matrix.org rejects the federation request (401) and I dont know why.\n. I have this exact problem! I've been in matrix-dev multiple times but the fix is still a mystery. Can this ticket be re-opened? The configuration of a reverse-proxy and no ports beyond https is the most desirable setup. \nAfter seeing the 401 in the logs, I have verified that matrix.org is requesting the signing key from my homeserver and its being delivered (status 200). Then matrix.org rejects the federation request (401) and I dont know why.\n. @leonerd thx for the assistance, the output from matrixtool is\n```donp@jewel ~ $ matrixtool server-key donp.org\n[INFO] Connected to 64.62.134.149:443\n[FAIL] TLS fingerprint does not match any listed\n[OK] Verified using origin=donp.org key_id=ed25519:a_oekW\nv2 keys from donp.org:\nKey id ed25519:a_oekW\n  base64::azmxIZEG6OR5QQvqMFtieK5yNPSVQ2EjEgwqUF9NNTs\n```\nWhats the connection between the TLS cert delivered during an HTTPS connection and the tls related homeserver.yaml settings:\ntls_certificate_path: \"/home/donp/matrix-org/synapse/donp.org.tls.crt\"\ntls_private_key_path: \"/home/donp/matrix-org/synapse/donp.org.tls.key\"\ntls_dh_params_path: \"/home/donp/matrix-org/synapse/donp.org.tls.dh\"\nno_tls: True\nfor instance I have a reverse proxy answering the HTTPS port with a letsencrypt key that is different than the generated-during-install TLS key that is specified in the yaml snipped above. With TLS being turned off in the config, its unclear if the TLS key is used/important. . @leonerd thx for the assistance, the output from matrixtool is\n```donp@jewel ~ $ matrixtool server-key donp.org\n[INFO] Connected to 64.62.134.149:443\n[FAIL] TLS fingerprint does not match any listed\n[OK] Verified using origin=donp.org key_id=ed25519:a_oekW\nv2 keys from donp.org:\nKey id ed25519:a_oekW\n  base64::azmxIZEG6OR5QQvqMFtieK5yNPSVQ2EjEgwqUF9NNTs\n```\nWhats the connection between the TLS cert delivered during an HTTPS connection and the tls related homeserver.yaml settings:\ntls_certificate_path: \"/home/donp/matrix-org/synapse/donp.org.tls.crt\"\ntls_private_key_path: \"/home/donp/matrix-org/synapse/donp.org.tls.key\"\ntls_dh_params_path: \"/home/donp/matrix-org/synapse/donp.org.tls.dh\"\nno_tls: True\nfor instance I have a reverse proxy answering the HTTPS port with a letsencrypt key that is different than the generated-during-install TLS key that is specified in the yaml snipped above. With TLS being turned off in the config, its unclear if the TLS key is used/important. . just to follow up on this ticket, I've picked apart the problem and want to leave the solution here for the other ticket participants with the same problem. \nthe root of the problem is python twisted does not support SNI (#1491 is waiting on the fix), so when matrix.org tries to connect to my homeserver on 443, nginx returns the wrong(default) SSL cert which doesnt match what matrix.org was expecting.\nanother key piece of info is the SRV record is only to adjust the federation port (8448). The default client port is the usual https port. So its enough to remove the SRV record and simply open port 8448 directly to the python script and let the script use its generated self-signed certs. . ",
    "simonszu": "Sorry to post here again, but did you resolve this, @icaruseffect ?\nI am struggling with this issue for days, and this blog post which is the only documentation for this is somewhat outdated. I am at a state where matrixtool produces this output:\n\n$ matrixtool server-key matrix.simonszu.de   \n[INFO] Connected to 5.189.143.28:443\n[FAIL] TLS fingerprint does not match any listed\n[OK] Verified using origin=matrix.simonszu.de key_id=ed25519:a_LiWb\nv2 keys from matrix.simonszu.de:\nKey id ed25519:a_LiWb\n  base64::VF2Cxq3wVEe8NIplwnHK+yKIhdBkgBmzqUfT1k0aMgg\n\nI am sure that the handshake fails due to the TLS fingerprint mismatch, but i ran out of ideas to fix this. The chat room is also no good place to seek help since it is crowded, and need-help-messages disappear quite fast :(\n. @icaruseffect That's no problem, i can fully understand this. ;)\nI have made a question on serverfault in general, and it seems that @donpdonp is at the same work in progress as i am, so i will check this issue from time to time and see if anything new pops up. . ",
    "imazes": "ye ,i gt the same problem.srv looks like useless. ",
    "Kakise": "Hello,\nI have the exact same problem.\nProxying matrix server to kakise.xyz:443 via nginx\nPort 8008 and 8448 are accessible from the outside\nUsing the default cert\nThis error:\n\n2017-02-12 17:08:37,178 - synapse.access.http.8008 - 91 - INFO - GET-80- 87.88.37.184 - 8008 - {None} Processed request: 170ms (11ms, 4ms) (0ms/0) 62B 401 \"GET /_matrix/client/api/v1/directory/room/%23matrix%3Amatrix.org HTTP/1.0\" \"Mozilla/5.0 (X11; Linux x86_64; rv:51.0) Gecko/20100101 Firefox/51.0\"\n2017-02-12 17:08:41,461 - synapse.handlers.presence - 328 - INFO - GET-80- Handling presence timeouts\n2017-02-12 17:08:41,462 - synapse.handlers.typing - 79 - INFO - GET-80- Checking for typing timeouts\n2017-02-12 17:08:41,463 - synapse.handlers.presence - 239 - INFO - GET-80- Performing _persist_unpersisted_changes. Persisting 1 unpersisted changes\n2017-02-12 17:08:41,476 - synapse.handlers.presence - 251 - INFO - GET-80- Finished _persist_unpersisted_changes\n2017-02-12 17:08:41,624 - synapse.storage.TIME - 207 - INFO - - Total database time: 0.112% {update_presence(1): 0.109%, update_cached_last_access_time(1): 0.003%, user_get_threepids(0): 0.000%} {}\n2017-02-12 17:08:46,461 - synapse.handlers.presence - 328 - INFO - - Handling presence timeouts\n2017-02-12 17:08:46,462 - synapse.handlers.typing - 79 - INFO - - Checking for typing timeouts\n2017-02-12 17:08:48,823 - synapse.access.http.8008 - 59 - INFO - GET-81- 87.88.37.184 - 8008 - Received request: GET /_matrix/client/api/v1/directory/room/%23matrix%3Amatrix.org\n2017-02-12 17:08:48,824 - synapse.http.outbound - 124 - INFO - GET-81- {GET-O-9} [matrix.org] Sending request: GET matrix://matrix.org/_matrix/federation/v1/query/directory?room_alias=%23matrix%3Amatrix.org\n2017-02-12 17:08:48,852 - synapse.http.outbound - 209 - INFO - GET-81- {GET-O-9} [matrix.org] Result: 401 Unauthorized\n2017-02-12 17:08:48,854 - root - 180 - WARNING - GET-81- Error retrieving alias\n2017-02-12 17:08:48,855 - synapse.http.server - 126 - ERROR - GET-81- 401: Unauthorized\nTraceback (most recent call last):\n  File \"/root/.synapse/local/lib/python2.7/site-packages/synapse/http/server.py\", line 116, in wrapped_request_handler\n    yield request_handler(self, request, request_metrics)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1299, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 393, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/synapse/http/server.py\", line 255, in _async_render\n    callback_return = yield callback(request, **kwargs)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1299, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 393, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/synapse/rest/client/v1/directory.py\", line 49, in on_GET\n    res = yield dir_handler.get_association(room_alias)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1299, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 393, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/synapse/handlers/directory.py\", line 177, in get_association\n    retry_on_dns_fail=False,\n  File \"/root/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1299, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 393, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/synapse/federation/transport/client.py\", line 185, in make_query\n    timeout=10000,\n  File \"/root/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1299, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 393, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/synapse/http/matrixfederationclient.py\", line 390, in get_json\n    timeout=timeout,\n  File \"/root/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1301, in _inlineCallbacks\n    result = g.send(result)\n  File \"/root/.synapse/local/lib/python2.7/site-packages/synapse/http/matrixfederationclient.py\", line 219, in _create_request\n    response.code, response.phrase, body\nHttpResponseException: 401: Unauthorized\n\nNo SRV records (I tried redirecting to 443 via srv but didn't changed anything)\nI tried using letsencrypt cert (the same as kakise.xyz) but didn't seemed to resolve anything\nServer using hsts, kakise.xyz:8448 is not accessible from browser (except when using letsencrypt). ```\n(.synapse)root@kakise:~# matrixtool server-key kakise.xyz\n[INFO] Connected to 89.234.183.52:8448\n[OK] TLS fingerprint matches (SHA-256)\n[OK] Verified using origin=kakise.xyz key_id=ed25519:a_FwNn\nv2 keys from kakise.xyz:\nKey id ed25519:a_FwNn\n  base64::OVGCeYtKzTx04ZGvPiN47dAFvqNpSGQ//Q7WvD2xKtM\n[INFO] Matches cached key\n(.synapse)root@kakise:~# matrixtool notary kakise.xyz matrix.org\n[INFO] Connected to 83.166.64.33:8448\nKeys from kakise.xyz via notary matrix.org\nKey id ed25519:a_FwNn\n  base64::OVGCeYtKzTx04ZGvPiN47dAFvqNpSGQ//Q7WvD2xKtM\n[OK] Verified using server_name=kakise.xyz key_id=ed25519:a_FwNn\n[INFO] Matches cached key\n```. ",
    "williamleuschner": "Sure!\n``\nGNU gdb 6.3\nCopyright 2004 Free Software Foundation, Inc.\nGDB is free software, covered by the GNU General Public License, and you are\nwelcome to change it and/or distribute copies of it under certain conditions.\nType \"show copying\" to see the conditions.\nThere is absolutely no warranty for GDB.  Type \"show warranty\" for details.\nThis GDB was configured as \"i386-unknown-openbsd6.0\".\nCore was generated bypython2.7'.\nProgram terminated with signal 6, Aborted.\n0  0x0c54e027 in ?? ()\n(gdb) bt\n0  0x0c54e027 in ?? ()\n1  0x0c50e513 in ?? ()\n2  0x000000c5 in ?? ()\n3  0x00000000 in ?? ()\n(gdb)\n```\nI don't know how much help that stacktrace will be, since it doesn't seem to have anything in it...\n. Well, that's odd\u2026\npip is core dumping now. I think there might be a bigger problem here. I'll get back to you after I figure out why that's happening. Preliminary investigation shows that I don't actually have OpenSSL installed, just pyOpenSSL.\n. I can't figure out how to get the python development bindings installed on OpenBSD without wrecking lots of things. Due to time constraints, I've opted to just run an IRCd instead. Perhaps someone else with more time and more OpenBSD experience will be able to get the traceback?\n. No, the filesystem isn't mounted as wxallowed. Isn't that somewhat of a security risk?\nI just got it reinstalled and checked, and the dmesg output does say the following, right after the core dump:\npython2.7(88444): mmap W^X violation\npython2.7(3012): mmap W^X violation\n. That worked! Thanks! I've now got a functional Synapse server running on OpenBSD. Would you all appreciate it if I wrote up a pull request that explains the installation steps for OpenBSD in the README?\n. There's the pull request!. Wow, @matrixbot; I think they got it.... @erikjohnston Yes, it does. I've tested it and updated my README changes accordingly.\nShould I also add the rc.d script to my pull request as well?. Ah, I didn't know that, and I guess I just forgot to try it when I was setting it up. Thanks!. I completely forgot that.. Whoops!\n. ",
    "qbit": "@williamleuschner is your filesystem mounted with wxallowed? The directory you are running synapse from will also need to be wxallowed.\nAnother way to tell if it's a W^X thing, is by checking dmesg output right after the python script errors out.\n. It is less secure in that the filesystem mounted with wxallowed can run binaries that have been linked with PT_OPENBSD_WXNEEDED. Python is already built with this, and your /usr/local directory should already be mounted with wxallowed (unless you opted not to add it when going through the upgrade guide)\nIf your /usr/local is already mounted with wxallowed, you can run synapse from there (this is what I do - I am also working on a port of synapse that will do this bit automatically):\n- Add a new user called _synapse (make sure to make the home directory /usr/local/_synapse.\n- Follow the build docs to install synapse via virtualenv into the /usr/local/_synapse directory.\nSince you already have a functional configuration, you can probably just move it to the /usr/local/_synapse directory - though i would strongly suggest running it as a non-privileged user!\n. Also here is an example rc.d script:\n```\ncat /etc/rc.d/synapse                                                                                                                                                                        \n!/bin/sh\ndatadir=\"/usr/local/_synapse/.synapse\"\ndaemon_flags=\"/usr/local/_synapse/.synapse/homeserver.yaml\"\ndaemon=\"${datadir}/bin/synctl\"\ndaemon_user=\"_synapse\"\n. /etc/rc.d/rc.subr\n. ${datadir}/bin/activate\nrc_reload=NO\nrc_usercheck=NO\npexp=\"/usr/local/_synapse/.synapse/bin/python.*\"\nrc_start() {\n        ${rcexec} \"${daemon} start ${daemon_flags}\"\n}\nrc_stop() {\n        ${rcexec} \"${daemon} stop ${daemon_flags}\"\n}\nrc_restart() {\n        ${rcexec} \"${daemon} restart ${daemon_flags}\"\n}\nrc_cmd $1\n``. ksh does support \"sourcing\" files - it just uses the.syntax:. bin/activate` for example.. ",
    "hiberno": "@williamleuschner I would. . I can confirm this issue on my homeserver setup.\nI am running the matrix-synapse-0.8.7 on a Debian Jessie server. I have installed it using the repository provided.. ",
    "ReK2Fernandez": "I agree with you for most part.. but the issue is prob something you guys have bring upon you...  Is not about how well it works.. fragmented software just is a pain for everyone to maintain, the people  who we build  GNU/Linux distributions can only support/test 1 language version, 1.x 2.x 3.x etc just one... and can have both for some time is ok to give developers time to migrate.. but not 5 years... one will expect for fragmented developers to port their code in between 1-2 years max if not then the code is fragmented you can't expect for us to support fragmented code for 10-20 years.. in reality if developers do not make a priority to migrate when is still easy to do so, the problem just gets worse and worse.. I can't tell users to uninstall python3 that is well tested so they can run a piece of old not tested anymore software.. so is not about how well it runs.. is how well it runs on their linux distribution and support from the community in that linux distribution, to bad I like everything this is all about.. unfortunately  can't make packages of it if requires for me to appen support for python2.\n. ",
    "alexjg": "Ah that makes sense, development version works fine. Thanks.\n. ",
    "elopio": "@erikjohnston ping. I'm wondering what to do next here.\n. @erikjohnston will do. Thanks.. https://github.com/matrix-org/package-synapse-snap/pull/1. oh, wow, that sounds so nice! \nI had proposed it here: #1158.\nThis is what I tested: https://gist.github.com/elopio/dffcda326f5b51feedeb09f012ac9a44\nLast time it worked all well. Now after rebasing with master it's getting stuck when I try to call register-new-matrix-user.\nThe homeserver.log doesn't seem to include any error, and according to the syslog there are no apparmor denials caused by the confinement here. @ara4n do you know how can I get more info of from the registration?. Oh, nevermind. I was using 8008 instead of 8448. This seems to work ok. There are two new apparmor denials, but they don't seem to affect the main functionality.. The snap source is now at https://github.com/matrix-org/package-synapse-snap/\nThe next steps to publish it require somebody from your project:\nRegister the name at https://myapps.developer.ubuntu.com/dev/click-apps/register-name/\nI would suggest you to use a shared email address and a developer name like matrix or something that will make it look official. And while you are there, maybe you can upload a first snap to the edge channel, to explore the store.\nWith the name registered, it's possible to push a new version every time there is a change in your project. This is the part I like the most, to get happy early adopters and constant feedback from master. You can encrypt the credentials and call the snapcraft push command in any CI system, or make a sync with launchpad which will build and push for you in all the architectures.\nI can guide you on the steps necessary to set it up, and answer any questions you might have along the way. Would you like to jump into a chat, hangout or something?. ",
    "larroy": "I accept the contributing terms:\nSigned-off-by: Pedro Larroy pedro.larroy.lists@gmail.com\n. ",
    "PMaynard": "I think it would be better to use ansible instead of a bash script as it is more efficient and reusable and is supported by vagrant (ansible_local is the best option).\nThere is already this, which is mentioned in the matrix docs/faq (I think). \nI have also made a similar one at https://github.com/matrix-ac/matrix-conf/blob/master/roles/synapse/tasks/main.yml. \n. Is there any work around, I can't federate my homeserver until this is resolved?\nI tried to bind the 8448 listener to my IPv4 address but it did not help.\n[edit]\nNot using IPv6 resolver is a temporary fix https://github.com/matrix-org/synapse/issues/1002\nThough now it does appear to crash randomly. . Is there any work around, I can't federate my homeserver until this is resolved?\nI tried to bind the 8448 listener to my IPv4 address but it did not help.\n[edit]\nNot using IPv6 resolver is a temporary fix https://github.com/matrix-org/synapse/issues/1002\nThough now it does appear to crash randomly. . ",
    "lukebarnard1": "\\o/\n. Is it really instance_id? Because I can't see any sign of that in the code.... There is a PR for the above commit: https://github.com/matrix-org/synapse/pull/1816. @jkolo, the consensus is that we're happy merge the fix for thumbnails scaling correctly but we need a bit more time to consider modifying the thumbnail table to get rid of the UNIQUE. Any chance you could split this into two PRs?. That makes sense, I'll make some changes.\n. Would this be best?\npython\nRequester = namedtuple(\"Requester\",\n    [\"user\", \"access_token_id\", \"is_guest\", \"device_id\", \"app_service\"]\n)\n. Done :+1:\n. There's one for global_account_data but not for_room. Sadly, \n```py\n\n\n\n( 1, 2 ) < ( 1, 2 )\nFalse\n( 1, 2 ) < ( 1, 3 )\nTrue\n``\nSo we'll have to go for the form with two comparisons.is_event_afteris now also an accurate name with this change.... in IRL we disproved my lovely boolean algebra; it had an error in it. sads.. Er, the docs say,sleep_limit (int): The number of requests received... . Fair!. yes o\\. WFM. wfm!. Is this supposed to be unindented? I'm guessing yes, I just haven't seen this before. no comma?... . oo spooky python string concatenation . I forgot to do this\n. Erik said it should have the same method as the CS API. @erikjohnston, can you confirm?. This now has to change. This now has to change. Ah. This is redundant now that we don't do anything with the result before returning.. Ok, having discussed this IRL, we're going to go foris_openly_joinableas we want to maintain extensibility of the group server concept whilst not returning the entirejoin_policy` dict.. yep, wfm\n. @krombel thank you - I noticed my sytests were failing.. \n\n\n",
    "jrabbit": "I think this is generalizable also the debian package's systemd unit doesn't have any reload function. ",
    "gfrey": "As I struggled with this a lot today, my 2 cents. I used an IP in the URI (something like 'ldap://172.21.201.1') and no matter what I did (using scheme or not, using port or not) it just didn't work. The ldap3 logging suggested there was no socket open (why I add this to this issue). As soon as I started using a hostname (something like 'ldap://ldap.example.org') stuff started to work.\n. I use this with my private synapse instance using the search bind method. I did not test simple bind. Maybe I find some time this evening.\n. Good one! Done.\n. ",
    "lullis": "I am facing the same issue, no matter if I use IP address or hostnames. I have a little bit of experience with ldap3, I will see if I can debug the issue.. So, I can already see that the implementation is wrong when start_tls is set. It should bind before calling conn.start_tls.\nI will try to prepare a fix and submit a PR.\nAnother thing that bothers me is that it is trying to do the authentication by taking the users DN and attempting to bind with those credentials. While that should work on most cases, the only thing that it should try to do is to verify the password, which can be done by a query.. The idea of having it as a separate module is good, and I see some of the improvements are made there already.\nHowever, I tried using the separate module, and it is also broken in different ways.\nPlease take a look at the PR, it contains only the minimal changes to get ldap working with current master branch.. ",
    "rrix": "I can enable the manhole and poke around, if given some guidance on what to do there, or turn up debug or something.\n. The largest room I am in is a self-hosted bridge of #emacs on freenode; I've specifically avoided rooms like #matrix:matrix.org because of these types of issues. i can probably craft some non-sync requests to get room members and such from them today\n. bad news, even a heavily filtered /sync is killing the hs\nbash-4.3$ curl -g 'https://fort.kickass.systems/_matrix/client/r0/sync?filter={\"room\":{\"state\":{\"types\":[\"m.room.member\"]},\"timeline\":{\"limit\":0,\"not_types\":[\"*\"]},\"ephemeral\":{\"not_types\":[\"*\"]}},\"presence\":{\"not_types\":[\"*\"]}}&timeout=30000&access_token={REDACTED}'\n. apache ended up giving up on me...\n```\n\nHost: fort.kickass.systems\nUser-Agent: curl/7.47.1\nAccept: /\n< HTTP/1.1 502 Proxy Error\n< Date: Wed, 02 Nov 2016 03:53:34 GMT                                                                                                                                                      \n< Server: Apache/2.4.10 (Debian)                                                                                                                                                           \n< Content-Length: 510\n< Content-Type: text/html; charset=iso-8859-1\n< \n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n\n502 Proxy Error\n\nProxy Error\nThe proxy server received an invalid\nresponse from an upstream server.\nThe proxy server could not handle the request GET\u00a0/_matrix/client/r0/sync.\nReason: Error reading from remote server\n\nApache/2.4.10 (Debian) Server at fort.kickass.systems Port 443\n\n* Connection #0 to host fort.kickass.systems left intact\n``\n. It's not even getting to the point where it's running any database queries, I'm not sure at all what's going on. I'm going to try to strace it from startup and see if I can make sense of it.. So it turns out if you make your console handler miss afilter` synapse just TOTALLY eats shit.\n\nconsole:\n    class: logging.StreamHandler\n    formatter: precise\ninstead of \nconsole:\n    class: logging.StreamHandler\n    formatter: precise\n    filters: [context]\nSo that's cool.. I'm getting a new exception which I'll put in to a new task, this whole situation should probably be untangled though. This is #1884 .... Feb 08 20:24:08 hypervisor01 docker[29567]: 2017-02-09 04:24:08,955 - synapse.util.metrics - 101 - WARNING -  - Context has unexpectedly changed from 'Measure@7f9364dde600' to 'sentinel'. ('_send_new_transaction')\npossibly relevant?. ",
    "Josue-T": "Hello,\nI want to build a debian package for armhf but I have the same problem with debian testing :\nbuilddeps:matrix-synapse : D\u00e9pend: python-syutil (>= 0.0.7) mais il n'est pas installable\n                            D\u00e9pend: python-pydenticon mais il n'est pas installable\n                            D\u00e9pend: python-signedjson (>= 1.0.0) mais il n'est pas installable\n                            D\u00e9pend: python-unpaddedbase64 (>= 1.0.1) mais il n'est pas installable\n                            D\u00e9pend: python-canonicaljson (>= 1.0.0) mais il n'est pas installable\n                            D\u00e9pend: python-pymacaroons-pynacl mais il n'est pas installable\nAny idea ?. ",
    "euank": "Thanks for doing your job so eagerly @matrixbot :heart: \n. At a guess, this issue can be closed.\n. Heh, thanks!\n. ",
    "aaronraimist": "Fixed by https://github.com/matrix-org/synapse/commit/d7739c4e375195c20b21d7f43248543ecf4ed3f3. This line doesn't make sense now. I think the \"Just like\" worked fine.. suggestion\nhomeserver to control your communications and history or use the. suggestion\nBefore we can install Synapse, we need a working C compiler and the header files\nNot the, just Synapse. For lines 155-159 I actually prefer the old version. I'd argue that since the title of the section is \"Help!! Synapse eats all my RAM!\", it is already somewhat baked in to the README except without all the pertinent information. Not everyone knows to look for that issue.\nI think it is important to get this section included in Synapse 1.0 until more performance improvements come in the future.. ",
    "mprasil": "Is there some way to trim down the state_groups_state table? I have over 8GB and 52M entries in it.. ",
    "Ezwen": "Is this a thing? Is there any documentation on how to configure such auto-join rooms?. Answering myself, yes, and the PR is here: https://github.com/matrix-org/synapse/pull/2545\nSorry for exhuming this issue!. Shouldn't that be POSTGRES_DB, as in https://github.com/kaiyou/synapse/blob/feat-dockerfile/contrib/docker/conf/homeserver.yaml#L55 ?. ",
    "Mikaela": "Is this the issue behind https://github.com/matrix-org/matrix-appservice-irc/issues/473 or should I open a new one?. Are there any news on this or how does GDPR affect this and referenced issues?\nI started thinking about this/them more, because of https://github.com/tulir/mautrix-telegram/issues/248 and https://github.com/t2bot/t2bot.io/issues/15.. From the duplicate https://github.com/matrix-org/synapse/issues/3211#issuecomment-388311845:\n\n@richvdh commented on May 11:\n(we'll be fixing this for GDPR)\n\nGDPR has been in force for months. Is anyone from Matrix.org following this issue? I seem to have asked previously asked about this nine days ago.. ",
    "paulnivin": "I believe I have the same issue. Let me know if you'd like for me to open a new issue.\nI'm running a Synapse homeserver (0.18.5) and I'm unable to receive push notifications on Riot for Android (0.6.5 / Google Play) if Riot is not running. With \"Enable background sync\" enabled, it's more likely that notifications will arrive, but with it disabled, if Riot is not running, I don't receive notifications until Riot is launched. Force stop after enabling \"Enable background sync\" results in the same broken behavior.\nThis is on a stock Pixel XL running Android 7.1.1. \"Notification Targets\" shows \"Pixel XL / im.vector.alpha\".\nServer logs show that Synapse is successfully calling matrix.org for the push notifications:\nsynapse.http.client: [] Sending request POST https://matrix.org/_matrix/push/v1/notify\nsynapse.http.client: [] Received response to  POST https://matrix.org/_matrix/push/v1/notify: 200\nIt appears that GCM is not waking Riot (assuming that GCM events are even being received for Riot).\nLet me know how I can help further debug.. ",
    "brycied00d": "For what it's worth, I ran into a similar issue -- push notifications from matrix.org to my Nexus 5/Riot 0.6.5 (GPlay) had worked, but after signing-out and then into my new homeserver push notifications no longer worked. I confirmed that my homeserver was pushing notifications to matrix.org, and that my phone was indeed listed as a notification target.\nFor me, the solution was to sign-out and \"Clear Data,\" then sign back in. I guess that Riot didn't deregister/reregister with GCM with simply signing out and back in. (I never did bother going so far as to logcat). I should add that, had I realized that deactivating the user would leave it \"stuck,\" I would have \"cleaned up\" myself before deactivating. This speaks to a client usability issue, true, however I believe still that /deactivate should also perform this type of cleanup.. I should add that, had I realized that deactivating the user would leave it \"stuck,\" I would have \"cleaned up\" myself before deactivating. This speaks to a client usability issue, true, however I believe still that /deactivate should also perform this type of cleanup.. This would help to resolve #1853.. This seems like a duplicate of #1853 to me. (I am the author of said issue, yes.)\nAlso related to #2017 . ",
    "danpe": "\ud83d\udc4d . ",
    "Matrixcoffee": "I reproduce this on Riot-Android as well. The message it gets stuck at seems random, but once stuck, it's not possible to scroll back beyond this point.\nI got 'Matrix error: Not found' at the first attempt, and now, retrying, it just seems to be loading forever.\nI was also able to circumvent this by searching for a random keyword, going back far enough, and scrolling forward from that point on.\n#matrix-dev seems to be the only room i have this particular problem with. I sent a rageshake for a previous run-in with this bug.. ",
    "erdnaxeli": "Any news?. ",
    "vith": "The twisted ticket has been closed.\nSounds like synapse can enable outbound SNI with this API: https://twistedmatrix.com/documents/16.4.1/api/twisted.internet.ssl.html#optionsForClientTLS\n. ",
    "andrewshadura": "I'm currently working on this. Feel free to assign this bug to me while I am :). @erikjohnston, done.. ",
    "ArchangeGabriel": "JFYI, it\u2019s already in Arch: https://www.archlinux.org/packages/community/any/matrix-synapse/.\u202f;). Hum\u2026 Here it generated:\n# Local addresses to listen on.\n    # This will listen on all IPv4 addresses by default.\n    bind_addresses:\n      - '0.0.0.0'\n      # Uncomment to listen on all IPv6 interfaces\n      # N.B: On at least Linux this will also listen on all IPv4\n      # addresses, so you will need to comment out the line above.\n      # - '::'\nI should try the IPv6 one, but my current access doesn\u2019t have IPv6 (but my server does).. Sorry, but for the time being I just can\u2019t work with the synchronicity that asking in Matrix HQ implies (and it\u2019s not really good for long message too I guess). I\u2019ll try to open separated issues for everything listed here ASAP.. And in d), I\u2019d like to put everything from https://github.com/matrix-org/synapse/issues/2031 regarding deleting/pruning rooms locally while making federated server that my HS is leaving those rooms.\u202f;). Apparently binding to ::1 does not bind to 127.0.0.1. I\u2019ve tried above (I use nginx as a reverse proxy), and bind_addresses: ['::1'] did not bind 127.0.0.1, but ['::1', '127.0.0.1'] worked.. I think the 6 at the end of this line still makes options mandatory in practice.. ",
    "jfrederickson": "They don't appear to be. I currently have a stuck invite from a coworker who (briefly) set up his own HS. Here's the relevant bit from my HS logs:\n2017-01-13 09:02:28,023 - synapse.http.matrixfederationclient - 183 - WARNING - POST-493265- {GET-O-81605} Sending request failed to matrix.stj.io: GET matrix://matrix.stj.io/_matrix/federation/v1/make_join/!LIBUytFwYtLjHuihJx:matrix.stj.io/@jon:terracrypt.net: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2017-01-13 09:02:28,023 - synapse.http.outbound - 209 - INFO - POST-493265- {GET-O-81605} [matrix.stj.io] Result: ConnectionRefusedError - ConnectionRefusedError: Connection refused\n2017-01-13 09:02:28,023 - synapse.federation.federation_client - 517 - WARNING - POST-493265- Failed to make_join via matrix.stj.io: Connection refused\n2017-01-13 09:02:28,024 - synapse.util.async - 205 - INFO - POST-493265- Releasing linearizer lock 140569643205072 for key (u'!LIBUytFwYtLjHuihJx:matrix.stj.io',)\n2017-01-13 09:02:28,025 - synapse.http.server - 139 - ERROR - POST-493265- Failed handle request synapse.http.server._async_render on <synapse.rest.ClientRestResource object at 0x7fd8eb9ea7d0>: <SynapseRequest at 0x7fd88469e2d8 method=POST uri=/_matrix/client/r0/join/!LIBUytFwYtLjHuihJx:matrix.stj.io?access_token=<redacted> clientproto=HTTP/1.1 site=8008>\nTraceback (most recent call last):\n  File \"synapse/http/server.py\", line 116, in wrapped_request_handler\n    yield request_handler(self, request, request_metrics)\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/http/server.py\", line 255, in _async_render\n    callback_return = yield callback(request, **kwargs)\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/rest/client/v1/room.py\", line 263, in on_POST\n    third_party_signed=content.get(\"third_party_signed\", None),\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/handlers/room_member.py\", line 172, in update_membership\n    content=content,\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/handlers/room_member.py\", line 257, in _update_membership\n    remote_room_hosts, room_id, target, content\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/handlers/room_member.py\", line 136, in remote_join\n    content,\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/handlers/federation.py\", line 680, in do_invite_join\n    content,\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/handlers/federation.py\", line 930, in _make_and_verify_event\n    content,\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/var/lib/matrix-synapse/envs/synenv/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"synapse/federation/federation_client.py\", line 520, in make_membership_event\n    raise RuntimeError(\"Failed to send to any server.\")\nRuntimeError: Failed to send to any server.\n2017-01-13 09:02:28,026 - synapse.access.http.8008 - 91 - INFO - POST-493265- 127.0.0.1 - 8008 - {@jon:terracrypt.net} Processed request: 644ms (9ms, 0ms) (7ms/3) 67B 500 \"POST /_matrix/client/r0/join/!LIBUytFwYtLjHuihJx:matrix.stj.io?access_token=<redacted> HTTP/1.1\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Riot/0.9.5 Chrome/53.0.2785.143 Electron/1.4.11 Safari/537.36\". ",
    "kythyria": "\nI will try to create a script that doesn't just prune the rume, but redacts all messages older than X days\n\nAka, a valid reason to patch synapse to deliberately ignore redaction events.. Or just make the latter warning show all the time, because that's the best you're going to get. You can't actually force anyone to implement redaction correctly. This isn't something a room admin can choose, unless the room never leaves a server they control.\nAnd no, it's not a desired option when it also allows people to have temper tantrums and wipe everything for no reason. Heck, it's not a desired option for matrix at all as evidenced by the fact that it's not designed to make redacting easy.. The purge history API doesn't bulk redact. That's not its job. Is this even a bug?. If and only if the room is completely unfederated, and the server honours the relevant messages, will redaction do what @rubo77 seems to think it does.. If you want to delete old messages from your server, that's fine. You have exactly no right--and no ability to enforce--that I also delete them.. If you want to delete old messages from your server, that's fine. You have exactly no right--and no ability to enforce--that I also delete them.. You can't unsend email, or unsend paper mail, or unsay things in general.. You can't unsend email, or unsend paper mail, or unsay things in general.. You can demand people treat it as unsaid, but you can't actually unsay it.. You can demand people treat it as unsaid, but you can't actually unsay it.. > And additionally you could prevent an email from being sent, if it is still in your outbox.\nWell, yes. Things that haven't happened yet are generally easy to undo. However, as soon as that message, matrix or email, touches another server, you've lost control of it. Period. No take-backs. So you have to run that bulk redact before anyone from another server enters the room. After that point the window for redaction is, uh, tiny.. > And additionally you could prevent an email from being sent, if it is still in your outbox.\nWell, yes. Things that haven't happened yet are generally easy to undo. However, as soon as that message, matrix or email, touches another server, you've lost control of it. Period. No take-backs. So you have to run that bulk redact before anyone from another server enters the room. After that point the window for redaction is, uh, tiny.. > If the room is federated, this redaction-flag should be federated too, so the admin has full control over the history of the room\nAnd then you hit a server run by someone like me that's been patched to ignore the flag, or never implemented it to begin with. Oops.\nThe admin does not, and cannot, have that kind of control. This is a fundamental property of any distributed system whose nodes are owned by unrelated entities. Imagine going up to Google and demanding they remove from the inboxes of their users every message older than X days. That's basically what you're asking for here.\nAnd the point of redact is that stuff is deleted from the database leaving only a tombstone whose sole function is to prevent the room from becoming broken.. > If the room is federated, this redaction-flag should be federated too, so the admin has full control over the history of the room\nAnd then you hit a server run by someone like me that's been patched to ignore the flag, or never implemented it to begin with. Oops.\nThe admin does not, and cannot, have that kind of control. This is a fundamental property of any distributed system whose nodes are owned by unrelated entities. Imagine going up to Google and demanding they remove from the inboxes of their users every message older than X days. That's basically what you're asking for here.\nAnd the point of redact is that stuff is deleted from the database leaving only a tombstone whose sole function is to prevent the room from becoming broken.. The problem isn't a \"redacted by\" thing, it's that having an auto-redact state entry creates a false sense of security, and an even falser sense of control.. The problem isn't a \"redacted by\" thing, it's that having an auto-redact state entry creates a false sense of security, and an even falser sense of control.. > The \"sense of security\" wouldn't be false, if the history length would be visible in the head of the room.\nIt would be entirely a lie if any server in the room ignored the history length. Which they will. So the only non-wishful history length it would be valid to display is \"messages might be retained forever\".\nTo put it another way, I can put Delete-after: 2d  in my emails, and write a client that advertises the option to set that header, but that means absolutely nothing if your mail system doesn't honour it. It just means people will incorrectly think the messages will self-destruct.\nTelegram can do this because it's a closed system where one party controls all the servers, and using a third-party client is difficult. Neither of those applies to Matrix, except in a strictly non-federated context.. > If deleted by the creator/first uploader, the links should stop working\nThat sounds like a good reason to not change the current behaviour.. > What about the wasted storage. I forward a viral video 5 MB to 300 groups = 1500MB wasted for 1 video. Even Google attempted this for their email forwards. \nServers can deduplicate if they want to, or you could use a client that reuses the same mxc URI.\n\nSnap chat destroys on read.\n\nIt claims to. This is a very different thing to actually doing so. It's not possible to build a messaging system that gives that guarantee.. ",
    "xyzz": "Now I stopped receiving messages from that room, the last received message is https://matrix.to/#/!cURbafjkfsMDVwdRDQ:matrix.org/$14792907687JzRAX:krtdex.com\nIt also appears that my @xyz:xyz.is account is not in the channel anymore (it used to be present in userlist)\nHowever, I still cannot leave the room, getting same error, so it's just hanging there without receiving any messages. I think last time that happened I was able to first rejoin the room normally and then leave it, but not sure.\n. Seems to keep happening erratically.\nI've noticed these errors in my log: (happened before upgrade to 0.18.5, on 0.18.3)\n2016-12-16 23:15:55,448 - synapse.federation.federation_server - 154 - ERROR - PUT-124- Failed to handle PDU\nTraceback (most recent call last):\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/synapse/federation/federation_server.py\", line 147, in on_incoming_transaction\n    yield self._handle_new_pdu(transaction.origin, pdu)\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1297, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/synapse/federation/federation_server.py\", line 578, in _handle_new_pdu\n    get_missing=False\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1297, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/synapse/federation/federation_server.py\", line 612, in _handle_new_pdu\n    auth_chain=auth_chain,\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1297, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/synapse/handlers/federation.py\", line 174, in on_receive_pdu\n    state=state,\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1297, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/synapse/handlers/federation.py\", line 1173, in _handle_new_event\n    auth_events=auth_events,\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1297, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/synapse/handlers/federation.py\", line 1351, in _prep_event\n    origin, event, context, auth_events=auth_events\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/twisted/internet/defer.py\", line 1299, in _inlineCallbacks\n    result = g.send(result)\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/synapse/handlers/federation.py\", line 1637, in do_auth\n    self.auth.check(event, auth_events=auth_events)\n  File \"/home/synapse/.synapse/local/lib/python2.7/site-packages/synapse/api/auth.py\", line 130, in check\n    \"Room %r does not exist\" % (event.room_id,)\nSynapseError: 403: Room '!cURbafjkfsMDVwdRDQ:matrix.org' does not exist\nafter upgrade there's no more exceptions, however there's still errors:\n2016-12-16 23:40:11,956 - synapse.federation.transaction_queue - 459 - WARNING - - Transaction returned error for $1481931607248453kSbjx:matrix.org: {'error': \"403: Room '!cURbafjkfsMDVwdRDQ:matrix.org' does not exist\"}\nreceiving messages from the room works fine\ntrying to send a message:\n2016-12-16 23:49:18,765 - synapse.http.server - 123 - INFO - PUT-3946- <SynapseRequest at 0x7f11cc313320 method=PUT uri=/_matrix/client/r0/rooms/!cURbafjkfsMDVwdRDQ%3Amatrix.org/typing/%40xyz%3Axyz.is?access_token=<redacted> clientproto=HTTP/1.0 site=8008> SynapseError: 403 - User @xyz:xyz.is not in room !cURbafjkfsMDVwdRDQ:matrix.org (<FrozenEvent event_id='$14814898074751Ncrap:xyz.is', type='m.room.member', state_key='@xyz:xyz.is'>)\n2016-12-16 23:49:18,830 - synapse.http.server - 123 - INFO - PUT-3948- <SynapseRequest at 0x7f11bf1a18c0 method=PUT uri=/_matrix/client/r0/rooms/!cURbafjkfsMDVwdRDQ%3Amatrix.org/typing/%40xyz%3Axyz.is?access_token=<redacted> clientproto=HTTP/1.0 site=8008> SynapseError: 403 - User @xyz:xyz.is not in room !cURbafjkfsMDVwdRDQ:matrix.org (<FrozenEvent event_id='$14814898074751Ncrap:xyz.is', type='m.room.member', state_key='@xyz:xyz.is'>)\n2016-12-16 23:49:19,130 - synapse.handlers.message - 497 - WARNING - PUT-3947- Denying new event <FrozenEvent event_id='$14819321587etCMC:xyz.is', type='m.room.message', state_key='None'> because 403: User @xyz:xyz.is not in room !cURbafjkfsMDVwdRDQ:matrix.org (None)\n2016-12-16 23:49:19,132 - synapse.http.server - 123 - INFO - PUT-3947- <SynapseRequest at 0x7f11c45303b0 method=PUT uri=/_matrix/client/r0/rooms/!cURbafjkfsMDVwdRDQ%3Amatrix.org/send/m.room.message/m1481932157240.1?access_token=<redacted> clientproto=HTTP/1.0 site=8008> SynapseError: 403 - User @xyz:xyz.is not in room !cURbafjkfsMDVwdRDQ:matrix.org (None)\ntrying to leave the room:\n2016-12-16 23:50:23,804 - synapse.access.http.8008 - 59 - INFO - POST-4181- 127.0.0.1 - 8008 - Received request: POST /_matrix/client/r0/rooms/!cURbafjkfsMDVwdRDQ%3Amatrix.org/leave?access_token=<redacted>\n2016-12-16 23:50:23,913 - synapse.http.server - 123 - INFO - POST-4181- <SynapseRequest at 0x7f11d562af38 method=POST uri=/_matrix/client/r0/rooms/!cURbafjkfsMDVwdRDQ%3Amatrix.org/leave?access_token=<redacted> clientproto=HTTP/1.0 site=8008> SynapseError: 404 - Not a known room\n2016-12-16 23:50:23,915 - synapse.access.http.8008 - 91 - INFO - POST-4181- 127.0.0.1 - 8008 - {@xyz:xyz.is} Processed request: 110ms (110ms, 0ms) (0ms/0) 66B 404 \"POST /_matrix/client/r0/rooms/!cURbafjkfsMDVwdRDQ%3Amatrix.org/leave?access_token=<redacted> HTTP/1.0\" \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36\"\ntrying to join the room using riot web client does not work - nothing happens at all, it's like it sees we're already in the room and does not send the request to the homeserver\ntrying to join the room using the legacy web client worked fine, after that I was able to send messages to it and leave it via riot web. ",
    "snevas": "Pitching in to say I have exact same issue, with the same room #matrix:matrix.org a.k.a. !cURbafjkfsMDVwdRDQ:matrix.org. ",
    "n0rc": "I had the same issue with room !cURbafjkfsMDVwdRDQ:matrix.org which I never joined.\nThe solution mentioned here fixed it for me now.. ",
    "AndrewJDR": "Very excited for this as well. Also referencing in the riot issue for editable messages:\nhttps://github.com/vector-im/riot-web/issues/1862. Some other example usages of this when bridges are involved are below. Please correct me if these would be inappropriate usages of the aggregations api... I'm trying to understand the different ways they can be used:\nWith bridges, when a real matrix user sends a message into a bridged room, it would be nice to be able to specify to the user if a specific message failed to be delivered to the bridged network with a red X icon next to the message in the client.\nAnother example -- We have an iMessage bridge. When an outside iMessage user sends a message and it passes to me through the matrix bridge, it would be nice to know whether the sender had used SMS or iMessage to send the message.\n. Just curious if there's been any forward progress on this?. ",
    "penguin42": "I now have it working, specifying the height and remembering not to specify the access key, e.g.\nhttps://matrix.org/_matrix/media/r0/thumbnail/matrix.penguin42.com/thdkvTtQHTIiVStHRhlraXpF?width=640&height=480&method=scale\n. I now have it working, specifying the height and remembering not to specify the access key, e.g.\nhttps://matrix.org/_matrix/media/r0/thumbnail/matrix.penguin42.com/thdkvTtQHTIiVStHRhlraXpF?width=640&height=480&method=scale\n. Something is still not right - thumbnail fetches are working for me, but not full size images at the moment.. I've just merged a fix for the non-thumbnail problem. ",
    "mirrom": "Hi Erik!\nThanks for the reply and good to know! I will see what I can do to make this work :). Hi Erik!\nThanks for the reply and good to know! I will see what I can do to make this work :). Solved by https://github.com/matrix-org/matrix-synapse-ldap3/pull/5. Solved by https://github.com/matrix-org/matrix-synapse-ldap3/pull/5. ",
    "smgoller": "I'm currently having a problem with 0.18.5, running on centos 7. With URL Preview turned on, I get this crash shortly after starting (I believe it's try to parse a url in our room history):\n[  116.606994] traps: python2.7[9269] trap invalid opcode ip:7f09f2b16bee sp:7ffc6c1bd658 error:0 in etree.so[7f09f28f8000+4b7000]\"\nAfter mentioning this in #matrix-dev, I was asked to post a comment here. . I'm currently having a problem with 0.18.5, running on centos 7. With URL Preview turned on, I get this crash shortly after starting (I believe it's try to parse a url in our room history):\n[  116.606994] traps: python2.7[9269] trap invalid opcode ip:7f09f2b16bee sp:7ffc6c1bd658 error:0 in etree.so[7f09f28f8000+4b7000]\"\nAfter mentioning this in #matrix-dev, I was asked to post a comment here. . I'm currently having a problem with 0.18.5, running on centos 7. With URL Preview turned on, I get this crash shortly after starting (I believe it's try to parse a url in our room history):\n[  116.606994] traps: python2.7[9269] trap invalid opcode ip:7f09f2b16bee sp:7ffc6c1bd658 error:0 in etree.so[7f09f28f8000+4b7000]\"\nAfter mentioning this in #matrix-dev, I was asked to post a comment here. . ",
    "ddkn": "I have a similar issue with FreeBSD, more specifically PyNaCl. In the file \nsynapse/synapse/python_dependencies.py should pynacl dependency be >= 0.3.0? and not hard set? In the FreeBSD repo pynacl is set to v1.0.1.\nI am aware one could use a virtual env, but unless there are api changes then this should be bumped up.. I have a similar issue with FreeBSD, more specifically PyNaCl. In the file \nsynapse/synapse/python_dependencies.py should pynacl dependency be >= 0.3.0? and not hard set? In the FreeBSD repo pynacl is set to v1.0.1.\nI am aware one could use a virtual env, but unless there are api changes then this should be bumped up.. ",
    "jhdulaney": "This seems to be fixed in 0.27.0-rc2. ",
    "oerdnj": "From ldap3 2.0.7 changelog:\n```\n2.0.7 2016.10.27\n    FIRST RELEASE OF LDAP3 V2\n\n[...]\n        The following older constants in ldap3 have been removed, please use the suggested ones:\n        AUTH_ANONYMOUS = ANONYMOUS\n        AUTH_SIMPLE = SIMPLE\n[...]\n```\nIt can be fixed for the moment by forcing a downgrade to 1.x version:\npip install ldap3==1.4.0\n. From ldap3 2.0.7 changelog:\n```\n2.0.7 2016.10.27\n    FIRST RELEASE OF LDAP3 V2\n\n[...]\n        The following older constants in ldap3 have been removed, please use the suggested ones:\n        AUTH_ANONYMOUS = ANONYMOUS\n        AUTH_SIMPLE = SIMPLE\n[...]\n```\nIt can be fixed for the moment by forcing a downgrade to 1.x version:\npip install ldap3==1.4.0\n. This is just a workaround and needs to be properly fixed in the release. So please reopen the bug.. This is just a workaround and needs to be properly fixed in the release. So please reopen the bug.. ",
    "rafaelmr2": "Worked. Thanks.. Worked. Thanks.. Sorry. Reopened.. Sorry. Reopened.. Upgrade to rc3. Same error.. Updated and working now (final release).. ",
    "popey": "Hi. Did this ever get published? I don't see it in the store :(. ",
    "muppeth": "Is it possible to specify bind mode in homeserver.yaml. I think my problem has something to do with Simple bind not being able to read out all attributes from ldap. Also I've noticed that then using base for example \"dc=example,dc=local\" instead of more detailed \"ou=people,dc=example,dc=local\" Search mode finds users in \"ou=people,dc=example,dc=local\", but simple bind does search directly in \"dc=example,dc=local\" which results in user not found. (cn=user,dc=example,dc=local instead of cn=user,ou=people,dc=example,dc=local)\nI tried specifying the mode in config file (mode: \"search\") but that does not seem to work, though my understanding is that it ldap_auth_provider should be taking it from the config file: \"self.ldap_mode = config.mode\". Is it possible to specify bind mode in homeserver.yaml. I think my problem has something to do with Simple bind not being able to read out all attributes from ldap. Also I've noticed that then using base for example \"dc=example,dc=local\" instead of more detailed \"ou=people,dc=example,dc=local\" Search mode finds users in \"ou=people,dc=example,dc=local\", but simple bind does search directly in \"dc=example,dc=local\" which results in user not found. (cn=user,dc=example,dc=local instead of cn=user,ou=people,dc=example,dc=local)\nI tried specifying the mode in config file (mode: \"search\") but that does not seem to work, though my understanding is that it ldap_auth_provider should be taking it from the config file: \"self.ldap_mode = config.mode\". Did some investigation. Basically my problem is that normal users cannot search directory besides attributes in their own cn. \nWhy is user creation not done by bind_dn user who has readonly rights to search the directory?. Did some investigation. Basically my problem is that normal users cannot search directory besides attributes in their own cn. \nWhy is user creation not done by bind_dn user who has readonly rights to search the directory?. Yes. I confirm that works. I wonder if it may be included in upstream. I think switching to simple bind to register a user is not neccecary.\nThis also solves the problem of defining base dn (dc=example,dc=com instead of ou=people,dc=example,dc=com) which lets you register users from different ou(s). Yes. I confirm that works. I wonder if it may be included in upstream. I think switching to simple bind to register a user is not neccecary.\nThis also solves the problem of defining base dn (dc=example,dc=com instead of ou=people,dc=example,dc=com) which lets you register users from different ou(s). ",
    "douglas-lee": "I have the same problem.. I have the same problem.. ",
    "antil0pa": "In ldap_aut_provider.py in line 341 and 342 ldap unbind connection in search mode and reconnects in simple mode. By commenting this two lines and replcaing them with \nreturn True, conn\nthe retrival of attributes continues in search mode. In ldap_aut_provider.py in line 341 and 342 ldap unbind connection in search mode and reconnects in simple mode. By commenting this two lines and replcaing them with \nreturn True, conn\nthe retrival of attributes continues in search mode. ",
    "WGH-": "Is it related to Web Push API standard that's being developed for browsers? The one that allows web apps to push notifications even when tab is not open.. In most cases blocking API should actually be faster, as the messages instantly go to the buffer (disk cache, systemd-journald socket buffer, etc.) to be dealt with asynchronously by the kernel or other process. Whereas in the case of asynchronous API twisted will have to deal with some extra bookkeeping.. ",
    "spacekitteh": "There is this:\nhttp://calendar.perfplanet.com/2016/http2-push-the-details/. Related: #1699 . ",
    "Torxed": "I'd like to point out that doing:\nDELETE FROM users WHERE name='@user:domain.com';\n\nIs a bad idea, just as INSERT INTO users VALUES (...);, these are not fullfilling the requirements of a new user internally in Synapse.. #1952 . Just realized I branched Master, could perhaps forked and merged into a staging branch of sorts. My apologies.. @ara4n no problem! Wasn't that big of a bug and migrating to new hardware is more important :). Added in a Python based appservice hook for twilio.com.\nThis enables sending sms from matrix.\nBare in mind, it's crude at best. It's a night hack from yesterday.\nBut it works and was a good learning experience. Might switch over to the Python SDK soon.. Added a submodule pointing towards:\n * https://github.com/Torxed/python-matrix-appSrv-bot\nEssentially a rework of the twilio bot but more expanded to be general purpose.\n * Python bot\n * Plugin support (Dynamic event catching)\n * Does Email/SMS (both send() & recieve()). @ara4n Will do! :D Thanks for the input! :). @ara4n here's the repo :)\nI will probably need help putting this into the docs, will try to fix the known issues this weekend as well, even tho this is a working copy.\nhttps://github.com/Torxed/matrix-synapse-invite. Just found this old post:\n\nhttps://matrix.org/blog/2015/03/02/introduction-to-application-services/\n\nTurns out the payload is valid, standard event data (that part I had already figured out)..\nBut still, why do the irc bot reply with 404 for /transactions/?. If someone can move this over to the matrix-appservice-irc stack instead that'd be awesome.\nAparently you need to respond HTTP/1.1 200 OK...\\r\\n{} at the very least for the server to start issuing data to the appservice. Since the irc bot doesn't do this any more (for some reason), no messages are ever delivered from irc->matrix. matrix->irc works just fine.. ",
    "SiNaPsEr0x": "I change the issue. Is a centos. Yes in OS X this problem ... solutions???. Ok thanks but server is on debian ... and client connect to ssl port ... problem fix?. the problem is that inside the Riot application you can not enter a local certified so if one creates a locally there is no way to authenticate it permanently. Is added!!! thanks... but restart after install certificate. ",
    "uhoreg": "Looks like a dup of #1403. keyring.debian.org is only for keys in the Debian keyring (i.e. for Debian Developers and Debian Maintainer keys), so the matrix.org repo signing key will not go in there.\nI think the best way to get the key is to do something like: curl https://matrix.org/packages/debian/repo-key.asc | sudo apt-key add -. see also matrix-org/package-synapse-debian#8. missing \"it\" before \"is\"?  (i.e. should be \"To get started, it is easiest...\"). It should probably use \"my.domain.name\" instead of \"my.domain.here\" for consistency with the above example (also two lines below). s/conversation/configuration/ ?. Maybe make a note that Synapse only needs /_matrix/* forwarded, so the proxy can forward other paths in the default virtual host to another server?  Not sure of the best wording.. missing \"n\" in \"action\".  Also, the comment says 5 minutes, but the code says 3 minutes?. Since L17 does a copy of ./, then AFAICT, you can replace this line by a \"cp -r /synapse/source/docker/rootfs/* /\" added to the RUN statement above (somewhere before the rm-rf /synapse/source), to avoid another layer in the image.. Isn't the data directory still needed even with postgresql, for the content repository?  (In fact, I don't see where media_store_path gets set when the config gets generated.). should also EXPOSE 8008. It seems strange to me to litter / with so many files.  Why not just keep them all there?. Would be nice to have some way to add appservices somehow (maybe in a future version of the Dockerfile).. I guess it should only do these if SYNAPSE_CONFIG_PATH is not set, and if mode is not generate. This function is only used when checking to see if we should overwrite a key.  Would it be better to just convert that bit of code to use get_e2e_room_keys instead, and get rid of this function?. Should be \"systemctl enable matrix-synapse\"?. Surely this will break on non-x86-64 architectures (like ARM or i386).  Unless we're only planning on ever supporting x86-64, in which case, \\<shrug>. One option would be to check the output of dpkg-architecture -q DEB_HOST_ARCH, and only set that if it's equal to amd64. Other functions in this file are wrapped in with (yield self._upload_linearizer.queue(user_id)):.  I don't know if this function needs it too.. ",
    "user318": "Yes. Closing this issue then.. ",
    "jacklund": "I've got the same issue - running on OSX, tried importing the cert into the system keychain, still no luck.. Okay, I figured it out.\nThe problem was twofold: 1) I didn't set up the certificate for trust, and 2) I didn't access the site using the domain in the certificate (I really think the docs should be updated on this point, when it tells you to access the home server as localhost).\nTo fix 1: In your .synapse folder, type sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain my.domain.name.tls.crt where my.domain.name is the domain name that you created the cert with when setting up configuration here.\nTo fix 2: You'll need to add your domain name in /etc/hosts to point to localhost, with a line that looks like this: 127.0.0.1 localhost my.domain.name. You'll probably want to remove my.domain.name from this entry after testing.. If you're running Riot on OSX, you should be able to add the certificate using add-trusted-cert after copying it over from Debian to your OSX box.. ",
    "GalPressman": "Thanks for clarifying.\nSo as far as I understand I can't choose to \"postpone\" events to a later time for syncing, is that correct?\nFor example, After receiving many messages to many rooms (without syncing) I would like to sync my rooms one by one. Syncing with the first's room filter will just dismiss all other events?\nThis wanted functionality should be implemented by the client itself?. Thanks for the help, now I understand :).. ",
    "MurzNN": "@kythyria thanks for the description! \nI want to describe more about privacy problem with deletion - Matrix developers very often warns about privacy issues on feature requests about delete room & messages: with federation we can't control other servers and can't be sure that they remove messages & rooms, so they don't want implement deletion (full remove room, self-destruct messages, etc) in Matrix protocol. But most of rooms in server usually not federated and can be succesfully cleaned up on one homeserver with full guarantees. But users miss this feature, even if room is not federated.\nSo good way on deletion process will be check if room is federated, and show \"large red warning\" on client side, when user try to cleanup something, and describe that data of this room is removed only on this homeserver, and can be kept on other federated servers. And add per-room option \"Disable federation\".\nThis is better that ignoring all delete feature requests from users with \"this is insecure so will not implemented\".. We can already implement this feature now via bot, here is issue: https://github.com/turt2live/matrix-wishlist/issues/82\nThis is not too hard work, so if anybody have free time or programmer resources - he can do the bot, based on Go-NEB for example.. Seems here is admin command now in Synapse for purging rooms: https://github.com/matrix-org/synapse/blob/master/docs/admin_api/purge_history_api.rst. ",
    "cuongnv": "@rubo77 : I create simple python script that can be remove messages after predefined timeout.\nhttps://github.com/matrix-org/synapse/pull/4206\n. ",
    "kroeckx": "Because the name was so confusing we have renamed it in OpenSSL and deprecated the SSLv23 one, and so python has done the same. I have also deprecated all those version specific functions. I also improved the documentation in OpenSSL, and I at least hope that it's clear now: https://www.openssl.org/docs/manmaster/man3/SSL_CTX_new.html. Yes.. I'm not sure what you mean, but trying that with the 0.19 release doesn't seem to work.. I want it to listen to a specific IPv6 address\n. ",
    "erdii": "IMHO a generic cloud storage backend with the ability to let files expire to keep costs low would be really nice!\nEDIT: I managed to store the media files in s3 via s3fs-fuse but it's more of a hack \ud83d\ude05. i experience a similar issue with my hs i get bombarded with log warning like this:\nFeb 19 17:46:07 matrix.werise.de python[10692]: 2017-02-19 17:46:07,806 - synapse.federation.federation_base - 142 - WARNING - PUT-45- Event content has been tampered, redacting $1471024686296609tuFpn:matrix.org: {'origin': 'matrix.org', 'signatures': {'matrix.org': {'ed25519:auto': 'hw++tASFhvPwWnwxmmBq8nfPCebLYHz3+8Mtx/1IMV98tDdccGCw5cz8bUz5rMA1jLrpdyIpD8P2mVgXzIoaDw'}}, 'origin_server_ts': 1471024686346, 'sender': '@freenode_LIndividu:matrix.org', 'event_id': '$1471024686296609tuFpn:matrix.org', 'prev_events': [['$1471024331295629oPWfu:matrix.org', {'sha256': '2Zm1Y2w09nfobMIv610hSRwMD/CsLGb9f4VpyrXDk+Y'}]], 'membership': 'join', 'state_key': '@freenode_LIndividu:matrix.org', 'unsigned': {'age': 16501677385}, 'content': {'membership': 'join'}, 'depth': 181879, 'prev_state': [], 'room_id': '!XqGwToACtMhvSUIypX:matrix.org', 'auth_events': [['$144133105873603UerXA:matrix.org', {'sha256': 'tLIxVK3FKyWjuJTIOuWyowxExliPkQ/NG/k6Xm408gU'}], ['$144133105873608eGkuM:matrix.org', {'sha256': '6zU10QpRxiiBQGW9FFW6/gTEJTCQ42C2P5s/I4PkPWU'}], ['$144133105873601dcEuf:matrix.org', {'sha256': '8jXHHXw11KXDuGWWJGeDgyHm30MMdnXO3lxlpi5gpLI'}]], 'hashes': {'sha256': 'Y4A1a3jqPDR6vuj0hyloaZQImLCBvEYA9YUn/fbDt1M'}, 'type': 'm.room.member'}\nwhen the \"DOS\" starts my server becomes unresponsive and crashes after some minutes.\nEDIT: this happened after i tried to join some rooms on matrix.org\nEDIT2: it seems that my hs is initiating all these requests, because when i blocked connections from matrix.org to my federation port the warnings still came. i blocked connections in both directions for now.\nEDIT3: now i get errors because my server still tries to connect to matrix.org\nFeb 19 19:26:40 matrix.werise.de python[13791]: 2017-02-19 19:26:40,945 - synapse.push.httppusher - 298 - WARNING - - Failed to push https://matrix.org/_matrix/push/v1/notify\n. ",
    "sraja415": "\nWhat about the wasted storage. I forward a viral video 5 MB to 300 groups = 1500MB wasted for 1 video. Even Google attempted this for their email forwards. \n\nMathew also that it is a good to reduce size. \n\nYou send a confidential video/doc/image as a confused young 20 something old..are we saying that his/her life has to be destroyed. Snap chat destroys on read. Just some fo\n\nSent from my iPhone. Pardon my \nbrevity. \n\nOn Jan 2, 2017, at 9:05 PM, kythyria notifications@github.com wrote:\nIf deleted by the creator/first uploader, the links should stop working\nThat sounds like a good reason to not change the current behaviour.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "adnidor": "No, I generated the secret manually using pwgen -sy 50 because the debian package doesn't generate one automatically.\nIt is neither documented that \\ isn't a valid character for the secret, nor does it produce a \"clean\" error message when encountered but crashes with a stacktrace\nAs I see it, this is definitely a bug with the following possible fixes:\n- Patch the code to allow for special characters\n- Update the documentation to include valid characters for registration_shared_secret\n- Patch the code to not crash, but produce a warning and just not use the shared_secret. ",
    "vberger": "It still seems to be quite a problem (it is for me at least).\nIf that interests anyone, I monitor the evolution of these extremities with this SQL query (it is a little big because it retrieves the canonical id of offending rooms as well):\nsql\nSELECT f.count, concat(f.alias, ' (', f.room_id, ')')\n    FROM (\n        SELECT t.room_id, t.count, se.event_id, e.content::json->'alias' AS alias\n        FROM (\n            SELECT room_id, count(*) \n            FROM event_forward_extremities\n            GROUP BY room_id HAVING count(*)>1\n        ) t \n        LEFT OUTER JOIN current_state_events AS se\n            ON se.room_id = t.room_id AND se.type = 'm.room.canonical_alias'\n        LEFT OUTER JOIN events AS e\n            ON se.event_id = e.event_id\n    ) f;\n  . From what I see, worst offenders seem to be IRC-bridged rooms with a high join/part turnover. Such as #mozilla_#rust:matrix.org, #mozilla_#rust-offtopic:matrix.org, and #haskell:matrix.org. I had no catastrophic accumulation, but these rooms sat at around 60-80 extremities.\nI finally got around just leaving these rooms, and I must tell, my HS is much more responsive since I've done that.. Maybe this is a stupid idea, but would it make sense to have the HS send some kind of \"noop event\" in the rooms when the number of extremities gets high?\nJust an event with no content (is that even possible?), just for the sake of merging the extremities.. To give all possible details (from what I remember):\n\ntwo days ago I left #mozilla_#rust:matrix.org and rejoined from a riot.im/develop instance\nthe rejoin was troublesome, got a message about the room being \"not available\"\nreloading (F5) my riot tab displayed me as properly in the room\nnow, when I open riot.im/develop on other computers, it believe I'm not in the room\nriot-android properly displays me in the room\nI just tried to join the room from an other riot instance, for 2 second it displayed the message \"you are trying to access.... would you like to join....\" and before I could click on the \"join\" link, the room reloaded, appeared in my room list and riot shows believes I'm in\n\nafter reloading riot (F5), it again shows me not in the room. To give all possible details (from what I remember):\n\n\ntwo days ago I left #mozilla_#rust:matrix.org and rejoined from a riot.im/develop instance\n\nthe rejoin was troublesome, got a message about the room being \"not available\"\nreloading (F5) my riot tab displayed me as properly in the room\nnow, when I open riot.im/develop on other computers, it believe I'm not in the room\nriot-android properly displays me in the room\nI just tried to join the room from an other riot instance, for 2 second it displayed the message \"you are trying to access.... would you like to join....\" and before I could click on the \"join\" link, the room reloaded, appeared in my room list and riot shows believes I'm in\nafter reloading riot (F5), it again shows me not in the room. \n",
    "vodik": "I took a screenshot when I hit it, might as well attach it for you guys:\n\n. I took a screenshot when I hit it, might as well attach it for you guys:\n\n. ",
    "Lukasa": "The most obvious problem here is that we call loseConnection, not abortConnection. This means that if we have for any reason stopped the transport writing, or the client isn't reading, we won't actually drop the connection.\nThe simplest resolution here is probably to change the timeout logic to abort the connection, rather than lose it. There's no good reason to want to wait for the client's OK if we timed them out. This would be pretty easily prototyped by changing HTTPChannel.timeoutConnection to call self.abortConnection, rather than calling up to the superclass implementation.. @ara4n I mean, the answer is maybe?\nThe fact that the client is tarpitted suggests that the server could think that the client isn't reading from its socket, which would cause it to call pauseProducing on the client. Is that happening? Is the client consuming its responses?. Ah goddamn it, I think I can see the bug.\nAre you happy to patch your Twisted install? If so, can you edit twisted/web/http.py:2009 (which should currently be policies.TimeoutMixin.timeoutConnection(self) to instead read self.loseConnection()?. (Thanks for the pcap file by the way, that ruled out a whole slew of problems which let me narrow right down onto this.). Oh, and in case it wasn't clear: can you then try to repro? ;)\nMy thinking here, for those following along: a weird quirk of TLSMemoryBIOProtocol is that if you call loseConnection on it, it won't actually do the TLS shutdown if it has a producer registered. For this reason, HTTPChannel.loseConnection explicitly unregisters itself from its transport before it calls loseConnection on that transport, so that the connection shutdown proceeds as expected. This was all added as part of Twisted issue 8868 to resolve the problem of non-reading clients.\nAt the time no change was applied to the timeout mixin because I didn't see a need. However, rereading the timeout mixin I notice that it doesn't call self.loseConnection but instead self.transport.loseConnection. This, explicitly, does not unregister itself from its transport first, which means that we fall right into the behaviour mentioned above: the TLSMemoryBIOProtocol is ready to shut down, but won't do it until its producer is unregistered. Meanwhile, the HTTPChannel is still registered as a producer. The request should be being delivered to the HTTPChannel, but any response writes will block because write is a no-op on TLSMemoryBIOProtocol while it's trying to disconnect. So HTTPChannel goes on its merry way processing data and handing responses to TLSMemoryBIOProtocol, which happily accepts the bytes and then immediately throws them in the trash, waiting for an unregister that will never come.. =D Ok, so don't congratulate me too much @markrwilliams: I introduced the bug. ;)\nI'm going to file this as a Twisted issue and propose a patch. We shouldn't consider this closed until @kyrias is satisfied, of course, but I believe that this is definitely a bug, even if it isn't this one.. See Twisted issue 8992.. As a separate note, we should consider whether timeouts should terminate the connection ungracefully. I'm inclined to say that they should, but it's a pretty substantial change.. @kyrias This is one of my ongoing concerns about TimeoutMixin: I really want two timeouts. I want the 60s idle timeout, followed by a 15s \"if the connection isn't gone by now then totally destroy it\" timeout. If @glyph is ok with that idea, I'd like to consider landing that patch in 17.0.. ",
    "markrwilliams": "\nMy thinking here, for those following along: a weird quirk of TLSMemoryBIOProtocol is that if you call loseConnection on it, it won't actually do the TLS shutdown if it has a producer registered. \n\nIt's good thinking that I think I've confirmed.\nHere's my example program:\n```python\nimport sys\nfrom synapse.app.homeserver import setup\nfrom synapse.http.matrixfederationclient import (\n    MatrixFederationHttpClient, _JsonProducer)\nfrom twisted.internet import defer, task\ndef neverStartProducing(self, consumer):\n    return defer.Deferred()\n_JsonProducer.startProducing = neverStartProducing\n@defer.inlineCallbacks\ndef main(reactor, configuration_path):\n    hs = setup(['-c', configuration_path])\n    client = MatrixFederationHttpClient(hs)\n    yield client.put_json(\"localhost:8448\",\n                          \"/_matrix/federation/v1/event/xyz/\")\ntask.react(main, sys.argv[1:])\n```\nThis sends a request over TLS to the local home server that never completes.  If you set a break point in HTTPChannel.timeoutConnection just before policies.TimeoutMixin.timeoutConnection(self), you'll end up here.  _appSendBuffer is empty, but _producer is not!  And indeed the connection exists after it's supposed to be timed out.\nChanging HTTPChannel.timeoutConnection to call self.loseConnection totally fixes it.  Well done, @Lukasa :). ",
    "tomprince": "@richvdh The code that needed fixing never made it into a final release. 16.6 was before the breakage was introduced. There were some 16.7rc releases that had some issue and never lead to a release. Then 17.1 was released with the fixes.. ",
    "sbts": "When run from systemd it is possible to retrieve the console output from a service by running\nbash\njournalctl -u matrix-synapse -b -e. ",
    "morteza-araby": "Hi,\nMade a new commit.\n1- Fix all error from flake8\n2- add docstring to all the new methods\n3 - Used _simple_select_list_paginate as private method which is more\ngeneric to use for other list search as well and\nused get_user_list_paginate for calling from rest api\nOn Thu, Jan 19, 2017 at 2:32 PM, Erik Johnston notifications@github.com\nwrote:\n\n(The sytest dendron failure is probably spurious, ignore it)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/matrix-org/synapse/pull/1784#issuecomment-273776907,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ANONn-rSvU8bqpnebpQm95arJqxux77Vks5rT2XzgaJpZM4LeTG4\n.\n. Hi, \nMade a new commit.\n1- Fix all error from flake8\n2- add docstring to all the new methods\n3 - Used _simple_select_list_paginate as private method which is more generic to use for other list search as well and used get_user_list_paginate for calling from rest api\n. you are right, I must have missed that. The UsersRest Api, has not been used at my client side implementation and I think that's why I've missed all of your comments here. Probably should have wrote some test cases.. you are right. . should be removed.. \n",
    "jkolo": "I've changed the index because under my own use case it sometimes happen that the client requested multiple thumbnails of the same size but with different scaling methods, which violated the unique constrain.. Ok, no problem\n2017-02-16 14:21 GMT+01:00 Luke Barnard notifications@github.com:\n\n@jkolo https://github.com/jkolo, the consensus is that we're happy\nmerge the fix for thumbnails scaling correctly but we need a bit more time\nto consider modifying the thumbnail table to get rid of the UNIQUE. Any\nchance you could split this into two PRs?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/matrix-org/synapse/pull/1816#issuecomment-280328545,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABzpWpIsCI5cza2SOraR_Ibss5soSFImks5rdE1bgaJpZM4LlFrR\n.\n. \n",
    "thallian": "Same here. It seems like this also makes the memory usage of my postgre instance grow to 1.5 GB (from ~400 MB) but I have to take a closer look.. ",
    "cschmittiey": "Just to update I haven't been able to accept either of the two invites into #fc00-dev:tomesh.net. . Trying to accept the invites give me a \"You are not invited to this room\" error, and rejecting them gives me a similar error but with the actual identifier of the room. . ",
    "schnuffle": "You could try to set your password with sqlite using the hash tool \n\nCreate a new password hash with scripts/hash_password -p \nShutdown synapse\nMake a copy of the db\nsqlite3 yourdb.sqlite\nUPDATE users SET password_hash=''\nWHERE name='';. Glad you sorted it yourself, sorry that my SQL description was a bit misleading. I added another patch to see if that brings some progress: Twisted commit\n\nResult, the service is still leaking. After comparing a pip freeze with @seequ:matrix.org pip freeze I saw some version differences in the modules. Now I reinstalled all modules from seequs requireements.\nappdirs==1.4.0\nattrs==16.3.0\nbleach==1.5.0\nblist==1.3.6\ncanonicaljson==1.0.0\ncffi==1.9.1\nconstantly==15.1.0\ncryptography==1.7.1\ndaemonize==2.4.7\ndecorator==4.0.11\nenum34==1.1.6\nfrozendict==1.2\nhtml5lib==0.9999999\nidna==2.2\nincremental==16.10.1\nipaddress==1.0.17\nJinja2==2.9.4\nldap3==2.1.1\nlxml==3.7.1\nMarkupSafe==0.23\nmatrix-angular-sdk==0.6.8\nmatrix-synapse==0.18.7\nmatrix-synapse-ldap3==0.1.1\nmsgpack-python==0.4.8\nMySQL-python==1.2.5\nnetaddr==0.7.19\nolefile==0.44\npackaging==16.8\nPaste==2.0.3\nPillow==4.0.0\npsutil==5.0.1\npy-bcrypt==0.4\npyasn1==0.1.9\npyasn1-modules==0.0.8\npycparser==2.17\npycrypto==2.6.1\npydenticon==0.3\npymacaroons-pynacl==0.9.3\nPyNaCl==0.3.0\npyOpenSSL==16.2.0\npyparsing==2.1.10\npysaml2==3.0.2\npython-dateutil==2.6.0\npytz==2016.10\nPyYAML==3.12\nrepoze.who==2.3\nrequests==2.12.5\nservice-identity==16.0.0\nsignedjson==1.0.0\nsimplejson==3.10.0\nsix==1.10.0\nTwisted==16.6.0\nujson==1.35\nunpaddedbase64==1.1.0\nWebOb==1.7.0\nzope.interface==4.3.3\nI'll see if that changes something. I finally upgraded to 0.19.0 and right now  the server has been  going strong for 48h already\n\ud83d\udc4e So it just took some more timebto start leaking. Okay, the reason for the leaks is not about the modules :).\nI close that issue and will open a new one as soon as my new idea has proofs. @richvdh asked me for a log excerpt, here it is.\nIt's right before a restart and the following hour, where synapse started leaking from the beginning. Here are the corresponding metrics:\n\nHere's the compressed Log excerpt, it's 11MB compressed:\nIt starts right before the restart and then an additional hour till 13:15h.\n[[ removed ]] - @richvdh\n. Can't believe it,\nAgain my assumption is proven wrong, the service leaks, it just took 24h longer.. Show your config with the secrets anonymized of coturn and synapse.\n. From seeing your inout I've two ideas:\n\nturn_uri: has to be the FQDN under which the turnserver is available\nThe certs have to match that FQDN\n\nHere's my working config, of course with random secrets ( cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1 ).\nCoturn config\nlistening-port=3478\ntls-listening-port=5349\nalt-listening-port=3479\nalt-tls-listening-port=5350\nlistening-ip=5.9.105.251\nverbose\nlt-cred-mech\nuse-auth-secret\nstatic-auth-secret=KSuSNqpx3XWDiFdRKxrJFy7GBa9drsWvg5HMVipOvc9rJLsr20OCqDQdUzPGT0AJ\nserver-name=kolab.schnuffle.de\nrealm=kolab.schnuffle.de\ncert=/etc/letsencrypt/live/kolab.schnuffle.de/fullchain.pem\npkey=/etc/letsencrypt/live/kolab.schnuffle.de/privkey.pem\nno-stdout-log\nlog-file=/var/log/turnserver/turn.log\nsimple-log\npidfile=\"/var/run/turnserver/turnserver.pid\"\nmobility\nno-tlsv1\nno-tlsv1_1\nSynapse Config\n```\nturn_uris: [\"turn:kolab.schnuffle.de:3478?transport=udp\",\"turn:kolab.schnuffle.de:3478?transport=tcp\"]\nturn_shared_secret: \"KSuSNqpx3XWDiFdRKxrJFy7GBa9drsWvg5HMVipOvc9rJLsr20OCqDQdUzPGT0AJ\"\nturn_user_lifetime: \"1h\"\n. You need to explicitly name the backports repo while installing. \n\napt-get update && apt-get install -t jessie-backports python-twisted matrix-synapse\n\nMake sure backports is active. The latest 0.19.2 synapse version uses twisted 17.1, I don't know what the debian package uses as I'm using a virtualenv install\n. okay you installed psycopg2 into thevroot env e.g. /root/.local/....\nUnder which user does synapse run?\nIn case it's not root, you need to install it into the env of the user launching synapse. This might need extra handling like\nerrmsg = str(e)\nif not isinstance(errmsg, six.string_types):\n    errmsg=\"No error string provided\"\nreturn {\n        \"status\": 503, \"message\": errmsg,\n}\n. ",
    "neilisfragile": "We maintain a record of homeserver implementations here https://matrix.org/docs/projects/try-matrix-now.html \nI'm not aware of anyone trying to build a homeserver in node though. done. This is probably okay? If not I can fetchone on each iteration of the subsequent loop. unrelated to this PR just want to ignore Atom python ide. I found it hard to parse this section, perhaps \n\"These templates use the Jinja2 templating language, and docs/privacy_policy_templates gives examples of the sort of thing that can be done.''. Why is jinja2 a special cased dependency? . maybe \"If correctly configured this should give an error....\". drop the 'the'?. Easy to misinterpret as the server noticing something - at first I thought it was a typo. Perhaps capitalise Server Notices User?. +1 done. oh because setting it up in the background is sufficient, okay.. ah yes, good spot. agreed though deliberately omitted since count_monthly_users() is really only a stepping stone method to get the rest of the infra out. In current form only called regularly in the case where the config is enabled. . same as above, and also the calculating the total count is duped with the daily count - but likley to change structure. right yes, need to be called once but the looping is a waste. I was originally trying to keep things simple without deferring  - will make the change. agreed as above. Have reworked nits, and left upserts until we figure out a better way to solve this. ah good point. makes sense. I don't need it for Postgres, but best I can tell I do need it for sqlite https://sqlite.org/lang_select.html\n. groans, I guess the table never gets too large. handy, done. ah, editor autocomplete. I think I agree, since it will be a change in a lot of places I'll submit a separate PR. err given I have a few outstanding, I'll wait until a few more of them land. I'm using https://docs.google.com/document/d/1_CgwkfLznU56fwLUFZXFnKivzVUPjjNsTO0DpCB9ncM/edit#heading=h.g9t44e4usbqd as the base - the proposal is not ratified so could change further (in fact please add comments) - the idea is to be flexible for future limiting, with a human readable explainer in the body - this approach doesn't lend itself to i18n though. Sorry, that's brain dead on my part, thanks for the clean up. fair enough both branches started off very neat, much prefer suggested approach. PR racing :-). I did it this way for py3 compat. best I can tell iteritems is not supported in py3. Not sure, am following spec proposal - is there a broader conversation to be had here?. ongoing comments on https://docs.google.com/document/d/1R_a1zi5qRe06D6D3fNZaKTqQSyaKcQT2Ejt4kImt6yo/edit#. irl discussion, noop. Ongoing conversation https://docs.google.com/document/d/1R_a1zi5qRe06D6D3fNZaKTqQSyaKcQT2Ejt4kImt6yo/edit#. I had to look at it a few times to understand the intent - I'm not sure I can suggest a more expressive way to do via code, but a more descriptive comment would be helpful. \nI'm not sure it will necessarily help a great deal with db load since get_monthly_active_count is cached but the logic expects max_mau_value to be set and so I agree that it needs the if check.\nPerhaps something like\n\"In the case where mau_stats_only is True and limit_usage_by_mau is False, there is no point in checking get_monthly_active_count - it adds no value and will break the logic if max_mau_value is exceeded \". it was oversight I promise!. The first part needs to be on a request basis - I guess the self.hs.get_room_creation_handler() could but this is the only place it is used.. bare except in the try statement\nHave since removed the exception as per comments above. this is brain dead, sorry. right, misunderstood you. After IRL agreed that this was the best approach - have recorded rationale in a comment. Tested with .commit change - works. wfm. This is horrible, and assume that support user is created when the server is created - needs a rethink. Was really an exercise in defence - would happily drop it. should this be s/state_key/user_id/? err yes you are right - really hard to write a test for this method.\nBut surely the support user would never appear in the results from get_users_in_dir_due_to_room so I'm confused - as per above is only there out of defence - I'd be happy remove and save on the added complexity.. errugh. I have added a check in _initialise_reserved_users using a txn version is_support, I've also updated the docstring on upsert_monthly_active_user_txn\nI want to avoid this check being an uncached call from upsert_monthly_active_user_txn because upsert_monthly_active_user_txn is called frequently and is_support is almost always going to be False.\n. Not sure of the history, but can't see any other examples of needing to mock it out. . The problem is that I reordered the switching logic on change so that I could combine None and True under the same is_support guard.\nThis means that the meaning of a line like if not change: is now different since change can legitimately be None where before this was not possible.\nI've changed the if statement accordingly - thanks for spot.\n. Yup fair enough, no reason to remove the result_token check, it's such a long time ago since I first did so I can't recall the reason.. Done, I left the original copy in as well because I would useful.. Okay have moved the guard out of the method.. yeah I was in two minds - I tried it on one line but it seemed less readable which I why I went with the indent. Noted for future. Done. You are likely to get a merge conflict with neilj/1711faq having just landed - I'm only linking to the FAQ, so probably easiest to take yours as primary and add something like \"There is also an FAQ <https://github.com/matrix-org/synapse/blob/master/docs/MSC1711_certificates_FAQ.md>_ to help answer specific questions you may have \". Yes. Can you explain your concerns?. I see it as more of an intro - I've removed quite a lot as per other comments and added a Delegation section. I think it is in better shape. I'll push so you can see.. added a note calling it out. have moved to INSTALL. Nods. I reworded. Addressed our of band and changes committed - wanted to ensure that the methods were considered 'different' rather than one being preferable to another.. Agreed, it shouldn't be here - have deleted since it doesn't add much over the config at the beginning of the file. Agreed, deleted. Deleted. Removed. Agreed. Done. Reworded. done. done. Removed. oversight, added back in.. Nope. Yeah this really mings - I'll comment explicitly to make it clearer. I've tried to make it clearer with formatting. ",
    "onePinger": "Not sure if \"stuck\" addresses this, but when you deactivate your account, enter your password and click on \"Deactivate Account\", resulting message that the session has been signed out and clicking on \"OK\" returns you to the deactivate page again.. Not sure if \"stuck\" addresses this, but when you deactivate your account, enter your password and click on \"Deactivate Account\", resulting message that the session has been signed out and clicking on \"OK\" returns you to the deactivate page again.. ",
    "itree": "keyserver.ubuntu.com seems to have the keys\nbut not keyring.debian.org, should someone add it?\nThis is what you need to do to get the key added:\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys AD0592FE47F0DF61. keyserver.ubuntu.com seems to have the keys\nbut not keyring.debian.org, should someone add it?\nThis is what you need to do to get the key added:\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys AD0592FE47F0DF61. ",
    "ssbarnea": "Pleaser reopen this bug because installation instructions for Debian do no include these steps, yet.. I don't know all the details about synapse development model but one thing is clear to me: there is no moving tag that points to the latest (more or less) stable build. \nIdeally this should have being named \"latest\" as this seems to be the defacto standard for most docker container publishers but I any name would be batter than current situation where the compose file contains invalid information.. ",
    "14mRh4X0r": "If you set bind_address to '::', Synapse will listen on both IPv6 and IPv4 (with default OS settings). This patch breaks connections to many hosts. The default config causes servers to only listen on IPv4 (see #1886), but Synapse will try to connect over IPv6 for domains with an AAAA-record, yielding many \"Connection refused\" messages.. You're correct. I'll fix that.. ",
    "jwaterwo": "Im the admin of jack-server.com and the server was unreachable for a time during a DNS change. DNS propagation took about 48 hours during which time matrix.org was unable to reach jack-server.com.\nhttps://matrix.to/#/!XqBunHwQIXUiqCaoxq:matrix.org/$14846723752604812uusVy:matrix.org. ",
    "geromueller": "setup problem, sorry for the noise.. ",
    "wjhtinger": "Update: I use the HTTP listener(port 8008) intead of HTTPS, then connect and login successful. It looks like that HTTPS is unstable?\n. ",
    "Pneumaticat": "Fixed in a subsequent commit (my bad). ",
    "tyler-smith": "Sorry, I made this against master which you specifically ask not to do. Will fix and resubmit.. ",
    "mkonersmann": "This is a duplication of #969 and #378. I propose to close the issue at hand in favor of the oldest one.. ",
    "alexgleason": "Fair, thanks for the info!. ",
    "verymilan": "```\ncoturn\nlt-cred-mech\nuse-auth-secret\nstatic-auth-secret=C2Em...33dr\nrealm=turn.domain.de\ncert=/path/to/turnserver_cert.pem\npkey=/path/to/turnserver_key.pem\nsynapse\ni already tried domain/localhost/127.0.0.1/coturn non-tls port\nturn_uris: [\"turn:5.1.......:5350?transport=udp\", \"turn:5.1.......:5350?transport=tcp\"]\nturn_shared_secret: \"C2Em...33dr\"\nturn_user_lifetime: \"1h\"\n```. Sorry for my late response, i just added the following to my config and it worked. \ud83c\udf89 \n```\nlistening-ip=5.1.00.000\nserver-name=turn.domain.de\nno-stdout-log\nmobility\nno-tlsv1\nno-tlsv1_1                                                                                                                          no-tlsv1_1 \n```\nThank you very much!. Ow how sad voip calls to outside the local network still fail and stuck at connecting :(\nNo logentries from coturn and\n2017-03-06 15:46:10,631 - synapse.access.https.8448 - 91 - INFO - GET-20919- 47........5 - 8448 - {@User:domain.de} Processed request: 1ms (0ms, 0ms) (0ms/0) 156B 200 \"GET /_matrix/client/r0/voip/turnServer?access_token=<redacted> HTTP/1.0\" \"Dalvik/2.1.0 (Linux; U; Android 7.1.1; A0001 Build/NMF26V)\"\nin the synapse log.\n. It is now working - had synapse configured to 5350 for some reason. ",
    "hamber-dick": "2017-03-07 17:10:13,911 - synapse.access.http.8008 - 91 - INFO - GET-17531- - - 8008 - {@User:domain.de} Processed request: 30003ms (3ms, 0ms) (0ms/0) 158B 200 \"GET /_matrix/client/r0/sync?timeout=30000&since=s312939_552622_661_40807_24_11_84_6145&access_token=<redacted> HTTP/1.1\" \"Dalvik/1.6.0 (Linux; U; Android 4.4.2; GT-I9195 Build/KOT49H)\"\nWhat exactly is the Solution for this Problem I Get a similar Log. . Whats happening here? Yesterday I tried to join the Matrix.hq Room via Riot Desktop client from my synapse Server on chat.alko-sbk.de. After I tried to do this my synapse Server runs Amok and takes 100% of my CPU. Because I need the Server even for ohter stuff, I restart the Server several times and it happend again and again. Finally I send a request from My Riot Android Client to leave the room, after 2 Times of restarting the synapse server, I get out of the room and my synapse server gets back to normal. \nIt would be nice for me to know if I had done somethig wrong or if this is a Bug. . ",
    "viniciuscb": "Nevermind, I've found an error in my code, I had not set the filter beforehand. . ",
    "storrgie": "Sure thing, I've reached out via matrix to you directly.. user error on my end, looks like the Arch packager is responsible and was using journalctl. . ",
    "silkeh": "@jython234: I'm not aware of significant problems with dual stack servers (other than Synapse not binding on :: by default). This does fix federation to IPv6-only servers.. Indeed. Fixed.. ::.  This applies to Windows and BSD-variants where net.ipv6.bindv6only is set (ie. operating systems that do not follow RFC3493). See #2232.. Can we have ::1 here by default as well? In some Linux distributions localhost is set to ::1 and 127.0.0.1 in /etc/hosts.. ",
    "MoritzMaxeiner": "\nIf a very active user would be deleted this way you suggest, that would destroy conversations completely.\n\nAFAICT it would only destroy the history of that conversation, i.e. a new client from a recipient on the same homeserver cannot sync it anymore.\n\nimagine this user chatted a lot with others in hundreds of rooms, others took a lot of effort to answer questions of this user,....\n\nThen the history of that conversation is gone from the user's homeserver just as his choice implied.\n\nall those work of others would be in vain. that wouldn't be fair.\n\nFair to whom? It certainly is not fair to the user clearly stating that he/she wishes not to use a server anymore to keep the data the user owns around. In countries with strict privacy laws and with a history of many privacy related court cases being decided in the user's favour operating a server of this nature is grey at best in terms of legal safety, derelict at worst.\n\nAlso this would violate the Idea of the Matrix: What is said can't be unsaid.\n\nWhere did you get this idea from? It certainly is not expressed in the FAQ[1] and the spec only implies it by being vague about what /account/deactivate/ means. If this is the mission statement of Matrix, then this not being visibly stated would be another issue altogether, to be discussed separately.\n[1] http://matrix.org/docs/guides/faq.html\n\nAn exception would be rooms, where everyone agrees, that they are moderated and messages are not persistent all the time.\n\nIf a user wants to cease using a service, it has to be possible for his/her usage data to be deleted by him/her.\n\nThe only possibility I can imagine to free a username for a new registration would be to remap the old posts to a new user with the same name, so the messages are unlocked from the user, that wants to be deleted.\n\nOr just do the thing the user explicitly asked you to: Delete those posts.\n\nOnly a user that has never said anything could be deleted completely!\n\nOnly from other homeservers', since AFAICT homeserver A cannot tell another homeserver B that user C has unregistered from A and events by him/her should also be deleted from B.\nThat's the only exception I'd consider. . > You can redact all your messages already one by one before you delete your account.\n\nAlso this would violate the Idea of the Matrix: What is said can't be unsaid.\n\nThese two seem to contradict each other. Either what is said can't be unsaid, or you can delete your messages. Regardless, there is currently no way to delete your account, only to deactivate it.\n\nThose redactions are already federated to other servers, so you can write a script that does this for you already..\n\nGood to know, as the Client-Server spec does not fully specify how redacted events are propagated. But this does not deal with account deletion.\n\nBut you can never be sure, that other servers obey to the redact command though.\n\nOf course, you can never be certain a blackbox third party claiming to implement a spec actually fully comply with it. But this is a red herring, diverting from the issue of a user not being able to delete his or her account in this implementation.. ",
    "anaqreon": "I added jessie-backports by following these instructions and then ran the installation command\napt-get update && apt-get install -t jessie-backports python-twisted matrix-synapse\nThe result was still a broken installation, where service matrix-synapse restart resulted in the error message\n\nJob for matrix-synapse.service failed. See 'systemctl status matrix-synapse.service' and 'journalctl -xn' for details.\n\nHere is the entire output of the apt-get install command (looks like it's installing twisted 16):\n```\nroot@riot:~# apt-get install -t jessie-backports python-twisted matrix-synapse\nReading package lists... Done\nBuilding dependency tree     \nReading state information... Done\nThe following packages were automatically installed and are no longer required:\n  python-ldap3 python-matrix-synapse-ldap3 python-twisted-conch python-twisted-lore python-twisted-mail python-twisted-names\n  python-twisted-news python-twisted-runner python-twisted-web python-twisted-words\nUse 'apt-get autoremove' to remove them.\nThe following extra packages will be installed:\n  python-twisted-bin python-twisted-conch python-twisted-core python-twisted-mail python-twisted-names python-twisted-news\n  python-twisted-runner python-twisted-web python-twisted-words\nSuggested packages:\n  python-bleach python-jinja2 python-twisted-bin-dbg python-tk python-gtk2 python-glade2 python-qt3 python-wxgtk3.0\n  python-twisted-runner-dbg\nThe following packages will be upgraded:\n  matrix-synapse python-twisted python-twisted-bin python-twisted-conch python-twisted-core python-twisted-mail python-twisted-names\n  python-twisted-news python-twisted-runner python-twisted-web python-twisted-words\n11 upgraded, 0 newly installed, 0 to remove and 144 not upgraded.\nNeed to get 2,614 kB of archives.\nAfter this operation, 776 kB disk space will be freed.\nDo you want to continue? [Y/n] \nGet:1 http://matrix.org/packages/debian/ jessie/main matrix-synapse all 0.19.2-1 [437 kB]\nGet:2 http://ftp.debian.org/debian/ jessie-backports/main python-twisted-conch all 1:16.2.0-1~bpo8+1 [31.5 kB]\nGet:3 http://ftp.debian.org/debian/ jessie-backports/main python-twisted-mail all 16.2.0-1~bpo8+1 [26.6 kB]\nGet:4 http://ftp.debian.org/debian/ jessie-backports/main python-twisted-names all 16.2.0-1~bpo8+1 [21.9 kB]\nGet:5 http://ftp.debian.org/debian/ jessie-backports/main python-twisted-news all 16.2.0-1~bpo8+1 [11.0 kB]\nGet:6 http://ftp.debian.org/debian/ jessie-backports/main python-twisted-runner amd64 16.2.0-1~bpo8+1 [11.0 kB]\nGet:7 http://ftp.debian.org/debian/ jessie-backports/main python-twisted-web all 16.2.0-1~bpo8+1 [79.4 kB]\nGet:8 http://ftp.debian.org/debian/ jessie-backports/main python-twisted-words all 16.2.0-1~bpo8+1 [24.1 kB]\nGet:9 http://ftp.debian.org/debian/ jessie-backports/main python-twisted-bin amd64 16.2.0-1~bpo8+1 [19.8 kB]\nGet:10 http://ftp.debian.org/debian/ jessie-backports/main python-twisted-core all 16.2.0-1~bpo8+1 [1,941 kB]\nGet:11 http://ftp.debian.org/debian/ jessie-backports/main python-twisted all 16.2.0-1~bpo8+1 [11.5 kB]\nFetched 2,614 kB in 1s (1,808 kB/s)  \nReading changelogs... Done\nPreconfiguring packages ...\n(Reading database ... 42385 files and directories currently installed.)\nPreparing to unpack .../python-twisted-conch_1%3a16.2.0-1~bpo8+1_all.deb ...\nUnpacking python-twisted-conch (1:16.2.0-1~bpo8+1) over (1:15.2.1-1ubuntu1~matrix~jessie1) ...\nPreparing to unpack .../python-twisted-mail_16.2.0-1~bpo8+1_all.deb ...\nUnpacking python-twisted-mail (16.2.0-1~bpo8+1) over (15.2.1-1ubuntu1~matrix~jessie1) ...\nPreparing to unpack .../python-twisted-names_16.2.0-1~bpo8+1_all.deb ...\nUnpacking python-twisted-names (16.2.0-1~bpo8+1) over (15.2.1-1ubuntu1~matrix~jessie1) ...\nPreparing to unpack .../python-twisted-news_16.2.0-1~bpo8+1_all.deb ...\nUnpacking python-twisted-news (16.2.0-1~bpo8+1) over (15.2.1-1ubuntu1~matrix~jessie1) ...\nPreparing to unpack .../python-twisted-runner_16.2.0-1~bpo8+1_amd64.deb ...\nUnpacking python-twisted-runner (16.2.0-1~bpo8+1) over (15.2.1-1ubuntu1~matrix~jessie1) ...\nPreparing to unpack .../python-twisted-web_16.2.0-1~bpo8+1_all.deb ...\nUnpacking python-twisted-web (16.2.0-1~bpo8+1) over (15.2.1-1ubuntu1~matrix~jessie1) ...\nPreparing to unpack .../python-twisted-words_16.2.0-1~bpo8+1_all.deb ...\nUnpacking python-twisted-words (16.2.0-1~bpo8+1) over (15.2.1-1ubuntu1~matrix~jessie1) ...\nPreparing to unpack .../python-twisted-bin_16.2.0-1~bpo8+1_amd64.deb ...\nUnpacking python-twisted-bin (16.2.0-1~bpo8+1) over (15.2.1-1ubuntu1~matrix~jessie1) ...\nPreparing to unpack .../python-twisted-core_16.2.0-1~bpo8+1_all.deb ...\nUnpacking python-twisted-core (16.2.0-1~bpo8+1) over (15.2.1-1ubuntu1~matrix~jessie1) ...\nPreparing to unpack .../python-twisted_16.2.0-1~bpo8+1_all.deb ...\nUnpacking python-twisted (16.2.0-1~bpo8+1) over (15.2.1-1ubuntu1~matrix~jessie1) ...\nPreparing to unpack .../matrix-synapse_0.19.2-1_all.deb ...\nUnpacking matrix-synapse (0.19.2-1) over (0.18.5-1) ...\nProcessing triggers for man-db (2.7.0.2-5) ...\nProcessing triggers for systemd (215-17+deb8u5) ...\nSetting up python-twisted-bin (16.2.0-1~bpo8+1) ...\nSetting up python-twisted-core (16.2.0-1~bpo8+1) ...\nSetting up python-twisted-conch (1:16.2.0-1~bpo8+1) ...\nSetting up python-twisted-mail (16.2.0-1~bpo8+1) ...\nSetting up python-twisted-names (16.2.0-1~bpo8+1) ...\nSetting up python-twisted-news (16.2.0-1~bpo8+1) ...\nSetting up python-twisted-runner (16.2.0-1~bpo8+1) ...\nSetting up python-twisted-web (16.2.0-1~bpo8+1) ...\nSetting up python-twisted-words (16.2.0-1~bpo8+1) ...\nSetting up python-twisted (16.2.0-1~bpo8+1) ...\nSetting up matrix-synapse (0.19.2-1) ...\n``. My original post showed the output ofjournalctl -xn`. I can't reproduce it now, though, because I want to keep my server operational, which means I restore my snapshot before the upgrade attempt. The problem appears to be that the wrong twisted version is being installed; I assume this is a problem with the Debian package. Is there a forum dedicated to Synapse issues like this?. ",
    "saram-kon": "Sorry for committing on the wrong branch. . ",
    "madduck": "Any idea what I can do to get rid of the invitation? It's stealing screen estate!. @Half-Shot I tried removing the line from the database on my homeserver, but since the room is on matrix.org, it would need to happen there, right?. ",
    "lhunath": "Isn't this a server-level issue rather than a client issue?. Right - makes sense.  I couldn't quite figure out what the best place for this report was as it seems more of a feature that should be part of the \"spec\" / \"api\" as opposed to any specific implementation.  That said, I also wasn't sure official matrix dev happened at vector-im.. ",
    "kfatehi": "whoops. trying to use the hub tool :P. Just curious -- how do you keep this up to date? Is the \"right way\" to setup some kind of continuous integration which produces and uploads the AUR off the master branch?. ",
    "exap": "@enckse commited this.. ",
    "APwhitehat": "For checking if a process is running or not \nI have 2 solutions for this either\n\u2022 I use psutil , the cross-platform library\n\u2022 keep calling os.kill(pid, 0) until it exits\nbut will have have to keep track of OSErrors. I used os.kill(pid, 0) to check if the process has stopped or not .\nI hope this is OK with you @richvdh \nAlso, should I check if all the workers have stopped or not ?. @richvdh Could you look at this again if you're free ?. @richvdh done. \ud83d\ude04  @richvdh:\nThank you for helping me along the way.\nLooking forward to contributing more. . I guess this is all unnecessary now.\nMaybe I should add something so that newcomers could realise this easily. Just a random idea , could you change your config file from\nin the line 58\nbind_addresses: [ '0.0.0.0', '::' ]\nto\nbind_addresses: ['::', '0.0.0.0' ]\nand see if Couldn't listen on :::8448: [Errno 98] Address already in use.\nchanges to\nCouldn't listen on 0.0.0.0:8448: [Errno 98] Address already in use.\nI guess this could be happening because '::' also listens for IPv4 addresses .\nso both cannot use the same port . . And I suppose you are able to connect via server public IPv4 when you have\nbind_addresses: [ '0.0.0.0'] only ?\nThis is really weird \ud83d\ude15 . I'm sorry , I don't know the code base so well as to comment on this .\nHowever , in C/C++ \nWe can seperating IPv6 bindings from IPv4 by using \nint one=1;\nsetsockopt(sockfd, IPPROTO_IPV6, IPV6_V6ONLY, &one, sizeof(one));\nI couldn't find anything of this sort in the twisted documentation (I looked only once)\nMaybe they avoid this segregation which in turn makes things messy. (hence  twisted has the bug ). I was looking into this issue and I found that\nI'm not not able to upload png files \nSynapse (develop branch) outputs this error \nIOError: cannot identify image file\nFull log http://pastebin.com/n2CRXs1p\nEDIT : This was a problem with PIL and not Synapse because I couldn't open that png file using PIL. @ara4n Do we really want to have only jpeg thumbnails ?\nBecause in Synapse code there is a variable named output_type being passed around .\nIf we just want \"JPEG\" thumbnails why have the output_type , we can just implicitly assume it will be \"JPEG\" .\nas for forcing \"JPEG\" editing https://github.com/matrix-org/synapse/blob/develop/synapse/rest/media/v1/thumbnailer.py#L89 as\n# Force thumbnails to be JPEG\noutput_image.save(output_bytes_io, \"JPEG\", quality=80)\nis enough. I'll try looking into this :)\nedit: Now I'm not looking into this \ud83d\ude1b . ok ,\nI was trying to make it PEP8 compliant unnecessarily ( <79 char ). I shouldn't display this if the process isn't running ?. I made a build directory so that it keeps config files & SSL certificates in a separate folder .\nI now realised that this could have been done with --config-path build/*****\nYes we can run synctl directly. I was trying to install it like a release. as you say \ud83d\udc4d . Apparently, as I read, it is considered to be good programming habits for big code bases.\nBut I understand , It's unnecessary here.. OK , I'll look again. \u263a. @erikjohnston whose types did you refer to?. String substitution could be failing because there is no key \"matrix-angular-sdk\" in DEPENDENCY_LINKS, see https://github.com/matrix-org/synapse/blob/master/synapse/python_dependencies.py#L76\nAlso it seems to be put into CONDITIONAL_REQUIREMENTS as \"web_client\".\nI'm sort of new here so I could be wrong. \ud83d\ude1b . The purpose of DEPENDENCY_LINKS seems to be maintaining a list of all external dependencies which needs to be installed via url.\nDEPENDENCY_LINKS is not initialized anywhere else afaik.\nAlso it seems to be static data like REQUIREMENTS & CONDITIONAL_REQUIREMENTS.\nFor your case you should probably link the \"matrix-angular-sdk\" from CONDITIONAL_REQUIREMENTS[\"web_client\"]. ",
    "daltonfury42": "I am not a developer, but https://bethselamin.de/_matrix/client/# worked in my case.. ",
    "majewsky": "Indeed so. Which is kind of odd. I thought of the same, but ruled it out because ncat --listen :: 8448 also worked when Synapse was already listening on 0.0.0.0:8448.\nI just checked: With bind_addresses: ['::'], I can connect via IPv6 and also via IPv4 loopback (using curl -4 https://bethselamin.de with an /etc/hosts entry of 127.0.0.1 bethselamin.de), but not via the server's public IPv4 address. So I'm still as confused as before, maybe even more so. \u00af\\_(\u30c4)_/\u00af. Exactly.\nDoes Matrix do anything fishy with Twisted? Because, if you're just passing the bind address into Twisted, I am tempted to file a bug report with them as well.. The thing that confuses me is this: If it were so simple, wouldn't people have run into this problem much sooner? bind_addresses: [ '0.0.0.0', '::'] is precisely what --generate-config produces by default.. Ah, so I edited that. Thanks for clarifying. Anyway, I just reloaded my firewall rules to be extra certain that that's not the problem. And curl -4 https://bethselamin.de:8448 (going via the public v4 IP from DNS) didn't work at first, but while trying to isolate the problem, it started working. I have no idea what is going on there, but I will count this as a misconfiguration somewhere on my side. Thanks for the advice, everyone.. I'm also new to all of this, but regarding joining existing channels from other servers, what worked for me (in Riot for Andriod) is to use the search button on the main view, and type in a channel URI like #matrix-dev:matrix.org. Once you spell it all out, it'll offer to join that channel. The UI was also a bit weird: I tried it with #matrix:matrix.org and it showed a spinner for a really long time as if the operation was still in progress. When I manually aborted it and went back to the main view, the channel was listed as joined and everything worked.. ",
    "sim6": "Yes, you singed the git tag. But I cannot find the signature of the tar.gz.. ",
    "ricco386": "You are right with the first part. libsodium is not needed as a system requirement on CentOS. My problem was that it crashed during the setuptools upgrade so I had to install libsodium to make it works. But when I do proper upgrade, e.g. I upgrade pip first, than  setuptools upgrade does not crash and PyNaCl build without problems.\nHowever with the second bit it doesnt upgrade both at the same time. I have to upgrade pip as it doesnt upgrade setuptools, here is an output from my command line:\n```\n(.synapse)[root@rhce ~]# pip install --upgrade pip\nDownloading/unpacking pip from https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz#md5=35f01da33009719497f01a4ba69d63c9\n  Downloading pip-9.0.1.tar.gz (1.2MB): 1.2MB downloaded\n  Running setup.py egg_info for package pip\n    /usr/lib64/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'python_requires'\n      warnings.warn(msg)\nwarning: no previously-included files found matching '.coveragerc'\nwarning: no previously-included files found matching '.mailmap'\nwarning: no previously-included files found matching '.travis.yml'\nwarning: no previously-included files found matching '.landscape.yml'\nwarning: no previously-included files found matching 'pip/_vendor/Makefile'\nwarning: no previously-included files found matching 'tox.ini'\nwarning: no previously-included files found matching 'dev-requirements.txt'\nwarning: no previously-included files found matching 'appveyor.yml'\nno previously-included directories found matching '.github'\nno previously-included directories found matching '.travis'\nno previously-included directories found matching 'docs/_build'\nno previously-included directories found matching 'contrib'\nno previously-included directories found matching 'tasks'\nno previously-included directories found matching 'tests'\n\nInstalling collected packages: pip\n  Found existing installation: pip 1.4.1\n    Uninstalling pip:\n      Successfully uninstalled pip\n  Running setup.py install for pip\n    /usr/lib64/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'python_requires'\n      warnings.warn(msg)\nwarning: no previously-included files found matching '.coveragerc'\nwarning: no previously-included files found matching '.mailmap'\nwarning: no previously-included files found matching '.travis.yml'\nwarning: no previously-included files found matching '.landscape.yml'\nwarning: no previously-included files found matching 'pip/_vendor/Makefile'\nwarning: no previously-included files found matching 'tox.ini'\nwarning: no previously-included files found matching 'dev-requirements.txt'\nwarning: no previously-included files found matching 'appveyor.yml'\nno previously-included directories found matching '.github'\nno previously-included directories found matching '.travis'\nno previously-included directories found matching 'docs/_build'\nno previously-included directories found matching 'contrib'\nno previously-included directories found matching 'tasks'\nno previously-included directories found matching 'tests'\nInstalling pip script to /root/.synapse/bin\nInstalling pip2.7 script to /root/.synapse/bin\nInstalling pip2 script to /root/.synapse/bin\n\nSuccessfully installed pip\nCleaning up...\n(.synapse)[root@rhce ~]#\n(.synapse)[root@rhce ~]#\n(.synapse)[root@rhce ~]# pip install --upgrade setuptools\nCollecting setuptools\n  Downloading setuptools-34.3.2-py2.py3-none-any.whl (389kB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 399kB 974kB/s\nCollecting six>=1.6.0 (from setuptools)\n  Downloading six-1.10.0-py2.py3-none-any.whl\nCollecting appdirs>=1.4.0 (from setuptools)\n  Downloading appdirs-1.4.3-py2.py3-none-any.whl\nCollecting packaging>=16.8 (from setuptools)\n  Downloading packaging-16.8-py2.py3-none-any.whl\nCollecting pyparsing (from packaging>=16.8->setuptools)\n  Downloading pyparsing-2.2.0-py2.py3-none-any.whl (56kB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 61kB 5.6MB/s\nInstalling collected packages: six, appdirs, pyparsing, packaging, setuptools\n  Found existing installation: setuptools 0.9.8\n    Uninstalling setuptools-0.9.8:\n      Successfully uninstalled setuptools-0.9.8\nSuccessfully installed appdirs-1.4.3 packaging-16.8 pyparsing-2.2.0 setuptools-34.3.2 six-1.10.0\n```\nWhen I try to upgrade in one command, eg.: pip install --upgrade pip setuptools it crashes during the process.\nSigned-off-by: Richard Kellner richard.kellner@gmail.com. ",
    "croulibri": "To give you an idea, you can have a look on the Yunohost backup script (at https://github.com/YunoHost-Apps/synapse_ynh/blob/master/scripts/backup) and the Yunohost restore script (at https://github.com/YunoHost-Apps/synapse_ynh/blob/master/scripts/restore)\nI understood you have mainly to backup and restore Synapse config (at /etc/matrix-synapse/) and Synapse database (at /var/lib/matrix-synapse/ ), set up properly files permission, and allows access to domain certs.\nWaiting for a proper documentation, have a look on the well described scripts, they are much more knowledgeable than me.. ",
    "emiljoha": "@richvdh A bit confused. Why is it not possible to move the room data and in that case what does the YunoHosts backup scripts protect against?. ",
    "talentedmrripley": "So that got me on the right path.  I didn't install it as root, I installed it as my user, ripley, but the Debian package creates a user matrix-synapse.  Had to change the shell of that account temporarily and then install psycopg2 under its account.  It gave a different error but seems to have started:\nMar 31 16:32:49 matrix python[6651]:   File \"/usr/lib/python2.7/dist-packages/twisted/enterprise/adbapi.py\", line 238, in _start\nMar 31 16:32:49 matrix python[6651]:     return self.start()\nMar 31 16:32:49 matrix python[6651]:   File \"/usr/lib/python2.7/dist-packages/twisted/enterprise/adbapi.py\", line 249, in start\nMar 31 16:32:49 matrix python[6651]:     self.threadpool.start()\nMar 31 16:32:49 matrix python[6651]:   File \"/usr/lib/python2.7/dist-packages/twisted/python/threadpool.py\", line 153, in start\nMar 31 16:32:49 matrix python[6651]:     self.adjustPoolsize()\nMar 31 16:32:49 matrix python[6651]:   File \"/usr/lib/python2.7/dist-packages/twisted/python/threadpool.py\", line 306, in adjustPoolsize\nMar 31 16:32:49 matrix python[6651]:     self._team.grow(self.min - self.workers)\nMar 31 16:32:49 matrix python[6651]: exceptions.TypeError: unsupported operand type(s) for -: 'str' and 'int'\nMar 31 16:32:53 matrix systemd[1]: Started Synapse Matrix homeserver.\n. ",
    "warpfork": "This comment could probably be written better by someone with a longer involvement with the project; i'm actually shamelessly guessing.  (ContentRepoResource looks like it actually serves things but then I don't immediately intuit why it's distinct from media_store..?)\n. ",
    "njsmith": "\nOne such import is from __future__ import unicode_literals\n\nFWIW, Guido says you shouldn't use unicode_literals and they're going to add a warning about this to the official docs. (See recent thread on python-dev.). ",
    "matthewjwolff": "Yeah that is exactly why the string substitution fails. But I don't understand what the purpose of DEPENDENCY_LINKS is here. It seems to be an empty array whether matrix-angular-sdk is installed or not. Do things get added into that array in the course of server initialization? Maybe the thing that adds DEPENDENCY_LINKS[\"matrix-angular-sdk\"] should occur earlier in server initialization?. ",
    "slipeer": "For me it does not matter the level at which these messages will be registered, but since this is required for debugging your proposal is logical.. @erikjohnston i changed this line to DEBUG.. @erikjohnston I believe this is not a good idea - the data will fall into different lines of the file, which makes it difficult to further process them. The essence of the proposed change is that, if necessary, register data in a log in a form convenient for analysis. \nSuch a log is necessary first of all for the control of data going to a third-party push gateway server.\nRegarding confidentiality: may be better just cut message text from notification dict before send to push gateway? Better yet, is it a customizable option?\nI'm not so worried that my server administrator will read my messages, like what push gateway administrator can read them.\n. ",
    "cjdelisle": "Proposed content:\nhttps://cryptpad.fr/code/#/1/edit/EpHG3FrIQwq18pjm9wW3hA/S-VUuh3I-AOHwfmuZKfGgD5U/\nI'm aiming for it to be meaningful in an \"executive summary\" way but still true.\nWith your approval I'll push another commit.. ",
    "krombel": "I would add the version of the running instance (if known).\nAnd maybe the install method (via package manager/ via git clone/ ...). the default for include_content is true. IMO this should be here as well. As this method generates the default snippet for the push config I would put include_content: true here (even uncommented)\nHaving a comment in the description is optional I think. But would not be bad :)\nBut his is just my \"suggestion\". I will accept what you think is best here :slightly_smiling_face: . why not just logger.warn(<msg>) instead of the previous construct \n(reactor.callWhenRunning(lambda: logger.warn(<msg>)))?\nShouldn't that be faster as well with the functionality that this message will be part of homeserver.log?\nThis is especially useful in the case when you run it as service and won't see any console-output. All right. Good to know\n. prometheus.yml is working in my running setup. This is as well inconsistent to lines 127-128. Intended?. Why are you using an array here?\nWouldn't it possible to just use an assignment?\nThe loop will cause multiple entries to be overwritten either way. s/matrix/matrix.org/. Ohh good to know. I expected python to behave like other languages...\nthen nvm. shouldn't we evaluate that we have only have {\"joinable\": <bool>} as body?. As of https://www.regular-expressions.info/anchors.html you might want to prefer\n\"\\A[_\\-./=a-z0-9]*\\Z\". fullmatch() is available since python 3.4 (reference)\nSo I think \\A\\Z would currently be the better approach\n. @lukebarnard1 you missed join_policy = group['join_policy'] or similar. That will handle the first event of events and skip the other events of the queue - even if that first one is valid or not. \\WHILE{$pending$ is not empty}. You can shorten it by s/config/hs.get_config()/ as you do not store config somewhere.\nBut that I think that is personal preference.... Is it reasonable to have an errcode of CANNOT_LEAVE_SERVER_NOTICE_ROOM when it is about rejecting invites? Or just a mistake?. You can extend this query to the following to not need the check in the for loop:\nSELECT g.group_id FROM groups g\n    WHERE (SELECT count(*) from group_users u WHERE g.group_id = u.group_id) = 0. it was a copy/paste error. I got confused by the doc strings of the other methods.\nIt should be r0 AFAIK. I have changed it now. It is that class but it adds the /client/r0/ endpoints as well.. wouldn't it be better to use the master branch instead?. That is not yesterday but month_ago or similar. Please rename to avoid confusion. This method will be hit very often. So you might want to either add some cache on store.count_monthly_users() or use a value which might be generated by generate_monthly_active_users. you might want to deduplicate this somehow. ok. If that is on your radar I am fine with it for now. That file is in general for people who contributed a feature. I would say, that your \"Small bug fix\" does not count.\nIf it would it should contain all contributors.. Good to know. Then nvm. No prints. Please use logger if you want to have that. You probably want to return somehow if this condition is false.. s/an/and/. abs?. s/syanpse/synapse/. It would cause some code duplication as I would have to create a new servlet for that.\nPersonally I think there is a reason why we require an admin token so that the admin should take care that (s)he does it right.\nBut I can change it if you like.. This does not look like the right place for it.\nsynchronous_commit defaults to true so this will in default not do that what you expect it to do.. You are not doing anything against E731 (BTW: Do not assign lambda and use def instead)\nSo why do you want to add it here? . based on the comment above that is inherited from pep8 so this is duplicate. Although it is merged now, I meant that pep8 currently has the same line. So no \"just E731\". The whole line could be go away if I get it right.. ",
    "lampholder": "Yeah, I stopped short of asking for logs since we've got no secure way to receive them (other than via Riot itself), but we could ask for 'relevant log snippets' if the user is able to provide them.\nIdeally we'd also expose the rageshake server to receive logs securely, but that will need time to develop :). Agreed; thanks.. ",
    "superdump": "True.. Though we're discussing whether to have this Dockerfile in-tree or out-of-tree. In-tree means it's easier to build an image from dev code. Out-of-tree feels a bit cleaner and it can be maintained separate from synapse releases.. Good points. That needs fixing.. ",
    "djmaze": "May I ask why this is used as a base image? As there is only one process running in this image (Synapse), afaik there is no advantage in using the extra supervisor employed by phusion-baseimage. The official ubuntu ( or debian) base image will probably be enough.. ",
    "mtkunkel": "+1.  The ubuntu base image is better maintained, smaller in size, and in 10X broader usage.   It seems most of the things phusion is solving for are no longer issues.. ",
    "peter-scholtens": "The misunderstanding is as follows. I expected typing  ./script/hash_password would call the script, but it doesn't. Apparently the script is stored in the bin directory, so after sourcing the command it can be called without any sub-directory prefix as hash_password. Not by ./scripts/hash_password (as far as I understood the installation procedure correctly).\n. ",
    "t3chguy": "s/in/to/. seems duplicative, \"\"\"to use this server you need a client to use this server\"\"\". you seem to switch between v1 and r0 interchangeably.... so is it r0 or v1?. it seems like it is actually v1. @richvdh, existing code disagrees: https://github.com/matrix-org/synapse/blob/bc80b3f454aa9b9ca8bc710ff502b83892ac0a91/synapse/storage/events.py#L1575-L1577. its not in the acme section though. ",
    "kaiyou": "Pointing at master sounds a bit risky as well. Maybe point to latest, that the team will have a responsibility to point to the current working version?. Oh yes, I had forgotten about that regarding this repo. But sure, let's go for latest anyway.. Definitely agree, I was thinking maybe have all yaml files in a folder in /data be included as appservices.. Indeed, harmless but will save some milliseconds.. I usually prefer to keep short and simple path for files in Docker images, like /start.py and /conf. But you are right, other files should not be copied.. Just added this in the latest commit.. The environment variable SYNAPSE_CACHE_FACTOR is supported by default if passed to the container. Just added some documentation about it.. I want the image to have two different modes of operation: either generating and customizing a config file, or using the dnyamically generated one. I agree that the dynamically generated one could be populated using the generate command instead of Jinja inside the start script.\nI'd say this is room for later improvement, as I'm not experimented enough to play with Synapse core code yet :). Disagreeing: I would care a lot more about having an updated Python than updated system libs as long as security patches are backported. docker.io/python:2-alpine is based on the latest Python release deployed separately from apk, as opposed to using the Alpine base image.. Agreed.. Agreed.. Agreed.. Disagreeing: again I see two modes of operation, using a dynamic config file based on environment variables or generate a fresh one from Synapse using generate and customize it manually. Maybe the documentation could be improved to explain this though.. execv expects a path to the binary followed by the command line itself. su-exec is still the first argument of the command line (which will populate argv[0]).. Agreed.. Agreed.. Agreed.. I'd gladly add a Riot container to the Compose project later, which might (and probably will) have conflicting environment variables, won't it?. Agreed with @turt2live, will make it a required argument. Yep, this got to be improved, will include the fix while making some other options mandatory. The expected behaviour would be: server name is mandatory for generating the config file, some variables are mandatory when using the dynamic config.. My mistake, will fix.. Ah, that sounds better, thanks!. Just pushed some documentation update about this.. Okay, I guess I don't mind, maybe someone else has a preference.. You mean tox.ini, tests are not run in the Docker image. I guess we could include the tox configuration of course, but I did not find it useful.. Yes, I did hesitate with a default behavior generating a random value and storing it to the data dir.. ",
    "superboum": "This line fails the build because it breaks the linter. ",
    "dali99": "This line seems out of place. Alright then, makes sense. ",
    "michaelkaye": "We should probably then move the historical information into the changelog and leave UPDATING as just the top level howto, referring to the changelog for any specific requirements on upgrade? Just so we don't split the idea of \"upgrade notes\" across multiple places.. :+1:. :+1:. :+1: thanks. Sure thing.\nWhat's the best way to do this when we're implementing an interface defined by another class (This is an alternative implementation of synapse/events/SpamChecker.py). Happy to copypasta the documentation from there if that's the best solution.. :+1: . :+1:. If we remove this line then this will reduce the size a little without doing deletes that aren't worthwhile.. Do you mean to set the value of active to hide_profile and the value of hide to True ? I think this wants to be the other way around?. Sure thing - i think i have got the right RST formatting when doing that.. LetsEncrypt as the main cert provider via ACME suggest renewal after 60 days (at 30 days to go). They currently send emails to warn of un-renewed certs at 20 and 10 days, so this may want to be about 30 days as a default.. Don't forget to set the default to be the live endpoint. Also, do we want to consider using the v2 API now , if it's a simple change in our use of the library, to prevent us having to move to v2 when they decommission (timeline unspecified, so if it's a lot of work it is definitelyworth punting down the road) . Nitpick: This is adding sentry support, of which one possible DSN is on sentry.io, but users can deploy their own private sentry instance if required.. sentry.io again. sentry.io again. ",
    "NotAFile": "it does in fact preserve the traceback, you can try it out.\nThis makes sense, because reraising an exception you don't want to handle is exactly what it was added for.\npython\nIn [3]: def x():\n   ...:     def y():\n   ...:         def z():\n   ...:             raise AssertionError(\"asdajshd\")\n   ...:         z()\n   ...:     y()\n```python\nIn [5]: try:\n   ...:     x()\n   ...: except:\n   ...:     raise\n   ...: \n\nAssertionError                            Traceback (most recent call last)\n in ()\n      1 try:\n----> 2     x()\n      3 except:\n      4     raise\n in x()\n      4             raise AssertionError(\"asdajshd\")\n      5         z()\n----> 6     y()\n in y()\n      3         def z():\n      4             raise AssertionError(\"asdajshd\")\n----> 5         z()\n      6     y()\n in z()\n      2     def y():\n      3         def z():\n----> 4             raise AssertionError(\"asdajshd\")\n      5         z()\n      6     y()\nAssertionError: asdajshd\n``. I normally have my editor configured to sort imports automatically, but I have turned it off for synapse so the diffs stay under control. Perhaps it would be worthwhile to runisorton the repo at some point.. That's a good point. I hadn't seen them used before. In my head^$were always the start of the string, not the line. The thing I did to solve that usedfullmatch()` instead, which works too. Not sure what is cleaner/faster.. ",
    "Valodim": "I'm not 100% sure why this is necessary: The value returned here by psycopg2cffi comes from ffi.string, which for some reason couldn't be interned as-is. I couldn't find anything on google regarding ffi.string vs intern, and casting to str was a simple fix. Could be it returns a unicode object, but PQfname is documented to return char and not wchar_t so if it does I don't know why :)\nIf this is performance-critical, might be worth checking the actual runtime type. Although actually cursor_to_dict might be conceptually suboptimal if this is really on a super hot path?. ah, sorry. I think this one snuck during the rebase, didn't mean to add it. ",
    "bebehei": "Yes, full ACK. But my intention is to fix this later in a separate PR. This is my first one and I wanted to get the PR process known first.. ",
    "bwindels": "Should be m.heros? I get a exceptions.KeyError: 'heros' when running this locally.. Fixed it, as am 99% certain that that is what it should be, and it unblocked me locally from syncing.. Wouldn't this only not send it when the count is 0? Whereas the MSC mentions that not sending it means it hasn't changed since last time it was sent?. How about invited users, in case there are less than 5 joined users?. Also calculate the summary on initial sync?. ",
    "fuzzmz": "Fixed this in the latest commit to raise NotFoundError instead of the generic one.. ",
    "vojeroen": "That's right, I'll update it.. I agree it's not best practice to use private implementations. But, if I just copy _tolerateErrors, the pep8 test fails as it contains a bare \"except:\" statement. I'm not familiar enough with twisted / openssl to know which errors this try/except clause should catch. I can change this to \"except Exception:\" to both catch all errors and pass the pep8 test, but that doesn't seem right either. However it is the easiest solution. What do you think?\nThis is the _tolerateErrors code:\ndef _tolerateErrors(wrapped):\n    def infoCallback(connection, where, ret):\n        try:\n            return wrapped(connection, where, ret)\n        except:\n            f = Failure()\n            logger.exception(\"Error during info_callback\")\n            connection.get_app_data().failVerification(f)\n    return infoCallback. ClientTLSOptions should get a unicode string, so the python 3 equivalent of unicode(host) would be str(host). If the same code should run in python 2 and 3, assigning str to unicode for python 3 is a straightforward solution. Is this OK for you?\nif sys.version_info.major >= 3:\n    unicode = str. That's an even easier solution. I'll add this comment.. Is there a specific reason you want to use decode('ascii'), otherwise I would suggest decode('utf-8') to keep it more generic? \nJust quickly looking at synapse.http.endpoint.matrix_federation_endpoint (where ClientTLSOptionsFactory is actually used), it seems to me that this function will have more problems with bytes vs str when running in python 3 than just this one. Probably to be looked at in another PR, as this would require some more investigation.. I see you already merged this. I did the commit with utf-8, so if you prefer ascii it might be best to change it then.. ",
    "cwmke": "Isn't that set in homeserver.yaml? If not, I'll make sure to add it. . Gotcha. I'll add it this afternoon. . According to this site it sounds like that may be done automatically by invoking ProxyPass.\n```\nReverse Proxy Request Headers\nWhen acting in a reverse-proxy mode (using the ProxyPass directive, for example), \nmod_proxy_http adds several request headers in order to pass information \nto the origin server. These headers are:\nX-Forwarded-For\n    The IP address of the client.\nX-Forwarded-Host\n    The original host requested by the client in the Host HTTP request header.\nX-Forwarded-Server\n    The hostname of the proxy server.\nBe careful when using these headers on the origin server, since they will contain more than one \n(comma-separated) value if the original request already contained one of these headers. For \nexample, you can use %{X-Forwarded-For}i in the log format string of the origin server to log the \noriginal clients IP address, but you may get more than one address if the request passes \nthrough several proxies.\n```. ",
    "remjey": "The statement was shortened. Yes it\u2019s much better.. ",
    "chaosgrid": "Let's imagine a setting that sends mail after 10 minutes of no read receipt. The db query returns the most recent X events. If none of the X events are older than 10 minutes, no email will be sent. So, if we have a room in which there is constant activity so that the most recent X events are always less than 10 minutes old, no email will ever be sent. This is problematic especially when you set the mail delay to longer periods like 24h.. Can you give an example?. >It's not obvious to me that I want a mix of old and new events in the email: it sounds confusing. Furthermore, doubling the number of database queries sounds unsatisfactory.\nIf you rather want the X most recent events only, I think we could make it only one query with no limit and only return a partial list, together with the date of the oldest notification.\nHowever, IMO it makes sense to include the oldest notifications because those are essentially what triggers the email (these old notifications not being read). Note that I'm just trying to fix the major issues with current email notifications, the whole system likely needs a proper rework so that email notifications can be customized by users themselves.\nIn general, the current approach of splitting between most recent and oldest notifications could be made in code with a no-limit single db query. I'm just not sure if it is faster for large result sets.. ",
    "dekonnection": "It's done :). ",
    "giomfo": "Don't you think we should set the value of hide to True here?. This point may be ignored, it is just a remark. ",
    "ilu33": "Correct. The average home server doesn't have any consent to track because there should be nothing you have to consent to. Art. 7 1 b \"Processing shall be lawful only if ... processing is necessary for the performance of a contract to which the data subject is party\". Everything that is technically necessary to provide the service needs just information, not consent. \nConsent needs to be freely given and can be retracted at any time - without terminating the service (Art. 7 GDPR and Recital 43). We are not Facebook or Google, we do not force the user to consent to anything. We can't help the technical necessities though and about them we INFORM.\n\"Consent\" and \"agree\" implies that you store data that is not technically necessary to supply the service, which - I hope - no homeserver does. (Except: Consent to statistics/piwik is tracked in the settings which is correct. Consent to bots - which I personally think needs consent - should be in the settings too but that's not the topic here.). ",
    "kazakbai": "The problem is this:\nsomeone invited the chat participants and left the room before others accepted, and when others try to accept the invitation by other participants, we get an error {\"errcode\": \"M_UNKNOWN\", \"error\": \"No known servers\"}, and the current fix decided this problem. For example, what can break?. if 3 people are invited to the room, two accepted the invitation, and the third accepted later, after talking about something and leaving the room, the third one should see the chat correspondence after accepting the invitation. If not, then the room with the invitation should not be given at all to the list of available. ",
    "Ralith": "I've been encountering a somewhat steady stream of people having this problem, and who knows how many go unseen. The situation right now is pretty dire and it is difficult for an affected server operator to find this information if it's not published somewhere central.\nA better solution than mentioning the README would be to disable presence by default until it's no longer a performance disaster. Is that on the table?. ",
    "jryans": "Should \"matrix\" have a capital M here?. Is this supposed to be a new question header?. suggestion\ncertificate for `example.com` (and ExampleCorp may be reluctant to let them have. Hmm, this feels a bit harder to follow than it could be otherwise since ExampleCorp supposedly owns example.com but then that Matrix HS supplier controls customer.example.com if I am following, which seems unlikely... Perhaps customer.example.com should be customer.homeservers.com or really anything other than *.example.com, so it's clear that they are controlled by different parties?. ",
    "nadonomy": "Good catch! Fixing.. ",
    "interru": "Good point! Completely forgot IPv6.. ",
    "jaywink": "Will condense to one line! :) I'm a fan of verbose changelogs, but I will live ;)\n@hawkowl what do you mean by this, just out of interest?\n\nhe real problem is breaking the dot-pointing, which i forget how to stop with markdown.. The tests blow up otherwise due to some internals in the KeyApiV2Resource which would require further tweaking of the test homeserver possibly. Since we're not testing that, it was easier to mock it.\n\nI'll post here what the problem was when refactoring the tests.. So, I took how the tests were written pretty much from test_frontend_proxy, added here https://github.com/matrix-org/synapse/pull/3694/files#diff-20dd51850158a57f8dd29117bf46b484R50. \nWhat I noticed is that if I don't call self.resource = site.resource.children[b\"_matrix\"].children[b\"federation\"].children[b\"v1\"] at all, then everything fails with a 400 error. But when there is no federation listener, calling this will fail due to  KeyError. I tried using .get() but that didn't have the same effect. I'm not entirely sure how the test make_request works underneath. This was also the same reason I introduced parameterized because otherwise there would have been a lot of duplication of the test code when in fact we just want to run the same test with different parameters.\nI'm not entirely sure how to test a failure since we can't call self.resource without that failing, and if it's not called, any request fails, so it's not really a successful test. Maybe @hawkowl has some details on that as the author the frontend proxy test, what do I need to do here to make make_request works without calling self.resource first?. File \"/home/jaywink/workspace/synapse/synapse/app/homeserver.py\", line 227, in _configure_named_resource\n    resources[SERVER_KEY_V2_PREFIX] = KeyApiV2Resource(self)\n  File \"/home/jaywink/workspace/synapse/synapse/rest/key/v2/__init__.py\", line 25, in __init__\n    self.putChild(b\"server\", LocalKey(hs))\n  File \"/home/jaywink/workspace/synapse/synapse/rest/key/v2/local_key_resource.py\", line 70, in __init__\n    self.update_response_body(self.clock.time_msec())\n  File \"/home/jaywink/workspace/synapse/synapse/rest/key/v2/local_key_resource.py\", line 75, in update_response_body\n    self.valid_until_ts = int(time_now_msec + refresh_interval)\nTypeError: unsupported operand type(s) for +: 'int' and 'Mock'\nJust noticed it's only a problem with SynapseHomeserverOpenIDListenerTests though, not the reader. If federation resource is active, key resource is added automatically, thus the mock.. ",
    "anoadragon453": "Ah, you're right, thank you. Still getting used to this execution model.. I've changed it to just use epoch seconds, thanks for the heads up :). Probs. Ah, we can but it's inside SearchHandler: https://github.com/matrix-org/synapse/blob/b1b6dba2d2c0690157cdd620063d4e16a583264a/synapse/handlers/search.py#L41-L56\nShall I move it to the store instead?. Ohh, nice one. I love destructuring. . Oof, I think I got lost in thinking how the tag data was structured to realize how clunky that code was.\nThanks for pointing it out.. Hm, is a changelog even worth it for this change?. Oh, so it is. Will add, thanks.. Sure, it was just copied from another method. We seem to have several different ways of writing the same thing spread across different methods?. Ahh, I see, thank you.. I'm not sure what this is talking about. Tempted to just take out the line.. suggestion\nSynapse requires a valid TLS certificate. You can do one of the following:. suggestion\n   an entire config as `${SYNAPSE_CONFIG_PATH}`).. Is |key supposed to be an actual  key? If so, then should it be |${key}?. suggestion\nIf you don't do any of these, Synapse will fail to start with an error similar to:. Much, thank you :). Should there be a second endif here?. Oh wait I see it now.. kk. It's also in INSTALL.md, should I leave it there?. Yeah, it was meant as an ending to both. I'll add another heading.. It tells you to at the end of the instructions. Is that too far away that people will think to finish at this point?. Not sure I follow.. Changelog entries should have punctuation :)\nsuggestion\nSupport .well-known delegation when issuing certificates through ACME.. suggestion\n                \".well-known is in use, provisioning %s instead of %s\",. Really? All the other room upgrade stuff I've been doing have been bug fixes.. Kk, I have no strong feelings one way or the other.. Hrm, in testing this seems to be a few hundred ms slower if we do another call to the DB.. Literally 1 ban and no messages lol. The original code was returning None and then appending it to the chunk, so I kept doing so. Not sure if it's necessary or we can just leave it out.. Looking at the code, I don't think Nones in there are particularly useful, so just not inserting anything (by returning instead) seems like the right way to go.. https://github.com/matrix-org/synapse/blob/40c2271680501c5ca2c29349d62df42d80b953db/synapse/storage/state.py#L486\nAre they supposed to be RoomIDs?. The problem was that if \"m.federate\" wasn't in result, it would imply a federating room.\nI've realized this logic doesn't cover that and could lead to a crash, and thus have replaced with:\nif from_federation:\n            if \"m.federate\" in result and not result[\"m.federate\"]:\n            # This is a room that other servers cannot join. Do not show them\n            # this room.\n            return. Ah, you meant adding |None. Have done so for the other types yes.. Yep, split it up as two ands was getting unclean. This is cleaner though, thank you.. Yep, left over cruft from adding in an arg then taking it away again. Tis set back now.. suggestion\n            servers (list(str)|None): A list of servers to send presence to.. suggestion\n                logger.info(\"Sending targeted presence to %s\", destination). What do we want exactly? And wasn't the goal to be permissive about trailing slashes everywhere?. Correct, we decided to leave out groups for now.\n. The ID is global/room/<room id>, but we can use the pattern instead.. This works and is very pythonic, thanks.. Sure. flake unfortunately complains about visual indentations if we do this.. Mm, good point. When we originally thought we were going to get a 404 on missing a trailing slash rather than a 400, it made sense to not backoff forever before trying again with a trailing slash.\nNow there's no need not to do it for best, which consequently also mades the code simpler.. It will be necessary if we're checking the body for M_UNRECOGNIZED, which we need to do again anyways.. ",
    "babolivier": "Thanks. I wasn't happy about the documentation I had, but wasn't sure about how to improve it.. Sure, makes sense.. Roger that (I'm still learning how to do proper python). Right, makes sense.. Oooh now I see how stuff could go wrong here.. Oooh I didn't know that was a thing. Thanks!. Thinking back about it, all of the calculation involved when rate limiting is done based on the HS clock, not the reactor's clock, so not sure it's the right solution.. Right, I would not see it working because of a line I forgot to remove that was overwriting the clock. Fixed in e11a462. suggestion\nIf synapse runs out of file handles, it typically fails badly - live-locking. suggestion\nto respond. (We need to improve the routing algorithm used to be better than. suggestion\nfull mesh, but as of March 2019 this hasn't happened yet).. suggestion\na few seconds to execute. Please let us know at #synapse:matrix.org if. suggestion\ncommon requests. We'll improve this in the future, but for now the easiest\nAm not a native English speaker, but https://jakubmarian.com/in-the-future-vs-in-future-in-british-and-american-english/ says it's wrong. suggestion\nvariable. The default is 0.5, which can be decreased to reduce RAM usage. Maybe mention somewhere around here that both ways are described more in-depth in dedicated sections below? This section ending with \"If all goes well, you should be able to connect to your server with a client and then join a room via federation\" would make me think that I should have delegation working by reaching this point of the documentation.. suggestion\ndelegation method if this isn't what you want. (for more details on the. suggestion\nrationale [see here](https://github.com/matrix-org/matrix-doc/blob/master/proposals/1711-x509-for-federation.md#interaction-with-srv-records)). suggestion\nFor more details the see the [Server to Server Spec](https://matrix.org/docs/spec/server_server/r0.1.1.html#resolving-server-names).. k, I wasn't sure of how to do it. suggestion\n  includes a full chain (for instance, if using certbot, use. Nope, because it makes the tests fail, since the test define special config parameters after initiating the handlers and servlets.\nI had them in the constructor initially but couldn't find a sensible way to make the tests pass that way so I reverted that part.. Thanks!. As asked in #synapse-dev, why do that here while other tests (register, capabilities, etc) have a self.url defined this way?\n. Gah, I missed the response there. Will change that then.. ",
    "targodan": "Does this work with workers?\nAll worker tutorials I have found so far seem to suggest that daemonizing is required. Or do you mean only non-daemonize the homeserver app and still daemonize the workers?. Of course. Will do this afternoon/evening.. Nevermind. I just tested it and it works. Will change everything to a non-forking setup.. Yes, must have slipped through when I was copying stuff. Fixing now.... Fixed. Assuming you are refering to the AllowIsolate=no. Yes, it's the default value according to the systemd docs. However I personally am a friend of doing important things explicitly. The matrix.target is one you would never want to isolate as all non matrix services would be stopped, effectively killing the system.\nThus I deem this important. Take the (admittedly unlikely) case that systemd decides to change the default value. We would still want this to be false/no as this target is designed as a grouping of services rather than an isolatable target.\nTo be fair even with this set to true an admin would have to do systemctl isolate matrix.target in order to cause mayhem, but I'd like to prevent this under any circumstances.\nTL; DR: I deem it important that isolated is false and I personally prefer to do important things explicitly rather than implicitly by default values. But yes, it is the default value and I'll leave the final decision up to you. I won't be offended if you tell me to remove it. :slightly_smiling_face: . If you feel like this warrants a deeper/longer discussion feel free to pm me in the matrix @luca:targodan.de. ",
    "benpro": "All right.. Ok!. ",
    "jbweston": "I guess a first point to make sure we agree on is what to call this endpoint.\nserver_version seems better  than simply version IMO, because it is more explicit. Then there's what should be returned. @hawkowl suggested to also return the Python version (IIRC) because we can, and because this is often a pain point for users.. Also I just realised I forgot to add documentation for this endpoint. . > this is often a pain point for users.\ni.e. that troubleshooting is harder without this information, so we may as well return it. "
}