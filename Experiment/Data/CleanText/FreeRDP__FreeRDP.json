{
    "llyzs": "cancelled.\n. they are actually allocated and freed by the same runtime lib libfreerdp-utils. see event.c and memory.c.\n. Yes you are right. To add a new event type you need to modify event.c. I have renamed the callback in last commit, so it should be ok.\n. @otavio: I agreed, and I added a commit which should be what you need.\n. I did the following:\n$ mkdir Build\n$ cd Build\n$ cmake ..\nEverything still generated in the source root tree, and Build folder is just empty. Could you tell me exactly how you create the build tree in \"Build\" folder?\n. I figured it out, and it turned out that I have to delete all generated cmake files before rerun cmake (it seems to even remember the previous binary tree.\nI made a patch, and it seems good to just replace CMAKE_SOURCE_DIR with CMAKE_CURRENT_BINARY_DIR.\n. Added a commit to fix a bug in transport layer.\n. Fixed and  close\n. Implemented in issue #115\n. implemented in issue #114.\n. I have tested with XP, and this commit seems to break it:\nhttps://github.com/FreeRDP/FreeRDP/commit/7f3bad1d15cf4ec1dea0b662ae59bc11cc117f3f\nrevert back before this commit at least works for XP.\n. I have just pushed a small fix to revert a mistake in the commit mentioned above. It now at least work for XP for me. Will test win7 soon.\n. OK, win7 works as well for me after the fix. Please let me know if any other issue.\n. Did you try to remove and recreate the local CUPS printer?\n. Did this work with older version of FreeRDP? Please try 0.8 or 0.9 on the same platform (same cups version).\n. Do you have newer CUPS version to test?\nBy the way, why do you use a different driver while the default MS Publisher Imagesetter works? I suspect this is an incompatibility issue between CUPS and the windows driver (maybe incompatible PCL command).\n. how about if we add an additional argument like this?\n--data printer:\"HP-LaserJet-4050\":\"HP LaserJet 4050 Series PCL6\":\"application/vnd.cups-raw\"\n. How about this simple patch?\ndiff --git a/channels/rdpdr/printer/printer_cups.c b/channels/rdpdr/printer/printer_cups.c\nindex a5f9dc7..846cc31 100644\n--- a/channels/rdpdr/printer/printer_cups.c\n+++ b/channels/rdpdr/printer/printer_cups.c\n@@ -175,7 +175,7 @@ static rdpPrintJob* printer_cups_create_printjob(rdpPrinter* printer, uint32 id)\n                }\n                cupsStartDocument((http_t*)cups_printjob->printjob_object,\n                        printer->name, cups_printjob->printjob_id, buf,\n-                       CUPS_FORMAT_POSTSCRIPT, 1);\n- CUPS_FORMAT_AUTO, 1);\n  }\n#endif\n. @fedsed: please ensure you've rollback any changes to /etc/cups before testing the patch so that the default settings can be verified.\n. This is a regression. I am sure it was working some time ago.\nEDIT: The issue seems to be hardware dependent. It happens if the video extension does not support XV_COLORKEY attribute (find out by running xvinfo). To fix it I think we need to run a non-accelerated path of drawing video frames.\n. I pushed a commit which should fix it. Please test.\n. This can be fixed by adding/removing flags INFO_NOAUDIOPLAYBACK and INFO_AUDIOCAPTURE. However, there's no easy way to tell whether \"rdpsnd\" or \"audin\" is registered or not, from the core. This is especially true for audin, which is a sub-plugin of another plugin drdynvc.\nMaybe adding two additional command-line arguments and two new flags in rdpSettings is the only way?\n. This should also has been fixed. Please test.\n. config.h should not be appearing in public header; if so this is a bug and should be fixed.\n. I pushed a commit which should fix it. Please let me know if there are other places missing the inclusion of config.h.\n. To solve this a little more work needs to be done. We need to generate a public version of freerdp/config.h, which has all defines prefixed (i.e. HAVE_STDBOOL_H becomes FREERDP_HAVE_STDBOOL_H) then it can be safely installed and included by other public headers.\nI believe this is the way to go and it needs to be done at some point anyway.\n. The segfault should have been fixed now, but the real thing is that xfreerdp-server does not work with --sec rdp since it does not provide an rdp key file. It only works with TLS for now.\n. The main purpose is to separate UI from the core, so I think another approach is to run UI in its own thread without changing the core. This is because even without decoding (for example ask the server to send no-codec bitmap only), the UI is still the main factor that blocks the core network layer. It may work like this:\n1. the main thread runs the core as it is, and dispatch packets to channel manager, UI or decoder.\n2. For GDI or no-codec packets the main thread passes them to UI thread directly.\n3. For packets that requires decoding, the main thread passes them to the decoder worker thread.\n4. When decoder worker thread finish decoding, it passes the packet to UI thread.\n5. The UI thread is responsible for re-assemble packets in right order and call UI stuff (X11 etc)\n6. The UI thread is also responsible to inform the core to send frame acknowledgement if necessary.\nFor this to work we will need to modify the rdpUpdate and rdpInput object so that it can hold data and be safely passed between threads.\nAny comments?\n. @hardening SEncParamExt is always available. It is defined in public header codec_app_def.h side-by-side along with SEncParamBase and there is no conditional #if whatsoever. So is the InitializeExt API.\n. On Linux, GetTickCount() is implemented using clock_gettime(CLOCK_MONOTONIC) which I believe is already high-precision, so we just have to wrap the new API to it directly. It is only on Windows that GetTickCount() has such problem.\n. @hardening \nThis is the application volume, not master volume. In fact OS default of the application volume is 100% so this should not be a problem.\n. Resampling also required if nChannels are different (such as mono-to-stereo or vice versa). ",
    "roman-b": "I see some possible problems with freeing memory for UI->plugin and plugin->UI events. They are allocated by one runtime lib (in UI or plugin) and freeing by other runtime lib. I assume you should to create some callback from UI to plugin for UI events freeing and from plugin to UI for plugin events freeing. You can look at current CHANNEL_EVENT_WRITE_COMPLETE behavior in https://github.com/FreeRDP/FreeRDP/blob/master/channels/cliprdr/cliprdr_main.c for example. In cliprdr_send_packet memory allocated and gived in UI and in OpenEvent (CHANNEL_EVENT_WRITE_COMPLETE) its freeing.\n. Sorry. Agree. So if I need some event for RAIL virtual channel plugin I must to modify event.c for allocating my events? Am I right?\n. I also notice that the event_callback called before event freeing. Is it possible call it by \"on_event_freeing\" or something? I think it's more appropriate name for this callback (I say this as future active user of this new both directional system)\n. Could you describe your environment: OS, Desktop Manager, server-side application? I need it for reproducing this bug.\nThanks for RemoteApp testing!\n. ",
    "awakecoding": "@otavio: with the debug macro, you get the line and function name, right? with that, you get enough information to know in which context such short sentences like \"connecting\" are outputted.\n. @otavio: in this case we just need some sort of printf wrapper that cannot be turned off like debug macros. should this printf wrapper add the line and function number like the debug macros though? if it doesn't, then sentences printed using that wrapper need to be more explicit.\n. Looks good to me. Merge?\n. did you fix your indentation yet? I still see indentations of 2 space characters there, not tab characters of length 8.\n. Sorry, the indentation is indeed fixed, it's just the github diff showing the original indentation. I guess it doesn't consider an indentation fix as a diff.\n. @otavio: why should we fail if xmlto is not available? we're not failing if doxygen is not found on the system (we're not detecting it at all in fact), so why should we fail by default with this one?\n. Is there a way to clearly warn the user about what he's going to break if he doesn't have certain optional packages? I find that a lot of people end up having problems because of that. For instance, building without Xinerama will break the automatic detection of multiple monitors, which is really bad when you're going full screen on a dual-monitor setup.\n. In fact, I think that for certain optional packages it might be better to have the user explicitly disable certain packages, mostly because they're causing confusion when FreeRDP is built without them.\n. @otavio: we should leave options for the user to enable/disable things for sure, but here's the case that causes a lot of confusion with people building FreeRDP for their own use:\nuser installs enough dependencies to build FreeRDP\nuser tries using FreeRDP\nuser notices a problem, thinks it is a bug\nuser takes out time asking questions to why it's not working\nand then we tell the user he should have installed optional dependency X...\nThis is the case of optional dependencies like xkbfile and xinerama, I've seen numerous users on IRC lately run into such avoidable problems. It's becoming an issue, since people continuously run into such problems now.\nOther things like SSE2 are currently not detected, but it is one of those things that should be detected and enabled by default. Obviously, most people want SSE2 optimizations unless they have a reason not to want it.\n. we should have three types of dependencies:\nhard dependencies (mandatory, can't build without them)\nsoft dependencies (can be disabled, but preferably not)\noptional dependencies (optional, not something most people want by default)\n. @nils-a sounds good to me, the idea of a find_required_package for the first case would help clarify how each one is different.\n. @nils-a: not sure if we should warn for CUPS. as for Xinerama, I would put it in the suggestions, it is probably the one causing the most confusion after xkbfile. Not everybody has a dual monitor setup, but since FreeRDP is often used by people in IT, it is quite common to find users who need this. When dual monitors are not properly detected, it really is a show stopper.\n. @nils-a: there is no alternative for CUPS, not building with it means no printer support\n. @otavio any comments on this? I like what nils-a has prepared\n. @shlevy\nI just installed xmonad in an ubuntu virtual machine (11.04) and I was able to launch FreeRDP without problems. Can you confirm that it now works for you as well? I'd like to close this ticket otherwise\n. We can probably try to improve this later, but since fixing the memory leak is more important than not fixing it, let's merge this at least :P\n. I manually merged this pull request, it's now in master\n. I haven't compared this to the older code, any thoughts?\n. for signal handlers, maybe take a look at what libfreerdp-utils can offer? otherwise, maybe that's something that could be added to the utils\n. @shlevy: even if it's not 100% POSIX compliant, it's still an improvement, so we could merge whatever is stable enough for usage at this point.\n. Currently, reception of cursor messages is only handled with slow-path PDUs, pointer updates in fast-path PDUs haven't been done yet.\n. I just added the hooks for pointer updates when using fast-path PDUs. This means that all is left is actually implementing the part in xfreerdp that receives those messages and handles them properly for X11.\n. I have just pushed initial cursor support in xfreerdp. it might need more exhaustive testing though\n. Currently, xfreerdp will prompt for a password if it wasn't passed at command-line first. However, to complete this task, we should have the core make use of callback to have the UI prompt the user for its credentials.\n. @shlevy: this one should be a no-brainer to me, it's more a change in the code structure than in functionality. we need to have the core make use of a callback similar to those used in graphical updates, and have the UI register for it instead. This would allow for clients like wfreerdp to use a graphical prompt instead of the command-line version, for instance.\n. client authenticate callback has been added, some polishing might be required though, such as asking for the username and password if it hasn't been entered as well\n. I have just pushed initial support for glyph drawing in xfreerdp. Due to the complexity of glyph drawing, it is possible that certain corner cases fail, like text written right-to-left. Glyph drawing may also include the drawing of a background, which is currently not completed.\n. I have rewritten part of the glyph cache support to make use of a different approach. I could get certain cases to work, but there seems to be parsing issues somewhere which I cannot identify yet. I'm trying to get it to work perfectly with --gdi sw first, and then I'll port the code to --gdi hw as well. You need to enable it using --glyph-cache to test it out. If anybody wants to help, it'd be appreciated, two heads are better than one and this one is hard to get right.\n. @otavio: no, the work is still not completed. It's currently only with --gdi sw and --glyph-cache. Further testing and cleanup is required before we can close this one.\n. It is now currently working well with --gdi sw, but it hasn't been completed for --gdi hw. It's still disabled for that reason by default. We also need to cleanup the debug output after that, and then we're done with this one.\n. thanks to @jsorg71 it is now fixed and enabled by default. enjoy :)\n. I have just pushed enough code to get bitmap caching in a working state. There might be minor glitches, but nothing that produces artifacts that I've seen so far. Currently, there are some cache misses, which seem to always be for cache id 1 index 0 for some reason. I haven't identified the reason for this, since no bitmap was previously put at that location prior to its usage.\n. I have finally identified the source of this bug. When the server notifies the client of the beginning of a window move/size event, the client was responding with another window move event, which shouldn't have been triggered in the first place. Those events are notifications to the client, not specific orders. For some reason this would trigger a condition in which the left mouse button being released event was lost. The server therefore kept thinking that the left mouse button was down while it was up, causing the odd behavior you experienced when clicking elsewhere within that window after having released the mouse, since the server is thinking that you're still moving the window.\n. I forgot to say: it should be fixed now. window movement is not perfectly smooth yet, but it's at least correct or much better than it was.\n. @meosborne: is the odd behavior actually fixed now for you? it's not perfect, but the odd behavior (if I understood which one you were talking about) was fixed.\n. Since this is a new feature, I'm moving it out of the 1.0 milestone. We need to prioritize if we ever want to release 1.0.\n. @otavio: it is a non-issue if this turns out to be a specific to Windows 8, but I suspect Windows 8 might have simply triggered a pre-existing condition that could affect earlier versions of Windows as well. I think that the quick succession of CPU-intensive calls like ScrBlt might have uncovered a synchronization issue related to the access of the software buffer used by libfreerdp-gdi. Once in a while I see artifacts when using libfreerdp-gdi, so this might finally be the source of these sporadic issues.\n. I have just tried reproducing the issue without success. I know that Windows 8 Developer Preview gets updates through Windows Update, so this might have been a server bug but I'm pretty sure the problem was only noticeable with --gdi sw and not --gdi hw. Still, I got rid of the gdi_copy_mem and gdi_copy_mem_backwards functions in libfreerdp-gdi in favor of calls to memmove. If anybody else notices this issue again, feel free to re-open this issue. I'm closing it now since I cannot reproduce it any more.\n. Most of the port is actually completed by now, the only thing left would be to complete the RemoteFX part.\n. I have pushed some code the other day, ready to be tested. I haven't tried using it myself.\n. Could someone please test this so that we can close this ticket?\n. is anybody looking into this right now? this issue has been marked as being a blocker\n. @atong-tcs: anything done so far?\n. @otavio: I did some work over the last couple of days to push the Windows port forward. I'll handle the configurable home issue, if it's not for Windows, it'll be for something else. ~/.freerdp is usually good for Linux and the BSDs, but then when you get out of those it's usually case by case for what's preferred.\n. ...and pushed.\nNow if you set settings->home_path to something other than NULL (NULL by default), both the certstore and registry will use that value instead of calling getenv(\"HOME\").\n. @mfleisz: now it should be fixed as well\n. I just reproduced the issue. I was always using the controls on the windows for closing applications. Right now Alt+F4 seems to be a local event, not a remote one, which has the effect of killing the entire RemoteApp application. A fix could be to intercept the local WM_DELETE_WINDOW event and send Alt+F4 to the server instead. I'll check if the protocol provides better means of sending this event though.\n. and here we go. I just pushed a fix: in RemoteApp mode, the WM_DELETE_WINDOW will be intercepted, and a close message will be sent to the server for the good window id. Windows can now be individually closed properly.\n. @shlevy: I understand that you're put the copyright headers and the license information... but is it really necessary to start copying code chunks from various licenses into our code base like this?\nSomeone pointed out on IRC that we can use getpass() on Linux:\nhttp://www.gnu.org/s/hello/manual/libc/getpass.html\n. @shlevy: oh, didn't know for getpass(), someone had recommended it on IRC but apparently it's not good.\nIf you could roll your own under your own copyright it would be perfect\nthis means I should close this pull request and you should get rid of the commit where you added the code snippet\n. I have just pushed an improvement that should improve the error tolerance of xf_GetWorkArea. Now it checks for failure of xf_GetCurrentDesktop, and if all fails it tries to populate the work area with sane values.\n. Is this still the case? Last time i compiled on osx i would not get such a segfault\n. Closing this issue since I could not reproduce it with the latest versions of FreeRDP.\n. I just pushed a fix. It was broken with --gdi sw (default), but --gdi hw worked. now both modes should work.\n. This looks good to me. any second opinion on this, or should I merge?\n. @shlevy: I can merge this for now, and you can likely create a new pull request later on with the improvements you have suggested\n. @meosborne: how long of a delay? as the description says, it's a message sent by the server. in this case, the server sends it when no application is running. I don't know if the client really is at fault here.\n. @meosborne: please provide more insight regarding this \"bug\", since I'm not even sure this is a client side bug. I'd like to close this issue if it turns out not to be a real issue.\n. I am closing this issue due to the lack of additional information. Feel free to re-open it if you feel like this is a bug to be fixed in FreeRDP.\n. @beloni: I have just pushed a couple of improvements to the fullscreen mode, can you try it out? now window decorations should be properly set according to the original window decoration options. As for the symptoms you've described, I'm a bit clueless, I haven't experienced them. Maybe the improvements will change something.\n. @beloni: I'm wondering what should be the wanted behavior here. Should we completely disable the fulscreen mode for a session that was not started in fullscreen originally? Should we add a feature to resize dynamically when entering fullscreen? Should we restrict fullscreen mode to just fullscreen dimensions (no mismatch between screen resolution and session resolution) and also restricted only to sessions started in fullscreen originally?\n. @zstegi: the segfault was caused by the licensing code trying to use the username which wasn't set. Since it's not really that important to use the real username for this part, I just added a check to see use a default username if none was given. the latest version on git should now work properly.\n. @zstegi: as otavio said, you can use the github interface to get your own copy of FreeRDP, make your changes there, and then create a pull request.\n. I have manually applied the patch, please use the regular workflow next time (github fork + pull request)\n. @beloni: I guess this means properly setting the exit code like in the older xfreerdp.\nYou could make use of libfreerdp-core/errinfo.c / .h which defines the complete set of error codes for the error info PDU\n. @beloni: are you going to be working on this one? IIRC that feature was added by O.S.Systems originally\n. @ngraziano: encryption being disabled does not have to do with your current locale, but you indeed found a bug.\nAs for encryption being disabled for the French locale, it is something configured server-side, not client-side. Having Windows XP in French won't trigger this setting, since it's a special case associated with the locale, not the language, and has to do with French laws and regulations. If I understood correctly, this special case could only be seen in France (having Windows XP in French does not imply a French locale since French here refers to the country, not the language).\nDo you have an idea if this is really a problem associated with the French locale? I'm curious, I haven't seen that special case in real use.\n. @ngraziano: I have integrated your patch and pushed it. Please use github forks + pull requests next time though.\n. @tmoore22: did fullscreen work in 0.x for dfreerdp? are you using the X11 backend, or the \"real directfb\"?\n. Changed label to feature, fullscreen never was officially supported in dfreerdp\n. @tmoore22: we'll need more information than that, because RemoteFX just keeps working like it always has been. Connecting from Windows 7 SP1 to your server (Windows Server 2008 R2 SP1 with RemoteFX enabled in RDSH, I supposed) works, but not FreeRDP?\nI just tested again with my multiple servers, and they all work with RemoteFX properly\n. @tmoore22: is this the only machine where RemoteFX does not work with FreeRDP, or this happens with all the machines you try? I'm a bit clueless as to why it does not work for you. Maybe if you could set up remote access to a test virtual machine that is known to fail with FreeRDP, I could take a look.\n. @tmoore22: by failing, you mean it connects correctly, but ignoring RemoteFX settings? As in, it does not crash, but fails to make use of RemoteFX? Just want to make sure.\n. Just to make sure: delete /usr/local/include/freerdp and /usr/local/lib/libfreerdp*, then make a clean build of FreeRDP\n. tmoore22: I think this might be a server-side issue, where the configuration might be slightly different, triggering an issue in FreeRDP. Also, how do you assess that RemoteFX is disabled? I've seen some people be confused in the past because compositing was enabled with mstsc.exe, and they were expecting compositing to be passing over RemoteFX in FreeRDP while this is not necessarily the case. RemoteFX can be used in conjunction with other extensions.\nThere is no special requirement on the client side for supporting RemoteFX.\n. Are you using xfreerdp, or dfreerdp? Your original description said you were using xfreerdp\nI know your server works with mstsc.exe, my point is that while your server works with the Microsoft client, there might be a slight difference in server-side configuration which is not properly handled by FreeRDP.\nIn an RDSH deployment, mstsc.exe is normally able to get composition if it's been enabled server-side. However, compositing is done using the compositing virtual channel extension which is not supported by FreeRDP. In RDVH, if I understood correctly, it is possible to have the compositing done over RemoteFX, since the GPU is available to accelerate the encoding of the compositing calls. Therefore compositing is not a reliable way of determining if RemoteFX works.\nOne way of testing if RemoteFX works is the following:\nopen a browser window, go to youtube, and launch a flash video. the youtube flash video player will not make use of the multimedia redirection extension, even if it was available. If the video plays relatively ok (it would be totally unbearable under regular RDP) then you have working RemoteFX.\n. I have done a fresh install of Ubuntu 10.04.3 LTS on my old laptop, and tried to reproduce any of the issues mentioned.\nI first compiled without ffmpeg, RemoteFX worked.\nI then installed ffmpeg, did rm CMakeCache.txt && cmake ., recompiled. It worked again, confirmed by the event log.\nIf someone could identify a particular setup known to fail, I'll try to reproduce it.\n. Can anyone post a screenshot of the transparency issue with Aero?\n. Does one need an RDVH setup in order to reproduce the issue? What would be better is to use the --dump-rfx option to record a session where the problem happens. I could then use recorded session to reproduce the issue locally. The pcap dump only contains RemoteFX data, nothing else, and can be replayed by the current experimental FreeRDP server.\n. @dpoe the stream_read_uint32 in rdp_write_offscreen_bitmap_cache is obviously a bug, and might be responsible for other issues. thanks for spotting it. I'll push a fix tonight, but I can't test Aero myself.\nI found this thread on the Microsoft forums: http://social.msdn.microsoft.com/Forums/en-AU/os_windowsprotocols/thread/7774cec2-a86b-4a5f-89f3-f88bccb5d32c\nIt is true that we aren't setting PERF_ENABLE_DESKTOP_COMPOSITION in the performance flags. 0.9 used null performance flags. I think I will add a command-line flag to enable this flag in the performance flags, so that you guys can try it out and see if it makes a difference.\n. @dpoe ok, the offscreen cache capability set is fixed. I added a --composition option, but it seems to disable RemoteFX on my RDSH setup which does not support desktop composition anyway.\n. @dpoe I just pushed the fix you mentioned. I will just wait for someone else to confirm that it resolves the issue and then we can close this ticket (finally!).\n. @dpoe are you sure? I made it such that --composition sets settings->desktop_composition to true, and then at the very end of the arguments processing the flag gets added to avoid this type of problem.\n. ok, I have just tested it myself with an RDVH setup, and I confirm that it works! closing this ticket now.\n. @meosborne: did this appear after yesterday's commits? try using --gdi sw with --no-bmp-cache to get the previous graphical rendering and see if it changes anything.\n. @meosborne: for the missing fonts, do you have a particular failure case I could attempt to reproduce?\nas for the segfault, could you compile with #define WITH_DEBUG_ORDERS 1 in orders.h and see what is the last graphical order before the segfault?\n. @meosborne: since this is RemoteApp, can you tell me which application you were running, and what was the last action you performed before it crashed? The two last messages are RemoteApp-specific. If you have a way to make it a crash everytime it would be perfect, so I could reproduce it.\n. @meosborne: I think I found what the source of the problem was for the missing text: the server sends a mem3blt message for text that is grayed out. since it was unimplemented I just disabled it.\n. I have fixed major problems with the bitmap and offscreen bitmap caches today, can you try again and tell me if the original problem is gone?\n. Can you compile using WITH_DEBUG_RAIL? I never could reproduce the issue\n. Can you clarify a bit what the environment is? What do you mean exactly by XP-mode? Are you using the VirtualBox RDP server, or the guest OS RDP server? What is the guest OS?\n. Did you test your setup with mstsc.exe first to ensure it works properly? What's the command you're using for connecting with RemoteApp?\n. @Falcon-1: I think you might be the first person trying to use the full path to the executable instead of an alias like with regular exported programs in RemoteApp. That might not help. I suggest you get access to a windows box or second vm to attempt using RemoteApp from mstsc.exe first, since this is a special setup. If you can't get it to work with mstsc.exe, then FreeRDP probably won't be able do to much better :)\n. @Falcon-1: aliases are only meaningful if the RemoteApp server exports such aliases. Since this is a special server, I have no idea how it works differently from Windows Server 2008 R2.\n. @Falcon-1: since it was a small thing to do and a lack in the implementation, I added a check that sets the proper flags in the case that the argument passed is not an alias. Aliases start with ||, while full paths are just full paths. There seems to be a problem with the colon in the arguments parsing, so use environment variables instead. On Windows Server 2008 R2 I had to set the following group policy first in order to allow execution of unlisted programs:\nComputer Configuration/Administrative Templates/Windows Components/Remote Desktop Services/Remote Desktop Session Host/Connections/\"Allow remote start of unlisted programs\"\nI could then launch the command prompt like this:\n./client/X11/xfreerdp -u Administrator -p password --app --plugin channels/rail/rail.so --data \"%WINDIR%\\System32\\cmd.exe\" -- localhost:6000\n. @westtexan: there is no check for what windows are, if the server was indeed sending messages to display a window other than the application passed as a parameter, you'd see it.\nWhat is the command you are using to launch RemoteApp? Maybe you got it wrong.\nIs it known to work with mstsc.exe in RemoteApp mode?\n. @westtexan: I tried setting the \"Message text for user attempting to log on\" group policy, but I am not getting the banner on logon in both desktop and RemoteApp modes. Is there anything else I should configure to replicate your settings?\n. code looks clean, not much to say :P I guess you've tested it?\n. Just taking a quick look, isn't libfreerdp-codec missing from the list?\n. @otavio: maybe --ignore-certificate would be a better word, what do you think?\n. I just pushed some improvements, it does not segfault any more but some colors are wrong\n. The latest sources will no longer segfault, but in my testing notepad would simply stop responding (server-side). I think we can close this issue and re-open it as a feature request instead, since this is not a regression.\n. @beloni: I have just ported the extension plugin interface to FreeRDP 1.0, but I haven't tested it. Since you're one of the few using that interface, could you please test it and report if it works so that we can close this ticket?\n. @beloni: ping, O.S.Systems is the only one using the extension code that I know of, so we'd need you to confirm that it works! Let me know when you'll have the time\n. @beloni: ok then, how about we close this ticket which was to port the code, and you open a new one if it turns out to not work properly when you end up testing it?\n. @otavio I added some code today to have select() timeout after some time, which lets us do something. But then I couldn't figure out a way to get proper disconnection detection. We'll need to keep looking into it I guess.\n. @beloni how exactly do you trigger a real reconnection case? I tried disabling/enabling my network interface, but in this case xfreerdp simply never detects a network disconnection. When connection is re-established, it is as if the connection was never dropped.\nI have tried other means of simulating a disconnection. I tried using socat to proxy an RDP connection, and then I killed the socat proxy. In this case, xfreerdp would simply terminate.\nWhat would be the expected behavior in this case? Should network disconnection be identified and then proper reconnection performed? What would happen if the server intentionally disconnects the client?\n. @jiten19 no, but help would definitely be appreciated!\n. I just completed the implementation of long format names, now I can actually use clipboard redirection successfully. RemoteApp is a different ticket though, it'd be great to have but there are other challenges to go over before having both RAIL and CLIPRDR functional at the same time.\n. @meosborne: I have configured my X11 server to use 16bpp, and yet I am unable to reproduce the issue. I have tried with both Windows Server 2008 R2 SP1 and Windows XP for all color depths (8,15,16,24,32) and all work fine for me.\nThe problem you describe is most likely linked with opaque_rect orders, where a rectangle is a filled with an opaque color. The color would be incorrectly converted, leading the the symptoms you experience. The other images that are displayed properly are likely converted bitmaps that were properly converted.\nI assume that your Windows Server 2008 R2 system has theming disabled, so I disabled it as well (I usually enable themes on my test server). This is likely required to attempt to reproduce the issue, otherwise the window borders will be drawn using the same messages as those that work fine for you.\nWhat is your client processor architecture? Is it x86, ARM, or something else? Endianness is a possible cause for such bugs.\nHas anybody else experienced the same issue?\n. @meosborne: can you provide your xorg.conf?\n. @meosborne: I just had an idea, can you print out the values of xfi->bpp and xfi->depth? that might give me a hint\n. @meosborne: in xf_gdi_opaque_rect (in xf_gdi.c) try changing the following line:\ncolor = freerdp_color_convert(opaque_rect->color, xfi->srcBpp, xfi->bpp, xfi->clrconv);\nto:\ncolor = opaque_rect->color;\notherwise also try:\ncolor = freerdp_color_convert(opaque_rect->color, xfi->srcBpp, 32, xfi->clrconv);\nor\ncolor = freerdp_color_convert(opaque_rect->color, xfi->srcBpp, 24, xfi->clrconv);\nplease report the impact of those changes\n. I just pushed a fix, please test it out. See if it fixes the problem partially or completely. I looked at libfreerdp-gdi's implementation and found out that the colors were always converted to 32bpp, while in X11-GDI it would convert it to xfi->depth which would be 16bpp in your case. The problem is that XSetForeground() takes a color in 32bpp format, not 16bpp, if I understood correctly.\n. @meosborne: awesome! hehe :)\n. I investigated the issue and found some stuff, but I still can't get it to work perfectly. It now doesn't segfault, but it doesn't work as well.\nHalf the time it just won't work without any adverse effects, otherwise it just ends up making compiz take 99% of the CPU for some reason, so I need to kill xfreerdp.\nThe issue seems to be around the parsing of the format list pdu. The previous reason why it wouldn't work with newer systems was because of the lack of support for the long format names in this particular pdu, which I implemented one or two weeks ago. I found certain errors in the parsing, such as long format names using fixed-size null-terminated unicode strings instead of variable length null-terminated unicode strings (the buffer is padded to 32 bytes, but that is not what the spec implies).\nThe parsing should now be \"fine\". However, it still does not work. Format names are given in two ways: an ID and a string. In the long format name, the server doesn't even bother sending the string, it sends a bunch of zeros. Yay, that's helpful, so we only have the ID to figure out what the format is. The code handling the short format names does use the strings that are provided by the server though for properly identifying the format, so I guess that servers using the short format do bother sending the string.\nThe issue then might be to figure out how to identify the format just from its ID, not relying on the missing strings for the formats we don't know the IDs in advance.\nI added some debug output to figure out which formats were identified and which ones weren't:\nsupported format id: 0x00000001\nsupported format id: 0x0000000D\nunsupported format id: 0x00000007\nunsupported format id: 0x00000010\nIdeas, anyone?\n. I've worked on it today as well, I am quite puzzled at this. Here's some stuff I have noticed:\nthe server does not always send the capability set\nthere seems to be a race condition somewhere, where the server and client enter an infinite loop of messages\nI could momentarily get it working with Windows Server 2008 R2 SP1, and then it stopped working again.\n. Some more information:\nI'm now using LXDE to attempt to debug this issue, it seems to interfere less with clipboard redirection than unity.\nWhat works for me in LXDE:\ncopying from leafpad to notepad\nWhat always breaks for me in LXDE:\ncopying from notepad to leafpad. Once I copied something into the clipboard from notepad, it's as if the clipboard was disabled in LXDE. If I right-click in leafpad to attempt to manually select \"paste\", the menu simply won't pop up, I noticed something similar in unity. If I use control-c it simply crashes instead.\nEach time I right-click to try pasting in leafpad, xf_cliprdr_process_selection_request gets called with the \"TARGETS\" target. xf_cliprdr_provide_targets gets called and then nothing happens.\nHere's the debug output:\nDBG_CLIPRDR cliprdr_process_connect (80): connecting\nDBG_CLIPRDR cliprdr_process_receive (204): msgType: CB_CLIP_CAPS (7), msgFlags: 0 dataLen: 16\nDBG_CLIPRDR cliprdr_process_clip_caps (140): cCapabilitiesSets 1\nDBG_CLIPRDR cliprdr_process_general_capability (109): Version: 2\ngeneralFlags (0x0000001E) {\n    CB_USE_LONG_FORMAT_NAMES\n    CB_STREAM_FILECLIP_ENABLED\n    CB_FILECLIP_NO_FILE_PATHS\n    CB_CAN_LOCK_CLIPDATA\n}\nDBG_CLIPRDR cliprdr_process_receive (204): msgType: CB_MONITOR_READY (1), msgFlags: 0 dataLen: 0\nDBG_CLIPRDR cliprdr_send_clip_caps (167): Sending Capabilities\nDBG_X11_CLIPRDR xf_cliprdr_get_requested_targets (476): type=4 format=32 length=9 bytes_left=0\nDBG_CLIPRDR cliprdr_process_format_list_event (46): Sending Clipboard Format List\nDBG_CLIPRDR cliprdr_process_receive (204): msgType: CB_FORMAT_LIST_RESPONSE (3), msgFlags: 1 dataLen: 0\nDBG_CLIPRDR cliprdr_process_receive (204): msgType: CB_FORMAT_LIST (2), msgFlags: 0 dataLen: 24\nDBG_CLIPRDR cliprdr_send_format_list_response (85): Sending Clipboard Format List Response\nDBG_X11_CLIPRDR xf_cliprdr_process_property_notify (1204): root window PropertyNotify\nDBG_X11_CLIPRDR xf_cliprdr_process_selection_request (1085): target=427\nDBG_X11_CLIPRDR xf_cliprdr_process_selection_request (1111): target: TARGETS\nDBG_X11_CLIPRDR xf_cliprdr_process_selection_request (1085): target=427\nDBG_X11_CLIPRDR xf_cliprdr_process_selection_request (1111): target: TARGETS\nDBG_X11_CLIPRDR xf_cliprdr_process_selection_request (1085): target=427\nDBG_X11_CLIPRDR xf_cliprdr_process_selection_request (1111): target: TARGETS\n. @otavio: did you even test it out? it's still broken for me with both Windows XP and Windows Server 2008 under Ubuntu 11.10.\n. One major breakthrough was made by atong, and was just confirmed by me as well: a local VirtualBox installation with the guest additions installed with severely interfere with the clipboard redirection plugin.\nActually, here's what even crazier: if you launch FreeRDP to connect to a local VirtualBox virtual machine with the guest additions installed, the clipboard will work, even if the clipboard redirection plugin isn't loaded. The only thing that could explain this besides magic is that the VirtualBox clipboard integration somehow synchronizes the clipboard anyway, even if the virtual machine is accessed through FreeRDP instead of the VirtualBox GUI.\nConnecting from a different machine suddenly makes cliprdr work fine for me, with both Windows Server 2008 R2 SP1 and Windows XP.\nIf others can confirm that clipboard works from a machine not currently running VirtualBox at the same time, we can close this ticket.\n. Ok, let's close this, and have it re-opened if someone finds a bug which is not related to the VirtualBox interference.\n. you need to install libXdamage-dev\n. @Sander80: I added a note with a link on the old page so that it refers to the new page, there's a lot of confusion around this. The new page has it.\n. @nerdstube: can you elaborate on the setup? Is theming enabled server-side? Which color depth are you using (default is 16bpp). What is the color depth of your X11 server?\n. I just fixed the issue, which was found in PatBlt. The solid color PatBlt would use the original unconverted color, leading to the bug.\n. @nerdstube: I just tried it, it actually works. What might be confusing though is that the server only accepts the keyboard settings for a new session and not an existing one. I am unware of a way to force the server to change the keyboard layout of an existing session, which I agree would be better behavior. Log out from your session, then use -k, and it should work.\n. @nerdstube: this is weird, because the server should accept those settings on a new session. There are no temporary files involved for this. Maybe the server ignores client-side settings? Do you have any special configuration server-side? Just making sure, you are using the latest version of FreeRDP compiled from source, right?\n. @koolcoder: I have just implemented this missing feature in 1.0. Closing this ticket now\n. @8forty I just tried to reproduce the problem on my dual monitor setup. I have Ubuntu 11.10 64-bit.\nWhich resolution are you using? xfreerdp is not the cause of the dialog which you get, so I guess this has to do more with your system than with xfreerdp.\nI tried with Windows 7 Professional and Windows Server 2008 R2 SP1, both work fine. I also just realized that the Professional edition of Windows 7 does not support real dual-monitors on the server side, but the Ultimate edition does. So for me I get a single monitor that spans across two real monitors with Windows 7 Professional and Windows Server 2008 R2 SP1 does the real dual-monitors just like your Windows 7 Ultimate machine would.\nIf you can provide more information I'm willing to look into it, but I think this might not be a bug on our side.\n. It's been a while and no additional information was provided, so I am closing this ticket. Feel free to re-open it later if you have more information.\n. @dsyou20: is this with Windows XP (which supports 24bpp) or with a version of Windows which does not support 24bpp?\n. @dsyou20: just tested with a clean build against Windows XP, it works with both --gdi sw and --gdi hw. I unfortunately do not have a Windows Server 2003 virtual machine at hand right now. Can you compiled with -DWITH_DEBUG_ORDERS and see where it fails? Do you get some images and then it crashes, where does it crash exactly?\n. awake@workstation:~/git/FreeRDP/FreeRDP$ ./client/X11/xfreerdp -u 11110041_HP -p /Mvp6Iy37on6R -a 24 220.120.243.228\nconnected to 220.120.243.228:3389\nconnected to 220.120.243.228:3389\nconnected to 220.120.243.228:3389\nis this using session redirection by any chance?\n. @dsyou20: the issue might not be with 24bpp, but about why we get those weird messages, which probably show that FreeRDP is getting into a corrupted state for some reason. Does it work with other color depths?\n. @dsyou20: wait, this is Windows Server 2003, one of the only versions of Windows to have TLS support without NLA. Compile with -DWITH_DEBUG_NEGO and see what happens in protocol security negotiation.\n. here's more info:\nDBG_NEGO nego_enable_rdp (621): Enabling RDP security: true\nDBG_NEGO nego_enable_nla (645): Enabling NLA security: true\nDBG_NEGO nego_enable_tls (632): Enabling TLS security: true\nDBG_NEGO nego_connect (69): state: NEGO_STATE_NLA\nDBG_NEGO nego_attempt_nla (147): Attempting NLA security\nconnected to 220.120.243.228:3389\nDBG_NEGO nego_process_negotiation_failure (485): RDP_NEG_FAILURE\nDBG_NEGO nego_process_negotiation_failure (497): Error: SSL_NOT_ALLOWED_BY_SERVER\nDBG_NEGO nego_connect (69): state: NEGO_STATE_TLS\nDBG_NEGO nego_attempt_tls (189): Attempting TLS security\nconnected to 220.120.243.228:3389\nDBG_NEGO nego_process_negotiation_failure (485): RDP_NEG_FAILURE\nDBG_NEGO nego_process_negotiation_failure (497): Error: SSL_NOT_ALLOWED_BY_SERVER\nDBG_NEGO nego_connect (69): state: NEGO_STATE_RDP\nDBG_NEGO nego_attempt_rdp (229): Attempting RDP security\nconnected to 220.120.243.228:3389\nDBG_NEGO nego_connect (82): Negotiated RDP security\n* glibc detected * ./client/X11/xfreerdp: double free or corruption (out): 0x0000000001c82f80 ***\nawake@workstation:~/git/FreeRDP/FreeRDP$ ./client/X11/xfreerdp -u 11110041_HP -p /Mvp6Iy37on6R -a 24 --sec rdp 220.120.243.228\nDBG_NEGO nego_enable_rdp (621): Enabling RDP security: true\nDBG_NEGO nego_enable_nla (645): Enabling NLA security: false\nDBG_NEGO nego_enable_tls (632): Enabling TLS security: false\nDBG_NEGO nego_connect (69): state: NEGO_STATE_RDP\nDBG_NEGO nego_attempt_rdp (229): Attempting RDP security\nconnected to 220.120.243.228:3389\nDBG_NEGO nego_connect (82): Negotiated RDP security\n* glibc detected * ./client/X11/xfreerdp: double free or corruption (out): 0x00000000018db060 ***\n. with --sec rdp 16bpp works\nnice chinese Windows Server 2003 :P\n. @dsyou20: of course you should make sure that the server is properly configured for 24bpp. Maybe there's a bug make xfreerdp fail to detect that 24bpp wasn't supported. Please make sure that 24bpp works in the first place.\n. @atong-tcs what is left to be done after your initial wildcard support?\n. @atong how about we close this ticket and open a new one as \"feature\" instead for the full feature support?\n. I will close this issue for now and open a new one as a feature request.\n. @sunds I trust that it's been fixed by your latest commit. We can always re-open if it wasn't fixed.\n. @dsyou20 was this known to be supported in the old development branch? if not, then this issue does not deserve the \"regression\" label, and should be considered a \"feature\".\n. 1) I did a fresh git clone on Mac OS X Lion (10.7) and it builds properly.\n2) Wait, you're on Mac OS X Tiger (10.4)? It's possible that one of the utils for Mac OS X portability is not supported on such an old version of Mac OS X. Is this the PowerPC edition?\nDue to the low demand for supporting versions of Mac OS X back to 10.4, you're probably on your own for this one.\n. Ok, I just integrated and pushed the fix, closing this issue now\n. @mattymo: since you have a patch, can you patch the code on your own github fork and then create a pull request?\n. Fix was merged, closing the issue now\n. I don't see anything potentially harmful in this, so I guess it is good enough to be merged. Any objections?\n. Is it ok to be merged now?\n. @ydal: I manually went through this, it looks good, how did you test it? Please rebase it so it can be merged\n. I think the fix would simply to disable XKBFILE by default on OSX\n. Ok, I did turn off XKBFILE by default on OSX, but there was an issue with where libfreerdp-kbd would search for keymaps as well. It is now working properly again, it would also fix issues with people who were not using XKBFILE on other OSes as well.\n. @atong-tcs I came to the same conclusion. I tried figuring it out, the ShareId seems to be correct. I don't know what the VRDP doesn't like in our client Confirm Active PDU.\n. I've asked on #vbox and #vbox-dev, I couldn't get in touch with someone working on VRDP yet. I compiled VirtualBox myself but then I realized that VRDP was closed-source, so I wasted my time doing it. I now have opened a ticket, for what it's worth: https://www.virtualbox.org/ticket/10017\nWhile we're at it, I was discussing with some people on IRC, and since VRDP is provided as an \"extension pack\" it would be totally possible for us to write a replacement RDP server for VirtualBox that could be used instead of the closed-source VRDP component.\n. I enabled TLS security and got a little bit further. I think there might be a race condition somewhere in the activation sequence. If I add a sleep right after the send font list pdu (last pdu to be sent for activation) it will go further, but then I'm getting a realloc error on the first bitmap update.\n. after deeper investigation with atong on IRC, we fixed a couple of capabilities bugs and we finally found out that the input callbacks were registered prior to the capabilities exchange. This means that fastpath callbacks were registered no matter if you disabled fastpath or not. This bug affected VRDP which does not support fastpath, but it also affected XRDP. Now both VRDP and XRDP work! :D Closing this issue now.\n. oops, I was a bit too fast. VRDP will work with --sec tls for now, but there is still a separate bug with --sec rdp. the bug with --sec rdp seems to be related to the capabilities exchange.\n. @jacob019 if --sec tls fails to negotiate TLS, it's probably because your virtual machine isn't configured properly for it.\n. this one was a real pain to debug, but I finally found the bug which caused the VRDP connectivity issue. The method encoding the share control header was using the wrong length, which broke VRDP. For some reason other servers didn't mind have a length 12 bytes too long, but it was a bug on our side anyway. Now it is fixed, and both --sec rdp and --sec tls should work out of the box :)\n. @SteveDiG1: are you using VirtualBox by any chance? It interferes with the clipboard. If you don't, then this is a new bug.\n. A number of issues regarding the offscreen bitmap cache have been fixed since this ticket was open, can you tell us if you are still experiencing similar issues with the latest sources?\n. @sunds: it should now be fixed. I added a new macro for calling interface callbacks, IFCALLRET, that gets the return value. The problem was the freerdp_connect would not check the return value of the PreConnect and PostConnect callbacks. xfreerdp would return false if it failed to open the X11 display, but since freerdp_connect ignored it, it continued execution until xfreerdp crashes. Now it gracefully fails like this:\nxf_pre_connect: failed to open display: \nPlease check that the $DISPLAY environment variable is properly set.\nfreerdp_pre_connect failed\n. The certificate must have changed at some point. Delete your ~/.freerdp/known_hosts file and it should stop complaining.\n. @michelepetrazzo done. I have changed the warning message to something much closer to what ssh outputs. The new message explains more in depth the reason of the failure, and indicates the location of the file containing the host signature which does not match the current one, such that one can edit it to get rid of the error message.\n. @michelepetrazzo did you intend to login automatically? was the password asked in the terminal? if you look carefully at the screenshot, no password was received, otherwise you'd have gray asterisks in the password textbox I think.\n. @michelepetrazzo ok it should be fixed now. the autologon flag was always set, meaning that even if you didn't have all the credentials entered from the command-line it would try to login automatically. I changed it such that if not enough credentials were entered, it won't attempt to automatically login. This only applies to RDP and TLS protocol security, which is your case since you're using --no-nla. In the case of NLA, there is no choice possible, credentials must be entered before getting anything graphical from the server, which is the whole point of NLA (authentication is at the network level only).\n. @michelepetrazzo what is the server? can you build with WITH_DEBUG_NEGO, WITH_DEBUG_ORDERS and see if you're actually successfully connecting and getting graphical messages?\n. It has now been fixed by nfedera. thanks!\n. @sunds there was a fix for Mac OS X for the same issue that was just merged. I could build from scratch on OpenIndiana. Can you try again?\n. I'm looking into it right now. It looks like the server sends a PTR_MSG_TYPE_POINTER message to create a pointer at cache index zero, to then send a PTR_MSG_TYPE_CACHED message to switch to pointer at index 0, but this pointer does not exist in the cache. Something's weird.\n. @johneke I just fixed it by adding a check to see if the cached pointer exists. If it doesn't, I assume that the server just wants to use the default pointer, since it only happens once at connection time for index 0. This solves the segfault issue.\n. @celsius ok, from what you just said, there might be a bigger issue. Which server are you using?\n. @celsius can you check if update_reset_state is called? I think this might have something to do with proper reactivation.\n. @celsius: if I were to check for a null pointer, and then send a call to switch to the default pointer, would it fix the problem?\n. It turns out the real reason for this bug was that appended PDUs after an update PDU were only processed if they were update PDUs. The server would append other types of PDUs, such as pointer PDUs, after an update PDU and those were discarded only in slow-path mode because of this bug. I just fixed the issue by parsing all potential PDU types that could be appended to an update PDU. This might fix other bugs as well.\n. @meosborne you can likely use --no-glyph-cache to work around the problem in the meantime, could you guide us through the steps necessary to reproduce the issue?\n. A couple of issues were fixed in the meantime that could have possibly fixed this one as well. The separate color issue was fixed, but major issues were fixed in PatBlt and minor fixes in the glyph cache as well. Can you test again and tell us if the problem is still there?\n. The same problem was identified by Pawel on IRC, and a patch was just pushed. This issue should now be resolved, and affected libfreerdp-gdi's BitBlt_DSPDxax_16bpp() method.\n. I changed the label from \"blocker\" to \"feature\". It is annoying but certainly not a blocker. The encoding is different for icons which are not 32bpp, but I could not figure it out yet, if someone wants to help you are more than welcome to fix this one.\n. @sunds interesting, I was suspecting a problem with color conversion depending on X11 configuration. Did you identify in which cases the color inversion should be turned on?\n. @llyzs I just fixed 1. Someone reported on stackoverflow that Windows 8 wouldn't set the bitmapBpp field properly, it would always be zero. I incorporated a workaround in libfreerdp-cache that sets the bpp to the current color depth if it is missing, and now it's working properly. By fixing 1., I fixed 3. as well, which leaves us with only 2.\n. Ok, here's new stuff:\n1) Windows 8 seems to be sending only 64x64 bitmaps. This is analogous to RemoteFX, but without RemoteFX, just a weird coincidence I guess.\n2) Bitmap decompression fails with the \"Flash Cards\" app in 32bpp. This is due to a lack in bitmap_decompress4() which does not handle the case where the RLE flag is not set. Completing the bitmap decompression implementation is the fix for this.\n3) Still no luck with RemoteFX :( I tried configuring the server with gpedit but nothing new.\n. I just completed the missing bits for the bitmap decompression, and it now works perfectly without bitmap decompression errors. I also reported the bug where the bitsPerPixelId field is not set: http://social.msdn.microsoft.com/Forums/en-US/os_windowsprotocols/thread/e32c0f27-286e-4dc1-a024-2d3e941d0d68\nNow we're left with figuring out why RemoteFX does not work\n. I think, but I am not sure, that only a bitmap v3 cache could be used with Windows 8 if a cache is to be used with RemoteFX. MS-RDPEGDI \"Cache Bitmap - Revision 3 (CACHE_BITMAP_REV3_ORDER) says:\nThis order supports persistent bitmap caching and also enables the use of the bitmap codecs specified in the Bitmap Codec Capability Set. While this implies that lack of bitmap caching would not enable the usage of bitmap codecs, the support for bitmap v2 cache only could potentially affect RemoteFX support.\n. The only issue left might be a Windows 8 Developer Preview bug. If we use --no-bmp-cache RemoteFX works properly, so I suggest we simply close this ticket and test again when the public Beta of Windows 8 comes out.\n. I fixed a major issue today where it is likely possible that certain update PDUs weren't processed, in particular offscreen bitmaps. I will assume for now that this fixes the issue, and that any other similar issue is to be considered as another bug.\n. It's been a week without anybody reporting the issue again, so I think it can be considered closed.\n. I have fixed most of the issues, except color brushes for --gdi hw. Everything is fine with --gdi sw at this point.\n. the last pull request from @atong  fixed the remained issue. closing this ticket now\n. @dorianj I just pushed a fix, please confirm that it fixes it for you and I'll close this issue.\n. That is not an issue, but a question. Please use the mailing list instead.\n. this \"feature\" of rdesktop is in fact the lack of Network Level Authentication support. NLA will authenticate over the network before any graphics appear. If your servers do not require NLA and you'd like to stick to the old graphical login, you can add --no-nla to your command line and it should do it for you.\n. On the long term I had the following idea to address this type of limitations of xfreerdp:\nadd new \"extension\" plugins for certain aspects like credentials entry and certificate validation. plugins using Gtk+ could be made and dynamically loaded by xfreerdp and used instead of their command-line equivalents if present. This would allow xfreerdp to provide certain basic GUI functionality that wouldn't add dependencies to xfreerdp itself.\n. ok, I have just updated client/X11/xfreerdp.1.xml which is used to generate the man page. I added the options which appear with xfreerdp -h but do not appear in the man page. I think we can have something more exhaustive in the future though.\n. @sunds here is how I think we could cleanly solve the issue:\nI was thinking of adding freerdp_color_convert_var() which would make use of the invert parameter in CLRCONV. The problem is the following:\nvariable-length colors sent in RDP can be either RGB or BGR depending on their depth (weird, I know). Different destination color formats need to be supported, such as RGB or BGR. If we are to swap color ordering for all color depths, some color depths will be properly inverted while others won't, and this is pretty much what was happening so far. The color conversion API was therefore extended to provide more specific source and destination formats to avoid confusion and clarify things. Here the problem is that with those changes I haven't incorporated proper handling of BGR as a possible color destination, so adding a new method which converts from \"variable-length\" to either BGR or RGB based on the invert flag would solve the issue.\n. @sunds I just made the change I proposed and pushed it\n. @sunds the color format used by GDI seems to be BGR and not RGB, so the color conversion should always result in BGR. Other methods like FillRect can then assume the color is always BGR and convert it to the appropriate format.\n. @sunds ok I improved that in libfreerdp-gdi for gdi_get_color_16bpp and gdi_get_color_32bpp\n. @sunds just to be clear, libfreerdp-gdi will use its own equivalent of COLORREF which is BGR32. when converting from RDP colors to COLORREF, we need to use freerdp_color_convert_var_bgr, since COLORREF is always BGR. When performing drawing operations in libfreerdp-gdi that use a COLORREF, we need to convert it from BGR32 to the destination color, which can be either BGR or RGB depending on the X11 server. This is where the invert flag should be used for libfreerdp-gdi.\n. I just fixed it, libfreerdp-gdi's gdi_Glyph_Free() was freeing too much.\n. jawa-the-hutt: I saw your reply on the HP forums, I'll try ThinPro on my thin client soon. As for the problem, is there a difference if you change color depth? try --gdi sw with -a 16 and -a 32\nalso, why are you using --gdi sw? is --gdi hw (default) broken?\n. @floppym shouldn't the options be WITH_CLIENT and WITH_SERVER to remain consistent with the rest?\n. @jbicha what exactly do you mean by that? for 1.0 I have \"libfreerdp-core.so.1.0.0\", what should it be?\n. @michelepetrazzo you can use --ignore-certificate\n. --ignore-certificate* (there was a typo in your reply)\nwhat do you mean by \"xfreerdp accepts but does not honor it\"?\n. @michaelweiser I've added an option \"--certificate-name\" which allows to override the name used for certificate verification. was your patch doing the same?\nalso, we're only using sourceforge for the mailing list now, everything else still on sourceforge is no longer active.\n. is there any reason why boolean is being defined to unsigned char on windows? I would rather define it as unsigned int, since my C# code won't be portable anymore otherwise (I need a consistent boolean data type across platforms, I'm depending on the ABI)\n. I'm working on it, it's definitely a really hard one, but progress is being made.\n. @Daniel15 unfortunately, it much more than just regular RDP tunneled over HTTPS. It uses two HTTPS connections, one for sending, one for receiving, NTLM over HTTP authentication is performed on both of them. This is followed by a second authentication phase using \"RTS\" messages modified from messages defined in C706. Following this is a sequence of messages for the creation of the tunnel and channels using MSRPC, which really isn't portable and far from trivial.\nNevertheless, I'm getting closer to getting something to work. I'll tell you when it's ready to test\n. @Daniel15 I think I know why third-party implementations are faster: the protocol specification defines a proxy detection phase with a timeout, I'm pretty sure only the Microsoft implementation does the proxy detection, which would explain the difference. This means mstsc.exe would spend some initial amount of time waiting, and timeout if no proxy is detected, to proceed normally.\nActually, I spoke with some of the iTap developers two weeks ago. I am well aware of the interest in TS Gateway, many are very proud to have their implementation in their commercial software, but we're catching up to them and we'll soon come up with our own open source implementation :)\n. I don't have an ETA on this, I'm basically stuck on the part which involves a proper MSRPC implementation. In certain cases I can get past the connection sequence, but it crashes not long after due to improper buffer management. If you want to help, you can give it a shot, if you're lucky you'll get past the connection sequence and you can help with the buffer management. In the meantime, I'll be working on the MSRPC implementation, so that it works properly in all cases. Currently, we're sending a bunch of blobs in which we're extracting and inserting data at specific offsets, which really isn't a good solution.\n. In case you guys aren't aware, MSRPC interopability is a huge problem... it's non-trivial and non-portable. Samba has its own wire-compatible implementation, wine has a reimplementation of the original MSRPC engine, but none of those implementations is usable to us, either because of the licensing or because we can't afford to add such dependencies. I'm working on an implementation of a sufficient subset of the original MSRPC engine that would make use of code generated with Microsoft's MIDL compiler. The MSRPC engine is contained within rpcrt4.dll.\n. @taspeotis: MSRPC is a modified version of \"standard\" RPC defined in C706. It adds support for all the Windows data types along with many other non-standard features. MS-RPCH and MS-RPCE define those extensions, the rest is defined in C706. The link you gave is for C706, which is the basis for MSRPC, but not MSRPC.\n. @bluepeach we're lucky, TSG does not require a full CIFS implementation. It's RPC over HTTP, I have already completed NTLM over HTTP authentication and the connection sequence which precedes the MSRPC calls. I'm currently implementing a replacement for the original MSRPC engine contained in rpcrt4.dll, and using code generated with the Microsoft MIDL compiler. The generated code uses format strings which are then passed to generic functions in the engine. The engine then analyzes the format string and does 4 steps: sizing, marshalling, unmarshalling, and freeing. I'm currently going over the sizing phase, and spending a lot of time reading the docs on MSDN and looking at rpcrt4.dll in IDA Pro.\nIf you have source code to contribute, I would definitely take it! If I can't use it as-is, I could still adapt the code to our needs knowing that it's been contributed to us under the Apache license. Please go forward with this, it would be very helpful :D\n. @bluepeach I'm looking at your website right now, it looks like the current code I'm working on might be very interesting to you. Would you like to collaborate on a generic and reusable solution like what I'm currently doing? I'm thinking of making a spin-off project at one point since it has high value. If your solution is not generic enough, I could still make use of it as a reference implementation in which I'd be allowed to copy parts of the code, if you allow me to do so. You could send me a private copy instead of sending it to everyone, and I'd take inspiration from it. What do you think?\n. If all goes well, I should get started on a contract soon to complete TS Gateway support. In this case, we'd get it in 1-2 months from now.\n. I just fixed it, I recently added more checks in the memory utils, and this small bug had gone unnoticed until now. The buffer is now properly allocated and then reallocated.\n. @NiKiZe when you say today, is it today with today's latest git version? I did some work yesterday to fix those issues, maybe there's one left over\n. should be fixed now, it was a problem in the arguments parsing\n. @EricYin I just pushed the fix. it would be great if next time you open a pull request instead :)\n. @EricYin I'm on Windows 7, could you work on a fix and open a pull request for this?\n. @EricYin we don't have anyone actively developing the Windows port. We're basically maintaining a basic set of features but audio redirection was never supported on Windows. If you want to see this feature added to wfreerdp your best bet is probably to work on it yourself or find someone that will.\n. @dpoe could you prepare a pull request with your fix?\nAlso, it should be trivial to identify the memory leaks using valgrind. Manual inspection works but valgrind detects the memory leaks for you, much easier :)\n. @bosha is the server configured for smartcard authentication with NLA? there is a part of NTLMv2 authentication which is to be used for smartcard authentication, but right now only password authentication has been implemented. This would be a feature request, unfortunately. I would be very happy, however, if you could document how you configured your client and server for smartcard authentication, such that it would be easier for someone to set up a test environment and develop this missing feature. I implemented NTLMv2 auth yet I have no idea how to configure NTLMv2 smartcard authentication.\n. @Horneckerc Multimedia Redirection is currently only supported in xfreerdp, not dfreerdp.\n. waiiiit\nreally bad idea. this just breaks compression, I'll have to revert the \"RDP6 compression\" commit\n. It's now reverted. Please test your stuff and make a new pull request, and I'll make damn sure it works before merging it. I'll just assume you can't be trusted for testing your own stuff in the future.\n. @otavio I know, I know... I'm the one to blame for merging it too fast\nit turns out it's a 32-bit vs 64-bit issue. the code works perfectly fine on 32-bit.\n. This behavior is consistent with mstsc, font smoothing is enabled separately. This is perfectly normal and expected.\n. @bakytn simply use --fonts, it enables font smoothing\n. @adambprotiviti I don't think the current code adds /etc/ssl/certs to the lookup path. It should, however, look into ~/.freerdp/certs. One thing you could try for now is replacing ~/.freerdp/certs with a symlink to /etc/ssl/certs\n. I just pushed the fix, thanks!\n. I tried comparing rdesktop and FreeRDP on this. with both of them, I get the \"Your current time zone is not recognized. Please select a valid time zone.\" error. With rdesktop the time is good though, while with FreeRDP the time is not good. I think the problem might have to do with the names given to the time zones, we need to send strings like \"EST, Standard Time\" and \"EST, Summer Time\" along with the numerical data. rdesktop uses the hardcoded swedish names \"GTB, normaltid\" and \"GTB, sommartid\". If it's not the strings, it could be an encoding bug.\n. @nlemberger I think it really has to do with the strings. I manually changed the strings to a value observed in the specifications, \"Pacific Standard Time\" and \"Pacific Daylight Time\", and now I no longer get the invalid time zone error even though the values are off. This probably means that we'd need to figure out what are the official time zone names used by the server and have to map those properly in FreeRDP when detecting the current time zone.\n. @nlemberger it's not the first time we get to map a lot of this stuff... previously were mapping XKB keyboard layouts to Microsoft keyboard layouts, and also mapping the XKB symbol key codes to Microsoft Virtual Key Codes. There's a lot of work involved but there's no way around it unfortunately.\nI think I found out more stuff: just like for keyboard layouts and locales, there's a place in the registry keeping all the info we need. I found it in HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones. There you'll see a list of keys with IDs, information and also time zone names. If I manually set the names to be one of the names in that list, the server sees the time zone as a valid one. This means that I cannot use a descriptive name like \"EST\", I need to use Eastern Standard Time which appears as such in the registry.\nThe fix for this would be to take all that info out of the registry and have the code figure out the proper time zone name from the time zone currently being detected. We could use the numerical data to figure out which time zone matches.\n. @nlemberger I have just pushed a fix which is not perfect but should do it for the moment. I have hardcoded the time zone name to GMT Standard Time and GMT Daylight Time, two valid time zone names, such that we don't get the invalid time zone error. Secondly, I have fixed a problem by which we weren't detecting the presence of some important data required for time zone detection, which means we were using 0 as values. I got that fixed, such that now the time information will be correctly detected and sent to the server.\nWith this, you should no longer have the invalid time zone error even though the name is incorrect, and you'll get proper time values.\n. https://github.com/FreeRDP/FreeRDP/commit/5d7e55fe9daa96e63327dc12be926e82f7d8e684\n. as for generating a table with all the necessary data, I think we're lucky! there's a C# code snippet that basically dumps the list to a text file, it could be easily modified to get just what we need:\nhttp://msdn.microsoft.com/en-us/library/system.timezoneinfo.getsystemtimezones.aspx\n. @nlemberger I have written a script in C# that generates an exhaustive table of all time zones on Windows with daylight savings time and everything. The generated code compiles, next would be to write code that performs the search in the tables:\nhttps://github.com/FreeRDP/FreeRDP/blob/master/scripts/TimeZones.cs\nhttps://github.com/FreeRDP/FreeRDP/blob/master/libfreerdp-core/timezone.c\nthe hardest part was to get all the data, now we have it!\n. @nlemberger good news!\nI have completed very exhaustive timezone redirection support :) I have extracted all timezone data out of windows, and I have written a script that generates a table from an existing unix timezone to windows timezone map. the result is very accurate and exhaustive timezone detection and redirection. It even has the accurate daylight savings time transition times over the next decades!\nSince it's working now, I'm closing this ticket :)\n. @elfring if I understand correctly, a standard compliant solution is to avoid using underscores before or after the identifier?\n. @Nigel62 I've just put it back the extended flag. in the current code this is located in libfreerdp-locale/keyboard_layout.c. I'll need to figure out why it was changed in the first place, and see if fixing it there breaks it for somebody else, and figure out a solution.\n. I think the root of the issue might be that there exists two \"divide\" keys, one which would have the extended flag and one which wouldn't. In xkb.pl there are two XKB symbolic key names which map to VK_DIVIDE: \"KPDV\" and \"KPF2\". For systems using XKB mapping is currently done live, in libfreerdp-locale/keyboard_x11.c\nThis would be worth more investigation. I've asked Pawel about this and he said that mstsc would send VK_DIVIDE with and without the extended flag depending on the key.\n. With more testing, here's the deal:\nThere are two keys which map to VK_DIVIDE:\n'/' key to the left of the right shift key on most keyboards maps to VK_DIVIDE, not extended\n'/' key on the numpad also maps to VK_DIVIDE, and is extended\nThis is what mstsc sends, so we should figure out a way to properly map those differently\n. @joerg @Nigel62 I have pushed some improvements yesterday to complete mapping between an XKB symbolic key and a Virtual Key Code + the extended flag. I've tested it, and now the key on the left of the right shift sends VK_DIVIDE without the extended flag, and the divide key on the keypad sends VK_DIVIDE with the extended flag. Same thing happens with enter and the enter on the keypad (enter on the keypad has the extended flag).\nCould you please test this?\n. @joerg I noticed the same not long after, but I fixed it in the meantime. Did you try the very latest sources? They should be fixed\n. @joerg I have just documented it and fixed it (it was broken for a few days, now it's working again). the option is --kbd-list, the easiest way to figure out your id is to do xfreerdp --kbd-list | grep \"name\" and you'll get the id to use with -k\n. @ygch is this using the very latest development sources? I wasn't aware that restricting bandwidth usage would make FreeRDP slow as opposed to mstsc. My only guess is that this changes the server behavior in such a way that FreeRDP performs poorly. This would need further investigation, but keep in mind that the server does dynamically adapt itself to the client based on various metrics, such as the average time it took for the client to consume the last frame sent. There are a couple of group policies which you can edit on the server to tweak it to behave differently or prioritize certain things, maybe you could play with those.\n. @ygch was this using RemoteFX or video redirection?\n. @Digimocloud this version looks OLD, probably 0.8.2, and it doesn't support RemoteFX. Please either get a package for 1.0.1 or build the latest sources yourself.\n. @chthal there was a problem introduced after 1.0.1 that was fixed yesterday with similar symptoms, did you compile a development version and installed it on the same machine? otherwise try the very latest development sources, they should work\n. @otavio people shouldn't expect wfreerdp to work well anyway, adding those skeleton functions isn't going to change anything.\n. @littlejawa just went over the comments, this should help new comers get a better understanding of FreeRDP faster. thanks!\n. @ygch you were awarded the \"invalid\" label for this \"issue\". What you need is help on how to cross-compile for ARM, not \"transplant to the arm\" which would evoke arm transplantation to most people reading the title. For questions, please use the mailing list, not our bug tracker.\n. @hteles I just applied and pushed the fix 2 minutes after you've opened this ticket. Closing it now, but in the future please open a pull request instead of sending patches which require us more manual work.\n. We've made some progress on narrowing down what the issue was. AAFW on IRC pointed out that the following website in chrome can trigger the failure: http://www.aha-soft.com/faq/web-page-cursor.htm\nIf you hover the mouse over the 4th cell in the table of the section \"Applying a Custom Cursor to Table Cells\" it should crash. The cursor being loaded is http://www.aha-soft.com/faq/target.cur and seems to be an all-transparent cursor, which may explain why it fails for some reason.\n. it is indeed not crashing any more for me.\n. @NiKiZe I pushed a temporary fix. memory management is currently really bad for this part of code, I had to get rid of the previous code in order to first clean things up and then I'll get to do the memory management properly until valgrind stops complaining. I also fixed sspi_SecBufferFree() which would not set the buffer pointer to zero, which is why checks for non-null pointers values wouldn't help.\n. you forgot to run sudo ldconfig\n. Here is a more detail log of the negotiation failure:\nDBG_NEGO nego_enable_rdp (675): Enabling RDP security: true\nDBG_NEGO nego_enable_nla (699): Enabling NLA security: true\nDBG_NEGO nego_enable_tls (686): Enabling TLS security: true\nDBG_NEGO nego_connect (69): state: NEGO_STATE_NLA\nDBG_NEGO nego_attempt_nla (148): Attempting NLA security\nconnected to 192.168.1.175:3389\nDBG_NEGO nego_process_negotiation_failure (488): RDP_NEG_FAILURE\nDBG_NEGO nego_process_negotiation_failure (500): Error: SSL_NOT_ALLOWED_BY_SERVER\nDBG_NEGO nego_connect (69): state: NEGO_STATE_TLS\nDBG_NEGO nego_attempt_tls (190): Attempting TLS security\nconnected to 192.168.1.175:3389\nDBG_NEGO nego_process_negotiation_failure (488): RDP_NEG_FAILURE\nDBG_NEGO nego_process_negotiation_failure (500): Error: SSL_NOT_ALLOWED_BY_SERVER\nDBG_NEGO nego_connect (69): state: NEGO_STATE_RDP\nDBG_NEGO nego_attempt_rdp (230): Attempting RDP security\nconnected to 192.168.1.175:3389\nDBG_NEGO nego_connect (82): Negotiated RDP security\n. Well now I am confused... why would the server send back SSL_NOT_ALLOWED_BY_SERVER? It is supposed to allow all security levels...\n. This is no longer an issue with the latest sources\n. Take a look in libfreerdp-core/settings.c, this is where default settings are populated. You should be able to populate those fields in the rdpSettings structure. MS-RDPBCGR douments possible values. This is the first time where I see this field actually being used\nIs this software on the server (iSeries)? What is it, and what does it do?\n. @zekemx create a file called /etc/winpr/HKLM.reg and add the following text in it:\nWindows Registry Editor Version 5.00\n[HKEY_LOCAL_MACHINE\\Software\\FreeRDP\\Client]\n\"KeyboardType\"=dword:00000000\n\"KeyboardSubType\"=dword:00000000\nEdit the values (in hex) accordingly. Those will get picked up in settings.c, without having to recompile.\n. the only one which may require some testing is the code that deals with redirection. It's not easy to test, but I say we could merge this and provide a fix if we're breaking something. As for the rest, it looks good to me.\n. This is the same bug as this one: https://github.com/FreeRDP/FreeRDP/issues/476 and we fixed it last week\n. I didn't have the time to really look into this again, but I have a hint of what may cause trouble: MS-RDPBCGR specifies that negative bias values are using two's complement. For instance, -60 is sent as 0xffffffc4. This is the only place I know in all of the RDP specifications where negative numbers are explicitly defined as being encoded using two's complement, and as far as I know nothing is done to make sure this encoding is correct.\n. I and Corey have just pushed a couple of fixes, it's working well for me now, please test. I suspect the original code was working well when standard time was in effect :P\n. Is this now safe to merge?\n. It is now fixed, I simply changed the line to:\np = &fp_buffer[(i + 1) * 3];\n. @zestsh now this is weird, SSL_OP_NO_COMPRESSION should be defined. If it's not defined then I guess your build of OpenSSL does not support TLS compression. In this case, it should be harmless to just add the following:\nifndef SSL_OP_NO_COMPRESSION\ndefine SSL_OP_NO_COMPRESSION 0\nendif\n. Any comments on this? Is this the best way to enforce a certain coding style? I feel like this might be overkill, but that's just my opinion. Will this only work for vim, and do other editors have equivalents?\n. Using that tool, I'd end up with:\n/* c-basic-offset: 8; tab-width: 8; indent-tabs-mode: t\n- vi: set shiftwidth=8 tabstop=8 noexpandtab:\n- :indentSize=8:tabSize=8:noTabs=false:\n  */\n/\n\n- Local variables:\n- c-basic-offset: 8\n- tab-width: 8\n- indent-tabs-mode: t\n- End:\n  \n- vi: set shiftwidth=8 tabstop=8 noexpandtab:\n- :indentSize=8:tabSize=8:noTabs=false:\n  /\nDo you know if the \"top\" version can be put at the bottom of source files? If we start adding modelines, I'd like something very short and concise, without comments like \"don't delete\". I'm not very fond of the idea, but I'm willing to see what others think of this.\n. I'm not sure others are really fond of this idea, unless others show interest into this, I suggest we close this for now.\n. Have you compared with mstsc? The x11 screenshot shows a 1px black line to the right of the cursor button, I'm pretty sure this is not correct. I can see the pattern is wrong in the --gdi sw screenshot as you describe, but none of these seem fully correct to me.\n. Does anybody have comments on this? The code looks correct, but --disable-security-layer-negotiation is quite a long command-line argument, maybe we could change it to --no-nego\n. Loosely follow the same instructions:\nhttps://github.com/FreeRDP/FreeRDP/wiki/Build-on-Windows-with-Visual-C---2010\nuse the following cmake options:\ncmake -DWITH_SERVER=on .\nIf you are on Windows 8, use:\ncmake -DWITH_SERVER=on -DWITH_WIN8=on -G \"Visual Studio 11\" .\nOn Windows 7 and previous versions of Windows, you'll need the following\nmirror driver to be installed:\nhttp://www.demoforge.com/dfmirage.htm\nYou'll also want to configure certain server settings, such as the default\nport such that it does not conflict with the Microsoft RDP server:\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\FreeRDP\\Server]\n\"RdpSecurity\"=dword:00000000\n\"TlsSecurity\"=dword:00000001\n\"NlaSecurity\"=dword:00000001\n\"DefaultPort\"=dword:00001189\n\"CertificateFile\"=\"C:\\Users\\awake.freerdp\\server\\freerdp.crt\"\n\"PrivateKeyFile\"=\"C:\\Users\\awake.freerdp\\server\\freerdp.key\"\nThere is a self-signed cert inside server/Windows/, you need to copy it to\nthe same location as wfreerdp-server.exe. I found that to be annoying over\ntime so I just installed them somewhere and added a registry key.\nNLA is enabled by default, use your machine's credentials. You can always\nset NlaSecurity to 0 and disable authentication.\nBest regards,\n- Marc-Andre\nOn Sun, Sep 23, 2012 at 10:11 AM, ArthurGodoy notifications@github.comwrote:\n\nHello everyone,\nWhich options on cmake should be activated to compile in VS2010 the\nwfreerdp-server for testing the remotefx server feature? There is no guide\nin compilation wiki.\nThanks in advance,\nArthur\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/FreeRDP/FreeRDP/issues/736.\n. Are you inside a remote desktop session already? The mirror driver does not work in this case. Otherwise we'd have to investigate what causes the driver to fail initialization properly.\n. 2 seconds? That's much more than I get. I can almost play a video smoothly. Did you forget to build with the -DWITH_SSE2=on option? This makes a huge difference for encoding/decoding.\n. You are right, I hadn't noticed before. I'm looking at the conflicting header right now, there is a way to get this fixed.\n. This does the trick:\n\nin libfreerdp/codec/jpeg.c, add #define XMD_H over #define HAVE_BOOLEAN\nifdef WITH_JPEG\ndefine XMD_H\ndefine HAVE_BOOLEAN\ninclude \nthis presents jmorecfg.h from redefining INT32\n. I just pushed the fix on master, closing this issue now\n. Just delete cmake/FindOpenSSL.cmake from the source tree, it's a modified version of FindOpenSSL.cmake taken from CMake 2.8. I added more options to it, but it wouldn't break anything for me.\nWhich version of CMake are you using?\n. This seems to be a problem with CMake 2.6, but we're about to switch our minimum requirement to 2.8. Sorry, this means you'll have to install a more recent version of CMake. If there are no packages available for Ubuntu 10.10 you can use the prebuilt version from the cmake website, it's easy to install.\n. I pushed a fix\n. I've got that fixed on my branches with more changes to the build system, I could merge it. I've been improving the build system recently and forgot a definition file in the rdpsnd folder.\n. merged, should be fixed.\n. @curiousjoshu Microsoft collaborates with the FreeRDP team, and the Remote Desktop Protocol is all open specifications. Updated specifications for RDP8 have been published on the Microsoft Open Specifications website.\n. I like most of it, except the new error utils. I agree we need to improve on that, but I'm thinking we should implement the Win32 event handling system as part of WinPR instead to fix this properly. I also noticed there was a dirent.h wrapper under the MIT license. MIT is fine, just pointing it out.\n. I will look into integrating this code without the error handling store. I'm trying to reduce FreeRDP's dependency on custom helpers, and that would go in the other direction we're trying to take. Would you have some experience with the Win32 API for the event log and things like that? Is there anything from the Windows API Sets that would be a be a possible replacement? http://msdn.microsoft.com/en-us/library/windows/desktop/hh802935/\n. Ok, I created an integration branch in which I removed the error handling stuff. it's broken on linux, I'll fix that, and then I'll integrate my code which sits on a different branch.\n. I just fixed the build on Linux, I also removed the HTTP proxy connection stuff. Can you elaborate more on what this is supposed to do?\n. @richterger I totally agree that a better way to report errors and debug output is required. I'm just not sure yet how to implement this without causing future problems in architecture that will take significant efforts to correct. For instance, I have long wanted to have an option of redirecting all those printfs to a log file. There is design work that needs to be made before we move forward on this one. Looking at other projects, wine seems to have a nice way of dealing with debug output and error messages.\nAs for HTTP proxy support, is this just a regular proxy? This looks a lot like TS Gateway. Once TS Gateway is done I could actually reuse the code necessary for full HTTPS authentication, such that we could connect to proxies that require authentication. Could you write the lists of steps required to use and test HTTP proxy functionality?\n. @richterger for the error/debug output, do you know of anything that would do what you want in the Win32 API? If you can find something that would do it, I'd simply implement it in WinPR such that we can use the same API across all platforms. I prefer this approach because we start off with an API which is already known to be mature and stable, and is unlikely to require major modifications. Custom utility helpers tend to be unstable and break often, and make management of the code base a huge pain.\n. @richterger I just merged the code that I integrated. For the rest, we need to take more time thinking of how we do it.\n. we're on the same line here, that will help make the code cleaner, without tons of sizeof(whatever) in xmalloc.\n. are you sure that this is correct? cbData stands for \"count byte data\" here, so it is not the count of delta points, but the count of bytes.\n. These should be changed to uint32 even though they truly are uint16 for the sake of keeping the structure aligned to 4 bytes.\n. @otavio while you do have a point, I would rather not depend on the compiler's decision to do so. If you hadn't noticed already most data structures have been modified to be aligned to four bytes by now. If we were to use uint16 and expect the compiler to align it to four bytes, that would cause be trouble with my C# binding where I need to have a predictable memory layout. uint16 does not always end up becoming uint32 in memory from what I've seen, uint32 is the safest way to ensure that the structure is aligned for all compilers. I had a long discussion with Jay regarding data structure alignment, he was a bit pissed that most data structures were unaligned in 1.0.\n. Don't use bpp, just use 4 and use a value which covers all codecs. All codecs take into account discarding the output in favor of the uncompressed data when the compressed data is larger than the uncompressed data. Also, all the surface command codecs are 32-bpp based anyway. What we need to ensure is putting enough reserved space for headers and frame markers.\n. The code which got merged has defined(LP64) as well, which is even better. I added unit tests, and found out that your debian squeeze machine is actually using LP64 like 64-bit OS X. Unit tests are working properly everywhere now. As for C standard sizes, stdint.h is not available on Windows, so I'm trying not to use it. I am also trying to get the type definitions as close as possible to the original ones when possible (that is, stick to unsigned long when it's 4 bytes like on Windows, etc).\n. the VCAPITYPE should probably go here and not in the #define\n. A similar fix would need to be done for smartcard_GetStatusChangeW_Call.\n. I'd rather sanitize the input than allow values which are not allowed by the protocol. What do you suggest instead? failure?\n. To answer that question: we need to modify the results because pcsc-lite's implementation is slightly different from WinSCard in subtle ways that break application compatibility. The remote application is calling WinSCard and expects WinSCard behavior, one tiny change in behavior and the application can be broken.\n. @Vinche59 hum... wtf? How is the Thinlinc environment structured? You mean you have a Windows client connected to a Thinlinc server, which then uses xfreerdp to connect to a Windows server?\nHow does the proprietary pcsc-lite library work? Is it supposed to be the same as a regular pcsc-lite, or it is doing anything fancy under the hood? What needs to be tested is simple xfreerdp on Linux connected to a Windows server.\nNo need to panic for now, but here's what you can do: try and figure out what exactly goes wrong when the results are being filtered and when you just pass them as is. The reason why they need to be filtered is because this is where we absorb some of the differences between pcsc-lite and WinSCard, so we can make pcsc-lite more WinSCard-like. Did you identify the difference that made it work when just letting it go through, unmodified?\n. @Vinche59 in the meantime I could simply uncomment the two sections that you put between #if 0, looking at the changes you did this would put the code back into a relatively safe state.\n. this looks like a bug more than a warning fix, but good catch\n. I agree that the variable is not used, but removing it makes you forget there was something there in the first place. These kind of variables are just there to correctly contain data parsed from the packet, even if currently unused.\n. Even if the offset variable is not used beyond this point, updating it to point to the new offset after the last read operation makes it consistent with the rest. I don't think we want to remove such variable updates.\n. Again, even if we are not using this IdleTimeout value, it is there as a placeholder for now. I actually had to spend some time figuring out where that unparsed IdleTimeout value was being sent by the server, not having a placeholder will make the next developer waste time figuring out where it should be parsed from and how.\n. @hardening the thing is that even if we start commenting out everything, it defeats the purpose. This only becomes annoying because of the clang checker warnings, which only catches certain cases. For instance, our Stream macros update pointers of the wStream* struct on every \"call\" regardless if they are actually required later on. The last call to a read operation that updates the read pointer will in many cases be discarded unless we do a check for the end read position, but it doesn't mean we should systematically get rid of them. One other way to get rid of many of the warnings would be to define data structures for each of the messages and refactor the code to have serialization/deserialization functions separate from the code acting on the packet contents. Functions that read and populate a data structure do not generate warnings, as there is no way to know if the data populated in the data structure will be used or not in the future. Isn't there a way to tweak the clang warnings?\n. Commenting out rather than removing is definitely much better for me. However, you said it well: clang warnings do not understand readability concerns. Are we really in favor of making the code less readable for the sake of not having clang warnings?\n. yeah... it reduced the amount of #ifdefs necessary, and we're crazy enough to have all the functions in WinPR anyway. I don't strongly care about having it runtime, it just made the code slightly cleaner...\n. I can remove it in a future pull request though\n. this is the kind of change I really have a problem with... yes, the status code was obtained but it was unchecked. the fix shouldn't be to remove the status variable, it should be to check the status variable and return -1 on error. I really, really do not want to play cat and mouse in commits where a future commit will just do the exact opposite of such commits + simply check the status variable correctly for error.\n. Again, the problem isn't that the result variable exists in the first place, the problem is that it is unchecked! To get rid of the warnings, check variables, don't remove them please.\n. Another case of unchecked variable that was removed instead of checked.\n. Well that's pretty much useless. The whole point of calling that function is to obtain the pointer, now you've removed the variable that was returned and kept the function alone. Agreed, the variable isn't used, worst case it could be commented out for the moment.\n. the SChannel SSPI module is really a WIP... what often happens with WIP code is that a lot of status codes are unchecked. By removing all of them because of that, they will need to be re-added later when the work on the WIP code continues. Obtaining the status code, even if unused, is a reminder that there is something to be checked there, like a todo.\n. this can go in winpr/user.h instead of adding winpr/winuser.h, and even then, you have used winpr/asn1.h as the basis for this header and forgot to change the WINPR_ASN1_H header guard.\n. these definitions are already present in winpr/wnd.h, do not define them twice.\n. that variable was practical, and as a matter of fact, it would break it for the wayk client. I'd rather get it back than remove it.\n. I kind of agree it wasn't bad in its original state, don't see much of a point in splitting it over multiple statements like that.\n. no, actually this was changed to prevent a leak. \"If successful, the pthread_mutex_destroy() and pthread_mutex_init() functions shall return zero; otherwise, an error number shall be returned to indicate the error.\" this means that on success the handle was leaked. We could fix it to free it under failure and success.\n. yes, in FreeRDS\n. you are right, fixing it right now.\n. That's the part of this pull request which is most subject to discussion. I haven't debugged this myself, but I did look over the problem with Denis, and it turns out that sometimes SSL_read returns with SSL_ERROR_SYSCALL and errno set to EAGAIN/EWOULDBLOCK. We haven't been able to pinpoint the reason of this SSL_ERROR_SYSCALL, and it everything looks good in the RDP8 gateway BIO. I thought if we limit this to just WSAEWOULDBLOCK it wouldn't cause the previous problems that were caused AFAIK by ignoring all SSL_ERROR_SYSCALL, including cases where it is a real error (WSAWOULDBLOCK isn't really an error, just don't know why it ends up there though).\n. @hardening I'm jumping on it to find the root cause of this. I'm building against my own openssl build now so I can add printfs in it and find the place in OpenSSL that returns the SSL_ERROR_SYSCALL.\n. It should, but this is just an initial port, not containing any client code. What this will likely do is simply disable hotplugging even if it is ugly.\n. When building for UWP the deprecation warnings for winsock cause build errors\n. True, this is a tiny fix for 32-bit OS X builds of Mac Audio.\n. I thought of this, but in this case it was simply easier to consider UWP separately since only part of the functions were missing. The replacement code in many of the cases is using the extended or more recent version of the same function. Mixing it with the non-Win32 function code would have made it quite messy. I also only ported the required functions to allow building at this point.\n. UWP is quite different from Win32 and non-Win32, so it is sometimes easier to consider it separately like this.\n. That's assuming their are non-NULL at that point, the code can change later on and set any of these variables beforehand, and we now have a leak. I'd rather stay safe.\n. ",
    "otavio": "I understand; I agree that using  a more useful output than printf is important but I also think this shouldn't be possible to disable it.\nI'd suggest to use a specific macro for this module that is not disabled in case debug is off.\n. I agree; personally I think this is a specific case of this plugin and then this macro could be implemented on it not a global one.\nWe can have global macros for warning and info messages but this is not the case here. Here we do want more information since people will use this to test and debug stuff, not regular daily usage.\n. Perfect.\n. This is wrong IMO; we ought to have it as optional package and not blindly skip it or use it.\nAs I said on mailing list, it would be better if it could fail and warn the user what to do to get it disabled in case xmlto is not available instead to go ahead without building the manpages.\n. On Tue, Aug 30, 2011 at 15:32, awakecoding\nreply@reply.github.com\nwrote:\n\n@otavio: why should we fail if xmlto is not available? we're not failing if doxygen is not found on the system (we're not detecting it at all in fact), so why should we fail by default with this one?\n\nWell; doxygen is a developper target documentation but manpages is a\ndifferent beast ;-)\n\nOtavio Salvador\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0O.S. Systems\nE-mail: otavio@ossystems.com.br\u00a0 http://www.ossystems.com.br\nMobile: +55 53 9981-7854\u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0 \u00a0 \u00a0http://projetos.ossystems.com.br\n. Yes; I dislike things \"automatically\" going ahead since it makes things disabled or enabled behind the scenes. \n. I prefer to choose what I want and what I don't want. Optional things changing without I am  aware of worries me a lot specially because it will be affected by the build machine.\nImagine the nightmare of support of asking:\nWhat packages you have installed in your development machine?\nand compare it with:\nWhat compilation options have you passed to CMake?\n. @shlevy did you look at fixing the issues spot by @awakecoding?\nCurrently your patch cannot be merged automatically (hence the recent code changes) and thus you might use this opportunity to address those remaining issues so this can be merged into master.\nThanks in advance,\n. Does this got fixed with last @jsorg71 fix?\n. Please go ahead. We are more focused into regressions from 0.9 to 1.0 and won't look at issues target to 1.1 until it is done.\nFeel free to work at this and keep us posted about the improvements :-D\n. In my opinion this is not a blocking issue for 1.0.\nI think we ought to leave it to 1.1.\n. Ahh; I see.\nIn this case I agree :-D\n. We got a parallel printer to test it today; once we get it done we get back to you.\n. Eduardo has done some tests and seems to work now (after his fix).  I am closing this issue.\n. Fixed in #145.\n. @fedsed please write the full output you got from freerdp.\n. We are still trying to reproduce this but we failed up to now.\nWe'd need a hand of someone able to reproduce it and to debug it.\n. We haven't been able to reproduce this issue so it is difficult to us to fix this issue.\nSomeone that reproduce it needs to look at it. Sorry.\n. Let us posted about any news and progress on that.\n. In this case I wll close this issue and if something shows up we start a new one.\n. @mfleisz I fail to see, except very customized embedded OSs, where HOME wouldn't be set.\nWhat is the use case in this issue?\nIf this is very specific to embedded stuff (which I am affected as well) I'd prefer to move this to 1.1 if noone objects.\n. Yes, windows is indeed a problem. The urgency of this issue depends if we're going to support Windows for 1.0 or not.\n. :-) Awesome :-)\n. Please rebase this against current master. This has a long history with changes that are not related and might be better to review if you squash it in proper commits.\n. We need to support XRandR change of local resolution and server requested resizing so woudn't this be the same for full screen?\n. You forgot to update the manpage.\nBesides, it would be easier if you could fork freerdp, push your change and make a pull request with the fix.\n. It has been merged into master.\n. Moved to 1.1 branch.\n. Just to make easier for people wanting to look at it, I'll try to summarise it:\n- RemoteFX works now\n- Aero themes partially (transparency fails)\nBoth works with 0.9-git so it is clearly a regression.\n. I will ask someone to do that on monday.\n. @Falcon-1 please give a test. As @awakecoding said this seems to be fixed already so I am tagging it as waiting for testing.\n. I think an option as --assume-certificate-ok or similar would be good.\n. It doesn't matter much the name of the command line option for me but it being available. --ignore-certificate seems fine.\n. Can you test current GIT to see if it works now?\n. This is clearly a regression so I tagged it according.\n. I think this select ought to enforce a timeout to allow you to handle the non-connection case. This way you might be able to check the specific fds to know if it is really working or not. IIRC the RDP has a keep-alive type of package and thus this ought to allow us to proper detect this case.\n. Easy to test, if you are connecting to a remote VM you can just unplug the network cable (phsically or virtual) from it and see how the system behaves.\n. Did someone got any progress on this?\n. I'm moving this to 1.1 branch. In case someone object, please shout ;-)\n. @awakecoding you need to use Windows 7, XP or 2003 to reproduce it. Windows 2008 works fine.\nThe problem is when you unplug and plug the network cable it doesn't resume the connection. As @beloni said, it doesn't send the reconnection cookie to the server but just receiving the capability cookie.\n. Before we merge it, please rebase it against master so we clean the log a bit.\n. You need to redo it since it seems changes made it not mergeable again. Please do it again and push so we can merge it.\n. I think this working we can close this and #171.\n. I did not; I just noticed Vic's comment, that's why I asked.\n. I'd say we can close this and open another for 1.1 ;-)\n. Please, open one to the virtualbox bug and put to 1.1.\n. Well, this might be a bug onto the .pc file. It would be better fixing it on ffmpeg pc file and report a patch for them.\n. I agree with @fedsed; it ought to run for most people out of box.\n. Did you try to reproduce this with FreeRDP-old? It would be nice to know if it is a regression or not.\nIn meanwhile I left it tagged as feature.\n. Thanks. This is good so we track what is really critical for final release.\n. The image is not being displayed, please send it to somewhere and put a link here to it.\nAlso provide more information about how to reproduce the problem.\n. Please rebase those changes and send them again so  we can merge it.\n. I am moving this to 1.1 milestone as we're focusing on getting regressions fixed now.\n. Can you both test it with current GIT and confirm this still broken? When doing that, please update this issue with the GIT hash you used for testing so we can track the progress on this issue.\n. On Thu, Dec 15, 2011 at 06:09, kkoh <\nreply@reply.github.com\n\nwrote:\nAMR cross compiling not found file --> autogen.sh\n\nThis is not a defect on FreeRDP or whatever related but a\nrequirement/miss-use of your cross environment.\nI am closing this issue due this.\n\nOtavio Salvador                             O.S. Systems\nE-mail: otavio@ossystems.com.br  http://www.ossystems.com.br\nMobile: +55 53 9981-7854              http://projetos.ossystems.com.br\n. Can you give an easy to reproduce use-case? This helps people trying to look at this issue.\n. Are you sure you're using latest GIT? this issue supposely was affecting Mac OSX and this one was fixed.\nPlease confirm you're using latest GIT, put the hash you used here, and if it keeps failing send us the output @atong-tcs has asked for.\nThanks in advance.\n. Please test current GIT version to see if this issue is still happening; people have done many fixes lately.\nOnce you do that, please update this issue with the hash you used for testing so we can track the last known broken version and see if we can manage to get this fixed soon.\n. OK; thanks for testing it once again.\n. Fixed by pull request #376.\n. Please move the NULL removal to a specific change with an specific commit log as it is non-related.\n. @awakecoding it might be due me saying that i were going to wait for someone to look at it for merging. @jiten19 might have understood i were asking to him to to that but i where asking for someone else.\nLet's move on :-)\n. This patchset seems fine but as I have no experience on this part of freerdp I'll let someone else to merge it after proper testing.\nThanks by looking at it :)\n. Noone has commented with the change that was suppose to fix this issue so I removed the label of it being waiting for test.\n. @atong sorry; I didn't notice the comment. Thanks by fixing my mistake.\n. Has anyone confirmed it works? We can close this issue I think.\n. Please put a printf or something on the skeletons so if someone uses it, he/she knows this is expect to not work.\n. I'd expect dfbfreerdp to have a printf there tought\n. Please rebase this branch so we make the commit history clean \n. Please rebase it against master and make it a single commit fixing the stuff and with proper commit log about it\n. Why?\n. Why?\n. I am against it as the compiller does the padding by itself but keeping it as 16bit makes it easier to spot the needed storage area.\n. The C# point is a good reason for me. Agreed.\n. ",
    "celsius": "I do exactly the same and I get\n$ mkdir Build\n$ cd Build\n$ cmake ..\n\nhere I got normal cmake output\n$ ls\nchannels        CMakeFiles           config.h    include          libfreerdp-chanman  libfreerdp-gdi  libfreerdp-utils\nCMakeCache.txt  cmake_install.cmake  freerdp-ui  libfreerdp-asn1  libfreerdp-core     libfreerdp-kbd  Makefile\n\neach folder containing only subfolders (according to the source tree), cmake files and generated Makefile, but no source files obviously\ne.g.\n$ ls -R channels\nchannels/:\ncliprdr  CMakeFiles  cmake_install.cmake  Makefile  rdpdbg\nchannels/cliprdr:\nCMakeFiles  cmake_install.cmake  Makefile\nchannels/cliprdr/CMakeFiles:\ncliprdr.dir  CMakeDirectoryInformation.cmake  progress.marks\nchannels/cliprdr/CMakeFiles/cliprdr.dir:\nbuild.make  cmake_clean.cmake  DependInfo.cmake  depend.make  flags.make  link.txt  progress.make\nchannels/CMakeFiles:\nCMakeDirectoryInformation.cmake  progress.marks\nchannels/rdpdbg:\nCMakeFiles  cmake_install.cmake  Makefile\nchannels/rdpdbg/CMakeFiles:\nCMakeDirectoryInformation.cmake  progress.marks  rdpdbg.dir\nchannels/rdpdbg/CMakeFiles/rdpdbg.dir:\nbuild.make  cmake_clean.cmake  DependInfo.cmake  depend.make  flags.make  link.txt  progress.make\n- ubuntu 10.04 64bit, but it used to work that way in previous version too (and, as far as I know, my colleagues using cmake on OSX have the same behavior)\n- CMake : I'm currently using cmake 2.8 but I've been using it since at least 2.4 and it has always been like this\n- This is vanilla ubuntu's cmake, I did not make any specific configuration\nI find this usage of cmake particularly useful since in case something in cmake's config/cache gets somehow corrupted (which happens from time to time), I just erase and re-create the Build directory :-) (besides, I can also have several build directory such as Build-release and a Build-debug in order not to recompile everything whenever I switch between Debug and Release compilation mode)\n. According to cmake's website, you may need to clean your source tree in order to be able to create out-of-source build :\nhttp://www.vtk.org/Wiki/CMake_FAQ#I_run_an_out-of-source_build_but_CMake_generates_in-source_anyway._Why.3F\n. Great, thanks !\n. as far as I can tell, problem disappeared by pulling commit 82ea771\n. here is a patch that fixes the issue (loss of pointer \"targetNetAddresses\" because of redirection->targetNetAddresses++; ) :\n``` diff\ndiff --git a/libfreerdp-core/redirection.c b/libfreerdp-core/redirection.c\nindex 5e6c0e5..0f1e07d 100644\n--- a/libfreerdp-core/redirection.c\n+++ b/libfreerdp-core/redirection.c\n@@ -138,12 +138,13 @@ boolean rdp_recv_server_redirection_pdu(rdpRdp rdp, STREAM s)\n            redirection->targetNetAddresses = (rdpString*) xzalloc(count * sizeof(rdpString));\n\n\nwhile (count > 0)\n+\nint i;\n+\nfor (i=0; i < count; i++)\n                {\nfreerdp_string_read_length32(s, redirection->targetNetAddresses, rdp->settings->uniconv);\nDEBUG_REDIR(\"targetNetAddresses: %s\", redirection->targetNetAddresses->ascii);\nredirection->targetNetAddresses++;\ncount--;\nfreerdp_string_read_length32(s, &redirection->targetNetAddresses[i], rdp->settings->uniconv);\nDEBUG_REDIR(\"targetNetAddresses: %s\", (&redirection->targetNetAddresses[i])->ascii);\n                }\n        }\n```\n. NB: the patch fixes one segfault but there are others happening after this one is corrected (notably in the freeing of the cache, rdp and xfi). These also happen only when logging out after a redirection, I'll try to look into it.\n. By the way, sorry in advance if I'm not doing this right, it's the first time I try to make a fork + pull request with git\n. Although your fix probably solves the problem anyway, just a note :\n\nI don't know exactly how the code works, but I made a step-by-step analysis with gdb when passing in function pointer_cache_get() (i.e. one function call just before a crash), and what I saw was :\n- index is not always 0\n- some entries of pointer_cache->entries seem to be valid pointer (at least they're not NULL)\n- index (almost ?) always choose a NULL with index pointer_cache->entries[index]\nFor instance I had cases where index was \"4\" and there were non-NULL pointer at entries[0], [1], [3], but entries[2] and entries[4] up to [31] were NULL (and thus pointer_cache_get() returned NULL)\nI'm going to test with the fix, thanks\nAlexis\n. Windows 2008R2 (with redirection, but I also tested with direct connection)\n. I just tested the fix, what happens is:\n- as long as the mouse stay on the desktop : the pointer is normal\n- if the mouse changes to some other pointer (resize, hand, \"eggtimer (hourglass?)\" )\n- if I move the mouse back to some place where the pointer should be normal, it remains a \"special pointer\", it never goes back to \"normal pointer\" (although it switches normally between all the others pointers)\nEDIT: actually, no, it doesn't switch normally between the other pointers, some work, some don't, very random)\n. @awakecoding : update_reset_state is called just before the session opens (or at the beginning). I'm not sure switching to default pointer would fix the problem because I re-ran xfreerdp several times in the past minutes and I had one case where it was more or less stuck with the normal pointer (in that case I could not get the \"char\" pointer when hovering a form or the Windows Start menu search box)\n. FYI I patched it as described there: http://www.mail-archive.com/dev@httpd.apache.org/msg54902.html\n```\ndiff --git a/libfreerdp-crypto/tls.c b/libfreerdp-crypto/tls.c\nindex de95621..198f0ab 100644\n--- a/libfreerdp-crypto/tls.c\n+++ b/libfreerdp-crypto/tls.c\n@@ -76,7 +76,11 @@ boolean tls_connect(rdpTls tls)\n         * and the FreeRDP client, and caused major performance issues,\n         * which is why we're disabling it.\n         /\n+#ifdef SSL_OP_NO_COMPRESSION\n        options |= SSL_OP_NO_COMPRESSION;\n+#elif OPENSSL_VERSION_NUMBER >= 0x00908000L / workaround for OpenSSL 0.9.8 /\n+       sk_SSL_COMP_zero(SSL_COMP_get_compression_methods());\n+#endif\n    /**\n     * SSL_OP_TLS_BLOCK_PADDING_BUG:\n\n@@ -179,7 +183,12 @@ boolean tls_accept(rdpTls tls, const char cert_file, const char privatekey_fi\n         * and the FreeRDP client, and caused major performance issues,\n         * which is why we're disabling it.\n         /\n+#ifdef SSL_OP_NO_COMPRESSION\n        options |= SSL_OP_NO_COMPRESSION;\n+#elif OPENSSL_VERSION_NUMBER >= 0x00908000L / workaround for OpenSSL 0.9.8 /\n+       sk_SSL_COMP_zero(SSL_COMP_get_compression_methods());\n+#endif\n```\n. No, I don't think so. my libssl is version 0.9.8k, i.e. OPENSSL_VERSION_NUMBER == 0x009080bfL and it has sk_SSL_COMP_zero() and SSL_COMP_get_compression_methods() but it doesn't have SSL_OP_NO_COMPRESSION\nI think that maybe that guard is there because sk_SSL_COMP_zero() or SSL_COMP_get_compression_methods() were not defined before 0.9.8 ?\n. it seems sk_SSL_COMP_zero() was introduced somewhere between 0.9.5 and 0.9.6 and SSL_COMP_get_compression_methods() between 0.9.1 and 0.9.2, however its definition (i.e. its code) changes over time and is slightly different between 0.9.7 and 0.9.8. \nThat's as far as I can go, not a specialist.\nOtherwise, you can use :\n+#ifdef SSL_OP_NO_COMPRESSION\n        options |= SSL_OP_NO_COMPRESSION;\n+#endif\n. ",
    "bradh": "Added fix for network security protocol selection. \n. ",
    "floppym": "Added a couple other cmake changes\n. Yes. Sorry for the confusion there.\n. This is on Gentoo Linux with libjpeg-turbo-1.2.1.\n. I force-pushed a revised commit.. ",
    "jiten19": "yes i fixed the indentation .\nSo anyone has ideas to cleanly terminate the connection at the following location \nhttps://github.com/jiten19/FreeRDP-1.0/blob/master/libfreerdp-core/credssp.c#L119\n. Yes i noticed this with dwm too long back .But anyway tiling wms are not supported at this point .\n. doesn't work on dwm. :(\n. If anyone else has not looked into it , i would like to work on it.\n. Ok then .I am working on kerberos nla support .After that i wil focus on usb redirection . :)\n. also there is missing implementation for RDP6 and RDP6.1 decompression for server-client data.\n. the seg fault in rle decode  i will look into it.\nThe chroma decompressed length doesn't match because i am storing the 9th bits caused by colorloss recover at the end of buffer.\ni didn't find any better way to store the 9th bits(using 16bit for every byte would be waste of space and causes extra headache)\nAlso did you get both remotefx and nscodec working simultaneously or just with nscodec?\n. Hi atong,\nIf you can confirm it is indeed a bug in rle_decode can you post a gdb trace of it like the arguments passed to nsc_rle_decode() and for which  plane buffer (i =  0,1,2 ) in for loop in nsc_rle_decompress_data() ?\nProbably a problem with origsize .\nI have never encountered such bug with rle_decode() and kinda hard to reproduce without more info.\nAnd the colors are not correct and i have no idea about that that was the main issue in #125\n. no :(\nthe color issue is still there ,atong was supposed to work on it :)\n. I have found the bug it was in the color conversion.I have requested a pull  to fix #325 .let me know how it turns out.\n. Someone working on this issue ?\n. @atong the patch looks ok but it can't authenticate with RDP enhanced security upon reconnection. The client random assumed to be should be an array of 32 ZERO BYTES (instead of 16 zero bytes as specified in RDPBCBGR) .\n. nice just hoping someone would do that\n. Simple change \nhttps://github.com/FreeRDP/FreeRDP/blob/master/libfreerdp-utils/args.c#L606\n--return -1;\n++exit(0);\n. I also removed the NULL check in xrealloc since  it was unnecessary.\n. I just tested with a vm running x86_64 kernel.\nhttp://i.intma.in/images/057f081b55dc7bf110f14685c1d9b037.png\n@awakecoding can i get access to your 64bit machine where it is failing ?\n. No problem :>\n. This is to allow each user have his own CA certstore without messing with global certs shipped by os /browsers .\n. what format is cert ?As the current code suggests it should be ASN1 format (.cer) .\nI think we can add PEM format lookup as well.\n. if that is a netbios name then you should have samba installed and add wins to your hosts file .\nif there is really a compelling reason for this support we might as well support nbns query.\n. Very nice :)\n. Hmm i noticed that too in virtualization host setup. We are yet to implement this (probably using kerberos ).\n. Can you provide more info to reproduce this issue ?\n. If i can get access to a server where i can reproduce it it would be very helpful. Let me know.\n. ",
    "chihchun": "Requested format is s16le 1ch 44100Hz, should be fine.\n. Fix in https://github.com/chihchun/FreeRDP-1.0/commit/96b7418e561fec0e10fc04b6889ec648f6397d2d\n. Agreed, move to 1.1. (But still welcome to be in 1.0 if anyone is interested to implement it)\n. @psalm please confirm the patch fix the problem.\n. There is an old man page[1] availavble, we need to do license checking before copy it.\n[1] https://github.com/FreeRDP/FreeRDP-old/blob/master/docs/xfreerdp.1\n. ",
    "atong": "Just want to comment that I've tested this and it works for me.\n. Actually, you are right, it should be sizeof(DELTA_POINT) * polyline->numPoints.\n. I volunteer.\n. started porting to the new threading and dr api, but nothing ready for checkin.\n. Any testing so far? Build with -DWITH_PCSC\nxfreerdp --plugin rdpdr --data scard:scard ...\n. It looks like the file error codes arent getting mapped & sent to the server; just a blanket error code is used. So an application that tries to do existent checks will fail.\n. I thought that I had the same issue, but vic lee correctly pointed out that I probably had a misconfigured server if it only sends pnpdr..\n. freerdp.pc is installed again, but I'm not sure if it'll build with remmina due to api changes.\nClose?\n. Havent been able to reproduce, successful rfx (verified in Windows event log) from centos5 & 6x against 2008r2sp1 rdsh..\n. i also tested debian squeeze/i386 as well and it worked as expected.\n. Just want to log, earlier today we temporarily resolved gotsiboon's build issues and verified that freerdp git & rfx is working on his ubuntu system. The rfx caps were being sent, rfx encoded packets were being received, & event log message were showing up against a RDSH system.\n. Suggest moving this to 'feature', as it is not a regression. freerdp-old did not actually send its vchan capability so it's RDP_COMPRESS flag for its virtual channels were ignored by the server, so it did not actually receive compressed data in virtual channels, or have the code to deal with it.\n. This was checked in to avoid the segv mentioned in the original comment.\nhttps://github.com/FreeRDP/FreeRDP/commit/cd9328db4f0c4244ad8c3025cce5cf6042741a45\nWhen the vchan code handles compression, then the vchan capability should be reverted to back to VCCAPS_COMPR_SC.\n. I went by what the X11 client links against; I think codec is pulled in by core. Will add it anyway.\n. should work now, thanks llyzs\n. The segfault is easy to fix; but it'll take a little more work for cliprdr to work with rail.\n(for rail, one of the issues is that xf_cliprdr needs to not message thru xfi->drawable for clipboard tasks; perhaps it should use a phantom/unmapped window)\n. merged in #191\n. first noticed this with -z, then tested with & without -z\n. // testcase for problematic bitmap\nstatic const uint8 segv_bitmap_data[] =\n{\n0x0b, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,\n0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0xfb, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n0x00, 0xff, 0xfc, 0x7f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x7f, 0x01,\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0xfb, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00\n};\n. Sorry, I forgot to note the width/height (0x400/0x17f) for the segv_bitmap_data, which was needed to reproduce the issue (pass that bitmap to process_nsc_message).\nI think I found the issue, this should fix the segv, 0x5fc00 was chopped to 0xfc00.\n--- a/libfreerdp-codec/nsc.c\n+++ b/libfreerdp-codec/nsc.c\n@@ -264,7 +264,8 @@ void nsc_rle_decode(STREAM* in, STREAM* out, uint32 origsz)\n void nsc_rle_decompress_data(NSC_CONTEXT* context)\n {\n        STREAM* rles;\n-       uint16 i, origsize;\n-       uint16 i;\n-       uint32 origsize;\n      rles = stream_new(0);\n      rles->p = rles->data = context->nsc_stream->pdata->p;\n      rles->size = context->nsc_stream->pdata->size;\n. As awakecoding mentioned, the 2008 behavior is confusing because it's just better at recovering the existing tcp connection. If you watch the socket tables via netstat on each end, the OS still considers that the existing connection is there and is waiting on tcp recovery. There is NO reconnection occuring in this scenario.\n0.9 didnt handle this cookie either so it is a feature and not regression. I personally dont consider it to be a blocker either.\n. It's not usable yet but I made a branch with prototype here, atong@9af2a23173\nI think some api changes are needed for auto-reconnection to be truly practical (eg. better handle the blocking conditions during connection & reconnection, select/transport handling). It'll affect all clients though, imo maybe better suited for post 1.0..\n. @dsyou20 can you retest? I logged in around 9:00CST and the fix is working for me.\n. Regression.\n. #252 is a related issue (wrong file opened by mspaint). Closed that as there's no duplicate issue mechanism.\nThis bug can cause issues with file/directory deletes as well.\n. Just for record keeping, my test branch is here.\nhttps://github.com/atong-tcs/FreeRDP/tree/rdpdr\nI've not had a chance to repro the rename&reopen issues (a quick test worked for me), but I pushed some additional debug messages to the test branch that may be helpful (ref atong-tcs@ac55807e1a4bf898b909f1265bb4f39d7d4cd9a9)\nNote that if you reconnect, I've noticed that you may have to reopen the dirs from the mount point.\n. After retesting by avollmerhaus and reviewing generated WITH_DEBUG_SVC logs, it appears that basic wildcard support is working.\nThe xls and file removal issues mentioned are still there but I believe that they are separate bugs/unrelated to the disk_file_query_directory() issue described. Will probably tracking those separately.\n. Only the simple case * and non-wildcard matching is implemented. \nSee section 7 for the full wilcard logic, here's another link to it. http://go.microsoft.com/fwlink/?LinkID=140636\n. const's are good imo.\n. VRDP doesnt seem to like freerdp's rdp_client_connect_demand_active() sequence; VRDP doesnt reply after that.\n. I think I fixed this. Let's track this in #309.\n. Hi, I tried to reproduce this when you mentioned this error on the mailing list but did have luck (I was able to fix the rename issue though).\nCan you describe in detail how test.bmp is created? Also, what happens if you do the same operation, but instead create it into an empty directory? So linux side the file would be: /media/TESTDIR/test.bmp.\n. This is related to #228, mspaint is opening the wrong file. For the newly created directory case, it's seeking on \".\"\nClosing this issue, and let's track it there..\n. +1, I pointed out the cmake module and floppym made it work.\n. #301 might fix this..\n. If you rebuild with current git, can you try adding the --dbg-x11 argument and get a stack trace via gdb?\n. I repro'd it and it's _MOTIF_WM_HINTS.. but I think it should be safer to just create all the atoms that we need.\n. I think this should be libpcsc backwards compat.. did you test by chance?\n. thanks\n. I am now encountering this as well on reconnection to an existing session. Prior to it, I had done many reconnects to the same session without issue, but now it does it everytime with the same bad index.\nIf there is a bad index then an error pdu needs to be sent to the server, maybe TS_BITMAP_CACHE_ERROR_PDU or TS_OFFSCRCACHE_ERROR_PDU (havent looked into it further).\n. His server is ws2008r2, I believe it was running at -a 16. -sw gdi doesnt not seem to help, nor -a32.\n(ignore my terminal window in bottom right)\n. If running locally, you want\n.. --plugin channels/rdpdr/rdpdr.so --data channels/rdpdr/disk/disk.so:...\n. You have --app without --plugin <..>/rail.so\n. I have seen this also in a pre-1.0.1 build. Is this bug still occuring in the current git?\n. Even with playing with tortoisesvn & diff I've still not been able to reproduce it myself..\nIf I had to guess I think scrolling & new locations of a previously cached bitmap may have something to do with it.\n. Please test latest git, or the maintenance branch. Thanks.\n. As a workaround, does removing pulse from the build or removing the pulse module (rdpsnd_pulse.so) work?\n. What is your version of pcsc-lite? ws2k8r2 was the initial devel/test platform for scard support in 1.0.\n. Does the reader/card just not show up or is there an error/failure/lockup on trying to access the card? Do you have any interesting errors from pcscd? (and maybe double check that sc redirection is not disabled server-side?)\n. I believe kiilerix has fixed this in master.\n. Closing, will track cert issue in issue #518\n. Just a stab in the dark, does --no-fastpath make things work?\n. I think one of the fastpath input commands is buggy..\n. I believe kiilerix has fixed this.\n. It looks like SHA: 61aa1dfb797f370525a91cb841c01d8aa1c8be0b broke FIPS encryption support in 1.0.1.\n. 542a472b2e5e4c48639085c6b543d6a30d00888f should be a better temporary workaround. The real fix is to properly implement encrypting those fastpath packets.\n. seriously? https://github.com/FreeRDP/FreeRDP/issues/440#issuecomment-4034551\n. Is this still an issue?\n. This is probably best discussed on the mailing list -- and we should then document the results on the wiki.\n. Can you verify that this works with the microsoft client in non-nla mode?\n. I meant when you have the windows client not using nla mode. Last I tried it had the double login behavior as well but that was ws2008 (no r2) and memory may be sketchy.\n. @sleekmountaincat correct asides from fixing the cert checks (though issue #518 is already open for that).\n. Let's get some debugging info on what window sizes / coordinates is sent by the server. Just wondering if this is related to the negative coords..\n. Reproduced.. someone broke the compression code.\n. No idea, I just know I cant ever reconnect to a running session as it's redrawing the desktop because the rdp6 code hits some infinite loop (100% cpu) or memory corruption. It's really obvious that it is broken and unusable.\n. let's track it in the other issue.\n. Is this in the 1.0-stable branch?\n. What version is pcscd? I think 1.5.x and some 1.6.x were broken.\n. Please try 1.6.7\n. The entire pcscd log (from start of xfreerdp session) would be helpful. It is difficult to say whether it is a pcsc-lite issue, freerdp scard issue, or something on the Windows side.\nHowever, I did not see the note regarding redirection earlier. I will try to test that.\n. Use a newer cmake or as a workaround, from root of freerdp source tree, run:\n% echo \"pkg_check_modules(ALSA alsa)\" > cmake/FindALSA.cmake\n. Let's track in issue #522.\n. I do see this in master (will fix shortly), but 1.0.1 and 1.0-stable should work.\n. I dont have a Solaris machine available. Can you try manually adding '-mt' to CMAKE_C_FLAGS and do a clean build?\nThanks.\n. Ok, sounds like we need the cmake statements to detect solaris & whether gcc ('-threads') or SUNWspro ('-mt') is needed for CMAKE_C_FLAGS.\n. That option already exists (also -K).\n. That is experimental code. That being said, create ~/.freerdp/server, and put a pair of x509 certs there (pem format: server.crt & server.key).\n. not sure if --sec rdp works yet in server mode..\n. Just for reference, what smartcard infrastructure (software, drivers, etc) is used on the windows side? Thanks.\n. ",
    "nils-a": "IMO \"breaking\" would be more consistent. But I really have no strong\nfeelings towards one or the other.\n. @Marc-Andr\u00e9 you mean like making X11 a required dependency unless -DWITHOUT_X11 is specified?\nI really like the idea of having a list of optional dependencies including a description of things that work/wont work.\n(i.e. I'd really like to know what xext does ;-) ...)\n. Agreed, but then we'd need to define what to require as a default and what not.\nI think the find_optional_package macro could be easily modified to meet this.\nSomething like\nfind_suggested_package(ALSA) - to have a optional dependency that can\nbe disabled\nfind_opitonal_package(ALSA) - to have a optional dependency that has\nto be enabled\nBoth would have no more \"auto-detection\"...\n. hard dependencies : find_package(PKG REQUIRED)\nand then two macros:\nsoft dependencies : find_suggested_package(PKG)\noptional dependencies : find_optional_package(PKG) (<-- not the way it is today...)\nwe could also make a simple find_required_package(PKG) for the first case...\n. ok - so some suggestions:\nthese are clear requirements:\n  OpenSSL\n  ZLIB\n  Threads\nI'd suggest alsa and in turn optionalize pulseaudio:\n  ALSA\n  PulseAudio\nsuggestions:\n  Cups\n  XKBFile\n  X11\n  Xext\n  Xcursor\nOptionals:\n  cunit (do \u201enormal\u201c users run tests to build?)\n  DirectFB (not sure here)\n  Xinerama (not everyone has 2 displays, right?)\n. @awakecoding: agreed for xinerama. But cups - is there an alternative?\n. so it's suggested to build with cups, then ;-)\n. I stacked a new commit on top doing exactly this:\nthere are 3 macros:\n hard dependencies : find_required_package(PKG)\n soft dependencies : find_suggested_package(PKG)\n optional dependencies : find_optional_package(PKG)\nand every find_package has been switched to one of the three.\n. ",
    "psamek": "I run rdesktop on thin client (booted from lan) without any window manager by:\n\nX :0 &\nDISPLAY=:0 rdesktop -f -u pav winserver\nBut with freerdp 1.0 I get:\nX :0 &\nDISPLAY=:0 xfreerdp -f -u pav --sec rdp winserver\nSegmentation fault\n\nThe version 0.8 was ok.\n. I am sorry, I am using dwm (http://dwm.suckless.org). No change, I get the \nsame error with the last git sources. In xfce it works. The situation \nwithout any WM I will test tomorrow.\nbash-4.2$ xfreerdp -z --no-nla -d dom -u pav winserv\nPassword: \nSegmentation fault\nThanks, Pavel.\nOn Sep 20 2011, Marc-Andr\u00e9 Moreau wrote:\n\n@shlevy\nI just installed xmonad in an ubuntu virtual machine (11.04) and I was \nable to launch FreeRDP without problems. Can you confirm that it now \nworks for you as well? I'd like to close this ticket otherwise\n. Sorry for the delay...\n\nStill the same error:\nwith -f switch\nX Error of failed request: BadAtom (invalid Atom parameter)\nMajor opcode of failed request: 18 (X_ChangeProperty)\nAtom id in failed request: 0x0\nSerial number of failed request: 38\nCurrent serial number in output stream: 46\nwithout -f switch\nX Error of failed request: BadAtom (invalid Atom parameter)\nMajor opcode of failed request: 18 (X_ChangeProperty)\nAtom id in failed request: 0x0\nSerial number of failed request: 33\nCurrent serial number in output stream: 37\nI will try to prepare the dbg output as atong-tcs requested....\n. Yes, I am using sources\nFreeRDP-FreeRDP-c5a2cf3/\nBut I have troubles with gdb, whenever I run with --dbg-x11, it stops responding after connected to server (until closed by ctrl-C)\n[New Thread 0xb7adab70 (LWP 862)]\nEnabling X11 debug mode.\nconnected to w2008server:3389\n^C\n. Yes! It is. Thanks\n. @badfiles \nYou could add -msse -mmmx -msse2 to CFLAGS, but i386 doesn't have sse2, so it will crash when you run it on i386.\n(http://en.wikipedia.org/wiki/SSE2)\n. ",
    "shlevy": "jiten19: I understand that tiling wms are not supported, but a segfault is still a bug. A graceful failure message would be better.\n. psalm: That's almost certainly cause by the same issue.\n. @awakecoding: Works fine on xmonad now, thanks!\n. The latest commit adds a bit of overhead but makes it more likely that the terminal will be reset properly. Signal handling would be better but I don't have time to figure out if any signal handlers are already in place in the program.\n. Current code should work fine. I will try to find time to work on more robust error handling and getting this working on Windows and directfb in the near future.\n. @awakecoding: Should I work on this? I'm not sure exactly what this would entail, what should behave differently than it does currently?\n. Note that this should also carry over perfectly well to dfreerdp, though I haven't yet tested that yet. freerdp on Windows will require a completely different approach to turning off ECHO on the terminal, so that will take some more work to get functional.\n. The latest commit set breaks up the pull request into smaller bits, most importantly adding an initial commit that copies over the OpenSSH files verbatim\n. If you want me to roll my own getpass/readpassphrase, that's fine, I just thought I'd see if you wanted this one since it already exists. As for getpass, the first line in its manpage is \"This function is obsolete. Do not use it.\", so I'm skeptical.\n. Ok, I'll do my own.\n. Also, right now this is just errno = ENOSYS on Windows, which I will work on after I (or someone else) get passphrase_read working on Windows\n. ",
    "dcolascione": "I also see this segfault with XQuartz under OS X.\n. ",
    "meosborne": "Sorry for the delay in replying, I've been away.\nEnvironment:\nClient: Fedora 14, Gnome 2, metacity wm, not composited\nServer: 2008 R2 Standard\nApps:\n    Medisys PM (medical practice management)\n    MedConnect EHR (electronic health record)\n. It's definately improved. LIke you said, not perfect, but it seems to be working ok.\n. :-) Thanks! Everything is now useable on my 16-bit displays.\n. I have a similar problem with Acrobat Reader 9. When trying to save a file without changing the filename to a redirected driver I get \"a device attached to the system is not functioning\". The directory contents can be listed, however. In the terminal, the message \"Warning disk_process_irp_create (94): failed to create \\zxz.pdf\" is printed.\nIf I change the filename to \"test\" and hit save, the filename gets replaced by \"\\tsclient\\test\\test.pdf\\\" and I get an illegal characters in filename. Note the trailing \"\\\" at the end of the filename.\n. I've done some further investigating on this and it appears to not be a freerdp bug. Here's some info for others seeing this issue:\nhttp://support.microsoft.com/?kbid=2513330. \nThis is what was causing my issue. I have a 32-bit app on 2008R2. The app starts the splwow64 process  so it can print. It turns out that that process has a 3-minute timeout before it exits. That leaves the user session on the server active until it quits. You can tell the server that this process is ok to terminate immediately by adding the following registry key:\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\Sysprocs]\nValue name: splwow64.exe\nData type: REG_DWORD\nBase: Hex \nValue data: 0\nOf course, you must have admin access to the server to do this.\n. Just using --no-bmp-cache (without the --gdi sw) fixes the missing fonts. However the segfault still occurs.\n. Done. Here ya go:\nOpaqueRect Primary Drawing Order (0x0A)\nOpaqueRect Primary Drawing Order (0x0A)\nOpaqueRect Primary Drawing Order (0x0A)\nOpaqueRect Primary Drawing Order (0x0A)\nOpaqueRect Primary Drawing Order (0x0A)\nMultiOpaqueRect Primary Drawing Order (0x12)\nWindowing Alternate Secondary Drawing Order (0x0B)\nWindowing Alternate Secondary Drawing Order (0x0B)\nOn Mon, 2011-10-10 at 07:38 -0700, Marc-Andr\u00e9 Moreau wrote:\n\ndefine WITH_DEBUG_ORDERS 1\n\n\nMichael\n. The missing text problem is solved, but I still a segfault under remoteapp. The program main screen appears and it pops up a small window for a login. I can fill in this window and login and the program attempts to redraw the background of the main window. The login window disappears and then background turns black and then I get a segfault. The background should be a picture of the company logo.\n. still get segfault using remoteapp with current git.\n. Done. Here's the output:\nloading plugin rail\nconnected to fs5:3389\nDBG_GDI gdi_bitmap_new_ex (409): gdi_bitmap_new: width:1440 height:900 bpp:16\nDBG_GDI gdi_bitmap_new_ex (409): gdi_bitmap_new: width:64 height:64 bpp:32\nDBG_GDI gdi_bitmap_new_ex (409): gdi_bitmap_new: width:64 height:64 bpp:32\nDBG_RAIL rail_order_recv (409): Received Handshake PDU, length:8\nDBG_RAIL rail_send_pdu (115): Sending Handshake PDU, length:8\nDBG_RAIL rail_send_pdu (115): Sending Client Status PDU, length:8\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:18\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:16\nDBG_RAIL rail_send_pdu (115): Sending Execute PDU, length:22\nDBG_RAIL rail_order_recv (409): Received System Parameters Update PDU, length:9\nDBG_RAIL rail_order_recv (409): Received System Parameters Update PDU, length:9\nDBG_RAIL rail_order_recv (409): Received Execute Result PDU, length:26\nDBG_RAIL window_state_update (143): ownerWindowId:0x0001004E\nDBG_RAIL window_state_update (147): windowId=0x1006C ownerWindowId=0x1004E\nWindow Styles:\n{\n    WS_SYSMENU\n}\nExtended Window Styles:\n{\n    WS_EX_APPWINDOW\n    WS_EX_TOOLWINDOW\n}\nDBG_RAIL window_state_update (163): ShowState:0\nDBG_RAIL window_state_update (183): Client Area Offset: (582, 363)\nDBG_RAIL window_state_update (192): Client Area Size: (275, 190)\nDBG_RAIL window_state_update (211): Window Offset: (579, 344)\nDBG_RAIL window_state_update (220): Window Client Delta: (3, 19)\nDBG_RAIL window_state_update (229): Window Size: (281, 212)\nDBG_RAIL window_state_update (256): Window Visible Offset: (579, 344)\nDBG_RAIL window_state_update (273): Visibility Rect #0: left:0 top:0 right:281 bottom:212\nDBG_RAIL window_state_update (143): ownerWindowId:0x00000000\nDBG_RAIL window_state_update (147): windowId=0x1004E ownerWindowId=0x0\nWindow Styles:\n{\n    WS_BORDER\n    WS_CAPTION\n    WS_CLIPCHILDREN\n    WS_CLIPSIBLINGS\n    WS_DLGFRAME\n    WS_GROUP\n    WS_MAXIMIZE\n    WS_MAXIMIZEBOX\n    WS_MINIMIZEBOX\n    WS_OVERLAPPEDWINDOW\n    WS_SIZEBOX\n    WS_SYSMENU\n    WS_TABSTOP\n    WS_THICKFRAME\n    WS_VISIBLE\n}\nExtended Window Styles:\n{\n    WS_EX_APPWINDOW\n    WS_EX_CONTROLPARENT\n    WS_EX_WINDOWEDGE\n}\nDBG_RAIL window_state_update (163): ShowState:3\nDBG_RAIL window_state_update (183): Client Area Offset: (0, 50)\nDBG_RAIL window_state_update (192): Client Area Size: (1016, 741)\nDBG_RAIL window_state_update (211): Window Offset: (-4, 27)\nDBG_RAIL window_state_update (220): Window Client Delta: (4, 23)\nDBG_RAIL window_state_update (229): Window Size: (1024, 768)\nDBG_RAIL window_state_update (256): Window Visible Offset: (0, 27)\nDBG_RAIL window_state_update (273): Visibility Rect #0: left:0 top:0 right:1020 bottom:317\nDBG_RAIL window_state_update (273): Visibility Rect #1: left:0 top:317 right:579 bottom:529\nDBG_RAIL window_state_update (273): Visibility Rect #2: left:860 top:317 right:1020 bottom:529\nDBG_RAIL window_state_update (273): Visibility Rect #3: left:0 top:529 right:1020 bottom:768\nDBG_RAIL rail_send_pdu (115): Sending System Command PDU, length:10\nDBG_RAIL rail_send_pdu (115): Sending Activate PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending System Command PDU, length:10\nDBG_RAIL window_state_update (147): windowId=0x1006C ownerWindowId=0x1004E\nWindow Styles:\n{\n    WS_BORDER\n    WS_CAPTION\n    WS_CLIPCHILDREN\n    WS_CLIPSIBLINGS\n    WS_DLGFRAME\n    WS_SYSMENU\n    WS_VISIBLE\n}\nExtended Window Styles:\n{\n    WS_EX_APPWINDOW\n    WS_EX_CONTROLPARENT\n    WS_EX_TOOLWINDOW\n    WS_EX_WINDOWEDGE\n}\nDBG_RAIL window_state_update (163): ShowState:5\nDBG_RAIL rail_WindowIcon (65): Window Icon: 32x32@16bpp cbBitsColor:2048 cbBitsMask:128 cbColorTable:0\nDBG_RAIL rail_WindowIcon (65): Window Icon: 16x16@16bpp cbBitsColor:512 cbBitsMask:64 cbColorTable:0\nDBG_RAIL window_state_update (147): windowId=0x1004E ownerWindowId=0x0\nWindow Styles:\n{\n    WS_BORDER\n    WS_CAPTION\n    WS_CLIPCHILDREN\n    WS_CLIPSIBLINGS\n    WS_DLGFRAME\n    WS_GROUP\n    WS_MAXIMIZEBOX\n    WS_MINIMIZEBOX\n    WS_OVERLAPPEDWINDOW\n    WS_SIZEBOX\n    WS_SYSMENU\n    WS_TABSTOP\n    WS_THICKFRAME\n    WS_VISIBLE\n}\nExtended Window Styles:\n{\n    WS_EX_APPWINDOW\n    WS_EX_CONTROLPARENT\n    WS_EX_WINDOWEDGE\n}\nDBG_RAIL window_state_update (163): ShowState:5\nDBG_RAIL window_state_update (183): Client Area Offset: (4, 23)\nDBG_RAIL window_state_update (192): Client Area Size: (1016, 726)\nDBG_RAIL window_state_update (211): Window Offset: (0, 0)\nDBG_RAIL window_state_update (229): Window Size: (1024, 753)\nDBG_RAIL window_state_update (256): Window Visible Offset: (0, 0)\nDBG_RAIL window_state_update (273): Visibility Rect #0: left:0 top:0 right:1024 bottom:344\nDBG_RAIL window_state_update (273): Visibility Rect #1: left:0 top:344 right:579 bottom:556\nDBG_RAIL window_state_update (273): Visibility Rect #2: left:860 top:344 right:1024 bottom:556\nDBG_RAIL window_state_update (273): Visibility Rect #3: left:0 top:556 right:1024 bottom:753\nDBG_RAIL rail_send_pdu (115): Sending Activate PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending Activate PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending Activate PDU, length:9\nDBG_RAIL window_state_update (143): ownerWindowId:0x00000000\nDBG_RAIL window_state_update (147): windowId=0x10082 ownerWindowId=0x0\nWindow Styles:\n{\n    WS_CLIPSIBLINGS\n    WS_POPUP\n    WS_VISIBLE\n}\nExtended Window Styles:\n{\n    WS_EX_TOOLWINDOW\n}\nDBG_RAIL window_state_update (163): ShowState:5\nDBG_RAIL window_state_update (183): Client Area Offset: (0, 0)\nDBG_RAIL window_state_update (192): Client Area Size: (0, 0)\nDBG_RAIL window_state_update (211): Window Offset: (0, 0)\nDBG_RAIL window_state_update (220): Window Client Delta: (0, 0)\nDBG_RAIL window_state_update (229): Window Size: (0, 0)\nDBG_RAIL window_state_update (256): Window Visible Offset: (0, 0)\n. We use two different 2008 R2 servers, one is ours, the other\nis not. I get the same issue on both.\nI am testing with a 32-bit x86, Fedora 14 based system. We use\n32-bit x86 based thin-clients as well.\nThe older freerdp does not have this issue. I had color issues \nwith 16-bit screens (#121) before and they were fixed, but something \nchanged somewhere which broke them again.\nOn Fri, 2011-11-11 at 12:09 -0800, Marc-Andr\u00e9 Moreau wrote:\n\n@meosborne: I have configured my X11 server to use 16bpp, and yet\nI am unable to reproduce the issue. I have tried with both Windows Server\n2008 R2 SP1 and Windows XP for all color depths (8,15,16,24,32) and all\n work fine for me.\nThe problem you describe is most likely linked with opaque_rect orders, \nwhere a rectangle is a filled with an opaque color. The color would be \nincorrectly converted, leading the the symptoms you experience. The \nother images that are displayed properly are likely converted bitmaps \nthat were properly converted.\nI assume that your Windows Server 2008 R2 system has theming disabled, \nso I disabled it as well (I usually enable themes on my test server). \nThis is likely required to attempt to reproduce the issue, otherwise \nthe window borders will be drawn using the same messages as those that \nwork fine for you.\nWhat is your client processor architecture? Is it x86, ARM, or something \nelse? Endianness is a possible cause for such bugs.\nHas anybody else experienced the same issue?\n\n\nMichael\n. More info. The colors are correct if I use --gdi sw. It was the reverse in issue #121.\n. I am not using a xorg.conf. Here is some info from the Xorg.log file:\n(II) MACH64(0): Creating default Display subsection in Screen section\n        \"Default Screen Section\" for depth/fbbpp 16/16\n(==) MACH64(0): Depth 16, (--) framebuffer bpp 16\nOn Sun, 2011-11-13 at 12:02 -0800, Marc-Andr\u00e9 Moreau wrote:\n\n@meosborne: can you provide your xorg.conf?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/199#issuecomment-2724028\n\n\nMichael\n. xfi->bpp= 16, xfi->depth= 16\nOn Sun, 2011-11-13 at 12:09 -0800, Marc-Andr\u00e9 Moreau wrote:\n\n@meosborne: I just had an idea, can you print out the values of\n xfi->bpp and xfi->depth? that might give me a hint\n\n\nMichael\n. Here ya go...\ncolor = opaque_rect->color;\nwindow title bars:            now correct\ndesktop desktop background:   no change\nother areas (eg, background of dialog boxes): no change\ncolor = freerdp_color_convert(opaque_rect->color, xfi->srcBpp, 32,\nxfi->clrconv);\neven more color artifacts, no improvements at all\ncolor = freerdp_color_convert(opaque_rect->color, xfi->srcBpp, 24,\nxfi->clrconv);\neven more color artifacts, no improvements at all\nOn Sun, 2011-11-13 at 14:48 -0800, Marc-Andr\u00e9 Moreau wrote:\n\ncolor = opaque_rect->color;\notherwise also try:\ncolor = freerdp_color_convert(opaque_rect->color, xfi->srcBpp, 32,\nxfi->clrconv);\nor\ncolor = freerdp_color_convert(opaque_rect->color, xfi->srcBpp, 24,\nxfi->clrconv);\n\nMichael mozstuff@yahoo.com\n. Everything looks a-ok. Just a quick test, but I saw no color artifacts\nat all. Everything looks great. Thanks!\n\nOn Tue, 2011-11-15 at 11:12 -0800, Marc-Andr\u00e9 Moreau wrote:\n\nI just pushed a fix, please test it out. See if it fixes the problem partially\n or completely. I looked at libfreerdp-gdi's implementation and found out that \nthe colors were always converted to 32bpp, while in X11-GDI it would convert it \nto xfi->depth which would be 16bpp in your case. The problem is that \nXSetForeground() takes a color in 32bpp format, not 16bpp, if I understood correctly.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/199#issuecomment-2749482\n\n\nMichael\n. It appears that the issue is triggered by the presence of a Gnome 2 panel at the top of the screen. The offsets in those pictures are exactly the height of my top panel. If there is no panel at the top of the screen, the problem does not occur.\n. Your patch did resolve the duplicated area. However, now when you move a window, a copy of the window remains on the screen even after the movement stops. The copy will only vanish after there is some additional input once the move is complete. This can be a bit disconcerting. Also, sometimes the moved window will be corrupted when that update occurs.\n. Yes, I built from git.\nRe #1: I see, that explains the window copy. Makes sense.\nRe #2: Wouldn't the mouse button up event mark the end of the movement?\nThe underlying rdp windows do not update until I either move the mouse,\npress a key, or click a button.\nWhen that update occurs sometimes everything is fine, sometimes mostly\nfine (minor artifacts), and sometimes the moved window is messed up\nbadly.\nAlso, occasionally, when I move a window via titlebar the background\ndoes update as I move. It kinda looks like mouse pointer trails. That\nbehavior is consistent if I use alt-mouse button to move a window\ninstead of the title bar.\nThis is with current git, using software gdi, as I have color trouble\nwhen using hardware gdi.\nOn Sun, 2011-12-11 at 13:37 -0800, David Sundstrom wrote:\n\nDid you build from git?  I checked in a couple additional fixes yesterday.\nIf you have problems with it after that, let me know exactly how you\nreproduce the problem.\nA couple of notes:\n1)  If the window you are moving overlaps another RDP window, that\nother RDP window won't update until after the move completes.  That is\njust the way local moves work, as the updates don't get sent to the\nRDP server until the move is over.\n2)  The only way to know on X windows when a move is complete is when\nI see some other event besides a configure notify. Perhaps this is\nwhat you mean by \"some additional input\", but if you could be\nspecific, it will help.\nThanks\nDavid\nOn Sun, Dec 11, 2011 at 9:50 AM, meosborne\nreply@reply.github.com\nwrote:\n\nYour patch did resolve the duplicated area. However, now when you move a window, a copy of the window remains on the screen even after the movement stops. The copy will only vanish after there is some additional input once the move is complete. Also, sometimes the moved window will be corrupted when that update occurs.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/229#issuecomment-3097803\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/229#issuecomment-3099871\n\n\nMichael mozstuff@yahoo.com\n. Excellent explanations. Many thanks for that. The only thing that really\ncauses trouble is when the moved window gets badly messed up. I've tried\nto find some sequence that will reliably reproduce the corruption, but\nhave been unable to find anything definitive so far.\nI have noticed that if I move a window via the titlebar, release the\nmouse button, then without moving the mouse, simply click the titlebar\nto activate the update and signal the end of move seems to trigger the\ncorruption more often.\nAnything I can do help find out the problem?\n. That does fix it. There's nothing special to reproduce it, at least\nhere. I'm talking to a 2008R2 SP1 server and used the following options\nfor xfreerdp:\nxfreerdp --gdi sw -n test -u userid -p password --app --plugin rail\n--data \"||EMR\" -- server\nThe picture that I posted is the first thing the program puts up. The\nprogram is an electronic health record program by Medisys, Inc.\nI am using Fedora 14, Gnome 2.32, a 16-bit X display @ 1440x900.\nOn Sun, 2011-12-18 at 10:02 -0800, Marc-Andr\u00e9 Moreau wrote:\n\n@meosborne you can likely use --no-glyph-cache to work around the \nproblem in the meantime, could you guide us through the steps \nnecessary to reproduce the issue?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/284#issuecomment-3195917\n\n\nMichael mozstuff@yahoo.com\n. Yes, everything is readable again! Many thanks!\nOn Sun, 2012-01-08 at 14:44 -0800, Marc-Andr\u00e9 Moreau wrote:\n\nThe same problem was identified by Pawel on IRC, and a patch was just pushed. This \nissue should now be resolved, and affected libfreerdp-gdi's BitBlt_DSPDxax_16bpp() method.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/284#issuecomment-3405330\n\n\nMichael\n. +1\n. Ok, this is weird. This appears to only happen when I am doing a double rdp, i.e. linux->terminal server->terminal server. I am using rail to to talk to my server. The app on my server is mstsc.exe which is talking to a remote TS gateway.\nIf I change my remoteapp from mstsc.exe to cmd.exe and then manually launch mstsc.exe everything works fine. If I set my remoteapp to do that automatically it only works if I leave the cmd.exe running. IOW\ncmd /c mstsc.exe = no text input\ncmd /k mstsc.exe = works fine\nIf I do /k and then close the cmd.exe window, all text input to the mstsc.exe window ceases.\n?\n. Further info. Definately seems to be focus related. Simply clicking on a local windows is enough to kill input to the rail window despite activating it. The only way to restore input focus is activate a rail window which is to activate a rail window which is from the local server, and then activate the rail window which is from the TS gateway.\nAlso, while clicking a local window does change the focus to the local window, the remote rail window never changes to indicate that focus has been removed.\n. This behavior was introduced by commit 8f38bdb87a70e9dd61feadc3c50fc767c2b2c36d. Prior to that focus worked properly.\n. close and combined with #467\n. ",
    "EricYin": "Is Remotefx part completed? I built latest code, and tried wfreerdp remotefx on windows xp home client, it crashed.\n. hi yoonzh, \nI also tried to compile on windows xp, got same compile error, so I tried the what you said above. Got lots of syntax errors like \"Error    2   error C2059: syntax error : '}' C:\\Program Files\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h   6362    1   freerdp-utils\"\nI just used \"cmake .\" to generate vs2010 project after did changes you mentioned. Is there anything else I missed?\n. Thanks, I already made it work after making some changes based on yours, although after that I got some syntax errors, made it work after move/add #include \"windows.h\" to the top of c file. maybe I do not need to move/add if updating my vs2010 to sp1.\n. also, one question, do you know if wfreerpd client supports using GPU to decode remotefx data?\n. also note that if you project is copied to FAT32 drive, you need take care of FAT32 manfiest issue when building, there is one vs config there\n. sure,  I will try to open a pull request by the end of this week if possible.\n. the network is very slow, submitted duplicate issue, close this one.\n. ",
    "dorianj": "Closing -- please report wfreerdp issues in specific tickets. \n. I've identified several format list parsing issues and will be fixing them today or tomorrow. I believe this should fix some issues.\n. @NiKiZe @SteveDiG1 please try again with the latest code;  69ed9290c7 may fix your issue\n. is this on xfreerdp? Can you post your cmake params and the xfreerdp invokation you used, as well as the server flavor you're connecting to (server 2008? win 7? etc)\n. confirm: I'm getting the same output on OS X 10.7.2 with latest code, connecting to a Win08R2 server \n. Fixed. Tested on 10.7\n. Still valid: avcodec_alloc_context, avcodec_decode_audio3, and avcodec_open are still present in code.\n. @louyihua can you submit your changes to wfreerdp.c as a pull request?\n. Fixed, 2d3774e\n. probably related to #278\n. sure: https://gist.github.com/1511162\nSo offending line appears to be:\nXChangeProperty(xfi->display, window->handle, xfi->_NET_WM_ICON, XA_CARDINAL, 32,\n                PropModeReplace, (uint8*) xf_icon_prop, sizeof(xf_icon_prop) / sizeof(long));\n. should be fixed, please re-test\n. @psalm please re-test to confirm that this is fixed.\n. #278 #305\n. Confirm. freerdp_parse_args returns -1 when given --version, which xf_pre_connect interprets as failure.\nfreerdp_parse_args should return something other than -1 when --version, and xf_pre_connect should simply exit without printing a warning when it gets that code\n. Perhaps some UIs wouldn't want to exit even when providing version info? To me, it feels weird and inflexible to have a utility function in a library kill the program.\n. I'll properly fix this tomorrow; I think it'd be a shame to release a version of xfreerdp that says \"failed to parse arguments\" when you ask it for --version\n. Fixed, please close.\n. Fixed! Nice work.\n. Here's what you need to do:\n1. Fork this repo\n2. Clone your fork of the repo\n3. Make changes in your clone, commit, then push\n4. Submit a pull request\nhttp://help.github.com/fork-a-repo/\nI know it's a bit cumbersome for a small change, but once you get used to it, it's quite efficient.\n. I think this should be a blocker issue for 1.0 (at the very least, the manpage needs to be fixed)\n. This might be related to #171, caused by rail + cliprdr. Those plugins don't work together (#334), but certainly shouldn't cause a crash when loaded simultaneously.\nCan you post a backtrace please? \n. #334 tracks the interoperability of these two plugins, see there.\n. A screen cap shows nothing wrong, but it's garbled onscreen?\nIf you leave the bitmap cache enabled, but use --gdi sw, does it change anything? \n. What behavior do you see with mstsc (if possible for you to try it) connecting to the same machine?\nSome buffering is necessary with the protocol, but probably shouldn't be 2 seconds.\n. --ignore-certificate works for me . Please open a new ticket if it's still not working on HEAD.\n. Closing, appears to be a bad format. Please re-open if FreeRDP isn't reading ASN1's correctly.\n. I think this should be closed -- to my knowledge XV doesn't work on x11.app (`xvinfo' returns 'no adaptors present' for me)\n. @shou1518 no, you cannot use TSMF on mac inside X11.app.\n. > Another problem, I just don't know Why does media player play a movie so fast just like fast foward through freeRDP ?\nThis is because it's not loading an audio plugin. The server doesn't get any latency data from FreeRDP, so the movie goes really fast.\nPlease post your cmake log.\n. No response from submitter, closing. Please re-open if you are still experiencing this.\n. @Digimocloud - did this fix the issue for you?\n. Are you on the Ubuntu freerdp 1.01 version, or the latest git? I don't know that it would make a difference, but worth a shot if you're using the older version.\nIt sounds like there's a bit depth issue, but you said you tried different bit depths, so I'm not sure.\n. If you built from source, run sudo make uninstall. If you installed using a package manager, use it to remove xfreerdp.\n. Actually, proper uninstall sequence if you installed from code is: \nxargs rm < install_manifest.txt\n. Appears to have been fixed.\n. This is supported by the library, so new clients can support this.\nFor x11, we'd have to prompt on stdin after the connection is established to ask for other apps to launch. \n. Pulse is the default rdpsnd layer. It'll try to load pulse then will try alsa. If you adding -DWITH_ALSA=ON , you'll still get warnings in the console but it will work.\nIf you want to use ALSA without errors:\n    $ xfreerdp --no-tls --ignore-certificate --plugin rdpsnd --data alsa -- -u user -p pass IP\n. What xfreerdp does is 'true' multimonitor support: it uses the RDP multimonitor extension to have true multiple screens, each of which can be differently sized.\nSpanning would be 'fake' multimonitor support, as it would appear to the server that there's only one (large) monitor. I guess this could be an option, but why would you want to do this? Because Windows doesn't handle multiple monitors like you like it?\n. Appears to be related to #536. If you want to make a build for right now, try disabling SSE until SSE is fixed.\n. What version of GCC and linux are you using? Also can you post your cmake options?\n. You mentioned Linaro, are you cross compiling for x86 from ARM?\nThe last time I compiled on 11.10 was about a week ago; when I get home I'll compile on that virtual machine and report my results. FWIW, SSE works for me on OS X + llvm.\n. I'm getting same errors on Ubuntu 11.10 (on a sse2 compat processor):\n```$ uname -a\n3.0.0-16-generic #29-Ubuntu SMP Tue Feb 14 12:49:42 UTC 2012 i686 i686 i386 GNU/Linux\n$ gcc --version\ngcc (Ubuntu/Linaro 4.6.1-9ubuntu3) 4.6.1\n\n. What OS are you seeing this on? On Ubuntu 12.04, only ctrl-enter triggers the key shortcut for me.\nThe code is thus:\nc\n        if ((xf_kbd_key_pressed(xfi, XK_Alt_L) || xf_kbd_key_pressed(xfi, XK_Alt_R))\n            && (xf_kbd_key_pressed(xfi, XK_Control_L) || xf_kbd_key_pressed(xfi, XK_Control_R)))\n        {\n            /* Ctrl-Alt-Enter: toggle full screen */\n            xf_toggle_fullscreen(xfi);\n            return true;\n        }\nso I don't know why it would trigger when only ctrl is pressed.\n. Good thinking, that's probably the most likely scenario.\nSome other clients use extra logic on gaining and losing focus to clear these things.\nI'll leave this open, it's certainly an annoying bug to live with.\n. @pfmooney Submit a pull request. \n. Closing -- if you think FreeRDP build system should change, please re-open.\n. 1. there is no log file -- only console output\n2. perhaps the gnome launcher is replacing %SYSTEMDRIVE% before it runs? Don't know\n3. post a screenshot please?\n. That is a big problem indeed! :)\nNot sure what's happening, I'll try to duplicate it locally; thanks for reporting.\nit's possible it's related to #514 and caused by negative window coords.\n. Latest git tree compiles fine for me. Please confirm,  @sleekmountaincat \n. If Windows compilation is broken, we should open a new ticket. This one should be closed.\n. @matsimon don't know if there is an issue with cmake or not, but generally with cmake you make inside a subdir, then if you need to totally clean, you can remove that entire folder and re-create. So at least there is a good workaround.\n. Yes, it's SL only.\n. Should be fixed. Please re-open if you're still experiencing the issue.\n. Icons are indeed messed up. I will fix the issue.\nThis is what MSpaint 2008r2 looks like from xfreerdp on 12.04\nhttp://imgur.com/Wf8Yx\nThe alpha channel is flipped upside down. And the green channel is very messed up. Blue and red channels appear to be fine.\n. Please provide a screenshot. \nCan you use those other flags temporarily to test?\n. Should probably use a #define constant instead of 31 in freerdp_parse_args and settings_new? \n. Fixed by 4bda6b5\n. 98d5b98:\n rail_orders.c looks fine to me (interesting that there were that many obvious leaks there)\n. I haven't tested it thoroughly, but it does compile.\nThere's a lot of added free() calls in error handling code that would be hard to test thoroughly, but overall I think it's an improvement. Should fix a few serious memory leaks.\n. @dirkdingus please confirm if this is fixed, thanks\n. Let's leave it open. There's still a crash bug.\n. Safe to merge.\n. I don't think there are any solid plans. Which codecs would you most like to see support for?\n. mkv isn't a codec, it's a container. If you have something that will let you watch mkvs in WMP, and the MKV has supported audio and video, it should already work. (I think :)\nmpeg4 video is already supported (h264), as is mpeg2.\nI believe FLV is supported by ffmpeg, though I don't know much more than that.\n. @shwarmy , Try this:\n    xfreerdp -u user -d domain --plugin drdynvc --data audin -- 192.168.1.100\n. I don't think you have Pulse installed on your computer. You can't simply copy libraries out of an rpm; they're linked to dependencies that the package manager will automatically grab for you.\nYou need to either use yum/whatever package manager you use to install the rpm, or build from the latest git source.\n. Closing. Please re-open if you are building from source, or installing using an 'official' distro package, and are still having trouble.\nThanks for using FreeRDP!\n. Safe to merge.\n. ~~RAIL is still working for me; does it crash immediately on login or later?~~\nedit: sorry, didn't see your description. Will look into it.\n. sunds, can you try this:\nhttps://github.com/dorianj/FreeRDP/tree/memcorruptfix a863568a15407ff1c542df5c77e242e31f95075e\nappears that free() is causing the issue; it was there before, so I'm not sure why bisect is showing any difference.\n. Good point:\n==28800== Thread 2:\n==28800== Invalid read of size 4\n==28800==    at 0x4242A10: freerdp_icon_convert (in /usr/local/lib/libfreerdp-codec.so.1.0.1)\n==28800==    by 0x804FFD6: xf_rail_SetWindowIcon (in /usr/local/bin/xfreerdp)\n==28800==    by 0x40E57FE: rail_WindowIcon (in /usr/local/lib/libfreerdp-rail.so.1.0.1)\n==28800==    by 0x40A2845: update_recv_window_info_order (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800==    by 0x40A2D1A: update_recv_altsec_window_order (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800==    by 0x4094383: update_recv_altsec_order (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800==    by 0x40945EC: update_recv_order (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800==    by 0x409E2C5: fastpath_recv_updates (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800==    by 0x409C388: rdp_recv_pdu (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800==    by 0x409C676: rdp_recv_callback (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800==    by 0x409FDCB: transport_check_fds (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800==    by 0x409C86D: rdp_check_fds (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800==  Address 0x5d79840 is not stack'd, malloc'd or (recently) free'd\nI'll write a fix.\n. https://github.com/dorianj/FreeRDP/tree/railiconmemfix should properly fix it (no valgrind errors reported) -- if it works for you, I'll submit as a pull request.\n. There is a session-wide icon buffers (AND and XOR buffers) that are re-used each time a new icon comes in over the wire; don't think that's a leak, even without update_read_window_delete_order being implemented.\nThere is a leak of the rdpIcon; I think a simple free() of it in rail_WindowIcon would fix that.\n. Concur -- in profiling tests with RFX enabled, the decode (even with SSE2) is taking up a big chunk. With it off, screen drawing is the heaviest stack.\nThis would probably improve disk / printer forwarding speeds as well.\n. You are correct: WinPR registry requires libxml2 now.\nI've updated the wiki to include this info. FYI: the wiki is editable by anyone with a Github account, so you're more than welcome to make these kinds of changes in the future. Thanks for reporting!\n. You do not have ffmpeg\u00a0(libavcodec) installed.\n. Here's an inspection of my FreeRDP install...\nalpha:/usr/local/lib/freerdp$ ldd tsmf_ffmpeg.so \n    linux-gate.so.1 =>  (0x00342000)\n    libfreerdp-utils.so.1.0 => /usr/local/lib/libfreerdp-utils.so.1.0 (0x001d9000)\n    libavcodec.so.53 => /usr/lib/i386-linux-gnu/i686/cmov/libavcodec.so.53 (0x00b23000)\n    libavutil.so.51 => /usr/lib/i386-linux-gnu/i686/cmov/libavutil.so.51 (0x00494000)\n    libc.so.6 => /lib/i386-linux-gnu/libc.so.6 (0x00845000)\n    libpthread.so.0 => /lib/i386-linux-gnu/libpthread.so.0 (0x00110000)\n    libdl.so.2 => /lib/i386-linux-gnu/libdl.so.2 (0x0012b000)\n    libvpx.so.1 => /usr/lib/libvpx.so.1 (0x00130000)\n    libvorbisenc.so.2 => /usr/lib/i386-linux-gnu/libvorbisenc.so.2 (0x004b6000)\n    libvorbis.so.0 => /usr/lib/i386-linux-gnu/libvorbis.so.0 (0x001ea000)\n    libtheoraenc.so.1 => /usr/lib/i386-linux-gnu/libtheoraenc.so.1 (0x0076b000)\n    libtheoradec.so.1 => /usr/lib/i386-linux-gnu/libtheoradec.so.1 (0x00215000)\n    libspeex.so.1 => /usr/lib/i386-linux-gnu/sse2/libspeex.so.1 (0x00232000)\n    libschroedinger-1.0.so.0 => /usr/lib/libschroedinger-1.0.so.0 (0x00253000)\n    libgsm.so.1 => /usr/lib/libgsm.so.1 (0x00311000)\n    libva.so.1 => /usr/lib/i386-linux-gnu/libva.so.1 (0x0073f000)\n    libm.so.6 => /lib/i386-linux-gnu/libm.so.6 (0x00343000)\n    libz.so.1 => /lib/i386-linux-gnu/libz.so.1 (0x0031f000)\n    /lib/ld-linux.so.2 (0x00b01000)\n    libogg.so.0 => /usr/lib/i386-linux-gnu/libogg.so.0 (0x00335000)\n    liborc-0.4.so.0 => /usr/lib/i386-linux-gnu/liborc-0.4.so.0 (0x0036f000)\n    libgcc_s.so.1 => /lib/i386-linux-gnu/libgcc_s.so.1 (0x003ff000)\nalpha:/usr/local/lib/freerdp$ file -L /usr/lib/i386-linux-gnu/i686/cmov/libavcodec.so.53\n/usr/lib/i386-linux-gnu/i686/cmov/libavcodec.so.53: ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV), dynamically linked, BuildID[sha1]=0x1ffec85ccc7e4789651df58f92dacded2a0bbbb0, stripped\nYour should look somewhat similar. If the libavcodec listed by ldd doesn't exist, then the dynamic linker won't be able to find it.\nDid you install from source, or from a package (rpm, deb, etc)?\n. You're welcome, thanks for using FreeRDP. \nFlash video isn't supported by FreeRDP yet, but there's a ticket requesting it, #604\n. You already have an open issue for the multimedia redirect (#621) issues, so closing this one. Our documentation isn't perfect, but we can only improve it with specific bug reports.\n. I just updated my Win2008R2 server, and can still connect to it with xfreerdp. I am using RDSH per-device licensing.\nHave you tried with one of MS's clients?\n. is it possible to instead just distribute a .vimrc in the root source directory?\n. Could you post a backtrace please?\n. I'm actually also seeing something like this myself when attempting to connect to a Win7 machine, I'll get a backtrace soon\n. No, not seeing it.\n. I'm assuming this is for the x11 client -- if not, please update your title again.\nx11 uses MotionNotify, and \"The granularity of MotionNotify events is not guaranteed, but a client that selects this event type is guaranteed to receive at least one event when the pointer moves and then rests.\" (http://tronche.com/gui/x/xlib/events/keyboard-pointer/keyboard-pointer.html)\nSo I think it's up to your x11 server how fast the events are sent; neither the client nor library is artificially limiting these messages.\n. I think this should fix #542.\n. Printer forwarding should work on Mac. Don't know what the issue is.\nHere's the bt I get:\n```\n0  0x00007fff820fcedf in __CFInitialize ()\n1  0x00007fff5fc0fe6f in __dyld__ZN16ImageLoaderMachO11doImageInitERKN11ImageLoader11LinkContextE ()\n2  0x00007fff5fc0fae7 in __dyld__ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE ()\n3  0x00007fff5fc0d2e4 in __dyld__ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE ()\n4  0x00007fff5fc0d27d in __dyld__ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE ()\n5  0x00007fff5fc0d27d in __dyld__ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE ()\n6  0x00007fff5fc0d27d in __dyld__ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE ()\n7  0x00007fff5fc0d27d in __dyld__ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE ()\n8  0x00007fff5fc0d27d in __dyld__ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE ()\n9  0x00007fff5fc0e0b7 in __dyld__ZN11ImageLoader15runInitializersERKNS_11LinkContextERNS_21InitializerTimingListE ()\n10 0x00007fff5fc031b9 in __dyld__ZN4dyld15runInitializersEP11ImageLoader ()\n11 0x00007fff5fc09657 in __dyld_dlopen ()\n12 0x00007fff841bd95b in dlopen ()\n13 0x00000001001c68a6 in freerdp_load_library_symbol (file=0x102100050 \"/usr/local/lib/freerdp/printer.dylib\", name=0x1004cc6e9 \"DeviceServiceEntry\") at load_plugin.c:152\n14 0x00000001001c69d2 in freerdp_load_plugin (name=0x7fff5fbffb8a \"printer\", entry_name=0x1004cc6e9 \"DeviceServiceEntry\") at load_plugin.c:201\n15 0x00000001004ca6ca in devman_load_device_service (devman=0x102100000, plugin_data=0x100502690) at devman.c:79\n16 0x00000001004caf1a in rdpdr_process_connect (plugin=0x100600000) at rdpdr_main.c:60\n17 0x00000001001ca033 in svc_plugin_thread_func (arg=0x100600000) at svc_plugin.c:265\n18 0x00007fff8d7c38bf in _pthread_start ()\n19 0x00007fff8d7c6b75 in thread_start ()\n```\na bit of info about my printer.dylib\nKimiko:~$ file /usr/local/lib/freerdp/printer.dylib\n/usr/local/lib/freerdp/printer.dylib: Mach-O 64-bit dynamically linked shared library x86_64\nKimiko:~$ otool -L /usr/local/lib/freerdp/printer.dylib\n/usr/local/lib/freerdp/printer.dylib:\n        printer.dylib (compatibility version 0.0.0, current version 0.0.0)\n        libfreerdp-utils.1.0.dylib (compatibility version 1.0.0, current version 1.0.1)\n        /usr/lib/libcups.2.dylib (compatibility version 2.0.0, current version 2.9.0)\n        /usr/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current version 1094.0.0)\n        /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 159.1.0)\n. Good find, @franckbrun , that does indeed appear to fix it. I've submitted a pull request.\n. Thanks for the report.\nTSG is not fully implemented yet, so you'll probably see crashes right now. We'll post / close  #386 when it's ready to use.\n. Yes, if you could implement it in libfreerdp-gdi, that would be great (you can test using --gdi sw). I don't have Paint Shop, so I can't test this, but it looks OK otherwise. Thanks for the patch!\nAlso, please set your editor to use tabs instead of spaces.\n. tsg isn't finished yet, so it's definitely going to crash. #386 is the original issue; I'll leave this open because the details might be helpful for awakecoding.\n. Also attaching a small cmakelists.txt fix for Apple. \n. What Windows software are you using? Do you get the same result when you save from Notepad or mspaint?\n. Should be fixed. Please re-open if you still see this.\n. Should expect very low CPU on host; the local machine might be 100% since the video will be decoded on the client CPU.\nIf you could, turn on DVC debugging and post a log? (this will require a re-compile, but will also make sure you have ffmpeg and appropriate sound installed)\n. @myhasti \n1-audio is transmitted compressed, and thus the client totally controls volume. Neither alsa nor pulse currently implement the volume stuff -- please report as a new issue if it's important to you\n2 - You should be able to put stuff in front of the video. re-open #461\n@maddevl does your xvideo work? what does `xvinfo' on the command line give you? My virtual machines don't work with xvideo.\n. git HEAD appears to be using avcodec_register_all, I can't find a trace of avcodec_init.\nPlease re-open if I'm mistaken.\n. Sorry, we were late on updating that particular API call; we do use macros in other parts of the ffmpeg code.\nIf you see any other deprecated calls in the current code, please open a pull request, or create a new issue so we can fix them before it breaks things for folks.\nOther lower parts of the code base is in flux, so I believe a new release will come once that calms down.\n. Win08R2; it's NLA only, it'd probably work on old-style encryption.\nI'm guessing there's some sort of openssl incompatibility, which is why it works on my Mac (which has openssl 0.9.8r)\nConnection string is just:\nxfreerdp -u ** -p ** 192.168.1.200\n. Confirmed.\n. Clean to merge. Works for me on Terminal.app as well as xterm\n. Closing as fixed -- please re-open if it's not totally finished. Thanks for the code contribution!\n. IF you play a video on youtube.com, it's not using video redirection: TSMF is only supported on Windows Media Player. Or did you download the FLV and play it with WMP?\n. Could you please create a new branch, cherry pick the request you want to submit, and send a new pull request?\n. Oops, misread the diff! This is clean to merge.\n. ",
    "fedsed": "Serial ports Redirection, but devices on them don't work.\nxfreerdp --plugin rdpdr --data serial:COM1:/dev/ttyS0 serial:COM2:/dev/ttyUSB0 -- hostname\n. I have a barcode scanner CipherLab 8300.\nSerial ports are visible through \"change port\" in windows server 2003. \nI run the program for reading from the device of the information, and she writes \"time out\".\nfreerdp version of the 21.11.11.\n/usr/local/freerdp/bin/xfreerdp -u xxx -d xxx -a 16 -g 1024x768 -x l --plugin cliprdr --plugin rdpdr --data printer:\"HP-LaserJet-4050\" serial:COM1:/dev/ttyS0 serial:COM2:/dev/ttyUSB0 -- hostname\nloading plugin cliprdr\nloading plugin rdpdr\nconnected to hostname:3389\nconnected to hostname:3389\nconnected to hostname:3389\nnull server certificate\nregistered device #1: PRN1 (type=4 id=1)\nregistered device #2: COM1 (type=1 id=2)\nregistered device #3: COM2 (type=1 id=3)\nWhen referring to the serial port of a in console is nothing.\nWhen the session ends in Windows the console output:\n unfinished ...\n+++ killed by SIGSEGV +++\nP.S. In xfreerdp version 0.8.2 everything works fine.\n. If you use a single port is still not working.\nhttps://gist.github.com/1385569\n. patch does not work :(\nhttps://gist.github.com/1423047\n. The impression that xfreerdp not understand the port settings of the program it on windows. In the log file is not visible transmitted baud rate 115200.\n. You write what you do I'll do it.\n. The captured commands serial port monitor on windows.\nhttps://gist.github.com/1470960\n. I have two versions of xfreerdp 0.8.2, one from the archives of other git, where there is support for smartcard. Where there is support for smartcard also not working serial port.\n. May need some information from gdb? Say I will try to provide.\n. Second barcode scaner also does not work.\nDebug log from second barcode scaner DataLogic Formula 725.\nhttps://gist.github.com/1514191.\n. Release of, and no correction :(\n. Tell me what you need data and how to get them. I'll try to do it.\n. Video of scanners barcode on xfreerdp\nhttp://youtu.be/ouAVlb6tZ3Y - 0.8.2\nhttp://youtu.be/J2g5MHMv3iI - 1.0.0\n. More no one uses redirects serial ports? Be related use old (0.8.2) version xfreerdp.\n. This printer is a print server socket. I will try to connect it locally and tell 12.12.2011.\n. The old version does not work xfreerdp. On a locally installed printer also prints a blank page. \nUbuntu 10.04. Cups 1.4.3.\ndebug\nhttps://gist.github.com/1466622\nPS: In rdesktop this only works, it uses the command \"lpr\" for print.\n. Two reasons not to use MS Publisher Imagesetter.\n1. Not every printer works with MS Publisher Imagesetter. For example printers Canon.\n2. MS Publisher Imagesetter creates a large file which does not leave long to print. For example, try print jpg file 300 kb or more. Very long printing.\nI will try to new CUPS.\n. Ubuntu 11.10. Cups 1.5.0. A similar situation\nhttps://gist.github.com/1471098\n. xfreerdp all the time puts the document format \"application/postscript\", whereas rdesktop makes a choice between \"application/postscript\" or \"application/vnd.cups-raw\" depending on the driver.\nPS: Would like to solve this problem, because have to use multiple rdp clients.\n. If the file /etc/cups/raw.convs add string\napplication/postscript application/vnd.cups-raw 0 -\nand run xfreerdp with parameters\n/usr/local/freerdp/bin/xfreerdp -u xxx -d xxx -a 16 -g 1024x768 -x l --plugin cliprdr --plugin rdpdr --data printer:\"HP-LaserJet-4050\":\"HP LaserJet 4050 Series PCL6\" -- hostname\nprinting is excellent.\nxfreerdp not correct the type of application in queue cups.\n. If this question to me, I do not mind. But in my opinion it is not correct, rdesktop worked without this option.\n. Thank you! Everything works fine. The issue can be closed\nPS: The same problem in freerdp 0.8.2. Solved also.\n. Look issue #106. The problem is not solved yet.\n. ",
    "eduardobeloni": "In order to help solving this issue, we ask you to compile both versions of FreeRDP enabling rdpdr debug.\nIn FreeRDP-1.0:\n\ncmake -DWITH_DEBUG_SVC=ON\n\nIn old FreeRDP, you must edit the source channels/rdpdr/rdpdr_types.h:\n\ndiff --git a/channels/rdpdr/rdpdr_types.h b/channels/rdpdr/rdpdr_types.h\nindex 9bce305..0bebd83 100644\n--- a/channels/rdpdr/rdpdr_types.h\n+++ b/channels/rdpdr/rdpdr_types.h\n@@ -25,7 +25,7 @@\n\n #include \"config.h\"\n\n-#define LOG_LEVEL 1\n+#define LOG_LEVEL 11\n #define LLOG(_level, _args) \\\n\nPlease paste here the output of both debugs\n. What if you redirect only one serial device instead of two? Does it work?\nYou can use Gist (https://gist.github.com/) to put logs here, so we won't need to scroll down huge amounts of text, since gist generates a link for you.\n. Another try would be reverting the commit\n\n0d421ac6f71d0a2ecffe58a588938139b3306ccf\n\nThis one ignores the requests SERIAL_PURGE_TXCLEAR and SERIAL_PURGE_RXCLEAR\n. I could see in your debug that the following happens:\n\nDBG_SVC serial_tty_control (308): Ignoring SERIAL_PURGE_TXCLEAR\n\nThen I suggested you to revert the commit 0d421ac6f71d0a2ecffe58a588938139b3306ccf. Here is the diff that does it: https://gist.github.com/1422930\nCould you test running this diff? You can apply it by copying it to a file, say freerdp.diff, then typing:\n\ngit apply freerdp.diff\n\n. I got the same problem\n\na device attached to the system is not functioning\n\nwhen trying to save a web page in firefox. These are the logs:\nhttps://gist.github.com/1261743\n. Weird thing... A few more tests later and I got the remote session running in a low resolution, say 1024x768, while the rest of the screen is still black. Ctrl + Alt + Enter has no effect at all.\n. @awakecoding: I've just tried out your modifications:\n- With the -f option, it behaves the same as reported in my first post\n- If I do not pass -f, when pressing Ctrl + Alt + Enter, it tries to go full screen, but the remote session is available only on 1024x768, and the rest of the screen keeps black. I think this is a misbehaviour, and it should ignore Ctrl + Alt + Enter, since I did not pass -f\n. @awakecoding I vote for disabling the fulscreen mode for a session that was not started with -f and restrict fullscreen mode to the dimensions of the entire screen\n. According to my latest tests, it is working.\n. @atong-tcs you are quite right. My Win 2008 R2 was misconfigured\n. Hi,\nI've just tried RemoteFX in my Ubuntu 10.04. It works for playing video, but the aero themes (window border transparency, etc) don't show up.\nWhen I tryed the old FreeRDP I got videos working and the aero themes as well.\n. Please make you reviews, comments and suggestions.\n. @awakecoding I problably won't be able to test it this year\n. Agreed\n. I reckon xfreerdp gets stuck in the select, which handles fds from tcp, window events, among others. This way, it can't detect a connection failure.\nxfreerdp.c's select:\n\nfreerdp_get_fds(instance, rfds, &rcount, wfds, &wcount)\n...\nfreerdp_channels_get_fds(channels, instance, rfds, &rcount, wfds, &wcount)\n...\nxf_get_fds(instance, rfds, &rcount, wfds, &wcount)\n...\nif (select(max_fds + 1, &rfds_set, &wfds_set, NULL, NULL) == -1)\n\n. ",
    "terrible-broom": "I tried latest git version of FreeRDP, smartcards are redirected with no problems to W2003 and W2008R2 servers.\n. Sorry for my poor english.\nI was able to see the option to authenticate with smartcard after connecting to W2008R2. I couldn't actually login because I didn't have any valid certificates on smartcard.\n. May be you should try to build latest version from Git and try again. I have just tried the following command-line:\nxfreerdp --no-nla --ignore-certificate --plugin rdpdr --data scard:scard -- ip\nand it works.\n. 1) there is no Network Load Balancer\n2) we don't use token redirection (redirection mode is in default state)\n. Issue is partially solved by this commit: https://github.com/FreeRDP/FreeRDP/commit/aa7b83ff1e97ac394f76b0968acc1d9f55a11d41\nBut I still experience segfault when I am redirected by session broker to another server node.\nAs I can see from core dump, the problem is in function tpkt_verify_header (libfreerdp-core/tpkt.c:66):\nstream_peek_uint8(s, version);\n. Yes, the issue with segfaults seems to be fixed. Thank you!\nBut the behavoiur of freerdp has changed (may be it's not related to this issue). If the session is redirected to another server node, I get:\n$ xfreerdp -u user -p pass rd-farm01.study.tst\nconnected to rd-farm01.study.tst:3389\nThe host key for rd-farm01.study.tst has changed\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\nSomeone could be eavesdropping on you right now (man-in-the-middle attack)!\nIt is also possible that a host key has just been changed.\nThe fingerprint for the host key sent by the remote host is\n6b:a5:29:8b:cd:ed:40:e7:28:72:0a:fc:f8:23:31:73:ad:49:d1\nPlease contact your system administrator.\nAdd correct host key in ~/.freerdp/known_hosts to get rid of this message.\nHost key for rd-farm01.study.tst has changed and you have requested strict checking.\nHost key verification failed.\nSSL_write: Failure in SSL library (protocol error?)\nSSL_write: error:140D00CF:SSL routines:SSL_write:protocol is shutdown\nand freerdp can be closed only with Ctrl-C.\nIt can be fixed with \"--ignore-certificate\" option, but isn't it strange?\n. Tried to reproduce, but with no success.\nWhat version of Windows do you use? Where do you make a selection, on desktop or in some application?\n. I'm sorry, but I didn't understand the solution for this issue. I have the same behaviour of freerdp: if I connect without username and password in command-line parameters, Windows asks me for credentials twice (if I am redirected by session broker).\nExample of command-line:\nxfreerdp --no-nla --ignore-certificate ip\nYou said that Windows clients do the same if NLA is disabled. OK, but what to do with freerdp? If I enable NLA, freerdp asks me for password on command-line:\n$ xfreerdp --ignore-certificate ip\nconnected to \nPassword:\nWhat password does freerdp ask for?\nAnd what should I do to type in credentials only once? Except providing them in command-line.\n. OK, I suppose, I understood.\nCommand-line:\n$ xfreerdp --ignore-certificate -u test ip\nconnected to ip\nPassword:\nAnd I enter the password for user 'test'. But whose password does freerdp ask for if I don't state the username in command-line? :)\n. Sorry again, found this in source code in function xf_authenticate:\n// FIXME: seems this callback may be called when 'username' is not known.\n// But it doesn't do anything to fix it...\n. @sleekmountaincat, thank you for explicit explanation.\nConcerning default username (for NLA auth): it would be interesting if someone of developers will have a look at it. I see that freerdp asks for password if either password or username are NULL (credssp_ntlm_client_init, file libfreerdp-sspi/credssp.c), but asks only for password (even if password is given on the command-line, but username isn't):\n\nif ((settings->password == NULL) || (settings->username == NULL))\n        {\n                if (instance->Authenticate)\n                {\n                        boolean proceed = instance->Authenticate(instance,\n                                        &settings->username, &settings->password, &settings->domain);\n                        if (!proceed)\n                                return 0;\n                }\n        }\n\nAnd settings->username is NULL, if I don't state it in command-line.\n. (gdb) where\n0  0x00314416 in __kernel_vsyscall ()\n1  0x001566d0 in raise (sig=6) at ../nptl/sysdeps/unix/sysv/linux/pt-raise.c:42\n2  0x004337ee in fatal_handler (signum=6) at /home/ann/freerdp/FreeRDP/libfreerdp-utils/signal.c:53\n3  \n4  0x00314416 in __kernel_vsyscall ()\n5  0x004642f1 in raise (sig=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:64\n6  0x00465d5e in abort () at abort.c:92\n7  0x004a051d in __libc_message (do_abort=2, fmt=0x5856cc \"* glibc detected * %s: %s: 0x%s ***\\n\")\nat ../sysdeps/unix/sysv/linux/libc_fatal.c:186\n\n8  0x004a7fb6 in malloc_printerr (av=0x5c03a0, p=0x9f2c918, have_lock=0) at malloc.c:6283\n9  _int_free (av=0x5c03a0, p=0x9f2c918, have_lock=0) at malloc.c:4795\n10 0x00431cd2 in xfree (ptr=0x9f2c920) at /home/ann/freerdp/FreeRDP/libfreerdp-utils/memory.c:101\n11 0x00690471 in mppc_free (rdp=0x9f1a1a8) at /home/ann/freerdp/FreeRDP/libfreerdp-core/mppc.c:1443\n12 0x00686749 in rdp_free (rdp=0x9f1a1a8) at /home/ann/freerdp/FreeRDP/libfreerdp-core/rdp.c:957\n13 0x0067b74a in freerdp_context_free (instance=0x9f1a060) at /home/ann/freerdp/FreeRDP/libfreerdp-core/freerdp.c:224\n14 0x0805b64d in main (argc=12, argv=0xbfbbad54) at /home/ann/freerdp/FreeRDP/client/X11/xfreerdp.c:1267\n. I have the same problem.\nFedora 14, gcc 4.5.1\n. @atong \nit doesn't work in 1.0-stable branch, too.\n. I'm sorry. It seems that I experience the same issue as #537.\nIf I remove sound redirection, disk is redirected properly.\nBut sometimes it works, when there is no second \"connected\" line in log. o_O\n. If it matters, rdesktop works absolutely the same way. Pcscd is \"Waiting for release of lock\" when the session is redirected by session broker.\n. pcsc-lite version 1.6.6\n. Unfortunately, the same result with pcsc-lite 1.6.7.\n. COM-port redirection works for me. For example, I tried bar-code scanner Opticon OPR-3201 (in COM-port emulation mode), I can see scanned codes in 'putty' application.\n. On what layout do you get wrong symbol?\nI checked it on Windows server 2008R2 with English layout, and when I press '/' button on numpad, I get '/'...\n. Did you specify the option to enable redirect? --plugin rdpdr --data scard:scard --\nDo you have pcscd installed and running?\n. ",
    "firstcause": "Greetings terrible,\nYour comment was sort of cryptic, so I must ask: Were you able use your Smartcard(s) to actually log in on the WS2008R2?\n. My FreeRDP client box is running pcsc lite version 1.5.3-1ubuntu4.2\nAny pointers on how to make this work?\n. Ok, I'll check up on the pcscd error log.\nAs far as the server-side, I am able to use SC authentication from Windows based RDP clients, like XP with RDP 6.5 and Windows 7 with RDP 7.0.\nSo that tells me that the server is configured ok.\n. Ok, I've now tried this with three different versions of PCSC lite. All three work fine with the WS2003 TS, but all three fail in a similar fashion with the WS2008R2 TS.\nMy FreeRDP build is from the 1.0.0 tar file from the github built plain vanilla on a debian 6.04 x86 32bit box.\nThe three pcsc lite versions were tried with ccid version 1.4.5\nThe pcsc lite versions are 1.5.5 (ubuntu), 1.7.4 tar release file, and 1.8.2 tar release file.\nGet a failure message from line 677 in ccid_usb.c, thats in the ReadUSB function. Nothing really telling about the error stream, it doesn't tell me what it was doing other than it was trying to read the SC and fails, the exact error message:\n\"ccid_usb.c:677: read failed (8/3): -99 Invalid argument\"\nSo I guess this is not a PCSC version issue, and I need to know if anyone has successfully authenticated with a SC.\nSo far, I've tried an SCM SCR3310 reader, with what I am told is a Gemalto card.\nAny feedback there, community??? C'mon I know you're out there...\n. Ok, so I have confirmed that this is NOT a server-side config issue, it is not a pcsc-lite issue.\nUsing the same debian-based x86 system I have confirmed that when using rdesktop I can Smartcard-authenticate to a WS2008R2 Terminal Server without issue.\nThis means that there must be a bug in the FreeRDP SCARD code, I have looked at the code itself and unfortunately it would take me at least 2 weeks to get familiar with the 100K or of code in there. I think that it would be more expedient if someone who is already familiar with the SCARD implementation looked into this issue.\n. ",
    "mfleisz": "Not just embedded systems will cause problems - no Windows-based system has \"HOME\" set by default. In it's current state the core is unusable on anything other than a non-embedded nix platform as it simply crashes when  getenv(\"HOME\") fails.\nIt's hard for me to estimate how much effort it is going to be to have a clean fix. Maybe at least we can find a solution where certstore silently fails and the core is still able to connect to the server?\n. Thx Marc-Andre, however the fix is not complete - get_local_certloc (called from x509_verify_cert in crypto.c) is still using getenv(\"HOME\") (and later on seg faulting in strlen if HOME is not set) ...\n. Awesome - thx :)\n. --ignore-certificate sounds good imo - going to add the cmd-line option tomorrow.\n. The option is actually called --ignore-certificate - sorry for the confusion ...\n. Same here on Win7 Professional. Right after I connect, select text and do a copy it segfaults.\n. Compiling the tsmf_ffmpeg plugin on MacOS results in this error (unresolved symbol av_free) and I used the latest stable ffmpeg release (0.8.6).\nThe function av_free is also used by the tsmf_ffmpeg plugin (see tsmf_ffmpeg.c) so it is actually a dependency of freerdp and should therefore link against libavutil.\n. av_free is compiled into libavutil. Because the tsmf_ffmpeg plugin uses av_free directly in its code it has a dependency on libavutil. Just linking libavcodec is not enough (as it doesn't contain av_free but rather references/uses it).\nIf there is a bug in ffmpeg then it's the fact that I can reference a libavutil function while just including avcodec.h and not avutil.h.\nHowever, linking a library and relying on the fact that this library loads/references other libraries that I we are using is not a good practice imo and it is possible that future updates to libavcodec break the build (i.e. if av_free is not used by it anymore).\n. These tabs seem to be not right ...\n. The original formatting is better in my opinion.\n. Return type should be changed from BOOL to int\n. Should be WLog_DBG or WLog_INFO\n. Should be WLog_DBG\n. WLog_DBG instead of ERR\n. DBG or INFO instead of ERR\n. Should be ERR instead of DBG (check following WLog_DBG macros as well)\n. ERR instead of DBG\n. ERR instead of DBG\n. ERR instead of DBG (do the same for the following WLog_DBG occurrences)\n. Should be INFO/DBG instead of ERR\n. INFO/DBG instead of ERR\n. INFO/DBG instead of ERR\n. INFO instead of ERR\n. INFO instead of ERR\n. DBG instead of ERR\n. INFO instead of ERR\n. INFO instead of ERR\n. WARN instead of ERR\n. INFO instead of ERR\n. INFO instead of ERR (for all appearances of WLog_ERR in this function)\n. DBG instead of ERR\n. INFO instead of ERR\n. INFO instead of ERR\n. INFO instead of ERR\n. VRB instead of ERR and remove \"update_message_WindowIcon\" string (function name)\n. ERR instead of INFO (also for following WLog_INFO usages)\n. ERR instead of INFO\n. ERR instead of INFO\n. ERR instead of INFO\n. These lines will not produce the correct output as each WLog statement adds a \\n to the end of a message\n. Why does line_len depend on the maximum stack depth?\n. should be static BOOL nego_transport_connect(rdpNego* nego);\n. This looks like a leftover? (this might be problematic for some preprocessors because of the \\ at the end)\n. Shouldn't these functions return const char* ?\n. Shouldn't these functions return const char* ?\n. I think the same problem (negative scanline if biHeight < 0) also exists in winpr_image_bitmap_read_buffer\n. Can't we just get rid of dwTlsIndex and return (DWORD)key?\n. Leaking x509_str here if status < 0\n. Leaking bio and x509_str here if status < 0\n. Formatting looks screwed\n. Shouldn't that be UINT64 paddingB[32 - 23]; /* 23 /\n. too many tabs here?\n. check for nla->identity != NULL here too\n. Good catch - however I think now we miss out on freeing settings->TargetNetAddresses[0] - I'd propose following solution:\nUINT32 j;\nfor (j = 0; j < i; ++j)\n    free(settings->TargetNetAddresses[j]);\n. It will loop forever because i is an UINT32 and will never be < 0\n. I don't think we are freeing the wrong pointers - only the ones that have been newly assigned to the BITMAP_DATA struct at line 107 (0 to index - 1).\n. @nfedera That's fine as well!\n. Shouldn't we just return res here? Not returning anything might cause compiler warnings and simply returning res should result in an implicit pthread_exit(res); call according to docs.\n. @akallabeth but the code does #define - not typedef so I think @hardening is right ... there is something wrong here\n. I'd call _get_osfhandle (https://msdn.microsoft.com/en-us/library/ks2530z6.aspx) here\n. @bmiklautz Since Windows 95: https://msdn.microsoft.com/en-us/library/ks2530z6(v=vs.80).aspx\n. Indeed this looks familiar ... @llyzs @hardening what do you say?\n. I think the last time we had problems in this area was caused by accessing the SSL BIOs from different threads iirc... maybe that leads you somewhere ...\n. Unnecessary if\n. Unnecessary if\n. Unnecessary if\n. Unnecessary if\n. Exactly - the server first announces its capabilities (i.e. support for long format names) - if the client replies that it does not support that capability the server will revert to use use short format names in that example.\n. leaking \"data\" here and in all subsequent return FALSE branches\n. I think this lock is also always set when it is used (either if FILE_SHARE_READ or FILE_SHARE_WRITE is set in dwShareMode)\n. Formatting\n. I think there is a status = missing here and in the lines below\n. @colemickens Nitpicking but freerdp's coding style puts { on its own line (i.e. see the CommandLineSwitchCase lines):\n}\nCommandLineSwitchCase(arg, \"\")\n{\n. In case of popen we have to use pclose on Android later on to close the fp correctly.\n. I think this should be sizeof(WCHAR) rather than sizeof(TCHAR) - otherwise we still have a buffer overrun when we compile with TCHAR=CHAR \n. Style: tab missing\n. I think we leak this calloc in case an error occurs later on in winpr_Cipher_New\n. Missing tab\n. Why are you using a HashMap here instead of directly feeding the parameters into the args list?\n. This looks wrong ...\n. This results in incorrectly returning NULL even though the item was successfully added to the queue\n. This results in incorrectly returning NULL even though the item was successfully added to the queue\n. formatting: { in next tline\n. formatting: { in next tline\n. formatting: { in next tline\n. formatting: { in next tline\n. formatting: { in next tline\n. formatting: { in next tline\n. This should be free (pSurfaceIds);\n. missing tab\n. missing tab\n. missing tab\n. settings->ServerHostname should be NULLed here or we might end up with a double free in case strchr below fails\n. If name is NULL we return a signed value although the function's return type is UINT\n. Changing this from VOID to UINT breaks compatibility with the Microsoft API: https://msdn.microsoft.com/en-us/library/windows/desktop/aa383568(v=vs.85).aspx\nNot sure if we are still aiming for 100% MS API compatibility ..?\n. freerdp_set_error_info is the \"public\" API where we should check the input - rdp_set_error_info on the other hand is an internal API (mostly from within the rdp context itself) so I think it's ok to assume a sane rdp input in that case.\n. I think that stream NULL pointer check is not necessary as this function is called from the transport layer where stream creation is already checked and ensured.\n. Unneeded if (free already checks for NULL)\n. I think these frees are not necessary as none of the 3 vars will be non-NULL at this point \n. should be domain = NULL\n. Unneeded if (free already checks for NULL)\n. Unneeded if (freerdp_settings_free already checks for NULL)\n. Not your code but unchecked malloc\n. Could also replace the malloc with a calloc and remove the ZeroMemory on the next line\n. Unchecked malloc\n. This \\ shouldn't be here ...\n. Yes - compatible I'd say!\n. Isn't the format variable quite useless now?\nI think we can just pass gdi->dstFormat (or PIXEL_FORMAT_BGRX32 in the next case) to the functions instead.\n. I think we can get rid of all the _F macros and just use FREERDP_PIXEL_FORMAT directly for the #defines.\n. Again - I don't think format is needed here anymore\n. Yeah - even though the old one was wrong (__XMF instead of __MF) we should fix it by correctly naming the #define and not just deleting it - and rename it as @akallabeth suggests\n. In this PR I just changed the return value to fit the function signature. The function generally seems to need some overhaul (i.e. palette is never used, params are not checked, return value of WriteColor is not checked, ...).. I think we miss a (BYTE*) cast here. @akallabeth You are right - should not be necessary with PODs. Wouldn't it be easier to just move the declaration of updateRegion into the for() loop and get rid of init/uninit here and in fail:?. Typo - should be ipc. Typo - ipc. Typo: form -> from. double \"in\". Shouldn't that be char name[9];?\nAlso the previous declaration of name should be removed if it's now declared inside the for loop. shouldn't this be *(*ppRgba)++ = 0xFF?. Could improve performance a bit by making two for-loops - one for alpha and one for non-alpha formats. That will break older C compilers which require variables to be declared on top of a scope.. Why did you remove GetTickCount here? This breaks the now < dueDate check in the loop condition .... Unchecked access (tranpsort->....). @akallabeth Maybe this should Log something (warning/error)?. Leaks if one of the returns in the while loop is executed. Leaks if one of the returns in the while loop is executed. ret is useless here. Format specifier (should be \"%02\"PRIX8). Format specifier. Format specifier. Format specifier. if context init failed all subsequent calls using context will fail too I guess?. _snprintf(... , \"%s@%s\", username, domain) would be safer (checks for buffer size) and we can also get rid of the memset. if krb5_init_context fails we potentially free an invalid context here. fastpath->rdp->update might be NULL. Isn't client == context - checking one should be sufficient. again checking either client or context should be sufficient. I agree - should use Stream_Read here. Should use Stream_Write here. NULL checks before free() are useless because free() already does that check. length is already multiplied by 2 at the end of the ConvertToUnicode call.\nI think what is wrong is the check if length > MAX_PATH which should be length > MAX_PATH * sizeof(WCHAR) - and of course instead of 2 we should also multiply with sizeof(WCHAR) at the end of ConvertToUnicode.. The same applies to the cAlternateFileName conversion too. Think that should be !=. Again should be !=. Ah sorry - thought the \"Failed to check FreeRDP event handles\" message in case of ERROR_SUCCESS was the problem ... alright then it LGTM. Maybe I missed something but isn't context->priv->PlaneBuffers[0] + y * rw pointing at the end of the buffer here too? (with y == context->height at this point). Ah OK - got it :). Do we really need a line break here?. Formatting looks strange (same for all other functions with these parameters). Can't we get rid of j here too (and k down below) and define j just before the loops where it is used?\nAlso what was the problem with format? Now we have that hackish extra { } scope to define it below.. Good catch!. @akallabeth OK agree on the format variable handling - maybe you can ditch the global loop counter when rebasing? \ud83d\udc4d . All the if()s before the gdi_DeleteX calls are unnecessary as they behave like free and accept NULL handles/pointers. This is very inconsistent among all the GDI tests now (sometimes there is an if sometimes not - just see below for the call to gdi_DeleteDC). Shouldn't we assert/print some message in case cEntries != 0 and free the table anyways?\nAs it is now we will leak the table too in case we have a context buffer leak .... uString is never initialized if _RtlAnsiStringToUnicodeString fails and we will end up freeing an invalid pointer here. I think that should be !file->DrivesToRedirect - otherwise we might hit a strlen(NULL). This check is unnecessary now that we check for <= 0 2 lines below. @akallabeth I don't see how I'm in the wrong scope ... there is a check for < 0 at line 1858 and another for <= 0 at line 1861 - both within the scope of if ((errno != 0) || (id > UINT32_MAX) || (id == 0)). This and the gotos below might cause a crash at free(image->data); because image->data is uninitialized here.. I think this should be len / 16 (4 * sizeof(UINT32)). { Formatting (same for the enums above). Afaict this is described in https://msdn.microsoft.com/en-us/library/windows/desktop/bb540809 - the previous calculation with shifting seems to be wrong. Good question! :). Ah - alright - understood!. NULLing all these pointers is unnecessary. NULLing all these pointers is unnecessary. The TAG stuff here looks wrong ... . Formatting looks weird - why put each string on a separate line?. looks like the context is named sys instead of h264 (that's why the VS builds fail). Shouldn't this be a sockaddr_in6 (which is most likely bigger in size than a sockaddr_in) or we might get a truncated address from getsockname? Same goes for the length assignment.. That code really isn't a beauty ... but as @akallabeth mentioned it's all over the rdp parser ... maybe one day we should \"fix\" that ugliness in a separate PR. Won't this memset override cmd->bmp.codecID which is set before?. Again cmd->bmp.codecID gets overridden . There is no need to check for NULL before calling free/_aligned_free. The free() here is not the way to go imho.\nThe problem is the current mf_uninit implementation:\n- First it should not call MFShutdown without checking if the pointer is valid\n- Secondly MFShutdown should not be called after mfplat.dll was freed with FreeLibrary\nWith these changes a goto error; should be sufficient here .... @perkerk thanks!. Typo?. This could be called right after MFShutdown. Should have type UINT/DWORD. This will certainly cause a warning - should set/return error to 1 instead.. Should return 0 instead of NULL. Some paths still return (PVOID)0 or (PVOID)1. At the end of TestSynchCritical_Main there are some \"return (PVOID)\" leftovers. The rest looks good to go. VS 2017 has no complaint about it - but then there are other compilers out there as we know. Also this way we ensure that there is definitely just one '\\0' at the end of the string - compilers are supposed to add one at the end when defining strings this way ... supposed to.. Isn't returning a value from winpr_exit obsolete now that we always call _exit()?\nAll the standard exit(), _exit(), ... functions return a void as well .... I think this could get us into trouble. MSDN says:\n\"The code in the atexit function should not contain any dependency on any DLL which could have already been unloaded when the atexit function is called.\"\nIf someone uses a custom logger with cleanup code like i.e. WLog_UdpAdapter_Free (which calls socket APIs) this could lead to crashes on app exit.\nNot sure what you guys think about this - maybe I'm just too pessimistic here ... ^^. @akallabeth WLog_ functions won't be a problem as they are part of winpr.dll and are still loaded when the atexit() handler is called (on dll unload of winpr). There is just no guarantee the adapter free handlers won't call any functions from other dlls that might have been already unloaded before winpr.. Should be _update_read_pointer_new. Should be bitmap_update instead of &update->bitmap_update. malloc suffices here. malloc suffices here. malloc suffices here. malloc suffices here. malloc suffices here. malloc suffices here. Yes - you'r right \ud83d\udc4d . Not quite sure but there is one more place in code that uses #ifdef WITH_STREAM_POOL.\nAs WITH_STREAM_POOL is defined on top of the source file I think this line should be removed as well as this could lead to some unwanted behavior? (see line 1556). maybe we should change the comment to sub -128 to avoid confusion?. I think this should be Stream_EnsureRemainingCapacity. @p-pautov Oh sorry - my bad :). Shouldn't this be < 12?. Shouldn't this be BodySize - 12 - according to https://msdn.microsoft.com/en-us/library/hh536829.aspx the BodySize is \"the size of this PDU minus the size of the header\".. @akallabeth But isn't the header already stripped in rdpsnd_recv_pdu? The current position of s should already be at the end of the header and only read the remaining 12 bytes timestamp info below .... Comment should be updated to reflect the code change. missing \\r\\n at the end. VS 2010 doesn't like mid-code variable declarations.. imo the old formatting was more clear in this case .... @informatimago Can you change the script so that it retains the tabs for comments? Otherwise we'll run into troubles when using the code formatting script.. @informatimago I guess the same tab issue happened to these comments as well? :). verification_status is a BOOL. Why do we preserve errno here?. Command line output says that env variable is now called http_proxy. Why use _snprintf here and not sprintf_s?. shouldn't this be fp_len - 3 * i. why do we need the + 2 here?. @akallabeth Ah yes - missed the * - alright then \ud83d\udc4d . Haha you are right - that looks good to me :). Potential OOB write if result is empty (no flags specified).. Potential OOB write if all flags are set (strcat adds a terminating \\0 to the end of the string). . ouch - good catch!. Why do we return &layouts[1] here? I think this will cause trouble when we call free() on this address .... function signature returns an int. size_t foo? This seems to make no sense ... why not just passt 0 to EncryptMessage and get rid of this param?. s leaks. s leaks. Looks like all calls to rpc_client_write_call leak the data in s ... or I missed the place where the stub_data gets freed ..... @akallabeth Yes - that's right - the first few checks for instance just exit without clearing s . Should be | instead of ||\n. I think this should be SIZE_MAX - alignsize. This free is unnecessary ... base64NtlmToken is always NULL here. I don't understand the type change/cast with errorCode here ... if Stream_Read_UINT32 is the problem (reading a signed type - HRESULT) then can't we just replace it with Stream_Read_INT32?. The optimizer will either eliminate this check or always return FALSE if the struct becomes really that big (resulting in the function to always fail) - this should be handled by a static_assert at compile time imo ... . Again - should be done using static_assert. Yeah but the cast to HRESULT here seems unnecessary imo ... PRIx32 should be fine with UINT32 as well right?. Are you sure data is pointing to a buffer with a valid length of size + 1? If the trailing zero would be part of formatData I'd expect [formatData length] to return the size including the trailing \\0.. Should be argc < 2 as we access argv[1] on the next line. Unknown type if compiled without soxr support. should be if (!hDstBmp). Shouldn't we get rid of this?. Formatting is screwed here. Potential buffer overflow (writes at least 2 bytes, strnlen checks for > 0). No check if buffer is large enough. Potential buffer overflow (writes at least 2 bytes, strnlen checks for > 0). No check if buffer is large enough. Then what's the reason of the strnlen after all? ^^\nIf it's just to prevent appending a trailing | a simple if (buffer[0] != 0) is way more efficient than continuously calling strnlen. This hides windowTitle from the previous scope - error prone .... status can be 0 even if freerdp_assistance_get_encrypted_pass_stub or freerdp_assistance_bin_to_hex_string failed. What's the point of _strdup'ing here? Why not just parse the input parameter?. We can just return here - no allocation has been done yet. CloseHandle requires a valid handle to be passed. This will cause problems with formats that use less than 8 bits per sample (i.e. ADPCM). Afaict this makes certificate_data_replace unused right? Should we remove that function then?. This formatting makes the calloc look terribly wrong ... . Looks like some trailing tabs slipped through here ... . This error message looks wrong. ntlm_client_set_input_buffer won't copy the content of ntlmTokenData but only save the pointer in the ntlm structure. Therefore if we free ntlmTokenData here the pointer in the ntlm struct will be left pointing to an already freed address causing a double free on cleanup.. The code in this function is a bit hard to understand ...\nI.e. I don't really get why we only check if the height is equal [if (wh != dh)] but don't do the same check for the width?. I think he means type* var vs type *var. Unneeded double bracing  (()) for sizeof. That comment above should be changed .... The second part of the && should compare to  L':'. This newly introduced var is pretty useless imo. Why is there a new empty scope here?. Why do we change x/y to INT32 when the compared values (nHeight/nWidth) are both UINT32?. Why don't we just change y's type to UINT32 instead of all these casts?. That's a job for compile time assertion. This cast looks wrong (size is of type UINT64). Shouldn't these two casts be the same?. This looks wrong ... why do we convert an uninitialized input buffer?. True for the above loops but these loops just check for < height/widht so I don't see the need for the type change/the casts in this case. lpFilename is an output buffer - I don't understand why we convert that buffer before it is even initialized. Ok got it - it's just a bit hard to read ^^. Formatting (space vs tab). This line looks fishy ... %04zu won't print a hex-value to the string ... this will screw the heap. No - what I mean is that the format specifier is incorrect. We are not printing hex digits anymore (missing X) and we might write more than 4 characters to the string i.e.\nsize_t x = 0xFFFF;\nprintf(\"%04u\\n\", x);\nprintf(\"%04x\\n\", x);\noutput:\n65535\nffff. And that's what screwed the stack I think .... @akallabeth Yes but %04 only guarantees that it's at least 4 digits in size - not at max! And since this changed from hex reprenstation (x) to decimal now we will reach the case where it is > 4 (and as a result of that trio_snprintf to fail) way sooner than before. Obviously this happened during the NTLM test case .... The stack issue was fixed with your latest commit (checking snprintf's return value before adding it to pos). However now we silently fail and don't get a hex dump i.e. in the case of the NTLM test (due to the format specifier change from %04x to %04u which causes snprintf to fail).\nIMO we should check the input length and if it is > MAX_UINT16 then we should print an error (buffer to large to dump) and exit. Otherwise we can continue and leave the format of the offset as hex (which I'd prefer) - or if you really want to have the offset in decimal increase the buffer so that it can hold numbers with up to 5 digits instead of 4.. ",
    "ngraziano": "For information my locale is english on linux client and I connect to an Window XP sold in france.\nI think this limitation on encryption is not actual anymore. (It's true that some years ago (before 2004) there was a limitation to 128bit and before 1998 limitation to 40bit). \nBut you are right the problem must not be linked to XP  french or sold in france. It is only linked to RDP security fallback.\n. ",
    "eworm-de": "No, it will not build... But that has to solved by the remmina people.\nThanks for the commit.\n. Uh, this works after rebooting the Windows system.\nStupid MS crap...\nClosing.\n. ",
    "tmoore22": "Not tried dfreerdp 0.x so far, will attempt and feedback the results..\nHave tried both x11 and fbdev with full screen on dfreerdp and both fail. I did notice you pushed some changes so will re-test this evening.\n. I have confirmed from a different Linux (ubuntu) with a fresh compile of FreeRDP 1.0 against a Windows 2008 R2 SP1 Server with RemoteFX Enabled) running in RDSH mode.\nRemoteFX works from WindowsTPC > RDSH\nRemoteFX works from Windows7 SP1 > RDSH\nRemoteFX does not work from FreeRDP 1.0 > RDSH\nI have tried:\nxfreerdp -x l -a 32 --rfx etc ...\nalso Fullscreen ...\nPlease provide some direction and I will post debug output, although not familiar with your coding techniques so would prefer you to provide possible gdb syntax?\n. Also tried with 0.8.2.827-b3eb with NO success, i.e. RemoteFX always fails ...\n. Have tried against a Win2008R2 sp1 server and a Windows 7 desktop, remoteFx does not work.\nI do get a successful RDP session, but without RemoteFX acceleration.\n. Will try with CentOS - have already tried a clean build (both my fail and gotsiboon are on a debian flavour)\n. Are there any requirements on the Client Side ? I.e DRM ? OpenGL? framebuffer or VESA drivers?\n. Hi,\nI dont think it is a server-side issue as I am using Windows 2008R2 and RemoteFX always works from a Windows 7 SP1 client and a Windows TPC SP1 client (Embedded).\nI assess RemoteFX to be disabled in threeways: Firstly the when selecting the \"Aero\" theme under Desktop>Personalization I can see that composting is disabled and a message showing that \"some settings have been disabled by your administrator\" - i know this implies a server-side issue but this is determined by the Client capabilities - and in my case the Client is not RemoteFX capable.\nSecondarily, when successfully connecting with a Win7 Client i can see an Event in the eventlog saying that a Session was started and that RemoteFX is enabled - when using xfreerdp, this event is never logged.\nThird, is a visual check, and I can see that composting  and window decorations are enabled - but when moving a window over the taskbar - I can see no transparency, ie the composition is a solid effect.\nI repeadily check the commits to xfreerdp and watch the issues board for updates, I am eager to get this and DirectFB working together as it paves the way for my developments.\nPlease help resolve, as previously commented i can provide remote access etc if you like. please contact me on my email directly for details.\n. Also, given guidance I can produce Wireshark packet captures, perform gdb analysis etc ... but wouldnt know where to start really with your code ...\n. using xfreerdp also try dfreerdp\n. In an earlier post i already said I checked event logs and when connecting with xfreerdp I do not get any entry in Applications & Service Logs->Microsoft->Windows->RemoteDesktopServices-RemoteDesktopSessionManager->Admin\nConnecting from a Win7 Client succeeds and Yes, I do get an entry in the event log ...\nSeems we both get different results, I dont know why its not working in my instance also another user above (gotsiboon)\nPlease can you tell me what distribution of Linux you are using on the client side?\n. I can confirm I have also tried FreeRDP from Ubuntu client to Windows 7 client and NO RFX is enabled.\nsee - https://github.com/FreeRDP/FreeRDP/wiki/Compilation - for DEBUG info\n. I still have issues with RemoteFX - have tried all combinations of --composition and --rfx against a RDSH server and it doesnt work for me!\nUsing the latest source from git://\nTim\n. Upgrade libavcodec to above version 52.20.1 there is an issue with this version.\nI had the same problem on Debian Squeeze and upgraded libavcodec and FFMPEG complied OK!\n. ",
    "gotsiboon": "I can confirm this issue exactly as tmoore22 describes. My Ubuntu 10.10 does connect but always without RFX. I got no errors or anything else hinting to a problem. Access to my W2k8R2 server using a W7 with RFX does work perfectly.\n. I tried with 1.0 and 0.8 from git.\n. Hi guys,\nI have to reconfirm once more that RFX doesn't work for me. I have the same\nsituation as tmoore22 that my W7-access gets logged into W2k8R2 eventlog as\nfullblown RemoteFX activated, but my Ubuntu10.10-access doesn't.\nMarc-Andr: Do I remember right that a message similar to \"~Establish\nremotefx activated connection to server~\" should be shown in cmdline. I\nbelieve I saw something like in my bash when connecting (with RFX) some\nmonth ago (successful). But now it doesn't show up anymore.\nAnyway, now - after some 2-3 weeks into another project that kept me busy\ncompletely - I have the time to invest why RFX doesn't work on my Ubuntu.\nSo, if anybody has another hint (especially regarding missing or BROKEN\ndependencies) I have the time to test it right away.\nWhat's the best method to debug RFX? When compiling with \"--with-debug\" the\noutput in my bash looks pretty much the same as without \"--with-debug\"!?\nRegards,\ngotsiboon.\nOn Sat, Nov 5, 2011 at 1:24 AM, tmoore22 \nreply@reply.github.comwrote:\n\nIn an earlier post i already said I checked event logs and when connecting\nwith xfreerdp I do not get any entry in Applications & Service\nLogs->Microsoft->Windows->RemoteDesktopServices-RemoteDesktopSessionManager->Admin\nConnecting from a Win7 Client succeeds and Yes, I do get an entry in the\nevent log ...\nSeems we both get different results, I dont know why its not working in my\ninstance also another user above (gotsiboon)\nPlease can you tell me what distribution of Linux you are using on the\nclient side?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/137#issuecomment-2634655\n\n\nNo 112!\n. Uhmm,...\nBTW: How to enable --with-debug with cmake? \nThanks for help.\nRegards, \ngotsi.boon.\n. I tried to compile like this:\ncmake -DCMAKE_BUILD_TYPE=Debug -DWITH_SSE2=ON .\nResult is:\nuser@client:~/Downloads/FreeRDP$ cmake -DCMAKE_BUILD_TYPE=Debug -DWITH_SSE2=ON .\n-- FreeRDP GIT\n-- Finding suggested package ALSA.\n--   Disable this using \"-DWITH_ALSA=OFF\".\n-- Skipping optional package PulseAudio.\n--   Enable this using \"-DWITH_PULSEAUDIO=ON\".\n-- Skipping optional package PCSC.\n--   Enable this using \"-DWITH_PCSC=ON\".\n-- Finding suggested package Cups.\n--   Disable this using \"-DWITH_CUPS=OFF\".\n-- Found Cups: /usr/lib/libcups.so\n-- Finding suggested package FFmpeg.\n--   Disable this using \"-DWITH_FFMPEG=OFF\".\n-- Skipping optional package CUnit.\n--   Enable this using \"-DWITH_CUNIT=ON\".\n-- Finding suggested package X11.\n--   Disable this using \"-DWITH_X11=OFF\".\n-- Finding suggested package XKBFile.\n--   Disable this using \"-DWITH_XKBFILE=OFF\".\n-- Finding suggested package X11.\n--   Disable this using \"-DWITH_X11=OFF\".\nCMake Warning at client/X11/CMakeLists.txt:56 (message):\n  WITH_MANPAGES was set, but xmlto was not found.  man-pages will not be\n  installed\n-- Finding suggested package Xinerama.\n--   Disable this using \"-DWITH_XINERAMA=OFF\".\n-- Finding suggested package Xext.\n--   Disable this using \"-DWITH_XEXT=OFF\".\n-- Finding suggested package Xcursor.\n--   Disable this using \"-DWITH_XCURSOR=OFF\".\n-- Finding suggested package Xv.\n--   Disable this using \"-DWITH_XV=OFF\".\n-- Skipping optional package DirectFB.\n--   Enable this using \"-DWITH_DIRECTFB=ON\".\n-- Finding suggested package X11.\n--   Disable this using \"-DWITH_X11=OFF\".\n-- Finding suggested package Xext.\n--   Disable this using \"-DWITH_XEXT=OFF\".\n-- Finding suggested package Xdamage.\n--   Disable this using \"-DWITH_XDAMAGE=OFF\".\nCMake Error at cmake/FindOptionalPackage.cmake:37 (find_package):\n  Could not find module FindXdamage.cmake or a configuration file for package\n  Xdamage.\nAdjust CMAKE_MODULE_PATH to find FindXdamage.cmake or set Xdamage_DIR to\n  the directory containing a CMake configuration file for Xdamage.  The file\n  will have one of the following names:\nXdamageConfig.cmake\nxdamage-config.cmake\nCall Stack (most recent call first):\n  server/X11/CMakeLists.txt:34 (find_suggested_package)\n-- Configuring incomplete, errors occurred!\nBut I have libxdamage1 v.1.1.1.3-1 (incl. dev & dbg) already installed.\nHmm?\nI guess the missing xmlto cannot be the reason, so what is?\nOf course \"make\" doesn't work.\nRegards, \ngotsiboon. \n. I don't know whether this ruins the debug-mode, but compilation works with:\ncmake -DCMAKE_BUILD_TYPE=Debug -DWITH_SSE2=ON -DWITH_MANPAGES=OFF -DWITH_XDAMAGE=OFF .\n. But during 'make' this comes up:\nuser@client:~/Downloads/FreeRDP$ make\nScanning dependencies of target freerdp-utils\n[  1%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/args.c.o\n[  1%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/blob.c.o\n[  2%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/dsp.c.o\n[  3%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/event.c.o\n[  3%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/bitmap.c.o\n[  4%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/hexdump.c.o\n[  5%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/list.c.o\n[  5%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/file.c.o\n[  6%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/load_plugin.c.o\n[  7%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/memory.c.o\n[  7%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/mutex.c.o\n[  8%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/passphrase.c.o\n[  9%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/pcap.c.o\n[  9%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/profiler.c.o\n[ 10%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/rail.c.o\n[ 11%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/registry.c.o\n[ 11%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/certstore.c.o\n[ 12%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/semaphore.c.o\n[ 13%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/signal.c.o\n[ 13%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/sleep.c.o\n[ 14%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/stopwatch.c.o\n[ 15%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/stream.c.o\n[ 15%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/string.c.o\n[ 16%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/svc_plugin.c.o\n[ 17%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/thread.c.o\n[ 17%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/unicode.c.o\n[ 18%] Building C object libfreerdp-utils/CMakeFiles/freerdp-utils.dir/wait_obj.c.o\nLinking C shared library libfreerdp-utils.so\n[ 18%] Built target freerdp-utils\nScanning dependencies of target freerdp-kbd\n[ 19%] Building C object libfreerdp-kbd/CMakeFiles/freerdp-kbd.dir/locales.c.o\n[ 20%] Building C object libfreerdp-kbd/CMakeFiles/freerdp-kbd.dir/layouts.c.o\n[ 20%] Building C object libfreerdp-kbd/CMakeFiles/freerdp-kbd.dir/layouts_xkb.c.o\n[ 21%] Building C object libfreerdp-kbd/CMakeFiles/freerdp-kbd.dir/x_layout_id_table.c.o\n[ 22%] Building C object libfreerdp-kbd/CMakeFiles/freerdp-kbd.dir/libkbd.c.o\nLinking C shared library libfreerdp-kbd.so\n[ 22%] Built target freerdp-kbd\nScanning dependencies of target freerdp-codec\n[ 23%] Building C object libfreerdp-codec/CMakeFiles/freerdp-codec.dir/bitmap.c.o\n[ 23%] Building C object libfreerdp-codec/CMakeFiles/freerdp-codec.dir/color.c.o\n[ 24%] Building C object libfreerdp-codec/CMakeFiles/freerdp-codec.dir/rfx_decode.c.o\n[ 25%] Building C object libfreerdp-codec/CMakeFiles/freerdp-codec.dir/rfx_differential.c.o\n[ 25%] Building C object libfreerdp-codec/CMakeFiles/freerdp-codec.dir/rfx_dwt.c.o\n[ 26%] Building C object libfreerdp-codec/CMakeFiles/freerdp-codec.dir/rfx_encode.c.o\n[ 27%] Building C object libfreerdp-codec/CMakeFiles/freerdp-codec.dir/rfx_pool.c.o\n[ 27%] Building C object libfreerdp-codec/CMakeFiles/freerdp-codec.dir/rfx_quantization.c.o\n[ 28%] Building C object libfreerdp-codec/CMakeFiles/freerdp-codec.dir/rfx_rlgr.c.o\n[ 29%] Building C object libfreerdp-codec/CMakeFiles/freerdp-codec.dir/rfx.c.o\n[ 29%] Building C object libfreerdp-codec/CMakeFiles/freerdp-codec.dir/nsc.c.o\n[ 30%] Building C object libfreerdp-codec/CMakeFiles/freerdp-codec.dir/rfx_sse2.c.o\nLinking C shared library libfreerdp-codec.so\n[ 30%] Built target freerdp-codec\nScanning dependencies of target freerdp-core\n[ 31%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/activation.c.o\n[ 31%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/ber.c.o\n[ 32%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/gcc.c.o\n[ 33%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/mcs.c.o\n[ 33%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/nego.c.o\n[ 34%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/info.c.o\n[ 35%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/input.c.o\n[ 35%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/crypto.c.o\n[ 36%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/credssp.c.o\n[ 37%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/ntlmssp.c.o\n[ 37%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/license.c.o\n[ 38%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/errinfo.c.o\n[ 38%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/security.c.o\n[ 39%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/settings.c.o\n[ 40%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/orders.c.o\n[ 40%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/freerdp.c.o\n[ 41%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/graphics.c.o\n[ 42%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/capabilities.c.o\n[ 42%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/certificate.c.o\n[ 43%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/connection.c.o\n[ 44%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/redirection.c.o\n[ 44%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/rdp.c.o\n[ 45%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/per.c.o\n[ 46%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/tcp.c.o\n[ 46%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/tls.c.o\n[ 47%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/tpdu.c.o\n[ 48%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/tpkt.c.o\n[ 48%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/fastpath.c.o\n[ 49%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/surface.c.o\n[ 50%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/transport.c.o\n[ 50%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/update.c.o\n[ 51%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/channel.c.o\n[ 52%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/window.c.o\n[ 52%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/listener.c.o\n[ 53%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/peer.c.o\n[ 54%] Building C object libfreerdp-core/CMakeFiles/freerdp-core.dir/mppc.c.o\nLinking C shared library libfreerdp-core.so\n[ 54%] Built target freerdp-core\nScanning dependencies of target freerdp-cache\n[ 54%] Building C object libfreerdp-cache/CMakeFiles/freerdp-cache.dir/brush.c.o\n[ 55%] Building C object libfreerdp-cache/CMakeFiles/freerdp-cache.dir/pointer.c.o\n[ 56%] Building C object libfreerdp-cache/CMakeFiles/freerdp-cache.dir/bitmap.c.o\n[ 56%] Building C object libfreerdp-cache/CMakeFiles/freerdp-cache.dir/offscreen.c.o\n[ 57%] Building C object libfreerdp-cache/CMakeFiles/freerdp-cache.dir/color_table.c.o\n[ 58%] Building C object libfreerdp-cache/CMakeFiles/freerdp-cache.dir/glyph.c.o\n[ 58%] Building C object libfreerdp-cache/CMakeFiles/freerdp-cache.dir/cache.c.o\nLinking C shared library libfreerdp-cache.so\n[ 58%] Built target freerdp-cache\nScanning dependencies of target freerdp-gdi\n[ 58%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/8bpp.c.o\n[ 59%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/16bpp.c.o\n[ 60%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/32bpp.c.o\n[ 60%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/bitmap.c.o\n[ 61%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/brush.c.o\n[ 62%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/clipping.c.o\n[ 62%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/dc.c.o\n[ 63%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/drawing.c.o\n[ 64%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/line.c.o\n[ 64%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/palette.c.o\n[ 65%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/pen.c.o\n[ 66%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/region.c.o\n[ 66%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/shape.c.o\n[ 67%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/graphics.c.o\n[ 67%] Building C object libfreerdp-gdi/CMakeFiles/freerdp-gdi.dir/gdi.c.o\nLinking C shared library libfreerdp-gdi.so\n[ 67%] Built target freerdp-gdi\nScanning dependencies of target freerdp-rail\n[ 67%] Building C object libfreerdp-rail/CMakeFiles/freerdp-rail.dir/window_list.c.o\n[ 68%] Building C object libfreerdp-rail/CMakeFiles/freerdp-rail.dir/window.c.o\n[ 69%] Building C object libfreerdp-rail/CMakeFiles/freerdp-rail.dir/icon.c.o\n[ 69%] Building C object libfreerdp-rail/CMakeFiles/freerdp-rail.dir/rail.c.o\nLinking C shared library libfreerdp-rail.so\n[ 69%] Built target freerdp-rail\nScanning dependencies of target freerdp-channels\n[ 70%] Building C object libfreerdp-channels/CMakeFiles/freerdp-channels.dir/libchannels.c.o\nLinking C shared library libfreerdp-channels.so\n[ 70%] Built target freerdp-channels\nScanning dependencies of target cliprdr\n[ 70%] Building C object channels/cliprdr/CMakeFiles/cliprdr.dir/cliprdr_format.c.o\n[ 71%] Building C object channels/cliprdr/CMakeFiles/cliprdr.dir/cliprdr_main.c.o\nLinking C shared library cliprdr.so\n[ 71%] Built target cliprdr\nScanning dependencies of target drdynvc\n[ 72%] Building C object channels/drdynvc/CMakeFiles/drdynvc.dir/drdynvc_main.c.o\n[ 73%] Building C object channels/drdynvc/CMakeFiles/drdynvc.dir/dvcman.c.o\nLinking C shared library drdynvc.so\n[ 73%] Built target drdynvc\nScanning dependencies of target tsmf\n[ 73%] Building C object channels/drdynvc/tsmf/CMakeFiles/tsmf.dir/tsmf_audio.c.o\n[ 74%] Building C object channels/drdynvc/tsmf/CMakeFiles/tsmf.dir/tsmf_codec.c.o\n[ 75%] Building C object channels/drdynvc/tsmf/CMakeFiles/tsmf.dir/tsmf_decoder.c.o\n[ 75%] Building C object channels/drdynvc/tsmf/CMakeFiles/tsmf.dir/tsmf_ifman.c.o\n[ 76%] Building C object channels/drdynvc/tsmf/CMakeFiles/tsmf.dir/tsmf_main.c.o\n[ 77%] Building C object channels/drdynvc/tsmf/CMakeFiles/tsmf.dir/tsmf_media.c.o\nLinking C shared library tsmf.so\n[ 77%] Built target tsmf\nScanning dependencies of target tsmf_ffmpeg\n[ 78%] Building C object channels/drdynvc/tsmf/ffmpeg/CMakeFiles/tsmf_ffmpeg.dir/tsmf_ffmpeg.c.o\n/home/user/Downloads/FreeRDP/channels/drdynvc/tsmf/ffmpeg/tsmf_ffmpeg.c: In function \u2018tsmf_ffmpeg_init_stream\u2019:\n/home/user/Downloads/FreeRDP/channels/drdynvc/tsmf/ffmpeg/tsmf_ffmpeg.c:117: error: \u2018AVMEDIA_TYPE_VIDEO\u2019 undeclared (first use in this function)\n/home/user/Downloads/FreeRDP/channels/drdynvc/tsmf/ffmpeg/tsmf_ffmpeg.c:117: error: (Each undeclared identifier is reported only once\n/home/user/Downloads/FreeRDP/channels/drdynvc/tsmf/ffmpeg/tsmf_ffmpeg.c:117: error: for each function it appears in.)\n/home/user/Downloads/FreeRDP/channels/drdynvc/tsmf/ffmpeg/tsmf_ffmpeg.c:122: error: \u2018AVMEDIA_TYPE_AUDIO\u2019 undeclared (first use in this function)\n/home/user/Downloads/FreeRDP/channels/drdynvc/tsmf/ffmpeg/tsmf_ffmpeg.c: In function \u2018tsmf_ffmpeg_set_format\u2019:\n/home/user/Downloads/FreeRDP/channels/drdynvc/tsmf/ffmpeg/tsmf_ffmpeg.c:191: error: \u2018AVMEDIA_TYPE_VIDEO\u2019 undeclared (first use in this function)\n/home/user/Downloads/FreeRDP/channels/drdynvc/tsmf/ffmpeg/tsmf_ffmpeg.c:194: error: \u2018AVMEDIA_TYPE_AUDIO\u2019 undeclared (first use in this function)\n/home/user/Downloads/FreeRDP/channels/drdynvc/tsmf/ffmpeg/tsmf_ffmpeg.c: In function \u2018tsmf_ffmpeg_decode\u2019:\n/home/user/Downloads/FreeRDP/channels/drdynvc/tsmf/ffmpeg/tsmf_ffmpeg.c:416: error: \u2018AVMEDIA_TYPE_VIDEO\u2019 undeclared (first use in this function)\n/home/user/Downloads/FreeRDP/channels/drdynvc/tsmf/ffmpeg/tsmf_ffmpeg.c:418: error: \u2018AVMEDIA_TYPE_AUDIO\u2019 undeclared (first use in this function)\nmake[2]: * [channels/drdynvc/tsmf/ffmpeg/CMakeFiles/tsmf_ffmpeg.dir/tsmf_ffmpeg.c.o] Error 1\nmake[1]: * [channels/drdynvc/tsmf/ffmpeg/CMakeFiles/tsmf_ffmpeg.dir/all] Error 2\nmake: *** [all] Error 2\n?\n. Hi,\nindeed the problem is solved on that machine. It's a pity that a reel\nsustainable solution and a reason for this misbehavier couldn't be cleared\nas I have a whole bunch of machines with the same issue (all Ubuntu 10.10).\nI think this is worth some further investment as this problem still\npersists in FreeRDP 1.0. I had the impression that the problem might is\nconnected to ffmpeg. Antony what do you think? Can you remember the exact\ncompilation string? Or could it be anything left over from an old FreeRDP\n0.82 installation that is conflicting with the new version? I mean: you\ncompiled into a separate folder, independend from the installation of the\nold version and it worked right away. But if the standard path is used it\ndoesn't work, right?\nAntony, again thanks a lot.\nRegards,\ngotsiboon.\nOn Wed, Nov 9, 2011 at 5:25 AM, atong-tcs \nreply@reply.github.comwrote:\n\nJust want to log, earlier today we temporarily resolved gotsiboon's build\nissues and verified that freerdp git & rfx is working on his ubuntu system.\nThe rfx caps were being sent, rfx encoded packets were being received, &\nevent log message were showing up against a RDSH system.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/137#issuecomment-2674631\n\n\nNo 112!\n. Hi Marc-Andr,\nwhat info do you need? I'm willing to deliver any info you want...\nFor my last compilation-probs see my messages above.\nRegards,\ngotsiboon.\n\nIf someone could identify a particular setup known to fail, I'll try to\nreproduce it.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/137#issuecomment-2712881\n\n\nNo 112!\n. Hi,\nI just tried the current chihchun-builds and can confirm that it works now.\nRegards,\ngotsiboon.\nOn Thu, Dec 8, 2011 at 2:44 AM, Eduardo Beloni <\nreply@reply.github.com\n\nwrote:\nHi,\nI've just tried RemoteFX in my Ubuntu 10.04. It works for playing video,\nbut the aero themes (window border transparency, etc) don't show up.\nWhen I tryed the old FreeRDP I got videos working and the aero themes as\nwell.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/137#issuecomment-3052299\n\n\nNo 112!\n. But yes,\nAero doesn't show up with Freerdp beta2 deb from chihchun. Have to agree\nwith Eduardo.\ngb.\nOn Thu, Dec 8, 2011 at 11:43 AM, Gotsi Boon gotsi.boon@gmail.com wrote:\n\nHi,\nI just tried the current chihchun-builds and can confirm that it works now.\nRegards,\ngotsiboon.\nOn Thu, Dec 8, 2011 at 2:44 AM, Eduardo Beloni <\nreply@reply.github.com\n\nwrote:\nHi,\nI've just tried RemoteFX in my Ubuntu 10.04. It works for playing video,\nbut the aero themes (window border transparency, etc) don't show up.\nWhen I tryed the old FreeRDP I got videos working and the aero themes as\nwell.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/137#issuecomment-3052299\n\n\nNo 112!\n\n\nNo 112!\n. Hi,\nVic modified the rdpsnd plugin in September to accept arguments. Example:\nxfreerdp -u user --no-nla -f --plugin rdpsnd --data latency:50 -- 192.168.x.x\nThe value of latency is in milliseconds. A latency of ''0\" means default latency.\nIt's only working with Freerdp 1.0, the old version does not know this argument.\nAnd it seems like this is working with alsa plugin only (not pulse).\nThis feature is NOT documented, yet. It should be added to help, man & wiki.\nRegards, \ngotsiboon.\nPS: If anybody else confirms latency is working, this ticket could be closed, right?\n. Dear developers,\nthis issue does still exist. We have a whole bunch of schools that would like to use linux thin clients with FreeRDP. But they need multimedia redirect. So, they would run into this issue everytime a kid logs of. This is a definite problem.\nIt would be very nice if somebody could try to fix this.\nBest regards,\ngotsiboon.\n. ",
    "nlemberger": "The proper way to determine if a session has connected with RemoteFX on RDSH is to use the event viewer:\nApplications & Service Logs->Microsoft->Windows->RemoteDesktopServices-RemoteDesktopSessionManager->Admin\nYou will see an event for each RFX login saying RemoteFX was enabled.\nAlso, a git clone from the Nov. 1st works with my 2008R2 RDSH server just like it's supposed to.\n. I was using a fresh git clone (Nov 3) on compiled & used on Ubuntu 11.10 - my setup was using multimonitor & full screen.  I am connecting to a 2008R2-SP1 Terminal Server.\nI launched xfreerdp with: ./xfreerdp --rfx -f --plugin rdpsnd --data latency:12 -- serverIP\n. I don't suppose the standard has the ability to set with strings like: \"GMT -6, GMT -5\" for standard and daylight savings?  At least you could calculate those based on the client time... mapping all those strings and then maintaining it sounds like quite a chore.\nI've disabled TZ redirection on my server so it uses the TZ set on the console.  We don't have any folks outside of our current timezone on a regular basis - and those that are generally use windows clients.\n. I don't believe this is a FreeRDP issue, I think it's a packaging issue.  Try installing GNOME (apt-get install gnome) - there is some missing dependency in the package which causes this to happen.  I have the same problem on LTSP installs and adding the GNOME and it's boat-load of packages and --rfx works fine for me.  I tried it by just installing Unity (much smaller) with no luck.\n-Nick\n. ",
    "dpoe": "I am using an RDVH server and, while I can definitely confirm that remoteFX is being used, Aero is being disabled.  The logfile on the server shows the RDP server processes -- after negotiation and connection creation -- are disabling the Desktop Window Manager:  \"The Desktop Window Manager was unable to start because composition was disabled by a running application\".\nI can also confirmed that xfreerdp did work correctly in the freerdp-0.8x development branch -- same server, same parameters, and you get an Aero desktop; while with freerdp-1.0 you do not.\nI spent a little time looking through the code for missing or changed capabilities or something, but I haven't found the \"smoking gun\" yet.  However, a couple things caught my eye:  rdp_write_offscreen_bitmap_cache_capability_set has a stream_read_uint32 rather than stream_write; and in xf_post_connect where xfi->primary_buffer is allocated, might it be using xfi->width and xfi->height before they are initialized to instance->settings->width and instance->settings->height?\n. The \"--composition\" flag almost works (the equivalent of -x 100).    The place it falls down is in gcc.c:gcc_write_client_core_data:  there's a check in there to see if settings->performance flags == PERF_FLAG_NONE(0) before turning on an early capability flag (RNS_UD_CS_VALID_CONNECTION_TYPE) and setting connection type to CONNECTION_TYPE_LAN.  Since that's required for a remoteFX connection, the server disables remoteFX when that flag gets disabled.\nIf I locally change that check to \"if ((settings->performance_flags & ~PERF_ENABLE_DESKTOP_COMPOSITION) == PERF_FLAG_NONE)\" and I use the --composition flag, I get a lovely remoteFX desktop including Aero support!  Hopefully that's enough to get Issue #137 closed.\n. Note that --composition has to be used after --rfx, since the --rfx code resets the performance_flags to zero.   It might be nice in the long run to get rid of order dependency for options, but that's just a nicety.\n. I've been looking into the atong@9af2a23 patch, and I got it working on sometimes -- but not reliably.   Like jiten19 I had to change the array of zeroes passed to crypto_hmac_final to 32 in size rather than 16.  I also had to set SIGPIPE to be ignored in main(), before freerdp_handle_signals, because SSL operations to broken pipes tend to send this signal (especially SSL_shutdown), and a SIGPIPE is otherwise forces the client to shut down before reconnection can be attempted.  Also, I'm not sure the attempt-loop in rdp_check_fds will do any good..doesn't rdp_client_reconnect disable the cookie for further reconnection attempts by setting cbLen=0?\nMore importantly, the main loop in xfreerdp_run seems to sometimes stop looping -- probably blocked somewhere on a socket -- so it never gets to freerdp_get_fds and the reconnect code; and sometimes it fails to notice anything has gone awry.  The latter may require some sort of keepalive to monitor client-server traffic (RefreshRect on a single pixel might suffice, when available...I haven't found any other client->server messages that are guaranteed to provoke a response from the server).\nThis may get back to the idea of running the transport layer in a separate thread, so it can be monitored and restarted without ever worrying about the main thread hanging.  But that's a Big Deal, I know.\n. valgrind worked great at identifying where the leaked memory was malloc'ed.  But it is less good at identifying where that memory should have been freed.  :)\nAs far as a pull request goes, I'd like someone more familiar with rdpsnd and plugins to confirm, \"yeah, that's the right way to fix it.\"\n. There's something broken in authentication currently, so I can't test code and therefore can't post a pull request. However, in looking at this earlier, I had to change freerdp_get_current_time_zone_rule to:\n1) compute bias as before\n2) if currently DST, add 60 to standard Bias and use the computed bias as daylightBias; else use it as standard and subtract 60 from daylight.\n3) if stdBias < 0, tz = freerdp_detect_windows_time_zone(-stdBias); else tz=freerdp_detect_windows_time_zone(720+stdBias)\nI'll post a patch once I can test code again.\n. ",
    "willchenjian": "Hi tmoore22,\nI upgraded libavcodec and freerdp can compile on my machine now, thank you very much!\n. ",
    "Falcon-1": "Hi awakecoding,\nThanks forf the quick response\nAs host I'm running Ubuntu 11.04 Maverick with VirtualBox OSE from the repository\nAs guest I'm running the Windows XP Mode from Windows 7, Windows XPM for short. \nThe XPM is a tailored Windows XP virtual machine (appliance) from MS for use with windows 7 to ensure backward compatibility. The XPM features a seamless integration with windows 7, obviously done via the remoteapp \nsource: http://www.freerdp.com/wiki/doku.php?id=remoteapp and http://social.msdn.microsoft.com/Forums/en-US/os_windowsprotocols/thread/d91b20a2-96af-406c-aa56-085058a0af44/\nThe report by Vincent to MS clearly states the two additional channels were found in the network. To which MS replied that these belong to XPM and should have been there. I assume therefore that XPM uses the remoteapp for Win7 intergration. Perhaps that the other two channels have some significance.\nAlso the wikipedia article on VirtualPC states RDP is used for desktop intergration. And that a regular Windows XP SP3 can be enanched with the RAIL channels / Desktop integration. http://en.wikipedia.org/wiki/Windows_Virtual_PC Search for the 'seamless' keyword.\nHowto XPM in VirtualBox http://vdhout.nl/20110518/\nHowever when trying to connect no window no error message.\nHope you can help.\n. Info:\nEnabling seamless for  a regular windows XP SP3:\nhttp://www.mydigitallife.info/enable-remoteapp-in-windows-xp-or-vista-to-publish-programs-to-windows-7-virtual-pc-host-with-kb961741-or-kb961742-rail-qfe/\nhttp://www.microsoft.com/download/en/details.aspx?displaylang=en&id=4465\n. oops wrong button\n. Did not test with mstsc first.. mstsc doesn't run on ubuntu ;-) will test later with a second vm\n./client/X11/xfreerdp -u Administrator -p '**_' --app --plugin channels/rail/rail.so --data 'C:\\WINDOWS\\system32\\notepad.exe' -- __._..\n. I already tried aliases as well: '||notepad' '||cmd'.I'll test with a second vm and return the results.\n. ",
    "nfedera": "Here is more info:\nRemoteApp is basically supported on the following Windows Workstation OSs: \n1) Windows XP Professional SP3 (x86 only !). \nRequires Microsoft KB961742-v3 to be installed: http://support.microsoft.com/kb/961742\n2) Windows Vista Enterprise or Windows Vista Ultimate SP1 or. SP2  (x86 only!)\nRequires Microsoft KB961741 to be installed: http://support.microsoft.com/kb/961741 \n3) Windows 7 Enterprise and Ultimate (x86 and x64)\nFor all of these you have to create the following registry value to allow unlisted remote programs:\nCreate the key HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services if it does not exist.\nAdd a DWORD-Value called fAllowUnlistedRemotePrograms and set it to 1\nUsing mstsc I was able to open a TSRemoteApp on all these operating systems.\nHowever, for XP a little hack is required for the .rdp file.\nYou need to add the following lines:\nDisableRemoteAppCapsCheck:i:1\nAlternate Shell:s:rdpinit.exe\nPrompt For Credentials On client:i:1\nThe setting DisableRemoteAppCapsCheck:i:1 is required because mstsc is not able to automatically detect that XP SP3 does support TS RemoteApp even with the appropriate KBs installed. Without this line mstsc brings up an error message \"The remote computer does not support RemoteApp.\"\nAlternate Shell:s:rdpinit.exe is probably needed to work around a problem with that detection failure.\nThe last line tells the RD Client to always prompt for the credentials on the client side which comes handy if your Terminal Server does not support NLA on the server side (which only true for Windows XP).\nNow regarding xfreerdp:\nRemoteApp worked out of the box with Windows 7 and Vista using the following command line:\n./client/X11/xfreerdp -u username -p password --app --plugin channels/rail/rail.so --data \"%WINDIR%\\System32\\notepad.exe\" -- servername\nIt does not work for Windows XP. \nThe RAIL Handshake PDU is never received on the client side.\nIf you read http://blogs.technet.com/b/askperf/archive/2008/02/22/ws2008-terminal-services-remoteapps.aspx you'll see that rdpinit.exe and rdpshell.exe are the server-side part of the RAIL virtual channel.\nI've inspected the user's processes on XP and noticed that rdpinit.exe does not get launched.\nNext I've tried to simulate the XP solution ( Alternate Shell:s:rdpinit.exe) with xfreerdp by adding the \"-s rdpinit.exe\" parameter:\n./client/X11/xfreerdp -s rdpinit.exe -u username -p password --app --plugin channels/rail/rail.so --data \"%WINDIR%\\System32\\notepad.exe\" -- servername\nThis looks very promising: On the server rdpinit.exe and rdpshell.exe are executed and xfreerdp now receives the RAIL Handshake and System Parameters Update PDUs, sends the Execute PDU but never receives the Execute Result PDU.\nThis is the rail debug when connecting to Windows Vista/7:\nDBG_RAIL rail_order_recv (409): Received Handshake PDU, length:8\nDBG_RAIL rail_send_pdu (115): Sending Handshake PDU, length:8\nDBG_RAIL rail_send_pdu (115): Sending Client Status PDU, length:8\nDBG_RAIL rail_order_recv (409): Received System Parameters Update PDU, length:9\n                                (SPI_SET_SCREEN_SAVE_SECURE)\nDBG_RAIL rail_order_recv (409): Received System Parameters Update PDU, length:9\n                                (SPI_SET_SCREEN_SAVE_ACTIVE)\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:18\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:16\nDBG_RAIL rail_send_pdu (115): Sending Execute PDU, length:70\nDBG_RAIL rail_order_recv (409): Received Execute Result PDU, length:74\nDBG_RAIL window_state_update (143): ownerWindowId:0x00000000\nDBG_RAIL window_state_update (147): windowId=0x40026 ownerWindowId=0x0\n...\nAnd here the XP connection's log:\nDBG_RAIL rail_order_recv (409): Received Handshake PDU, length:8\nDBG_RAIL rail_send_pdu (115): Sending Handshake PDU, length:8\nDBG_RAIL rail_send_pdu (115): Sending Client Status PDU, length:8\nDBG_RAIL rail_order_recv (409): Received System Parameters Update PDU, length:9\n                                (SPI_SET_SCREEN_SAVE_ACTIVE)\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:18\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:9\nDBG_RAIL rail_send_pdu (115): Sending System Parameters Update PDU, length:16\nDBG_RAIL rail_send_pdu (115): Sending Execute PDU, length:70\nThe only noticeable difference is that Windows Vista/7 sends two System Parameters Update PDUs but that is ok because according to MS-RDPERP SPI_SETSCREENSAVEACTIVE is not supported on XP.\nHope this helps a little bit to track down the issue.\n. No. This is definitely not fixed. @otavio please untag fixed-waiting-test ;)\n. @westtexan: May I ask you to evaluate my fix/workaround:\nhttps://github.com/nfedera/FreeRDP/commit/465c5e865473d88667593e04376be37e7b59facc\nIf it works I'll send a pull request.\n. @westtexan: Thanks for testing. It is merged into master already. \nPlease close the issue if it works for you.\n. I can confirm this black full screen issue with -f.\nThe X11 window correctly covers the full screen but the rdp context width/height is just 1x1 pixels ;)\nThis happens if compiled with WITH_XINERAMA=OFF or if the libxinerama-dev package is not installed when compiling.\nReason: xf_monitor.c sets xfi's width and height based on the vscreen->area dimensions which are calculated using xinerama functions. Thus if xinerama is disabled vscreen->area is 0,0,0,0 at this point.\nI will upload a pull request in a few minutes ...\n. This does not look wrong to me ... more probably a border setting under \"Window Color And Appearance\" as shown in the following screen shot of a FreeRDP --app session:\n\n@MarcusMoeller: Any comments ?\n. RemoteApp is only supported on:\n- Windows XP Professional SP3 (x86 only !).\n- Windows Vista Enterprise or Windows Vista Ultimate SP1/SP2 (also x86 only!)\n- Windows 7 Enterprise and Ultimate (x86 and x64)\nJacob, on which exact Windows Editions are you testing ?\n. You need to be logged out from the Windows 7 console !\n. Here is the reason:\nWindows 7 can only do one concurrent RDP session.\nTS RemoteApp is a virtual channel that starts AFTER you've logged on.\nIf you're logged on (either on the console or in another RDP session) at the time you're trying to make a RemoteApp connection to that machine Windows will show a screen with the following text inside the RDP session: \nAnother user is currently logged on to this computer. If you continue, this user has to disconnect from this computer. Do you want to continue?\nIf you click Yes the other logged on user will get a notification with the option to confirm or deny the request.\nIf he does not deny or confirm within 30 seconds you're allowed to log on.\nNow the problem is that xfreerdp in RemoteApp mode does not show this screen and therefore you never get the chance to send the request.\nMicrosoft's mstsc seems to handles this problem as follows:\nIf the server-side RAIL channel does not start within a certain amount of time mstsc will show the normal full-sized RDP display. After successful logon mstsc switches to RemoteApp mode as soon as the server-side RAIL channel starts.\nCan you confirm that it works if you're not logged on to the server when makeing the RemoteApp connection with freerdp ?\nIf so this issue should be tagged as feature request.\n. @jacob019: May I ask you to evaluate my fix/workaround:\nhttps://github.com/nfedera/FreeRDP/commit/465c5e865473d88667593e04376be37e7b59facc\nIf it works I'll send a pull request.\n. That has nothing to do with my branch. This part is 100% identical to FreeRDP/master.\nYou seem to be missing the XDamage development files (sudo apt-get install libxdamage-dev).\nOr configure with WITH_XDAMAGE=OFF.\n. Regarding Windows XP - this is expected. FreeRDP does not support Windows XP's RemoteApp mode yet for some unknown reason - see issue #142.\nFor Vista, 7, 2k8 and 2k8R2 it worked perfectly fine when I've tested. \nYour \"master branch\" was also the most current revision ?\nI'll dig into this a bit deep next week. Please also let me know your findings with Windows 7.\n. Thanks for testing.  However, It should also work with the master branch if you're logged out from the Win7 console.\nJust to make sure: You did checkout my \"railfix\" branch as in:\ngit clone -b railfix git@github.com:nfedera/FreeRDP.git\nRight ?\n. Ok that's not enough. Using that command you cloned my FreeRDP repository.\nYou still need to checkout (switch to) my railfix branch using the following command in the FreeRDP directory:\ngit checkout railfix\nThe following command shows the branches and indcates the active branch with an asterisk:\ngit branch\nAny you should see something like this:\nmaster\n* railfix\nSo please make sure that \"railfix\" is the active branch before compiling/testing.\n. No problem, my bad, I should have added instructions how to checkout my branch.\nAnd thanks for taking the time to test.\nThere is still an issue if a \"RAIL exec error\" is received: If the specified app cannot be found or if it is not in the list of allowed applications the main window should also be destroyed.\nI'll add this tomorrow and send the pull request.\nI'm aware that this is not the most elegant solution but it is definitely an improvement and probably good enough for 1.0.\n. pFileSearch->lpPattern and pFileSearch->lpPath must also be freed (here and and in the other error handlers above).\nEasier to always call FindClose() on error but FindClose needs to be fixed first to check ->pDir before calling closedir()\n. This does free the array but not the array members. These get implicitly allocated in crypto_cert_subject_alt_name using OpenSSL's ASN1_STRING_to_UTF8 and should be freed using OPENSSL_free(). However IMHO these internals should be hidden by creating/using a function crypto_cert_subject_alt_name_free\n. Using bpp ... not so good. The idea was to calculate a size suitable for any possible codec.\nOf course the calculation could be fine-tuned according to the used codecs.\nHowever it does not hurt at all. The client is always free to honor the setting or to sent something lower - at least in non-rfx mode. in rfx mode the client must use our setting (or a larger value, according to the specs and in that case the calculation is currently fine\n. damn ... you're right, time for a new pr\n. That's how it is done currently.\n. Pullrequest #1786 should fix that.\n. Shouldn't there be a BIO_free_all(transport->frontBio); ?\n. Shouldn't this be window->fullscreen = fullscreen ?\n. You're not checking for SmartSizing\n. Can you give an example for a wm where this was required ? (just curious)\n. SmartSizing is ignored again\n. good!\n. check home != NULL\n. check subPath != NULL\n. and what if HAVE_EVENTFD_H is not defined ?\n. again: if HAVE_EVENTFD_H is not defined ?\n. brackets suggested\n. indention\n. not required but doesn't hurt\n. s/0/NULL\n. I'd suggest to use g_RootLog instead of WLog_GetRoot() which might create a new root log which is not really what we want in uninit ;)\n. Don't think INVALID_HANDLE_VALUE is possible here, please check again\n. I guess the if ( (p+1) && ...) should be if ((p+1) ...) or if (p[1] ...)\n. @bmiklautz ack, didn't notice this was at the very end.\n. again: p + 1 is always true, probably that should be if (p[1] ...)  or  if ((p+1) ...) \n. again: p + 1 is always true, see above\n. suggest to move this label above line 294, delete line 298/299 and initialize status to FALSE\n. Shouldn't this be if (!pcmData) ?\n. according to the return value documentation above - shouldn't it return 0 on error ?\n. remove ; at eol !!\n. IMHO this is always true in this context - no ?\n. name (the parameter) and names (result of strdup) both must be checked for NULL\n. same question: can this really be false in this context ?\n. same question: how can this be false in this context ?\n. s/falied/failed\n. s/falied/failed\n. s/falied/failed\n. free both\n. free both, one might have been successfully allocated\n. lpszEnvironmentBlock is missing a null check after line 232 above. Not sure if that should be part of this pr\n. Is there a DeleteCriticalSection(&queue->lock) missing ?\n... and maybe InitializeCriticalSectionAndSpinCount result should be checked above (not your code)\n. Shouldn't this be 4 + 2 ??\ngcc_write_user_data_header writes 4 bytes\nand Stream_Write_UINT16 adds 2 bytes\n. suggest to move status to the else tree below where it is used\n. missing free(license->PlatformChallenge->data) ?\n. if license_decrypt_platform_challenge fails some of the pointers printed in the debug lines above are null.\nSuggest to do the debug statements inside a  if (ret)\n. looks funny ;) suggest to start that directly right of the return\n(same for line 190 below)\n. Why not just return FALSE ?  Is this so unlikely that we must assume a CPU / memory error ?\n. should move return TRUE one line up to avoid unreachable code warnings\n. (unsigned int) does not fit into %04X !\n. (unsigned int) does not fit into %04X\n. If that was the only real use for the variable maxWidth it should have been be removed\n. If that was the only real use for the variable maxHeight  it should have been be removed\n. IMHO It is not really obvious in the code (unless studying the macro of course) that IFCALLRETURN actually returns and maybe the name has to little contrast to IFCALLRET.\nI'd suggest to change it to something like this:\n```\ndefine IFCALLASSIGN(_default_return, _cb, ...)  (_cb != NULL) ? _cb( VA_ARGS ) : (_default_return)\n```\nThen it would be clearer in the code because of the explicit return:\ne.g. return IFCALLASSIGN(-1, addThreeValues, 4, 5, 6)\njust my two \u00a2 ;)\n. white spaces after BOOL\n. shouldn't this also be goto out_fail; ? just asking ...\n. should use tab indention \n. afaik return value 0 means failure and anything else is success. if that's true then I'd suggest to change this to == 0\n. afaik return value 0 means failure and anything else is success. if that's true then I'd suggest to change this to == 0\n. Should we check for gdi_BitBlt success (!=0) here ?\n. Probably wrong because != 0 means success and == 0 means failure\n. Probably wrong because != 0 means success and == 0 means failure\n. This is ok for freerdp, however I'd suggest to check for == 0 to match the msdn description.\n. This is ok for freerdp's api but I'd suggest to check for == 0 to match the msdn description.\n. This is ok for freerdp's api but I'd suggest to check for == 0 to match the msdn description.\n. This line can be deleted\n. ret is assigned by gdi_FillRect and gdi_FillRect returns 0 on failure. Shouldn't this check be if (ret == 0) in this case ? (and if yes ret should be initialized with 0)\n. OMG ... Now I see why the original code did not use any return value checking ... obviously  because nobody really knew the meaning.\nThanks, you're doing a heroic job here!\n. shadow_multiclient_get_subscriberreturns is not checked for NULL. Should the thread run in that case ?\n. shadow_multiclient_consume result is not checked. I guess there is a reason why you made it BOOL ?\n. shadow_multiclient_getevent is not checked for NULL. Should the thread run in that case ?\n. You don't have to check pointers passed to free() for NULL. Please see man free ;)\n. @louyihua The spec (https://msdn.microsoft.com/en-us/library/ff635150.aspx) says:\n\nThe TS_RFX_CHANNELS message MUST contain a single channel\n\nAnd also the channelId in the data messages always MUST be 0.\nThis makes me wonder and I'd like to know if you have seen this in real live or just implemented your conclusion from reading the specs here ?\nI know this was a long time ago but I'd be glad If you' remember and report back here. Thanks!\n. @akallabeth I don't see where that would be. Maybe you've looked at the negative/red/old part of the diff ?\n. @akallabeth I know but since it is in the context that would be unnecessary here. We return FALSE which in turn results in a NULL rfx message delivered to the outmost caller who might either continue to use the rfx context or free it.\n. @akallabeth Since it is in the context that would be unnecessary here.\n. @akallabeth Since it is in the context that would be unnecessary here.\n. Sure and it does get freed via rfx_message_free() below ...\n. You need to add a case EBUSY which also indicates that it is already locked.\nTry running ./Testing/TestSynch TestSynchMutex as proof.\n. @hardening of course I thought about that but in that case it is completely useless if you look at the calling code ... unless rewriting the windows client which is not what this PR is about ;)\n. Master is already on revision 3 ... suggest to rebase\n. I'd suggest to return FALSE if WIN32 is defined and is missing the implementation\n. It might be important to check listener->num_sockfds against MAX_LISTENER_HANDLES in the beginning of the function - right ?\n. @hardening done\n. This function (VirtualChannelEntry) is BOOL. Just return encomsp_add_init_handle_data() - right ?\n. VirtualChannelEntry is BOOL\n. nice catch!\n. NULL check ?\n. Function is BOOL. Should return FALSE here.\n. Function is BOOL. Should return FALSE here.\n. This function (xf_keyboard_action_script_init) seemed to return 0 on failure and 1 on success. Here you return the result of xf_event_action_script_init() which returns -1 on failure\n. Shouldn't you return INVALID_HANDLE_VALUE here like in the other error cases below and above ?\n. 1. Shouldn't we do the clean-up in that case ?\n2. I just noticed that the code in line 101 below is wrong.  Under the fail_encoder_new: label CloseHandle should be called with client->StopEvent and not with client->encoder !\n. Maybe move \"pContext->dwCardHandleCount++;\" from line 574 above directly before the return ?\n. If ArrayList_Add fails then memory won't be freed - right ?\n. Shouldn't this be Stream_EnsureRemainingCapacity ??\n. Note: since getpwnam is not thread safe on Linux I'd suggest to use getpwnam_r() instead.\n. not your code but since this function is bool now you could also check the malloc 7 lines above and return false if it failed.\n. this break statement can be kicked too\n. not your code but a malloc failure (2 lines above) could be handled too\n. This is definitely wrong. If ret is FALSE here this means that instance->ContextNew is set and failed.\nThis change would break all clients!\n. I don't see any logical change here and your modifications are against the FreeRDP coding style guidelines \n. I don't really care but the other test is called TestWinPRUtils (uppercase PR).\n(In case you will change it also update the .gitignore)\n. Yes, meaning it doesn't have the prefix. Windows also returns S_FALSE in this case \n. Update: it has the prefix but nothing where the prefix can be removed from. So that's perfectly fine \n. Since android_event_disconnect_new was modified to return NULL if alloc fails we should check the result here and not rely on the assert below.\nAnd also I'm not sure if the WLog_ERR text below is considered final ;)\n. Not sure if this function will be called multiple times but if it fails below before settings->HomePath and settings->ConfigPath are set to new values there might be an issue if these are not set to NULL after the free()\n. Not your code but it would be much nicer to just declare+assign p like this:\nchar* p[1] = { \"rdpsnd\" };\nNo need to malloc/check p\n. Like above. Suggest to declare+assign p like this: char* p[1] = { \"audin\" }; instead of malloc/check/free\n. Since you're freeing argv I wonder why the array members (up to index-1) members are not freed here.\nE.g.: for (index--; index >= 0; index--) free(context->argv[index];\nHowever, since this is WinMain the usefulness is questionable anyways.\n. Missing for (n--; n >= 0; n--) free(clipboard->clientFormats[n].formatName)  before free(clipboard) ?\n. ahmm popen returns NULL on failure - right ?\nSuggest to grep FreeRDP source for missing/wrong popen() return value checks\n. maybe rename bStandard if it is int now\n. nice solution !\n. IMHO the solution you've used in freerdp_client_rdp_file_set_string() with the tmp LPSTR* variable is more elegant.\n. This will cause a crash in out_fail because there x509_cert_chain is referenced\n. Not it is not. Must be freed here\n. certificate->x509_cert_chain might be NULL !\n. leading whitspace\n. something wrong with formatting here (many leading tabs from line 956 to line 967)\n. Looks like you wanted to add return value checks for ber_read_contextual_tag, ber_read_integer, ber_read_octet_string_tag and nla_read_ts_password_creds but then forgot ?\n. Sorry, just saw it is fine and the results get anded\n. @bmiklautz ignore my comments since this is the only strdup\n. RegCloseKey missing here before return ?\n. RegCloseKey must be called in all return paths below\n. why not == 1   ?\n. imho if (fread() != 1) { ... }  would be clearer here\n. formatting indent seems wrong\n. nice!\n. Even if the check for S_OK if it is correct most of the time please use the FAILED() or SUCCEEDED() macro for testing HRESULT values.\n. please use  FAILED() or SUCCEEDED() macro for testing HRESULT values\n. Please use if (FAILED(status)) instead.\n. Please use if ( FAILED(NativePathCchAppendA(...) ) instead.\n. Please use if ( FAILED(NativePathCchAppendA(...) ) instead.\n. Since you're explicitly using GetComputerNameExA and _strdup below you should not use TCHAR but CHAR here.\n. Since you're explicitly using GetComputerNameExA and _strdup below you should not use TCHAR but CHAR here.\n. use CHAR instead (since GetComputerNameExA and other ascii function versions are used below)\n. use CHAR instead (since GetComputerNameExA and other ascii function versions are used below)\n. use CHAR instead (since GetComputerNameExA and other ascii function versions are used below)\n. Not your code but these two sizeof() calls are wrong since it gives the pointer size !!\n. Not your code but like above these sizeof() calls are wrong since it gives the pointer size !!\n. this should be calloc - right ?  I wonder how that has compiled successfully\n. Not your code but missing fread() result check in line 92\n. @mfleisz nice finding but what would be wrong with this:\nwhile (i) {\n    free(settings->TargetNetAddresses[--i])\n}\n. clipboard->numFormats is one too high\n. nice catch!\n. I suggest to simply allocate progressive->tiles in progressive_surface_context_new() instead and kick progressive->cTiles\n. Not your code but the fwrite arguments (size and nmemb) seem to be mixed. Although it works like this the correct way would be:\nsize_t nmemb = strlen(hosts[i]);\nsize_t size = sizeof(char);\nif (fwrite(hosts[i], size, nmemb, fl) != nmemb) ...\n... because we want to write nmemb characters where each character has sizeof(char) bytes.\n. nice catches! right - contrary to free fclose(NULL) is really undefined.\n. no problem but the variable passed as fwrite's nmemb parameter is called size J\n. yes, way better this way. the old impl. was kinda weird\n. @bmiklautz right, in this case a simple if (fwrite(str, strlen(str), 1, fp) != 1) is definitely the better way. And if character size > 1 I'd also want to write one element in this case using if (fwrite(wstr, wcslen(str)*sizeof(wchar_t), 1, fp) != 1)\n. @bjcollins not sure was the original intention was, but vHeight - vHeight is zero - right ?\n. @bjcollins absolutely and basically you're right. The reason for this change is that some window managers (xfwm4 in particular) show a weird behavior if using the NET_WM_FULLSCREEN_MONITORS property where all IDs (top, bottom, right, left) are the same. On the other hand _NET_WM_FULLSCREEN_MONITORS is _not required for full screen on a single specific monitor because it is and always was sufficient to move the window to the correct position and add _NET_WM_STATE_FULLSCREEN afterwards.\n. @bjcollins ... and with this change I got at least single monitor fullscreen (/f) working and displaying on the correct monitor (either with your mouse position detection and/or by specifying a single monitor id using /f /monitors:X) with all window managers I had available (xfce, unity, openbox 3.5/3.6, icewm, awesome)\n. unimportant remark: rename label to error_host_alloc since it is also targeted from strdup\n. I guess WLog_UdpAppender_Open() would always return FALSE here because NULL is passed for the log parameter which triggers the return FALSE in line 50\n. Shouldn't this be Stream_Capacity(s) ?\n. Why not use _s directly as it was before ?\n. This should be WINPR_SHA1_DIGEST_LENGTH !\n. Again line 94 + 95: this should be WINPR_SHA1_DIGEST_LENGTH !\n. I guess this should be WINPR_MD5_DIGEST_LENGTH\n. Line 129 + 130: Should be WINPR_MD5_DIGEST_LENGTH\n. @akallabeth An opaque wStream type would be nice but since there can't be a type that is both opaque and useable in inline functions I'd suggest to revert these.\n. @hardening I cannot reproduce this. And this would be a protocol violation since MS-RDPBCGR 2.2.10.1.1.2 Logon Info Version 2 says:\n\ncbDomain (4 bytes): A 32-bit, unsigned integer. The size in bytes of the Domain field (including the mandatory null terminator).\n\nSo IMO the minimum value is 2.  Do you remember how you reproduced that ?\n. Ok, thanks for the info. Adding a reference to the issue: https://github.com/FreeRDP/FreeRDP/issues/3186\nWill fix this ...\n. style: wrong indentation \n. style: wrong indentation \n. Not your code but LoadImage return values should be checked\n. missing failure check\n. copy-paste error: this should be &password instead of &user \n. copy-paste error: this should be domain = NULL;\n. I don't think that TRUE should be returned if any _strdup or ConvertFromUnicode call failed\n. This will leak memory if _strdup failed for either domainor password\n. smells fishy. Jup and currently LONG is not necessarily == long unfortunately  which I'm about to change with an upcoming PR. UINT32 cannot be < 0. Please see https://github.com/FreeRDP/FreeRDP/blob/master/docs/PrintFormatSpecifiers.md regarding the print format specifiers.. Please elaborate: Aren't you losing precision here?. computerName memory leaking here. allocated computerName memory is leaking here. According to https://msdn.microsoft.com/en-us/library/windows/desktop/ms724301(v=vs.85).aspx:\n\nThe length of the name may be greater than MAX_COMPUTERNAME_LENGTH characters because DNS allows longer names. \n\nSo why the limitation ?. computerName memory leaking here. computerName memory leaking here. Right! Sorry for the noise ;). Here and below: The actual fix must include the GetLastError() check and eventually a size check.\nSomething like this:\nif (ComputerNameNetBIOS, NULL, &nSize) || GetLastError() != ERROR_MORE_DATA ||  nSize < 2)\n    return FALSE;. @akallabeth good catch! This is definitely a bug in FreeRDP's GetComputerNameExA implementation. If it uses GetComputerNameA internally (which correctly returns ERROR_BUFFER_OVERFLOW) it must call SetLastError(ERROR_MORE_DATA) in that case.. data leaking here !. Shouldn't this be < 8 ?. I don't understand these two changes above. Looks weird.. again ... weird formatting.. please no space after the &. space after &. Didn't you also want to include  || !orderInfo ?. Maybe you've also planned to include  || !orderInfo ?. Didn't you also want to include  || !orderInfo ?. Again  || !orderInfo  missing ?. Missing  || !orderInfo ?. Missing  || !orderInfo ?. Missing  || !orderInfo ?. The previous success return value was 1. This change returns 0 on success. Did you check if this is ok and has no side effects?. length can be kicked. Warning, according to https://msdn.microsoft.com/en-us/library/windows/desktop/ms683188(v=vs.85).aspx\n\nIf the function succeeds, the return value is the number of characters stored in the buffer pointed to by lpBuffer, not including the terminating null character.\nIf lpBuffer is not large enough to hold the data, the return value is the buffer size, in characters, required to hold the string and its terminating null character and the contents of lpBuffer are undefined.\n\nIf FreeRDP's GetEnvironmentVariableA is implemented correctly then line 63 above is wrong and also your check is wrong. Please check ... . please no space after &. there's a space after &. I'd opt for keeping this label. Right!. nice finding! however, return false on error is required too. @hardening you're right, taking the context into account it is better to drop the const modifier.. Nice finding! It seems that the variable result that contained the valuable result of the actual operation was overwritten because it was (mis)used for storing the result of the smartcard_pack_*  functions.\nHowever, these functions are not void. Non-blocking comment: Might be a good idea to change them to void or even better do the error check correctly without nuking the resultvariable.. wrong indentation. wrong indentation. unused variable. - Don't know the internals but the new tsg_stream_align always uses 4 while we had 8 here.\n- Not sure if the removed checks were important. ",
    "jacob019": "Is this really fixed?  I would like to test it.\n. not working for me as of to2a9d9c681d (most recent master), even with --sec tls\njacob@office:~# xfreerdp --sec tls localhost\nconnected to localhost:3389\nError: protocol security negotiation failure\nxfreerdp --sec rdp localhost\nconnected to localhost:3389\n(just hangs here, no window)\n. got it, thanks!  No need to specify \"--sec tls\".  Once it is enabled in virtualbox everything just works.\nI suggest for the 1.0 release to clearly state in the documentation that freerdp can only connect to virtualbox if TLS security is enabled in virtualbox.  Perhaps with a link: http://www.virtualbox.org/manual/ch07.html#vrde-crypt\n. e411f1cab8 - I think this is the hash, I'm new to github.\nI just downloaded the sources again this morning and recompiled, same behavior.\n. Windows XP Professional SP3 and Windows 7 Ultimate x86\n. your branch will not compile for me\nLinking C executable xfreerdp-server\nCMakeFiles/xfreerdp-server.dir/xf_peer.c.o: In function xf_info_init':\n/usr/src/FreeRDP/server/X11/xf_peer.c:124: undefined reference toXDamageQueryExtension'\ncollect2: ld returned 1 exit status\nmake[2]: * [server/X11/xfreerdp-server] Error 1\nmake[1]: * [server/X11/CMakeFiles/xfreerdp-server.dir/all] Error 2\nmake: *** [all] Error 2\n. ah ha, you're right.  It compiled fine now, but I'm not having any luck with this one.  In fact it has regressed in that I can no longer connect to a Windows Server 2008 remoteapp.  It works fine with master though.  \nHere's what I get with your branch connecting to windows 2008:\njacob@office-jacob:/usr/src$ xfreerdp -u Jacob -p password --app --plugin rail --data \"||iexplore\" -- 10.0.0.41\nloading plugin rail\nconnected to 10.0.0.41:3389\nSSL_read: I/O error\nAfter reinstalling the master branch it worked fine:\njacob@office-jacob:/usr/src$ xfreerdp -u Jacob -p password --app --plugin rail --data \"||iexplore\" -- 10.0.0.41\nloading plugin rail\nconnected to 10.0.0.41:3389\nI also tried connecting to windows xp with both, no luck.  Both are able to do a regular session without any problems.\nAlso, as you suggested I tried to log out of the console before connecting to windows xp, but no change.  In fact the console session is kicked off in XP when attempting to connect.  I have not yet tried this with Windows 7.\n. I tried it on another system I and get similar but slightly different results when connecting to Windows 2008.\nMaster works fine.\nYour branch just brings up a black window where the remoteapp should be.\nNeither will connect to windows xp.  Tomorrow I'll try it with a clean Debian install, and I'll test with Windows 7 also.\n. Tested your branch with Windows 7 and a clean Debian install.  It works fine if I am logged out of the console, but when logged in it fails:\nxfreerdp -u Jacob -p password --app --plugin rail --data \"||iexplore\" -- 10.0.1.103\nloading plugin rail\nconnected to 10.0.1.103:3389\nrdp_client_connect_demand_active failed\nFailed to check FreeRDP file descriptor\nExact same behavior with your branch and master.\nThis will certainly be a nice new feature if it works as you intend.  Funny how I just get the black screen on my ubuntu installs.\n. I'm checking out with git clone https://github.com/nfedera/FreeRDP.git\n. ok, I feel stupid. Sorry, I'm new to github.\nAdding -b railfix did the trick.\nIt's working great with both Win7 and Win2008. Though I do agree that a timeout would be a more graceful solution. Thanks for the great work. We'll be using this in production at my office.\n. railfix opens a regular session with windows XP when attempting remoteapp.  Much better than just hanging.\n. agreed, thanks!\n. You could use zenity to make a poor mans GUI launcher, at least until Remmina support arrives for 1.0:\nxfreerdp -u $(zenity --text username --entry) -p $(zenity --text password --entry) $(zenity --text host --entry)\n. since you can set the username and password on the command line with the -u and -p options, I don't personally need this.  \nYou can always use nohup:\nnohup xfreerdp -u username -p password 192.168.1.10 > /dev/zero &\nThis will immediatly return you to the command line with no need to keep the terminal open.\nYou could also use zenity to make a poor mans GUI launcher:\nxfreerdp -u $(zenity --text username --entry) -p $(zenity --text password --entry) $(zenity --text host --entry)\nI really like the seperation between the GUI launchers such as Remmina and the FreeRDP application.  I think the real problem is that Remmina does not yet support FreeRDP 1.0.\n. good point, I suppose a detach option would be more secure.  You could still use nohup when launching it, then you can close the terminal window after entering your credentials.\n. @awakecoding, great plan!  This would also allow for enhanced runtime integration with launchers.\n. ",
    "westtexan": "I am using the following command:\nwesttexan@mc-debian:/usr/lib/freerdp$ xfreerdp -u westtexan --app --plugin rail --data '||Activity' -- terminalserver1\nloading plugin rail\nconnected to terminalserver1:3389\nPassword: \n.... There was a 120 second pause where I am guessing it is waiting for me to click OK on a window I cannot see ...\nrdp_client_connect_demand_active failed\nSSL_read: I/O error\nSSL_read: I/O error\nFailed to check FreeRDP file descriptor\nwesttexan@mc-debian:/usr/lib/freerdp$\nIt works fine using mstsc.exe on Windows 7. I have a screen capture of the logon banner that mstsc.exe shows - http://i51.tinypic.com/6pq5wo.png. Notice that it includes an extra message at the top, \"Waiting for RemoteApp programs to start...Please review any messages that appear.\" This makes me think that the window is presented differently to the client so that mstsc.exe know that the actual application has not started yet. Has any confirmed that FreeRDP can work with logon banners? I think that forcing RDP authentication instead of NLA would cause the same issue, since it would present the full-screen logon window before the single-window RemoteApp.\n. @awakecoding: According to www.ultimatewindowssecurity.com, \"enabling this setting without also enabling 'Interactive logon: Message title for users attempting to log on' will fail to display this message. Both settings must be configured.\"\n. I just tested it and it works as expected for my environment. I am able to\nclick \"OK\" to the logon banner, and can login interactively with our\nalternate authentication provider. I don't know the technical changes\ninvolved with this fix, but the behavior is consistent with Microsoft's\nimplementation. Thank you!!\nOn Fri, Dec 30, 2011 at 11:42 AM, Norbert Federa <\nreply@reply.github.com\n\nwrote:\n@westtexan: May I ask you to evaluate my fix/workaround:\nhttps://github.com/nfedera/FreeRDP/commit/465c5e865473d88667593e04376be37e7b59facc\nIf it works I'll send a pull request.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/143#issuecomment-3315313\n. \n",
    "lmbrt": "Same result... Is there anyway I can provide more information behind the problem?\n. ",
    "h2coder": "same problem only used with cliprdr:\nxfreerdp 10.131.200.199 --plugin /usr/lib/freerdp/cliprdr.so\n............\nfreerdp_chanman_load_plugin: filename /usr/lib/freerdp/cliprdr.so\nMyVirtualChannelInit:\nmissing server name\nSegmentation fault\n....................\nsource compilation\ncurrent version of git\n. ",
    "sunds": "There was a similar issue for pointer updates (cursors) with RAIL I addressed by keeping track of the \"current\" window in xf_event.c.  Perhaps something similar needs to be done for cliprdr.  In the code cliprdr is disabled in most places for RAIL, but I haven't tested or investigated further than that.\n. Otavio,\nI've done a \"git rebase origin\" in my repository and done a force push\n\"git push -f sunds\" to github.  Please let me know if you need\nanything else.\n-David\nOn Wed, Nov 2, 2011 at 8:24 PM, Otavio Salvador\nreply@reply.github.com\nwrote:\n\nBefore we merge it, please rebase it against master so we clean the log a bit.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/pull/198#issuecomment-2612271\n. Here is what I've just done:\n\n-bash-3.00$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 8 commits.\n\nnothing to commit (working directory clean)\n-bash-3.00$ git pull --rebase origin master\nremote: Counting objects: 98, done.\nremote: Compressing objects: 100% (32/32), done.\nremote: Total 62 (delta 47), reused 45 (delta 30)\nUnpacking objects: 100% (62/62), done.\nFrom https://github.com/FreeRDP/FreeRDP\n- branch            master     -> FETCH_HEAD\n  First, rewinding head to replay your work on top of it...\n  Applying: Fix memory leak in xf_window.c.  If property lookup for\n  current desktop failed, we leaked property memory for workspace\n  attributes.  Added check in case returned desktop number is greater\n  than number of workspaces.\n  Applying: remove unused pixmap\n  Applying: Remove xf_rail_FilterWindowInfo() function.  This function\n  incorrectly calculated a new width for windows that had a negative\n  origin (that is, windows partially off the desktop to the left).  The\n  function subtracted twice the window offset from the width.  To be\n  correct this function needed to keep track of the old and new window\n  positions and just subtract the difference.\n  Applying: The VisibilityNotify function was using elements out fo the\n  XEvent union that belong to the XExposeEvent event type. These fields\n  are not valid for XVisibilityEvents and contain garbage values.\n-bash-3.00$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 13 commits.\n\nnothing to commit (working directory clean)\n-bash-3.00$ git push -f sunds master\nCounting objects: 28, done.\nDelta compression using up to 2 threads.\nCompressing objects: 100% (21/21), done.\nWriting objects: 100% (21/21), 2.38 KiB, done.\nTotal 21 (delta 17), reused 0 (delta 0)\nTo git@github.com:sunds/FreeRDP.git\n- 6ec3c80...aa761c7 master -> master (forced update)\nThere were no conflicts.  Let me know if you'd like me to do it differently.\n-David\nOn Thu, Nov 3, 2011 at 11:42 AM, Otavio Salvador\nreply@reply.github.com\nwrote:\n\nYou need to redo it since it seems changes made it not mergeable again. Please do it again and push so we can merge it.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/pull/198#issuecomment-2619549\n. I also did a test to see if it merges and had no problems:\n\ngit clone https://github.com/FreeRDP/FreeRDP.git\ngit remote add sunds https://sunds@github.com/sunds/FreeRDP.git\ngit fetch sunds\ngit merge sunds/master\nUpdating a4ddc4c..aa761c7\nFast-forward\n client/X11/xf_event.c  |   24 ------------------------\n client/X11/xf_rail.c   |   13 -------------\n client/X11/xf_window.c |   20 ++++++++++----------\n client/X11/xf_window.h |    1 -\n 4 files changed, 10 insertions(+), 48 deletions(-)\n-David\nOn Thu, Nov 3, 2011 at 11:47 AM, D Sundstrom sunds@peapod.net wrote:\n\nHere is what I've just done:\n-bash-3.00$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 8 commits.\n\nnothing to commit (working directory clean)\n-bash-3.00$ git pull --rebase origin master\nremote: Counting objects: 98, done.\nremote: Compressing objects: 100% (32/32), done.\nremote: Total 62 (delta 47), reused 45 (delta 30)\nUnpacking objects: 100% (62/62), done.\nFrom https://github.com/FreeRDP/FreeRDP\n\u00a0* branch \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0master \u00a0 \u00a0 -> FETCH_HEAD\nFirst, rewinding head to replay your work on top of it...\nApplying: Fix memory leak in xf_window.c. \u00a0If property lookup for\ncurrent desktop failed, we leaked property memory for workspace\nattributes. \u00a0Added check in case returned desktop number is greater\nthan number of workspaces.\nApplying: remove unused pixmap\nApplying: Remove xf_rail_FilterWindowInfo() function. \u00a0This function\nincorrectly calculated a new width for windows that had a negative\norigin (that is, windows partially off the desktop to the left). \u00a0The\nfunction subtracted twice the window offset from the width. \u00a0To be\ncorrect this function needed to keep track of the old and new window\npositions and just subtract the difference.\nApplying: The VisibilityNotify function was using elements out fo the\nXEvent union that belong to the XExposeEvent event type. These fields\nare not valid for XVisibilityEvents and contain garbage values.\n-bash-3.00$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 13 commits.\n\nnothing to commit (working directory clean)\n-bash-3.00$ git push -f sunds master\nCounting objects: 28, done.\nDelta compression using up to 2 threads.\nCompressing objects: 100% (21/21), done.\nWriting objects: 100% (21/21), 2.38 KiB, done.\nTotal 21 (delta 17), reused 0 (delta 0)\nTo git@github.com:sunds/FreeRDP.git\n\u00a0+ 6ec3c80...aa761c7 master -> master (forced update)\nThere were no conflicts. \u00a0Let me know if you'd like me to do it differently.\n-David\nOn Thu, Nov 3, 2011 at 11:42 AM, Otavio Salvador\nreply@reply.github.com\nwrote:\n\nYou need to redo it since it seems changes made it not mergeable again. Please do it again and push so we can merge it.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/pull/198#issuecomment-2619549\n. Pointer updates are part of the base RDP protocol MS-RDPBCGR specification and do not include window information like those from the RAIL specification MS-RDPERP do.  To make pointer updates work, we need to keep track of which window has focus and then apply pointer updates to that window.  This appears to be easy to do, just watch for X11 EnterNotify events and update the window field of the main RDP structure.  I had some concerns that a window might receive an old pointer update for some other window due to network latencies, however, the RDP server seems to always send down new pointer updates whenver a window takes focus.\n\n\nPlease enter the commit message for your changes. Lines starting\nwith '#' will be ignored, and an empty message aborts the commit.\nOn branch master\nYour branch is ahead of 'origin/master' by 1 commit.\n\nChanges to be committed:\n(use \"git reset HEAD ...\" to unstage)\n\nmodified:   client/X11/xf_event.c\nmodified:   client/X11/xf_graphics.c\nmodified:   client/X11/xf_window.c\n\n. This is resolved now, commit 51ac100c574717d80845e6ce07c44e65dc072643 \n. In the X client these offsets occur when the local window manager moves the window to a location different than what was requested by the RDP server.  The code I've committed to my fork and just submitted a pull request for should resolve this issue.\n. Did you build from git?  I checked in a couple additional fixes yesterday.\nIf you have problems with it after that, let me know exactly how you\nreproduce the problem.\nA couple of notes:\n1)  If the window you are moving overlaps another RDP window, that\nother RDP window won't update until after the move completes.  That is\njust the way local moves work, as the updates don't get sent to the\nRDP server until the move is over.\n2)  The only way to know on X windows when a move is complete is when\nI see some other event besides a configure notify. Perhaps this is\nwhat you mean by \"some additional input\", but if you could be\nspecific, it will help.\nThanks\nDavid\nOn Sun, Dec 11, 2011 at 9:50 AM, meosborne\nreply@reply.github.com\nwrote:\n\nYour patch did resolve the duplicated area. However, now when you move a window, a copy of the window remains on the screen even after the movement stops. The copy will only vanish after there is some additional input once the move is complete. Also, sometimes the moved window will be corrupted when that update occurs.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/229#issuecomment-3097803\n. On Tue, Dec 13, 2011 at 11:01 AM, meosborne\nreply@reply.github.com\nwrote:\nYes, I built from git.\nRe #1: I see, that explains the window copy. Makes sense.\nRe #2: Wouldn't the mouse button up event mark the end of the movement?\n\nUnfortunately the window manager has a grab on the mouse and doesn't\nsend the mouse up event to FreeRDP.\nThis is the biggest issue with local moves.  The window manager\ndoesn't send any event that signifies the end of the move.  You\nreceive a stream of ConfigureNotify events, but you have no idea which\nis the last one.\n\nThe underlying rdp windows do not update until I either move the mouse,\npress a key, or click a button.\n\nRight.  Once I detect a local move has begun I look for any other\nevent besides ConfigureNotify and Expose to tell me the grab has been\nreleased.  There appears to be no other solution, apart from turning\noff local moves altogether.  Unfortunately without local moves, you\nrun into all sorts of other problems, such as having no feedback for\nthe move and not sometimes the local window manager policies won't\nallow you to move the window where you'd like.\n\nWhen that update occurs sometimes everything is fine, sometimes mostly\nfine (minor artifacts), and sometimes the moved window is messed up\nbadly.\n\nI haven't seen it messed up badly since I fixed the Expose event issue\non Friday, but I'll look some more.  I did notice that RDP doesn't\ncompletely redraw the window sometimes after a resize.  I'm not sure\nif that is a bug in RDP or something else.\n\nAlso, occasionally, when I move a window via titlebar the background\ndoes update as I move. It kinda looks like mouse pointer trails. That\nbehavior is consistent if I use alt-mouse button to move a window\ninstead of the title bar.\n\nThere are some inherent race conditions in local moves.  First you do\nsome gesture in the RDP window that indicates a move.  The RDP server\nsends down a local move order.  FreeRDP sends an event to the window\nmanager to initiate a move.  The window manager takes a grab on the\nmouse and keyboard to do the move.  If you move quickly before all\nthat happens, FreeRDP can interpret those events that haven't been\ngrabbed yet as the end of the move.  I thought I'd minimized these\nrace conditions pretty well with a state machine implementation, but\nI'll tray alt-Mouse and see if I can reproduce it.\n\nThis is with current git, using software gdi, as I have color trouble\nwhen using hardware gdi.\n\nOk, thanks for the additional details.\n-David\n. On Tue, Dec 13, 2011 at 11:01 AM, meosborne\nreply@reply.github.com\nwrote:\n\nI use alt-mouse button to move a window\ninstead of the title bar.\n\nI should also have explained this.  If you cause a window move\nlocally, either via a window manager hot-key or tool bar menu, the RDP\nserver knows nothing about it. The RAIL specification does not support\nmoves initiated by the client. However, I discovered I could use the\nsame update message used for RDP initiated local moves to tell the RDP\nserver the window was moved by the client.  This is what you see:  as\nyou move the window, FreeRDP will send move updates to the server\nwhich will then repaint the window.  This tends to lag the movement\ndue to the network round-trip.\nThis is another cases where there is no good solution.  In RDP locally\ninitiated moves should not be allowed.  Unfortunately there is no good\nway to disable them in X windows. Users also expect the window manager\ncontrols and keys to work. We're lucky the same window order used in\nRDP initiated local moves can be used to update the RDP server for X\nwindow manager initiated moves. Doing this fixed a number of cases\nwhere the X window manager would place the window in a different\nlocation than that requested by the RDP server.\n. You could try this small patch to see if updating the window at the\nend of the move helps.\ndiff --git a/client/X11/xf_window.c b/client/X11/xf_window.c\nindex 188e855..30ed2b8 100644\n--- a/client/X11/xf_window.c\n+++ b/client/X11/xf_window.c\n@@ -543,6 +543,7 @@ void xf_EndLocalMoveSize(xfInfo xfi, xfWindow\nwindow, boolean cancel)\n        }\nwindow->local_move.state = LMS_NOT_ACTIVE;\n-       xf_UpdateWindowArea(xfi, window, 0, 0, window->width, window->height);\n  }\nIt would help to know if the problem happens after a move, a resize,\nor both.  Also if the window correctly redraws after you click another\nX window and then click back into your RDP window.\nAlso if you are using any visual effects on the window manager,\nmultiple workspaces, screens, etc.\nThanks,\n-David\nOn Tue, Dec 13, 2011 at 1:34 PM, meosborne\nreply@reply.github.com\nwrote:\n\nExcellent explanations. Many thanks for that. The only thing that really\ncauses trouble is when the moved window gets badly messed up. I've tried\nto find some sequence that will reliably reproduce the corruption, but\nhave been unable to find anything definitive so far.\nI have noticed that if I move a window via the titlebar, release the\nmouse button, then without moving the mouse, simply click the titlebar\nto activate the update and signal the end of move seems to trigger the\ncorruption more often.\nAnything I can do help find out the problem?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/229#issuecomment-3128226\n. I've looked a little more at the periodic drawing issues with RemoteApp.  I've proven that the desktop image (the primary) is updated correctly, but for some reason, the calls to xf_rail_paint() that cause the X windows to be repainted with the updated regions don't always cover the full damaged region.  I suspect that, somewhere, the damaged (invalidated) regions aren't being updated correctly.\n\nNo difference using hw versus sw GDI.\n. Found a race condition.  After a local move complete RDP can send GDI orders for the new window size and position before it sends a RAIL order to update the RAIL window size and position.  Work around is to locally update the size and position at the time we finish the local move.  sunds/FreeRDP commit 88d55493a908e7b1b3b6203c09e7e21993e99ba5\n. I don't have permission to close, so someone will need to verify this issue and close it.\n. @Marc-Andr\u00e9\nTCP_KEEPALIVE is defined on Solaris as well, so if the fix is modified\nto define the TCP_KEEPIDLE macro on Solaris as well as OSX it will\nwork.\n+\n     37 \n+#ifdef APPLE\n     38 \n+#ifndef TCP_KEEPIDLE\n     39 \n+#define TCP_KEEPIDLE TCP_KEEPALIVE\n     40 \n+#endif\n     41 \n+#endif\n     42 \n+\nI can address it tomorrow.\nOn Tue, Dec 13, 2011 at 7:10 PM, Marc-Andr\u00e9 Moreau\nreply@reply.github.com\nwrote:\n\n@sunds there was a fix for Mac OS X for the same issue that was just merged. I could build from scratch on OpenIndiana. Can you try again?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/273#issuecomment-3133824\n. This was resolved with commit 49303c8969f56b8b381ec9917bdb4febb665201b\n. I am looking at the red_mask of the returned visual in xfreerdp.c. For\nRGB the red mask will be 0xFF0000.  For BGR it will be 0x0000FF. By\nlooking at this and then inverting each of the conversions in color.c\nwhen the red mask is the LSB, my RDP session paints correctly.  I'll\nsubmit a pull request today and you can take a look and then refactor\nit to your liking.\n\nOn Wed, Dec 21, 2011 at 2:59 PM, Marc-Andr\u00e9 Moreau\nreply@reply.github.com\nwrote:\n\n@sunds interesting, I was suspecting a problem with color conversion depending on X11 configuration. Did you identify in which cases the color inversion should be turned on?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/297#issuecomment-3239516\n. Yes, the same change was necessary in xf_graphics.c\n. @Marc-Andr\u00e9\n\nI did a quick check and it appears to work on this X server for hw\nGDI, but I just noticed the colors are inverted when using sw GDI. I\nwent back to my commit and the same problem exists, so there is\nsomething different about the way the software rendering is handling\ncolors.\n-David\nOn Mon, Jan 9, 2012 at 5:45 PM, Marc-Andr\u00e9 Moreau\nreply@reply.github.com\nwrote:\n\n@sunds I just made the change I proposed and pushed it\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/pull/336#issuecomment-3422594\n. You need to go on the terminal server, run \"RemoteApp Manager\" and add \"cmd\" to the published remote applications.\n. (dbx) where\ncurrent thread: t@2\n  [1] __lwp_kill(0x2, 0xb), at 0xfe92bb95\n  [2] _thr_kill(0x2, 0xb), at 0xfe926a24\n  [3] raise(0xb, 0xfe5be760, 0x0, 0xfee1907c), at 0xfe8d2d8b\n=>[4] fatal_handler(signum = 11), line 53 in \"signal.c\"\n  [5] __sighndlr(0xb, 0x0, 0xfe5be844, 0xfee19070), at 0xfe92864f\n  [6] call_user_handler(0xb, 0x0, 0xfe5be844), at 0xfe91e32a\n  [7] sigacthandler(0xb, 0x0, 0xfe5be844, 0xf, 0x0, 0x0), at 0xfe91e46b\n  ---- called from signal handler with signal 11 (SIGSEGV) ------\n  [8] _malloc_unlocked(0x108, 0x80baa30, 0x80baa30, 0xfee2ca08, 0xfe5bea88, 0xfee173c7), at 0xfe8c5460\n  [9] malloc(0x104, 0x8340668, 0x815af18, 0xfee173a8), at 0xfe8c536c\n  [10] xmalloc(size = 260U), line 38 in \"memory.c\"\n  [11] Bitmap_Alloc(context = 0x8118758), line 32 in \"graphics.c\"\n  [12] update_gdi_create_offscreen_bitmap(context = 0x8118758, create_offscreen_bitmap = 0x80c7288), line 32 in \"offscreen.c\"\n  [13] update_recv_altsec_order(update = 0x80c40e8, s = 0x80baa30, flags = '\\001'), line 1957 in \"orders.c\"\n  [14] update_recv_order(update = 0x80c40e8, s = 0x80baa30), line 2034 in \"orders.c\"\n  [15] fastpath_recv_orders(fastpath = 0x80b7878, s = 0x80baa30), line 132 in \"fastpath.c\"\n  [16] fastpath_recv_update(fastpath = 0x80b7878, updateCode = '\\0', size = 5285U, s = 0x80baa30), line 176 in \"fastpath.c\"\n  [17] fastpath_recv_update_data(fastpath = 0x80b7878, s = 0x80baa30), line 301 in \"fastpath.c\"\n  [18] fastpath_recv_updates(fastpath = 0x80b7878, s = 0x80baa30), line 321 in \"fastpath.c\"\n  [19] rdp_recv_fastpath_pdu(rdp = 0x80b46b0, s = 0x80baa30), line 798 in \"rdp.c\"\n  [20] rdp_recv_pdu(rdp = 0x80b46b0, s = 0x80baa30), line 806 in \"rdp.c\"\n  [21] rdp_recv_callback(transport = 0x80b7730, s = 0x80baa30, extra = 0x80b46b0), line 866 in \"rdp.c\"\n  [22] transport_check_fds(ptransport = 0x80b46d8), line 451 in \"transport.c\"\n  [23] rdp_check_fds(rdp = 0x80b46b0), line 897 in \"rdp.c\"\n  [24] freerdp_check_fds(instance = 0x80b4568), line 145 in \"freerdp.c\"\n  [25] xfreerdp_run(instance = 0x80b4568), line 1141 in \"xfreerdp.c\"\n  [26] thread_func(param = 0x80b7260), line 1180 in \"xfreerdp.c\"\n  [27] _thr_setup(0xfe4b0200), at 0xfe928246\n  [28] _lwp_start(0x2, 0xb, 0xfe99f000, 0xfe5be748, 0xfe8d2d8b, 0x2), at 0xfe928530\n. Right away after running the \"big buck bunny\" video.  I am NOT using\nvideo redirection (no sound for me).  Here are the command line args:\n\nclient/X11/xfreerdp -u user -p pass --ignore-certificate --app\n--plugin channels/rail/rail.so  --data '||explorer' -- 10.99.1.100\nThis opens a RAIL file browser from which I navigate to the movie and\nlaunch it with media player.  I previously installed the codec per the\nwiki.\nI attached the stack trace to the issue.  Interesting it doesn't\ninclude your changed file, but things definitely start to work when I\nback out your change.\nOn Tue, May 22, 2012 at 10:10 AM, Dorian Johnson\nreply@reply.github.com\nwrote:\n\nRAIL is still working for me; does it crash immediately on login or later?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/610#issuecomment-5849591\n. Dorian,\n\nI did try your patch (removing the free()), but it still segfaults\nwhen playing non-accelrated videos (which work by sending bitmaps I\nbelieve).\nThe problem might be easier to diagnose on Linux with valgrind.  I'm\nusing Solaris and unfortunately FreeRDP doesn't compile with SunStudio\nwhich has the memory checker.\nI'll try to look at this some more today, but I'm having to do a lot\nof multi-tasking.\n-David\nOn Tue, May 22, 2012 at 11:47 AM, Dorian Johnson\nreply@reply.github.com\nwrote:\n\nsunds, can you try this:\nhttps://github.com/dorianj/FreeRDP/tree/memcorruptfix a863568a15407ff1c542df5c77e242e31f95075e\nappears that free() is causing the issue; it was there before, so I'm not sure why bisect is showing any difference.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/610#issuecomment-5852205\n. The Free Memory Read (FMR) won't cause a segfault, but you have a\nrelated Free Memory Write (FMW):\n\n==3622== Invalid write of size 4\n==3622==    at 0x68507B6: freerdp_icon_convert (color.c:825)\n==3622==    by 0x40A903: xf_rail_SetWindowIcon (xf_rail.c:163)\n==3622==    by 0x5CEF42F: rail_WindowIcon (rail.c:74)\n==3622==    by 0x569A0E5: update_recv_window_info_order (window.c:197)\n==3622==    by 0x569A96A: update_recv_altsec_window_order (window.c:335)\n==3622==    by 0x56841D4: update_recv_altsec_order (orders.c:2016)\n==3622==    by 0x568424C: update_recv_order (orders.c:2034)\n==3622==    by 0x5692E26: fastpath_recv_orders (fastpath.c:132)\n==3622==    by 0x5693009: fastpath_recv_update (fastpath.c:176)\n==3622==    by 0x569354D: fastpath_recv_update_data (fastpath.c:301)\n==3622==    by 0x56935E3: fastpath_recv_updates (fastpath.c:321)\n==3622==    by 0x5690FBF: rdp_recv_fastpath_pdu (rdp.c:798)\n==3622==  Address 0xb4408b0 is 0 bytes after a block of size 1,024 alloc'd\n==3622==    at 0x4C28F9F: malloc (vg_replace_malloc.c:236)\n==3622==    by 0x60FF9F6: xmalloc (memory.c:43)\n==3622==    by 0x684FA71: freerdp_image_convert_15bpp (color.c:457)\n==3622==    by 0x684FCC4: freerdp_image_convert_16bpp (color.c:498)\n==3622==    by 0x68504AA: freerdp_image_convert (color.c:722)\n==3622==    by 0x68506DB: freerdp_icon_convert (color.c:808)\n==3622==    by 0x40A903: xf_rail_SetWindowIcon (xf_rail.c:163)\n==3622==    by 0x5CEF42F: rail_WindowIcon (rail.c:74)\n==3622==    by 0x569A0E5: update_recv_window_info_order (window.c:197)\n==3622==    by 0x569A96A: update_recv_altsec_window_order (window.c:335)\n==3622==    by 0x56841D4: update_recv_altsec_order (orders.c:2016)\n==3622==    by 0x568424C: update_recv_order (orders.c:2034)\nSo somewhere you have a mismatch between the allocated memory for the\nicon and the code around line 825.\nThanks\nDavid\nOn Wed, May 23, 2012 at 2:07 PM, Dorian Johnson\nreply@reply.github.com\nwrote:\n\nGood point:\n==28800== Thread 2:\n==28800== Invalid read of size 4\n==28800== \u00a0 \u00a0at 0x4242A10: freerdp_icon_convert (in /usr/local/lib/libfreerdp-codec.so.1.0.1)\n==28800== \u00a0 \u00a0by 0x804FFD6: xf_rail_SetWindowIcon (in /usr/local/bin/xfreerdp)\n==28800== \u00a0 \u00a0by 0x40E57FE: rail_WindowIcon (in /usr/local/lib/libfreerdp-rail.so.1.0.1)\n==28800== \u00a0 \u00a0by 0x40A2845: update_recv_window_info_order (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800== \u00a0 \u00a0by 0x40A2D1A: update_recv_altsec_window_order (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800== \u00a0 \u00a0by 0x4094383: update_recv_altsec_order (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800== \u00a0 \u00a0by 0x40945EC: update_recv_order (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800== \u00a0 \u00a0by 0x409E2C5: fastpath_recv_updates (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800== \u00a0 \u00a0by 0x409C388: rdp_recv_pdu (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800== \u00a0 \u00a0by 0x409C676: rdp_recv_callback (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800== \u00a0 \u00a0by 0x409FDCB: transport_check_fds (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800== \u00a0 \u00a0by 0x409C86D: rdp_check_fds (in /usr/local/lib/libfreerdp-core.so.1.0.1)\n==28800== \u00a0Address 0x5d79840 is not stack'd, malloc'd or (recently) free'd\nI'll write a fix.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/610#issuecomment-5881770\n. It is working correctly now.\n\nI looked around and I didn't see anywhere where icons are freed.  They\nare allocated in libfreerdp-core/window.c : update_read_icon_info().\nTracing that back to update_recv_window_info_order() I see the order\nthat calls update_read_window_delete_order() line 181 is not\nimplemented. I suspect this means we're leaking icons when a user\ncloses a RAIL window.\nThanks for fixing the memory bug!\n-David\nOn Wed, May 23, 2012 at 3:31 PM, Dorian Johnson\nreply@reply.github.com\nwrote:\n\nhttps://github.com/dorianj/FreeRDP/tree/railiconmemfix should properly fix it (no valgrind errors reported) -- if it works for you, I'll submit as a pull request.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/610#issuecomment-5883787\n. \n",
    "ItsMattL": "I'm new to xfreerdp and also have a problem with clipboard redirection crashing the client.  Here is a trace from a reproducible crash happening right now:\n[New Thread 0x7ffff37bf700 (LWP 25840)]\n* glibc detected * /usr/local/bin/xfreerdp: free(): invalid pointer: 0x000000000074b630 ***\n======= Backtrace: =========\n/lib/libc.so.6(+0x775b6)[0x7ffff529e5b6]\n/lib/libc.so.6(cfree+0x73)[0x7ffff52a4e83]\n/usr/local/lib/libfreerdp-core.so.0.0(Bitmap_Free+0x1d)[0x7ffff75a03ed]\n/usr/local/lib/libfreerdp-cache.so.0.0(update_gdi_cache_bitmap+0x99)[0x7ffff63f9a49]\n/usr/local/lib/libfreerdp-core.so.0.0(update_recv_secondary_order+0xb8)[0x7ffff759d098]\n/usr/local/lib/libfreerdp-core.so.0.0(fastpath_recv_updates+0x3d3)[0x7ffff75a7953]\n/usr/local/lib/libfreerdp-core.so.0.0(+0x30504)[0x7ffff75a5504]\n/usr/local/lib/libfreerdp-core.so.0.0(+0x30750)[0x7ffff75a5750]\n/usr/local/lib/libfreerdp-core.so.0.0(transport_check_fds+0x166)[0x7ffff75a8556]\n/usr/local/lib/libfreerdp-core.so.0.0(freerdp_check_fds+0x10)[0x7ffff75a00e0]\n/usr/local/bin/xfreerdp(xfreerdp_run+0x20e)[0x40f9ee]\n/usr/local/bin/xfreerdp(thread_func+0xc)[0x40fbfc]\n/lib/libpthread.so.0(+0x69ca)[0x7ffff55b09ca]\n/lib/libc.so.6(clone+0x6d)[0x7ffff530d70d]\n======= Memory map: ========\n00400000-00413000 r-xp 00000000 fc:00 1452815                            /usr/local/bin/xfreerdp\n00612000-00613000 r--p 00012000 fc:00 1452815                            /usr/local/bin/xfreerdp\n00613000-00694000 rw-p 00013000 fc:00 1452815                            /usr/local/bin/xfreerdp\n00694000-00770000 rw-p 00000000 00:00 0                                  [heap]\n7fffec000000-7fffec021000 rw-p 00000000 00:00 0 \n7fffec021000-7ffff0000000 ---p 00000000 00:00 0 \n7ffff2da8000-7ffff2dbe000 r-xp 00000000 fc:00 1990675                    /lib/libgcc_s.so.1\n7ffff2dbe000-7ffff2fbd000 ---p 00016000 fc:00 1990675                    /lib/libgcc_s.so.1\n7ffff2fbd000-7ffff2fbe000 r--p 00015000 fc:00 1990675                    /lib/libgcc_s.so.1\n7ffff2fbe000-7ffff2fbf000 rw-p 00016000 fc:00 1990675                    /lib/libgcc_s.so.1\n7ffff2fbf000-7ffff2fc0000 ---p 00000000 00:00 0 \n7ffff2fc0000-7ffff37c0000 rw-p 00000000 00:00 0 \n7ffff37c0000-7ffff37d6000 r-xp 00000000 fc:00 1993405                    /lib/libresolv-2.11.1.so\n7ffff37d6000-7ffff39d5000 ---p 00016000 fc:00 1993405                    /lib/libresolv-2.11.1.so\n7ffff39d5000-7ffff39d6000 r--p 00015000 fc:00 1993405                    /lib/libresolv-2.11.1.so\n7ffff39d6000-7ffff39d7000 rw-p 00016000 fc:00 1993405                    /lib/libresolv-2.11.1.so\n7ffff39d7000-7ffff39d9000 rw-p 00000000 00:00 0 \n7ffff39d9000-7ffff39de000 r-xp 00000000 fc:00 1993398                    /lib/libnss_dns-2.11.1.so\n7ffff39de000-7ffff3bdd000 ---p 00005000 fc:00 1993398                    /lib/libnss_dns-2.11.1.so\n7ffff3bdd000-7ffff3bde000 r--p 00004000 fc:00 1993398                    /lib/libnss_dns-2.11.1.so\n7ffff3bde000-7ffff3bdf000 rw-p 00005000 fc:00 1993398                    /lib/libnss_dns-2.11.1.so\n7ffff3bdf000-7ffff3beb000 r-xp 00000000 fc:00 1993399                    /lib/libnss_files-2.11.1.so\n7ffff3beb000-7ffff3dea000 ---p 0000c000 fc:00 1993399                    /lib/libnss_files-2.11.1.so\n7ffff3dea000-7ffff3deb000 r--p 0000b000 fc:00 1993399                    /lib/libnss_files-2.11.1.so\n7ffff3deb000-7ffff3dec000 rw-p 0000c000 fc:00 1993399                    /lib/libnss_files-2.11.1.so\n7ffff3dec000-7ffff3def000 r-xp 00000000 fc:00 1532761                    /usr/local/lib/freerdp/cliprdr.so\n7ffff3def000-7ffff3fee000 ---p 00003000 fc:00 1532761                    /usr/local/lib/freerdp/cliprdr.so\n7ffff3fee000-7ffff3fef000 r--p 00002000 fc:00 1532761                    /usr/local/lib/freerdp/cliprdr.so\n7ffff3fef000-7ffff3ff0000 rw-p 00003000 fc:00 1532761                    /usr/local/lib/freerdp/cliprdr.so\n7ffff3ff0000-7ffff3ff1000 ---p 00000000 00:00 0 \n7ffff3ff1000-7ffff47f1000 rw-p 00000000 00:00 0 \n7ffff47f1000-7ffff47f6000 r-xp 00000000 fc:00 1394334                    /usr/lib/libXdmcp.so.6.0.0\n7ffff47f6000-7ffff49f5000 ---p 00005000 fc:00 1394334                    /usr/lib/libXdmcp.so.6.0.0\n7ffff49f5000-7ffff49f6000 r--p 00004000 fc:00 1394334                    /usr/lib/libXdmcp.so.6.0.0\n7ffff49f6000-7ffff49f7000 rw-p 00005000 fc:00 1394334                    /usr/lib/libXdmcp.so.6.0.0\n7ffff49f7000-7ffff49f9000 r-xp 00000000 fc:00 1394405                    /usr/lib/libXau.so.6.0.0\n7ffff49f9000-7ffff4bf9000 ---p 00002000 fc:00 1394405                    /usr/lib/libXau.so.6.0.0\n7ffff4bf9000-7ffff4bfa000 r--p 00002000 fc:00 1394405                    /usr/lib/libXau.so.6.0.0\n7ffff4bfa000-7ffff4bfb000 rw-p 00003000 fc:00 1394405                    /usr/lib/libXau.so.6.0.0\n7ffff4bfb000-7ffff4c16000 r-xp 00000000 fc:00 1395015                    /usr/lib/libxcb.so.1.1.0\n7ffff4c16000-7ffff4e15000 ---p 0001b000 fc:00 1395015                    /usr/lib/libxcb.so.1.1.0\n7ffff4e15000-7ffff4e16000 r--p 0001a000 fc:00 1395015                    /usr/lib/libxcb.so.1.1.0\n7ffff4e16000-7ffff4e17000 rw-p 0001b000 fc:00 1395015                    /usr/lib/libxcb.so.1.1.0\n7ffff4e17000-7ffff4e1c000 r-xp 00000000 fc:00 1395147                    /usr/lib/libXfixes.so.3.1.0\n7ffff4e1c000-7ffff501b000 ---p 00005000 fc:00 1395147                    /usr/lib/libXfixes.so.3.1.0\n7ffff501b000-7ffff501c000 r--p 00004000 fc:00 1395147                    /usr/lib/libXfixes.so.3.1.0\n7ffff501c000-7ffff501d000 rw-p 00005000 fc:00 1395147                    /usr/lib/libXfixes.so.3.1.0\n7ffff501d000-7ffff5026000 r-xp 00000000 fc:00 1394957                    /usr/lib/libXrender.so.1.3.0\n7ffff5026000-7ffff5225000 ---p 00009000 fc:00 1394957                    /usr/lib/libXrender.so.1.3.0\n7ffff5225000-7ffff5226000 r--p 00008000 fc:00 1394957                    /usr/lib/libXrender.so.1.3.0\n7ffff5226000-7ffff5227000 rw-p 00009000 fc:00 1394957                    /usr/lib/libXrender.so.1.3.0\n7ffff5227000-7ffff53a1000 r-xp 00000000 fc:00 1993390                    /lib/libc-2.11.1.so\n7ffff53a1000-7ffff55a0000 ---p 0017a000 fc:00 1993390                    /lib/libc-2.11.1.so\n7ffff55a0000-7ffff55a4000 r--p 00179000 fc:00 1993390                    /lib/libc-2.11.1.so\n7ffff55a4000-7ffff55a5000 rw-p 0017d000 fc:00 1993390                    /lib/libc-2.11.1.so\n7ffff55a5000-7ffff55aa000 rw-p 00000000 00:00 0 \n7ffff55aa000-7ffff55c2000 r-xp 00000000 fc:00 1993404                    /lib/libpthread-2.11.1.so\n7ffff55c2000-7ffff57c1000 ---p 00018000 fc:00 1993404                    /lib/libpthread-2.11.1.so\n7ffff57c1000-7ffff57c2000 r--p 00017000 fc:00 1993404                    /lib/libpthread-2.11.1.so\n7ffff57c2000-7ffff57c3000 rw-p 00018000 fc:00 1993404                    /lib/libpthread-2.11.1.so\nProgram received signal SIGABRT, Aborted.\n[Switching to Thread 0x7ffff47f0700 (LWP 25837)]\n0x00007ffff525aa75 in raise (sig=) at ../nptl/sysdeps/unix/sysv/linux/raise.c:64\n64      ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n        in ../nptl/sysdeps/unix/sysv/linux/raise.c\n. Specifying password directly on the command line has a few significant issues IMO.  1- It is prone to getting left in the shell history, for people who use shells with such a feature.  2- Even with history off, the password will be displayed in plain text on the screen each time it's used, rather than being hidden from shoulder watchers.  Keeping the password in a file on disk and feeding it in is not what I would consider sufficiently secure either.\n@awakecoding, NLA is definitely good, and is actually one of the primary reasons I switched to freerdp.  I'm really not concerned with having graphical logon or not, I just wish there was an easy way to background the app from the terminal without having to compromise my password info in the process.\n. ",
    "Sander80": "Thanks )\nPerhaps, this library should be added to the list here http://www.freerdp.com/wiki/doku.php?id=compilation\n. ",
    "nerdstube": "Hey hey awakecoding,\nive tried it with new sessions. \nAfter every test i\u00b4ve logout with the current user and reconnect complete.\nBut i think i try it tomorrow with a new installation of windows 2008r2 and a clean linux+xfreerdp.\nPerhaps there confused Tempfiles?!\n. Afaik there are no spezial configuration on server-side. But i dont know 100%. Thats the reason why i setup a new Win2k8r2\nYes ive build them today from git. \n. K .. a new Session on a new Server and all works great! \n. Hey hey, \nwhen i make ./xfreerdp -u \"User Name\" it works.\nBut, i need: \nusername=\"-u \\\"User Name\"\\\"\n(echo \u00a7username == -u \"User Name\")\n./xfreerdp $username $SOME_IP\nThan comes: \ntransport_connect: getaddrinfo.\nError: protocol security negotiation failure.\nBut i rewrite my script and now it works tha i have:\n./xfreerdp -u \"$username\"\nI think thats not an FreeRDP bug (okay wir RDesktop works it :P) i think its a bash fail. \n. ",
    "koolcoder": "@awakcoding:   Thanks!  I'll check it out.\n. @awakecoding:  I tried out the -X reparent option as follows:\n1) Launched a firefox window\n2) Ran xwininfo \n3) Clicked the firefox window to obtain the Window id\n4) Ran xfreerdp using:\n /usr/bin/xfreerdp --no-nla -X 0x1600001 targethost\nThe remote display came up in its own window, but not reparented into the window with the specified id.\n. @awakecoding:   Thanks for taking a look at the -X reparent window\noption.    I tried the new fix out but was unable to get it to reparent\ninto another X window.  I did see a new window appear and freerdp worked in\nthe same way that it does when the -X parameter is not called.   I don't\nhave permission to reopen the ticket, so just wanted to let you know of the\nfindings by e-mail.\nThx,\n--koolcoder\nOn Fri, Dec 9, 2011 at 1:53 PM, Marc-Andr Moreau <\nreply@reply.github.com\n\nwrote:\n@koolcoder: I have just implemented this missing feature in 1.0. Closing\nthis ticket now\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/209#issuecomment-3083850\n. \n",
    "bjcollins": "Anyone interested in this functionality, checkout\nhttps://github.com/FreeRDP/FreeRDP/commit/d0d618fb765e21275ee1e54b84db5db9681f570b\n. I need to make time to port the fix over from the stable branch that I am working from soon, but I at least wanted to share what is causing the problem in the meantime.\nThe fix here is that when CreateOptions is set to FILE_DIRECTORY_FILE - you should NOT be creating a directory if the CreateDisposition is set to FILE_OPEN. There is currently no check here and we are incorrectly creating a directory  when the server is trying to make sure that the requested file name is not actually an existing directory to traverse into before writing the file out. I have only seen this behavior in Win2k3 and WinXP.\nA check for this needs to be added to the disk_file_init function to make sure that mkdir is not called if the CreateDisposition is FILE_OPEN - since according to MS-SMB2 - this type of request is only used to attempt to open an existing directory.\n. I did submit everything that I intended for this - I just did not realize it was part of my other pull request already. \n. Sorry. I only meant for my last commit to show up here. I am obviously not doing something right to bring my branch inline with the master. \n. It seems right to me, unless I am totally missing something obvious.\nThe original code had timeout=1000 and a usleep(10000) for each iteration while decreasing timeout by 1 on each iteration for a total of 1000 iterations. That leads me to think the total time is 1000x10000 microseconds = 10 seconds(although the comment incorrectly? said 5 seconds).\nSo, using that logic - I get 2000X1000 microseconds for my change, which is 2 seconds and what I put in the comment.\nI am not seeing how the time could be half of what I calculate.\n. After looking to address your last suggestion, I did notice that the total timeout value was much larger than intended(in fact even larger than what it started out as!). I calculate an effective 20second timeout originally can a current 22second timeout. This is because the gstreamer call during an async state change has a timeout of 10ms as well. So, I am cleaning this section up to have a much more informative comment and to bring the effective timeout down to the 2second mark that is intended. I will commit a change for this as soon as I do some more testing in this area.\n. This does not compile for me. The local thread variable is just a HANDLE, so there is no access to the started variable in the WINPR_THREAD structure. The structure definition of WINPR_THREAD is also private and not directly available to the tsmf module. The best solution is probably to create a new method in winpr to access the internal variables of the thread structure and get at the started variable so that it can be returned to the caller.\n. Shouldn't this be DEBUG_WARN? again a compile error for me.\n. I think the above line should just be removed as it can prevent the processing of acks when only one stream has went into eos state. Please note, my intention here is to fix a regression in master not to address the underlying issue that with the presentation eos variable itself. I believe this is the critical thing preventing video playback from ending correctly, although I have only tested with my other change below.\n. I also had the entire if block above back in when testing a regression fix. But, I am not sure it really does much as I look at it again since the stream stop should prevent it from actually playing back. But, I will include it here for completeness of the change I made to fix my solve the noted problem.\n. Metacity was giving me problems. Tested on CentOS 6.6\n. Yes. It looks like it should. I do not think that variable is actually used by anything, which is probably why it got overlooked and did not cause me any functional problems.\n. @nfedera I realized today that I might have originally hit this with xfwm4 actually. So, there is a possibility metacity does not require it. I know that one of these two WMs have a problem if not both. I used to run xfwm4 on centos5, but now run metacity on centos6.\n. Agreed. That variable is no longer used and should be completely removed to simplify the code.\n. Agreed. That variable is no longer used and should be completely removed to simplify the code.\n. agreed\n. I think we should keep the else, UNKNOWN is a valid value and it is possible for a decoder object to have that value for the media_type parameter if it has not been initialized.\n. Oh, I think I have other comments that need to be multiline as well, I can do your suggestion to make the value more readable.\n. agreed, should probably just remove the whole ack_cb stuff from gstreamer decoder code.\n. Ok, just for reference - there are other areas in tsmf that do not check the return value for this call either. I will try to hit all cases with an updated pull request.\n. Agreed\n. I think this is correct, it matches my description for the return code. I use TRUE to indicate that no samples are currently available, which would be the case if there was no stream. Make sense at all?\n. Ok, no problem. I will change it to a switch statement.\n. Yes, I am now calling this function from tsmf_ifman.c t support flush message per stream instead of for the entire presentation.\n. This is pre-existing, but this is here to proactively update the new location locally that we are sending to the  server immediatey. I think we should also update the value of \"appWindow->localWindowOffsetCorrX\" and \"appWindow->localWindowOffsetCorrY\" here as well.\n. Does this logic work correctly when \"appWindow->windowOffsetX\" or \"appWindow->windowOffsetY\" are negative(such that the appWindow->localWindowOffsetCorr\" variables are non-zero)? I would just think those might need to be taken into account as those are used to translate those negative values into our local coordinate system.\n. Yea, that is what I was originally thinking.\n. I guess the non-negative case would be the one to be concerned about. Either way, I just do not think the logic here is always doing a translation to a local offset. The purpose of the \"appWindow->localWindowOffsetCorr\" variables was to handle cases where the \"appWindow->windowOffset\" variables are slightly negative - such as the case when you maximize a window. If they get large negative values when you slide the window off the left side of the screen then I think the overall logic is wrong(and I mean the existing logic beyond the scope of your commit) - as currently we are offseting anything negative into our coordinate system which does not support negative values when maybe we should just be truncating off the negative part. I will try to take a look at this sometime this week also.\n. Your reduction of the calculation looks good to me!\nI believe my intent here was to show the operation in(what I considered at the time)a logical format. I imagine that when I worked out what to do here, I took the steps explicitly as I had them and did not realize that  was taking extra unnecessary steps to get the values that I wanted.\n. I do not believe this is the correct thing to do. If the user specifies a single monitor on the command-line when they have multiple monitors then that request should be honored, as it specifies exactly which monitor to fullscreen the window on. I think the \"settings->MonitorCount\" variable currently only keeps track of the number of monitors to display on and not the total monitors available, perhaps we should look at a different variable? Not sure if this was just cleanup, or trying to solve an issue with current code. Does this case make sense to you? \n. @nfedera Great! The second case is what I was worried about \"specifying a single monitor id using /f /monitors:X\", but it sounds like you have that covered. Your reasoning and approach makes sense to me.\n. I agree, I had it in my head that putting this at the end of the list was solving that, but looking back that is clearly not the case.. I will look into making this more generic.. @akallabeth Sounds like this would be close to what @ondrejholy suggested which I did not like in this case for the reason stated in a previous comment. I was thinking more of a generic \"winpr_Digest_Init_Allow_FIPS\" vs. a more generic function which could be extended to more flags in the future. I really wanted to force overrides of FIPS through a very obvious and specific API.. @akallabeth The initialization now happens in rdp_client_connect(), the problem with freerdp_new and freerdp_context_new are that they happen before the command line arguments are parsed to get the fipsmode flag. So, those wont work as is. What will be the issue without initializing it in one of those freerdp functions? . This seems analogous to how it is being done in the shadow server currently. Should this sample server as well as the shadow server have the SSL initialization pushed down into freerdp_listener_new() perhaps?. We need to know if the channels were connected in the first place, so that we can only call freerdp_channels_post_connect() if needed. What can happen otherwise is that we call it here, then it gets called again later(if redirect happens before normal call) which gives the error \"CHANNEL_RC_ALREADY_OPEN\". Once we call freerdp_channels_disconnect() then we cant tell since it resets that variable. It is possible, that rdp_client_reconnect() may have the same potential problem.. The goal is to make sure the \"Free\" for the devices gets called so that there threads will stop running, since they are dependent on the rdpdr channel. I am having trouble reproducing this issue this morning, but when I was having an issue I had devices getting an CHANNEL_NOT_CONNECTED error (it looks like the smartcard device code tries to handles this specific case gracefully). It seemed like it would make sense to try to free these resources earlier, but maybe you are right about the race condition - maybe it should happen right after stopping the rdpdr thread but before disconnecting the channel. I agree this needs to be looked at closer.. ",
    "bmiklautz": "Tested as described above. Works fine. @bjcollins thanks for the hint ;)\n. Just tried it on lion (10.7.2) and keyboard works fine if WITH_XKBFILE is disabled (off). If enabled no key works.\nSeems that key names can't be found:\n...\nDBG_KBD init_keycodes_from_xkb (146): X key code  37 has keyname      -> ??? - not found\nDBG_KBD init_keycodes_from_xkb (146): X key code  38 has keyname      -> ??? - not found\nDBG_KBD init_keycodes_from_xkb (146): X key code  39 has keyname      -> ??? - not found\nDBG_KBD init_keycodes_from_xkb (146): X key code  40 has keyname      -> ??? - not found\nDBG_KBD init_keycodes_from_xkb (146): X key code  41 has keyname      -> ??? - not found\nDBG_KBD init_keycodes_from_xkb (146): X key code  42 has keyname      -> ??? - not found\nDBG_KBD init_keycodes_from_xkb (146): X key code  43 has keyname      -> ??? - not found\n...\n. This should be fixed by know.\n. Seems to be the change in include/freerdp/types.h\n@@ -68,7 +68,8 @@ typedef signed long long sint64;\n #ifdef HAVE_STDBOOL_H\n#include \n-typedef int boolean;\n+typedef unsigned char boolean;\n+\nwhen reverting this everything works fine again.\n. @matsimon - I think this was fixed a while ago in master. Could you please verify this?\n. Tested commit 41652a729ce56af0fa5938cf4a897a9e4fe151b6 against Windows 7. Ctrl-alt-del works in fullscreen and in windowed mode.\n. If netbios is required I guess it is the best to configure it on the system.\n. @Digimocloud could be a X Server related issue. Can you do a xdpyinfo on your beagleboard and post the number of supported pixmap formats and the supported pixmap formats itself?\nE.g. on my workstation:\nnumber of supported pixmap formats:    7\nsupported pixmap formats:\n    depth 1, bits_per_pixel 1, scanline_pad 32\n    depth 4, bits_per_pixel 8, scanline_pad 32\n    depth 8, bits_per_pixel 8, scanline_pad 32\n    depth 15, bits_per_pixel 16, scanline_pad 32\n    depth 16, bits_per_pixel 16, scanline_pad 32\n    depth 24, bits_per_pixel 32, scanline_pad 32\n    depth 32, bits_per_pixel 32, scanline_pad 32\n. @Digimocloud please have a look if the solution for #694 also solves your problem.\n. No feedback for a while. Please reopen if the problem still exists.\n. This was fixed with commits 7e88cc23eea6608f26ae556bca00a8ae41e850f6 and d5d1eb77629f03ad3afb5496df8db87869f93341\n. Should fixed since it was an duplicate of #462\n. When thinking about distribution and packaging (x)freerdp might get shipped in a different package than the rdpsnd plugins. So it makes perfect sense trying to load all possible plugins.\nBut maybe there should be a message when a plugin is successfully loaded.\n. Fixed in master with commit 7cf594a95f2fac1c11aab0395a96225cbab14216\n. @IsiaNT just tried with a recent version from git and CLIENTNAME wasn't cut and set correct (also when setting with -n). Does this problem still exist for you?\nWhen testing make sure that you log off the user before otherwise it might happen that you get (re)connected to an old session. While testing it looked like that CLIENTNAME isn't reset if you reconnect and always sticks to the host name which created the session (this also happens with the windows client). \n. @bmullan as @souryogurt said you should report this to ubuntu as an bug/feature request (https://launchpad.net/ubuntu/+source/freerdp/+bugs) . That they can have a look when building packages for the next release.\n. Currently there are two ways you can prevent the warning by either using --ignore-certificate to ignore all certificates or specify the expected server certificate name with --certificate-name. Where the second one is the \"secure\" one.\nMaybe we should also add the port to the known_hosts file.\n. Should be fixed now.\n. @kpush what was the command line you tested with? \n. @dorianj is this still happening?\n. @NiKiZe hitting the same problem. Using tls (--sec tls) can be used as workaround.\n. @rafcabezas what command line you have used?\n. I couldn't reproduce this behavior with notepad but with total commander when copying files. I've tried to copy the file antiword.exe to the share.\nWhen copying first the directory gets created then I get a warning/error that there already exists a directory with that name.\nSee the log below (recent version from git):\nDBG_SVC svc_plugin_open_event (209): openHandle 2 event 10 dataLength 100 totalLength 100 dataFlags 3\nDBG_SVC rdpdr_process_receive (279): RDPDR_CTYP_CORE / PAKID_CORE_DEVICE_IOREQUEST\nDBG_SVC irp_new (94): DeviceId 1 FileId 0 CompletionId 5 MajorFunction 0x0 MinorFunction 0x0\nDBG_SVC disk_process_irp_create (174): /home/user/Desktop/antiword.exe(350) created.\nDBG_SVC irp_complete (47): DeviceId 1 FileId 0 CompletionId 5\nDBG_SVC svc_plugin_send (394): length 21\nDBG_SVC irp_free (36): DeviceId 1 FileId 0 CompletionId 5\nDBG_SVC svc_plugin_open_event (209): openHandle 2 event 11 dataLength 8 totalLength 8 dataFlags 0\nDBG_SVC svc_plugin_open_event (209): openHandle 2 event 10 dataLength 56 totalLength 56 dataFlags 3\nDBG_SVC rdpdr_process_receive (279): RDPDR_CTYP_CORE / PAKID_CORE_DEVICE_IOREQUEST\nDBG_SVC irp_new (94): DeviceId 1 FileId 350 CompletionId 6 MajorFunction 0x5 MinorFunction 0x0\nDBG_SVC disk_process_irp_query_information (332): FsInformationClass 5 on\n/home/user/Desktop/antiword.exe(350).\nDBG_SVC irp_complete (47): DeviceId 1 FileId 350 CompletionId 6\nDBG_SVC svc_plugin_send (394): length 42\nDBG_SVC irp_free (36): DeviceId 1 FileId 350 CompletionId 6\nDBG_SVC svc_plugin_open_event (209): openHandle 2 event 11 dataLength 8 totalLength 8 dataFlags 0\nDBG_SVC svc_plugin_open_event (209): openHandle 2 event 10 dataLength 74 totalLength 74 dataFlags 3\nDBG_SVC rdpdr_process_receive (279): RDPDR_CTYP_CORE / PAKID_CORE_DEVICE_IOREQUEST\nDBG_SVC irp_new (94): DeviceId 1 FileId 0 CompletionId 5 MajorFunction 0x0 MinorFunction 0x0\nDBG_SVC disk_process_irp_create (174): /home/user/Desktop(351) created.\nDBG_SVC irp_complete (47): DeviceId 1 FileId 0 CompletionId 5\nDBG_SVC svc_plugin_send (394): length 21\nDBG_SVC irp_free (36): DeviceId 1 FileId 0 CompletionId 5\nDBG_SVC svc_plugin_open_event (209): openHandle 2 event 11 dataLength 8 totalLength 8 dataFlags 0\nDBG_SVC svc_plugin_open_event (209): openHandle 2 event 10 dataLength 56 totalLength 56 dataFlags 3\nDBG_SVC rdpdr_process_receive (279): RDPDR_CTYP_CORE / PAKID_CORE_DEVICE_IOREQUEST\nDBG_SVC irp_new (94): DeviceId 1 FileId 351 CompletionId 6 MajorFunction 0x5 MinorFunction 0x0\nDBG_SVC disk_process_irp_query_information (332): FsInformationClass 5 on /home/user/Desktop(351).\nDBG_SVC irp_complete (47): DeviceId 1 FileId 351 CompletionId 6\nDBG_SVC svc_plugin_send (394): length 42\nDBG_SVC irp_free (36): DeviceId 1 FileId 351 CompletionId 6\nDBG_SVC svc_plugin_open_event (209): openHandle 2 event 11 dataLength 8 totalLength 8 dataFlags 0\nDBG_SVC svc_plugin_open_event (209): openHandle 2 event 10 dataLength 100 totalLength 100 dataFlags 3\nDBG_SVC rdpdr_process_receive (279): RDPDR_CTYP_CORE / PAKID_CORE_DEVICE_IOREQUEST\nDBG_SVC irp_new (94): DeviceId 1 FileId 351 CompletionId 5 MajorFunction 0xC MinorFunction 0x1\nDBG_SVC disk_file_query_directory (520): path \\Desktop\\antiword.exe FsInformationClass 3 InitialQuery 1\nDBG_SVC disk_file_query_directory (573):   pattern antiword.exe matched /home/user/Desktop/antiword.exe\nDBG_SVC irp_complete (47): DeviceId 1 FileId 351 CompletionId 5\nDBG_SVC svc_plugin_send (394): length 137\nDBG_SVC irp_free (36): DeviceId 1 FileId 351 CompletionId 5\nDBG_SVC svc_plugin_open_event (209): openHandle 2 event 11 dataLength 8 totalLength 8 dataFlags 0\nDBG_SVC svc_plugin_open_event (209): openHandle 2 event 10 dataLength 56 totalLength 56 dataFlags 3\nDBG_SVC rdpdr_process_receive (279): RDPDR_CTYP_CORE / PAKID_CORE_DEVICE_IOREQUEST\nDBG_SVC irp_new (94): DeviceId 1 FileId 351 CompletionId 6 MajorFunction 0x2 MinorFunction 0x0\nDBG_SVC disk_process_irp_close (199): /home/user/Desktop(351) closed.\nDBG_SVC irp_complete (47): DeviceId 1 FileId 351 CompletionId 6\nDBG_SVC svc_plugin_send (394): length 21\nDBG_SVC irp_free (36): DeviceId 1 FileId 351 CompletionId 6\n. @dorianj just found the same/similar problem. How did you start xfreerdp and against what host?\nI test on debian wheezy against win 7 and it happens with nla only.\n. @dorianj the fix for #656 fixes this issue for me on wheezy too.\n. Can reproduce this:\nDBG_NEGO nego_set_negotiation_enabled (829): Enabling security layer negotiation: true\nDBG_NEGO nego_enable_rdp (841): Enabling RDP security: true\nDBG_NEGO nego_enable_nla (865): Enabling NLA security: true\nDBG_NEGO nego_enable_tls (852): Enabling TLS security: true\nDBG_NEGO nego_connect (97): state: NEGO_STATE_NLA\nDBG_NEGO nego_attempt_nla (262): Attempting NLA security\nconnected to 192.168.50.197:3389\nDBG_NEGO nego_send_negotiation_request (558): requested_protocols: 3\nDBG_NEGO nego_recv (441): no rdpNegData\nDBG_NEGO nego_attempt_nla (282): state: NEGO_STATE_FINAL\nDBG_NEGO nego_connect (110): Negotiated RDP security\nDBG_NEGO nego_security_connect (144): +PROTOCOL_NLA\nSSL_connect: I/O error\nDBG_NEGO nego_connect (127): Failed to connect with RDP security\nError: protocol security negotiation or connection failure\nFor me it seems like RDP security was negotiated but NLA is used as transport_connect.\nUsing --sec rdp works around this problem.\n. @AdmiralNemo this is an openss library error. I had a similar problem with a self compiled libopenssl 1.0.1c. \nMaybe there was a problem with your openssl build on gentoo. Did you try recompiling openssl or to use an older version? Also recheck your use flags (e.g. optimization).\n. @AdmiralNemo did you try to build the recent freerdp version from git? \nTo find out more information it might also help to compile openssl with debug options. \n. Looks like the XImage doesn't match your \"color depth\". What color depth has your XServer?\nWhen WITH_SSE2=ON everything works?\nWhat do you mean with 661, 798 and 881? Commits?\n. @thirsd  have a look to issue #484 especially the last comment (supported formats). I think it's the same issue.\n. --from-stdin should prompt for missing/unspecified required parameters. I'll have a look if it's possible to distinguish between pipe and regular stdin read. \nInstead of piping you could also use expect. I tested the password fix for #629 with the following expect script:\n```\n!/usr/bin/expect\nspawn ./client/X11/xfreerdp --from-stdin\nexpect \"username: \" {send \"username\\n\";}\nexpect \"password: \" {send \"password\\n\";}\nexpect \"domain (control-D to skip):\" {send \"\\004\\n\";}\nexpect \"hostname: \" {send \"host\\n\"}\ninteract\n```\n. Did you try connecting directly with xfreerdp? \nDo you use fullscreen mode?\n. Does keyboard input work if you use remmin/xfreerdp directly on the relay host - so without VNC or remote-x?\n. This is packaging/build issue.\nRemmina needs be build against the same version of freerdp (at least API) that is installed on the system.\nCurrent ubuntu \"upstream\" remmina isn't compatible with freerdp from ppa.\nThere is ongoing work for a precise remmina package in freerdp-team ppa ( https://launchpad.net/~freerdp-team/+archive/freerdp). But until package is available you need either stick with ubuntu \"upstream\" freerdp build or build remmina from source.\n. Remmina is now available from ppa https://code.launchpad.net/~freerdp-team/+archive/freerdp\n. --kbd-list was added to the man page and to --help shortly after releasing 1.0.1. So it's available in master and will be in the next release.\n. The problem is that VirtualBox doesn't sent \"re-size events\" to xfreerdp. The same problem also exists for mstsc.\nHave a look at:\nhttps://www.virtualbox.org/ticket/10888 and https://www.virtualbox.org/ticket/8079\n. @yohanbelleguic if you have a look at https://www.virtualbox.org/ticket/10888 they state that this is intended behavior and and won't be fixed ;(.\nThe guest should resize to the clients window size if you have the guest additions installed.\n. Can you please try without plugins and without compression?\nWhich version did you exactly use? - Self build from git/tarball or installed via distrubution?\n. Building:\ncmake -DWITH_SERVER=ON -DWITH_CLIENT=OFF -DWITH_ALSA=OFF\nmake\nThe server can be found in server/X11 then. To be able to connect you need to create a file called SAM in /etc/winpr/ which contains credentials for a user in \"SAM\" format. Eg:\ntest:2012:972d6bbe1f00e65eaad3b435b51404ee:69bf94898385467264708f3cc51cf0a4:::\nIn this example the hashes are the password john.\n. Looks good to me and merges fine.\n. I've just tries to reproduce this problem with the current master branch (92d7b96a361699ab7634118350b3561c883526c6):\nrm CMakeCache.txt\ncmake -DWITH_MONOLITHIC_BUILD=ON\nccmake . # To modify other build settings\nmake\nWorks fine for me. \n@kkoh can you give more details?\n. MONOLITHIC_BUILD requires cmake version >= 2.8.8.\nPrecise ships with cmake version 2.8.7 and lucid with version 2.8.0 per default so it won't work.\nI've updated https://github.com/FreeRDP/FreeRDP/wiki/Build-Options to note this fact.\n. @ghost xfreerdp is a client implementation using X11, dfreerdp is a client using directfb for rendering, wfreerdp is the windows client, freerdp-test is a simple server for testing purpose and wfreerdp-server is a windows server implementation. To complete this list there is also xfreerdp-server which is an server using X11.\nAll of these share the same codebase.\nPlease ask questions like this in our irc channel (#freerdp on freenode) or on the mailinglist.\n. @dirkdingus please one problem per issue ;). Created a new issue #740 with that problem.\n. Had the same problem. \nTo build I've changed the BOOL definition on mac in winpr/include/winpr/wtypes.h:\n+#ifdef APPLE\n+typedef signed char BOOL, PBOOL, LPBOOL;\n+#else\n typedef int BOOL, PBOOL, LPBOOL;\n+#endif\nIt's not a clean solution but works for now.\n. libavcodec version version >=  0.8 (API >= 53.25.0) is now required to build.\n. The enhancements to RemoteFX are not yet supported.\n. Did you test version 1.0.1? \n. If stdin is a tty pass phrase shouldn't be shown.\n@ted-gould this wasn't merge too long ago. Removing this reopens an issue.\n. The request was updated. Thanks.\n. I think this isn't available in stable-1.0, or?\n. This is currently only required when building with clang. If gcc is used -fPIC is set globally so this shouldn't hurt.\n. Just wondering if the mask for cbChId should be 0x03 instead of 0x02 since the allowed values are [0,1,2,3]. \nIf I'm not mistaken 0x02 would lead to problems if length is 1 or 3 bytes.\n. SIGPROF     27,27,29    Term    Profiling timer expired\n. This 16384 comes from 6464 4.\n. Maybe we can still do the old comparison if no fnObjectEqual function is set? Does that make any sense?\n. Ahh. Haven't seen the default function,  very nice. \n. Instead of defining own types wouldn't it make sense to use the C standard sizes at this point?\n. @ajohnson23 this way only files in CMAKE_CURRENT_BINARY_DIR getting installed (which is config.h) but the other files in CMAKE_CURRENT_SOURCE_DIR won't.\nIf done this way you might need a\nfile(GLOB WINPR_HEADERS \"${CMAKE_CURRENT_SOURCE_DIR}/winpr/*.h\") as well.\n. @ajohnson23 it will work for in tree builds of course since SOURCE and BINARY dir the same in that case..\n. The page moved to http://msysgit.github.io/\n. Is it still required to change the defines? - If so we should patch this up properly in master.\n. These adaptions are not necessary if you supply the proper toolchain to cmake. For visual studio 12 this would be -T v120_xp.\n. with the comment above this would then be:\ncmake . -G\"Visual Studio 11 Win64\" -T v110_xp \n. What SDK version are you building with? - Looks like an old path to me.\n. FreeRDP uses the environment variable ANDROID_SDK if it's not set as cmake define. - This is also used for automated building. The above two lines are required. \n. Ahh I see. Makes absolute sense :). \nWe maybe should also raise an error if neither of the appcompat directories is found.\n. I really do like this idea!\n. @MartinHaimberger absolutely. Thanks.\n. Fixed thank you.\n. Yeah old habit ;)\n. Fixed them all ;)\n. Basically we could but I thought we keep it for \"reference\" in case we want to know which version we've checked in.\n. @hardening if I'm not mistaken windows can create a suspended thread so I guess that why one want that in winpr.\n. The wayland client can be used on Android?\n. set_complex_link_libraries shouldn't be required anymore on master. This was dropped some while ago. The cmake function was only kept for compatibility with older clients. You should only need to add freerdp to ${MODULE_PREFIX}_LIBS} \n. But I think your wayland client might not run on Android out of the box so we should DISABLE it for now. \n. Formating issue. Also is the change from < 0 to !=0 intentionally?\n. @pfpacket nope no problem with this ;) - Just saw that it changed and wanted to make sure.\n. @mdhorda I think the values for stop and response are interchanged. Shouldn't it be?\ndefine PDU_TYPE_FLOW_TEST         0x41 /* 65 _/\ndefine PDU_TYPE_FLOW_RESPONSE     0x42 / 66 /\ndefine PDU_TYPE_FLOW_STOP         0x43 /_ 67 */\n. If I interpret the T.128 spec section 9.1 correctly flowMarker is the length that is already read/checked in rdp_read_share_control_header - so the next field would be the padding and then the pduType. \n. @mdhorda if it's really the case that the padding and the type are received in different order we should add a note in the code that one is aware of this fact.\n. I'd rather use defines (or similar) for the request type.\n. I'm not in favor of having thin client specific code upstream.\n. we like brat-handle ;)\n. Why did you remove the static here?\n. @akallabeth makes perfect sense then ;). I personally prefer it to have static in declaration and definition. But that's just my preference.\n. @akallabeth is the double XStoreName intentional?\n. This seems to miss a ifdef for sun since it's at least not available on linux.\n. Side note: these two functions are defined for export in rdtk/include/rdtk/rdtk.h .\n. If we support more other system we should move that out to some extra file we can include but for now very nice ;).\n. Is alloca.h incuded in stdlib?\n. Not sure but it looks like that should be an WLog_ERR instead.\n. @ivan-83 for me it does look like alsa->device is always overwritten with \"default\" even if it's already set.\n. @ivan-83 aren't we now missing the case when the device is opened with no \"device\" set (so const char *device is NULL) but there is already a device set in ITSMFAudioDevice (the check alsa->device[0])\n. @nfedera this isn't necessary in this case since if GetCombinedPath fails it returns NULL and we would free(knownPath) and return NULL. So no special need to handle the error case.\n. Me neither before ;)\n. Why are there to extra scopes ({}) used there? \n. Indeed. Missed that ;).\nThank you.\n. @hardening the result is returned over multiple functions and iirc ends up in a void function..\n. Wouldn't it make sense to change these WLog_DBG to errors? (Also the following once)\n. If I'm not mistaken HMAC_Init_ex was void in older openssl versions.\n. The problem here still might be that the return isn't checked outside after the call.\nMaybe you could add the corresponding checks as well.\n. Something messed up here?\n. Although absolutely correct the formatting looks rather odd for me.\n. What was the reason to add pad as a parameter?\n. Ah. I see.\n. Has nothing todo with the pull request itself but the TODO is fitting here . abort isn't much better than exit ;)\n. Well done! Perfect trick.\n. That should be Stream_Free(server_data, TRUE); \ns isn't allocated at that time.\n. yeah sure but within an library abort is as bad as exit.\n. Absolutely not but I haven't even looked at this yet. I'll update it.\n. @hardening we'll do a separated PR where only the _New functions are checked.\n. Nope. But _aligned_offset_recalloc wasn't used before.\n. Schannel isn't completely finished and the the test does the following\nreturn 0; /* disable by default - causes crash */\nTherefore I disabled it completely since I thought it doesn't make much sense to compile a faulty test.\n. Thanks!\n. @cgholam ?\n. @hardening in crypto_des3_encrypt this isn't checked for example. From the code point of view I like @nfedera s idea to handle it the same way we would handle a general decryption error. Both are errors.\n. That one seems to have slipped thorough in my booleanize Stream_EnsureCapacity commit. Good catch. Thank you.\n. Unnecessary line. \n. Any specific reason why you removed this check?\n. Nope it's obviously TRUE ;). Thanks.\n. @nfedera the documentation over gdi_BitBlt (in bitmap.c) states:\n* @return 1 if successful, 0 otherwise\n. Unfortunately the return values are not consistent ;(.\ngdi_FillRect should return 0 on error. True that but if you follow the functions the specific implementations return 0 on success and 1 on error.\nSo checking here for == 0 means to fix all the called functions as well :(\n. In error case gdi memory is leaking.\n. when malloc fails gdi and memory from wlf_CreateDesktopWindow leaks\n. If I'm not mistaken in error case here are some possible memory leaks (gdi,  window, window->data)\n. Although absolutely correct we could leave out the checks for context->display, context->input, context->input in this case since wlf_DestroyDisplay, wlf_DestroyInput respectively wlf_DestroyWindow do proper input validation.\nJust an idea but not necessary.\n. @hardening that should be fine. freerdp_channels_pre_connect isn't bool it return 0 on success.\n. Coding style: remove {} for single line statements.\n. I don't think so. Capacity check is done in  update_write_pointer_color and fastpath_update_pdu_init initializes the stream with FASTPATH_MAX_PACKET_SIZE.\n. rdp_data_pdu_init initializes the stream with 2048 byte. We directly only write 4 plus headers. So I thought it's not really required here.\n. rdp_data_pdu_init initializes the stream with 2048 byte. And we only write 4 byte plus headers. I think the check isn't necessary here.\n. fastpath_input_pdu_init_header returns a stream with 256 byte or FALSE. We only write 8 bytes plus headers here.\n. fastpath_input_pdu_init_header returns a stream with 256 byte or FALSE. We only write 5 bytes plus headers here.\n. fastpath_input_pdu_init_header returns a stream with 256 byte or FALSE. We only write 2 bytes plus headers here.\n. fastpath_input_pdu_init_header returns a stream with 256 byte or FALSE. We only write 2 bytes plus headers here.\n. @akallabeth would be nice if we could make this function behave like the other _get_handles function. So what do you think about returning 0 on error and the number of events otherwise?\n. I think those ches are not necessary since env is checked afterwards anyway.\n. @akallabeth I would asssume 615 as line.\n. @hardening possibly not but I didn't look into the details that's why I added the TODO.\n. I tried to preserve the old functionality if something isn't implemented warn but don't count it as error. If you think raising an error makes more sense I can change it.\n. I would have moved this detection up before setting the CMAKE_C_FLAGS then it would already be possible to do a if (NOT OPENBSD) instead of if(NOT ${CMAKE_SYSTEM_NAME} MATCHES \"OpenBSD\"). But that's just personal flavor :)\n. Nice catch!\n. Even if it's correct the plus 8 look odd :).\n. Coding style. The opening brace { should be on the next line.\n. Coding style. The opening brace { should be on the next line.\n. Coding style. The opening brace { should be on the next line.\n. Please note that this coding style isn't common for FreeRDP. The bracket should be on the next line.\n. Same remark from me ;)\n. For a high count this might cause the CPU to get busy. Maybe a minimal Sleep should be added here.\n. shouldn't be void since ListDictionary_Add can fail.\n. Is the fflush required here? - Looks like some left over from debugging.\n. Stream_EnsureRemainingCapacity can fail. A check should be added here.\n. Stream_EnsureRemainingCapacity can fail. A check should be added here.\n. Stream_EnsureRemainingCapacity can fail. A check should be added here.\n. Stream_EnsureRemainingCapacity can fail. A check should be added here.\n. Stream_EnsureRemainingCapacity can fail. A check should be added here.\n. I think we shouldn't add fflush to the code directly since it is possible that WLog_DBG doesn't use stdout at all (for example when a file is used for logging. \nA possible solution would be to either use stderr for logging in this case or add the fflush in Console appender.\n. Was the error handling removed intentionally?\n. As mentioned above I wouldn't add the fflush here.\n. See above.\n. I'm not sure here but is the SpecialTypeDeviceCap optional and only sent if GENERAL_CAPABILITY_VERSION_02 is used?\n. Missing check. Was it removed intentionally?\n. As commented above all the checks were removed.\n. See above.\n. Here in the preview it looks like a formatting problem.\n. Missing return value check.\n. Looks like the formatting has problems here.\n. Missing check for return value of Stream_New.\n. Missing check for return value of Stream_New.\n. Looks like a formatting problem. - Some lines are more intended on the same code level than others.\n. Looks like the formatting is mixed up here.\n. Formatting. By convention in FreeRDP aren't any braces used for one line statements. (if and else in this case)\n. I'd suggest to use calloc instead of malloc above. Then the ZeroMemory wouldn't be necessary.\n. I would assume that context->priv is required for later use. Therefore it would make sense to free the context and return NULL if the above malloc fails.\n. Return value check missing.\n. The check (if (tokens)) is is not necessary. \n. Return values of calloc should be checked.\n. malloc return value check is missing here.\n. maybe just free all of them on error.\n. @hardening not sure if it make sense but maybe we should handle this case directly in xf_SetWindowText\n. @hardening malloc check pr for libfreerdp is coming up soon.\n. Coding style. Brackets should be on extra lines.\n. Note (nothing todo with you pull request):\nIn case the command is unrecognized we would just return TRUE and indicate success but \nif the cmd isn't know it might be an protocol problem. Maybe we should return FALSE here.\n@awakecoding what do you think on that?\n. This would change the default configuration location (~/.config/freerdp) on linux to ~/.config/FreeRDP/FreeRDP as well ;(. Please make sure that the current path doesn't change for compatibility.\n. Will be fixed in one of my upcoming pull requests.\n. Without this the development package won't ship the .so files.\n. This was intentional. The library it self is in the freerdp-nigthly package but the .so files (without version), which are only required for compilation, are shipped with the freerdp-nightly-dev. This is the way debian (and also rpm packages) usually do it.\n. If pulse->stream isn't set wouldn't the following return keep the mainloop locked?\nI'd assume that the right place for the lock would be after the check.\n. @realjiangms nope there shouldn't be an error. Have a look to\nchannels/audin/client/audin_main.h around line 35.\n. The first is not your code but those strdups should be checked (for the original code this is done in PR #2708)\n. If I'm not mistaken you would always only handle the @ case.\n. Although it seems to work this feels really weird. This would mean that you can't use TARGET as domain name and I haven't seen TARGET on the reserved names for domains.\n@awakecoding do you know something about that or have any ideas?\n. Missing strdup check.\n. strdup return value not handled.\n. @nfedera settings get freed properly on shutdown so I didn't handle any setting values if not required.\n. Side note: This is because of http://www.cmake.org/cmake/help/v3.1/policy/CMP0054.html\n. @akallabeth thanks. fixed.\n. @nfedera good idea.\n. @nfedera if I'm not mistaken this is done it ClipboardDestroy.\n. @hardening fixed on my branch. will rebase and push once @nfedera is done.\n. I guess the help should be different than \"print version\"\n. I was wondering if it would't have made sense to keep as much in the generic part as possible that different concrete implementations can re-use it?\n. work_objects and params are only allocated if threads are used. The free here doesn't hurt but wasn't a leak either before imho.\n. nice!\n. good catch.\nWe should also clean up the rest (file->MachineAddresses[i]) if a strdup fails maybe you can add that as well.\n. What's wrong with the previous approach in your opinion? - Does effectively the same and saves a variable.\n. Very good catch!\n. muhahah. right! - Haven't looked at the type. Nice. Thanks for pointing that out.\n. @realjiangms free works fine with NULL. According to the C standard:\nIf ptr is a null pointer, no action occurs.\n. @realjiangms was just an idea but your suggestion sounds good for me ;).\n. @nfedera thank you. I'v absolutely missed that.\n. Unchecked strdup.\n. Unchecked strdup.\n. I think there is a ! missing.\n. unchecked calloc.\n. unchecked calloc\n. unchecked malloc\n. @nfedera yes you could say they are mixed. However it works correctly. We write 1 element (sizeof(char)) with the size of strlen(hosts[i]) and check if 1 element was successfully written.\nAnyway the sizeof(char) is really confusing and misplaced - I'll update it tomorrow.\nThanks for the feedback.\n. @nfedera size J?\nI haven't really checked that code since it was if(0) but in order to not have it compiled in I disabled it properly with #if 0.\n. Just a little ;) \n. @RoadRunnr there is some ongoing hardening work for existing code that should cover the open unchecked functions but new code that is added should handle it properly already.\n. @akallabeth true that but that was there before as well.\n. imho this isn't necessary since it get's reset when exec is called.\n. Since @akallabeth mentioned it the chdir at this point is unchecked on purpose.\n. imho the formatting was better before..\n. I know there are no official guidelines on formatting for FreeRDP (expect read the different formatted code ;() but looking at other parts where indentation is used for long functions I'd say the extra intended part should start at the beginning of the function name (not on the brackets) or is intended with one (or two in extreme cases) extra tabs.\n. We maybe should do the frees below also in error case.\n. Not sure but does this mapping make sense in practice?\n. This implicit cast from BOOL to WIN32ERROR is valid but the error code (0x01 for false) would mean ERROR_INVALID_FUNCTION.\n. ahh my bad. Haven't seen the line below. Just ignore the comment :)\n. Formatting.\n. @mfleisz excellent point. I'll update the PR. Thank you.\n. Maybe we should add some braces around this if as well.\n. Same as above. Maybe we should add braces in this case.\n. I think the return value should be checked here. In case of memory shortage WaitForMultipleObjects might return an error.\n. I wonder if we do need this ExitThread here. If we return the error directly this should be sufficient in my opinion.\n. I think having different lables as before might make sense at least for MessageQueue_Free. If I'm not mistaken MessageQueue_Free won't handle \"NULL queues\" at the moment.\n. what about doing a \nreturn rail_write_unicode_string_value(s, &exec->arguments);\nhere?\n. Formatting: for single line if statements the braces should be removed.\n. Formatting: for single line if statements the braces should be removed.\n. Formatting: for single line if statements the braces should be removed.\n. Formatting: for single line if statements the braces should be removed.\n. Formatting: for single line if statements the braces should be removed.\n. Formatting: for single line if statements the braces should be removed.\n. Formatting: for single line if statements the braces should be removed.\n. Formatting: for single line if statements the braces should be removed.\n. Maybe I've missed it somehow but shouldn't we inform the main thread if we exit?\n. Same comment as above. Also for the next ExitThread below.\n. This was already like this before the commit and maybe I'm wrong but shouldn't we do the check for status before rdpdr_add_open_handle_data is done?\n. I was wondering if there is a reason why ERROR_SUCCESS is used here instead of CHANNEL_RC_OK. \n. Why the UINT16 here?\n. Same as above I wonder why UINT16 was used here.\n. How is that related to the symbols?\n. intentionally or accidental indent?\n. Why the reformatting in this file?\n. What was the reason to remove this? (same for the other two occurrences below). \n. Since the symbols are only defined on windows with MSVC we should maybe use the same if here as well.\nI'm not sure if this can't cause problems otherwise.\n. Where is this function used?\n. Nice!\n. Is that required? If nothing is executed in the if clause why not using if (!h264->Compressor) and only this case?\n. I'm not sure but do those empty if's have any special purpose?\nI would suggest if it's something we currently don't handle but need to add in the future using\nif 0 and a comment would be more nice.\n. I personally liked to have a way to disable this even if the WLOG_LEVEL is set to debug. \nMaybe we can extra DEBUG option for that. \n. Good catch!\n. @hardening this was just split moved out from the old file.c I didn't review the code. But your suggestion makes sense.\n. @mfleisz is that still available on every windows version? - I wasn't sure.\n. Didn't we have this a while back and removed it again because it broke stuff (tm)?\n. Nice catch!\n. As we never pass a extra version comparison here this check regex isn't required for us. But it also doesn't hurt.\n. GStreamer_FIND_VERSION isn't set anywhere. Maybe we should use \nGSTREAMER_1_0_MINIMUM_VERSION for the components as well.\n. @mfleisz am I mistaken or are the following values in the end the combination \nof what is supported by the server and the client?\n. @mfleisz what do you think about updating the comment to reflect this fact? While reviewing the PR the comment confused me a little ;).\n. For consistency maybe we should use JOURNALD instead of SYSTEMD here.\n. If I'm not mistaken env is copied and can therefore be freed after the call.\n. @hardening you mean with WLOG_APPENDER?\n. Coding style. For single line statements don't use brackets. \n. I wouldn't generally change the cmake rpath behavior if not absolutely required. At least maybe this should only be done on windows?\n. @akallabeth ahh right. My bad.\n. What was the reason that you've added this as parameter but not in config.h(.in)?\n. What is the reason for removing this?\n. nice!\n. Is there now a message printed in those cases? If not we should maybe change this to info.\n. as @mfleisz said pclose should later be used if popen was used for opening the i/o stream. Otherwise the behavior is undefined.\n. nitpicking but maybe we can align the first line :)\n. Missing check?\n. Does this always succeed?\n. The return value of strdup should be checked.\n. I'm not sure but shouldn't we add a check if data is set here?\n. Not in the old code but maybe a check for setting->ClientTimeZone makes sense before accessing the members.\n. Same as above.\n. I might be mistaken but I think GetTImeZoneInformation isn't implemented (as in return 0).\n. This check should be done before the context is reset, or?\n. Although this check works it was suggested to check the return value of ConvertToUnicode.\n. Just a remark I think the jump here isn't necessary. A return rc would be good as well at this point.\n. What's the problem with the German translation? Looks good to me.\n. @hardening that's only the .a files that get created when static channels are enabled and the cmake version is to \"old\". All winPR libs are installed where they belong.\n. @mfleisz  for wtsapi at least basic functionality still aiming for compatibility\n@akallabeth would you be so kind and the PR? And also revert this to the original type (although it's ugly as ...)\n. Maybe we should throw a warning here (or at least a debug message)?\n. I think error should be set here since it is initialized with CHANNEL_RC_OK.\n. Coding style. Only line argument shouldn't have {}\n. Coding style. Only line argument shouldn't have {}\n. nice one!\n. If used as library this and the following initialization code might get executed multiple times (maybe also by different threads).\nI'd suggest to use InitOnceExecuteOnce (for example like done in winpr/libwinpr/pool/pool.c).\nWhat was initially the idea/reason behind loading the library later on instead of directly linking against it?\n. I might be mistaken but is a return missing here? if the library couldn't be loaded the following code won't make sense or work at all.\n. Here and in the following four function shouldn't an error return as well?\n. As well as single line statements should be used without the braces {}\n. What's the minimum OS version Msimg32.lib is available? - Wasn't that windows 2000?\n. Formatting.\n. @dcatonR1 nope just wanted to make sure it still would work on XP.\n. That really scares me ;). 4G for a build tool. O my/\n. @hardening it still can be overridden so it still makes sense.\n. Would be great if we can add some reference about the new cap.\n. Nice!. \\o/\\o/. Was this a compiler warning? - As the securityFlags are always initialized because they are read below.. @mfleisz good point.. Is the repo.prop still usable? I mean is it possible to update the code still? If not we should remove it.. If this is removed the time is set in the message parameter but not in the message added to the queue.. yeah this looks really crappy ;(. @hardening I would think you could easily grep for it instead of just searching for the numeric value.. This can cause a double free if windowState->visibilityRects is 0.. This can cause a double free if windowState->numWindowRects is 0. (And also breaks rails).. @weizhenwei no problem ;) - We are happy about the improvements. Just wanted to mention it that we have it in one place.. One more remark. 137-145 are the same if I haven't missed anything. So why not just have only 136 in the ifdef/else?. Maybe we should also not show them in file listings?. In fact it's not really a gain but with -Wparentheses-equality there are some warnings but I think it's worth to have the warnings enabled in general.. Confused here: UINT32+UINT8+UINT32+23UINT8 isn't that 32?. I think that should be < 12. Shouldn't that be < 32?. I'd leave out the last two points - this is (should/will be part of ci). Maybe just add them as hint.\nAs addition we should add that a pull request shouldn't contain merges.. Maybe split that:\n Give the pull request a proper name so people looking at it have an basic idea what it is for\n* Add at least a brief description what it does (or should do :) and what it's good for. Nice finding. Looks like a rather old copy 'n' paste error ;)\n. If status is only used for return. Possibly we should do a:\nc\nreturn schannel_openssl_server_process_tokens(context->openssl, pInput, pOutput);\nAnd drop status completely . I was wondering why the Enabled flags are necessary. Wouldn't both having it disabled or setting WmSkipPager to  false return 0 (as the default struct is zero initialized). Shouldn't a missing include cause a compilation error?. Although it would be more \"correct\" this was intentionally. Our tooling for the nightly packages (https://github.com/bmiklautz/jenkins-package-builder) creates one tarball from git which is build for all target distributions. While exporting the name of the archive is automatically created, based on the spec file, but it can't resolve any macros, like for Release, as we don't know the target distribution yet ;).. This should be located where the other Gateway settings are. Remove it here, add it there and decrease the padding - otherwise the struct size changes.. @hardening I agree with some of these checks but especially in this function which is called from a handler and therefore possibly externally invoked. It makes sense imho.. ```suggestion\n```. The cast to %PRIx32 does make sense according to our format specifiers. The errorCode is an unsigned 32 bit integer interpreted as HRESULT. . RdgPacketHeader is currently 8 byte.. and has a static size... +1. o boy. I like hysterical raisins ;). +1 for not casting. In case we have changes on the API the compiler wouldn't complain.. The following UpdateSurface is now called with the CS already left.. Same as above. The following UpdateSurface is called without the CS.. Would possibly be a good idea to indicat that numberOfElements is the maximum number.. It's not necessary I think. @mfleisz good finding.\n. The created socket, stored in rc, is overwritten here. The listen below will fail as it will try to listen on the value returned by bind (0).. ",
    "dsyou20": "It was tested with windows 2003 server which supports 24bpp.\n. No. I never use session redirection. I got the same message almost all. It looks strange.\n. yes, It works with -sec rdp 16bpp. Is there any way to use 24bpp? Should  I change the server security setting to support 24bpp? \n. That's great job!. I will test it and then let you know. Thanks\n. I have tested it and it works very well. ^^;\n. ",
    "avollmerhaus": "samples for problematic file-paths:\nsetup: i share /media with the windows server (--plugin rdpdr --data disk:media:/media/ --), this is where usb-drives get automounted using their fs-label.\nTrying to access a file on a usb-device results in the following error:\nWarning disk_process_irp_read (223): seek /media//9095-91E0(93) failed.\nWarning disk_process_irp_read (223): seek /media//9095-91E0(93) failed.\nThe file in question has the following path on the linux side:\n/media/9095-91E0/test.bmp\n. I tested again today against Anthonys rdpdr branch,\nEditing files with paint & Gimp works fine (even if nested in a bunch of directories).\nRenaming files, then editing again (paint) does not work. I am able to rename the file and even to open it again in paint, but trying to save it results in an error on the windows side (access violation). FreeRDP does not give any error on this.\nEven reconnecting does not work, still results in \"access violation\". \nI renamed a file from \"test2.bmp\" to \"blabla_test.bmp\", the paths on the linux side were:\n/media/SYSRES_USB/DATEN/test2.bmp\n/media/SYSRES_USB/DATEN/blabla_test.bmp\nInterestingly enough, even if i re-renamed the file to test3.bmp and reconnected, i was still unable to edit it.\nCreating & renaming directories worked fine.\nDeleting directories or files did not work, they just stayed were they\u00b4ve been.\nEditing xlsx files with MS Excel didn\u00b4t work at all, I always got the \"document is in use, open read-only?\" error.\nStrangely, I was able to edit them with OpenOffice.\nEditing xls files worked in both MS Excel and OpenOffice, OpenOffice\u00b4s toolbar looks really distorted though but i guess that would be a different bug altogether.\nThese files were named \"footest.xlsx\", Kopie von footest.xlsx\" and \"Unbenannt 1.xls\", all located in /media/SYSRES_USB/DATEN/ on the linux side.\nDuring these tests, i got the following error from FreeRDP:\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\n. I\u00b4m creating the file via: right-click menu, new file, bitmap. Then i try to edit it with right-click, edit.\nI just tried again with a newly created directory, but hat no luck. Same error.\n. I just tried with 0.8.2, works fine.\n. okay, i made an interesting observation:\nwhen i share my /home/user folder, i am perfectly able to create and edit bmp files (or other files, like odt).\nBut when I share /media/ and plug in an usb stick (which gets automounted under /media/fs_label ), I can\u00b4t edit the files (although I am perfectly able to edit / delete / whatever them on the linux side, so it\u00b4s not a permission problem)\nTo be clear: this just happens with the latest git, with 0.8.2 I am able to edit the files on the usb stick perfectly.\n. So if I understand this correctly, it should work when I start freerdp after the directory has been created, i.e. after the usb drive got mounted? \nBecause it doesn\u00b4t.\n. Okay it looks like i can\u00b4t attach files, so here is a link to a sample:\nhttp://dl.dropbox.com/u/21920446/libreoffice.png\n. -a 16 is right, server is 2008 r2 sp1.\n. ",
    "bmullan": "Just to add more information... this SAME problem with Clipboard Redirection occurs when using KVM for the Windows 7 Virtual Machine.   So I don't think this is a VirtualBox specific problem.\nI also have already tried logging into Windows 7 and using gpedit.msc (global policy editor) to force Clipboard Redirection - Always... but that also made no difference.\nSo unless this is a Windows bug it must be with FreeRDP's implementation of Clipboard redirection.\n. Doing a little more google searching for the only the past 12 months I did find that ALOT of windows users are also seeing this problem:\nhttp://www.gfi.com/blog/copy-paste-working-remote-desktop-connection-whats-wrong/\nSo its a puzzle where the problem lies... \n. I just got finished searching on microsoft's own website using \"remote desktop cut and paste\" and there are hundreds of people that have or are reporting problems with remote desktop cut & paste.\nHere is the URL for the search and responses I saw:\nhttp://social.technet.microsoft.com/Search/en-US?query=remote%20desktop%20cut%20and%20paste&ac=3\nThis has to be a microsoft bug... At least I beleive so\n. I just setup freerdp in Ubuntu 12.04 and the above problem still exists.   I am using the latest x2goclient/x2goserver from ppa:x2go/stable?    Did this patch not get put into the latest release?\n. FreeRDP developers -- this bug & the patch that fixes it apparently IS IN the latest FreeRDP code.    However, you should note that the FreeRDP v1.0.1 that is in the Ubuntu 12.04 repositories does NOT have the patch yet.\nWhenever you update the FreeRDP in the Ubuntu Repositories this should be resolved for Ubuntu & x2go & FreeRDP.\nBy the way... great job on FreeRDP !!\n. I've now replicated this using either Windows 7 -or- Windows 2008 r2 setup as RemoteApp \"host\".    So it has nothing to do with using Windows 7 as the RemoteApp host as Windows 2008 r2 RemoteApp does the same thing.\nIf there is a way to attach pictures of this I have taken a screenshot showing the black bar that appears once the RemoteApp is moved anywhere on the linux desktop.  Also a 2nd screenshot showing that the black bar is the same identical size as the RemoteApps Title Bar.    \nNOTE:   I have only found a couple Windows Apps that this occurs with.  Most seem to work fine and don't display this dark bar display \"artifact\"  \n. Although I didn't have the very newest versions of 3 apps that I own/use that exhibited this behaviour I uninstalled those 3 and went to their respective company websites and downloaded & installed a \"trial\" version of each & set them up as RemoteApps.    \nAll three now seem to display correctly without artifacts left on the screen.  So I am assuming some commonality of a library etc must have been causing the problem.\n. ",
    "Rudloff": "Thanks for your answer.\nI am using the Intel version.\nI finally built it by adding :\nset(CMAKE_SHARED_LINKER_FLAGS \"-mmacosx-version-min=10.4\")\n. ",
    "mattymo": "submitted\n. ",
    "ydal": "@awakecoding: I tested it using office outlook 2007 on RDP session. I will re-request this patch.\n. points[].x and points[].y are \"delta\" value. so I accumulated these values to local variable 'x' and 'y'.\n. ",
    "orenhe": "Same here from Linux. Some keys produce nothing, some product weird characters such as ^Z.\n. ",
    "shadowbq": "+1 no keys work at all (osx10.6) cmake compiled no errors. Connect is fine. Mouse no issue.\n. 10.6.8 works with this work around during compilation\ncmake -DWITH_XKBFILE=OFF . \n  make\n  make install\nThanks.\n. ",
    "kieppie": "I think I've got something similar.\nI've set up an Ubuntu 12.04.1 64 VM with XFCE as a DM for remote support purposes.\nI VNC into this host on from my local network & then remote into foreign hosts through a number of protocols - I use Remmina most often: RDP over SSH tunnel.\nWhen connecting to remote host, mouse works OK, but keyboard is absolutely dead - I need to resort to either an on-screen keyboard, or another system/protocol like TeamViewer.\nI've managed to track this issue down to the FreeRDP component/binary (0.7.4-1), as rdesktop works fine (initiated both via CLI to test).\n. I have. \nTried it with the  \"-f -k 0x00000409\" (US keyboard) & \"-f -k 0x00000409 -K\" (and a few other options & variations), with & without an on-screen keyboard, but the results are the same.\nWhat I am seeing in the CLI terminal is a series of std-out messaged along the lines of \"Unknown key with X keycode 0xNN\" (where NN is a number) whenever a key is pressed.\nOnly references found in an online search pint to code source.\n. I've tried taking the keyboard scanning issues into account: https://github.com/FreeRDP/FreeRDP/wiki/Keyboard\n. bmiklautz - I have.\nI have 2 setups - an Ubuntu XFCE VM (my \"support\" sandbox host - the jumphost I'm trying to get all sorted) & a Ubuntu 12.04 desktop(s) (daily use, additional testing).\nWorks find when using the \"jumphost\" (Ubuntu desktop) keyboard, but not when I VNC into that same \"jumphost\" & user the connecting client's keyboard or an on-screen keyboard of the jumphost.\nadditional not: I'm not getting the earlier \"Unknown key with X keycode 0xNN\" stdout when using the Ubuntu desktop jumphosts, but end-results are the same - no keyboard input.\nkiilerix- what, where, how? Are you able to provide more insight, please? Tools, components & libs all defaults from standard install via repo's/.deb's, so not sure what's required additionally.\n. hi jolinar,\nGood to know I'm not the only one, or that this is some fringe case.\nMaybe provide some similar information about your setup & additional info as requested as above?\nUPTADE:\njust some additional information re my own situation.\nI run libvirt virt-manager in the same VM, which makes use of the VNC protocol to connect to running guests & the keyboard relay in that case works fine.\n. Managed to get it going again via purge & manual re-install via .deb's\nthanks\n. aaaaaaaaand..... we're back!\nissue has resurfaced with no direct interaction or intervention from myself.\nTried reinstalling via apt-get & get:\nThe following packages have unmet dependencies:\n remmina : Depends: remmina-common (= 1.0.0-4~426+18~precise1) but 1.0.0-4~427+18~precise1 is to be installed\nUPDATE:\nhad to do the following to fix the problem: \nsudo apt-get install remmina=1.0.0-4~426+18~precise1 remmina-common=1.0.0-4~426+18~precise1 && sudo apt-get install remmina-plugin-*\n. ",
    "helgef": "Does not work under 0.8 either - However 0.8 gives a more verbose output, might help:\nHelges-MacBook-Air:X11 helge$ ./xfreerdp 192.168.1.150\nkeyboard_layout: 0x409\nconnecting to 192.168.1.150:3389\nconnecting to 192.168.1.150:3389\nconnecting to 192.168.1.150:3389\nStandard RDP encryption negotiated\ndyld: lazy symbol binding failed: Symbol not found: _hexdump\n  Referenced from: /Users/helge/FreeRDP-old/libfreerdp-core/.libs/libfreerdp-core.0.dylib\n  Expected in: flat namespace\ndyld: Symbol not found: _hexdump\n  Referenced from: /Users/helge/FreeRDP-old/libfreerdp-core/.libs/libfreerdp-core.0.dylib\n  Expected in: flat namespace\nTrace/BPT trap: 5\nHelges-MacBook-Air:X11 helge$ \n. ",
    "SteveDiG1": "@awakecoding: I am not using virtual box. I've tested with a number of servers including stand alone servers on hardware in admin mode, servers in an F5 load balanced TS farm on hardware, and several hosts running on RHEV virtual machines. They all respond the same way. From the remote host to the local the clipboard data is available. From local to remote, not so much...\n. Update on this issue. \nIn addition to the above, I find that I can copy from one windows host in active session 1 and past that content into an app such as notepad on an active session to a second host. It is translating the content between the two remote windows hosts, and from the remote host to the local clipboard. It's just not copying the local clipboard contents to the remote system. \n. I've tested the things that weren't work when I reported the bug and they are now working fine. I can't say all scenarios work but those that led me to open the issue are working so...\nThanks for the fix.\nRgds,\nSteve D.\n. This isnt' the only circumstance this occurs under. I see it with users copying content from a variety of different local and remote apps. The most common is a local spreadsheet on the client wks to a remote spreadsheet in excel on the ts but this is because many of my users are accounting people. I see it with text from x to notepad or word or wordpad as well. \nOn minute your copying and pasting along at a good clip, then the transfer from local to remote stops happening and you just paste the same content over and over until you notice... The content on the clipboard on the server remains. The local clipboard content just stops transfering.\n. Backend server is Win 2K8 R2.\n. I've been trying some things here. \nIt would seem the client is passing some time/timezone info to the server. I'm seeing very strange results however.\nThe timezone for the server is invariably set to Dublin time (UTC 00:00) not unknown time zone or ... however the clock is out exactly 12 hours from the local system time which is EST -05:00. If local time is 2:48PM the servers clock is set to 2:48AM, forward 12 hours. The math on this doesn't work. If the server clock were actually showing UTC then the clock would be out +5 hours, not +12.\nThe server itself resides in the Mountain time zone (UTC -07:00) which is what its local time zone is set to. I would expect a -7 hour offset, not a +12 if the clock were showing the local system time instead of UTC or the client time but that's not the case either.\nIf I manually go and set the timezone to my clients correct zone, I can get a match in time. i.e. if the client is in the eastern tz and I set the server to that time zone then the shifts 12 hours on the server and syncs up between it and the client. 2:48PM local becomes 2:48PM on the server instead of 2:48AM the next morning.\nThis seems odd to me given that the server is reporting it's time zone as Dublin UTC 00:00 and changing it to EST -05:00 introduces a 12 hour shift instead of a 5 hour shift. Again, the math doesn't add up.\nI'm not sure how freerdp is managing to set the server TZ to UTC while setting the clock to an +12 hour offset from the local system time. If the system clock were actually being changed it would break kerberos auth among other things so it's obviously a display change but how is the time being calculated? As I said, the server reports it's TZ as Dublin UTC on client connection but the time offset is +12 hours no matter what TZ the client sits in. You don't actually see Dublin time.\nI've set TZ & ZONE environment variables to America\\New_York but to no avail. It would seem these do not impact what the freerdp is sending the server. \nrgds,\nSteveDiG\n. -----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\nI found this thread but I'm using a build post awakecode's fix and still seeing the problem. One of the guys here tweaked the code so that it does the math correctly and sets the clock to match your local time but we still see unknown timezone when you check.\nIt was doing some inconsistent math, giving a different offset to the server clock depending on the tz set on the client. It's difficult to describe but i'll try to explain.\nIf you set a tz on the client that was -5 GMT you would get -17 on the server so an offset of -12 from what it should be set to based on the client.\nChange the tz on the client to -9 GMT and you get -18 on the server so an offset of -9 from what it should be set to based on the client.\nThe result of the attempt to set the timezone didn't result in the same delta for each timezone tested. You wern't off consistently by 12 hours for each time zone tested.\nEach tz change resulted in a different delta between the client clock and the server clock, to the point that the date actually changed. If you connected in the morning and executed tasks, the time stamp on the task would be something from the preceding day. i.e. you did it at 8 am on the 15th but it would get time stamped as 8pm on the 14th if the delta set between your local tz and whatever was sent to the server was -12 hours. That delta depending on what tz you set on the client.\nThe issue lives tho it was closed in that thread.\nrgds,\n\nSteven DiGiuseppe\nSenior SA\nSOC\nRed Hat\nccorbacho reply@reply.github.com wrote:\n\nThis looks like a duplicate of\nhttps://github.com/FreeRDP/FreeRDP/issues/437\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/574#issuecomment-6929981\n-----BEGIN PGP SIGNATURE-----\nVersion: APG v1.0.8\n\niHQEAREIADQFAk/+lLctHFN0ZXZlbiBEaUdpdXNlcHBlIChTQSkgPHNkaWdpdXNl\nQHJlZGhhdC5jb20+AAoJEOioGgc6kLvUFcgAoLO0WtO0iMxHUPFRAupMcYllm0S5\nAJ9GWPMoPBftBXXoYEXuosp7ICSZGw==\n=4qfV\n-----END PGP SIGNATURE-----\n. -----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\nThis is self built from git.\nxfreerdp --version reports 1.0.1\nRemove either plug in; cliprdr or rdpdr, and the redirect works\nwithout issue.\nWhen both plug ins are used the segfault occurs.\nRemoving the compression switch makes no difference in any of the\nscenarios.\nrgds,\nSteven DiGiuseppe\nOn 09/07/2012 06:49 PM, Bernhard Miklautz wrote:\n\nCan you please try without plugins and without compression? Which\nversion did you exactly use? - Self build from git/tarball or\ninstalled via distrubution?\n--- Reply to this email directly or view it on GitHub: \nhttps://github.com/FreeRDP/FreeRDP/issues/713#issuecomment-8381378\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.14 (GNU/Linux)\nComment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/\niEYEARECAAYFAlBLrloACgkQ6KgaBzqQu9TCRgCgpm2GxbGCEdZKLmevUcGvYlup\nX64AoLNKm7gZ1ua9oDugY/u2wdLoQYym\n=B7HA\n-----END PGP SIGNATURE-----\n. ",
    "NiKiZe": "I see the \"same\" problem, and consider the clipboard transfer function \"broken\"\nThis is debug output with a Win7Ultimate 64bit server running on qemu-kvm (another machine then the client is the host)\nit seems to work when you copy pure text, but copy something that have multiple formats, text on a webpage for example, then you don't get the get the text format, might it be that it only transfers one of the formats?\nI did some tests... \n1.Block: Copy code (as text) from visual studio on server (can not be pasted in kwrite)\n2.Block: Copy code from firefox on server (can not be pasted in kwrite)\n3.Block: pasting the data copied in firefox into MS Word (can not be pasted in kwrite)\n4.Block: Copy the data from MS Word that was just pasted. (now we CAN paste into kwrite)\n1.Block:\nDBG_CLIPRDR cliprdr_process_receive (204): msgType: CB_FORMAT_LIST (2), msgFlags: 0 dataLen: 62\nDBG_CLIPRDR cliprdr_process_format_list (216): format: t\nDBG_CLIPRDR cliprdr_send_format_list_response (85): Sending Clipboard Format List Response\nDBG_CLIPRDR cliprdr_process_receive (204): msgType: CB_FORMAT_LIST (2), msgFlags: 0 dataLen: 148\nDBG_CLIPRDR cliprdr_process_format_list (216): format: Rich Text Format\nDBG_CLIPRDR cliprdr_process_format_list (216): format: cesData\nDBG_CLIPRDR cliprdr_process_format_list (216): format: stem.String\nDBG_CLIPRDR cliprdr_send_format_list_response (85): Sending Clipboard Format List Response\n2.Block:\nDBG_CLIPRDR cliprdr_process_receive (204): msgType: CB_FORMAT_LIST (2), msgFlags: 0 dataLen: 210\nDBG_CLIPRDR cliprdr_process_format_list (216): format: text/html\nDBG_CLIPRDR cliprdr_process_format_list (216): format: ormat\nDBG_CLIPRDR cliprdr_process_format_list (216): format: htmlcontext\nDBG_CLIPRDR cliprdr_process_format_list (216): format: /_moz_htmlinfo\nDBG_CLIPRDR cliprdr_process_format_list (216): format: \nDBG_CLIPRDR cliprdr_process_format_list (216): format: l-priv\nDBG_CLIPRDR cliprdr_send_format_list_response (85): Sending Clipboard Format List Response\n3.Block\nDBG_CLIPRDR cliprdr_process_receive (204): msgType: CB_FORMAT_LIST (2), msgFlags: 0 dataLen: 210\nDBG_CLIPRDR cliprdr_process_format_list (216): format: text/html\nDBG_CLIPRDR cliprdr_process_format_list (216): format: ormat\nDBG_CLIPRDR cliprdr_process_format_list (216): format: htmlcontext\nDBG_CLIPRDR cliprdr_process_format_list (216): format: /_moz_htmlinfo\nDBG_CLIPRDR cliprdr_process_format_list (216): format: \nDBG_CLIPRDR cliprdr_process_format_list (216): format: l-priv\nDBG_CLIPRDR cliprdr_send_format_list_response (85): Sending Clipboard Format List Response\n4.Block\nDBG_CLIPRDR cliprdr_process_receive (204): msgType: CB_FORMAT_LIST (2), msgFlags: 0 dataLen: 114\nDBG_CLIPRDR cliprdr_process_format_list (216): format: Rich Text Format\nDBG_CLIPRDR cliprdr_send_format_list_response (85): Sending Clipboard Format List Response\nDBG_CLIPRDR cliprdr_process_format_data_request_event (308): Sending Format Data Request\nDBG_CLIPRDR cliprdr_process_receive (204): msgType: CB_FORMAT_DATA_RESPONSE (5), msgFlags: 1 dataLen: 600\n. Also tested, and the scenarios documented above now works.\nThanks!\n. looked a bit more... So when we get \"invalid offscreen bitmap at index\" it returns NULL from offscreen_cache_get as bitmap and in update_gdi_switch_surface that calls Bitmap_SetSurface with a NULL bitmap ?\nWhat is most correct, we don't expect \"invalid offscreen bitmap at index\" at all, or is it ok and the NULL should be handled?\n. no crashes yet, but have not had the opportunity to make heavy use of the scenario where it happens, but the main issue looks resolved, Thanks!\n. Also seen this issue.\njbonor: The screen cap you took was it server side? The rendering is probably only wrong on the client side.\nDid a capture with gimp that shows the problem: http://nikize.se/FreeRDP%20Bitmapp%20err.png\nThis is with TortoiseSVN and the diff utility, selecting the colored line and then selecting another shows this.\nWhen some other line is selected this \"corruption\" is updated and showing something else.\nWhen selecting the line that is showing the problem, the problem disappears. but changing line it reapers.\nThe corruption itself in this case most of the time have data from somewhere around the mouse cursor, especially if text is selected.\nAlso seen corruption for example icons sometimes in a MessageBox is from different parts. the taskmgr taskbar icon is something I remember to often appear in this context.\nHope this helps, tell me if there is anything I can do to help debug this.\n. (First: The code might be totally wrong somewhere ..)\nI have tried to find the reason for the problem, it seems to be one issue with the source bitmap being smaller then what is wanted (not always but sometimes), see below how I try to detect them.\nThis have so far always returned cacheIndex 599 as the cause (different runs but same instance on the server), seems weird, anyone else that can test and see if / what index they get?\nex output: memblt 1 : 599 from 0x0 size: 64x16 to 447x307 srcSize:32x22\n(srcSize is smaller then size, and causing black parts to be drawn.)\nnow tested and added an additional check for showing 599 (and drawing a red rectangle around it) and get similar display as previous screen shoot.\nFor me 599 is not always wrong, but if I see something wrong, it is so far always 599.\nThe problem for me is also mostly where there should be text drawn.\n```\ndiff --git a/client/X11/xf_gdi.c b/client/X11/xf_gdi.c\nindex 0b20d0c..2590576 100644\n--- a/client/X11/xf_gdi.c\n+++ b/client/X11/xf_gdi.c\n@@ -594,14 +594,20 @@ void xf_gdi_polyline(rdpContext context, POLYLINE_ORDER polyline)\n void xf_gdi_memblt(rdpContext context, MEMBLT_ORDER memblt)\n {\n    xfBitmap bitmap;\n+   rdpBitmap rbitmap;\n    xfInfo xfi = ((xfContext) context)->xfi;\nbitmap = (xfBitmap*) memblt->bitmap;\n\n\n\nrbitmap = (rdpBitmap*) memblt->bitmap;\n    xf_set_rop3(xfi, gdi_rop3_code(memblt->bRop));\nXCopyArea(xfi->display, bitmap->pixmap, xfi->drawing, xfi->gc,\n        memblt->nXSrc, memblt->nYSrc, memblt->nWidth, memblt->nHeight,\n        memblt->nLeftRect, memblt->nTopRect);\n+   int dbg = ((memblt->nXSrc + memblt->nWidth) > rbitmap->width || (memblt->nYSrc + memblt->nHeight) > rbitmap->height); //599\n+   if (dbg)\n+       printf(\"memblt %i : %i from %ix%i size: %ix%i to %ix%i srcSize:%ix%i \\n\", memblt->cacheId, memblt->cacheIndex, memblt->nXSrc, memblt->nYSrc,\n+            memblt->nWidth, memblt->nHeight, memblt->nLeftRect, memblt->nTopRect, rbitmap->width, rbitmap->height);\nif (xfi->drawing == xfi->primary)\n{\n\n\n```\n. Yes, with current git, this is a piece of my current terminal window (with above debug code):\nmemblt 2 : 2047 from 16x0 size: 19x64 to 80x150 srcSize:64x37 \nmemblt 2 : 2047 from 16x0 size: 19x64 to 80x150 srcSize:64x21 \nmemblt 2 : 2047 from 16x0 size: 19x64 to 80x150 srcSize:64x21 \nmemblt 2 : 2047 from 16x0 size: 19x64 to 80x150 srcSize:64x21 \nmemblt 1 : 599 from 0x0 size: 64x16 to 494x461 srcSize:32x30 \nmemblt 1 : 599 from 0x0 size: 64x16 to 1335x461 srcSize:32x30 \nmemblt 2 : 2047 from 0x0 size: 64x34 to 538x481 srcSize:64x18 \nmemblt 1 : 599 from 0x0 size: 64x16 to 366x653 srcSize:32x30 \nmemblt 1 : 599 from 0x0 size: 64x16 to 686x861 srcSize:32x30 \nmemblt 1 : 599 from 0x0 size: 64x13 to 686x877 srcSize:32x30\ncan't say that all these caused a \"visual defect\", but some did.\nMy best \"testcase\" is using tortoise SVN diff. scrolling up and down a few times, select text with yellow bg, and then most of the time the problem is visible.\nUnfortunately I don't know where to start to look for the cause, the cache update code looks correct, and the memblt as well.\nOne thought tho.. could it be a pointer that gets stuck, giving that a update of one cache, also updates others with different ids?\n(This is just thoughts from my limited understanding of the code)\n. If you get a instance/session showing the problem then it seems that you get it again (even on disconnect - connect as long as it is the same server session/logon, still having ID 599 on most of my errors).\nYes scrolling is one thing that causes this, also saw it today when scrolling in acrobat reader. (probably more likely to happen when using the scroll wheel and going up/down guickly)\nMost of the time (in tortoisemerge), the defective part comes from where the mouse pointer was when the scrolling occurred.\nHave you tried my debug code above, maybe it will give you something even if it is not visible on screen?\n(Trying to a find a easy way to reproduce from start)\n. Tested with my normal tests and it now works as expected, also tested the \"old\" code and see the problem almost immediately with the same tests\nAlso did some extra \"599 tests\" so quite sure its fixed.\nNice work, and Thanks Anthony!\n. Dont know if this is the same or different issue:\n~/FreeRDP-1.0 $ gdb client/X11/xfreerdp\n...\n(gdb) r -u Christian -g workarea -a 32 --plugin channels/rdpsnd/rdpsnd.so --plugin channels/cliprdr/cliprdr.so -D 192.168.2.172\n...\nDBG_CLIPRDR cliprdr_process_receive (204): msgType: CB_MONITOR_READY (1), msgFlags: 0 dataLen: 0\nDBG_CLIPRDR cliprdr_send_clip_caps (167): Sending Capabilities\nDBG_CLIPRDR cliprdr_process_format_list_event (46): Sending Clipboard Format List\nxrealloc: null pointer given\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7fffed465700 (LWP 26596)]\n0x00007ffff5065b9a in memset () from /lib64/libc.so.6\n(gdb) where\n0  0x00007ffff5065b9a in memset () from /lib64/libc.so.6\n1  0x00007ffff691e72c in stream_extend (stream=0x7260c0, request_size=6) at /home/nixze/FreeRDP-1.0/libfreerdp-utils/stream.c:69\n2  0x00007fffedc684b5 in cliprdr_process_format_list_event (cliprdr=0x6c7fe0, cb_event=0x7fffe4023720) at /home/nixze/FreeRDP-1.0/channels/cliprdr/cliprdr_format.c:84\n3  0x00007fffedc69b08 in cliprdr_process_event (plugin=0x6c7fe0, event=0x7fffe4023720) at /home/nixze/FreeRDP-1.0/channels/cliprdr/cliprdr_main.c:245\n4  0x00007ffff691ee7b in svc_plugin_process_data_in (plugin=0x6c7fe0) at /home/nixze/FreeRDP-1.0/libfreerdp-utils/svc_plugin.c:242\n5  0x00007ffff691efa7 in svc_plugin_thread_func (arg=0x6c7fe0) at /home/nixze/FreeRDP-1.0/libfreerdp-utils/svc_plugin.c:269\n6  0x00007ffff5352c1a in start_thread () from /lib64/libpthread.so.0\n7  0x00007ffff50b828d in clone () from /lib64/libc.so.6\nafter that as expected we do not crash if we run without --plugin channels/cliprdr/cliprdr.so\nWhen talking about cliprdr i might also add that I've noticed that befores this sometimes rdpclip needs to be killed and restarted to get the clipboard to work after copying text from firefox on the client side.\n. Thanks! still having the problem with rdpclip needing a restart looks like outlook 2010 is involved... will try to get some more data and create a new issue for that.\n. got this segfault today when pasting some data... seems like the data is pasted and then it segfaults.\nShuld it be a separate issue?\n* glibc detected * /home/nixze/FreeRDP/client/X11/xfreerdp: double free or corruption (fasttop): 0x0000000002216470 ***\n(no debugging symbols found)\n======= Backtrace: =========\n/lib64/libc.so.6(+0x760d5)[0x7f61eb6de0d5]\n/lib64/libc.so.6(cfree+0x6c)[0x7f61eb6e2f4c]\nchannels/cliprdr/cliprdr.so(cliprdr_process_format_list+0x1b6)[0x7f61e42ec896]\nchannels/cliprdr/cliprdr.so(+0x1f9e)[0x7f61e42ecf9e]\n/home/nixze/FreeRDP/libfreerdp-utils/libfreerdp-utils.so.1.0(+0x90ec)[0x7f61ecf8f0ec]\n/lib64/libpthread.so.0(+0x7b2a)[0x7f61eb9d5b2a]\n/lib64/libc.so.6(clone+0x6d)[0x7f61eb73d03d]\n. yes running 0c7703d2931a00.... very latest did a additional git pull and no changes.\ncommented out the \nif (format_name->length > 0)\n    xfree(format_name->name)\naround line 281 in channels/cliprdr/cliprdr_format.c\nand no crash at least.\nThe logic seams doubled? can the last for loop not be removed?\n. Code in cliprdr_process_format_list\nAnd comments if i read the code correctly.\n``` c++\nfor (i = 0; i < cliprdr->num_format_names; i++)\n{\n  //...\n  //switch\n  if (format_name->length > 0)\n    xfree(format_name->name);\n}\nif (cliprdr->format_names != NULL) //even this if is redundant according to other commits?\n{\n  /*for (i = 0; i < cliprdr->num_format_names; i++)\n  {\n    format_name = &cliprdr->format_names[i];\nif (format_name->length > 0)\n  xfree(format_name->name); //this is already (always?) done above so this loop is the problem.\n\n}*/\nxfree(cliprdr->format_names);\n  cliprdr->format_names = NULL;\n}\n```\n. Same as rest of Issue #387\n. f7a71079dd3f96 is the one where the colors is wrong for --gdi hw, still works with --gdi sw\nSetting settings->order_support[NEG_POLYGON_SC_INDEX] = false\nStill calls polygon_sc so both SC and CB needs to be false for it to work.\nI see no calls to CB only SC but changing the freerdp_color_convert_rgb to bgr makes no difference\nalso 36dab06a92 With the order_support for CB & SC poly disabled and the colors are correct.\nNow i found a fix for me freerdp_color_convert_var is needed, however I'm unsure in what places.\n. Ah, true, didn't even think about it not being nulled.\nThanks, Keep up the good work!\n. FreeRDP currently uses xinerama extensions to detect the monitor setup and informs the server about the boundaries. but for it to be used you need to use -f or -g workarea.\n(I recommend using -D as well)\nPersonaly i did some changes to the code and added special handling for doing what i want with -g\nWould be nice if we got some way of specifying the monitor setup on the commandline.\n. I might have been wrong about -g workarea at least in current git. I posted a patch in #728 that might be interesting to try and find the culpit if it still does not work?\n@abatkin do you still have problems (in current git) without using --no-nla? My connections where i use xinerama are all with NLA, no specific flags for that to work here.\n. Now i see this on more or less every paste.\nIn cliprdr_format.c\n``` c\nvoid cliprdr_process_format_list_response(cliprdrPlugin cliprdr, STREAM s, uint32 dataLen, uint16 msgFlags)\n{\n    / where is this documented? /\nif 0\n```\nChanging to #if 1 and it \"works\" i see 2-3 retries before i get a CB_RESPONSE_OK Line:\nmsgType: CB_FORMAT_LIST_RESPONSE (3), msgFlags: 1 dataLen: 0\nAny known problem with enabling this code, except for the possible loop. And of course where do the problem stem from?\nEdit:\nOh, read my original post again, will try and use this enabled for a few days and see how it works for now.\n. Seen similar problems before with older versions, What version of FreeRDP are you using?\n--gdi hw is the default so need for that? (--gdi sw\nThe latest git version probably works fine without --no-bmp-cache?\n. I saw a artifact problem yesterday with Win 7 as server and -a 32 otherwise \"default\" settings.\nAnd also problems with notepad on 2k3 where text is not updated correctly.\nFor the problem you have with inverted colors. what is the colors depth on the server and client? Also what OS on the server?\n. Can you test what options are needed on the command line for this to happen?\nRemoving --gdi sw or testing with -a 16 or -a 32 maybe even -a 8 instead of -a 15 ?\n. I use -0 to 2k3 quite often and also see the blank screen saver, however I never use --gdi sw\nany specific reason for using --gdi sw? (sw is lagging behind it seems and not tested much since hw is the default?) if you can skip --gdi.\n. So 15 bit is the problem... with --gdi hw (default) I can confirm the color problem. The same issue is visible when Win 7 or Win XP is server as well.\n-a 16 should solve the problem, Is there really any applications out there that does not work with 16 bit?\n. This became quite unrelated to the original issue but documenting it somewhere...\nthere seems to be some calls to freerdp_image_convert with srcBpp 16 when it shuld be 15\nsome more tests, the call from: client/X11/xf_graphics.c   xf_Bitmap_New\nchanging bitmap->bpp to xfi->srcBpp seems to work?\n. The original \"gdi_mem3blt\" issue is probably still there?\nBut I'm unable to reproduce it with  -0 --gdi sw\n. also found.\nhttps://github.com/FreeRDP/FreeRDP/pull/381\nSo this pull request reversed #381 ...\nI don't know about the inner workings and what is the \"right thing\". What i remember for this was that most other functions use xfi->srcBpp ?\nTo be sure it is correct any fix should be tested with -a 8, 15, 16, 24, 32 and making sure the server actually use/support that mode.\nAnd at least to both 2003/xp and 2008/7 servers\nThe -a 15 issue was/is easily seen on the 2003 logon prompt if i remember correctly, probably the same on XP?\n-a 15 should work on any server that supports more, unless it is explicitly denied?\nMaybe i can provide a test server, at least for the logon prompt...\ndid not get context->settings->color_depth to compile (need to look in to that), but added a printf and saw several 15,16 lines when using -a 15 but it ended with 2 16,16 .. so maybe it works but is wrong for only on the first data, needs more testing tho...\nWill try and get some more info.\n. Yes color_depth seems to work..\nhere is the 2 different kind of lines I get when testing with -a 15.\nxfi->srcBpp 15  bitmap->bpp 16 context->settings->color_depth 15 \nxfi->srcBpp 15  bitmap->bpp 15 context->settings->color_depth 15\nThe -a 15 problem is visible on both 2003 and Win 7 if xfi->srcBpp is changed to bitmap->bpp\nFor other depths all values are the same on all rows.\nI started thinking why is bitmap->bpp == 16 when the pixel data is 15 bits? maybe there is other issues that we have not yet seen?\nMy current understanding is to limited to help much more I'm afraid.\n. If i remember correctly it is a limitation of the server? Max screen resolution for RDP is 4096x4096? What OS is it on the RDP server? (i also remember that it is different between say XP/2003 and 7/2008)\nEdit:\nFound information about max res for 2008: http://technet.microsoft.com/en-us/library/cc772472%28v=ws.10%29.aspx\nit is 4096x2048.\n. RemoteApp works with creating a display for the desktop, then only the parts for the visible windows are drawn locally, with separate window handles. But still the whole desktop is there in the background.\nWell yes i agree that it would be better if every window was transfered by itself but that would make the window position hard to handle i guess. (There would be many \"bugs\" in applications). Lets hope Microsoft comes with a update. ;)\nThe RAIL implementation is always moving the Remote window to the same location that it have on the local desktop. (The move is also happening on the server)\nIf you use a composition window manager this is visible when you view a thumbnail of a window that is covered by another window. Or when you start to move a window that is covering another, than that part still covers the window until the move have gone in to effect on the server. (All windows involved in this needs to be remote)\nThis is also the reason why I still do not use RAIL. Tried it recently and the bugs with KDE 4 and \"Compiz\" are quite horrible at times. Making it unusable for me. I'm thinking of creating a Windows Application that clearly shows these issues so that it can easily be debugged and fixed. (And i also got the cutoff black part windows, because of the patch i posted in #728)\nTo try and answer your last question, What i can see: No, Microsoft needs to come with an update, or we might try to use some kind of way to put all windows so that they do not cover each other on the server and then just put them where the user wants locally, but that will cause some bugs. (I develop one application on windows that uses a window on a window in it's GUI and there are many others where dropdowns are used with this approach.)\n. Some windows are drawn on top of existing windows because they can be outside the main window. Dropdown boxes and menus are examples of these.\nif you have the File menu item then you want the File Menu to appear below the item, but it might be many items, and that might end up outside the main window.\nThere are also times where windows are docked to each other and similar things.\nThe position of a window is used quite heavily in many GUI applications.\n. Hmm, looking at the code right now the first suggestion i will make should not make any difference but here it goes: have you tried using -g workarea?\nI made a dirty hack to make sure i get the res that i want on my monitors, note that my res is hard coded for it to take effect, but the debug output might be interesting for this issue.\n``` C\ndiff --git a/client/X11/xf_monitor.c b/client/X11/xf_monitor.c\nindex 14ce09a..cdfc1fa 100644\n--- a/client/X11/xf_monitor.c\n+++ b/client/X11/xf_monitor.c\n@@ -86,6 +86,14 @@ boolean xf_detect_monitors(xfInfo xfi, rdpSettings settings)\n        vscreen->monitors = xzalloc(sizeof(MONITOR_INFO) * vscreen->nmonitors);\n\n\nprintf(\"screens: %i %ix%i\\n\", vscreen->nmonitors, settings->width, settings->height);\nif (settings->workarea && vscreen->nmonitors==2 && settings->width==3600 && settings->height==1177)\n{\nsettings->width = 2800 + 320;\nsettings->height = xfi->workArea.height;\nprintf(\"screens: %i %ix%i\\n\", vscreen->nmonitors, settings->width, settings->height);\n}\n+\n            if (vscreen->nmonitors)\n            {\n                for (i = 0; i < vscreen->nmonitors; i++)\n@@ -94,10 +102,21 @@ boolean xf_detect_monitors(xfInfo xfi, rdpSettings settings)\n                    vscreen->monitors[i].area.top = screen_info[i].y_org;\n                    vscreen->monitors[i].area.right = screen_info[i].x_org + screen_info[i].width - 1;\n                    vscreen->monitors[i].area.bottom = screen_info[i].y_org + screen_info[i].height - 1;\nif (vscreen->monitors[i].area.bottom > settings->height)\nvscreen->monitors[i].area.bottom = settings->height - 1;\nif (vscreen->monitors[i].area.right > settings->width)\nvscreen->monitors[i].area.right = settings->width - 1;            if ((screen_info[i].x_org == 0) && (screen_info[i].y_org == 0))\n                vscreen->monitors[i].primary = true;\n\n+\n+                   printf(\"screen: %i %ix%i+%i+%i %i\\n\", i, screen_info[i].width, screen_info[i].height, \n+                       screen_info[i].x_org, screen_info[i].y_org, vscreen->monitors[i].primary);\n+                   printf(\"screen: %i %ix%ix%ix%i %i\\n\", i, vscreen->monitors[i].area.left, vscreen->monitors[i].area.top,\n+                       vscreen->monitors[i].area.right, vscreen->monitors[i].area.bottom, vscreen->monitors[i].primary);\n            }\n+               settings->width = 0;\n+               settings->height = 0;\n        }\n    XFree(screen_info);\n\n```\n. Is RemoteApp enabled on the server?\nA guide to some registery settings that you might want to change if you have not done so already: http://geekswithblogs.net/twickers/archive/2009/12/18/137048.aspx\n\n\nAnd then the wiki on RemoteApp https://github.com/FreeRDP/FreeRDP/wiki/RemoteApp\n\nThere is currently an issue where the usage of the colon \u2018:\u2019 conflicts with the \u2014data argument separator, so paths like \u201cC:\\Windows\\System32\\cmd.exe\u201d won\u2019t work.\n\nWhat changes have you made on the server to allow RemoteApp so far, and what Version of Windows is it on the Server?\n. ",
    "tpabst": "Marc-Andr\u00e9 Moreau wrote it on mailing list, so I test it and it works. \n1) dfreerdp does not support RemoteApp\n2) --app turns on RemoteApp flags. The closing -- is needed when passing --data arguments for a plugin.\n3) even if RemoteApp was supported in dfreerdp, you'd need to load the rail plugin with the proper --data options, something like: --plugin rail --data \"||cmd\" --\nIf you use --app without loading the plugin, if you use the closing -- when unexpected, it should not work\n. ",
    "michelepetrazzo": "Deleted the ~/.freerdp/known_hosts it works, thanks!\nCan you just modify the wiki or add a warning message on the output of the command so the users can do them their self?\n. @awakecoding no, I don't want to login automatically and xfreerdp doesn't ask me for the password. \nThe same command on win2k8 server has different behaviour: it correctly wait on windows login form for my action; in this case it try a \"autologin\".\n. @awakecoding it works, thanks\n. @awakecoding server tried 2k8 and 2k3, same behaviour.\nOther strange thing it's that, like you can see, xfreerdp ask me for the passwd on 2k8, but no on the 2k3\n./client/X11/xfreerdp -f -d DOMAIN -u user  win2k8-server\nDBG_NEGO nego_enable_rdp (621): Enabling RDP security: true\nDBG_NEGO nego_enable_nla (645): Enabling NLA security: true\nDBG_NEGO nego_enable_tls (632): Enabling TLS security: true\nDBG_NEGO nego_connect (69): state: NEGO_STATE_NLA\nDBG_NEGO nego_attempt_nla (147): Attempting NLA security\nconnected to win2k8-server:3389\nDBG_NEGO nego_process_negotiation_response (464): RDP_NEG_RSP\nDBG_NEGO nego_connect (82): Negotiated NLA security\nPassword: \nCache Bitmap V2 (Compressed) Secondary Drawing Order (0x05)\nMemBlt Primary Drawing Order (0x0D)\nOpaqueRect Primary Drawing Order (0x0A)\nOpaqueRect Primary Drawing Order (0x0A)\nCache Bitmap V2 (Compressed) Secondary Drawing Order (0x05)\nMemBlt Primary Drawing Order (0x0D)\nCache Bitmap V2 (Compressed) Secondary Drawing Order (0x05)\nMemBlt Primary Drawing Order (0x0D)\nOpaqueRect Primary Drawing Order (0x0A)\n^[ -> wait about 20 seconds with the black screen and ctrl+c pressed\nFailed to check xfreerdp file descriptor\n./client/X11/xfreerdp -f -d DOMAIN -u user  win2k3-server\nDBG_NEGO nego_enable_rdp (621): Enabling RDP security: true\nDBG_NEGO nego_enable_nla (645): Enabling NLA security: true\nDBG_NEGO nego_enable_tls (632): Enabling TLS security: true\nDBG_NEGO nego_connect (69): state: NEGO_STATE_NLA\nDBG_NEGO nego_attempt_nla (147): Attempting NLA security\nconnected to win2k3-server:3389\nDBG_NEGO nego_process_negotiation_failure (485): RDP_NEG_FAILURE\nDBG_NEGO nego_process_negotiation_failure (497): Error: SSL_NOT_ALLOWED_BY_SERVER\nDBG_NEGO nego_connect (69): state: NEGO_STATE_TLS\nDBG_NEGO nego_attempt_tls (189): Attempting TLS security\nconnected to win2k3-server:3389\nDBG_NEGO nego_process_negotiation_failure (485): RDP_NEG_FAILURE\nDBG_NEGO nego_process_negotiation_failure (497): Error: SSL_NOT_ALLOWED_BY_SERVER\nDBG_NEGO nego_connect (69): state: NEGO_STATE_RDP\nDBG_NEGO nego_attempt_rdp (229): Attempting RDP security\nconnected to win2k3-server:3389\nDBG_NEGO nego_connect (82): Negotiated RDP security\nOpaqueRect Primary Drawing Order (0x0A)\nOpaqueRect Primary Drawing Order (0x0A)\nOpaqueRect Primary Drawing Order (0x0A)\nOpaqueRect Primary Drawing Order (0x0A)\nOpaqueRect Primary Drawing Order (0x0A)\n^[ -> wait about 20 seconds with the black screen and ctrl+c pressed\nFailed to check xfreerdp file descriptor\n. now seam to work but not \"out of the box\":\nwhen I launch the command, I see always no window and only the icon on the task bar, but... if I right-click on the new icon -> maximize and my program appears\nI tried also using with the -g switch, it's the same.\nJust a note about using it. It works but, for example, if I open a file with word, when I select it on the open-file window, the freerdp window disappear and I have to do another time right-click on the new icon -> maximize\nCan be that the word program, in this case, do a \"strange\" command that freerdp not recognize? \n. tried, but it stop works:\nmichele@server:/home/devel/FreeRDP$ ./client/X11/xfreerdp -f -d domain -u user --app --plugin channels/rdpdr/rdpdr.so --data channels/rdpdr/disk/disk.so:Z:$HOME -- serverip\nloading plugin channels/rdpdr/rdpdr.so\nconnected to serverip:3389\nPassword: \nregistered device #1: Z (type=8 id=1)\n^C\nand no windows. I must ctrl+c for return on the shell.\ncan I try to debug? which flag?\nthanks\n. Thanks,\njust tried but --ignore-certifcate don't works.\nxfreerdp accept but not honors it.\nThanks\n. Sorry for the typo.\nI set the --ignore-certificate, but xfreerdp continue to show me the certificate error and close the connection.\nmichele@miclin:~$ xfreerdp --ignore-certificate -d domain -u administrator localhost\nconnected to localhost:3389\nPassword: \nThe host key for localhost has changed\n<-cut->\nmichele@miclin:~$ echo $?\n131\n. ",
    "jbonor": "I have the same problem on my kde 4.7.2 desktop.\n. Hi, it works for me fine with today git pull, but there's an annoying splash screen due to the changes from commit cf3c03c60e.\n. El 16/01/12 19:53, Dorian Johnson escribi\u00f3:\n\nA screen cap shows nothing wrong, but it's garbled onscreen?\n\nYes.\n\nIf you leave the bitmap cache enabled, but use --gdi sw, does it\n change anything?\n\nNo, I forgot to mention that \"--gdi sw\" fails too.\n. Le 17/01/2012 21:23, Christian Nilsson a \u00e9crit :\n\nAlso seen this issue.\njbonor: The screen cap you took was it server side? The rendering is probably only wrong on the client side.\nNo, i did it on the client side, kde 4.7.4.\nDid a capture with gimp that shows the problem: http://nikize.se/FreeRDP%20Bitmapp%20err.png\nThe same kind of problem as me.\nThis is with TortoiseSVN and the diff utility, selecting the colored line and then selecting another shows this.\nWhen some other line is selected this \"corruption\" is updated and showing something else.\nWhen selecting the line that is showing the problem, the problem disappears. but changing line it reapers.\nThe corruption itself in this case most of the time have data from somewhere around the mouse cursor, especially if text is selected.\nAlso seen corruption for example icons sometimes in a MessageBox is from different parts. the taskmgr taskbar icon is something I remember to often appear in this context.\nnever seen that.\nHope this helps, tell me if there is anything I can do to help debug this.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/348#issuecomment-3535042\n. El 16/03/12 19:10, Anthony escribi\u00f3:\nI have seen this also in a pre-1.0.1 build. Is this bug still occuring in the current git?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/348#issuecomment-4545087\n  Yes it is.\n. \n",
    "ronalde": "Using 36dab06a926c1a7e5cc9995c76d34588580db965 on a freenx session on Ubuntu 10.04.4 connecting to a Windows 2008 r2 remote app.  \nRelated issues that remain are:\n- windows start hidden (only an item on the Ubuntu taskbar)\n- when selecting \"maximize\" from the right mouse menu on the taskbar item the window gets bigger although the title bar of the windows application indicates it's actually not maximized\n- when maximizing by pressing the maximize button in the title bar of the windows; the taskbar item indicates it is in non-maximized state\n- sometimes the window is resized to a very small window; approximately the height of the windows application title bar and 100px wide\n. (comment removed, my issue is described in #267).\n. ",
    "kkoh": "thanks.!!\ni'm compile options : \ncmake -DCMAKE_BUILD_TYPE=Debug -DWITH_SSE2=ON .\ncompile OK.., but, runtime connection error...\n. thanks.. you're interested..!!\nI'm getting the same output, connecting to a Win2k8 R2 server(Win2k3, Win7).\nbut, URL : https://github.com/downloads/FreeRDP/FreeRDP/FreeRDP-1.0-beta1.tar.gz\ncompile OK.. and connect success.. !!\nwhat's problem..!!! hmm,...\n. Thank you very much..!!\n. When you run cmake I error occurs.\nwinpr / libwinpr / CMakeLists.txt file fly an error on line 45~58.\nError seems to be, can not find a list of the form $ .\nMy development environment is ubuntu 10.04.\nAnd, in ubuntu 12.04, the same error occurs.\nHow to solve?\n. ",
    "MarcusMoeller": "Screenshot showing notepad:\nhttp://marcusmoeller.ch/share/notepad_screenshot.png\n. verified: fixed in #301 as suggested.\n. http://marcusmoeller.ch/share/gray_borders.png\n. Ah, that's exactly what it was. Thanks for the hint.\n. segfault is no longer recorded, but it still does not work.\n. ",
    "rafcabezas": "Just opened a new issue to track similar problems with the Release Preview (https://github.com/FreeRDP/FreeRDP/issues/660).\n. No special arguments. But I've been using the directfb client implementation. This is where I believe the problem resides. If I use the x11 client, it connects correctly. \n. Figured out the problem: For some reason, not doing:\ninstance->context->cache = cache_new(instance->settings);\nin pre_connect causes this problem. Even though the cache is created in gdi_init.\n. Please see https://github.com/FreeRDP/FreeRDP/pull/695\n. ",
    "absmall": "Yeah, I tried two other versions at random, 1.4.102, which didn't work at all with or without this fix, and 1.7.2 which also had the crash before, and was fixed with this change. I hadn't used FreeRDP in half a year before today, so I don't know what the latest version was that used to not crash for me.\n. ",
    "jsorg71": "This is a patblt issue.  Openoffice and libreoffice make extensive use of patblt with the brush cache.  It is a bit trick to get working right.  This is on my list to look at.\n. @ygch @awakecoding  I think video redirection may be the difference.  What player are you using.  Compare using VLC so you know that video redirection is off.  If video redirection is the difference, you can turn this in on freerdp.\n. I think I have resolved this problem.\n. try without the -z\nThe graphical artifacts and the disconnect are related I think.\nWhat FreeRDP version?\n. In my experience, it's better to thread the decoding.  Since the server put 2 frames in flight, create 2 worker threads to decode and use the event based system that the channels already use to tell the main thread to draw the decoded frames.\nI would not like to see a separate thread running in libfreerdp-core.\n. A8 is working on clipboard and rail currently.\n. ",
    "mrpink37": "Experiencing the same on Ubuntu 11.04 client using FreeRDP v1.\n. ",
    "joerg": "Well, I am willing to help, but I do not know my way around with Eclipse, CMake and whatever you use for man pages. I think I got some spare time tomorrow which I will use to write some user documentation in the wiki.\n. Just tested and it is working fine. Thanks for the quick response.\n. I have to reopen this since I found some more keyboard issues and I would guess that this is related to this issue.\nNumpad is working fine, but other keys don't work at all. What I found not working so far are these:\n- Cursor Keys\n- Block above cursor keys (Insert, del, end, pos1, pgup, pgdown)\n- Print Screen, Scroll Lock, Pause/Break\n- All \"ALT Gr\" keys, espacially @,\u20ac and | are troublesome to be missing.\nThese Alt Gr keys do work when using STRG+ALT. Many keyboards don't have  the \"Alt Gr\", but it is actually quite important: http://en.wikipedia.org/wiki/AltGr_key\n. Sorry, the flu stuck me down for a week.\nIt is working now. I had a look at the commit log the last time but didn't see your changes. Thanks a log.\n. ",
    "Potomac": "same problem with the 1.0 version of freerdp: inverse behaviour about the num lock key,\nthe remote server is windows server 2008, I can reproduce the bug with virtualbox ( arch linux ) and a linux installation on a PC\n. ",
    "roms2000": "Same problem here : connection to a Windows Server 2003 with latest git version\nI would add that if I connect with num lock on or off, and I press the Caps Lock, the num lock status is re-inverted.\n. ",
    "tgulacsi": "The main symptom is Xorg process eating up 50% CPU during typing in the freerdp window.\nSo I changed from nouveau to nvidia, and everything works as expected!\nSorry for the noise.\n. +1\n. Just out of curiosity, I've tried to read that: it's chunked, clumsy, and says nowhere nothing specific about the real binary blobs it uses. So I thing it does not provide the details.\n. ",
    "maelnor": "xfreerdp also crashes with cliprdp plugin when trying to use remote control \n. ",
    "wfragakis": "Using  --ntlm 2  option resolved issue. Thanks for updating man page, otherwise, never would have had a clue about this option or other possible solutions.\n. ",
    "bakytn": "This is probably invalid issue since I was not using --data parameter\nSorry\n. I just tested using mstsc (Windows XP)\nthere is a small delay but not as long as with xfreerdp (about a second)\nTested with Media Player too - the same\n. btw, the same thing when changing it's volume, jumping from moment to moment. So, not only pause/unpause\n. I am closing this issue since there was an undocumented feature added by Vic Lee called latency for alsa plugin which fixes this.\n. I was totally wrong. In order to use two plugins one should seperate them with \"--\"\nso my command was wrong.\nit should be\nxfreerdp -f --no-tls --no-nla --plugin drdynvc --data tsmf -- --plugin rdpsnd --data pulse -- 192.168.1.16\n. It was --no-motion (latest commit fixed this). Man page is just updated\n. fxied in #422\n. and program crashes! It may show the Windows but should you try to invoke any sound it would crash.\n. atong, yes that what I did. I mean, yes it worked with this workaround.\n. closing this for now, as I don't have ability to check\n. sorry. added by mistake.\n. I am having this issue too when trying to connect  to Windows 2008 Server R2\nxfreerdp --app --plugin rail --data \"||Calculator\" -- 192.168.1.123\n. using the latest GIT revision. seems to be working fine (just tested with Windows XP SP3 32 bit server)\nclosing this.\n. fixed on latest revisions (sorry)\n. This is happening again! Help me debug it for better. What kind of information is needed?\n. Event log is showing: TermDD Event ID: 50 \"The RDP protocol component \"DATA ENCRYPTION\" detected an error in the protocol stream and has disconnected the client.\"\nsometimes it's happening when just opening redirected folder (i.e without any file copy/paste operations)\n. closing this issue to open more detailed one issue with all errors log\n. It's a Windows XP SP3 32bit English version.\nAlright, let me explain it again in more detail.\n1. You connect to Windows XP SP3 32bit English version with xfreerdp without using -f key (i.e not in fullscreen mode)\n2. You make a normal selection with mouse (left mouse click), say from center of desktop till the edge of the xfreerdp window\n3. You then try to go outside of that xfreerdp window with your mouse\n4. YOu see that the selection rectangle doesn't stick on the edge but quickly goes to the other edge\n. just tested again. and it's working fine Oo\n. Interestingly it doesn't happen always. Sometimes it happens just when you try to open the redirected folder.\nSometimes when you try to copy/paste a file.\nI once get this too:\nloading plugin rdpdr\nWarning xf_GetWindowProperty (140): Property 340 does not exist\nconnected to 10.0.1.76:3389\nregistered device #1: FLASH (type=8 id=1)\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp_read (223): seek /mnt//DISK-sdb1(89) failed.\n...\nWarning disk_process_irp_read (223): seek /mnt//DISK-sdb1(172) failed.\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\n.. (20 times)\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nPolygonSC\n.. 130 times\nPolygonSC\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nWarning disk_process_irp (538): MajorFunction 0x11 not supported\nsend: Connection reset by peer\nFailed to check FreeRDP file descriptor\n. rdesktop 1.7.0, freerdp 0.8.2 are working fine\n. Also I think it mostly happens when it's trying to create a thumbnail from the media files.\nif there are no media file, the crash, seems like not happening.\n. Paranoja, you are right! This mostly happens when you just move the mouse or try drag the window.\nMy Firewall is Turned off completely and it's all on LAN (no WAN)\nCan you please tell me your hardware?\natong, can't check right now\nAnd also this bug is appearing in Windows XP Sp3 32 Bit and Windows Ultimate 32 Bit\nmy client is ubuntu 11.10 32 bit\n. BTW I played with server side Politics. Tried to delete Certificate and other settings, making FIPS enabled/disabled - the same issue.\n. Paranoja, ok I think it's 100% FreeRDP related and not our systems related. Thanks!\nis this issue is occurring all the time for you? and can you confirm that with --no-fastpath it's has not been crashed so far?\n. Paranoja, do you have redirected disk? is it working fine without crashes?\n. I am unable to test since I have changed my environment where this bug appeared. I will close this for now. \nIf Paranoja can confirms that this has not been fixed he either let me know (if he can't reopen by himself) or just create another issue. \n. Can't reproduce with Windows XP SP3 32 bit. (not sure about Windows 2003 Server). Which command are you using? And which version of FreeRDP?\n. closing for now. (not using as intensive as before, but issue hasn't occurred to me last times)\n. is your bug is showing as described?\n. May be it's firewall related? Howerver when I was facing this problem Firewalls were disabled.\n. Does this patch improves the quality of the sound? :D (just kidding)\n. sorry\n. Is this issue is closed?\n. ",
    "jawa-the-hutt": "First:  your comment above made me realize I was running the Thin Client at 16bit on the ThinPro side.  Changing that to 32bit fixed the issue such that I don't even have to add the --gdi switch now.  Therefore, the issue is fixed from a usability standpoint for my end users.\nThat being said, when running the ThinPro OS at 16bit, '--gdi hw' was like not using the '--gdi' switch at all...the color scheme was completely as the first screenshot shows in the link above.  \nOne thing I didn't mention in my original post is that when I don't use the '--gdi sw' switch, the login screen looks like the first screenshot in the link above.  What is interesting, if I didn't use the '--gdi sw' switch but added '--no-bmp-cache' then the login screen was normal, but the desktop looked like the first screenshot in the link above.\nWhile using '--gdi sw' I tried the '-a 16' and the '-a 32' switches and neither one of them made a difference.  I also tried '--no-osb', '--no-bmp-cache' as well as disabling theming, wallpaper, etc.  They all exhibited the same problem.  Not sure overall if this is a bug or not.  I'm willing to test things out if you think you have an idea, but if it's not something you want to spend time on, then that's fine with me since I have a working solultion now if I run the ThinPro OS at 32bit.\n. ",
    "jbicha": "Never mind. You're exactly correct. Thanks!\n. ",
    "yoonzh": "Please see my code\nhttps://gist.github.com/1749133\nCMakeList.txt : 84\ncore-listner.x : 39 ~ 91\n. I don't tested remote-rfx yet.\n. ",
    "michaelweiser": "Hi guys,\nI'm facing the same problem as michele. I have a patch that allows me to override the host name used for the known hosts file. So even though I'm connecting to localhost I can tell xfreerdp to look for another hostname in known_hosts. I'd really like to get this committed. I already wrote a message to the sourceforge mailing list but never heard anything of it. Since I can't seem to attach it here, I'll give the sourceforge mailing list another go.\nThanks,\nMicha\n. Hi Marc-Andre,\nHi Sergey,\nOn Sat, Feb 25, 2012 at 11:52:08AM -0800, Marc-Andr? Moreau wrote:\n\n@michaelweiser I've added an option \"--certificate-name\" which allows\nto override the name used for certificate verification. was your patch\ndoing the same?\n\nYep, does exactly the same as my patch on\nhttp://sourceforge.net/mailarchive/forum.php?thread_name=20120225185807.GA12806%40science-computing.de&forum_name=freerdp-devel.\nThanks!\nI was looking for something like that in the xfreerdp command line usage\n(--help) and wouldn't have nagged if it had appeared there. Perhaps it\nshould be documented there as well?\nOn Sun, Feb 26, 2012 at 12:36:51AM -0800, Sergey Vlasov wrote:\n\nA workaround for this problem is to bind the forwarding socket to a\nseparate IP address in the 127.0.0.0/8 network -- e.g., use -L\n127.0.1.1:3389:localhost:3389 for one host, -L\n127.0.1.2:3389:localhost:3389 for another. You can even put those\naddresses in /etc/hosts and connect to them by name -- this way even\nthe TLS host name check could pass.\n\nThis does not work well with ssh on my Mac:\nmichael@mac:~ # ssh -L127.0.1.1:2222:localhost:22 server\nbind: Can't assign requested address\nchannel_setup_fwd_listener: cannot listen to port: 2222\nCould not request local forwarding.\n[michael@server:~] \nI have to add the IP to lo0 as root manually to make it work:\nroot@mac:~ $ ifconfig lo0 add 127.0.1.1\nThe /etc/hosts part also only works if you can be root on your machine\nand will cause serious confusion every time you're in a position to\nreach the machine directly.\nThanks,\nMicha\n. ",
    "sigprof": "A workaround for this problem is to bind the forwarding socket to a separate IP address in the 127.0.0.0/8 network\u00a0\u2014 e.g., use -L 127.0.1.1:3389:localhost:3389 for one host, -L 127.0.1.2:3389:localhost:3389 for another. You can even put those addresses in /etc/hosts and connect to them by name \u2014 this way even the TLS host name check could pass.\n. ",
    "matsimon": "Seems to have come up with \nbash\n005ffa0bb078d39cbc58bccb5787cf9dc2cfab39 wfreerdp: fix mingw64 cross-compilation\n. I should add: Occuring on \n- Ubuntu 11.04 amd64\n- using release 1.0.0 as well as master as of 26th Jan. 2012 (Merge pull request #371 from bmiklautz/osxdisableffmpeg)\nHere is how cmake configured the build:\ncmake -DCMAKE_BUILD_TYPE=Debug -DWITH_SSE2=ON .\n-- FreeRDP GIT\n-- Skipping optional package PulseAudio.\n--   Enable this using \"-DWITH_PULSEAUDIO=ON\".\n-- Skipping optional package PCSC.\n--   Enable this using \"-DWITH_PCSC=ON\".\n-- Finding suggested package Cups.\n--   Disable this using \"-DWITH_CUPS=OFF\".\n-- Found Cups: /usr/lib/libcups.so\n-- Finding suggested package FFmpeg.\n--   Disable this using \"-DWITH_FFMPEG=OFF\".\n-- Finding suggested package ALSA.\n--   Disable this using \"-DWITH_ALSA=OFF\".\n-- Skipping optional package CUnit.\n--   Enable this using \"-DWITH_CUNIT=ON\".\n-- Finding suggested package X11.\n--   Disable this using \"-DWITH_X11=OFF\".\n-- Finding suggested package XKBFile.\n--   Disable this using \"-DWITH_XKBFILE=OFF\".\n-- Finding suggested package X11.\n--   Disable this using \"-DWITH_X11=OFF\".\n-- Found XMLTO: /usr/bin/xmlto\n-- Finding suggested package Xinerama.\n--   Disable this using \"-DWITH_XINERAMA=OFF\".\n-- Finding suggested package Xext.\n--   Disable this using \"-DWITH_XEXT=OFF\".\n-- Finding suggested package Xcursor.\n--   Disable this using \"-DWITH_XCURSOR=OFF\".\n-- Finding suggested package Xv.\n--   Disable this using \"-DWITH_XV=OFF\".\n-- Skipping optional package DirectFB.\n--   Enable this using \"-DWITH_DIRECTFB=ON\".\n-- Configuring done\n-- Generating done\n. Thanks for the reminder, and excuses for not reporting back by now, I just verified by building according version under Ubuntu 12.04 amd64:\n- 1.0 -> Fails as described\n- 1.0.1 -> works\n- Master head 41652a729ce56af0fa5938cf4a897a9e4fe151b6 -> works\n. Also applies also to OS X 10.7.3.\nWhat is intriguin me is that _wcsdup is only found in libfreerdp-utils/memory.c in a ifdef _WIN32 statement (?!):\n[...]\nifdef _WIN32\n    mem = _wcsdup(wstr);\n\nelse\n    mem = wcsdup(wstr);\n\nendif\nEven if wcsdup would be used, it is not in OS X because it is not considered part of the standard language.\nSee: http://lists.apple.com/archives/objc-language/2008/Mar/msg00031.html\n. I'll check in front of a Lion-based MB soon but it seems the line in question that contained _wcsdup has disappeared with Fix Solaris 10 compilation issues.\nThe change in memory.c is commented by: \"memory.c  wide-string copy function on Solaris 10 is 'wsdup' \"\nInteresting... both Unices are quite POSIX compliant.\nSomeone with Windows though should check back this didn't break compiling on Windows anyhow before closing this issue.\n. I was able to check back with the following system:\n``` bash\n$ uname -a\nDarwin mbwhite.home 11.3.0 Darwin Kernel Version 11.3.0: Thu Jan 12 18:47:41 \nPST 2012; root:xnu-1699.24.23~1/RELEASE_X86_64 x86_64\n$ cc --version\ni686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) \n(LLVM build 2336.1.00)\n\n```\nGood news: From my perspective the issue can also be marked as resolved. \nBut: Is there an issue with the clean section in FreeRDP's (c)make stuff?\nIt doesn't have anything to do with the late changes in memory.c: The strange thing is, that although I have issued a \"make clean\" before rebuilding, it still had failed. I had to cleanly clone the git repository and relaunch cmake - then it worked.\n. ",
    "hcgpalm": "Assuming this refers to the -u command line option, I'm noting that I've been using user names with spaces all along without any problems (xfreerdp -> Win7). So more details might be needed.\n. ",
    "wantmoore": "+1 Would LOVE to see this.\n. ",
    "richud": "this is the most vital thing to do as nothing else supports it and all companies are starting to use it !\n. any news ? :)\n. ",
    "adek": "+1\n. ",
    "dupondje": "This would indeed be cool !\n. FYI, awakecoding is working on this :)\n. ",
    "tedkuban": "+1\n. ",
    "skazochnik97": "+1\n. ",
    "Daniel15": "+1, this would be very nice to see :)\n. Nice to hear. Thanks so much, @awakecoding! Terminal Services Gateway is really nice, and being able to connect from Linux would be amazing :)\n. Is it the regular RDP protocol tunneled over HTTPS or is there more to it?\n. @awakecoding Interesting. Glad you're getting close to having something that works. I'm more than happy to beta-test once you've finished a basic version :)\nI did find another Linux application that implements the TS Gateway functionality - iTap RDP (http://itap-mobile.com/desktop/rdp). Unfortunately it's a proprietary application and not a free one. Still, it may help if you need to sniff the protocol some more while on a Linux box. It seems to connect faster than Microsoft's Windows 7 RDP client for some reason.\n. ",
    "taspeotis": "I can imagine reading through the TS Gateway spec is going to be a small project in itself, never mind implementing it!\n+1 for this, hoping to use FreeRDP on Mac to connect via TS Gateway one day.\n. We're talking about http://pubs.opengroup.org/onlinepubs/009629399/ ? I couldn't find a Microsoft specific version.\nThanks for your time so far. \n. ",
    "stkol76": "This is brilliant news.. I am working on a project that is stuck because of the missing TS Gateway feature of FreeRDP.. \n@awakecoding, do you have an approximately ETA on your work? :-) .. Really looking forward to this!!!\n+1 for this!!!!\n. Hi Marc-Andr\u00e9 \nThis is really great news :-) .. Thanks for keeping m\u00e9 updated, I really appriciate that!!\nBest Regards\nStig K\u00f8lb\u00e6k :-)\nDen 06/08/2012 kl. 01.55 skrev \"Marc-Andr\u00e9 Moreau\" reply@reply.github.com:\n\nIf all goes well, I should get started on a contract soon to complete TS Gateway support. In this case, we'd get it in 1-2 months from now.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/386#issuecomment-7514523\n. \n",
    "bluepeach": "I might be able to help.  I have a MSRPC implementation.  It's part of our own product.  Depends how much you need of it.  MSRPC involves named pipes, DCE, etc.  That pretty much means you need a full CIFS implementation, which seems hard to believe.  Is this MSRPC over something other then CIFS?  If so, I could probably get you the code.  If it's over CIFS, that would involve too much of our product to share.\n. It sounds like you're following a more robust direction then I would have been able to provide. \u00a0Our code does not work off of idl files but rather has a set of APIs that allow dynamic argument building and inclusion into a message. \u00a0Along the lines of PushUID, PushInt, PushVString, etc. I like the approach you are using better, but we didn't want to implement something quite so general purpose.\nIf you run into any issues, I can try to help, \u00a0And I'd be more then happy to beta your solution if you need any test help.\nWe currently use iTap, but to be honest, I don't think it's a very stable solution. \u00a0It crashes on us fairly often (once an hour), echos characters (like get's stuck echoing the last character typed 20 or more times) in RDP sessions (very very annoying), and hangs often so we have to force kill it. \u00a0\nLet me know if there's anyway I can help.\nRich\n\u00a0\nRichard Schmitt\nCTO\n857-205-9315\nwww.bluepeach.com\n\nFrom: Marc-Andr\u00e9 Moreau reply@reply.github.com\nTo: bluepeach rschmitt@bluepeach.com \nSent: Thursday, May 3, 2012 10:41 AM\nSubject: Re: [FreeRDP] TS Gateway Support (#386)\n@bluepeach we're lucky, TSG does not require a full CIFS implementation. It's RPC over HTTP, I have already completed NTLM over HTTP authentication and the connection sequence which precedes the MSRPC calls. I'm currently implementing a replacement for the original MSRPC engine contained in rpcrt4.dll, and using code generated with the Microsoft MIDL compiler. The generated code uses format strings which are then passed to generic functions in the engine. The engine then analyzes the format string and does 4 steps: sizing, marshalling, unmarshalling, and freeing. I'm currently going over the sizing phase, and spending a lot of time reading the docs on MSDN and looking at rpcrt4.dll in IDA Pro.\nIf you have source code to contribute, I would definitely take it! If I can't use it as-is, I could still adapt the code to our needs knowing that it's been contributed to us under the Apache license. Please go forward with this, it would be very helpful :D\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/386#issuecomment-5490605\n. ",
    "Nuanda": "+1\n. ",
    "thugcee": "+1\n. ",
    "masepi": "+1\n. ",
    "MatthewVernon": "Is the documentation here http://msdn.microsoft.com/en-us/library/cc248485%28v=prot.10%29 insufficient? I've not looked in detail, but it appears to provide the details needed?\n. ",
    "kenjiru": "This feature would be really useful as most enterprises require users to connect through a TS gateway.\n. That is great news! Please keep us posted about the progress.\nThank you!\n. ",
    "exzemat": "+1\n. ",
    "BUGgs": "+1\n. ",
    "soldatx": "However I had a problem after that updatings with vk_divide, instead of a slash to be put the point in my keyboard layout. If to set a flag extended in 1 that works normally!\n. ",
    "sunweaver": "Dear developers,\nsame problem here. We want to use xfreerdp on a thinclient without window manager installed, so after logout the screen goes blank and we do not get back to our TCE's login manager.\nThis only happens if TSMF has been used during a session. It also happens if the media player window has already been closed and the video stream had been stopped before log out.\nGreets,\nMike\n. ",
    "bosha": "Also tried with --ignore-certificate - the same result.\nFrom windows I can connect, all ok. So, i don't think problem on the server side.\n. Sorry for long response.\nUnfortunately, server configured not by me. I tried to ask my system administrator, but he don't answer me anything.\nCan you tell which exactly settings you need? I tried to ask one more time.\n. Sorry, I can't check. \nI changed job, and gave the eToken.\n. ",
    "ghost": "Okay, thank's for this information.\nThere is another way to be able to hear something through a RDP connection & Freerdp ?\n. Here is a full backtrace in gdb when this occurs. I hope this is more helpful. Again, when xfreerdp attempts to come out of a locked screensaver after 10 minutes, then this segfault occurs.\nuser@host:~$ gdb xfreerdp \nGNU gdb (GDB) 7.2-ubuntu\nCopyright (C) 2010 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later http://gnu.org/licenses/gpl.html\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"i686-linux-gnu\".\nFor bug reporting instructions, please see:\nhttp://www.gnu.org/software/gdb/bugs/...\nReading symbols from /usr/local/bin/xfreerdp...done.\n(gdb) run --plugin rdpdr --data disk:home:/home/user printer:MFCXXXXDN:\"Brother MFC-XXXXDN Printer\" -- -0 -K -u administrator -a 15 -g 1280x960 --gdi sw 10.0.1.207\nStarting program: /usr/local/bin/xfreerdp --plugin rdpdr --data disk:home:/home/user printer:MFCXXXXDN:\"Brother MFC-XXXXDN Printer\" -- -0 -K -u administrator -a 15 -g 1280x960 --gdi sw 10.0.1.207\n[Thread debugging using libthread_db enabled]\n[New Thread 0xb7dc1b70 (LWP 2696)]\nloading plugin rdpdr\nconnected to 10.0.1.207:3389\nconnected to 10.0.1.207:3389\nconnected to 10.0.1.207:3389\n[New Thread 0xb710db70 (LWP 2698)]\n[New Thread 0xb690cb70 (LWP 2699)]\n[New Thread 0xb610bb70 (LWP 2700)]\nregistered device #1: home (type=8 id=1)\nregistered device #2: PRN1 (type=4 id=2)\nincorrect PDU type: 0x6F3D\nincorrect PDU type: 0x6F3D\nincorrect PDU type: 0x6F3D\nincorrect PDU type: 0x6F3D\nincorrect PDU type: 0x6F3D\nincorrect PDU type: 0x6F3D\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0xb7dc1b70 (LWP 2696)]\n0x001a9951 in gdi_mem3blt (context=0x80e28f8, mem3blt=0x80b04f8)\n    at /usr/local/src/FreeRDP/libfreerdp-gdi/gdi.c:649\n649         gdi_BitBlt(gdi->drawing->hdc, mem3blt->nLeftRect, mem3blt->nTopRect,\n(gdb) backtrace\n0  0x001a9951 in gdi_mem3blt (context=0x80e28f8, mem3blt=0x80b04f8)\nat /usr/local/src/FreeRDP/libfreerdp-gdi/gdi.c:649\n\n1  0x003026f9 in update_gdi_mem3blt (context=0x80e28f8, mem3blt=0x80b04f8)\nat /usr/local/src/FreeRDP/libfreerdp-cache/bitmap.c:61\n\n2  0x00179708 in update_recv_primary_order (update=0x80ae278, s=0x81dc798,\nflags=73 'I') at /usr/local/src/FreeRDP/libfreerdp-core/orders.c:1804\n\n3  0x0017a20e in update_recv_order (update=0x80ae278, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/orders.c:2039\n\n4  0x00187386 in fastpath_recv_orders (fastpath=0x80b16e8, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/fastpath.c:132\n\n5  0x00187520 in fastpath_recv_update (fastpath=0x80b16e8,\nupdateCode=0 '\\000', size=1711, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/fastpath.c:176\n\n6  0x001879e7 in fastpath_recv_update_data (fastpath=0x80b16e8, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/fastpath.c:301\n\n7  0x00187a63 in fastpath_recv_updates (fastpath=0x80b16e8, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/fastpath.c:321\n\n8  0x00185651 in rdp_recv_fastpath_pdu (rdp=0x809f9e8, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/rdp.c:797\n\n9  0x001856a0 in rdp_recv_pdu (rdp=0x809f9e8, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/rdp.c:805\n\n10 0x0018583c in rdp_recv_callback (transport=0x80a1dc0, s=0x81dc798,\nextra=0x809f9e8) at /usr/local/src/FreeRDP/libfreerdp-core/rdp.c:865\n\n11 0x00189ece in transport_check_fds (ptransport=0x809fa10)\nat /usr/local/src/FreeRDP/libfreerdp-core/transport.c:451\n\n12 0x00185926 in rdp_check_fds (rdp=0x809f9e8)\nat /usr/local/src/FreeRDP/libfreerdp-core/rdp.c:896\n\n13 0x0017a584 in freerdp_check_fds (instance=0x809f8a0)\nat /usr/local/src/FreeRDP/libfreerdp-core/freerdp.c:145\n\n14 0x0805b953 in xfreerdp_run (instance=0x809f8a0)\nat /usr/local/src/FreeRDP/client/X11/xfreerdp.c:1141\n\n15 0x0805ba5a in thread_func (param=0x80e31b8)\nat /usr/local/src/FreeRDP/client/X11/xfreerdp.c:1180\n\n16 0x0052ecc9 in start_thread () from /lib/libpthread.so.0\n17 0x0061369e in clone () from /lib/libc.so.6\n(gdb) c\nContinuing.\nProgram received signal SIGSEGV, Segmentation fault.\n0x0012e416 in __kernel_vsyscall ()\n(gdb) backtrace\n0  0x0012e416 in __kernel_vsyscall ()\n1  0x00537990 in raise () from /lib/libpthread.so.0\n2  0x001d8b2d in fatal_handler (signum=11)\nat /usr/local/src/FreeRDP/libfreerdp-utils/signal.c:53\n\n3  \n4  0x001a9951 in gdi_mem3blt (context=0x80e28f8, mem3blt=0x80b04f8)\nat /usr/local/src/FreeRDP/libfreerdp-gdi/gdi.c:649\n\n5  0x003026f9 in update_gdi_mem3blt (context=0x80e28f8, mem3blt=0x80b04f8)\nat /usr/local/src/FreeRDP/libfreerdp-cache/bitmap.c:61\n\n6  0x00179708 in update_recv_primary_order (update=0x80ae278, s=0x81dc798,\nflags=73 'I') at /usr/local/src/FreeRDP/libfreerdp-core/orders.c:1804\n\n7  0x0017a20e in update_recv_order (update=0x80ae278, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/orders.c:2039\n\n8  0x00187386 in fastpath_recv_orders (fastpath=0x80b16e8, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/fastpath.c:132\n\n9  0x00187520 in fastpath_recv_update (fastpath=0x80b16e8,\nupdateCode=0 '\\000', size=1711, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/fastpath.c:176\n\n10 0x001879e7 in fastpath_recv_update_data (fastpath=0x80b16e8, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/fastpath.c:301\n\n11 0x00187a63 in fastpath_recv_updates (fastpath=0x80b16e8, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/fastpath.c:321\n\n12 0x00185651 in rdp_recv_fastpath_pdu (rdp=0x809f9e8, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/rdp.c:797\n\n13 0x001856a0 in rdp_recv_pdu (rdp=0x809f9e8, s=0x81dc798)\nat /usr/local/src/FreeRDP/libfreerdp-core/rdp.c:805\n\n14 0x0018583c in rdp_recv_callback (transport=0x80a1dc0, s=0x81dc798,\nextra=0x809f9e8) at /usr/local/src/FreeRDP/libfreerdp-core/rdp.c:865\n\n15 0x00189ece in transport_check_fds (ptransport=0x809fa10)\nat /usr/local/src/FreeRDP/libfreerdp-core/transport.c:451\n\n16 0x00185926 in rdp_check_fds (rdp=0x809f9e8)\nat /usr/local/src/FreeRDP/libfreerdp-core/rdp.c:896\n\n17 0x0017a584 in freerdp_check_fds (instance=0x809f8a0)\nat /usr/local/src/FreeRDP/libfreerdp-core/freerdp.c:145\n\n18 0x0805b953 in xfreerdp_run (instance=0x809f8a0)\nat /usr/local/src/FreeRDP/client/X11/xfreerdp.c:1141\n\n19 0x0805ba5a in thread_func (param=0x80e31b8)\nat /usr/local/src/FreeRDP/client/X11/xfreerdp.c:1180\n\n20 0x0052ecc9 in start_thread () from /lib/libpthread.so.0\n21 0x0061369e in clone () from /lib/libc.so.6\n(gdb) c\nContinuing.\n[Thread 0xb690cb70 (LWP 2699) exited]\n[Thread 0xb710db70 (LWP 2698) exited]\n[Thread 0xb7dc1b70 (LWP 2696) exited]\n[Thread 0xb610bb70 (LWP 2700) exited]\nProgram terminated with signal SIGSEGV, Segmentation fault.\nThe program no longer exists.\n(gdb) \n. Please see added backtrace above....\n. Thanks for responding. After about 20 different permutations of command line options I have narrowed it down to only happening when I use the -0: connect to console session option along with the -gdi sw option. It never occurs using other options if I eliminate the console option. When using the console option and gdi It always crashes in the same place:\n0x001a9951 in gdi_mem3blt (context=0x80e28f8, mem3blt=0x80b04f8)\n    at /usr/local/src/FreeRDP/libfreerdp-gdi/gdi.c:649\nThis really is a show stopper because I mainly use a RDP client for administrative connections to the console. I am using a blank screen saver with a lock after 20 minutes. I don't know what else to do. I will keep up with the latest commits and see if it gets better.\n. Because using --gdi sw is the only way to get the colors correct in the W2K3 session. I had the server maximum colors set at 15 bit for WAN performance issues on certain graphical applications. I reset the server to allow up to 24 bit, then connect with xfreerdp using 16 bit without --gdi sw (default hw gdi) and the colors are fine. 15 bit is screwing up the colors for me in xfreerdp when it uses hw gdi. I tested the use of 16 bit instead of 15 (the screen saver issue) now that the server maximum bit color has been increased and it works. It seems as though xfreerdp does not like to use 15 bit when the server is set at 15 bit (colors are off). Increasing the server to > 15 and connecting to it using 16 or > fixes the screen saver segfault problem. \nSummary:\nIn order to use 15 bit and not have color problems, I must use --gdi sw. However, this causes a segfault when coming out of screen saver using the -0 connect to console option. I can increase the server maximum bit color depth to > 15 and connect just fine at 16 bit with no screen saver segfault issues. This is a workaround, and does not address the initial problem. Nor does it provide a solution within my WAN networking constraints. I.e., I cannot run some applications in > 15 bit mode. These issues will go away as we move away from W2K3 server so my guess is that it is not that important for others.\n. NiKiZe is correct, the original problem (segfault when using -0 -a 15 --gdi sw) does still exist. However, because of his fixes for \"Pull Request #614: Fix for -a 15\", this has allowed me to use the default hw gdi instead of the sw gdi, it now works well. So, I am not sure whether or not to close this issue. I still see the segfault information shown below when testing the original command line. However, when using the default hw gdi even in 15 bit, it works well.\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0xb7dc1b70 (LWP 2599)]\n0x001aa9b1 in gdi_mem3blt (context=0x80e28f8, mem3blt=0x80b04f8)\n    at /usr/local/src/FreeRDP/libfreerdp-gdi/gdi.c:649\n649         gdi_BitBlt(gdi->drawing->hdc, mem3blt->nLeftRect, mem3blt->nTopRect,\n(gdb)\nPlease advise on the disposition of this issue. Thanks to NiKiZe for getting the default hardware gdi to work.\n. a bit more full description from user:\nterminal connection lags wildly before xfreerdp crashes all of sudden\n. Sorry if this is trivial but since your CMAKE update I have not been able to get through a cmake session without errors on trying to find the openssl package. Here is a good cmake session before your fixes and a bad one after the git update.\nGOOD:\ncmake -DCMAKE_BUILD_TYPE=Debug -DWITH_SSE2=ON .\n-- FreeRDP GIT\n-- Git Revision 1.0.1-956-g4165\n-- Skipping optional package PulseAudio.\n--   Enable this using \"-DWITH_PULSEAUDIO=ON\".\n-- Skipping optional package MacAudio.\n--   Enable this using \"-DWITH_MACAUDIO=ON\".\n-- Skipping optional package PCSC.\n--   Enable this using \"-DWITH_PCSC=ON\".\n-- Finding suggested package Cups.\n--   Disable this using \"-DWITH_CUPS=OFF\".\n-- Found Cups: /usr/lib/libcups.so\n-- Finding suggested package FFmpeg.\n--   Disable this using \"-DWITH_FFMPEG=OFF\".\n-- Finding suggested package XRandR.\n--   Disable this using \"-DWITH_XRANDR=OFF\".\n-- Could NOT find XRANDR  (missing:  XRANDR_LIBRARY XRANDR_INCLUDE_DIR)\n-- Finding suggested package Gstreamer.\n--   Disable this using \"-DWITH_GSTREAMER=OFF\".\n-- checking for modules 'gstreamer-plugins-base-0.10;gstreamer-0.10'\n--   package 'gstreamer-plugins-base-0.10' not found\n--   package 'gstreamer-0.10' not found\n-- Finding suggested package ALSA.\n--   Disable this using \"-DWITH_ALSA=OFF\".\n-- Skipping optional package CUnit.\n--   Enable this using \"-DWITH_CUNIT=ON\".\n-- Finding suggested package X11.\n--   Disable this using \"-DWITH_X11=OFF\".\n-- Finding suggested package XKBFile.\n--   Disable this using \"-DWITH_XKBFILE=OFF\".\n-- Finding suggested package X11.\n--   Disable this using \"-DWITH_X11=OFF\".\n-- Found XMLTO: /usr/bin/xmlto\n-- Finding suggested package Xinerama.\n--   Disable this using \"-DWITH_XINERAMA=OFF\".\n-- Finding suggested package Xext.\n--   Disable this using \"-DWITH_XEXT=OFF\".\n-- Finding suggested package Xcursor.\n--   Disable this using \"-DWITH_XCURSOR=OFF\".\n-- Finding suggested package Xv.\n--   Disable this using \"-DWITH_XV=OFF\".\n-- Skipping optional package DirectFB.\n--   Enable this using \"-DWITH_DIRECTFB=ON\".\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /usr/local/src/FreeRDP\nBAD:\ncmake -DCMAKE_BUILD_TYPE=Debug -DWITH_SSE2=ON .\n-- FreeRDP GIT\n-- Git Revision 1.0.1-1050-gfa3c\n-- Skipping optional package PulseAudio.\n--   Enable this using \"-DWITH_PULSEAUDIO=ON\".\n-- Skipping optional package MacAudio.\n--   Enable this using \"-DWITH_MACAUDIO=ON\".\n-- Skipping optional package PCSC.\n--   Enable this using \"-DWITH_PCSC=ON\".\n-- Finding suggested package Cups.\n--   Disable this using \"-DWITH_CUPS=OFF\".\n-- Found Cups: /usr/lib/libcups.so\n-- Finding suggested package FFmpeg.\n--   Disable this using \"-DWITH_FFMPEG=OFF\".\n-- Finding suggested package XRandR.\n--   Disable this using \"-DWITH_XRANDR=OFF\".\n-- Could NOT find XRANDR  (missing:  XRANDR_LIBRARY XRANDR_INCLUDE_DIR)\n-- Finding suggested package Gstreamer.\n--   Disable this using \"-DWITH_GSTREAMER=OFF\".\n-- checking for modules 'gstreamer-plugins-base-0.10;gstreamer-0.10'\n--   package 'gstreamer-plugins-base-0.10' not found\n--   package 'gstreamer-0.10' not found\n-- Finding suggested package ALSA.\n--   Disable this using \"-DWITH_ALSA=OFF\".\n-- FreeRDP GIT\nCMake Error at /usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake:70 (MESSAGE):\n  REQUIRED_VARS (missing: VERSION_VAR FAIL_MESSAGE Could NOT find OpenSSL,\n  try to set the path to OpenSSL root folder in the system variable\n  OPENSSL_ROOT_DIR)\nCall Stack (most recent call first):\n  cmake/FindOpenSSL.cmake:307 (find_package_handle_standard_args)\n  cmake/FindOptionalPackage.cmake:27 (find_package)\n  winpr/CMakeLists.txt:64 (find_required_package)\n-- Configuring incomplete, errors occurred!\nThanks for any help!\n. hi,\n   sorry to interrupt ur discussion. Now i am using xfreerdp and trying to understand the options of xfreerdp. But may i know what are all these wfreerdp, dfreerdp and freerdp-test. Can U people can explain me if u don't mind.\nThank You.\n. Thanks for the comment. I removed the FindOpenSSL.cmake file and at least it gets through the cmake process. Now it just compiles with an error (see below) which is normal sometimes on these pulls. BTW, I am already using the latest cmake:\ncmake --version\ncmake version 2.8.2\nThanks\n/usr/local/src/FreeRDP/channels/drdynvc/tsmf/ffmpeg/tsmf_ffmpeg.c:387: error: \u2018AVFrame\u2019 has no member named \u2018nb_samples\u2019\nmake[2]: * [channels/drdynvc/tsmf/ffmpeg/CMakeFiles/tsmf_ffmpeg.dir/tsmf_ffmpeg.c.o] Error 1\nmake[1]: * [channels/drdynvc/tsmf/ffmpeg/CMakeFiles/tsmf_ffmpeg.dir/all] Error 2\nmake: *** [all] Error 2\n. Does Microsoft make the RemoteFX and RDP 8 protocols public, so that the FreeRDP team can add them or is everything reverse engineered?\n. @awakecoding Cool I didn't know that Microsoft collaborates with you guys. Hopefully FreeRDP will support the new stuff before MS releases their updated client for Windows 7 ;)\n. ",
    "adambprotiviti": "Is your farm behind a Network Load Balancer (NLB) and are you using token redirection?\n. OK; but even doing the symlink didn't work.\n. Ah OK. They were PEM. I can make them cer and test. Weird as I could have sworn that this worked before.\n. ",
    "tomilepp": "I have same issue when connecting to windows 2008R2 cluster with remote desktop connection broker. Problem occurs when i have disconnected session in one server and trying to connect another, then  broker asks to connect alredy started session.\nLocal < Remote\n0000 03 00 00 28 02 f0 80 68 00 01 03 eb 70 1a 1a 00 ...(...h....p...\n0010 17 00 ea 03 ea 03 01 00 00 02 1a 00 14 00 00 00 ................\n0020 04 00 00 00 00 00 00 00                         ........\nLocal < Remote\n0000 03 00 00 28 02 f0 80 68 00 01 03 eb 70 1a 1a 00 ...(...h....p...\n0010 17 00 ea 03 ea 03 01 00 00 02 1a 00 14 00 00 00 ................\n0020 02 00 ee 03 ea 03 00 00                         ........\nLocal < Remote\n0000 03 00 00 28 02 f0 80 68 00 01 03 eb 70 1a 1a 00 ...(...h....p...\n0010 17 00 ea 03 ea 03 01 00 00 02 1a 00 28 00 00 00 ............(...\n0020 00 00 00 00 03 00 04 00                         ........\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0xb758ab40 (LWP 7230)] 0xb7f81020 in tpkt_verify_header (s=0xb6c2a448) at /home/tomilepp/FreeRDP/libfreerdp-core/tpkt.c:66 66              stream_peek_uint8(s, version);\n(gdb) where\n0  0xb7f81020 in tpkt_verify_header (s=0xb6c2a448) at /home/tomilepp/FreeRDP/libfreerdp-core/tpkt.c:66\n1  0xb7f83776 in transport_check_fds (transport=0x80a2760) at /home/tomilepp/FreeRDP/libfreerdp-core/transport.c:321\n2  0xb7f8044e in rdp_check_fds (rdp=0x80a0a00) at /home/tomilepp/FreeRDP/libfreerdp-core/rdp.c:868\n3  0xb7f7c52b in rdp_client_connect (rdp=0x80a0a00) at /home/tomilepp/FreeRDP/libfreerdp-core/connection.c:112\n4  0xb7f75130 in freerdp_connect (instance=0x80a08b8) at /home/tomilepp/FreeRDP/libfreerdp-core/freerdp.c:59\n5  0x0805ad08 in xfreerdp_run (instance=0x80a08b8) at /home/tomilepp/FreeRDP/client/X11/xfreerdp.c:1046\n6  0x0805b0a3 in thread_func (param=0x80c3a88) at /home/tomilepp/FreeRDP/client/X11/xfreerdp.c:1157\n7  0xb7b5fcd3 in start_thread () from /lib/libpthread.so.0\n8  0xb7a9f83e in clone () from /lib/libc.so.6\n(gdb) print _s\n$1 = {size = 5, p = 0x0, data = 0x0}\n(gdb) up\n1  0xb7f83776 in transport_check_fds (transport=0x80a2760) at /home/tomilepp/FreeRDP/libfreerdp-core/transport.c:321\n321                     if (tpkt_verify_header(transport->recv_buffer)) /_ TPKT /\n(gdb) print transport\n$2 = {recv_stream = 0x80a2790, send_stream = 0x80aa810, layer = TRANSPORT_LAYER_TLS, tcp = 0x80a2798, tls = 0xb6c1a8b0, settings = 0x80a0b10, credssp = 0xb6c3c300, usleep_interval = 100, recv_extra = 0x80a0a00, recv_buffer = 0xb6c2a448, recv_callback = 0xb7f80226 , recv_event = 0x80a67e8, blocking = 0}\n. Yes, segfault seems to be fixed now.\n. ",
    "mrinvader": "On Linux Mint 12 fully updated,\nfind . -type f -name CMakeLists.txt | xargs subst 's|PULSE_LIBRARIES|PULSEAUDIO_LIBRARY|g'\nthat command didnt work... gave \nuser@host:~/incoming/src/FreeRDP$ find . -type f -name CMakeLists.txt | xargs subst 's|PULSE_LIBRARIES|PULSEAUDIO_LIBRARY|g'\nxargs: subst: No such file or directory\nhowever, \nfind ./ -type f -name CMakeLists.txt -exec sed -i 's/PULSE_LIBRARIES/PULSEAUDIO_LIBRARY/' {} \\;\nappears to do what you wanted..\nChanging PULSE_LIBRARIES to PULSEAUDIO_LIBRARY WORKED!\n(for me at least)\nHeres my complete build script for  the latest remmina/freerdp from git\n```\n!/bin/bash\nThis script does a lot of sleeping for debugging the stages..\nugly, but it worked.\nlets purge previous build processes\nrm -fr Remmina FreeRDP\ngit latest freerdp\ngit clone https://github.com/FreeRDP/FreeRDP.git\nsleep 5\ncd FreeRDP/\nThanks dubrsl - the following fixes\nremmina: symbol lookup error: /---/rdpsnd_pulse.so: undefined symbol: pa_threaded_mainloop_new\nfind . -type f -name CMakeLists.txt | xargs subst 's|PULSE_LIBRARIES|PULSEAUDIO_LIBRARY|g'\nfind ./ -type f -name CMakeLists.txt -exec sed -i 's/PULSE_LIBRARIES/PULSEAUDIO_LIBRARY/' {} \\;\nsleep 5\ncmake -DWITH_PULSEAUDIO=ON -DCMAKE_BUILD_TYPE=Debug -DWITH_SSE2=ON .\nsleep 5\ntank all cores on a 4 core system\nmake -j6\nsleep 5\nself exp.\nsudo make install\nsleep 5\ncd ..\nnow git and build latest remmina\ngit clone https://github.com/FreeRDP/Remmina.git\nsleep 5\ncd Remmina/\ncmake -DCMAKE_BUILD_TYPE=Debug .\nsleep 5\ntank all cores on a 4 core system\nmake -j6\nsleep 5\nsudo make install\nsleep 5\ncd ..\n```\n. so if i do another git sync the fix will be applied? ill try it, but\nthe ?? was resent for the benefit of others. \nI am great only because I stand on the shoulders of giants.\nOn Wed, 2012-02-15 at 12:57 -0800, Viacheslav Dubrovskyi wrote: \n\nFixed\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/418#issuecomment-3988919\n. It WORKED! Thanks!!\n. \n",
    "dubrsl": "Fixed\n. ",
    "Paranoja": "I have the same error message on 8189702e but it happens only when I try to move my mouse. If I do not touch the mouse the issue does not appear.\nI tried aswell other encryption methods but with no success.\n. Also the same issue occurs for xfreerdp --no-motion on dragging events:\nDBG_LICENSE license_recv (198): Receiving Error Alert Packet\ndwErrorCode: STATUS_VALID_CLIENT, dwStateTransition: ST_NO_TRANSITION\nERRINFO_DECRYPT_FAILED (0x00001192):\n(a) Decryption using Standard RDP Security mechanisms (section 5.3.6) failed.\n(b) Session key creation using Standard RDP Security mechanisms (section 5.3.5) failed.\nrecv: Connection reset by peer\nFailed to check FreeRDP file descriptor\nI'm using Fedora 16 x86_64.\nFreeRDP was built with \ncmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DWITH_DEBUG_CERTIFICATE=ON -DWITH_DEBUG_LICENSE=ON\nand packed into RPM for ease of use\nRDP server is native MS Windows XP SP3 with latest updates installed.\nP.S. If this is significant - server is under firewall and accessed via encrypted OpenVPN tunnel\n. atong\nI tried --no-fastpath and looks like it works, but now I can't use compression:\nxfreerdp -a 24 -g 1680x1050 -z --disable-wallpaper --no-fastpath 10.3.0.6\nconnected to 10.3.0.6:3389\nDBG_LICENSE license_recv (198): Receiving Error Alert Packet\ndwErrorCode: STATUS_VALID_CLIENT, dwStateTransition: ST_NO_TRANSITION\n*** glibc detected *** xfreerdp: malloc(): memory corruption: 0x00007f984804fa30 ***\n*** glibc detected *** xfreerdp: malloc(): memory corruption: 0x00007f984804fa30 ***\nbakytn, I'm using AMD64-based workstation with 8 GB RAM at client side and Intel-based workstation with less than 4 GB RAM at server side. Is this sufficient for you?\n. I can't be 100% certain to confirm that as it needs more time to check, but now I can say that moving mouse or doing drag-and-drop with --no-fastpath not causing FreeRDP to crash instantly.\n. Yes, a hour of active development on remote desktop went without crashes.\n. No, I'm not using redirected disk nor I'm using other redirections except clipboard.\n. Yes, the bug is fixed and FreeRDP now properly works with fastpath and compression. Tested on revision 2b9ffc2b.\n. ",
    "johnjohn101": "Ubuntu 11.10 -  code was git cloned on 02/16/2012\nFrom Changelog\nmore ChangeLog \n2012-02-07  Version 1.0.1\nFreeRDP 1.0.1 is a maintenance release to address a certain number of\nissues found in 1.0.0. This release also brings corrective measures\nto certificate validation which were required for inclusion in Ubuntu.\n. I tried --no-fastpath  on the command line and was able to make a connection to this server.\n. ",
    "elfring": "You need to be very careful with the use of underscores in identifiers if you would like to provide standard-compliant source code.\n. ",
    "Nigel62": "I believe this is down to a commit from 2nd Feb:\n    https://github.com/FreeRDP/FreeRDP/commit/770dbc11c5a5307f3054958d6294fe2a3d93559b\nI have undone the modification (locally) and the numpad / key works fine when set to a German kdb (-k 0x0407 as you show). \nHowever, not knowing what the modus-operandi of that modification was I'm reluctant to commit the undo.\nOn a UK keyboard where I have a key legend '/' and '?' on the main keyboard with this modification removed both the numeric keypad '/' and the '/' '?' from the main keyboard behave correctly, with the mod enabled the numpad '/' was wrong as it was interpreted as a key from the main keyboard  and NOT a numeric keypad one, when shifted it produced a ?' which is wrong for the numeric keypad key. \nThats the whole point of the Extended flag so it really ought to be re-introduced.\n. Thanks\nI'm not disputing the fact that a change was made to fix an issue, but certainly under the scenarios I documented, especially with a German keyboard, there was a fault with the change. If maybe the author of the change had actually documented his environment, then I may have been able to diagnose the actual fault and suggest a fix.\nRegards\nNigel\n-----Original Message-----\nFrom: Marc-Andr\u00e9 Moreau [mailto:reply@reply.github.com] \nSent: 21 February 2012 17:05\nTo: Reeves, Nigel\nSubject: Re: [FreeRDP] Numpad divide key gives minus (#446)\n@Nigel62 I've just put it back the extended flag. in the current code this is located in libfreerdp-locale/keyboard_layout.c. I'll need to figure out why it was changed in the first place, and see if fixing it there breaks it for somebody else, and figure out a solution.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/446#issuecomment-4078987\n. Marc-Andre\nI've just run some simple tests here with an application on a 2008-R2 server that displays the received VK values and confirm that for both a German keyboard & a UK keyboard, that the VK_DIVIDE & VK_OEM_2\\VK_OEM_MINUS (on German keyboard) are distinguished as expected, so too are the VK_RETURN & VK_SEPARATOR (Keypad Enter).\nPrior to your changes on a German keyboard both the VK_DIVIDE & VK_OEM_MINUS were coming through as a VK_MINUS and thus displaying a '-' for the numeric keypad / key\nI would say this is good to go.\n-----Original Message-----\nFrom: Marc-Andr\u00e9 Moreau [mailto:reply@reply.github.com] \nSent: 22 February 2012 15:59\nTo: Reeves, Nigel\nSubject: Re: [FreeRDP] Numpad divide key gives minus (#446)\n@joerg @Nigel62 I have pushed some improvements yesterday to complete mapping between an XKB symbolic key and a Virtual Key Code + the extended flag. I've tested it, and now the key on the left of the right shift sends VK_DIVIDE without the extended flag, and the divide key on the keypad sends VK_DIVIDE with the extended flag. Same thing happens with enter and the enter on the keypad (enter on the keypad has the extended flag).\nCould you please test this?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/446#issuecomment-4106809\n. ",
    "ygch": "@awakecoding  @jsorg71 In our test, we pay more attention on the video redirection, so I'm sure we enable the redirection function using the following parameter ---\"--plugin drdynvc --data tsmf\". Our test environment is two host connected by a switch, one is win7 as server, the other is ubuntu as client. If we don't put any restriction on switch, the result is good and we can see the improvement using media player than others' player. Through playing the video downloaded from the website, we get the speeds using different players: media player is 500KB/s, the others are 3MB/s on average.So the result is excellent. Our another test is putting some restrictions on the switch. If we restrict the bandwidth of a port which is used by the client to 10Mb duplex, the speed is dropped badly, the whole freeRDP runs slowly, much more playing a video. \nI downloaded the latest version 1.0.1 to make the test. But I also have another problem. In the code, I can find tsmf_pulse.c, but after installing the project, the corresponding tsmf_pulse.so is not generated, why on earth does this happen?\n. ",
    "Slartibart": "There's an issue with Xv, run cmake with \"-DWITH_XV=OFF\" and it should at least run (albeit without Xv).\n. Sorry, should have been _ not - : -DWITH_XV=OFF\n. The problem is that the default configuration doesn't detect this on OSX. If that is fixed then this wouldn't have been an issue anymore.\n. ",
    "shou1518": "I run cmake with:    cmake -D \"CMAKE_OSX_ARCHITECTURES:STRING=x86_64\" \"-DWITH-XV=OFF\" .\nbut the result is:\nCMake Warning:\n  Manually-specified variables were not used by the project:\nWITH-XV\n. -DWITH_XV=OFF is OK, thank all! \nBut I want to use the multimedia redirect, it does not work,  `xvinfo' returns 'no adaptors present' .\nSo,I can't use multimedia redirect on MAC ?\n. ",
    "Digimocloud": "thanks. will try...\nOn Wed, Feb 22, 2012 at 4:50 PM, Marc-Andr Moreau <\nreply@reply.github.com\n\nwrote:\n@Digimocloud this version looks OLD, probably 0.8.2, and it doesn't\nsupport RemoteFX. Please either get a package for 1.0.1 or build the latest\nsources yourself.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/452#issuecomment-4106625\n. Thanks\n\nMuch obliged\nMichael\nOn Fri, Jun 8, 2012 at 1:38 AM, nlemberger <\nreply@reply.github.com\n\nwrote:\nI don't believe this is a FreeRDP issue, I think it's a packaging issue.\n Try installing GNOME (apt-get install gnome) - there is some missing\ndependency in the package which causes this to happen.  I have the same\nproblem on LTSP installs and adding the GNOME and it's boat-load of\npackages and --rfx works fine for me.  I tried it by just installing Unity\n(much smaller) with no luck.\n-Nick\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/484#issuecomment-6191068\n. We have yet to test it again and will keep you informed...\n\nThanks a lot\nMichael\nOn Sat, Jun 9, 2012 at 2:49 AM, Dorian Johnson <\nreply@reply.github.com\n\nwrote:\n@Digimocloud - did this fix the issue for you?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/484#issuecomment-6215914\n. We installed Gnome but to no avail...the same error is cropping up...besides gnome, do we have to install something else? we also removed unity just to be sure...\n. We are now using the latest git and still no good\n\nMichael\n. ",
    "dbrandesky": "I'm using FreeRDP version 1.0.1 on Ubuntu 10.04. The VM I'm trying to access is on a Windows Server 2008 R2 Enterprise host, and both the host and the guest are 64-bit. I've tried control-alt-delete, control-alt-end, right control-delete (a-la Virtualbox commands), and maybe something else I haven't thought of. Basically it seems like I can't get the host to completely grab my keyboard input; I know remmina does this, but for whatever reason remmina doesn't scale the desktop properly when I connect to VMs via RDP so I'm left with FreeRDP as the working solution for that functionality.\n. ",
    "three18ti": "I still get this when connecting to some machines.\n. It is, but I have been unable to find the machine in question (it's been a\nhectic day here) avs reproduce the issue.  I'll reply back when I have\nfurther information.\nThanks for the quick response.\nOn Apr 22, 2012 1:46 PM, \"Bakyt Niyazov\" \nreply@reply.github.com\nwrote:\n\nis your bug is showing as described?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/457#issuecomment-5270533\n. In the instances where I have encountered this, firewalls have been\ndisabled, nla is enabled (will try with --no-nla next time), but was able\nto connect from my Win 08 VM.  I'm off shift for the night, but will try to\nfind an example tomorrow.\n\nOn Apr 22, 2012 10:41 PM, \"Bakyt Niyazov\" \nreply@reply.github.com\nwrote:\n\nMay be it's firewall related? Howerver when I was facing this problem\nFirewalls were disabled.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/457#issuecomment-5274269\n. I would like to report that after a month of trying to reproduce this issue, the only time I have encountered it is when the credentials are incorrect (or the machine has just come back from updates and will not respond to windows machines either,  obviously this is a Windows problem).  Perhaps it would be possible to clarify the error message, but please don't keep this issue open on my account.\n. \n",
    "loxK": "I have the issue right now. I rebooted a Windows 7 VM and could not connect to it. I added the --no-tls option and it worked.\n. ",
    "chthal": "Oh, thank you! I\u00b4m not that compiiing guy ;-) Therefor I always fetch Freerdp from https://launchpad.net/~freerdp-team via apt. But it\u00b4s no problem, I can wait some days ... Thanks!\n. ",
    "mlt": "I'm not sure if my problem is related or not. I don't see a mouse cursor unless I move it. Cursor appears badly visible as if I am in text entry field, i.e. looks like I with serifs. The problem occurs after I log in in existing session. Mouse pointer appears correct during CTRL+ALT+DEL screen.\nUPDATE:\nI looking cursor was in emacs-nt windows and it was visible only on the 10% of the left side of the screen. Animated resize cursors on window edges look okay. I feel like I miss just my default animated cursor. Even busy cursor shows okay.\nUPDATE 2:\nAnyhow after changing mouse cursor theme in Windows back and forth, it shows everything correct. Weird.\nP.S. rdesktop shows everything normal.\n. ",
    "Vladimir-Yashin": "I can confirm this bug.\nThe command line to connect to Windows 2008 r2 is:\nxfreerdp -u username --ignore-certificate --plugin rdpdr --data disk:data:/home/IIB/username/Desktop -- term01\nAlso I tried with --no-fastpath but it seems not to change anything.\nAfter login to Windows Server 2008r2 I see \"tsclient data\" shortcut in windows explorer.\nThen I browse through it and this is what I get in debug output in console: https://gist.github.com/1923182 (file xfreerdp-debug-normal.log)\nEverything is working fine. At this point I try to mount redirected directory as a windows drive with command:\nnet use b: \\tsclient\\data\nHere is he console output of xfreerdp is presented: https://gist.github.com/1923182 (file xfreerdp-debug-error.log)\nAfter \"net use\" command I can't use redirected directory either via drive B:, nor via \"tsclient data\" shortcut in Windows explorer.\nEach time I click on shortcut I see an error message \"Attempt to access invalid address\" (https://docs.google.com/open?id=0B0NcosuYYGeUa21xVnNKVHNSN2FEbk5sR0c4SzVQZw). This time I don't see any output in xfreerdp console at all.\nAlso the mapped drive becomes unusable after dir \\tsclient\\data with complains to I/O error, like a previous reporter wrote.\nI tried the latest freerdp 1.0.1 and fresh snapshot from git, but got the same behaviour.\nDebug options set during compilation:\nWITH_ALSA:BOOL=OFF\nWITH_CLIENT:BOOL=ON\nWITH_CUNIT:BOOL=OFF\nWITH_CUPS:BOOL=ON\nWITH_DEBUG_CERTIFICATE:BOOL=OFF\nWITH_DEBUG_CHANNELS:BOOL=ON\nWITH_DEBUG_CLIPRDR:BOOL=ON\nWITH_DEBUG_DVC:BOOL=OFF\nWITH_DEBUG_GDI:BOOL=OFF\nWITH_DEBUG_KBD:BOOL=OFF\nWITH_DEBUG_LICENSE:BOOL=OFF\nWITH_DEBUG_NEGO:BOOL=OFF\nWITH_DEBUG_NLA:BOOL=OFF\nWITH_DEBUG_ORDERS:BOOL=OFF\nWITH_DEBUG_RAIL:BOOL=ON\nWITH_DEBUG_REDIR:BOOL=ON\nWITH_DEBUG_RFX:BOOL=OFF\nWITH_DEBUG_SCARD:BOOL=OFF\nWITH_DEBUG_SVC:BOOL=ON\nWITH_DEBUG_TRANSPORT:BOOL=OFF\nWITH_DEBUG_WND:BOOL=OFF\nWITH_DEBUG_X11:BOOL=OFF\nWITH_DEBUG_X11_CLIPRDR:BOOL=OFF\nWITH_DEBUG_X11_LOCAL_MOVESIZE:BOOL=OFF\nWITH_DEBUG_XV:BOOL=OFF\nWITH_DIRECTFB:BOOL=OFF\nWITH_FFMPEG:BOOL=OFF\nWITH_MANPAGES:BOOL=OFF\nWITH_NEON:BOOL=OFF\nWITH_PCSC:BOOL=OFF\nWITH_PROFILER:BOOL=OFF\nWITH_PULSEAUDIO:BOOL=OFF\nWITH_SERVER:BOOL=OFF\nWITH_SSE2:BOOL=OFF\nWITH_SSE2_TARGET:BOOL=OFF\nWITH_X11:BOOL=ON\nWITH_XCURSOR:BOOL=ON\nWITH_XEXT:BOOL=ON\nWITH_XINERAMA:BOOL=ON\nWITH_XKBFILE:BOOL=ON\nWITH_XV:BOOL=ON\nI can give more detailed debug output if someone will tell me how to do this and what debug flags I have to check during configuration.\n. ",
    "hteles": "Hi, Marc.\nI'm sorry but as i've explained you in a email sent few seconds ago, i'm \nmissing the skill's to work with GitHub.\nThanks for your patience. I've too patched manually the local version here.\n\nHelmer Teles\neM@il   : helmer.teles@gmail.com\nWeb Page: http://hteles.wordpress.com\nOn Monday 27 February 2012 09:12:43 Marc-Andr\u00e9 Moreau wrote:\n\n@hteles I just applied and pushed the fix 2 minutes after you've opened this\nticket. Closing it now, but in the future please open a pull request\ninstead of sending patches which require us more manual work.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/465#issuecomment-4198063\n. \n",
    "macarthor": "added information:\nthe exact command line is:\n\nxfreerdp -a 24 -g 1024x768 -z -x lan --rfx -d idesktop -p 111111 -u idesktop-cad01 testpc  ->> fails with error \"transport_connect: getaddrinfo (System Error)\"\nxfreerdp -a 24 -g 1024x768 -z -x lan --rfx -d idesktop -p 111111 -u idesktop-cad01 192.168.1.8  ->> works fine\n. \n",
    "qcguytech": "I'll try that this afternoon.\nThe iSeries Emulator is a client software emulating 5250 Terminal for IBM AS/400 or IBM iSeries. The software is on the TS.\n. It works!\nI modified kbd_type to 0x00000004, recompiled and everything is working now.\nThanks dude :)\n. Sorry for the delay we're pretty busy at the office right now., but I took the time this week-end to test and same thing with --no-nla I'm asked twice for login. But if I pass the username and password thru the command everything works as expected, so I've made a rad form and user will input theirs credentials.\n. In Windows it doesn't ask twice for credentials but it ask to accept certificates twice even if you check to always accept.\n. Duh I didn't add credssp.dll will try that\n. I've tried without the -z and the artifacts almost disappeared, but in I have a bit of problem on the left side where the row numbers. I will try for the Bitmap decompression problem and keep you updated since it doesn't happen regulary but really randomly.\nThanks \n. Just to get you updated, the sudden close of freerdp hasn't happenned in 4 days, so I consider the problem was with -z switch.\nBut the artifacts problem is always present at different levels I will open another issue on that.\nThanks\n. An sample of what we have on ours users screens with the original command line\nhttp://i1058.photobucket.com/albums/t419/jgervais83/outlook_1.jpg\nhttp://i1058.photobucket.com/albums/t419/jgervais83/excel_1.jpg\nhttp://i1058.photobucket.com/albums/t419/jgervais83/desktop_1.jpg\nIf I use --gdi sw with or without --no-bmp-cache I have lot less artifacts, but in some softwares like IBM iSeries Terminal Emulator the reticular ruler doesn't move at all. See pictures below.\nhttp://i1058.photobucket.com/albums/t419/jgervais83/outlook_2.jpg\nhttp://i1058.photobucket.com/albums/t419/jgervais83/excel_2.jpg\nhttp://i1058.photobucket.com/albums/t419/jgervais83/desktop_2.jpg\nThanks\n. Just to get you updated I had time to try on a Ubuntu 10.04 VM in VMWare Player and I have the same problem.\n. I use the latest 1.0.1 git version, I made a clean build 20 minutes ago and I have the same problem. For --no-bmp-cache if I doesn't use it I got inverted colors all the way. For --gdi I keep it for testing purpose while I only change h for s when needed ;)\nThanks\n. We have a TS Farm on Windows 2008 R2, the server side is 16bits, on client side I tried at 8, 16 and 32 bits with the same result.\nThanks\n. I saw this morning xf_event.c has been modified so I've do a new build on my test Thin Client and no more --no-bmp-cache is need when using hardware settings. Also I have less artifacts, in facts I just see artifacts in Excel when I scroll down the firsts row numbers gets scrambled.\n. ",
    "zekemx": "Hello,\nAre there any plans to fix this without having to modify libfreerdp-core/settings.c and recompile?.\nI moved to freerdp from rdesktop since rdesktop copy/paste is not working while trying to copy text from IBM iSeries Emulator screen to any other program... and now a keyboard problem.. How my God.. Hahaha\nRegards\n. ",
    "hekkihek": "Agreed. Please note that is not enough to close this issue, the compile errors about variable types remain without including the config.h. If it helps, I can list the exact error messages here.\n. Thanks! I'll try later today and let you know.\nRichard.\nOp 12 mrt. 2012 om 12:18 heeft Vic Leereply@reply.github.com het volgende geschreven:\n\nI pushed a commit which should fix it. Please let me know if there are other places missing the inclusion of config.h.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/495#issuecomment-4449768\n. Just downloaded and installed the current master branch. The issue is partly fixed, there are no more reference to the config.h from the public header files.\n\nBut if I don't include the generated config.h in my project I get a lot of error messages like:\nUnknown type name 'boolean'; did you mean 'Boolean'?\nIn file included from [..]/include/freerdp/freerdp.h:35:\nIn file included from [..]/include/freerdp/types.h:116:\nAfter 20 such messages the compiler stops.\nThis is with Apple LLVM Compiler 3.1. (Objective C does not have a boolean type).\nIf I include the config.h, the boolean type is auto-magically defined (the HAVE_STDBOOL_H define looks promising). Just tried to replace the entire config.h (locally in my project of course) with only\ntypedef int boolean;\nand that seems to work fine too, although, looking at freerdp/types.h it seems appropriate to define the other defines present in the config.h file too to be sure both the application and the library are using the exact same variable sizes.\nOf course I can include this define in my project, but it is odd that the FreeRDP libraries compile ok, and when you want to use them you need an additional define.\n. Yes, that would definitely solve this issue (and similar future issues).\n. ",
    "littlejawa": "Done. Didn't even know about the 'rebase'... Now I understand :-)\nThanks\n. ",
    "sleekmountaincat": "i am getting asked for credentials twice connecting to a 3 server 2k8 standard TS farm with --no-nla. using session broker with ip based redirection. using freerdp 1.0.1. would be glad to do some testing and debugging if you need me too.\n. if i disable nla on xpsp3 and win7 clients, i do get the double logon. @atong does this mean there is nothing to do for freerdp?\n@qcguytech, are you sure you are disabling NLA? follow the reverse of these instructions:\nTo check if Network Level Authentication is enabled, open the remote desktop client, right-click in the title bar and choose About. If it says Network Level Authentication Not Supported, you will need to enable it as follows:\n- Browse to HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\n- Locate Security Packages and add tspkg to the bottom of the list\n- Browse to HKLM\\System\\CurrentControlSet\\Control\\SecurityProv iders\n- Locate Security Providers and add , credssp.dll at the end\n- Restart the computer\n. @atong, thanks. looks like this issue could be closed then.\n. @terrible-broom  it looks like windows session broker can only do SSO with nla, and the only way to do NLA is to collect credentials before the connection is initiated. i am not a freerdp developer, but from what i understand if you do specify --no-nla and do not specify a user, freerdp will default to the current local user, ala scp. i believe that part in the code you found was going to implement a gui for querying the user for username, password and domain. \nso, if the double login is a problem, specify -u, -p, and -d on the command line. if this is a problem, you can write a simple wrapper script that uses zenity or Xdialog to query the user for credentials in a nice looking way, this is what i did. i could provide it to you if youd like.\n. @atong this is 1.0.1\n. sorry, see this is a duplicate.\n. ",
    "sanerit": "Hi all,\nI also have a problem of credentials twice while connecting\nHere's my setup:\nClient: Debian wheezy xfreerdp + 1.0.1\nServer: 2x Windows Server 2008 without NLA + session broker\nHere is the command line i use:\nxfreerdp --sec rdp --no-nla myserver\nBest case:\n- If the client connects to the server 1 and it is less loaded than server 2, the identifiers are required only once.\nWorst case:\n- If the client connects to the server 1 and it is more loaded than server 2, the identifiers are then requested 2 times : the first time login and password and the second time only the password;\n- At the second password prompt the keyboard is not synchronized with the Xwindow environment, for example Capslock LED is ON but the text entered is in lower case, same with Numlock. If we are not in full screen mode, clicking another window and back to xfreerdp window, the keyboard is resynchronized.\nFor your information, the RDP client \"mstsc.exe 6.1.7600\" built into Windows 7 requires only a single connection identifiers.\nCan you help me please?\nPS: Sorry for my english i'm french\n. I'm on French layout on Windows server 2008\n. The parameter \"-k 0x0000040C\" doesn't resolve the problem.\nFor cons, I'm using version 1.0.1-905 and the fault is no longer present, someone had to fix the source code.\nThank you for helping me.\n. ",
    "manfredu": "The following comment to issue 462 seems to describe the same problem:\nhttps://github.com/FreeRDP/FreeRDP/issues/462#issuecomment-4193334\n. ",
    "dekimir": "I'm experiencing the same: I've swapped Control and Caps Lock in my Gnome desktop (which presumably uses xmodmap for that under the hood).  When I log into a Windows machine using rdesktop, the mappings are respected: the Caps Lock key acts as Control and vice versa.  But when I log into the same machine using xfreerdp with all the same flags, the mappings are not respected: the Caps Lock key acts as Caps Lock.\n. The same problem has been discussed on the Freerdp-devel mailing list, though the authors apparently attribute it to keyboard-layout selection, which seems unrelated to me (there is no keyboard layout for these registry-hack swaps).  Remmina is reported to be able to deal with this, though I couldn't build Remmina on my machine. :(\n. ",
    "kekekeks": "Fortunately FreeRDP doesn't read key input from /dev/console, so I've managed to solve my problem by modifying kernel scancode to keycode translation table via setkeycodes utility.\n. ",
    "Mars73": "As we're moving from Citrix to RDP on our company I'm ready to use FreeRDP and came across the same problem with the -z parameter.\nWhen enabled sometimes connecting to a Windows 2008 R2 RDS server it freezes while logging in and sometimes you get further but after a few seconds the connection is lost and you see the segmentation fault.\nUsing the FreeRDP 1.0.1.\nAny news on -z?\nI'd like to use it as it definitely gives a boost to overall perfomance as I've also tested it connecting to a Windows XP machine.\n. ",
    "trou": "I have also enabled secure checksums by default, inverting the command line option to --no-salted-checsums. They are supported since 2002 by microsoft servers and prevents passive keystroke recovery (see MS02-051).\n. ",
    "mwu406": "Hi Dorianj,\nmy thinclient connects trough rdp only with spanning (like one big monitor) an i want the different way with two seperate monitors. The server can handle the true-multi-monitor, a wyse client works with true-multi-monitor.\nRegards\nMartin\n. Hi,\ni\u00b4ve tried the switches -f or -g workarea, but no change. The Desktops span across both monitors.\nRegards\nMartin\n. Hi Adam,\ni\u00b4ve tried xfreerdp -f --no-nla xx.xx.xx.xx with no sucess. Can you give me you\u00b4re syntax?\nregards\nMartin\n. ",
    "abatkin": "This works fine for me. BUT it does NOT work if you pass --no-rdp. At least according to the FreeRDP source, this may be a limitation of the RDP protocol. (I was passing --no-rdp (and wondering why it wouldn't work) because I couldn't log in to the remote host without it ... but --no-nla allowed me to log in to the remote host AND handled multiple monitors). Of course, all of this assumes that the server side supports it (which pretty much limits you to Windows 7 Ultimate or Enterprise editions or Server 2008).\n. That's exactly what I did. I'm running FreeRDP v1.0.1\n. ",
    "denicfr": "Hi abatkin,\nI have exactly the same problem on Ubuntu 12.04. Did you have any solution for this issue ? \nEric\n. Hi timroes,\nDo you have one or many monitors ? \n. Do you have this issue in full screen mode too ? \nYou were talking about -g workarea but not about -f.\n. I think it's the same issue as 'mine' (https://github.com/FreeRDP/FreeRDP/issues/728).\nMonitors are not detected well.\n. ",
    "nereocystis": "I see spanning on 1.0.1\n. Sorry, I wasn't quite as clear as I should have been in my comment.\nexperiance=>experiance, as you noted.\n. Oops.  You're right.  I made a quick check, but didn't carefully check all of the options to make sure that they matched.\nOptions are in 3 places, \nclient/X11/xfreerdp.1.xml, for documentation\n    libfreerdp-utils/args.c, for help\n    libfreerdp-utils/args.c, for checking the argument itself.\nI went through all of the arguments.  I discovered a few arguments which are not in stable, \na few arguments undocumented in in the help command\nand a few arguments undocumented in the xml file.\nI added this to the requested pull.\n. ",
    "badfiles": "gcc (Ubuntu/Linaro 4.6.3-1ubuntu3) 4.6.3, Ubuntu 12.04. Also tried in 11.10\ncmake -DCMAKE_BUILD_TYPE=Debug -DWITH_SSE2=ON -DWITH_PCSC=ON -DWITH_MANPAGES=OFF .\ntried type=Release\nWith SSE2=OFF build successful in 11.10 and 12.04.\nOff-topic: in 12.04 libavcodec.so and libavutil.so located only in /usr/lib/i386-linux-gnu/ so I had to make symlinks in /usr/lib/ in order to complete the build process\n. I compile for i386 on i386 :)\n. actually I compile on this mashine (and I do not cross-compile)\nvendor_id   : GenuineIntel\ncpu family  : 6\nmodel       : 23\nmodel name  : Intel(R) Core(TM)2 Duo CPU     E7500  @ 2.93GHz\nstepping    : 10\nmicrocode   : 0xa0b\ncpu MHz     : 2926.000\ncache size  : 3072 KB\nphysical id : 0\nsiblings    : 2\ncore id     : 1\ncpu cores   : 2\napicid      : 1\ninitial apicid  : 1\nfdiv_bug    : no\nhlt_bug     : no\nf00f_bug    : no\ncoma_bug    : no\nfpu     : yes\nfpu_exception   : yes\ncpuid level : 13\nwp      : yes\nflags       : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe nx lm constant_tsc arch_perfmon pebs bts aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm sse4_1 xsave lahf_lm dts tpr_shadow vnmi flexpriority\nbogomips    : 5851.95\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 36 bits physical, 48 bits virtual\n. ",
    "wtwomey": "I am also experiencing this issue on 1.0.1 in an environment with 2 2008 R2 servers that use session broker.\nIf I see\nConnected to <name>:3389\nEverything works great. However, if I see\nConnected to <name>:3389\n            Connected to <IP redirected to>:3389\nThen sound stops working although drive redirection still works.\n. Does \"No one is assigned\" mean no one is working on this issue?\n. ",
    "melesx": "I can confirm that this issue now occurs only when using session broker. If connected to one server (or with no redirection), both sound and drive plugins works. If redirection occurs, only first loaded plugin works correctly. \nStable 1.0.1-573\n. ",
    "faragog": "Same issue here. Only the first loaded plugin will work, when session redirection occur. Please fix this serious issue as soon as possible.\n. ",
    "arpiondarkness": "Hi, to solve this issue try to redirect both stderr and stdout to \"fake\" file likes this:\nxfreerdp -u USERNAME -d DOMAIN -f --plugin cliprdr REMOTECLIENT 2>&1 fakeFILE\nI'm using freerdp 0.8.2 on FC14 and it works fine with win7 / outlook 2010\n. ",
    "sirianni": "Ubuntu 12.04.\nCould the issue be when the ALT key is still depressed when focus leaves the RDP window?  When the window is re-entered Xfreerdp might still think the ALT key is depressed even though it isn't (the target windows OS does not think that ALT is pressed however)  \nWhat leads me to believe this is that pressing the ALT key a bunch of times in the RDP session \"resets\" the condition and then CTRL-ENTER works as expected (does not toggle fullscreen).\n. ",
    "pfmooney": "I've encountered this issue as well.  As sirianni, mentioned, it has to do with keys being depressed when the window loses focus.  Depending on your WM and how it's configured, the problem can appear often.\nClearing the data structure of depressed keys on loss of focus would alleviate the problem.\n. I've published my fix here:\nhttps://github.com/pfmooney/FreeRDP/commit/7cf594a95f2fac1c11aab0395a96225cbab14216\nWhile it solve the unwanted full-screen initiation due to the alt key, it should be noted that keys are still assumed to be depressed inside the RDP session.  That becomes an issue for me when using the Win key as a modifier in my WM.  If the Win key is depressed when xfreerdp loses focus, letters typed in the window after I return behave as if I'm still holding the key (such as 'r' opening the run dialog).  A call to \"xf_kbd_release_all_keypress\" during focus-out but prior to the xf_kbd_clear (perhaps as part of it) would solve that problem.\nI did not include that in my commit as I was unsure of negative effects elsewhere.\nFeedback would be appreciated.\n. Does anyone have input on how I should go about pursuing the inclusion of that fix in one form or another?\n. Will do.  Thanks.\n. ",
    "kiilerix": "German Pulido wrote, On 04/05/2012 05:20 AM:\n\nWhen compiled undr CentOS 6.2 64 bits, the \" make install\" command will install the libraries to /usr/lib which is wrong, they should be installed to /usr/lib64.\n\nThat depends on how you configure the build system before you install. \nBut you and the build system should not install directly to /usr on a \nsystem where you have a working package manager. Arguably it should \ninstall to /usr/local by default.\nI would recommend using the freerdp package from EPEL instead. - or use \nthe spec distributed with FreeRDP.\n/Mads\n. German Pulido wrote, On 04/05/2012 05:25 AM:\n\nTrying to compile freerdp 1.0.1 under CentOS 6.2 fails unless I explicitly use -DWITH_ALSA=OFF. It fails with this error:\n...\n-- Configuring incomplete, errors occurred!...\nAnd in the ALSA configuration part, I get this:\n...\n-- Finding suggested package ALSA.\n--   Disable this using \"-DWITH_ALSA=OFF\".\nCMake Error at cmake/FindOptionalPackage.cmake:37 (find_package):\n   Could not find module FindALSA.cmake or a configuration file for package\n   ALSA.\nAdjust CMAKE_MODULE_PATH to find FindALSA.cmake or set ALSA_DIR to the\n   directory containing a CMake configuration file for ALSA.  The file will\n   have one of the following names:\nALSAConfig.cmake\n alsa-config.cmake\nCall Stack (most recent call first):\n   CMakeLists.txt:117 (find_suggested_package)...\n\nYes, alsa is considered an essential dependency that must be present \nunless explicitly disabled.\nWhat is the problem?\n/Mads\n. IIRC this was introduced with \"add RDP6 decompression\" Wed Mar 21.\n. I guess you need some of the X tools needed for keyboard handling in 1.0.\n. ",
    "gapf2010": "I agree that I should not be installing directly to /usr, but I am building my own RPM file (because I use the rpmforge repo and mixing it with EPEL repo is highly discouraged). However the question is: what should I do for freerdp to install and use libraries in the %prefix/lib64 directory instead of %prefix/lib?\nThanks!\nEdit:\nI think I found it: -DCMAKE_INSTALL_LIBDIR:PATH=%prefix/lib64  however, I think this should be set by default instead of always pointing to %prefix/lib\nRegards..\n. I think the bug is not solved. Using DCMAKE_INSTALL_LIBDIR:PATH to install in $PREFIX/lib64 is a workaround at best, and it doesn't change the fact that the default (installing to $PREFIX/lib) is wrong in a 64 bits distro. \n. Hi!\nActually I see two problems:\n1. Alsa is marked as suggested but you say it's essential. (however, freerdp build fine if alsa is marked OFF)\n2. Alsa is installed (alsa-lib and alsa-lib-devel) but the cmake configuration does not pick it, and I think it's because there is no ALSAConfig.cmake or alsa-config.cmake file.\nThanks!\n. ",
    "yuranikspb": "just launched http://postimage.org/image/a8q36d76r/\nafter expand one of menus http://postimage.org/image/odc3fexxj/   (full screen app or small window no difference)\n. ",
    "pykoder": "I spoted out the actual reason ithappens  sizeof(client_hostname) is used instead of strlen(client_hostname) in some places in args.c.\n. @isiaNT: when you say only 3 first symbol of clientname transferred, how does it get it if -n clientname. Do you mean it gets clientname from somewhere else that commande line argument ?\n. ",
    "IsiaNT": "please! need help,.. where can i find needed diff-file for args.c? without this my logon scripts not mount necessary shares automatic\nthanks\n. problem not fully solved with this patching \nlibfreerdp-core/gcc.c\nlibfreerdp-core/settings.c\nlibfreerdp-utils/args.c\nIn standard mode \"xfreerdp rdpsrv\" all work fine\nWith key \"--plugin rail.so --data \"||cmd\"\" problem remained, only 3 first symbol of clientname transferred.\nPS: key \"-n clientname\" is fully ignored with rail.so plugin \n. in simple mode (without \"--plugin rail.so...) in old version - freerdp transfers first 3 symbol of hostname of source client PC or first 3 symbol of string given in key -n. In new version of freerdp in simple mode (without \"--plugin rail.so..) all work fine so as in documetation. \nProblem with cutting sended variable \"clientname\" remained only when using key --plugin rail.so... and the more, parameter \"-n samplename\" with plugin is fully ignored. (in remote cmd session in output of command \"set\" variable \"clientname\" contains only first 3 symbol of real clientPC \"hostname\")\n. problem with cutting variable clientname in RemoteApp mode remains actual\n. all work fine and in RemoteApp mode.\nvery very big thanks...\nPS: after  fast reconnect parameter CLIENTNAME remained as in first connect, and this is normal behavior.\ngood job! all work fine as implied\n. ",
    "Gankov": "sorry i mistake, Segmentation fault because of another patch. \n. ",
    "souryogurt": "This issues is still happens on OSX SnowLeopard. \n``` bash\n$ uname -a\nDarwin MacBook-Pro.local 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386\n$ cc --version\ni686-apple-darwin10-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.1.00)\n```\n. I've tried to compile sources on OS X Lion and found that the wcsdup is present in it. But on OS X SnowLeopard it is absent. So this issue related only for OS X SnowLeopard. Could anyone confirm?\n. Probably, you should email about this to Ubuntu maintainers. http://packages.ubuntu.com/ru/source/precise/freerdp\n. ",
    "ipitcher": "Also, if anyone else has experienced this and/or come up with a good workaround, I would appreciate your comment here.\n. FWIW, I also tested to see if the settings were retained across sessions with rdesktop, and they were, so it would seem that this problem is definitely exclusive to FreeRDP.\n. ",
    "dago": "The problem is also reproducable on Solaris 10 i386 with Sun Studio 12 compiler.\n. ",
    "tschoenemann": "atong, I added the line :\n  set(CMAKE_C_FLAGS \"-threads\" )\ninto the file \"CMakeLists.txt\"   for the GCC compiler.\nAnd it WORKS now! Thanks!\nWill you submit this patch?\n. ",
    "otconn": "Hi.  I have been trying to add the line: set(CMAKE_C_FLAGS \"-threads\" ) or \"-threads\" as the above-mentioned suggestion in few places in CMakelist.txt, but I still have the same connection problem \"recv: Resource temporarily unavailable\" .  I complied on Solaris 11 and Solaris Sparc 10 with gcc 4.6.3\nCompiler-specific flags\nif(CMAKE_COMPILER_IS_GNUCC)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall\")\n    CHECK_C_COMPILER_FLAG (-Wno-unused-result Wno-unused-result)\n    if(Wno-unused-result)\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wno-unused-result\")\n    endif()\n    CHECK_C_COMPILER_FLAG (-Wno-unused-but-set-variable Wno-unused-but-set-variable)\n    if(Wno-unused-but-set-variable)\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wno-unused-but-set-variable\")\n    endif()\n    if(CMAKE_BUILD_TYPE STREQUAL \"Release\")\n        set(CMAKE_C_FLAGS_RELEASE \"-DNDEBUG\")\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -O2\")\n    endif()\nif(WITH_SSE2_TARGET)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -msse2\")\nendif()\nendif()\nCould you please specify where did you add the  gcc flag to make it work.  Thanks in advance.\n. ",
    "ccorbacho": "This looks like a duplicate of https://github.com/FreeRDP/FreeRDP/issues/437\n. ",
    "nicolyon": "I have test with the git actual version\n. ",
    "KevinBeaumont": "I'm seeing either this issue or a similar issue.\nSmall retangular blocks of screen render another part of the screen.\nExample photos:\nhttp://dl.dropbox.com/u/8284252/Display1.JPG\nhttp://dl.dropbox.com/u/8284252/Display2.JPG\nI've tried different -a settings, and setting --gdi to sw - doesn't appear to impact.   Against Win Server 2008 R2.\n. Just to confirm, I rolled up to git d76654be11 (22nd August 2012) of FreeRDP - the graphical artefact issue is fixed.  \nA change somewhere else since 1.0.1 release has introduced other stability issues, though - I see Session Broker only reconnect 50% of sessions now, and sometimes xfreerdp dies during screen updates.\n. I am also seeing same - Win 2008 R2 farm, Session Broker configured in group policy and load balancing (via RD Session Broker) configured on each server - however if a session is balanced to another server on login, segfault.  If it isn't balanced to another server, session is fine.\n. ",
    "lollipopman": "Thanks, I was looking in the manpage, #603\n. ",
    "yblein": "I have got the same failed with XUbu on a virtual machine\nLinux vbox 3.0.0-12-generic #20-Ubuntu SMP Fri Oct 7 14:56:25 UTC 2011 x86_64 x86_64 x86_64 GNU/Linux\n. ",
    "tfar": "So the issue is missing certificates? If so a warning/error would be nice, regardless it being experimental code or not. I think you guys are targeting to have a cross-platfom, stable, RDP server, right?\n. ",
    "shwarmy": "mpeg2, mpeg4, mkv, flash.\nOn Wed, May 30, 2012 at 9:31 AM, Dorian Johnson <\nreply@reply.github.com\n\nwrote:\nI don't think there are any solid plans. Which codecs would you most like\nto see support for?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/604#issuecomment-6011270\n. I thought about the h264 right after i sent that email.\n\nOn Wed, May 30, 2012 at 10:40 AM, Dorian Johnson <\nreply@reply.github.com\n\nwrote:\nmkv isn't a codec, it's a container. If you have something that will let\nyou watch mkvs in WMP, and the MKV has supported audio and video, it should\nalready work. (I think :)\nmpeg4 video is already supported (h264), as is mpeg2.\nI believe FLV is supported by ffmpeg, though I don't know much more than\nthat.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/604#issuecomment-6013229\n. Here is what I got when I tried that command. \nFailed to open audin_pulse.so cannot open shared object file: no such file or directory\n\nThen when I added the audin_pulse.so from the freerdp-plugins-1.0.1-2.el6.x86_64.rpm file I got the following error message. Symbol lookup error: audin_pulse.so: undefined symbol: pa_threaded_mainloop_new.\nI am using the following freerdp build. 1.0.1\nWhat are your thoughts?\n\nNick Swanzy\nOn May 21, 2012, at 4:56 PM, Dorian Johnsonreply@reply.github.com wrote:\n\n@shwarmy , Try this:\n   xfreerdp -u user -d domain --plugin drdynvc --data audin -- 192.168.1.100\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/FreeRDP/FreeRDP/issues/605#issuecomment-5834864\n. \n",
    "lysannschlegel": "xfi->srcBpp does not get updated during the deactivation-reactivation sequence. This breaks the color conversion if the color_depth changes in the sequence.\nIt's even dangerous, because the conversion algorithm might expect the buffer to be larger than it actually is.\nWhat about: context->settings->color_depth, where context is the xfContext?\nWorks for me, but I cannot test 15bpp.\n. You need to cast the context parameter to xfContext* to make it compile.\n. So the question is: change all references to xfi->srcBpp to use settings->color_depth instead, or find a way to update xfi->srcBpp?\nThe latter would need to happen in rdp_read_bitmap_capability_set or something related. This doesn't sound right, because the function is not x11 specific.\nOr maybe invoke the PostConnect callback again after the reactivation sequence? This is probably pretty complicated and it would also be an API change for this callback.\n. Note that in the dummy code describing bitmap decompression (http://msdn.microsoft.com/en-us/library/dd240593(v=prot.10).aspx) GetColorDepth is described as the color depth selected for the RDP session, and not the color depth sent along with the bitmap.\nAccording to this bitmap->bpp is wrong, and settings->color_depth is right (or xfi->srcBpp if it gets updated properly).\n. ",
    "idealhang": "At first ,thank you for answering my question.\nBut I MUST have installed  ffmpeg.Any other reasons?\nThank you.\n. Thank you for your reply.\nI can use the function of tsmf now,but it just be useful for MOV and MP4.Whether it works i install codecs now after i finish installing ffmpeg and FreeRDP.\nSorry,English is not my mother tongue and my English is very poor.So i don't know how to expree my appreciation clearly.Just thank you.\n. I'm trying to install freerdp with Multimedia Rederection,however fail always.The server OS is win7-ult and the client OS is UBUNTU12.04.I follow the  steps in https://github.com/FreeRDP/FreeRDP/wiki/Compilation and https://github.com/FreeRDP/FreeRDP/wiki/Multimedia-Redirection .Could you offer a usefull and complete installation document. \nthanks very much.\n. ",
    "soar": "Yes. Connections from local installed Windows 7 systems are successfull.\n. ",
    "jaroslawp": "SafeSign Identity Client 3.0.45\n. ",
    "zzeroo": "Sorry, that was a mistake from me. I had an error in my source tree. A fresh checkout compiled fine.\n. ",
    "kpush": "xfreerdp -f -u kpush 122.111.111.11\n. ",
    "Shumen": "This is a comiling error bug imported on fixing OpenSSL workarounds.\nYou could do this below to avoid this bug temporarily:\nat you git repo:\nsudo apt-get install build-essential git-core cmake libssl-dev libx11-dev libxext-dev libxinerama-dev libxcursor-dev libxdamage-dev libxv-dev libxkbfile-dev libasound2-dev libcups2-dev libxml2 libxml2-dev libavutil-dev libavcodec-dev\ngit checkout baa740d612f3c80f1b6b62ceef543497af959aad\ncmake . -DWITH_CUPS=OFF -DWITH_SSE2=ON\nmake xfreerdp\nclient/X11/xfreerdp hostname\n. 'baa740d612f3c80f1b6b62ceef543497af959aadf' is a former version which could be compiled successfully.\n. @awakecoding yes, it's not defined before openssl 0.9.9, SSL_OP_NO_COMPRESSION option was added after openssl 0.9.8a. See at: \nhttp://www.openssl.org/gitweb.cgi?p=geoff/openssl.git;a=commitdiff;h=6e33741ce37e9c4b6c084000e85b322a7778336a\nsearch with  '#define SSL_OP_NO_COMPRESSION', you'll see it's newly added.\n. Should 'OPENSSL_VERSION_NUMBER >= 0x00908000L' be 'OPENSSL_VERSION_NUMBER <= 0x00908000L'?\n. This happens when I use Win7's Windows media player to play an AVI video, with plugin options: --plugin drdynvc --data tsmf:audio:alsa -- --plugin rdpsnd --data alsa -- --plugin cliprdr\n. ",
    "felfert": "About other editors: See http://www.wireshark.org/tools/modelines.html\nI personally love modelines, you even can have multiple files from different projects open and still adhere to their styles. I must admit though, that I use sem only, if a project's style differs from my own prference (indentation 4 spaces).\n. I'm only certain about vi (vim). afaik emacs likes the end. And since both emacs and vi variant are in the \"End\"-example already, I think you can discard the Top-variant completely.\n. BTW: the lines between \"Local varables\" and \"End:\" are emacs syntax. then comes the vi (vim) line. The last line looks unfamiliar to me.\n. Oh, and my version is just the short form: (ts == tabstop, noet == noexpandtab, sw == shiftwidth)\n. ",
    "vansickle": "Thanks, glad to know it must work - I'll try to investigate problem deeper.\nP.S. I still working on Snow Leopard (hence my shared libraries different from yours), may be it's the problem/\n. ",
    "franckbrun": "Hello, I've got the same problem (OS X 10.7). I \"resolved\" it by link the CoreServices framework with xfreerdp (the main bin). \nBased on this issue: http://openradar.appspot.com/7209349. More test must be done...\n. ",
    "bailli": "Hm I added the brush style to libfreerdp-gdi, but somewhere the pattern gets shifted.\n(here are some screenshots the x11 one is the correct one: http://postimage.org/image/o9avpvhjf/ )\nAny idea whats the cause for this?\nEDIT: When starting from the upper left corner the pattern is correct in a 100x100 px wide square. Then the pattern is starting from the beginning, but since the base pattern has a size of 8x8px the \"old\" pattern is exactly in the middle of the base pattern.\n. The black line you are referring to marks the cursor position. The cursor is just at different position in the gdi screenshot...\nBut anyway, I will check the x11 implementation in detail against mstsc tomorrow at work.\nDoes anybody know other programs that use this brush style, to check the other patterns?\n. Sorry it took so long, but other issues kept coming up.\nI compared the PaintShop tiling from my current x11 build to mstsc (from WinXP) and they look the same. Some other patterns might not be perfect (for example the horizontal or vertical lines - is the line the 3rd or 4th pixel of the 8x8 pattern?), but I don't know any programs that use this brush...\n. ",
    "floe": "I've tried to isolate this issue with valgrind.\nTo summarize:\n- in ntlm_read_ChallengeMessage:368, the buffer allocated by ntlm_read_message_fields_buffer is too small\n- in ntlm_read_ChallengeMessage:406, data beyond the buffer's end is overwritten by ntlm_construct_authenticate_target_info\n==26052== Memcheck, a memory error detector\n==26052== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.\n==26052== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info\n==26052== Command: xfreerdp -g 1280x800 -d ... -u ... --plugin cliprdr --plugin rdpdr --data scard:scard -- ...\n==26052== \n==26052== Warning: ignored attempt to set SIGKILL handler in sigaction();\n==26052==          the SIGKILL signal is uncatchable\n==26052== Warning: ignored attempt to set SIGSTOP handler in sigaction();\n==26052==          the SIGSTOP signal is uncatchable\nloading plugin cliprdr\nloading plugin rdpdr\nconnected to ...:3389\nPassword: \n==26052== Thread 2:\n==26052== Invalid write of size 8\n==26052==    at 0x762E05A: ntlm_construct_authenticate_target_info (string3.h:85)\n==26052==    by 0x762F787: ntlm_read_ChallengeMessage (ntlm_message.c:406)\n==26052==    by 0x7630D93: ntlm_InitializeSecurityContextA (ntlm.c:432)\n==26052==    by 0x7A457F9: credssp_client_authenticate (nla.c:248)\n==26052==    by 0x568145A: transport_connect_nla (transport.c:136)\n==26052==    by 0x567C3B0: rdp_client_connect (connection.c:97)\n==26052==    by 0x5677E4F: freerdp_connect (freerdp.c:69)\n==26052==    by 0x411095: xfreerdp_run (xfreerdp.c:1096)\n==26052==    by 0x4114AB: thread_func (xfreerdp.c:1239)\n==26052==    by 0x6A3DE99: start_thread (pthread_create.c:308)\n==26052==  Address 0x963049e is 174 bytes inside a block of size 178 alloc'd\n==26052==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==26052==    by 0x762F19E: ntlm_read_message_fields_buffer (ntlm_message.c:145)\n==26052==    by 0x762F7F2: ntlm_read_ChallengeMessage (ntlm_message.c:368)\n==26052==    by 0x7630D93: ntlm_InitializeSecurityContextA (ntlm.c:432)\n==26052==    by 0x7A457F9: credssp_client_authenticate (nla.c:248)\n==26052==    by 0x568145A: transport_connect_nla (transport.c:136)\n==26052==    by 0x567C3B0: rdp_client_connect (connection.c:97)\n==26052==    by 0x5677E4F: freerdp_connect (freerdp.c:69)\n==26052==    by 0x411095: xfreerdp_run (xfreerdp.c:1096)\n==26052==    by 0x4114AB: thread_func (xfreerdp.c:1239)\n==26052==    by 0x6A3DE99: start_thread (pthread_create.c:308)\n==26052== \n==26052== Invalid write of size 4\n==26052==    at 0x762E061: ntlm_construct_authenticate_target_info (string3.h:85)\n==26052==    by 0x762F787: ntlm_read_ChallengeMessage (ntlm_message.c:406)\n==26052==    by 0x7630D93: ntlm_InitializeSecurityContextA (ntlm.c:432)\n==26052==    by 0x7A457F9: credssp_client_authenticate (nla.c:248)\n==26052==    by 0x568145A: transport_connect_nla (transport.c:136)\n==26052==    by 0x567C3B0: rdp_client_connect (connection.c:97)\n==26052==    by 0x5677E4F: freerdp_connect (freerdp.c:69)\n==26052==    by 0x411095: xfreerdp_run (xfreerdp.c:1096)\n==26052==    by 0x4114AB: thread_func (xfreerdp.c:1239)\n==26052==    by 0x6A3DE99: start_thread (pthread_create.c:308)\n==26052==  Address 0x96304a6 is 4 bytes after a block of size 178 alloc'd\n==26052==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==26052==    by 0x762F19E: ntlm_read_message_fields_buffer (ntlm_message.c:145)\n==26052==    by 0x762F7F2: ntlm_read_ChallengeMessage (ntlm_message.c:368)\n==26052==    by 0x7630D93: ntlm_InitializeSecurityContextA (ntlm.c:432)\n==26052==    by 0x7A457F9: credssp_client_authenticate (nla.c:248)\n==26052==    by 0x568145A: transport_connect_nla (transport.c:136)\n==26052==    by 0x567C3B0: rdp_client_connect (connection.c:97)\n==26052==    by 0x5677E4F: freerdp_connect (freerdp.c:69)\n==26052==    by 0x411095: xfreerdp_run (xfreerdp.c:1096)\n==26052==    by 0x4114AB: thread_func (xfreerdp.c:1239)\n==26052==    by 0x6A3DE99: start_thread (pthread_create.c:308)\n==26052== \nregistered device #1: SCARD (type=32 id=1)\nregistered device #1: SCARD (type=32 id=1)\nregistered device #1: SCARD (type=32 id=1)\nClosed from X\n==26052== \n==26052== HEAP SUMMARY:\n==26052==     in use at exit: 157,827 bytes in 4,009 blocks\n==26052==   total heap usage: 13,548 allocs, 9,539 frees, 7,123,329 bytes allocated\n==26052== \n==26052== LEAK SUMMARY:\n==26052==    definitely lost: 681 bytes in 12 blocks\n==26052==    indirectly lost: 136 bytes in 6 blocks\n==26052==      possibly lost: 816 bytes in 3 blocks\n==26052==    still reachable: 156,194 bytes in 3,988 blocks\n==26052==         suppressed: 0 bytes in 0 blocks\n==26052== Rerun with --leak-check=full to see details of leaked memory\n==26052== \n==26052== For counts of detected and suppressed errors, rerun with: -v\n==26052== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 2 from 2)\n. OK, I think I've traced this down to line ntlm_av_pairs.c:363 - I'm pretty sure that should read \nZeroMemory((void*) AvEOL, 4);\ninstead of 12.\n. ",
    "gersondiesel": "This error only occurs when used with \"--plugin rdpsnd --data alsa\".\nIf no sound is used, no error.\n. ",
    "xtsidx": "In other Windows machine similar problem.\nIn other applications the same problem.\nIn Fedora 17 xfreerdp behaves similarly.\nPlease view this screencast, to see how it happens:\nwww.youtube.com/watch?v=b3YohhBRZTA&t=2m28s\n. ",
    "gara-MI": "I have also same problem.\nthe output of DVC and X11 XV is as follows.\nxfreerdp --no-nla -u xxx -p xx -g 800x600 --plugin drdynvc --data tsmf -- xxx.xxx.xxx.xxx\nloading plugin drdynvc\nDBG_CHANNELS freerdp_channels_load_plugin (677): drdynvc\nDBG_CHANNELS MyVirtualChannelInit (295): enter\nDBG_CHANNELS freerdp_channels_pre_connect (740): enter\nconnected to xxx.xxx.xxx.xxx:3389\nDBG_CHANNELS freerdp_channels_post_connect (794): hostname [xxx.xxx.xxx.xxx] channels->num_libs [1]\nDBG_CHANNELS MyVirtualChannelOpen (389): enter\nDBG_DVC drdynvc_process_connect (321): connecting\nDBG_DVC dvcman_register_plugin (143): num_plugins 0\nDBG_DVC tsmf_plugin_initialize (377): \nDBG_DVC dvcman_create_listener (98): 0.TSMF.\nDBG_XV xf_tsmf_init (92): version 2 release 2\nDBG_XV xf_tsmf_init (105): adapter port 62-62 (VMware Video Engine)\nDBG_XV xf_tsmf_init (118): selected 62\nxf_tsmf_init: pixel format YV12 YUY2 UYVY \nDBG_DVC drdynvc_process_receive (290): Cmd=0x5\nDBG_DVC drdynvc_process_capability_request (158): Sp=0 cbChId=0\nDBG_DVC drdynvc_process_receive (290): Cmd=0x1\nDBG_DVC drdynvc_process_create_request (208): ChannelId=0 ChannelName=PNPDR\nDBG_DVC drdynvc_process_create_request (224): no listener\nDBG_DVC drdynvc_process_receive (290): Cmd=0x1\nDBG_DVC drdynvc_process_create_request (208): ChannelId=0 ChannelName=TSMF\nDBG_DVC tsmf_on_new_channel_connection (360): \nDBG_DVC dvcman_create_channel (321): listener TSMF created new channel 0\nDBG_DVC drdynvc_process_create_request (219): channel created\nDBG_DVC drdynvc_process_receive (290): Cmd=0x3\nDBG_DVC drdynvc_process_data (260): ChannelId=0\nDBG_DVC tsmf_on_data_received (138): cbSize=16 InterfaceId=0x2 MessageId=0x0 FunctionId=0x100\nDBG_DVC tsmf_ifman_rim_exchange_capability_request (38): server CapabilityValue 1\nDBG_DVC tsmf_on_data_received (315): response size 16\nDBG_DVC drdynvc_write_data (83): ChannelId=0 size=16\nDBG_DVC drdynvc_process_receive (290): Cmd=0x3\nDBG_DVC drdynvc_process_data (260): ChannelId=0\nDBG_DVC tsmf_on_data_received (138): cbSize=12 InterfaceId=0x2 MessageId=0x0 FunctionId=0x1\nDBG_DVC drdynvc_process_receive (290): Cmd=0x3\nDBG_DVC drdynvc_process_data (260): ChannelId=0\nDBG_DVC tsmf_on_data_received (138): cbSize=32 InterfaceId=0x40000000 MessageId=0x0 FunctionId=0x101\nDBG_DVC tsmf_on_data_received (177): SET_CHANNEL_PARAMS StreamId=0\nDBG_DVC drdynvc_process_receive (290): Cmd=0x3\nDBG_DVC drdynvc_process_data (260): ChannelId=0\nDBG_DVC tsmf_on_data_received (138): cbSize=12 InterfaceId=0x40000000 MessageId=0x0 FunctionId=0x1\nDBG_DVC drdynvc_process_receive (290): Cmd=0x4\nDBG_DVC drdynvc_process_close_request (271): ChannelId=0\nDBG_DVC dvcman_close_channel (374): dvcman_close_channel: channel 0 closed\nDBG_DVC dvcman_close_channel_iface (283): id=0\nDBG_DVC tsmf_on_close (334): \nDBG_DVC drdynvc_process_receive (290): Cmd=0x1\nDBG_DVC drdynvc_process_create_request (208): ChannelId=1 ChannelName=TSMF\nDBG_DVC tsmf_on_new_channel_connection (360): \nDBG_DVC dvcman_create_channel (321): listener TSMF created new channel 1\nDBG_DVC drdynvc_process_create_request (219): channel created\nDBG_DVC drdynvc_process_receive (290): Cmd=0x3\nDBG_DVC drdynvc_process_data (260): ChannelId=1\nDBG_DVC tsmf_on_data_received (138): cbSize=16 InterfaceId=0x2 MessageId=0x0 FunctionId=0x100\nDBG_DVC tsmf_ifman_rim_exchange_capability_request (38): server CapabilityValue 1\nDBG_DVC tsmf_on_data_received (315): response size 16\nDBG_DVC drdynvc_write_data (83): ChannelId=1 size=16\nDBG_DVC drdynvc_process_receive (290): Cmd=0x3\nDBG_DVC drdynvc_process_data (260): ChannelId=1\nDBG_DVC tsmf_on_data_received (138): cbSize=12 InterfaceId=0x2 MessageId=0x0 FunctionId=0x1\nDBG_DVC drdynvc_process_receive (290): Cmd=0x3\nDBG_DVC drdynvc_process_data (260): ChannelId=1\nDBG_DVC tsmf_on_data_received (138): cbSize=32 InterfaceId=0x40000000 MessageId=0x0 FunctionId=0x101\nDBG_DVC tsmf_on_data_received (177): SET_CHANNEL_PARAMS StreamId=0\nDBG_DVC drdynvc_process_receive (290): Cmd=0x3\nDBG_DVC drdynvc_process_data (260): ChannelId=1\nDBG_DVC tsmf_on_data_received (138): cbSize=12 InterfaceId=0x40000000 MessageId=0x0 FunctionId=0x1\nDBG_DVC drdynvc_process_receive (290): Cmd=0x4\nDBG_DVC drdynvc_process_close_request (271): ChannelId=1\nDBG_DVC dvcman_close_channel (374): dvcman_close_channel: channel 1 closed\nDBG_DVC dvcman_close_channel_iface (283): id=1\nDBG_DVC tsmf_on_close (334):\n. ",
    "myhasti": "Dear Dorian\nThanks for your answer,\nAfter all my problem has been solved, but I have two problem about \"audio\" and \"stay on top\".\n1- When I'm using below command for playing the \"Big Buck Bunny\" with Windows Media Player, I can hear audio on the client side, \nxfreerdp -u xxxx -p xxxx --plugin drdynvc --data tsmf -- x.x.x.x\nbut I can't control volume (increase or decrease) with Windows Media Player volume controller or with Volume Mixer, however I can change volume with Ubuntu volume controller.\nand when I'm using this command : \nxfreerdp -u xxxx -p xxxx --plugin drdynvc --data tsmf:audio:pulse -- x.x.x.x\nor \nxfreerdp -u xxxx -p xxxx --plugin drdynvc --data tsmf:audio:alsa:plughw:0,0 -- x.x.x.x\nI can't hear anything. \n2- When multimedia redirection is enable and a movie is playing with Windows Media Player, the media player is going to \"Always on top\" mode and all off windows stay behind the media player, but when  Multimedia Redirection is disable, all windows (media player and other windows) are in normal situation.\n. ",
    "orbisvicis": "You should release a new version, or use preprocessor conditionals to keep compatibility between API changes.\n. ",
    "pkolmann": "@sanerit, what keyboardlayout are you using / how do you call xfreerdp?\nProbably you need to add -k 0x0000040C (see xfreerdp --kbd-list)\n. ",
    "AdmiralNemo": "Okay, I have done some checking, and I now have two systems with a working FreeRDP install, but the one that counts still doesn't work. On all three systems, OpenSSL was built with the same CFLAGS, etc. variables:\nCFLAGS=\"-O2 -pipe\"\nCHOST=\"x86_64-pc-linux-gnu\"\nLDFLAGS=\"-Wl,-O1 -Wl,--as-needed\"\nOpenSSL USE flags: kerberos zlib\nFreeRDP USE flags: X alsa sse2\nOn the system that doesn't work, I have tried OpenSSL versions 1.0.0h and 1.0.0j; neither works.\nOn the two other systems that do work, I have OpenSSL 1.0.0h and 1.0.1c, both of which work.\nHow can I get more information about what is causing the problem? I tried running inside strace, but nothing helpful is printed.\n. Yes, I built FreeRDP again this morning from b6a9937fa13fb5a07671789b23ab3beeb5ba79e6, but it exhibits the same behavior. I just finished an emerge -e openssl to rebuild OpenSSL and all of its dependencies, but that didn't seem to help either.\nThe OpenSSL ebuild doesn't seem to have a debug USE flag anymore, so I will have to look into building it manually. I'll also try building everything in a chroot and see what that yields.\n. Some progress: while investigating a possible issue related to CA certificates (my company uses an internal CA that signs most RDP certificate), it occurred to me that the problem could also be related to my credentials (in the working environment, I have a relatively short password, but in the nonworking environment, I have a very long password). I did find that although the password length was not the problem, I think the domain name might be.\nHere are the results of my tests:\n- Using no domain: does not work\n- Using domain name softek.local: does not work\n- Using domain name SSI: works\n- Using domain name pyrocufflink.jazz: works\n- Using domain name PYROCUFFLINK: works\n- Using (fake) domain name foo: works\n(by \"works\" I mean connects, launches a remote desktop window, and logs in to the remote machine, while by \"doesn't work\" I mean aborts with the error in the original report)\nNote that SSI is the NetBIOS name for softek.local, where PYROCUFFLINK is the NetBIOS name for pyrocufflink.jazz. This behavior is consistent with every machine on the softek.local domain that I have tried, including Windows 7, Windows Server 2008, and Windows Server 2008 R2. These are independent domains (i.e. no trust relationship between them), so there are no machines that would accept both domains.\nI guess I can reprogram my hands to type -d SSI instead of -d softek.local, and since I have already removed all of my Remmina configurations during troubleshooting, I can recreate them with that as the domain as well. Still, it does seem like a bug in FreeRDP that I cannot use softek.local, even though I used to be able to and it works from the Windows RDP client.\n. ",
    "MikeMcQuaid": "Wow; that was quick!\n. ",
    "elangelo": "sorry, saw there are already 2 duplicates of this bug\n. ",
    "thirsd": "@bmiklautz. just like 668 in  FreeRDP-FreeRDP-1.0.1-688-g6155e37.zip \nBTW,  i run one ubuntu 9.10 on arm v7 , to connect winserver 2008\n. @bmiklautz , Thanks for your help! I have solved the problem by   installing libxrandr-dev package.\nsudo apt-get install libxrandr-dev\nthen \nrebuild freerdp , got it \n. ",
    "mikix": "Actually, with my off-the-cuff test, I'm not sure if it's merely printing \"Password:\" or actually blocking on me entering a password.  Either way, it's a bug.  But one is much less severe than the other.\n. ",
    "LawrenceK": "No I did not want all 6 changes merged, just a334f4f.\n. ",
    "jolinar": "Have the same bug with keyboard, from a box running a VNC server and inside running a xfreerdp. How can I help?\n. ",
    "jahrra": "Same issue here. also Ubuntu 12.04.1 x64\nInstalled freerdp-x11, remmina, remmina-plugin-*, but only SFTP, SSH and VNC show up under \"Protocol\". RDP and the other plugins are missing.\n. ",
    "h113331pp": "Oops, my old version rdp use --plugin rdpdr --data scard --, and after typing the missing \":scard\", It can works on my Windows server 2008. but still not working on my Win7, and I believe this is a Windows settings issue.\nThanks, your advice is really helpful.\nand I wonder is there a hole command table about the new version rdp? I still search this table on freerdp website.\n. ",
    "timroes": "I have 3 monitors in horizontal layout, each a resolution of 1920x1080. I use a Saphire Radeon HD 5770 Flex, so no Xinerama or similiar involved, just common xserver.\n. If i start it with -f the fullscreen is also that limited size, exactly 4096x1080 according to windows (4096 = 4*1024 coincidence?) \nAnother strange behavior: I said that it only occurs with the rail plugin used. Thats only true for -g workarea. In fullscreen mode also without the rail plugin, it just uses the limited area of the screen.\n. It might be related, since it behave the same way with my screen. But the core of this bug is, that there is a limit in the area, not that the screens are handled as one big screen. So I think these bugs should be handled separately.\n. The server is a Windows Server 2008. That would explain that behavior. Imho that is still stupid behavior, since i even don't maximize the windows on that size, so why are they also \"moved\" on the display of the server, to its limit, if the space left of it isn't even transfered to the client, since it is outside the RemoteApp Window. (I hope someone can understand, what I mean :D) So if its server limitation, I guess there is no way to fix this?\n. Thanks for that very detailed answer. I have just one more question. Why do the window need to have the same position on the server and the client? Shouldn't any application work without knowing where it is? I cannot think of an example where it needs to know what actual position it has.\n. ",
    "olegon-ru": "Workaround is to use: \n--sec rdp\nparameter\n. ",
    "ArthurGodoy": "Thanks Marc-Andre!\nAll was good until the connection start (server is Windows 7, client is Windows 8) and dropped with:\nClient Security: NLA:1 TLS:1 RDP:0\nServer Security: NLA:1 TLS:1 RDP:0\nNegotiated Security: NLA:1 TLS:0 RDP:0\ncreating directory /.freerdp\\certs\ncertificate_store_open: error opening [/.freerdp\\known_hosts] for writing\nTLS connection accepted\nioctlsocket() failed with error: -1\nWhere should i create these directories? Or i should start the server with another parameter (started with no parameter)?\nArthur\n. I tried with all security disabled and before prompt the client for the password information i just got a error:\nStarting server\nListening on :: port 4489.\nListening on 0.0.0.0 port 4489.\nupdateEvent created\nActivating Mirror Driver\nChangeDisplaySettingsEx() failed with DISP_CHANGE_BADPARAM (-5)\nCould not create device driver context!\nRegistering Peer: 1\nsocketEvent created\nWe've got a client 192.168.11.108\nSetting Handles\nPeerSocketListener\nI installed with no error the MirageDriver (Win7 x64).. \n. No. I am running wfreerdp-server on a Win7 x64 natively. Client is mstsc.exe of Win8 Pro.\nAfter i try to logon i got this error:\nError: expected X224_TPDU_CONNECTION_REQUEST\nIncorrect TPDU length indicator.\nFailed to check peer file descriptor\nClient 192.168.11.108 disconnected.\nExiting Peer Socket Listener Thread\nUnregistering Peer: 0\nExiting Peer Main Loop Thread\nI will try to reboot the machine because i didnt do it after install mirage driver.\n. I just rebooted the server machine and the driver worked! Thanks!\nBut i notice a lag (screen updating the pieces too slow) of 2 seconds in a LAN. This is normal?\n. i just used the option that you suggested:\n\"cmake -DWITH_SERVER=on .\"\nI will try with SSE2\n. same 2 seconds with SSE2 enabled. I noticed that playing a youtube video use 43% of cpu, without the rdp session uses just 16%.. There is any another optimization that i should do?\n. tried the ms rdp session (without remotefx because i am running on win7) and got less thant 1 second lag and ~18% of cpu usage..\n. I installed a win8 machine to test the wfreerdp-server and its much faster than win7+mirror driver! I got <1 second delay.\nBut i noticed that fullscreen application are not captured (like D3D ones). Log said: \n\"Failed to acquire next frame\nFailed to release frame\nFailed to get frame move rects\nFailed to create staging surface\".\nAnd even with the application on windowed mode sometimes the server failed (shutdown) with \"Failed to acquire next frame\".\nDirectX applications dont work with wfreerdp-server??\n. ",
    "xibinliu": "Thanks! I've tried the following and it seems working. Hope a clean solution can be provided...\nifdef OBJC_BOOL_DEFINED\ndefine BOOL OBJC_BOOL\nendif\ntypedef int BOOL, PBOOL, LPBOOL;\n. ",
    "tsol": "version from git 26.09.2012 (but problem also exist from 1.0.0 version)\n. Turning on debug shows what happens when quality change occures - format suddenly gets changed by server:\nDBG_SVC rdpsnd_process_message_wave_info (295): waveDataSize 4096 wFormatNo 5\nDBG_SVC rdpsnd_process_message_wave_info (295): waveDataSize 1024 wFormatNo 13\nFull debug files are available for download by link.\n2003.txt is from windows 2003 session, 2008R2.txt is from windows 2008R2 session.\nBoth log files are written by latest freerdp from git and both show format change while playing.\nhttp://tsol.spb.ru/download/2003.txt\nhttp://tsol.spb.ru/download/2008R2.txt\n. Exploring the issue we came to the following conclusion. Despite that rdpsnd plugin sends to the server quality mode setting,\nWindows Server 2008R2 server ignores it completely:\nstatic void rdpsnd_process_message_formats(rdpsndPlugin* rdpsnd, STREAM* data_in)\n{\n/.../\n       if (wVersion >= 6)\n        {\n                data_out = stream_new(8);\n                stream_write_uint8(data_out, SNDC_QUALITYMODE); /* msgType /\n                stream_write_uint8(data_out, 0); / bPad /\n                stream_write_uint16(data_out, 4); / BodySize /\n                stream_write_uint16(data_out, HIGH_QUALITY); / wQualityMode /\n                stream_write_uint16(data_out, 0); / Reserved /\n                svc_plugin_send((rdpSvcPlugin)rdpsnd, data_out);\n        }\n}\nWorkaround for this is to set audio quality on the server side.\n1. Through policy settings:\n   Computer Configuration\\Administrative Templates\\Windows Components\\Remote Desktop Services\\Remote Desktop Session Host\\Device and Resource Redirection\n   Limit audio playback quality     Enabled\n   Audio Quality:     High\n2. Through direct resgistry edit:\n   [HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services]\n   \"AllowedAudioQualityMode\"=dword:00000007 \nHaving done that we no longer experience sound quality changes with freerdp 1.0.1 (and git version). Seldom sound cracks persist but they are rare and\nseem to be related to high network or cpu load (extensive site scrolling in rdp session for example). \nWe couldn't find such server setting in Windows 2003 Server. And besides that the sound is really choppy with Windows 2003 server and freerdp 1.0.1.\nThe only solution we've found is to use old rdpsnd module from freerdp 0.8.2. \nWith that module no qualty switches or sound cracking occur while playing sound!\nSo questions are:\n1. Why Windows 2008R2 server ignores sound quality mode setting (HIGH) from freerdp 1.0.1 client and uses it's own settings (DYNAMIC)?\n2. Why freerdp 1.0.1 when used with Windows 2003 server has awfull sound cracking problems and quality switches?\n. ",
    "richterger": "I think \"error store\" is a confusing name. What I try to achieve is a better error handling.\nEver since I used freerdp it was very annoying that errors only printed to stdout. If a connection fails not even the exit code was set to a non zero value. On windows this means no error message at all, same if you start it on Linux for a GUI. Imagine a user is starting w/xfreerdp, has a typo in the ip address and doesn't get any error message (on windows/gnome/kde). That is simply not usable for an ordinary user, regardless how great the rest of the software is. When I learned something during my programming practice, then that having good error messages saves a lot of time and nervs.\nFreerdp has good error message, which give a correct feedback, but at least if started from a GUI you don't see them so they are useless.\nTo improve this situation, the first thing, which I think is necessary, is to have one point to gathers all errors. The function error_report (I don't like the name, but I didn't found anything better) in my patch serves this purpose. It would be even better if, we could pass an additional information (like error/warn/info..), but in a first place, I wanted to have this central place to catch errors and going through all printf and doing the replacement was time consuming enougth. Having a decent name, allows to easier enhance things, like adding more parameters.\nI don't know much about these Windows 8 API sets, but EventLog is like syslog and the purpose of my patch was to give a correct user feedback, not an aproach for logging. I am not aware of any function that serves that purpose in the Windows API (and doing a quick scan of the API sets, doesn't show anything new to me).\nThe error_report function is the central place to gather error messages, from there it can be decided what to do (alarm the user, log it to syslog/eventlog or discard it). At the moment I simply save them in a list, which gets show when wfreerdp terminates. In addition the errors are printed to stderr.\nI called it error store, because the messages are stored, because there is often more than one message that is important. So you don't get a message rdp connection fail, but you also get the \"inner\" message that connect to x.y has failed, which is very much helpfull. Either during debugging, but also for end users and during IT support.\nFrom the length of my reply you can see that this is a very important point for me. I am open to any idea which fits better in the design of freerdp, but don't having a error reporting for people that are not working from the command line, will cause freerdp to be a hacker tool and I think that freerdp is really a great piece of software, that does not deserve to be misunderstood.\nThat are only my 2 cents. I just wanted to explain the intention of my patch. Maybe this clearify it a little bit more. You know the design of freerdp much better than me, so I am happy if we find a better way to implement my intention. \nRegarding the http proxy support: This is a feature that other clients like Citrix or vmware view support too. It simply allows you to use the CONNET method of a http proxy, to gain access to the outside in a network that otherwise might don't let you out. Most http proxies allows to make a connect to port 443 of any host in the internet, so if you run a rdp server on Port 443 (or configure your firewall, to make a port translation from 443 to 3389) you can use it to get a connection in a network where any direct internet connection is blocked. \n. @awakecoding Great! I am happy to hear that you merged my stuff :-) BTW a lot of the work was done by my colleague, I think you already talked to him in IRC.\nOf course we should take the time to think about the design, before going in the wrong direction.\nI am not aware of anything in the Win32 API that would directly fit our purpose. I think we need some central error/log/debug handler, that can log stuff, write it to a stderr, syslog, eventlog or inform the user with a popup. I know that QT and wxWidgets have such API's.\nI will rescan the Win32 API, but I don't have much hope to find anything suitable.\n. P.S. I will put something together regarding the proxy tomorrow\n. @awakecoding I merged the new FreeRDP/master back into my repo and it does not compile anymore on windows:\nmsusb.h requires something like:\nifdef WIN32\ndefine attribute(a)\nendif\nand dvcman.c use a phtread mutex which is not available on windows. Shouldn't it use CreateMutex etc. from winpr/win32 api?\n. github converted the __ into bold, so it sould be underscore underscore attribute underscore underscore (a)\n. ",
    "ted-gould": "Ah, sorry.  Made my patch against 1.0.1, then tried to match the code movement and missed that change.  Added back and pushed an updated branch.  (not sure if the pull request will update or not, but I'd hope so).\n. ",
    "ccpp": "I chose this simplistic way of certificate matching because Apache does it the same way in its ssl module\n. Hi! Good point. The reason behind this was not to change any code that is not in my #ifdef.\nBut I can implement it too by adding an #ifdef-#else block around the two invocations of tcp_connect(). Would that be an improvement in your eyes? (Less copied code)\n. I'd add a check if the buffer is full and throw an error \"HTTP Proxy reply header too long.\"\nShould I increase the buffer size for being on the safer side?\n. Yes, 12 is for that. Note to myself, should check strlen(), not resultsize.\nFor the HTTP/1.X, I'll add a strncmp for everything up to the X.\n. Oops! It's one of the things developers don't care about. Will-do!\n. True. But I still want to know that the returned eol is not a bad pointer :)\n. Sorry, what do you mean by your 2nd comment \"does your patch apply for any kind of transport?\"\n. Attention, the last argument should be FALSE here. I am not so sure about whether HAVE_POLL_H is always undefined in Win32.\nIMO, this statement at worst has no effect, and at best avoids an error in Windows. @akallabeth wat do you think?. I made a test run and it seems now all commands required for the test run are handled in this function. The only difference would be in the command BIO_C_GET_EVENT, where status can be left untouched (which did not happen in my test run).\nI agree, Initializing with -1 would be a reasonable future-proof improvement. @akallabeth any objections? Or is the PR good to go? :). @p-pautov fair point!. @p-pautov @akallabeth Done. The cases BIO_C_GET_EVENT and BIO_C_GET_FD are now handled together as they are unique now.\nOne might ask why a switch/case is not used here instead of else-ifs, however I'd rather not change it anymore because it would produce a lot of changed LOC. @p-pautov That would indeed look more complete, however I think it would be dead code (in my tests the command was never called. There is only one call to BIO_get_fd in the entire project). Oops.. that's a bug in my implementation of proxy_prepare. Probably isHTTP should be handled correctly there! Would you mind adding such an if-statement to the PR?\nBut, just for the sake of \"semantically correct code\", why do you pass TRUE then at all, if it changes nothing? Do you explicitly want the environment variables to be picked up? And, what is the initial comment you are referring to?\nA decent url parser would be a good idea indeed. It should be centralized for both command line and environment variable. It is not implemented like this now, only because either a public symbol would be needed in libfreerdp, or the rdpSettings have to be changed to pass the unparsed URL instead of type/host/port. I guess, this would be a task for a separate issue / PR :). @p-pautov I'd expect the same. But please test it! I did, and I asked to test for a reason... (e.g. things might work differently on other OSs or clients.)\nMy observations on this:\n- Returning -1 would make the test fail anyway, so... it's not been called! (again, please test! If it does fail then I accept that I might be wrong here)\n- Digging deeper, the actually invoked ctrl is that of RDG and not -- as we expected -- TSG.\n- Probably, TLS is not running on top of TSG, but on top of RDG. But I do not know about these details.. ",
    "hardening": "Comment should be updated to 1 second.\n. Sorry i didn't have enough scope in the diff view, and seeing a comment \"sleeping 2 seconds\" with the next line usleep(1000) is odd.\nPerhaps the comment could be moved above before the loop on keep_waiting.\nSleeping 1ms 2000 times look very much like an active waiter, but i guess gstreamer doe not have any other method for doing it.\n. timerfd appeared in 2.6.25 (mid 2008) and support in glibc started with 2.8, this is not so old perhaps we should check that timerfd is available in the CMakefiles ....\ntimerfd are great.\n. i had see that one, you were faster than me to submit it\n. This case should be handled next with SSL_get_error() which will return SSL_ERROR_ZERO_RETURN.\nextract from man SSL_read():\nRETURN VALUES\n 0   The read operation was not successful. The reason may either be a clean shutdown due to a \"close notify\" alert sent by\n           the peer (in which case the SSL_RECEIVED_SHUTDOWN flag in the ssl shutdown state is set (see SSL_shutdown(3),\n           SSL_set_shutdown(3)). It is also possible, that the peer simply shut down the underlying transport and the shutdown is\n           incomplete. Call SSL_get_error() with the return value ret to find out, whether an error occurred or the connection was\n           shut down cleanly (SSL_ERROR_ZERO_RETURN).\n. @sidhpurwala-huzaifa the check is incorrect as sizeof(LICENSE_BLOB) is the size of the memory structure representing a LICENSE_BLOB, not the size of the BLOB itself\n. @fweimer I disagree, it doesn't make any sense to check lengths between wire data and in memory ones. The check above is too restrictive as sizeof(LICENSE_BLOB) is bigger than 4, and in theory we could have a serie of 0 length blobs and in that case each blob would be 4 bytes in the stream.\nThe best fix would probably be to put a limit of the acceptable number of blobs as obviously it will never be 2^32.\n. I'm very suspicious about this crash... But sure the shutdown message is not needed when the tcp socket has been closed.\n. @vworkspace do you have a relevant valgrind stacktrace for that case ?\n. IMHO this big statement could be moved/mutualized in the if(transport->settings->GatewayEnabled) that is below, as this is just in TSG mode\n. What happens if we don't find \\r\\n\\r\\n in the first 256 bytes ?\nI didn't test but I'm not sure it's not an infinite loop (depends on what returns tcp_read when it is instructed to read 0 bytes).\n. I guess 12 is for len('HTTP/1.1 200'), shouldn't we check that it is beginning with HTTP/1.X \n. s is leaked in that case and in other early returns. My advise: after the last return in this function add that:\nout_error:\n     Stream_Free(s);\n     return FALSE;\nAnd on any error goto out_error\n. this really can't happen when your only exit loop condition is strstr('\\r\\n\\r\\n')\n. does your patch applies for any kind of transport, if so, my remark above is not pertinent\n. You're right I had missed the case where the first line would contain a \\0 before \\r\\n\\r\\n\n. Don't be frighten to have your code tighly integrated with the existing one, once the PR accepted it will be FreeRDP's code. So your addings should have the same look as the original code.\n. @ccpp I was meaning that you can connect through an HTTP proxy even if using TLS as RDP transport\n. these ms guys are so lovely\n. @awakecoding do you have any opinion on this one ?\nIMHO the callers should be fixed, so that if there's no remaining bytes in the stream they should not try to read a server certificate. And if so the check can be safely removed.\n. 16384 is 64 * 64 * 4, don't know if it would make sense to use bpp instead of hardcoded 4 ?\n. @nfedera no sure this will do the job as depending on the order of received capabilities, we could re-enable remoteFx when receiving the codec capability set.\n. @MartinHaimberger totally right I (and the original code) forgot to check the result of rpc_client_new() (which doesn't do a proper cleanup too !) \n. such checks must be done at the upper layer\n. nego->RoutingTokenLength should be checked in the case of length == 1\n. perhaps we could do \nlistener = (DVCMAN_LISTENER *) calloc(1, sizeof(DVCMAN_LISTENER));\nplus check return value here.\n. you broke FreeRDP code style here\n. Using an early return would greatly simplify the function.\nWhat about locking ? dvcman_find_channel_by_id locks and this function doesn't, is it the intentional ?\n. What about a big \nswitch(state) {\ncase GST_STATE_PLAYING:\n    return NAME_GST_STATE_PLAYING;\n...\n. Too bad ArrayList_RemoveAt() doesn't call the free cb when removing the item !\n. perhaps with a if (--pipe->dwRefCount != 0) return TRUE\nwe would have less if() levels...\n. I don't know how behave aligned_realloc, but realloc(NULL, sz) == malloc(sz). Moreover if realloc fails bitmap->data is leaked.\n. Shouldn't it be something like #ifdef HAVE_OPENH264 ?\n. same remark as above for realloc()\n. if xf_Pointer_New() can fail perhaps it should return a BOOL to indicate the status.\n. shouldn't it be const BYTE pSrcData ?\n. shouldn't we change to const BYTE* pSrcData ?\n. return value should be checked\n. check return value\n. 1002 and 1003 magical values ?\n. - leaked memory on realloc fail \n- and realloc(NULL, sz) == malloc(sz)\n. clear->TempBuffer leaked if realloc fails\n. check return value\n. return value not checked\n. don't we leak memory with this early exit that doesn't cleanup ?\n. I've read the article and I really don't know who would want a pthread_suspend() function. When a thread gets suspended it should always be a volontary action (from the thread). Otherwise you can get suspended with some mutex hold and lead to a deadlock.\n. typo here dat.a\n. C comments ?\n. C comments\n. This CVS thing could be dropped isn't it ?\n. #error \"not supported\" should be better here, isn't it ?\n. Looks like there's some unmerged pieces here\n. missing space here\n. missing checks for enough bytes to read, the same apply for next treatments\n. Is it really safe to force values that are out of range ?\n. We usually use a \\n here\n. Shouldn't it be const void * instead of void \n. Shouldn't it be < 0 or == -1 ?\n. There's a race condition on this variable if 2 threads call WaitForSingleObject() concurrently. \npthread_join() is atomically correct with this, so we should call it inconditionaly, and we can remove this struct member too (joined). \n. Same remark as above.\n. In this exit path we're still holding the thread->mutex lock\n. If it appears that _all clients can live without \"states[j].dwEventState &= 0xFFFF;\", perhaps we could remove all the ThinLinc specific code. \nLike @bmiklautz I don't like very much the \"hack\" to detect ThinLinc client, I'd rather have that outside and add the ability to set a flag to disable  states[j].dwEventState &= 0xFFFF.\n. I don't like when we silently return in case of OOM, we should return an error.\nHere formatList.numFormats == 0 or OOM are treated the same.\n. Is it really needed when calloc() is used above ?\n. IIRC free(NULL) is safe\n. This check is already performed by the caller.\n. The same here, line can't be null.\n. http_response->lines is supposed to be an array of http_response->count allocated items of char . So it makes no sense to check for http_response->lines and http_response->lines[i].\n. Perhaps the magic 0x78 and 0x88 could be replaced by the corresponding define...\n. man of shm_open says that \"For portable use, a shared memory object should be identified by a name of the form  /somename;\" (note the slash).\n. Stupid question: thread_list is accessed and modified without taking any lock ?\n. Well, I don't see why we update variables if we don't use them. Would \n/offset +=*/ rts_flow_control_ack_command_read(rpc, &buffer[offset], length - offset,\nbe ok for you @awakecoding ? That would keep the code layout and would please the clang checker...\n. I think the comment would be a good compromise between readability (which is the purpose of updating a variable that is not used after) and clang warning (which doesn't understand readability concerns ;) )\n. Any reason why you removed that safety check: code trying to free a running channel ?\nI don't know any code that would sanely do that but the check what there to ensure it !\n. OMG this is a runtime check instead of some ifdefery ?\n. just an idea: if this code is WIP, perhaps we should remove it from master and you would keep it on a private branch until it is stabilized. That way we keep master with less warnings, and we don't fool people to think schannel_openssl is functional. Just an idea !\n. I imagine the call to map_ensure_capacity() can fail, can't it ?\n. if realloc(new_name) fails, we will have potentially an incorrect pointer in clipboard->fileDescriptor, and probably a leak of new_fd\n. Ok with the fix, but I think the function should be changed to return a BOOL (and all callers checking the return value) and we would return FALSE here.\nThe same apply for the two next functions.\n. new_ref is not check and that would segfault two lines later when ZeroMemorying referenceTable->array\n. I don't know if people using this include have something to say about that but it looks like API + ABI break.\n. The original code looked clearer to me....\n. The page size is not supposed to change over time, perhaps the GetSystemInfo() could be done just once and the result stored in a static variable...\n. nice catch, I discovered recently that shmIds are supposed to be paths...\n. You should use %s and FUNCTION here, as if we rename the function a lot more modifications will be needed.\n. I feel like this log will be very verbose when you connect to a RDP security only server, with 3 connection attempts (NLA, then TLS, and finally RDP)...\n. WLog_ERR(TAG, \"%s: Unexpected FASTPATH_FRAGMENT_LAST\", FUNCTION);\nwould be probably better\n. The \"calculated at build\" argument does not really apply when this code is supposed to be almost never called ;)\n. Perhaps we should warn loudly here when dstBytesPerPixel != 4 ?\n. The mix of if with srcBitsPerPixel and srcBytesPerPixel is a little misleading.\nWhat's the value of srcBytesPerPixel when we hit the case srcBitsPerPixel = [1 |\u00a04] ? If it's 0 then perhaps we could add the appropriate if() and catch srcBitsPerPixel in that statement...\nNote: we silently ignore srcBytesPerPixel not in [1, 2, 3, 4] we should at least warn when we hit these cases\n. is it me or we're leaking the handle here ?\n. I really don't like the idea that an invalid rectangle with right > left or bottom > top would be considered as empty.\n. any reason to change 0 to 2 ?\n. Please drop that one that is not an empty rectangle, but an invalid one.\n. This is not related to your patch, but is it me or this function returns 1 in case of error ? (I'm starting to think that nobody cares about the result...)\n. I agree, I wanted to keep the comment, with a not too long line.\n. Previously it was the return value, but as this function can now fail it returns a BOOL. The previous return value is now in pad.\n. in this case this should be an assert(). If the 3des decryption doesn't give the expected out bytes we're in serious troubles ;). So we may do some kind of abort anyway.\n. That's a philosophic question, but most of the time if we detect something totally unexpected, I think the safest is to just abort(). Just to prevent more damages.\n. Stream is not checked here, but perhaps it's in another PR not merged yet.\n. do we need the breaks when we return ?\n. Could be\nwfi->peers = (freerdp_peer*) calloc(WF_INFO_MAXPEERS, sizeof(freerdp_peer));  ?\n. Not from you, but there's a typo here\n. wow nice catch, is it possible that num was always set to 1 ?\n. any reason for this ?\n. you mean !p here ?\n. Yeah you're right. It doesn't hurt but I will fix it.\n. @nfedera this is definitely an unexpected result, that means some kind of corruption has occured.\n. The problem is that if we hit such situation it's much more than an innocent decryption error. It's really an assertion, we can't be sure that staying alive will not result in a massive corruption.\n. isn't it !freerdp_channels_pre_connect(instance->context->channels, instance) ?\n. so perhaps freerdp_channels_pre_connect(instance->context->channels, instance) != 0 would be better ...\n. I had the impression that SEncParamExt isn't always available depending on the compilation of OpenH264, do I mixed up with something else ?\n. about the TODO: I'm not sure we need to clean up the cache...\n. return FALSE here ?\n. perhaps this label could be renamed to out\n. You're right it makes more sense to just warn\n. @bceverly can you explain what is specific to OpenBSD here ?\nif the check on event->numVisibleRects is useless (which seems to be the case), let's just remove it for all platforms...\n. Perhaps the function could return a BOOL and indicate failure, with callers checking for the failure...\n. Just to be sure, h264->MaxBitRate is initialized with UNSPECIFIED_BIT_RATE ?\n. Perhaps an error message would be nice here\n. coding style: spaces  around !=, and free() on its own line\n. if num_rects is 0, presentation->rects is freed so it should be set to null\n. coding style: missing spaces around =\n. I'm curious of the 256 here, is it really a safe value ?\n. Oops totally right\n. Same error here !\n. Yes definitely and we should also set the error. Nice catch.\n. 1. you're definitely right\n2. nice catch\n. Yes of course I will change for that.\n. @akallabeth @bmiklautz this remark is the show stopper for the merge, are you convinced by @ivan-83 's arguments ? If so feel free to merge the PR.\n. status is unused, IMHO it should be returned as the function result\n. Not related to your changes but the available remaining size should be checked before reading\n. Not related to your changes but the available remaining size should be checked before reading\n. Not related to your changes but we should check there's ComputerNameLen remaining bytes\n. Not your code, but status should be returned and not ignored as it is the case\n. Not your code, but no checks are performed on the remaining available size in s\n. no checks are performed on the remaining available size in s\n. no checks are performed on the remaining available size in s\n. status should be returned and not ignored\n. Not your code, but the creation of StopEvent and the thread are not checked\n. no checks are performed on the remaining available size in s\n. no checks are performed on the remaining available size in s\n. no checks are performed on the remaining available size in s\n. if the malloc fails we continue as if nothing had happened ?\n. extra spaces here\n. C++ comments\nDo we really need the #if 1 ?\n. if one calloc fails you leak the all the others\n. _strdup result is not checked\n. strdup result is not checked\n. if a calloc fails you may leak the other one\n. calloc not checked\n. the remaining size in s is not checked\n. the remaining size in s is not checked\n. the remaining size in s is not checked\n. the remaining size in s is not checked\n. the remaining size in s is not checked\n. the remaining size in s is not checked\n. the remaining size in s is not checked\n. irp is leaked in this case, isn't it ?\n. if context->priv is not allocated correctly we return the context anyway, I don't think it's the expected behaviour\n. This is not cited in this patch, is it really used somewhere ?\n. xf_SetWindowText() is called only once from this location.\n. Not your code but _aligned_malloc is not checked\n. ret is already initialized to FALSE\n. we could initialize status to -1 so that all following error treatments would not have to do a status = -1...\n. The original code was better because it sets the last error and is more compact\n. The same here, original code looks better\n. not your code but the result of WTSVirtualChannelWrite() is not treated\n. Code style: IIRC in FreeRDP we don't add useless extra { }\n. Not your code, but the malloc failure silently exists\n. I'm perhaps misinterpreting but when base == NULL that means OOM, isn't it ? So an error\n. In this case it's S_FALSE ?\n. Here I would \nif (strlen(copy) >= length)\n  break;\ncopy[strlen(copy)] = delim;\n. Linux also have high precision timers ?\n. a switch() ?\n. return subsystem->ClientConnect(subsystem, peer) ?\n. my fault, I think the compilation is OK because it's deadcode that is not compiled :)\n. Perhaps I'm missing something but as wParam->rectangles is copied from bitmap->rectangles, in case of OOM we will free the wrong pointers.\n. you're damn right I commented too fast\n. return value not checked\n. comment to drop\n. no C++ comment\n1 * 1000 * 1000 would be more readable ?\n. else can be dropped\n. drop comment\n. return value not checked\n. no C++ comment\n. are you sure about this one ?\n. is the static removed on purpose ?\n. Well in fact this should be a switch statement !\n. strdups not checked here\n. Just an idea, but a log message could help here\n. If I'm not wrong the action here is not correct (if we haven't manage to create the event, no need to close it)\n. Just wondering if it's a good idea to start at full volume...\n. Nice then, thank you for the answer.\n. good catch\n. isn't it not defined(HAVE_STDINT_H) here ?\n. I'm not sure to understand, I was meaning that here it should be\nif not defined(HAVE_STDINT_H)\n. @akallabeth ok so I don't understand as what I'm reading is that when stdint.h is detected you (re)define int8_t as char and so on. Am I missing something ?\n. return rmdir(lpPathName) == 0 ?\n. We have seen many patches here, they were all hiding real problems.\nReading errno is not reliable in this case.\n. Looks good, anyway (not your code) shouldn't we print a message when the kind of message is not known ?\n. arg you're right\n. suggestion: the type of appender to use. Probably that we should list the possible value too.\n. s/loging/logging/\n. Again with names: may I suggest Opened or Active instead of State and move to BOOL as we're using only the 0 and 1 value ?\n. Yeah of course, I commented on wrong line, sorry\n. I missed it, but the else if(... should also be on its own line\n. Isn't it possible that we have a race condition here. If another process is fast enough to delete pFile->lpFileName before it is reopened ?\n. isn't wtypes.h a public header ? So that means that third party app must define HAVE_STDBOOL_H and HAVE_STDINT_H ?\n. I think it's the opposite here as NoSymbol in the old code means FALSE now\n. lock is always set a few lines below, so I don't think the initialization is useful\n. In this file could you do some early returns so that we don't have these cascading if() ?\n. @akallabeth I have watched the doc and it says that a buffer of at least 120 bytes is enough for ERR_error_string.\n. Just curious, is there any reason why rdpdr would be NULL ? \nI don't like code that protect against itself, because you feel suspicious about everything. If callers are expected to not provide a NULL pointer, let's adjust the callers...\n. Same remark here, how would we call that static internal function with invalid parameters ? Perhaps it's not a so nice idea but I feel like the job should be done by the callers (perhaps that these tests aren't even necessary)\n. Do we need to free g_Filters ?\n. isn't it \np = strchr(s, ','); \nhere ?\nMay I suggest renaming s to startAt and p to commaPos ?\n. if you take my suggestion above, incrementing p is useless\n. nitpicking, but perhaps we could check that this is a reasonable value...\n. We should check that we don't go after the end of the stream.\n. It's Stream_GetRemainingLength here and in line below, and then you should return something to say it's bad data (can't find back the error code)\n. Not your code, but would you change all this to a nice switch() statement ?\n. there's possibly an int overflow here, should be:\nif (Stream_GetRemainingLength(s) / sizeof(UINT16) < numCapabilities )\n. Another check should be done here as the check above is only the strict minimum number of bytes that the stream should have.\nIn fact I think you could remove the check above and only have one here.\n. IMHO this check should be removed and done outside in rdpdr_virtual_channel_client_thread.\n. I've looked at the caller, and I don't think this check is necessary. s can't be NULL (as we expect the caller to have checked the result of Stream_New), and I can't imagine that caller would pass us a NULL rdpdrPlugin.\n. @akallabeth we have to check at each loop turn as the name has a variable length.\n. very nice handling of the \\0 in the stream, congrats !\n. yes\n. some lines above buf[20]\u00a0could be modified to buf[WINPR_SHA1_DIGEST_LENGTH]\n. some lines above buf[20] could be modified to buf[WINPR_SHA1_DIGEST_LENGTH]\n. lientNameLen: typo ?\n. nice catch\n. It seems that on Windows 2003 server the username is not always returned leading to cbUserName being 0, so the test cbUserName < 2 should be dropped. The same probably applies for the domain.\n. Same here I think we should not test the case cbDomain < 2 and consider this as \"info not provided\".\n. Well someone complained about that this morning :)\n. As it's limits that we're choosing arbitrary, perhaps we should Wlog a warning when they are reached instead of just returning FALSE.\n. Just wondering why we don't have the same with winPR...\n. nice catch\n. Not sure to understand why this condition has been added, can you elaborate ?\n. Are you sure about the copyright statement ?\n. s is leaked here\n. this is not very clean here, and you should probably check written too ?\n. fs is not checked here\n. How can you be sure that s will be large enough to hold all monitors informations (if you have many) ?\n. s is leaked here\n. that kind of assert makes no sense, just ensure that the stream is big enough before writing in it\n. This else block can be moved one level down (as the if above returns) and the \"else\" removed\n. s is leaked\n. s is leaked here too\n. s is leaked\n. s is leaked\n. perhaps you should check that pdu.cacheEntriesCount is not 0 (or you will return with OOM error)\n. You should check that there's enough to read in s\n. In this function, you must add check so that you're sure that s has enough bytes to read.\n. I guess the limit for index should be 3, or you offer a nice opportunity for an attacker to rewrite the stack...\n. shouldn't capsDataLength  be checked ? (I guess the spec says this field MUST be as certain size)\n. same here don't Stream_Read in s until you're sure the bytes are available\n. error cases must be looked at because you leak some priv members depending of where it fails.\n. may I suggest const BYTE* pSrcData ?\n. I guess this function should not be void as it calls some callbacks that can return errors\n. I guess all these calls can fail, so...\n. Just wondering how encoder->rfx can be NULL when we fail if rfx_context_new fails (some lines below)...\n. Forget about cleaness\n. forget about this comment\n. nitpicking, but a switch() statement would make sense here.\n. I don't know, it was done this way for other pages in libfreerdp.\n. bikeschedding: should drop braces\n. Please remove the comment about the author and the \"end changes\" below. When we wanna know who wrote what we have git blame for that.\n. strange indentation here\n. comment is not accurate\n. perhaps we could return from here so that we wouldn't need the else block (and so less stairs effects)\n. I really think the assert here should be removed\n. using sizeof(in memory struct) is a bad idea to check that size of data available in a stream, as if the compiler does some alignment you end up with RDPGFX_CACHE_ENTRY_METADATA being bigger in memory than in the stream.\n. I think it should be Stream_GetRemainingLength(s) < 2\n. same remark with using sizeof here\n. same remark with using sizeof here\n. 2 things here:\n- should we call shadow_client_recalc_desktop_size if !ret ?\n- any (good) reason to ignore the result of shadow_client_recalc_desktop_size ?\n. Well I'd prefer the early return, but that's just nitpicking, not blocking at all.\n. I think that at least we should print a message.\n. Let's just remove the unused code instead of #if 0\n. may I suggest that we put as comment the WCHAR array, so we know what the bytes correspond to ?\n. Good catch\n. Yep I've seen that too yesterday, patch coming\n. not your code, but CompressionLevel is always set to PACKET_COMPR_TYPE_RDP61\n. My point was more that the if (settings->ServerMode) is useless as we're setting to PACKET_COMPR_TYPE_RDP61 in all cases.\n. @bmiklautz well, my remark still applies: the if (settings->ServerMode) is useless.\n. fun, pSrcData was never used ?\n. maybe all the calls:\nret = xf_gdi_update_screen(xfc, cmd, gdi->primary_buffer); \ncould be mutualized at the end of the switch() (excluding the default case of course)\n. Yes definitely\n. OMG, good catch\n. Yes compatible of course\n. The code in this function is really weird.\nreturn transport_get_event_handles(client->context->rdp->transport, events, count);\nwould suffice isn't it ?\n. so the return type should be BOOL ?. return context != NULL ?. copyright statement is not correct IMHO.... It doesn't hurt, but I'm not sure these are really needed.. I guess we should exit in this case, not really sure if GetProcAddress(NULL) is safe.... All these should be checked against NULL or we may run into troubles some lines later.... there's no point to have a const here. sorry to bother but these reformatting are clearly against readability. the else is useless. the same here. Just noticed that, but it would be neat to have a define or at least a comment for that mysterious 592 value... Yep I think it's the reason.... And I forgot to mention that we're not using C++ comments in FreeRDP.\nAppart from that the patch looks good, any comment from others ?. I don't see any advantage to this, can you elaborate on why you're using that define and use it for enum values ?. code style mismatch. For this big statement with stairs, may I suggest to do:\n```\ndo \n{\n    if (bits_to_decode < 16);\n         break;\n    .....\n    if(syncExtensionType != 0x2b7)\n         break;\n    .....\n    if(extensionAudioObjectType != 0x05)\n          break;\n.... (and so on)....\n} while(0);\n```\nThe code will look nicer with less stairs of if().\nPlus you should definitely look at the FreeRDP code style (curly bracket are supposed to be on a single line, binary operators are supposed to have spaces around them, things like that).. You should not Stream_Read() without checking there's enough to read (Stream_GetRemainingLength), so I guess your function should return a BOOL to say if the decoding was ok, and the actual return value should be passed as a pointer on a UINT32. The remark on Stream_Read applies for the rest of the function.. the return value is ignored, so is it needed ?. oh thank you astyle... missing space. it doesn't hurt but it is not needed.. taken from man fread:\nfread() does not distinguish between end-of-file and error, and callers\n       must use feof(3) and ferror(3) to determine which occurred.\nso the errno tricks aren't accurate. The same here for errno tricks. Very good question, checking that.. And the answer is yes, as server-side it's the only place where it is set. And this function is never called again even during a re-negotiation.. indentation looks strange here, at least in the github view.... Perhaps we could add a typedef for void (fun)(void *) . I don't like that kind of command line parameter. I'm quite sure WLog allows to do what you want about tracing. help is also automatically generated from the command line array. Not sure that help block is needed.. code style (curly brace should be on the line below). shouldn't it be || here instead of && ?. else block is not needed. code style: wrong alignment. is the typo here on purpose ?. return not needed. This #if 0 is incorrect, if you have warnings it's because the wayland you're compiling against is old (and BTW we could make things better by testing the protocol version). I may be wrong, but for me all these defines have nothing to do in sspi.h. just nit picking, but here we should have coherent names, so NTLM_SSP_NAME.. This should be done using InitOnceExecuteOnce. valgrind reports that regions overlap, so perhaps MoveMemory would be better. else is not needed. freerdp-bot complains here about LONG. Ha ha ha the famous goto fail in Apple's Ssl ;). to prevent integer overflow it should be \nif (Stream_GetRemainingLength(s) /  CLIPRDR_FILEDESCRIPTOR_SIZE < count). Isn't there a proper way to read WCHARs ?. Perhaps the caller should perform such checks ?. Same remark as above for writing WCHARs. Perhaps it's the way to do it but I feel like we have some functions to do that. If not just forget that comment.. So perhaps a ConvertToUnicode with destination Stream_Pointer(s) would  do the trick ?. No tricks with size_t, an explicit check is always better.. I guess that\nConvertFromUnicode(CP_UTF8, 0, Stream_Pointer(s), 520, &file->cFileName, 520, NULL, NULL);\nshould do the trick. With return code checked of course.. I'm quite surprised of your comment because we widely use Convert[To|From]Unicode in misc places where there is unicode data (usually paths).. may I suggest to create function to free the window_state (it could be used below) ?. same remark here, it would be neat to have a function to free the icon info and also use it above.. just curious, shouldn't we do a copy here or drop the const modifier ?. too bad you've not taken that opportunity to remove that global variable. typo here HEARTBEAT not HEARTBEET. IIRC we were not recommending to use size_t ?. code indentation is strange here. same indentation problem. IMHO not need as this field is not used (and probably should be...). const not needed. Shouldn't we also check the value of the property ?. in the man ftruncate and fallocate take a off_t as argument.... I was meaning, checking the value of the retrieved property (prop) but perhaps I'm missing something.... I don't see why it's a gain to have all these added parenthesis below.... shouldn't it be UwacDisplayGetOutput(context->display, 0); ?. this check must be done some line above, or you leave the function with X11 locked. \nI'd be curious to see when that situation happens (I mean perhaps the check is to be done by the callers ?). good catch !. I guess it's not the right copyright.... agent_fd is leaked here. strange code style. I may have missed something, but your socket is opened in a blocking way (and is not changed afterwards) so you will never get a EAGAIN or a EWOULDBLOCK, and the same applies for writes.. I don't see the server code.... I'd suggest to move that statement in the while loop above and remove the corresponding test in the while consition (so that the test is only done once). yes of course !. yep. You're right again. funky indentation here. Yes, that's what the spec says. thinclient implies the use of remoteFx (instead of progressive) and the cache to fit in 16Mb (so a small cache).. The correct fix is \nsemaphore->pipe_fd[1] = -1;. +1. Wrong comment, and copyright below are also wrong. wrong header here. comment should be changed. The new formatting is not that nice, could we replace that with expr > 0 instead of expr ? TRUE : FALSE. Should be &= here. Hum in fact, the original sequence of instructions with && was better because we stop the treatment as soon as something is wrong, your changes break that.. Why are you setting errno here ?. not needed ?. I don't see how we can get ev == NULL, the same for instance.\nThe rdpInput* input = instance->input was nice for the rest of the code IMHO. I don't understand in which case freerdp_get_event_handles() returns no event handle.. if public_key1 or public_key2 are NULL that means that nla->packageName is not one of the one we know, so that means a real big bug that will have triggered some error long before. So these checks and initializations aren't needed.. I remember of a check that was not done on purpose as sometime the server sends garbage. I'm wondering if it's not that one, @awakecoding any opinion on this ?. Well IMHO that's exactly the opposite, a callback is supposed to be called with some pre-requirements. Having instance != NULL and ev != NULL are the requirements, even  testing instance->input is questionable.\nLook at the call hierarchy for wlf_handle_pointer_enter  (Ctrl+Alt+H under eclipse) you'll see that NULL in instance or ev are just not possible. So it had some micro tests that for sure the compiler will keep as is as there's no place for optimization here. But worst, when you read the code you can be suspicious on the instance or ev parameters when there's no reason for that.. Perhaps we should check that it is ending by .rdp, than just checking that the filename contains .str. extra space. I thought 1 review was enough.... good catch. ok will change that. This initialization isn't needed.. Check not needed, see the stack call of this function, rail can't be NULL.. In this file it's the only pertinent change, all others are unneeded checks. \nVerify the call stacks and you'll see that the rail argument can never be NULL (or it would have failed long before) and the same apply for the second parameter of each function (called with a ref on local stack variable).. Checking sam is not needed (see callstacks of  SamLookupStart).\nAbout sam->fp, I guess the logic should be changed in SamOpen to not return a WINPR_SAM when the file can't be opened (and os that check would not be needed).. funky code style here. good catch. How is it possible that credentials aren't set ?. my question still applies, if the case context->credentials == NULL is totally unexpected, then this should be a assert(context->credentials) and we should not behave like NULL was a possible value for credentials.. So you mean you take a special precaution to not crash in that debug statement, while we will segfault a few line later when using credentials without checks ?\nSo for me there's only two cases: \n\neither credential != NULL is a precondition and we can possibly add  assert(credential != NULL), even if I'm almost sure we can't be in that situation because callers would have crashed long before; \nor NULL is a possible value for credentials and we should add some checks even when debug is not enabled\n\nI think we're in the first case.\nAgain, unneeded checks don't bring any security or program hardening.. So I guess the assert is the solution.... I don't see how xfc could be null here, not sure this check is necessary. @akallabeth in fact the leak was here. In this function we have ownership on the stream, so we must release it.. Please keep the original loop add #ifdefs statement before and another after for the VAAPI case. Result should be checked. same here, check result. here I think we should go to fallback without hardware support. Otherwise that means that if the permissions aren't correct for accessing the DRM device, we won't be able to run at all.. Well it was working by luck, the path was wrong but with the multiple include directories that we define, the compiler was finding the include anyway.. Isn't that array defined in cmdline.h ?. good catch. You can drop these checks, the caller is already doing them.. The same here, caller is doing all the necessary checks. Well I will change them, but nothing can change in the arguments as these functions are automatically generated by some macros.. Good catch !. That could be changed to return context->RdgAuthScheme != NULL; .... Does it mean that when RdgAuthScheme is set we don't have any Content-Length ? If so I think it's problematic as IIRC, the content length is required with HTTP 1.1.. This block should go above, before the test loop. \nNot your code, but it would be nice if you could also move the if(context->RdgConnectionId) upper to drop the unneeded checks.. Forget about my comment, required content length is for responses.... I can't understand what is tested here ?. these checks aren't needed. I guess here the check should be either < 16 or < 16+24. unneeded checks. oups sorry these checks are needed. would be nice to remove the strange comments here. unneeded checks these should be asserts. This is a local functions, just give me the case where one of these pointers could be NULL and you'll see that it implies that a caller didn't do the check job.. Here if multiple streams are enqueued, only one is popped, this may lead to a dead lock or at least a delay in the sample rendering.. ok nice then. missing space after return type ?. AFAICT when this function is called g_RootLog is always NULL, so the if(!g_RootLog) test is useless.. @p-pautov yes definitely. this memset is not needed. I guess you will run into troubles if the response packet is splitted in multiple small packets. So I guess you should loop until you have read a certain amount of bytes.\nSo in that sense, the memset on line 295 is not needed.. usually we would have written strlen(hostname) & 0xff. You should put that reading loop in a separate function. And use it and above.. no magic it's just that the len is encoded on 1 byte. Well I kept it here because it's SOCKS only (as the file treat http and SOCKS proxy), but I can move it . I've added a check in recv_socks_reply so that status is at least 2 when we read some data.. free(NULL) is ok according to the specification of free and I think there's no need for context->priv->PlaneBuffers[i] = NULL; as we're freeing the whole context after that (except of course if you're afraid of nasty code that would have aliased the context, but that's self-protecting code then). @akallabeth yes sure that's not your code.. So the offset is 47, isn't it ? (IIRC the number in the comment is used by some scripts). Not your code, but wouldn't it be nice to have some enum instead of raw values for ConnectionCallbackState ?. not having a variable name here is weird isn't it ?. Don't we have a pb here, shouldn't you seek after doing the copy ?. code style typo. good catch. fancy formatting. nitpicking but this change doesn't bring any improvement, the size was already correctly handled.. Just curious, isn't smartcard authentication possible with TLS security ?. nitpicking but settings is calloced so SmartcardLogon is already FALSE. I don't understand the rational for these checks, I can't see any situation that would lead any of these to be NULL.. xfc can't be NULL here. My intent was that you either use Stream_WrapBuffer or Stream_New, not recycling a wStream retrieved from Stream_New. There's Stream_SetBuffer if you want to change where a dynamically allocated stream points.. perhaps that the function name should be more explicit on the fact that we target a static stream, like Stream_StaticInit like it was before.. @awakecoding proposed some modifications from wayk now where there is a isOwner flag, that allows to resize statically allocated streams by doing a copy of the buffer on the heap.. I don't understand what is done here, you change these variables to int and then they are cast to size_t in the rest of the function. What was wrong before ?. Then perhaps just casting the calls to vsnprintf would introduce less changes and would improve readability ?. not needed here. not needed here. not needed here. not needed here. not needed here. not needed here. not needed here. not needed here. not needed here. static function should not self protect themselves against invalid arguments.. good catch, changing this.. here I can simplify a little, but not completely getting rid of the 2 paths. I feel like pixels should be an UINT32.. @akallabeth not in that function. static function should not self protect. no self-check in not exported static function. value must be checked.\nwhy creating a named mutex ?. Isn't a CRITICAL_SECTION ok ?. Oups good catch. Ah ah ah did you get some complains from contoso.com ;). My suggestion would be to do\nC\nHashTable_Add(xfc->railWindows, &appWindow->windowId, (void*) appWindow);\nplus you add a comparison function on the railWindows that compares UINT32 *.\nand getting values becomes\nC\nreturn (xfAppWindow*) HashTable_GetItemValue(xfc->railWindows, &windowId);. I will do the change, but who would be mad enough to change the API. Well it could be me to change the equals_key function to take const void * in argument instead of void *.. @akallabeth if someone wants to do it, it would be a nice idea to introduce a define to help external projects (something like #define WINPR_HASH_FUNC_CONST). duplicated check. uneeded check. I guess the message is more failed to allocate a clipboard available message. I don't see how we can have seat == NULL in this function. seat can't be NULL here except if there's a buggy piece of code elsewhere (not relying on user provided data).. copy and pasted message. @akallabeth well I don't like the check (as it's not really exported as just used internally, it's present in the header file just for convenience). My point was more that you have exactly the same check 2 lines below.. can you explain why adding this library in all cases ?. what's wrong this static declaration ?. unneeded checks. Yep, we don't have access to the rdpLicence in the rdpRdp.. make sense. What do you mean by pointer alignment ? \u0300. Well, it could but in practice we don't really care. To be in that case, we must have an app that would have replaced, on purpose, the callback by NULL. Looks very unlikely.. Not sure these checks are needed.\nAnyway the if (!clipboard) check is duplicated below.. just nitpicking but it would be cool to adjust the styling here and few line below (line 319). Shouldn't we print something if the fdopen fails ?. This looks so unlikely that we should print a message too when we hit that case.. lonely return ? (unneeded here). how the hell can we have xfc == NULL or event == NULL, if this happens I guess this is a problem with the caller (static function). Even the check on xfc->window is questionable.. I guess this section should be removed ?. Typo: chache => cache. Nice catch !. ",
    "dbungert": "That if check had two compile failures - I threw it in at last minute and clearly didn't test it, to try to make use of the started member if it is used in the future.  For the moment I'm just ignoring stream->thread->started.\n. Typo - change mid to mib.\n. Can you elaborate on this one?  As you note, it looks a little odd.\n. I think we just remove this tsmf_gstreamer_state_name() function entirely - see gst_element_state_get_name().\n. Is this a stub? (In reference to function tsmf_platform_set_format())\n. ",
    "fweimer": "@hardening This was actually intended because sizeof(LICENSE_BLOB) is used in the allocation below. The packet parsing routine has another check against the remaining length of the stream.\n. ",
    "vworkspace": "On Ubuntu 12.04.3 x64 when you pull the network cable and let the connection sit idle, you'll get a SSL_ERROR_SYSCALL error in SSL_read when it detects the network break.  When the client learns of the network break and goes to tear down the connection, tls_disconnect gets called and it crashes in SSL_shutdown.  I don't know if this happens on every version of OpenSSL, but it definitely happens on Ubuntu 12.04.3 with all updates applied.\n. If you can provide instructions, I can certainly get one.\nI just ran xfreerdp as built from FreeRDP master on Ubuntu 12.04.3 x86.  Same exact results.  First of all without my fixes, I let the RDP connection sit there for over 15 minutes after pulling the network cable and it never discovered the network break.  With my fixes, it detects the break in 15 seconds and reconnects.  If I comment out the line to SSL_set_quiet_shutdown, it crashes.  Note that I am not running this under a debugger and I don't have a core dump.  I'm assuming a crash because SSL_shutdown never returns and xfreerdp just exits back to the bash command line.  Also note that I am not loading any virtual channel plugins.\n. ",
    "maksqwe": "I agree with you.\n. ",
    "MartinHaimberger": "rpc->client should be checked if null after creating the client and before using it\n. Should that not be Stream_GetPosition(s) ?\n. Is False here right ? So this function just can fail ....\n. Also just return FALSE .....\n. return FALSE right here ?\n. return FALSE right here ?\n. unnecessary line add\n. return FALSE right here ?\n. return FALSE right here ?\n. setting attached here is right ?\n. is the int rc here really required ?\nWould not be (waitpid(process->pid, &(process->status), 0) != process->pid enought ?\n. result of getline should be checked and on failture the buffers should be freed (see doc)\nIf lineptr is set to NULL and n is set 0 before the call, then\n       getline() will allocate a buffer for storing the line.  This buffer\n       should be freed by the user program even if getline() failed.\n. result of getline should be checked and on failture the buffers should be freed (see doc)\nIf lineptr is set to NULL and n is set 0 before the call, then\ngetline() will allocate a buffer for storing the line. This buffer\nshould be freed by the user program even if getline() failed.\n. right i will do that\n. This will break coding style\n. This will break coding style\n. ExitThread is the preferd methode to close threads in C.\n. will do that\n. there are three directorys written not one.\n. true will do that\n. because GetSurfaceIds returns a UINT16\n. because GetSurfaceIds returns a UINT16\n. would nt it be better to remove the duplicated code above and use something like:\nreturn error ? error : rdpdr_send_device_list_announce_request(rdpdr, TRUE);\n. wrong comment because of removed _strdup\n. this exports should be in the extern \"C\" { } section ....\n. maybe this should be millisecound (like the time description above)\n. maybe errors\n. _strdup should be check if it worked\n. _strdup should be checked for success \n. _strdup should be checked for success \n. _strdup should be checked for success \n. _strdup should be checked for success \n. setting the ppInterface to NULL after freeing is gone missing .\n. This applies to all channels, please review all VirtualChannelEntryPoints where FALSE is returned.\n. (pEntryPointsEx->ppInterface) = NULL;\n. (pEntryPointsEx->ppInterface) = NULL;\n. Async Update removed from the mac client with purpose ?\n. removed by purpose ?\n. i think we should do a copy here, since we free it again in subsequent calls.. its not good readable but ok here, forget my last comment.. nice catch. Good catch. good catch!. Since its an api, we need to check the pointer parameters at least for NULL\nif (!lpFindFileData)\n        return FALSE;. Since its an api, we need to check the pointer parameters at least for NULL\nif (!lpFindFileData)\nreturn INVALID_HANDLE_VALUE;. need check here too. Why is the check \nif (!callback || !data)\n    return ERROR_INVALID_PARAMETER;\n\ndone in audin_on_data_received and not in audin_on_close?\nshould all functions be checked which can be called from outside, or via callback ?. better log message required. better log message required. better log message required. better log message required. TODO actual ?. cant be false ... but ok. No generic translation from id to field is possible without knowing which packet it is ... . ",
    "Hobby-Student": "unfortunately, I haven't had time for this. this is the compile error:\ntimezone.c:1668:35: error: invalid operands to binary / (have 'char * (*)(int,  int)' and 'int')\nI just see some wrong operaion with pointers involved. I can make an explicit typecast, but don't know if it's the right way... commit will follow in few minutes\n. ",
    "akallabeth": "@dbungert Those are platform specific functions not necessary for X11, but I'm currently working on getting this to work also on other platforms.\n. @g-reno Could you please remove this part of your pull request, the TAG has been checked out for a reason. Modify the variable $OPENSSL_TAG locally, if you got problems, but do not push this upstream.\n. @bmiklautz static already declared by prototype\n. The list is synchronized, so it automatically locks.\nOn 2015-01-16 14:40, Hardening wrote:\n\nIn winpr/libwinpr/thread/thread.c\nhttps://github.com/FreeRDP/FreeRDP/pull/2314#discussion-diff-23080294:\n\nreset_event(thread);\n+\n-   pthread_create(&thread->thread, &attr, thread_launcher, thread);\n  ListDictionary_Add(thread_list, &thread->thread, thread);\n\nStupid question: thread_list is accessed and modified without taking\nany lock ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/FreeRDP/FreeRDP/pull/2314/files#r23080294.\n. @hardening looks like I overlooked that one. Should never be NULL, but the remove was accidental.\n. @zavadovsky Why did you remove this?\n. @zavadovsky sure that is the correct coordinate?\n. @zavadovsky shouldn't that be cinvalid[0].x + cinvalid[0].w\n. @Edlanta got yourself a memory leak here.\n. @Edlanta and here again.\n. This patch removes the posibility to provide alternative device names\n. @mfleisz True, but makes no real difference.\n. @mfleisz Sure this is the correct line?\n. Formatting, looks like spaces instead of tab\n. Formatting, looks like spaces instead of tab\n. Formatting, looks like spaces instead of tab\n. Formatting, looks like spaces instead of tab\n. Formatting, looks like spaces instead of tab\n. Formatting, looks like spaces instead of tab\n. Formatting, looks like spaces instead of tab\n. Formatting, looks like spaces instead of tab\n. Shouldn't there be a check for remaining capactiy?\n. Shouldn't there be a check for remaining capactiy?\n. Shouldn't there be a check for remaining capacity?\n. Shouldn't there be a check for remaining capacity?\n. Shouldn't there be a check for remaining capacity?\n. Shouldn't there be a check for remaining capacity?\n. Shouldn't there be a check for remaining capacity?\n. Formatting\n. formatting\n. @bceverly Maybe you have some insight, what is causing the issue with this function being declared static?\n. So there is actually an implementation available on OpenBSD? Then this custom implementation should not be used at all, it is meant for systems lacking one.\n. @bceverly Just push the commit to this branch.\n. Yes, but this way the return value is checked too.\n. missing NULL pointer check\n. Shouldn't context->quants be freed if realloc fails?\n. Shouldn't priv->workObjects be freed, if realloc fails?\n. Shouldn't priv->tileWorkParams be freed, if realloc fails?\n. Shouldn't message->tiles be freed, if realloc fails?\n. Sorry, the last comment was on the wrong place. Here you missed the malloc check ;)\n. Probably a good idea to use CryptGenRandom from WinPR and do a proper implementation there.\n. Probably a good idea to use CryptGenRandom from WinPR and do a proper implementation there.\n. unchecked malloc\n. unchecked malloc\n. @bceverly maybe a good idea to also try /dev/random resp /dev/urandom\n. Stream_Release(s), leaking stream here...\n. Leaking stream here\n. When rdp_send_message_channel_pdu fails, the stream is not released\n. @hardening Already handled. Next line after the end of the scope is a check for settings->ConfigPath == NULL which it is as long as it is not set.\n. @bmiklautz: Not your changes, but this function looks quite broken (name <--> TargetName), etc. \n. @bmiklautz Not your code, but in line 191 there is a memory leak of name\n. length may be 0, so this check aborts when actually there should be success\n. length may be 0, so this check aborts when actually there should be success\n. length may be 0, so this check aborts when actually there should be success\n. @bmiklautz yes, but it eliminates a false positive in static code analysis.\n. Comments in defines are no good idea, may break certain compilers.\n. True, but with the missing ; this may lead to problems\n. @bmiklautz @realjiangms Just tested, VS2013 does not like this kind of define. Would be great, if this could be fixed with this pull.\n. Just checked, yes that is a bug.\n. @realjiangms Just expand the view, then you can see the WSAEventSelect ;)\n. Ah, ok. Missed that one, now fixed (including cleanup later on)\n. @bmiklautz If compiling as single binary there are 2 args arrays globally visible. One in makecert, one in client/common. Making them static resolves that issue.\n. Reformatting by IDE, have to fix that.\n. Same as above.\n. @bmiklautz Did prevent the build to succeed (the file is not generated / available), symbols of channels are exported using __declspec(dllexport) anyway.\n. Currently unused, had implemented it while debugging.\nBut is quite handy so I left it in there, can easily be used as platform independent version of strerror\n. This also removes the static initializer for the registry emulation.\n. @HenryJacques Yes, you're right.\n+1\n. @MartinHaimberger No, the _strdup just duplicated a string cleaned up later on. Setting the source to NULL prevents that and so no duplication is necessary.\n. @hardening You're right, defining now in main CMakeLists.txt instead of config.h\n. @hardening no, this part uses the intXX_t data types defined in stdint.h\n. @hardening typedef <existing> <new> is the syntax...\n. Ah, ok, looked at the wrong one. \n. This should be solved by including OSS_INCLUDE_DIR in CMake, then soundcard.h is in the include path.\nSee cmake/FindOSS.cmake\n. If you have linking issues this may indicate that the libraries detected by CMake have not properly been added. Overwriting C_FLAGS is not the way to go.\n. @dupondje Second the comment of @bmiklautz, if you fix the minimum version check the pull is ready to go.\n. @hardening Probably better to define this via compiler argument. Otherwise you'll have to include config.h in wlog.h too.\n. @bmiklautz This is currently in a windows only section.\n. @bmiklautz didn't want to include config.h in wtypes.h which would trigger a complete rebuild after every change in config.h\n. @bmiklautz Duplicate definition as it is already defined via command line \n. @hardening True, have not thought about that :/ Seems to be more challenging than expected.\n. @hardening Yes, did one too much ^^\n. @mfleisz No, look again ;) it is only set if dwSharedMode & (FILE_SHARE_READ | FILE_SHARE_WRITE)\n. @giox069 Maybe it would be a good idea to use ERR_error_string_n\n. @giox069 WLog_* functions also record where they were called from. This wrapper function negates this feature, maybe it would be a good idea to add __FUNCTION__, __LINE__ and __FILE__ as arguments and use WLog_PrintMessage directly.\n. @hardening Read that one too, just do not like magic numbers ;)\n. @hardening The line is correct (s always points to the beginning of the last string, p to the starting point for the next search / last found ,) but I'll rename them.\n. @hardening If realloc fails that is the way to go, but you pointed out something I missed. Need to reset all static globals.\n. @hardening on second thought, maybe it is easier your way, just abort before update of the globals and let the uninit handle that...\n. @hardening The function is not private to the file, so I'd assume such things can happen (but you're right, not that much of a threat).\n. @hardening Well, preference. This way it was just easier to check everything and end in the error return path of rdpdr_virtual_channel_client_thread\n. Not your code, but it would be nice to have SetFileTime implemented in winpr and the platform switch here eliminated.\n. Would be nice if you could move that code to winpr/libwinpr/file/file.c to implement SetFilePointerEx for files and remove this platform switch.\n. This looks like a bug, size is 8 bytes according to the link above.\n. The format string is wrong, need to define something similar to PRId64 for our own defines. (here it works as long as long is 8 bytes wide, otherwise LONGLONG will need %lld)\n. same as above\n. same as above\n. same as above\n. @nfedera Should the other defines (FreeRDP_VERSION_MINOR et al) not also be renamed?\n. @bmiklautz Yes, the error info is always printed. This message did just print the more or less cryptic integer version of it.\n. OpenSSL.org does no longer supply MD5 sums, could you change that to SHA256? Needs some adjustment below when checking the hash.\n. @HenryJacques This is definitely broken, you do not load the channel and free the arguments...\n. Indentation wrong\n. @hardening Isn't the check in line 352 sufficient?\n. @hardening According to cmake documentation this variable only contains the name of the library suitable to use with -l <libname>, you should use WAYLAND_CLIENT_PKG_LIBRARY_DIRS instead\n. @hardening Same issue as above.\n. @bmiklautz This pull is eager to change that.\n. @DavBfr You can simplify the whole thing by using ConvertToUnicode from winpr. Either way you need to check for errors and handle them.\n. SetFilePointer and SetEndOfFile is already implemented in winpr, the platform switch can be removed.\n. Implemented SetFileTime with #3163\n. Implemented winpr function for this with #3164 (granted, works on filename, but we have that)\n. Could you replace this with PathFileExists from winpr?\n. @realjiangms No, it will not link any more, aka it is in the subsystem library but used by the server executable.\n. indentation wrong\n. indentation wrong\n. indentation wrong\n. indentation wrong\n. indentation wrong\n. indentation wrong\n. indentation wrong\n. @nfedera No, Stream_GetRemainingLength as in copy the rest of the stream to a new one.\n. @nfedera I've left this in for testing purposes. This way it is quite easy to add typedef void* wStream and still have the whole thing compile (but complain about direct access to struct members)\n. This log message is propably dangerous, the URI may contain a password / token\n. There should be some kind of sanity check to avoid invalid arguemnts (e.g. must be printable char, the keywords are known, ...)\n. @realjiangms Your argument is true, I'm just not comfortable with unchecked full unicode strings from an unknown source. (think separators and escaping them)\n. @realjiangms I'd just remove the logging here entirely, there is not only /p to hide.\n. @realjiangms True, on the other hand bash is not triggered by a link in a brower ;) Think dial URL issues with android and *#99 et al\n. @hardening Yes, pushed the wrong commit ^ ^ Never push before coffee\n. @mfleisz where?\n. @mfleisz again, where?\n. @mfleisz again, where?\n. @bmiklautz yes, for the strings actually displayed. This is a settings array where translations do break stuff ;)\n. @bmiklautz But you did give me an idea, looks like non translatable strings can be marked ;)\n. @mfleisz Wouldn't this check be better off in rdp_set_error_info?\n. @mfleisz you're right with the public API part, but rdp_set_error_info has a return value, which should reflect such misuses.\n. Should this not contain some hotplugging code?\n. Any specific reason to disable these warnings?\n. Should this pull not be windows only?\n. Maybe regroup this in a block for UWP and WIN32 and a WIN32 only part\n. Maybe regroup this in a UWP and WIN32 part and a WIN32 only part\n. does not hurt either and the symbol is exported (at least libfreerdp internally)\n. Any specific reason to remove this one? Does not look like it is related to the locking issue.\n. Is the initialisation here still used? otherwise it is probably better to remove it altogether.\n. @ondrejholy Yes, you're right. Did mix the Data_Read_UINT16 function arguments up.\n. Since you are using rdpgfx_common in client and server, maybe it is a good idea to change CMake to create a static lib to avoid duplicate compilation.\n. @hardening Why is this case necessary? Shouldn't that be handled by CMake?\n. @bceverly Maybe you can give some hint to this line?\n. @hardening Good idea to use a random port, but maybe it would be even better if we spread the port range a little more (and maybe check availability first to avoid collisions with running services)\n. Maybe a good idea to set the pointer NULL to force segfaults on invalid access\n. @MartinHaimberger Yes, moved to the core library (as every client needs to call that)\n. @MartinHaimberger Yes, moved to the core library (as every client needs to call that)\n. @hardening Missing event close in transport_free\n. That is just the default, when using command line arguments you can change that.\n. @realjiangms Shouldn't the GfxH264 be set to the default value here?\n. @realjiangms Could you elaborate how you came to this color format (use case)? I've issues with h264 and windows 10.\nSee attached image, the menu icons are mirrored upside down\n\n. yes, just recognized that the NSCODEC and NONE paths render at the wrong origin (0,0)\n. @realjiangms why revert? it is never set in the variable gdi->dstFormat, only in the scoped variable format not used any more\n. @realjiangms will update the pull tomorrow, late here. as for the disadvantage, you can of course always use a pointer directly to the XImage->data element.\n. @hardening done.\n. @realjiangms Are you sure? Block scope should be compatible with C89\n. @hardening this means compatible or not?\n. @mfleisz well, preference. looks better this way to me.\n. @mfleisz yea, I'll do that.\n. @mfleisz again, preference...\n. -1, this is a header include guard! I'll agree that the form is bad ( is reserved for compiler internal use) so maybe something like #ifnded MF_EVENT_H #define MF_EVENT_H\n. Why did you revert that? If you have warnings your function signatures do not match.\n. Why didn't you remove the __ prefix? As already pointed out these are reserved for compiler internal use.\n. Why cast? The variable is already LONG. @bmiklautz Yes, there was a warning during android compile. I've just initialized it for every case where the read / write functions are used.. Maybe use an allocated buffer to avoid introducing arbitrary limitations?. @mfleisz You looked at the wrong end of the diff ;). @nfedera Yes, so we need some sanity limit, what would you suggest? 1000?. That will break older C compilers which require variables to be declared on top of a scope.. Same here, split declaration and assignment please. And again. @nfedera No loss of precision here, just trimmed the whole equation by the lowest common denominator. @nfedera So after checking the maximum, this one equation could be done with signed 16bit values.... Would suggest to remove this check for all usages of this function and add one before dereferencing the arguments within the function.. @mfleisz If you add vSrcVFlip in this branch, it may be a good idea to add this for non overlapping copy too. @mfleisz Are you sure this does not screw up if the destination format is not PIXEL_FORMAT_BGRA32?. that looks more like an issue with cppcheck.\nThere is no way to know the function will always be called with a non NULL argument (although it currently is the case). so, transfer_data is checked somewhere else? As already mentioned, that may be the case with current call graph but you can not count on that. (Ok, just expanded the start of the function view, the whole argument checking here is broken anyway :/). add argument checks in xf_UpdateWindowArea before any argument is used and abort if they are NULL or similar. This is a reserved keyword, please change. Please avoid C++ comments.. Please avoid C++ comments.. This check is no good idea. If I want to override the username provided via RDP file this check will prevent it. A simple if (user) should do the trick.. Would be nice not to remove the NULL pointer check for the channel.. @hendwolt This is fixing the warning on my ubuntu 16.04 32bit VM (as opposed to the old cast to UINT64). @hardening Just a precaution against accidental assignment. @nfedera It is a NetBIOS name and I did not want to break anything depending on that limit. (It was enforced before this change, don't know if it breaks anything now). @nfedera Well, the function will return ERROR_BUFFER_OVERFLOW as GetComputerNameA is used internally. Don't know if this is a bug or desired?. true. @nfedera Yes, the function return value is currently not checked anywhere.. Unused variable. Maybe add proper return value checks when already at it. Missing return value check. Maybe add proper return value checks when already at it. Should use PRId32, GetLastError returns a DWORD. Missing argument. Again PRId32. Again PRId32. Again PRId32. Again PRId32. Is str=NULL allowed?. c++ comment. Memory leak fd. Mixed declaration. Mixed declaration. Mixed declaration. Mixed declaration. Mixed declaration. c++ comment. Kind of redundant, same as else. Memory leak fullpath. @hardening Is rdp->settings->ClientRandom always NULL here?. @nfedera Should that not be return result;?. @DavBfr Wrong return value. @DavBfr Wrong return value. @DavBfr Wrong return value. @DavBfr this looks fishy, did you mean if ((hFind = FindFirstFileA(lpFileName, &findFileData)) != INVALID_HANDLE_VALUE)?. @DavBfr Not really, only if the inversion of hFind equals INVALID_HANDLE_VALUE. That really depends on the definition. It also produces compiler warnings with C11. Would be overridden if another command line argument enables NLA, better check that after the command line evaluation.. Would suggest dropping the separate functions for MD5 and adding a flag to winpr_Digest_Init so that future dropped algorithms can be easily overridden. @bjcollins Best make a winpr_Digest_InitEx function to avoid breaking the current API and let the current winpr_DigestInit call that one.. @nfedera done.. Where did winpr_InitializeSSL go to? Not initializing it in freerdp_context_new or freerdp_new will be an issue.. Not good, better move this in the *_new functions, client/server code should not require such initialisation stuff.. No need to check if the channels are already connected, see rdp_client_reconnect. Are you sure this does not add a race condition? Would need to check that my self in depth, but I assume you just want to clear the device list first?. Something like void devman_clear(DEVMAN* devman)\n{\n    ListDictionary_Clear(devman->devices);\n}\nshould do what you want.. @bjcollins That is why I mentioned the ListDictionary_Clear(devman->devices); } function. It removes all devices and calls the cleanup function registered without eliminating the list (which is assumed existing). @bjcollins Good point. Either way it may be a good idea to also have a look at rdp_client_reconnect and keep it synced with this function. . either remove or leave, disabling dead code this way is no good.. either remove or leave, disabling dead code this way is no good.. either remove or leave, disabling dead code this way is no good.. C standard violation, please declare variables at the beginning of a scope. why not use the strncpy type functions?. This will break, includes not in include and winpr/include are not supposed to be exported. C standard violation, C++ comment. coding style, please review. coding style, please review. please do not disable code like this. please do not disable code like this. please do not disable code like this. please do not disable code like this. missing guards, this must only be included if compiled with ffmpeg/avutil. please do not disable code like this. please do not disable code like this. please do not disable code like this. please do not disable code like this. please do not disable code like this. please do not disable code like this. please do not disable code like this. please do not disable code like this. coding style. coding style. is this include also necessary if compiled without smartcard?. coding style. coding style. winpr already contains a base64 encoder/decoder, this is kind of duplication. please do not use reserved symbols as include guard. reserved symbol. is this module not available as a library? maybe better to use as external dependency than to copy the code. @dodo040 Well, it still is quite a dependency and if not maintained upstream it will probably not be maintained here :/. Could be static. could be static. could be static. could be static. could be static. could be static. could be static. could be static. Would remove this, WLog supports filtering.. As mentioned above, would use WLog_TRACE without define and just use WLog filters.. Missing NULL argument check. This looks wrong. The old version did check for NULL pointers, this dereferences.... @hardening yes, keep the successful naming scheme ^^. Still using unchecked access to callback here. Better revert and just do an additional check if (!callback) return FALSE;````before the stream block.. This looks bad, why can it not be done like with every other channel and just setcount=1?. This new version is just more complex than the old implementation.. Then there is something else wrong with argument parsing. When you add the:it is interpreted as an (empty) argument. The case without should work nonetheless.. Well, it is a server issue which can easily fixed there. I don't like restricting the client too much because some server implementation is broken.. Just checkec, there is actually no real good way to read/write unicode in little endian format from/to a stream. Will create a pull for that one though.. Ok, added pull #3991 to address this.. This looks broken in context. Should usedrive_freeto remove duplication (and possible missing cleanup). Missing NULL pointer check, set pointers toNULLafterward.. Would suggest makeingwindow_statea pointer and set freed pointers toNULLafter free. That way an invalid access will crash the application reliably.. Missing NULL pointer check. Set freed pointers to NULL afterward. double free now (drive is already freed indrive_free). As @mfleisz mentioned, not necessary to check the pointers to be freed, only the data structure dereferenced.. Same as above.. same as above. Posix type, need replacement for win32. Posix type, need replacement for win32. Posix type, need replacement for win32. @hardening We should do another pr for that. Remove all instances of hard codedCP_UTF8withGetACP()calls.. @bmiklautz done.. @hardening Oops, looks like I overdid this one ^^. Memory leak right here.... Optional, but may be a good idea to add horizontal mouse wheel too.. Maybe a good idea to handle this with the listener just like the primary button?. Why only change when the key is added? May be changed/deleted/.... Actually no, native code is not garbage collected. It is only freed up when the application exits. As for the issue, could you open a bug report for that and give some details? Better fix it than have some hack like this.. Well, android usually has a touch screen, so it has a horizontal 'wheel' ;) . @hardening Sure you don't want to change that too?. The library checks are here, because there are buggy pthread libraries out there shipping thepthread_mutex_timedlockdefinition in the header but lacking an implementation.. relative include paths?. missing(void)that is arbitrary arguments in C. Your comment above implies that the cache is also small if RDPGFX_CAPS_FLAG_THINCLIENT is set, correct?. Memory leak, revert.. Hack (along with the memory leak mentioned above)\nFrom the description this is caused by not stopping the running session and then freeing up the resources still in use by the native code. Remove. Just asking, because here you only checkgfx->SmallCacheand notgfx->ThinClient. Why not simply usexf_SetWindowText? That function already does this properly.. @dreamadv Ah, ok, you're right. Then I'd suggest the following:\nAdd a static function inxf_window.cwith the function signature(xfContext xfc, Window window, const char name)that can be used by both, therefore eliminating the duplicate name setting (and possible inconsistences after future changes). Maybe a good idea to write something likeif (mkdir(DeviceBasePath, S_IRUSR | S_IWUSR | S_IXUSR) != 0)to indicate the integer nature of the return. @mfleisz Yes, you're correct. Fixed that.. No, only print something if no error has been set (which already printed a more detailed error message). No, only print something if no error has been set (which already printed a more detailed error message). That is actually an error if in streaming mode. We need 1:1. Same here, need more frames is a configuration error. Same again. This breaks old FFMPEG versions (e.g. ubuntu 14.04)\nDo a version AVCODEC check >= 55.39.100 the new style, otherwise the old code you deleted. Same here, please add a version check to disable on older versions\nLIBAVUTIL 52.92.100. Is this correct? I assume you did write this file or am I mistaken?. Please remove the, that should not be used in application / library header files. Maybe add some prefix (FREERDP or something to avoid collisions). Coding style violations. Check the indent matches. to ensure no other function has set ERRNO (tried to do that consistently before callingstrto). correct, looks like a leftover. hmm, comment gone? Ah well, I tried to seterrno = 0beforestrtocalls wherever possible. @mfleisz Yes, could move the loop counters to the scopes too. As for the additional scope with format, I think it is better visible now that this is intended and not some uninitialized variable used after the loop. Not mine, thank astyle ;). It is a callback function. Arguments should be checked and a proper error code returned. Compiler will optimize unnecessary checks anyway.\nfor theinstance->inputpart, that I can do again.. Not currently, correct. But this is client code and the core library may change over time, so better safe than sorry. @mfleisz You're in the wrong scope... @mfleisz Ah, that is what you mean, thought you were referring to line 1854 \nYes, the check is to add an additional error message. But you're right, that one is not really necessary.. Missing void, empty argument is variable arguments in plain C. Missing void, empty argument is variable arguments in plain C. Memoryleakcopy. Memoryleakcopy. Actually the function name can be added to the WLog format string via env variable. Looks like there are a few issues here (not your fault, but none the less):\n*Stream_GetPositionreturnssizt_t* Type oflengthisUINT16* Type ofsec_holdisint* Debug format string uses wrong format specifiers. Wrong format string argument, size_t has its own definedPRIzd(or similar). Wrong, see line 25 (_RtlAnsiStringToUnicodeString). Already done at initialization time. index should besize_tjust like length.\nThere are some remaining casts oflenghttointwhich are no longer required (can't comment as not really in changed area). init with= { 0 }could do that. Where do you get the change from the shift by 4 (division by 16) to division by 40?. Where do you get the change from the shift by 4 (division by 16) to division by 40?. Why did you add the shift here?. Ok, so that explains it, perfect.. Ok, missed the commit message in overview mode, so this looks good too.. @mfleisz Did confuse some compilers and spilled warnings. Added a debug message for that case.. this is an optional debug message block, so asserts are definitely wrong here.. No, just that before any crash you actually have a debug message and don't need to launch a debugger for that.. @hardening asserts are not compiled in release builds, so no that will not help.. Shouldn't this function be static (only used within this file)?. Shouldn't this function be static (only used within this file)?. missingvoid. Free here is unnecessary, post_disconnect is always called.\nOr could the whole stuff be moved to the control init/uninit avoiding runtime impact when not used?. nice catch. leftovers?. leftovers?. @mfleisz you're right, fixed.. oh, seems like an error in rebasing :/. prototype of event handler uses `void*` so better keep that. These casts are quite bad as the compiler will no longer warn if something in the `PubSub_SubscribeTimer` arguments changes. same as above. Formatting, please check. Use `Stream_Write_UTF16_String` to write a UTF16 string. should be `const char* token`. better use the `!= NULL` syntax (don't know for which reason this strange one has been used there.. Should be `UINT16`. add a `NULL` check, if possible.. Is this function used anywhere?. @jaccobraat Don't worry, stuff happens, that is what a review is for ^^. @jaccobraat Ok, think I found the reason, it is some value was actually set detection coded into the variable. You still have to remove this from the header. This is still the wrong type. @hardening this checks if `file->GatewayAccessToken != 0xFFFFFFFF` (the initial value only changed if a new value is set)\nLooks strange, but is used all over the place in rdp file parser.. right, `8`it is.... @mfleisz correct, fixed that.. Sure the else branch is still correct?. What was this change necessary for?\n`sys` was cleaned up in `mf_uninit` below.. good catch. I assume this case was added for the log message only?. nice, was looking at that myself.\nLooks like I did a bad job here :/. why change the return codes?. shouldn't a missing identity be a error condition to abort?. Is this always 15bpp?\nCase for 8bpp and 15bpp is missing or are they not supported at all?. Declarations at beginning of a scope only, older compilers (hello VS2010) are not really C99 conformant.... @perkerk You're probably right, the `freerdp_image_copy_from_pointer_data` is used on non windows platforms to convert to usable bitmap formats.. @hardening API checks, this is not internal (client != lib). bad cast from `siz_t` to `int`. Why not just declare the buffer as `BYTE` and use `ARRAYSIZE` for the length?. and if we are at cleanups, have a look, there are still a lot of broken/wrong/invalid `(int)` casts around. Does VS complain when initializing `BYTE` (aka `unsigned char`) simply as string?. @mfleisz  ok, keeping the magic :). Would use `Ninja` build, is a lot faster ;)\nJust a question though, why the additional settings (systemd, etc)? Just add them to the deps and the build will succeed.. `cmake --build . --target test` would work with any generator used.. @T3N4K4 This is the culprit for your weired rectangle, the new checks are wrong.. @hardening No, the queue event is only reset if the queue is empty. Therefore the `WaitForMultipleObjects` will fire as long as there is an element in the queue.. wouldn't calling `nla_free` be the better option (and check, if that does proper ceanup)?. Ok, will check formatting, looks like I forgot that before commit.. @hardening right, classic copy paste error ^^. @mfleisz That would also crash if `WLog_*` functions are called...\nDon't think that the dependent libs are already unloaded there (unless someone really wants to get hurt). @mfleisz My understanding of this is that it is only relevant when using `WinPR` with `dlopen`/`dlclose` (or `LoadLibrary`/`CloseHandle`). No, the data contained is a color poiner.. This is something that needs to be fixed, so don't cast the warning away. Same as above. Better avoid direct buffer to struct casts (endianess issues ahead). @hendwolt yes, there are still many such things to be sorted out :/ They, of course, work but silence the compiler (which makes it easy to forget to fix). Null checks not required, free likes null ;). This will still fail if the name is empty (see the if (!computerName) check after calloc). This will still fail if the name is empty (see the if (!computerName) check after calloc). This will still fail if the name is empty (see the if (!computerName) check after calloc). Sorry to bother again, but we use plain C, so no C++ comments allowed.. C++ comments not allowed. memory leak `pdata`. @ccpp from my side it looks good (the error condition would be nice though)\nOne thing that came to mind is OpenSSL uses different `BIO_ctrl` calls to get the handles (on windows) so we should add similar logic for that too (doesn't have to be in this pull). Any specific reason to not implement this in a client?. @p-pautov Yes, you're right, that will be required to get this stuff working on windows. kind of preference, does not really matter.. This is indeed an issue, there could be short reads (or other stuff) from the socket. That needs to be handled.. agree on this, needs to handle all errors and a length check, best not duplicate that.. @yurashek Sadly that is up to the implementation, so better never assume anything beyond the indications returned.. Coding style violation, please run the formatting script.. Maybe we should move this test to a CMake script checking for the necessary API, so we don't have to do this for every platform.. Missing return value checks, did we really receive the expected number of bytes?. Coding style violation, please run the formatting script.. Coding style violation, please run the formatting script.. Coding style violation, please no nested `if` without braces. Missing length check (return may be smaller than the data touched). Sorry to ask, but does this break the old behaviour or do I miss something here?. Sure this is correct? Don't you want something like `if (!status && (settings->GatewayRpcTransport || rpcFallback))`?. Oh, missed that one, thx for pointing that out @p-pautov . Missing check for `NULL` if no `:` is supplied at all. Formatting and move to start of file . Formatting and move to start of file. Formatting and move to start of file. Formatting and move to start of file. magic number, is there a matching define maybe?. should be `size_t`, and better use `strnlen` (max length is known). missing length check (`recv_socks_reply` may have returned only 1 element). should be `size_t` and `strnlen` as max size is known.. should be `size_t` and `strnlen` as max size is known.. better add braces, nested `if` without them are quite error prone when reading. Better move that to a CMake test (check for the availability of functions there, so no OS specific defines are required). Created #4608 to fix the timer issue, please remove here.. should be at start of file. Should be `<= 1`. This looks like something is wrong. If the WM does provide `_NET_WM_FULLSCREEN_MONITORS` fine, but if it does not and expects it, it is broken. File a bug report with them.. Please no C++ comments. this is an array index, right?. @mfleisz We're stripping header and timestamp information here, that is `16`bytes. @mfleisz We're stripping header and timestamp information here, that is `16`bytes. done. @hardening that code has not changed, only added the two `if` before. @hardening adjusted the code accordingly (and fixed `profiler_free` with `NULL` arguments too). Wrong indentation, we use tabs. might be a good idea to make this path relative to the script path `SCRIPT_PATH=$(dirname \"${BASH_SOURCE[0]}\")\n SCRIPT_PATH=$(realpath \"$SCRIPT_PATH\")` or something similar should do the trick.. why the duplication here?. @informatimago that is a memory leak, sorry.. right, could remove the restore and simply set to `0`. Indentation looks broken here. Internal function, already checked. Already done by the call to `stat` (returns a corresponding error code). not C90 conformant, move to beginning of scope.. not C90 conformant, move to beginning of scope.. could use macro `ARRAYSIZE`. Formatting, run `./scripts/format_code.sh`. Formatting, run `./scripts/format_code.sh`. Formatting, run `./scripts/format_code.sh`. Formatting, run `./scripts/format_code.sh`. Formatting, run `./scripts/format_code.sh`. You should check the floatbar is actually used here before dispatching events. The numbers in the comments are there for a reason, to maintain ABI compatibility replace one of the reserved spots, do not just insert new variables. Might be a good idea to throw in some braces. Please no C++ comments. Please no C++ comments. Please no C++ comments. Please no C++ comments. Why free that here? The buffers are allocated and kept in the planar context struct.. `stdin` is also invalid here, needs further check.. If `NtHash` was allocated here we have to free it in any case at the end, correct?. Needs a check if `stdin` is valid here.. Needs a check if stdin is valid here.. Needs a check if stdin is valid here. Needs a check if stdin is valid here.. yes, please. (sorry, but old C compilers complain horribly about these). @ondrejholy you're right, the whole allocation stuff should go. (`freerdp_bitmap_planar_context_reset` allocates the planes). Seems like a bug in the original form (and your fix correct), but there are still some hacks in the code I'm not entirely sure what they were implemented for (or what they would break).. Checked the references, the whole allocation part is broken and never used. best drop it. looks like a misuse of the command line, usually it should be `/option:foo,bar,bla`. @ondrejholy As long as they are not in a header in `include/freerdp/*` it won't matter.. please remove this change, changes to these scripts require changes in the build infrastructure.. This stuff is part of XEvent handling, couldn't that be done in that function?. This must be the center of the screen that the window is actually on (which might change on multimonitor systems). @mmattes Ah, ok, then that is a valid case. . Obsolete, already handled by switch above.. Sure you want this unconditionally for all debug builds?. these guards are a bit too easy to collide. . Already have `ARRAYSIZE`. Please do not rename these functions, we try to keep API breakage to a minimum for the remaining changes to 2.0. Please no C++ comments. Internal functions should be ` static` . Redundant spaces, please remove. @informatimago Well, it might have changed but there are no DNS names in certificates (just a name and alternative names) just like the call to `X509_get_ext_d2i(xcert, NID_subject_alt_name, 0, 0);` suggests.. Possible, easier would be to add `add_definition(-DFOO=\"${CMAKE_CURRENT_SOURCE_DIR}\")` in `CMakeLists.txt` and do a `const char* certificate_path=FOO\"/Test_x509_cert_info.pem\";`. `C` standard defines empy argumet as variable argument. Use `(void)` if no arguments are desired.. What does make you believe your naming is correct?\nAn excerpt from the nearest match in the OpenSSL documentation for current 1.1:X509_check_host() checks if the certificate Subject Alternative Name (SAN) or Subject CommonName (CN)`` (https://www.openssl.org/docs/man1.1.0/crypto/X509_check_ip_asc.html) does not call itDNSname butAlternative Name. @mfleisz because we have achar**wherep[0] = &p[1]and the actual string starts atp[1]. Looks like we got that both wrong,(fp_len - i) * 3should do the trick. @informatimago Ah, ok, missed that filter, sorry. As for the missing functioncrypto_cert_subject_alt_namethat would still be required..size_tmight be the better choice for sizes (since these are new functions).size_tmight be the better choice for sizes (since these are new functions). @informatimago So, if you readd the missing old function (and possibly replace theint` arguments) I'll merge this one, sorry it took so much time.\n\nGood work anyway!. @informatimago you have a typo, I can only find crypto_cert_get_alt_names not crypto_cert_subject_alt_name with a grep.. Are you sure you need to announce the mouse wheel for smartcard logon?. What do these things have to do with smartcard logon? Seems wrong.. @informatimago good point, will change to sprintf_s. @informatimago Because the +8 is the allocation size. Might be too big, but didn't want to change it (aka too lazy to check the complete rest of usage, might be nothing, might be something)\nAs for the structs, have fun refactoring all the code ;)\nThis is not in scope for 2.0. @hardening yes, we should have another look at the clang-format pull ;). Does not belong to this pull, remove.\nPull requests for 2.0.0 + 1 are of course welcome.. Looks like a calculation error, all following fields are now at offset +1. Good idea, but maybe name it so it is obvious that this macro does a return in the error case?. Sure that the amount of bytes here is not times 2? mszReaders is of type LPWSTR. @informatimago Ok, could you tell the details of your setup? When I check PCSC_SCardListReadersW (which is called from SCardListReadersW) cchReaders is set to the number of characters just as https://docs.microsoft.com/en-us/windows/desktop/api/winscard/nf-winscard-scardlistreadersw tells to.... @hardening Hmm, right. Should also be possible, will check.. I'd map the ERRINFO_RPC_INITIATED_DISCONNECT code to a return code instead of setting a (unrelated) error info code.. @r-barnett but the error code set will not be overridden. That can be checked and converted to a proper exit code.. Sorry, no includes from the libfreerdp folder. They are not part of the exposed API . are you sure the setter needs to be exported? This is a protocol internal variable, so this should be hidden.. @r-barnett good question, the name is bound to the mcs module. Might be a good idea to move and rename that to freerdp.h. @r-barnett maybe freerdp_get_disconnect_ultimatum? seems short enough and descriptive. scan-build to the rescue ^^. @mfleisz Good you spottet that, missed to clean that one before commit.. This seems broken as now in the android case no library detection is done, if not also WITH_FREERDP_OPENSSL is set.\nWould suggest to do this differently by providing a default name ANDROID_SSL_LIBRARY_NAME that can be overridden from external sources.. Cleaned up in rpc_client_write_call (which might need an overhaul as there is a path where it might not be cleared). @mfleisz Ok, changed the function to return BOOL. @mfleisz Ok, done.. Might be a good idea to free previously allocated buffers if the wStream* was created by Stream_New. Might be a good idea to distinguish between static buffer and static wStream. @hardening The return value of vsnprintf is int, but other functions require size_t as argument.. it is a return value of vsnprintf.... oops. Why remove this? Adding a pseudo device for a hotplug wildcard does not really make sense or does it?. Might be good, if you allow more than one wildcard.\nStill, adding wildcard devices (see below) does not seem to make sense.. yes, might be the most simple solution. If that works for you too.. Might be a good idea to make this a static INLINE function (adds some type safety). @hardening Since the documentation tells that BIO_free_all is the same to BIO_free in case there are no stacked BIO I assumed it is easier to use the former on all occasions to avoid confusion which one to use.. And you can't accidentally forget to free a stacked BIO this way.. @hardening This function is due for a rewrite anyhow ;)\nResampling is quite broken and the sound will be distorted (only exception: 44100Hz to 22050Hz or similar special cases). @mfleisz [formatData length] behaves like strlen and returns the length without the trailing zero.. initializing variables with NULL could avoid having more than one goto label. initializing variables with NULL can avoid having to use multiple goto labels. Might be a dangerous construct dereferencing a NULL pointer (or more precise, uninitialized one). Might be a dangerous construct dereferencing a NULL pointer (or more precise, uninitialized one). Might be a good idea to use the existing ReadColor, GetColor et al functions here.. Too lazy to dig this up, is this part of the spec or why the change?. Error return for int is usually negative. Does this happen often? Looks more like a WLog_WARN or WLog_ERR message.  Looks more like a WLog_WARN or WLog_ERR message and why not abort here if the data was invalid?.  Looks more like a WLog_WARN or WLog_ERR message. Nice one +1. Formatting, space vs tab. Might be a good idea to raise this to 21 too. Sorry, missed this one, please leave the old name. Will break existing build setups.. Might be a good idea to split the strtoul off to a function too (can unify all the uses in command line parser this way). Would suggest something like BOOL parse_value(const char* input, unsigned long* result, unsigned long max). @llyzs This is true, but up/downmixing was never supported and will be handled in a follow up pull.. @llyzs for reference, tracking that in #5519. Done that in #5020 \nwill update that one after this one is merged.. done. Since glyph cache is still buggy I'd suggest delaying that (does not really do anything anyway). @mfleisz astyle accepts, although you're right, it looks weired.. Correct, did not look at the content of the struct, just moved it. No, the buffer is large enough to hold all values.. No, the buffer is large enough to hold all values.. No, the buffer is large enough to hold all values.. No, the buffer is large enough to hold all values.. Would say that is preference, the string freed is initialized NULL anyway.. True, removed.. True, fixed.. True, fixed.. Ok, fixed. True, done.. @hardening to have some debugging information available ;)\nas for lighter, do we have something like that at hand? (Please no integer implicit atomic assumption stuff). @hardening already done ;). @mfleisz done.. @hardening no, but I thought it might be a good idea to change to something not bothering anyone ^^. Good catch, didn't want to change that, reverted.. ok, fixed and added a short explanation too. Why not use freerdp_image_copy?. xfc->railNotifyIcons == NULL if not used with RAIL . unchecked allocation. memory leak, xfAppNotifyIcon was allocated with calloc. '0' is a valid notification ID but HashTable_Add will not accept that.. @hardening ok, you got me :+1 missed the obvious solution because there are local variables used when finding existing windows.. yes it does. @hardening pointed me in a simple direction, just set a comparison function that compares the pointers by type (UINT32) and use something like &notifyIcon->notifyIconId as key. Better not cast function pointers, that silences the compiler when the signature changes. Better do the casts in the implementation. No C++ comments please. @hardening I had the same thought ;). @mfleisz good catch, fixed.. exported in wlf_disp.h, no internal static. This will not work, not a pointer. You'll break a lot of connection strings with this ;). @hardening ok, that duplication was not intentional . Why this? If the symbol is not native, it should be replaced by WinPR version of it.. Why this? If the symbol is not native, it should be replaced by WinPR version of it.. Sure this breaks nothing? Will change the numerical id of all elements for such builds.. How can this work if the runtime is not the one linked to? (See pull request tester failure). @hardening there is a FREERDP_API declaration for this in the header. Better use a static inline function for this.. Why this change?. Are you sure you can remove the lenght field if there is no data?. Are you sure you can remove the lenght field if there is no data?. Are you sure you can remove the lenght field if there is no data?. Maybe add these as arguments to smartcard-logon instead of having so many new arguments?. Good point, but I'd recommend adjusting your report functions. We try to reduce the number of API changes (although we're still terrible at that). Ok, looks like something was wrong locally. My merge did corrupt the image for some reason, sorry for the noise.. Formatting, braces. Formatting, braces. Any specific reason to change the argument?. rdpLicense is opaque there, correct. But you can still access all members of rdpRdp from where it is called.\nAnyway, no blocker, just curious.. Formatting. pointer alignment. Sure this callback is always set? The struct is exposed in peer.h, so a NULL check with an appropriate error message could be helpful.. Shouldn't this be an error condition?. or like a beginners mistake ;)\nanyway, not really that important.. I'd prefer #4350 finally being agreed upon and merged ;). True, will add an assert. done.. @hardening fixed the duplicated check.. @hardening necessary for the label to jump to, did not want to refactor the whole function (but then again it is not that large). ok, done :). Color format issue, missed in #5221 (the cursors I\u00b4ve tested with had little R and B components :/. done.. No, this eliminates the issue that the member variable is a const BYTE* but space is allocated by malloc (yes, its only purpose is to tell the compiler we know what we are doing). No, the first one is to check that numMonitors is bigger. maxMonitors can be larger than INT_MAX.\nThe second one is an assignment to numMonitors which we have proven to fit.. lpFilename is a function argument, name will be allocated by this call. what do you mean? . good catch, missed that one.. true.. Because in some loops we count down from top to bottom and abort condition is -1 for the iterator. Since we have already proven that the value can fit in an INT32 the casts were the easier choice.. See below.. Variable scoping (not strictly necessary, just preference). please remove.. @wintersandroid ah, ok, point taken.. What is this for? No real reason to do that magic. What is this for?. which the compiler then will complain about (signed/unsigned mismatch)\nAs we already established the value is in range, the cast is safe.. Changes here not really required (don\u00b4t change anything). Changes here not really required (don\u00b4t change anything). Changes here not really required (don\u00b4t change anything). Changes here not really required (don\u00b4t change anything). Changes here not really required (don\u00b4t change anything). I\u00b4d change that to cbDomain = cbDomain > 2 ? cbDomain - 2 : cbDomain; to avoid a possible overflow. I\u00b4d change that to cbUserName = cbUserName > 2 ? cbUserName - 2 : cbUserName; to avoid a possible overflow. I\u00b4d change that to cbPassword = cbPassword > 2 ? cbPassword - 2 : cbPassword; to avoid a possible overflow. I\u00b4d change that to cbAlternateShell = cbAlternateShell > 2 ? cbAlternateShell - 2 : cbAlternateShell; to avoid a possible overflow. I\u00b4d change that to cbWorkingDir = cbWorkingDir > 2 ? cbWorkingDir - 2 : cbWorkingDir; to avoid a possible overflow. Please no C++ comments. so you think the trio_snprintf has some bounds check issues?. ok, seems you were correct nice catch!. @mfleisz No, that is on purpose. (4 digits line count, if you have more this function is really awfully slow)\nProblem was that if for some reason there is an error condition -1 is returned by trio_snprintf and that translates to 0xFFFFFFFF unsigned.... @mfleisz it only reserves space, that is correct. I still don\u00b4t see any instance where there is a broken bounds check though, the arguments for the follow up messages are calculated on used space and snprintf should truncate if there is not enough space left.... @mfleisz That is a bug in trio_snprintf. Need to check where exactly that occurs.\nThe format string is [1234] 01 02 03 04   abcd which translates to:\n[ + <max 20 char linenumber> + ] +  data as hex 02 + <3 spaces>+ <buffer line as ASCII> + zero terminator\nLines are limited to 16 characters per line, that is 91 characters per line maximum!\nSince the buffer is large enough it means that trio_snprintf does something wrong as %04z only means that it will reserve at least 4 characters for the line number, but use optionally more if required.\nAs we get some -1 return it means that is broken...\nsee http://pubs.opengroup.org/onlinepubs/7908799/xsh/fprintf.html. @mfleisz ok, checked with a dummy buffer of size 0xffffff  and it works flawlessly now. Only way to get a crash is to dump beyond the buffer boundaries.... ",
    "g-reno": "Ok, I'll remove these lines but please note that the current tag causes the last changes to openssl-android to be overwritten and the build therefore fails.  I'll resubmit a new pull request.\n. Using the latest SDK.\nMy android environment has been in existence for many years so it has the original support library path.  Anyone who has been developing in Android for a while and updated their environment using Android SDK Manager will have this.\n. I'll add this back in.\n. Maybe something like Please install Support Library?\nI'll add something.\n. Ok, I added an error when neither directory is found.\n. ",
    "pfpacket": "@bmiklautz Just followed other clients: such as cleint/X11/cli/xfreerdp.c:60, client/Windows/cli//wfreerdp.c:78\nAny problems here? If so, I'll fix them.\nAnyway I have to fix the formatting issue.\nThanks.\n. ",
    "mdhorda": "Yes, good catch! I'll make the change.\n. According to the spec the padding comes before the pduType. However, I have consistently observed it to be the other way around. The only other place that I have seen this code implemented is here:\nhttps://github.com/wallix/redemption/blob/master/core/RDP/share.hpp#L172\nThey also read the padding before the pduType.\n. Thanks @bmiklautz . I have added a comment to the function to clarify that the order of the fields is reversed from the spec.\n. ",
    "Vinche59": "@awakecoding Beware ! \nI commented out this portion of code because for me it broke Windows smartcard login authentication. Surely It will break other applications from what you said in your note.\nActually, I done my testing in that environment : \nWindows Client -> Thinlinc (Ubuntu 14.04) -> Remote Windows \nSo in my case, I think it's WinScard speaking to WInscard.\nI'll check tonight if my modifications breaks application compatibility with this environment : \nLinux Client -> Thinlinc -> Remote Windows \nand\nLinux Client -> Remote Windows\nI'll keep you posted.\nIn the mean time, maybe it'll be safer to revert back this commit ?\n. ",
    "Tarnyko": "Hi,\nYes ; there is no such define currently (all clients, including X11 and Mac, use the magic numbers) so I guess I have to find a good name, centralize that in input.h and make all clients use it. Will investigate.\n. Good catch. Will fix that in the next PR.\n. ",
    "zavadovsky": "Yes. It's my mistake.\nShould be:\nx1 = cinvalid[0].x;\ny1 = cinvalid[0].y;\nx2 = cinvalid[0].x + cinvalid[0].w;\ny2 = cinvalid[0].y + cinvalid[0].h;\n. ",
    "zhangzl2013": "yes, I'll fix it right now.\n. Fixed, thanks.\n. Yes, but let's handle the return value issue in other patch series.\n. Let's focus return value issue in other patch series, what do you think? ;-)\n. ",
    "rozhuk-im": "Yes, linux include alloca.h in stdlib.h.\nIn man:\nhttp://linux.die.net/man/3/alloca\ninclude alloca.h\nhttps://www.freebsd.org/cgi/man.cgi?query=alloca&apropos=0&sektion=0&manpath=FreeBSD+10.0-RELEASE&arch=default&format=html\ninclude stdlib.h\n. WLog_DBG display messages only then you run: env WLOG_LEVEL=DEBUG xfreerdp ...\n. Ok.\nI will fix it late, in next pull request, by adding:\ndefine WLOG_ERR(_tag, _fmt, args...)                   \\\n    WLog_ERR(_tag, __FUNCTION__\": \"_fmt, ##args)\n\nand same for WLog_DBG.\n. To many work by hands, very long lines with code:\nWLOG_ERR(TAG, \"Unexpected FASTPATH_FRAGMENT_LAST\");\nAlso: __FUNCTION\": \"_fmt - calculated at build.\nAlso WLOG_ERR in any time can be modified to add line num or other info, or format may be changed.\n. You sure?\n. Not always: if(!device) = if(device == NULL)\n. No.\nfreerdp_tsmf_client_audio_subsystem_entry() -> tsmf_alsa_open() ... tsmf_alsa_free()\nIf we call  tsmf_alsa_open() more than once than we have resource leak.\nrdpsnd have Close() and reopen work by design.\ntsmf does not have Close() and device can not be changed.\nIn tsmf OSS code i add checks to prevent reopen.\nALSA code is weird, especially in rdpsnd. \n. to your notice\n. ",
    "realjiangms": "I found the expected result is not correct when this test report failure.\nThe code above this line is:\nRECTANGLE_16 inRectangles[5] = {\n        {1680,    0, 1920,  242},\n        { 294,  242,  971,  776},\n        {1680,  242, 1920,  776},\n        {1680,  776, 1920, 1036},\n        {   2, 1040,   53, 1078}\n};\n=======================>\nThe 'union' of above rects should be 2,0,1920,1078 \n=======================>\n    RECTANGLE_16 screenRect = {\n        0, 0, 1920, 1080\n    };\n=======================>\nThen intersect with screenRect 0,0,1920.,1080, the result should be 2,0,1920,1078 \n=======================>\n    RECTANGLE_16 expected_inter_extents = {\n        2, 0, 1920, 1078\n    };\nSo I think the expected rect should be fixed\n. @hardening \nSo I copy the extents test here to prove that before the 'intersect' operation, the result is as my expected {2, 0, 1920, 1078}\n. I agree an invalid rectangle should be denied.\nActually my original idea is just test \"right = left or bottom = top\". If we don't like width <0 and height < 0, we can change to just check '='.\nOr do you think we should be more strict, only allow (0,0,0,0)? I think that's what the original code thinks, but it returns true when it is NOT empty.\n. OK. I would also fix the 'is_empty' to only check for top=bottom and left=right.\n. @hardening \nRegarding your question of 'a test that would demonstrate the need for the changes in region16_intersect_rect()', I reuse the above 'test_norbert_case' to demonstrate the need for the fix in region16_intersect_rect. Without the fix, the result would be \n{0, 0, 1920, 1078}. The original incorrect 'expected_inter_extents' exactly shows the bug\n. Here I move the xf_lock_x11 after bitmap data decode so that other thread which need X display could run on other CPU while time-consuming bitmap decode task is running.\n. Protect following X function.\nWe do correct thing in xf_input_thread, but seems forget here.\n. I notice FreeRDP project is cleaning code without return check recently. \nI agree that we should check NULL return, I need to think about how to define the behavior if we have NULL returned. So do the other one.\n. The return value of shadow_multiclient_consume is whether or not the subscriber really consumes the event. It's not cared currently. An explanation would be added, instead :)\n. Yeah It should be. \nI want this callback as the last line in post connect, if subsystem->ClientConnect exists.\n. Yeah all message id should be put in switch block.\nBlame my inertial thinking\n. Will we have compile error if WITH_DEBUG_DVC is not set?\n. Maybe it's redundancy comment: Shouldn't we initialize 'CompressionRatio' since it's possible that we never set it?\n. Note: This is almost completely moved to X11/x11_shadow.c\n. If thread is not used, the params and work_objects would be NULL.\nNot sure if free() abort with NULL\n. Sure, how about putting it in shadow_subsystem.c as a common function? Other subsystem implementations could use it.\n. I'll update the PR.\n. I actually hesitated to keep it private for X11 or common for all. Your suggestion give me additional reason to make the decision :)\n. @akallabeth @bmiklautz \nI'll delete the comments :) And put the comment in MSG_OUT_FREE_FN instead. I think it's clear enough.\nIt doesn't break compiler on win and Linux, but I agree it looks risky.\n. It seems to me that the event[] is never initialized after calloc. That means all events in this array are just NULL and the previous 'WSAEventSelect' doesn't take any effect(it just returns SOCKET_ERROR).\nThis is not introduced by this PR. It's the original logic in freerdp_tcp_connect_multi for win32. \n. I can see the WSAEventSelect,  it's in the diff ;). What I mean is the array 'events'.\nHere's all lines of code involve it: \n821 HANDLE* events;\n833 events = (HANDLE*) calloc(count + 1, sizeof(HANDLE));\n    899 if (WSAEventSelect(sockfd, events[index], FD_READ | FD_WRITE | FD_CONNECT | FD_CLOSE))\n  * 918 waitStatus = WaitForMultipleObjects(count + 1, events, FALSE, timeout * 1000);\nWe can see that the events in 'events' are all NULL.\n. You probably need to keep my '#ifdef _WIN32' here. Reset event on posix platform (Linux, Mac) is not correct. ResetEvent on Linux would break the read buffer because the socket event is the fd itself. We only need it on Windows\nI agree that it's every tricky for us to understand the difference on socket event between windows and posix platform due to the different implementation.\n. Oops. You've already re-defined WSAResetEvent. It should be correct now.\nAlthough it still looks a little weird and someone read this line may think it as a bug: why we call a function which does nothing. :)\n. Sorry for late reply, but it looks great now :)\n. I have to comment here as github don't allow me to add comment on hidden line.\nWe may need to also remove 'HANDLE event' above as it is never used now.\n. OK. You actually mean the 'if' inside 'if (font)'\n. Shouldn't it be \u767b\u5f55? (according to your other translation for login in this file)\n. Not sure why we need +2. Just keep same logic\n. We might not want to export Win_ShadowSubsystemEntry/ X11_ShadowSubsystemEntry /Mac_ShadowSubsystemEntry. Can we still leave them internal currently?\n. That's exactly why I have PR #3167 :)\nBut you are right, please keep it in your PR for now :)\nIf #3167 is merged first, you can remove them in this PR.\nIf this PR is merged first, I can remove them in my PR. \nJust make sure FreeRDP compiles well at anytime :)\nJust hope they are not merged at same time.\n. Yes, will fix\n. Not sure why we think the indentation is wrong for here. 4 space before ''' and 8 space before items seems to be reasonable:\n0001700: 2020 2020 3c73 7472 696e 672d 6172 7261      .        2.\n. For argument overwriting. For example, the later /v argument could overwrite former, which is defined by host:port in uri\n. I realize it might be not necessary. The parse argument function actually already support overwrite for same argument key.\nI will do more test to double check\n. Yes I'm fixing it  ;). The uri should not be logged\n. The underlying freerdp argument parser would check the arguments. We just simply parse arguments here as if we are calling xfreerdp. Keywords might be extended always and don't want to limit it in aFreeRDP\n. I discarded hashmap. It is not necessary\n. Yeah you are exactly correct. I just checked command line and find following password arguments.\n    /pth:        Pass the hash (restricted admin mode)\n    /p:               Password\n    /gp:              Gateway password\n    /assistance:      Remote assistance password\nI haven't notice the new command line argument these days :). I agree to totally discard android logging for arguments. Because we don't know whether there will be more arguments future.\n. Unknown source with unknown information always looks danger :) But we don't need to worry too much about it because underlying command argument parser will also check. And the launched APP will have same uid with original APP. Even if someone could hack freerdp by some argument (in case we really have bug !-_-), he can't get more permission (I agree there might be some unexpected behavior being allowed unexpectedly, though.)\nOn the other hand, bash never do more check for us when someone type 'xfreerdp' in bash console ;)\n. Yeah link from browser is not 'expected' by the one who is using the browser ;)\n. Yeah... Missed that. I checked all .c/.h files but missed that\n. s is expected to be cleaned by rdpgfx_server_packet_send. Will Add comment\nIt need to be cleaned at error.\n. Need to be fixed\n. OK to check written.\nWhat do you mean 'not very clean' besides checking written?\n. All similar points need to be rechecked\n. Yes I missed the length calculation. I didn't read the spec correctly when I wrote line 159. It should be fixed.\n. OK, that makes sense\n. Just want to have an insurance if future we break the stream length estimation. Currently the length is ensured\n. Yes. It is not guaranteed\n. Yes. All the 4 read subroutine need to apply this check\n. Yes it must be 4. \n. \"capsSets\" should be dynamically allocated.\n. Sure\n. Will do\n. Reply your comments both this and the next one :)\nThis is tricky, as I haven't figure out what to do if graphic commands fails. Currently I have to just ignore it (this function, new_surface should be handled, if fail the surface need to be recreated next time. But reset and release, just ignore).\nBut I agree to have them with return value, just ignore when calling.\n. I may misunderstand your question. The rfx_context_new shows if it fail, it always returns NULL.\nAre you actually asking \"How encoder->rfx is not NULL\"? The answer is that it might be called multiple times with 'shadow_encoder_prepare'. So if we've already created context, we don't create again.\n. I released the streams at the end of this function. Let me check whether there's anything missing in zgfx context.\n. It is actually correct.  Here error = rdpsnd_server_send_audio_pdu(context, 0). It fail only when error is not CHANNEL_RC_OK\n. Actually there's no reason to have this line to set client volume in rdpsnd activated handler.\nI copied the code from Windows/wf_rdpsnd.c when I introduce rdpsnd for shadow server last year without much considering. So I want to remove it this time\n. If a subsystem implementation need to set volume (future), it should post SHADOW_MSG_OUT_AUDIO_OUT_VOLUME message to clients (shadow_client_post_msg/shadow_client_boardcast_msg)\n. That makes sense\n. This might breaks h264 decoder. The idea is NOT to create codec contexts when creating the surface. Therefore we postpone the creation. Codec contexts are created when we receive a corresponding surface command. Therefore, only freerdp_client_codecs_prepare is called, freerdp_client_codecs_reset is never called. That at least breaks the h264 codec as weight and height is 0.\nI think if we don't want to create context for unused codec, we should replace the FREERDP_CODEC_ALL flag in CreateSurface.\nNow freerdp_client_codecs_reset in gdi_CreateSurface actually does nothing as no context has been created. \nfreerdp_client_codecs_rese in gdi_ResetGraphics only have effect after a gfx->SurfaceCommand is received. But it seems we should have ResetGraphics command before any surface command received.\nDoes it still work with standard windows RDP server currently?\n. The codec context should be indeed only created when it is really used. Reset codec should not call prepare as it should only 'reset' the 'existing' codec. Instead, prepare should invoke codec reset subroutines so that we complete the initialization (Although currently only h264 codec really need reset when it is created, we should anyway keep all codec consistent in the semantic level)\nI drafted PR #3376 for fix\n. Why we require android-21? Is it required by openssl1.0.2h?\n. It could be better. \nHowever there's no precedent/sample to have static lib for something used by both channel server and channel client. But there's several existing similar 'common' stuff in other channels such as rdpei and rail.\nWell, actually I don't know how to do it gracefully in current compile framework ^_^. Or we should make functions as static inline and put them in to xxxx_common.h? \nBut anyway I think such work would be better resolved in a separate refactor PR for all of the xxx_common.c future. Personally I would hope to have a new style of channel common code as early as possible, because I would hope to add support for more server channel  such as usb and tsmf\n. Do we miss the event if the loop exits when \"now == dueDate\"?\n. Let me find what's our regular good way to get packet size. Maybe a hard coded macro would be better\n. Just don't want to introduce any magic number in code. It's OK to change it to 2 as 16bit exactly mean 2 bytes  ;)\n. After CONNECTION_STATE_CAPABILITIES_EXCHANGE stage this callback is invoked. I checked code in libfreerdp/core/peer.c and found the return value of Capabilities doesn't impact the further process. The shadow_client_recalc_desktop_size() is an internal static help function whose return value is '@return TRUE if width/height changed'. In this callback I just use it to ensure the desktop size is correct because the client side WIDTH/HEIGHT is negotiated in CONNECTION_STATE_CAPABILITIES_EXCHANGE stage. So:\n1. In any case the shadow_client_recalc_desktop_size need to be called.\n2. We don't care whether desktop size is changed in this callback, so the return value of shadow_client_recalc_desktop_size is ignored.\n. Because github tab = 8 space, while our non-documented code style define tab=4 space, see\n\ncat scripts/format_code.sh\n!/bin/bash\n\n$ASTYLE --lineend=linux --mode=c --indent=force-tab=4 --brackets=linux --pad-header \\\n                                                           --indent-switches --indent-cases --indent-preprocessor \\\n                                                           --indent-col1-comments --delete-empty-lines --break-closing-brackets \\\n                                                           --align-pointer=type --indent-labels --brackets=break \\\n                                                           --unpad-paren --break-blocks $@\n                                                           exit $?\n....\n. Not accurate.... It's actually totally wrong :)\nI should have check the comments when I split code into different functions\n. I prefer not, because the logic model is not\n\n```\nif check1:\n   return\nif check2:\n  return\ndo something\nreturn\n```\nThe logic model here is actually:\nif case1:\n  handle1\nelseif case2:\n  handle2\nelseif case3:\n  handle3\nelse\n  handle4\nJust currently we happen to have only 2 different cases. :)\n. Yes... So remove it. In new approach, image copy is done by nsc_process_message\n. GfxH264 is set in next line.\n. I got the color format from the code before the 'color conversion' fix. In previous approach, the code is\uff1a\n```\n    nsc_process_message(xfc->codecs->nsc, cmd->bpp, cmd->width, cmd->height, cmd->bitmapData, cmd->bitmapDataLength);\nXSetFunction(xfc->display, xfc->gc, GXcopy);\nXSetFillStyle(xfc->display, xfc->gc, FillSolid);\n\nif (xfc->bitmap_size < (cmd->width * cmd->height * 4))\n{\n    xfc->bitmap_size = cmd->width * cmd->height * 4;\n    xfc->bitmap_buffer = (BYTE*) _aligned_realloc(xfc->bitmap_buffer, xfc->bitmap_size, 16);\n\n    if (!xfc->bitmap_buffer)\n    {\n        xf_unlock_x11(xfc, FALSE);\n        return FALSE;\n    }\n}\n\npSrcData = xfc->codecs->nsc->BitmapData;\npDstData = xfc->bitmap_buffer;\n\nfreerdp_image_copy(pDstData, xfc->format, -1, 0, 0,\n            cmd->width, cmd->height, pSrcData, PIXEL_FORMAT_XRGB32_VF, -1, 0, 0, xfc->palette);\n\n```\n\nThe old PIXEL_FORMAT_XRGB32_VF should corresponds to your new PIXEL_FORMAT_BGRX32_VF\n. @akallabeth \nI tested with shadow server implementation (both before and after the color conversion fix) and found it's upside-down mirrored. That's why I went to check the original code. The I found PIXEL_FORMAT_XRGB32_VF fixed the issue and matches the original code.\nI think your problem might in gdi_SurfaceCommand_ClearCodec code path. I just checked the original code(before color conversion fix), in gdi_SurfaceCommand_ClearCodec  and xf_SurfaceCommand_ClearCodec(which is discarded now), the code after 'nsc_process_message' is just 'CopyMemory', which is equivalent to freerdp_image_copy with PIXEL_FORMAT_BGRX32 -> PIXEL_FORMAT_BGRX32.\nSo the problem here is, we refactored nsc_process_message to have freerdp_image_copy, however not all original calls to nsc_process_message have same color format. In normal surface_bit command, nsc result should be copied with PIXEL_FORMAT_XRGB32_VF but in gfx clearcode command, nsc result should be copied with PIXEL_FORMAT_XRGB32. The refactoring changed the code behavior!\nNow I think now we have to pass in the src format to nsc_process_message, although it looks ugly. \nLet's me also check whether rfx decoder has different behavior between normal surface_bit command and gfx RemoteFx command\n. Fortunately, the rfx codec kept PIXEL_FORMAT_XRGB32 in everywhere before the color conversion fix.\n. This line should be 0,0. \nOr the bitmap will actually be pasted at cmd->destLeft_2, cmd->destTop_2\n. Since you decide to add VF flag here, would you revert the VF change inside nsc_process_message?\n. Please note the difference from gdi:sw mode. In this case (gdi:hw), we are using gdi->primary_buffer as bitmap buffer for rfx rectangle instead of the render target. And later we will paste the whole bitmap to (cmd->destLeft, cmd->destTop) of the render target. \nSo cmd->destLeft, cmd->destTop should be changed to 0,0, and gdi->stride here should be replaced by cmd->width * GetBytesPerPixel(gdi->dstFormat)\n. And, I have to say, the new rfx_process_message has potential disadvantage compared to original approach (before the refactoring).\nThe previous apporach doesn't copy the tile->data in rfx_process_message and left it to the caller. So:\nWe used to have possiblity to XPutImage the tile->data directly to the xfc->primary. Now we have to paste it to primary_buffer first and then XPutImage the final result. This introduce once more memory copy.\nAlso, since now we don't operate on xfc->primary directly, if the existing screen is updated by some other orders, and server side want to update a set of small region by rfx, the decoded bitmap in gdi->primary_buffer might not contain the content of existing screen. Once it is pasted to the xfc->primary, some valid region might be updated with black or some out-of-date content. This would not happen in gdi:sw but might happen on gdi:hw\n. I mean, to revert my changes inside nsc_process_message in previous PR\n. Never mind. You've already done it in another PR. \n. I noticed this format change. Why it looks different rule from rdpgfx_send_solid_fill_pdu below?\n. I notice the declare of capsSet is moved into this code block. Some compiler might ask everything to be declared at very beginning of a function for .c files. If we don't want to be compatible with such compiler, then it's just OK.\n. Yes it's compatible. Long time ago when I failed, I probably didn't define it at beginning of a block scope\n. Yes... I copied code from client side, and remove unused events, but I didn't notice there's only transport_get_event_handles now...\n. ",
    "HenryJacques": "Correct, in 2008.\nSee https://github.com/openssl/openssl/commit/87d52468aa600e02326e13f01331e1f3b8602ed0#diff-0a42cda89821d0691aeb6a4a5d124894\n. Isn't this done in RegOpenKeyExA()?\n. @akallabeth  What is broken? On my computer the smartcard channel gets loaded twice (as always) and /smartcard & /smartcard: have the same behaviour.\n. Looking at https://linux.die.net/man/3/ssl_set_info_callback the ret value can be interpreted with ssl_alert_type_string. This function return F (as Fatal)  \ncase SSL3_AL_FATAL:\n        return \"F\";. KRB5_KDC_UNREACH shouldn't be in this case. In my opinion, it should return a specific message in WLog_WARN indicating it cannot contact the Kerberos server (you can keep the same error FREERDP_ERROR_AUTHENTICATION_FAILED). I don't agree. FREERDP_ERROR_CONNECT_PASSWORD_CERTAINLY_EXPIRED is only used for non-domain workstations. In this case the Kerberos server was reached. We should define a new error code, for example FREERDP_ERROR_CONNECT_CLIENT_REVOKED. In my opinion, we could add a WLog_WARN message indicating the reason of this error. During my tests I had this error only when the account was forced to use smartcard logon (and not login/password). ",
    "cgholam": "Le 7 avr. 2015 11:34, \"Norbert Federa\" notifications@github.com a \u00e9crit :\n\nIn winpr/libwinpr/utils/collections/MessageQueue.c\nhttps://github.com/FreeRDP/FreeRDP/pull/2517#discussion_r27869812:\n\nInitializeCriticalSectionAndSpinCount(&queue->lock, 4000);\n    queue->event = CreateEvent(NULL, TRUE, FALSE, NULL);\n-       if (!queue->event)\n-       {\n-           free(queue->array);\n-           free(queue);\n\nIs there a DeleteCriticalSection(&queue->lock) missing ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/FreeRDP/FreeRDP/pull/2517/files#r27869812.\n. \n",
    "bceverly": "Hi,\nIt's declared as non-static in /usr/include/pthread.h on OpenBSD 5.6\nThanks,\nBryan\nOn Tue, Apr 21, 2015 at 3:11 PM, akallabeth notifications@github.com\nwrote:\n\nIn winpr/libwinpr/synch/wait.c\nhttps://github.com/FreeRDP/FreeRDP/pull/2562#discussion_r28811878:\n\n@@ -109,7 +109,7 @@ static long long ts_difftime(const struct timespec *o,\n #if !defined(HAVE_PTHREAD_GNU_EXT)\n #include \n-#if defined(FreeBSD) || defined(sun)\n+#if defined(FreeBSD) || defined(sun) || defined(OpenBSD)\n\n@bceverly https://github.com/bceverly Maybe you have some insight, what\nis causing the issue with this function being declared static?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/FreeRDP/FreeRDP/pull/2562/files#r28811878.\n. OK.  I can make that change and re-test.  How would you recommend I do\nthis?  Should we let this one go through I have me create a separate pull\nrequest?  Or do you want to reject this one and have me add this in and\nre-submit the pull request?\n\nThanks,\nBryan\nOn Tue, Apr 21, 2015 at 3:46 PM, akallabeth notifications@github.com\nwrote:\n\nIn winpr/libwinpr/synch/wait.c\nhttps://github.com/FreeRDP/FreeRDP/pull/2562#discussion_r28814906:\n\n@@ -109,7 +109,7 @@ static long long ts_difftime(const struct timespec *o,\n #if !defined(HAVE_PTHREAD_GNU_EXT)\n #include \n-#if defined(FreeBSD) || defined(sun)\n+#if defined(FreeBSD) || defined(sun) || defined(OpenBSD)\n\nSo there is actually an implementation available on OpenBSD? Then this\ncustom implementation should not be used at all, it is meant for systems\nlacking one.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/FreeRDP/FreeRDP/pull/2562/files#r28814906.\n. OK.  I modified the code and re-tested.  The change has been pushed to my\nbranch in my fork of the repo.\n\nDoes everything look good?\nThanks,\nBryan\nOn Tue, Apr 21, 2015 at 4:03 PM, akallabeth notifications@github.com\nwrote:\n\nIn winpr/libwinpr/synch/wait.c\nhttps://github.com/FreeRDP/FreeRDP/pull/2562#discussion_r28816377:\n\n@@ -109,7 +109,7 @@ static long long ts_difftime(const struct timespec *o,\n #if !defined(HAVE_PTHREAD_GNU_EXT)\n #include \n-#if defined(FreeBSD) || defined(sun)\n+#if defined(FreeBSD) || defined(sun) || defined(OpenBSD)\n\n@bceverly https://github.com/bceverly Just push the commit to this\nbranch.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/FreeRDP/FreeRDP/pull/2562/files#r28816377.\n. I'm totally cool with that (and would prefer it) - I just wasn't\ncomfortable making the call on behalf of everyone else since I am\nrelatively new here.\n\nMy fear is that this was hiding a bug.  Perhaps it needed to be tested to\nbe == 0 instead of < 0 so I wanted some more experienced eyes to take a\nlook at it.\nThanks,\nBryan\nOn Tue, Apr 28, 2015 at 3:59 PM, Hardening notifications@github.com wrote:\n\nIn client/X11/xf_tsmf.c\nhttps://github.com/FreeRDP/FreeRDP/pull/2583#discussion_r29282025:\n\n@@ -108,7 +108,11 @@ int xf_tsmf_xv_video_frame_event(TsmfClientContext* tsmf, TSMF_VIDEO_FRAME_EVENT\n        return -1001;\n/* In case the player is minimized */\n+#ifdef OpenBSD\n\n@bceverly https://github.com/bceverly can you explain what is specific\nto OpenBSD here ?\nif the check on event->numVisibleRects is useless (which seems to be the\ncase), let's just remove it for all platforms...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/FreeRDP/FreeRDP/pull/2583/files#r29282025.\n. \n",
    "kwitaszczyk": "@hardening, currently it is safe as it's the upper bound for User and Domain strings in the SecPkgContext_AuthIdentity structure. However, if SecPkgContext_AuthIdentity is changed then this call should be changed as well. It would be good to provide some constant which says what's the upper bound.\n. ",
    "xhaakon": "I've added 100ms sleep into the loop.\n. ",
    "RoadRunnr": "I copied that from from one of the other trace functions. It seems someone thought the trace functions do not need this kind protection.\nI'll push another cset on top of this that addresses all mallocs in trace returns.\n. ",
    "peterh": "That sounds like a good idea. Something like 50e4fcbda05fd0a706ed368fa49ff6693776150b ?\n. Yes, it works when windowOffsetX is negative. In fact, that's the only time I've ever witnessed translatedWindowOffsetX becoming non-zero. As I wrote in the commit message, this hunk was added to fix exactly the case when the window is partially off the left edge of the screen.\n. ",
    "binglinoioij": "Yes, you are right. I would change it, and submit later.\n. And, i don't have any knowledge of photoshop, so i can't translate the word in the picture now. But i will try to learn some skill of photoshop to translate it. Thank you for your reply. \n. ",
    "abma": "true, will change / test\n. ",
    "giox069": "Done.\nShould I squash the two commits into a single one ?\n. I will add _n and 120 to accomodate @akallabeth paranoid programming style :)\nI will also check how to move original __FUNCTION__, __LINE__ and __FILE__ values inside my function (not yet understood how).\nI hope I will be able to do it by tomorrow.\n. ",
    "colemickens": "Yeah, I'd rather be consistent then. I've updated the commit. Thanks!\n. ",
    "DavBfr": "@mfleisz Where is there a missing tab?\n. This has nothing to do with this patch\n. Freed the line just after. Oh yes, it's the same right?. Fixed.. It also been in /media for old releases of ubuntu/debian. Why not use sizeof(buffer) too here?. ",
    "ondrejholy": "Which initialization do you have in mind? MatchDetails is used for initialization of Literals on the next line and Literals is used in the following code, so I don't think we can remove it. \n. Dammit, sorry, updated. Will be also checked by callers thanks to the following patch.... I am not freerdp maint, but the wrong indentation is here as well.... dtto. In order to handle the case when r=1 (without access into buf[p+1]).... First tuple is encoded as 40m + n if m < 3 and n < 40, see:\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/bb540809\nhttps://msdn.microsoft.com/en-us/library/cc240836.aspx\nSorry that I did not explain it fully in the commit message. . /* coverity[buffer_size] */ will be ok?. The function seems to be a little bit unfortune. You can pass outPlane, which is modified and returned. But you can also pass NULL and malloc is used consequently (though not sure that this case is ever used). In case of failure, NULL is returned and pointer to newly allocated memory is lost, but it should be freed. Maybe the function should rather return BOOL and expect that outPlane is always non-NULL.. 0 may be returned from socket() if stdin is closed and consequently the descriptor is leaked, but it is rather theoretical.... This is more or less the same as freerdp_bitmap_planar_compress_plane_rle. NtHash may be passed in, or NULL is passed in. But it seems that there is a bug, because the newly allocated NtHash should be also returned... . It seems that the same problems have also other functions in that file. May I change all the functions in that file to return BOOL to be obvious that you have to provide non-NULL?. This line should be also dropped :-/ I scheduled covscan again to be sure that I do not introduce another defect and this has been found :-) I am going to update it.... ",
    "dcatonR1": "Yes, according to the docs for GradientFill() et al.  Are you really supporting versions of Windows prior to that?\n. Sorry.  Looks fine in Visual Studio and I kept the formatting consistent with existing code, but you probably are using different tab settings than we do so I didn't see any issues.  Again, just thought this might be useful for others.  Up against a deadline at work so I don't have time at the moment to reconfigure my editor and fix style issues.\n. Yes, and generally I like to check for errors but what should happen in the unlikely event GradientFill() or CreatePen() failed?  Most likely the entire graphics subsystem would be hosed and nothing would work if that were the case.  I thought about adding logging messages, but I couldn't locate any documentation on the logging system and don't have time to try and figure it out from the code (deadline at work, unfortunately).\n. Given that the default value that CMake puts in the VS project files for WINVER and _WIN32_WINNT is 0x0501 (WIN32_WINNT_WINXP), it shouldn't even compile if those API's weren't supported.\n. ",
    "AlexFdv": "@nfedera \nDid you forget to use FUNCTION macro here and below?\nWLog_ERR(TAG, \"%s: Not implemented.\", FUNCTION);\n. ",
    "alex7ce": "A good tip, however, this is only a placeholder to prevent crash. So inside it there will be more code. It should probably move a cursor on a client machine appropriately.. ",
    "bmwiedemann": "Note that gcc already has patches to override these from SOURCE_DATE_EPOCH.\nupstream in gcc7 and backported to gcc6 in Debian and openSUSE, so this part is not really needed. date is probably only available on UNIX and not WIN32\nand https://wiki.debian.org/ReproducibleBuilds/TimestampsProposal#CMake suggests to use OUTPUT_STRIP_TRAILING_WHITESPACE option. Because other projects are also using cmake's TIMESTAMP function, I proposed\nhttps://gitlab.kitware.com/cmake/cmake/merge_requests/432/diffs\nWhen that is merged, the special case here will not be needed anymore, making everything a lot simpler.. ",
    "chipitsine": "sorry for that, I supposed c99.\nok, I'll fix that. I seen \"BOOL\", which lead me to c99. oops. \"if(appWindow)\" is right before first dereference\nwhat do you mean ?. it is not cppcheck, I checked by eyes.\ncppcheck is correct here. we can annotate it like\nvoid* urbdrc_process_udev_data_transfer(void* arg) __attribute__((nonnull(1)));\nand involve static analyzer.\nor, yes, we can check it against NULL. it makes sense.\ndone. I had a look to current jenkins build, and picked cmake from there\nas for systemd - it is ubuntu 14.04, no systemd\n(well, I agree that it might be detected in automated way, however, I think even such a build that I provided is somewhat good, let other contributors to improve it later ?)\nas for my own plans, I'd like to build on \"osx\" and I'd like to integrate memory, address, thread sanitizers (I already have several tests failing with thread sanitizer). I modified commit. ",
    "rbirdic": "On Debian freerdp2 package fails for all mips architectures (mips, mipsel and mips64el) due to missing CMSPAR define.\nMaybe it would be better to use just mips flag, to cover all mips arches.. ",
    "CodeAbyss": "Undefined behavior on \"wfPeerContext *context\", as it is accessed before being initialized or assigned. ^ Fixed by moving assignation before the \"if\" check.. ",
    "uplusplus": "Refer: urbdrc_search_usb_device\nWhen usb device was removed, channel->Close() was closed to close the channel for this device.\nAs the channel->Close reference to dvcman_close_channel_iface.\nAccording to the RDPEUSB document, we should remove the channel, So I copied some lines from dvcman_close_channel to dvcman_close_channel_iface;\nI missed the NULL check - -||. right. can be ignore or print some warning inside the function. ",
    "hendwolt": "Still 3 times ((ULONG_PTR)pSrc[0] & 0x0f) ?. It's not about the cast warning, but checking the same value (pSrc[0]) 3 times.\nShouldn't it be:\n((ULONG_PTR)pSrc[0] & 0x0f) || ((ULONG_PTR)pSrc[1] & 0x0f) || ((ULONG_PTR)pSrc[2] & 0x0f). A few more lines down there is already such an assignment with the cast. In both cmdline.c files.\nI tested both versions and both work. . ",
    "ilammy": "Well, this is kinda bad. Note that path is referenced on the line 115. The compiler is likely to remove this condition entirely on the basis that NULL check is redundant because passing NULL to _wcslen() is undefined behavior thus it must never be NULL.\nI'd move this check to the start of the function, before doing anything, and drop the free() call.. I initially used Stream_{Read,Write} there but then I realized that they do not handle endianness properly. Sadly, the spec vaguely says 'Unicode' without specifying the exact encoding. While we can (?) assume this will always be little-endian UTF-16, I believe we cannot assume that all FreeRDP clients will be running on a little-endian hardware, thus simply memcpy()ing that array would not work.. Maybe. I put it there because I guessed that all clients will have to perform such checks if they want to deal with that issue, so why not put this failsafe in the common function. However, it still requires cooperation from the client. If the client does not fill in the file size immediately in FILEDESCRIPTOR list then the server can still break later when it explicitly requests the file size and proceeds with content retrieval (as there are not checks there).\nI placed that check before any file content transfer in order to abort the whole clipboard paste if there are files like that. If we fail it later then remote Windows will just stop, show no error messages, and paste random files which it has managed to download so far. I believe this is wrong user experience as it suggests successful transfer for the user. But it is mainly caused by the fact that xfreerdp does not show any error messages. I guess there would be no problem with aborting the transfer halfway if we (more prominently) tell the user what's broke.\nAlso, I did not put these checks into wClipboard stuff because I felt that a 'generic clipboard' should not deal with peculiarities of cliprdr protocol and its server-side implementation. However, it may be a good place for them, as the final frontier where we can prevent a disaster on the server.\nAnother option wouly be to remove this failsafe entirely. I do not remember which systems actually fail catastrophically if they are faced with 2GB+ files. Maybe it's only the oldest ones which get stuck in an infinite loop, with newer ones handling it correctly or at least failing gracefully.\nI have no problem with moving this check into the client just before calling cliprdr_serialize_file_list(), just don't see any practical merit in it at the moment.\n@akallabeth, what's your opinon on this?. Stream_GetRemainingLength() returns size_t, maybe we could simply cast count to size_t so that multiplication result is size_t instead of UINT32?. Or we'd better do that when printing an error message, with divison in the condition as you suggest.. I'm afraid ConvertToUnicode() cannot convert between different endian variations (at least because it ignores the code page argument and always converts from UTF-8 to native-endian UTF-16). And there is no BOM which can tell whether it is little or big endian, so I don't get what we could do with ConvertToUnicode() even if it could convert endianness for us.. Yeah, I've done as above: explicit division in the condition where the check is performed. I've still used size_t in the error message as we print byte count from Stream_GetRemainingLength() and it seems natural to compare it to the expected number of bytes.. @hardening, that functions are doing quite well for UTF-8\u2014UTF-16 conversions, but here we want to convert between UTF-16 bytes and WCHARs, keeping the WCHARs because that's the type of the cFileName field of the FILEDESCRIPTOR struct.\nThe file name is Windows file name so Windows client using this clipboard function can directly use the FILEDESCRIPTOR struct without any additional work, while UNIX clients will have to convert UTF-16 into UTF-8 and then also replace backslashes with slashes. ConvertFromUnicode() won't do this for the client.\nOn Windows we use native FILEDESCRIPTOR definition. On non-Windows platforms we use our own struct from WinPR which is kept identical to the one on Windows. While it is totally possible to use a custom struct like WINPR_FILEDESCRIPTOR in both cases, I'd like to keep it named FILEDESCRIPTOR as in the spec and have it accurately represent the data received or sent to the server (which means UTF-16 file names with Windows-style separators). Non-Windows clients will not be able to use FILEDESCRIPTOR directly anyway, they will have to have their own custom structs for representing the files on the clipboard. Thus they can do any file name conversions they need by themselves.\nThus I do not see any problem with doing Stream_Read_UINT16() in a loop as that's exactly what we do here. @akallabeth's PR makes it prettier and more self-explanatory, so it would be nice to use those functions.. We can avoid duplicating the free by moving the assignment out of conditional:\n```c\nerror = rail_order_recv(rail, data);\nStream_Free(data, TRUE);\nif (error)\n{\n        WLog_ERR(TAG, \"rail_order_recv failed with error %\"PRIu32\"!\", error);\n        break;\n}\n```. It's a matter of style, but with functions that deal with resources I personally like to have a single return point and structure error handling with goto. This ensures that the resources are always freed.\nLike this:\ndiff\n    if (h != INVALID_HANDLE_VALUE)\n    {\n        if (!ConvertFindDataAToW(fd, lpFindFileData))\n        {\n            SetLastError(ERROR_NOT_ENOUGH_MEMORY);\n-           free(fd);\n-           return INVALID_HANDLE_VALUE;\n+           h = INVALID_HANDLE_VALUE;\n+           goto out;\n        }\n    }\n-\n+out:\n+   free(fd);\n    return h;\n  }\nThough maybe it's an overkill in this case.. This field is not actually initialized in execResult. If rail_recv_exec_result_order() fails before filling in the string (e.g., in rail_read_server_exec_result_order()) the we'll get heap corruption here.\nI'd recommend to zero-initialize execResult (and other structures in this function, while we're at it). I guess you can try adding = { 0 } to declarations, but if that fails then explicit ZeroMemory calls should do the trick.. I guess we can do realloc() here instead of free() + malloc(). You have to be careful to handle realloc() failure, but I think this field will be eventually freed, so we can simply return here if realloc fails, just as we do now for malloc().. Here is the same realloc() thing as above.. Oh, nevermind. I missed the ZeroMemory call in rail_recv_exec_result_order(). It is too sneaky placed near the variable declarations.\nSo there are no errors here, the free() call is fine.. I guess we should check the return value here. If conversion fails, it may not allocate path and further calls to strstr() will segfault.. I think instead of all these ugly #ifdefs we can do it in a cleaner way. Why not provide a separate unicode_icu.c file with ICU-based implementations for all the functions from ?. I'd personally prefer these to be named something like UseWmSkipPager and WmSkipPagerEnabled instead of using arrays. Because\nc\nif (settings->UseWmSkipPager)\n        SetWmSkipPager(settings->WmSkipPagerEnabled);\nis arguably more readable and unambiguous than\nc\nif (settings->WmSkipPager[0])\n        SetWmSkipPager(settings->WmSkipPager[1]);\nAlso, I think that the Extensions comment refers to the two fields that follow, so it isn't nice to separate them. The new settings can be placed at the end of the structure.. This should be safe as sizeof does not execute the code. Referencing the pointer makes it easier to change the type of the pointer without messing up the allocation.\nAnyway, it's a matter of code style. I've grepped to code base and it seems that explicitly mentioning the type in *alloc() functions is more common. So your suggestion makes the code more consistent. Thanks for pointing it out.. Oh, right... These do exist.. Yes. It's mentioned in the commit message (so not immediately visible in the diff).\nMS-RDPERP 2.2.1.2.3 Icon Info (TS_ICON_INFO):\n\nCbColorTable (2 bytes): An unsigned 16-bit integer. The size, in bytes, of the color table data. This field is ONLY present if the bits per pixel (Bpp) value is 1, 4, or 8.\n\nTechnically, DIB format uses palettes for 1, 2, 4, 8 bpp formats, but RAIL seems to support only 1, 4, 8 bpp. I've never encountered 1 and 4 bpp icons, but 8 bpp were causing troubles because of this bug, the alpha and color tables were incorrectly parsed and the icon could not be processed.. It should not happen at all because the spec says that the server MUST send us correct IDs. So yeah, it makes sense to print a warning here. (I don't think error is appropriate as the remote session is not going to terminate soon because of this.). > why not abort here if the data was invalid?\nMmm... don't remember. I think I wanted the malformed icon to be set to the window so that I see that the conversion has been made incorrectly. However, just hiding malformed icons is a resonable choice too, so returning from the function should be okay.. Initially I also thought that was the case. After all, EWMH says it's ARGB pixel data, and I pass 32 as a format to XChangeProperty(), so I'd expect it be an array of 32-bit integers that I need to cast into unsigned char*. However, it turned out that using UINT32 causes XChangeProperty() to corrupt heap memory on 64-bit machines because it expects the property data to be an array of longs which are 8-byte wide on 64-bit machines.. ",
    "dodo040": "/T enable Kerberos specific tracing like KRB5_TRACE env var does.. you're right, it's || instead of &&.. typo corrected. return removed. yes there is libpam-pkcs11. Totally agree, I should have used it as external dependency. I do the changes.. include necessary to compile even without smartcard logon. But removed from here because included previously in smartcardlogon.h.. fixed. But we may have a problem if we use it as external dependency because it seems this project is no more maintained. \nSee : \nhttps://github.com/OpenSC/pam_pkcs11\nand \nhttps://sourceforge.net/p/opensc/mailman/message/35191905/\nSo maybe it would be better not to link the library. But I agree also that import as much code as I did is not the best solution either. I could reduce the import strictly at the minimum needed.\nWhat do you think @akallabeth @hardening ?. Anyone @akallabeth @hardening ?. Checking pointer here is redundant because we already did it in freerdp_command_line_parse_comma_separated_values with assert(NULL != count); . When we don't have any argument, this allows us to just write /smartcard instead of /smartcard:. Note the \":\".. ",
    "weizhenwei": "OK, I will create a function to free window_state and call it at multiple place.. Thank you for  the suggestion, it's good to me, I will refactor to avoid dulicating Stream_Free.. I took reference on other realloc() call, and rewrote like this:\n        size = sizeof(RECTANGLE_16) * windowState->numWindowRects;\n        newRect = (RECTANGLE_16*)realloc(windowState->windowRects, size);\n        if (!newRect)\n        {\n            free(windowState->windowRects);\n            windowState->windowRects = NULL;\n            return FALSE;\n        }\n        windowState->windowRects = newRect;. I will replace free(drive->path) with drive_free(drive)  and test.. I will do all theNULL pointer check and set freed pointers to NULL afterward.. as suggested, I added these NULL checks. please give some tips if there are better ways to do so.. sorry for my stupid fault.. I am sorry for this regression, I didn't research enough on this realloc() call.. ",
    "yurashek": "These keys: \"Stop\", \"Again\", ..., \"Paste\", \"Find\", \"Cut\" are Sun keyboard native (those are placed on the left side below the \"Help\" key) and I suppose there are no such keys on \"PC-104\" kbd. It is a \"heart issue\" to find its re-mapping to the Virtual-Keys in freerdp to be able to map it back in case of the RDP client and also the server running both on Solaris. Currently my knowledge about these mappings in freerdp are very poor so please let me this small place-holder/reminder. :-). Yeh, well you did not read my initial comment. You can have a look on code of proxy_prepare() ( https://github.com/FreeRDP/FreeRDP/blob/c5572b087aa391336235c1bb4e06c11c250cf907/libfreerdp/core/proxy.c#L35 ) the \"BOOL isHTTPS\" is unused inside so you can throw a coin.\nHowever the code works fine for me where i.e. the parameter:\n/proxy:socks://127.0.0.1:1080\nwill always override anything in \"https_proxy\" in env()\nMy original idea was if there will be url parser (somewhere in the future  ;-) ) then the socks proxy can be also taken from env().\nWhat I am really curious for is the fact why such useful feature was not merged to trunk yet. I can not imagine to use xfreerdp without it.. I apologize but I was busy on garden during the weekend.\nbuf[] is the \"automatic variable\" where the initial value can not be assumed so for portability reason it is needed. However the memset() here is performed once/per session. What do you think it will \"save\" when it will not be here?. ...or did you meant line 295? memset() can be removed from there but if you debug (might happen) then it is also better to zero a buffer before use. \"Costs\" ale low but usefulness is high.. reply on select auth req. is very short so the packet fragmentation can not happen here. It is also the first received packet so here the data are in sync.. Why not.. This is very good idea to make the code clean. I reworked it by your suggestion but I need ~1day to test.. Call of proxy_prepare() is needed to set the global variable defining the proxy to ensure the isProxy will report TRUE. This is needed to avoid the hostname resolving on local but passing the hostname via the proxy to make hostname resolve on the remote end.\nMy idea was also to support the ALL_PROXY env.var as curl can do but for socks5 proxy only. Without the URL parser it can make a lot of unwanted effects so it is not in scope of this issue.\nMy usecase is very simple. As part of my work I am using lab setups mostly on virtual machines including also the Windows VMs. These \"boxes\" are on non-public IPs (like 192.168...) where I can ssh onto a machine in lab having also the accessible IP. ssh can act as the sock5 anonymous proxy. Anything else is out of scope of this issue.. ",
    "T3N4K4": "Do you mean by checking _NET_WM_FULLSCREEN_MONITORS with XInternAtom() if it is \"None\" ?. Ah I understand. I will rework it next week on monday or @nfedera could check it.\nI was a bit confused.\n _NET_WM_FULLSCREEN_MONITORS is the property.\n&prop is the property which gets returned.\n\"The function returns Success if it executes successfully.\"\nBut we should use xfree(); on prop maybe.. ?\n. ",
    "mmeyer724": "That doesn't seem to work for me :-/ I think it might be a quirk in UWAC?. It doesn't error or anything, the resolution just comes back as 0px by 0px. Both of my test machines work great with 1 in that spot (one is Gnome and the other is Weston).. ",
    "ben-cohen": "I basically copied the file from echo so I can't claim much copyright!  I've added myself, anyway :). ... when connect() fails.  Thanks - fixed.. Fixed.. I've removed them.. Yes: I simply copied channels/sshagent/client/CMakeLists.txt from channels/echo/client/CMakeLists.txt and replaced \"echo\" with \"sshagent\".  So I left the existing copyright line in and added my own afterwards.. Fixed.. ",
    "aleksei-klv": "I think GC in Android prevents this issue. At the same time, it solves problem, when app crashes after closing the window, supposed to be exception native library. And in bVNC problem solves by the same: https://github.com/iiordanov/remote-desktop-clients/blob/master/eclipse_projects/bVNC/src/com/iiordanov/bVNC/RdpCommunicator.java. Line is under comment. Usually it is implemented on the side of OS. Client just handle events from mouse, and most of mouses have 1 scroll wheel. Yes, it can be done. But it will needed 4 lines (right touch and left touch):\n                    sessionViewListener.onSessionViewRightTouch((int) mappedEvent.getX(), (int) mappedEvent.getY(), true);\n                    sessionViewListener.onSessionViewRightTouch((int) mappedEvent.getX(), (int) mappedEvent.getY(), false);\n                    sessionViewListener.onSessionViewLeftTouch((int) mappedEvent.getX(), (int) mappedEvent.getY(), true);\n                    sessionViewListener.onSessionViewLeftTouch((int) mappedEvent.getX(), (int) mappedEvent.getY(), false);. It prevents crashing the app due the exception: \"Fragment ClientPreferenceFragment not attached to Activity\" Please see solution: https://stackoverflow.com/questions/10919240/fragment-myfragment-not-attached-to-activity. Issue exists only on Samsung DeX. It can be connected with JNI implementation. You can see what happens after manually closing window on screenshot attached (). We are investigating this issue, but as temporary workaround I suggest Thread.sleep() in case of DeX mode.. This function handle actions from hardware mouse. By the way, if it is optional, maybe consider it in further updates?. ",
    "dreamadv": "xf_SetWindowText never call from other places, if freerdp run as desktop connection mode, not remote app.\nI tried to use it by call from xf_CreateDesktopWindow, but the window var has different types (xfWindow and xfAppWindow). ",
    "krisztian-kovacs": "Well, you're right that y == context->height at this point, and context->height is odd if we enter this if.\nHowever, if context->ChromaSubsamplingLevel > 0, then the plane has to be padded, which means an extra row (allocated in nsc_context_initialize_encode by ROUND_UP_TO(context->height, 2). Thus, context->priv->PlaneBuffers[0] + y * rw actually points to the first byte of the padding row.. ",
    "Nobel3D": "I've done at last commit, I changed with WmSkipPager and WmSkipPagerEnabled.. According to the following logic table:\nWmSkipTaskbarEnable = true  /// WmSkipTaskbar = true  /// Force value to SKIP_TASKBAR\nWmSkipTaskbarEnable = true  /// WmSkipTaskbar = false /// Force value to 0 (won't skip)\nWmSkipTaskbarEnable = false /// WmSkipTaskbar= true   /// Application Autoset (cannot reach)\nWmSkipTaskbarEnable = false /// WmSkipTaskbar = false /// Application Autoset\nWith one boolean variable we can only force if you want it enabled or not.. ",
    "vinzent": "hmm.. what does it lookup Release for? the source looked up is ${name}-${version} (-> freerdp-nightly-2.0.tar.bz2)  and %setup also expects a freerdp-nightly-2.0 folder. \nthe src.rpm created without %{dist} defined is just freerdp-nightly-2.0-0.src.rpm. so no change to now. \nanyway i'll update and remove the %{dist} tag.. ",
    "jaccobraat": "I am not sure there is no Content-Length header in this case only. But it is the situation I could validate using packet traces. A W10 client does not send a Content-Length header when PAA is used.\nA connection through a MS WAP (reverse proxy) server fails if the Content-length header is present. This was what triggered me to troubleshoot.. Also found this in the specification (MS-TSGU):\nThe RDGHTTP Protocol requires RDG clients to support HTTP version 1.1. When an RDG client supports only HTTP version 1.0, some features available in HTTP version 1.1 cannot be used. For example, when the chunked transfer encoding feature in HTTP version 1.1 cannot be used, the content-length field in the HTTP 1.0 header is used instead.\nA more generic solution would probably be checking for chunked transfer. Very sorry for this. Did not clean up as well as i thought. Will remove this function.. don't know either, but using != NULL creates a segmentation fault (on x86_64 linux). Removed change. Was not needed, sorry for that.. Ok, done.. Ok, done.. Moved all the http_encode_** lines before the test loop. Thanks, modfied tabsize in my editor from 4 to 8. Hope this is the correct value.. Ok, done. Ok, done. ",
    "perkerk": "I was just trying to avoid the exception, but in looking at this, the WM_SETCURSOR case where wfc != NULL has already been handled above, so this will never do anything. Plus hDefaultCursor is never referenced anywhere else, and even if it was, we wouldn't be able to access it here when wfc is NULL so I'll just take out this entire case statement. before, if the block was allocated mf_uninit blindly tries to access some fields that don't end up getting initialized, MFShutdown for one . heh - not exactly a catch. my client plays back video and each successive playback was 25% or more slower than the last. only then did I see the memory growing. @mfleisz ok but there are more logic problems in the init/uninit than just those. I'll make a another pass and clean it up. Well 8bpp was falling through to palette format below. This switch is just a reverse map of what's in the freerdp_image_copy_from_pointer_data() routine, and other resolutions aren't supported by it. I should be more specific in this case statement. \nBut, can I just get rid of this case statement and using  freerdp_image_copy_from_pointer_data altogether? Do you know why it's even in there? The and and xor data should already be in a usable format for CreateBitmap and CreateDIBSection (other than flipping it to a top-down bitmap). I should be able to call flip_bitmap on the xor data and pass it directly to CreateDIBSection instead\n. got it. I will look into what bit depths are supported for color cursors, maybe some <24bpp formats do need to be converted to an RGB (24 or 32) format. I'll also check what happens in the 16bpp case. ",
    "p-pautov": "So the alternative would be something like this?\nStream_Seek(s, 4);\nStream_Read_UINT32(s, packetLength);. packetLength includes both header and payload size, so we want to set total capacity here.. WAIT_TIMEOUT is used below only in case of \"_WIN32\" and I believe \"poll\" is not going to be used in that case, so there seem to be no need for such fixup.. Makes sense to initialize \"status\" with \"-1\" on line 1529 to fail for non implemented commands.\nP.S. I can't leave comment for line 1529 for some reason.. @ccpp This statement creates unnecessary confusion as if \"poll\" is supported on _WIN32 and it's not.\nIn case of _WIN32 the code on line 724 does \"BIO_get_event(tls->bio, &event);\". And \"poll\" uses \"fd\", which is left uninitialized. If poll returns \"1\", the _WIN32 specific check on line 767 will fail as well.\nI think, these series of ifndefs need to be rearranged to more clearly indicate supported configurations, but in mean time we shouldn't make it even more confusing.. Looks like, handling of BIO_C_GET_EVENT also needs to be changed to\n    status = BIO_ctrl(tlsOut->bio, cmd, arg1, arg2);. It makes sense to implement BIO_C_GET_FD here as well.. This equally applies to BIO_C_GET_EVENT, i.e. there are two events and only OUT connection event is returned.\nNot sure, though, if such a comment is even necessary here, IMHO just mentioning the issue number in commit message is enough.\n. I'd expect it to be called when RDG RPC transport is used (/gt:rpc). That single BIO_get_fd call (from tls.c) should end up here in such case.. Apparently, TSG/RPC transport operates in blocking mode during tls_do_handshake() call (in tls.c), so whole handshake is done after single BIO_do_handshake() and the statement with BIO_get_fd() is not even reached.\nI guess, that means BIO_C_GET_FD implementation in RPC can be omitted for now.... Nope, RPC is supposed to be used only if it's enabled via GatewayRpcTransport AND fallback to RPC makes sense (rpcFallback == TRUE).. It seems simpler to check against known string values first and use number conversion as a fallback. That way EINVAL doesn't need to be excluded, so something like \"invalid\" won't be treated as \"none\".\n. I'd suggest to introduce wrapper around strtoul() instead, something like:\nBOOL parse_ulong(const char str, unsigned long result);\nThat way errno handling can be kept in one place.. No one is checking \"errno\" after \"strtol\" here.. It should be \"response->StatusCode = val;\" instead, \"status_code\" was already parsed into \"val\" on line 452.. May be go a step further and drop numeric values support altogether? I just can't think of a good reason for anyone to use numeric value here.. ",
    "oshogbo": "The old behaviour was broken.\nRight know if the Cookie is not prefixed by 'Cookie: mstshash=' we treat is as token.\nIf you see the code that sends the cookie and token (nego_send_negotiation_request) the cookie is prefixed by Cookie: mstshash= in case of token we skiped 13 bits but never prefixed the Cookie again. So if Token is know set it will also contains this 'msts' prefix. As well if the token will contains 'loadbalance info' like in my case then  we also will just read it to the token.. ",
    "andreesteve": "typo: user. My comment was not very clear. I've updated it. The intent here is to go inside this if when there is support for multimonitor full screen or when we are not using multi monitor (single monitor), in which case it does not matter whether the WM supports multi monitor full screen or not.. that's correct. ",
    "kevans91": "I wasn't aiming to make any functional changes here- just to make it work with a more POSIX-compliant (in this regard) libc.\nI can make this change if you'd like, though- the original submitter of the previously mentioned issue had a patch that also validated type before it was later passed to a function in case it failed both numeric parsing and wasn't one of the present values, but I had intentionally left that out as I considered it ESCOPE for the moment.. Right, I didn't apply any thought to whether the context made any sense- this was kind of a low priority for me as we're preparing for an upcoming release over in our world. =) ETIME, as it goes. =(. ",
    "informatimago": "Oops, I relied on autoformat, but of course it doesn't process the scripts. Will do.. Well, without reformating of the #define lines, they're not all aligned, so it's harder to read.\nNow, the script can be improved to use tabs instead of spaces, but it's harder than just using printf %-50s.  If you insist on this part, I can do it still.. Because name is declared cons char, but the function returns char* p.\nname comes from calls to freerdp_command_line_parse_comma_separated_values_offset with either literal arguments, or arg->Name.  So it's better to create a mutable string in all cases.\nThe alternative would be to return a const char**  but this result is used in a dozen or more places, where const would have to be added.\nGranted, most of the strings in those argv arrays are never mutated, only the passwords are (AFAIK), but if we want the help of the compiler validating that, using const or not, we need to do this. (unfortunately, we cannot specify that some slots of the array are mutable and some are not; we'd have to use a struct for that).. Oh, I see, you're allocating the space for the copy after p[0]. I would advise a comment such as: / allocating a copy of name after p[0] so it may be freed along with p. /\nAlso, in this case, don't use calloc.  I'd use: malloc(sizeof(char*)*1 + sizeof(char)*(1+strlen(name))). Actually, the script leaves the comment as-is.  It was my editing that converted the tab to spaces in this comment. Sorry. I put back the tabs.. The name was wrong in the first place.. ok.\nBy the way, there are \nfind . -name *.[hc] -exec grep -nH [^:]// {} +|grep -v '\\/*'|wc -l\n1114 occurences of C++ comment in this code base!\n. The alt names are used to store various kinds of names.  The original code defines a function named\ncrypto_cert_subject_alt_name which contains a test:  (subject_alt_name->type == GEN_DNS) to filter only the DNS names. This was crazy!\nNow we also need the UPN (which is a GEN_OTHERNAME) and the email (GEN_EMAIL) which are both kinds of alt_names.\nA function named crypto_cert_subject_alt_name should return all the kinds of alt names, without filter!\nIf you want just the dns name, then name the function crypto_cert_subject_dns_name.\nAnd if you want the UPN then name it crypto_cert_get_upn, not crypto_cert_subject_alt_name!. Yes, I put back crypto_cert_subject_alt_name, calling crypto_cert_subject_dns_name in \nhttps://github.com/FreeRDP/FreeRDP/pull/4829/commits/79d2294a2313e36cd9e2101948cfafed3f186d23\n(Just for the sake of API compatibility, notice that in the sources, all uses have been substituted).. Oops, sorry.  Corrected in last commit.. I'd rather keep consistency across those functions, and substitute int -> size_t for lengths in all of them at once, instead of just the new ones.. What about silently truncating the input string (CLIENT_STATIC_ADDIN_TABLE[i].name)?\nEither the pAddin->cName has no reason to be of limited size, and then it should be allocated dynamically to allow for the size of the names from the table,\nor there's a good reason to limit the size of cName (eg. protocol or standard specification), and then the fact that the names in the tables are too big should be signaled as an error (preferably a compilation-time error, since they're literal, but a run-time error will do too).\nIn any case, it seems to be rather bad to silently and blindly truncate data.\n(But still better than strcpy in this case).. Since both str and HardwareIds[0] are declared to be char[DEVICE_HARDWARE_ID_SIZE] and we ensure that str is null-terminated with sprintf_s, there's no reason to use strncpy here (and in similar situations).\nAt the very least, if you want to prevent problems if a change in the source made str longer, you should:\n1- use sizeof(HardwareIds[0]) to make sure a similar change of the HardwarIds declaration is also automatically reported to the strncpy calls,\n2- compare and check the sizes of HardwareIds[0] and str, because if str is longer, strncpy WILL NOT NULL-TERMINATE the destination string !!!\nThe later property of strncpy is the reason why I would in general advise against strncpy; this is a too low-level function for common use.\nIf you want both the check and ensure sturdiness in case of inconsistent changes in the sources, then you should use an abstract data type for string objects, with run-time checks implemented.. Why length+8?\nYes, filename has been allocated earlier with that size.  But if we have to pass the pointer and the size to all the functions, then it should be reified in a struct {int allocated;char* data} string, and the structure be passed to the string manipulating functions, to avoid any potential inconsistency!\nAgain why length+8 ?  We only use literal filename extensions of 4 characters?  Why not length+5?\nOr rather, why not just allocate what is needed when it is needed, ie. instead of sprintf use snprintf to compute the required size and allocate it then.  For example something like:\n```\ninclude \ninclude \ninclude \n/ Allocate the required string and format it / \nint msprintf(char string, const char * format, ...)\n{\n    char dummy[2];\n    char * result;\n    size_t size;\n    va_list ap;\n    va_start(ap, format);\n    / SUS2 doesn't take size = 0, so we use 1. / \n    size = vsnprintf(dummy, 1, format, ap);\n    va_end(ap);\n    result = checked_malloc(size);\n    va_start(ap, format);\n    size = vsnprintf(result, size, format, ap);\n    va_end(ap);\n    (*string) = result;\n    return size;\n}\n```\nFinally a word about error handling. It is nice to check the result of all allocations. However, I note that:\n1- we don't have any memory management that would let us free some memory to continue working properly. (eg. if we had documents, we could close an unused document, free memory, and continue working on the other documents).\n2- most of the case, when a memory error occur, we exit with an error code, and ultimately this will close the RDP connection.\nTherefore we could as well just exit(1) when an allocation fails. This would simplify. . Yes, sure. cchReader is already a number of bytes.  Also, the traces show the right values... ( As for spaces/tab, yes, mixups are white it's better to use 100% whitespaces, and also, programmers who use whitespaces to indent tend to earn more$ ;-) )\nfind . -name \\*.[hc] -exec grep -nH -e '^ \\|    ' {} +|sed -e 's/:.*//'|sort -u > ../a\ngit diff 25e2ab1..a393bc7 | grep 'diff --git'|sed -e 's-.* b/--'|sort -u > ../b\ngrep -nH -e '^ \\|   ' $(grep -v -F -x -f ../a ../b)\nThe only matches are \n1- lines in comments, eg. \" * foo\";\n2- parameter list continuations.  My editor is configured to indent them with only one tab, but autoformat.sh indents them with spaces aligned to the opening parenthesis.\n3- rdpdr.h in which autoformat.sh indents the enums with 4 spaces. (I let my editor indent it with tabs, but autformat.sh reverted it to spaces).\nNote: if autoformat.sh indentation of enums and parameter list continuations is the correct way to do it, I will update my editor configuration to match it.  also, the point would be to have autoformat.sh in pre-commit hook; I had a pull request with this intent, but it was before the new format.. @akallabeth PCSC_SCardListReadersW is not the last function having modified cchReaders; it's mszFilterStrings.  This one is specified to return a number of bytes in all cases (cf. str.h).  It was wrong to use the cchReaders variable, I added a nBytes variable.. This is what TCHAR is for.. Indeed, there are several modules, but they make sense only when used in combination.\nIs it ok for you if I split the PR module by module, even if they remain dead-code until everything is merged?. To be able to call this function from the scquery.c report_level function that has a format string and a va_list arguments.\nThe format argument to WLog_PrintMessageVA is mandatory, while we could pass no argument for the va_list (it can be empty). Therefore it is safer to explicitely define it.. > The image you committed is corrupted and can not be read.\nI can visualize this docs/Smartcard-Logon-Dataflow.png on firefox or safari from github.\nBut I will make it a graphviz dot file, so it\u2019ll be textual and easier to maintain.. ",
    "mmattes": "I need to know in the floatbar where the mouse pointer is within the root window to decide wether or not the floatbar needs to be shown or hidden. That value is checked outside of any Event handling as the main loop calls the xf_floatbar_hide_and_show function regulary. \nAlternativeley i could store the last x, y postion of the pointer outside of my xfFloatbar struct, but i did not want to mess around to much with the existing structures. . ",
    "r-barnett": "This function (rdp_read_header()) has a return type of BOOL, so little information can be passed through that.  Also, the rdp_set_error_info() call is the same as that used a few lines above for reason == NCS_Reason_user_requested, so it seems at least somewhat consistent.\nHowever, I suspect I'm missing your point.  Can you elaborate?  . @akallabeth Yes, that's what happens with ERRINFO_LOGOFF_BY_USER, but...you already understand that, so I'm still missing something.\nAre you suggesting the use of a different error code or maybe the creation of a new error code?. Okay.  This commit does add the reason to the exposed API though.  Does that mean that the MCS_Reason enum should be mvoed into one of the headers in include/freerdp?  Maybe constants.h where a few other constants are defined?  Or maybe freerdp.h where the rdp_context structure that contains the reason field is defined?. Good point.  I was just making it symmetric without thinking.  I can just remove the setter altogether.  There don't seem to be many others anyway, so that would be consistent.. In response to the comment about cryptic names, I was having trouble thinking of a good name.  Using all of \"disconnect provider ulimatum reason\" as a basis seemed excessive to me, but I don't have a strong opinion about it, so I could do that if you like.  Also, for some reason the name mcs_reason didn't occur to me, but seems obvious now.  Would that be better?. ",
    "jlafontaine-devolutions": "The first_hotplug and hotplug thread on Windows exclude fixed drives but adding the speudo device redirects all my drives correctly.\nWould it be better if check_path allowed more drive types?. That was some defensive programming. \nIf only one wild card could ever happen, I can remove the check.. ",
    "wintersandroid": "Ok, done.... Good spotting. Done... Done, must have done that to make it compile at the time, there is no \"default\" value setup for RELEASE_STORE_PASSWORD which means gradle wont complete.. This is the directory where the script/android-build-freerdp.sh puts the archives it downloads from github for re-use.. ",
    "hualet": "Does that situation that '0' as a notification ID exist in practical ? How do I suppose to fix this ? :sweat_smile: . I made another pull request: https://github.com/FreeRDP/FreeRDP/pull/5120 , is that what you're pointing?. ",
    "astrand": "Right, will fix.. > How can this work if the runtime is not the one linked to? (See pull request tester failure)\nThe Jenkins log is gone, will check again after new pull.. ",
    "sss123next": "to avoid initialization of codecs->rfx, codecs->nsc, if it disabled in settings, at best it does memory allocations, at worst, creating threads, mutexes, i think it does not make sense if it is unused at all and also harmful for resources. you are right, this flags does not make much sense on reset as it check for null ptr of each codec context,  looks like i am i bit overdone here.. ah, it's just typo, i missed  what flags var not used at all.... sorry for delay, i was very busy during last week,  typo fixed now, changes rebased against latest master.. ",
    "JiajunW": "If settings->Domain is an empty string, the result cbDomain would be 2. We still need to eliminate the null terminator.\nSo it should be cbDomain = cbDomain >= 2 ? cbDomain - 2 : cbDomain;. Agree. Since in rdp_write_info_packet function, we firstly write the content and then the null terminator, it is better to use the original code which reads the stream separately for content and terminator.\nI will revert this part.. ",
    "DraganNSDK": "no problems, removed the comment on my end, is that all from me?. "
}