{
    "chrismiles": "Thanks, I've merged this in.\nNote, I removed your xcode workspace/userdata files. They shouldn't be added to the repository.\nAlso, the last part of the \"pop\" effect looks like it jumps (not smooth) in the simulator.  I haven't had a chance to test on device yet, but wanted to check if the pop animation was smooth for you?\n. I have cleaned up the pop animation and fixed view positioning when presented without animation.\nNo problem with the other project based on the idea, the more the merrier.\n. What problem are you getting?  An error or it just doesn't show?  Try cutting down the example code to just the bare minimum, make sure the button or view it is pointing at exists (using debugger) before calling presentPointingAtView.\n. Good call, thanks for that.\n. The demo shows a way to handle rotation. I'm leaving it like this for now. A patch would certainly be welcome, though.\nCheers,\nChris\n. Good patch, thanks.\n. Handy additions. Thanks!\n. This patch was still too dirty to apply and also did not compile. It referred to both \"contentView\" and \"customView\"; looks like the property name was half changed.\nAnyway, I cleaned up the patch and applied it manually. See https://github.com/chrismiles/CMPopTipView/commit/ddefc6dc7f815038aef4ca1eba46e2efe7895ff7\nI renamed the tap enable/disable property to disableTapToDismiss.\nThanks for the additions, they are handy. Next time I recommend cleaning up your local commits before submitting a pull request.\nCheers,\nChris\n. Good call. I've submitted a fix for that now.\nCheers,\nChris\n. Hi, targetObject is a property that is publicly read-only, but privately read-write.\nYou shouldn't see a compiler warning as this is standard Obj-C Property Redeclaration ( http://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/ObjectiveC/Chapters/ocProperties.html#//apple_ref/doc/uid/TP30001163-CH17-SW19 )\nWhich SDK/Xcode/Compiler combination are you using?\nFor example, right now with iOS 5 SDK, Xcode 4.2.1, LLVM 3.0, I see no compiler warnings.\nCheers,\nChris\n. I can't replicate this, so closing issue.\nOpen again if you can describe how to reproduce with Xcode 4.3.2 and Apple LLVM 3.1.\n. When I convert to Obj-C ARC (using Xcode Refactor) the property is defined \"strong\" in both definitions, i.e.:\nPublic:\n@property (nonatomic, strong, readonly) id  targetObject;\nPrivate:\n@property (nonatomic, strong, readwrite)    id  targetObject;\nThis is using Xcode 4.4.1. I haven't been able to replicate a condition that results in the private declaration using \"strong\" while the public uses \"retain\" (or vice-versa).\nI would be interested in what configuration is required to generate this ARC conversion issue. If you can repeatedly replicate it, please let me know version of Xcode, LLVM, etc.\n. Good addition. Thanks!\n. Good addition. Thanks!\n. Nice one. Thanks.\n. Good addition. I think this will be very useful. Cheers.\n. Good spotting! Thanks. And fixed.\nCheers,\nChris\n. Ugh, auto dismiss handling was a little unclean. I should have reviewed that pull request more carefully. Anyway, I have cleaned up that implementation now. If you get a chance to check it, that'd be great.\nCheers,\nChris\n. Yeah that looks right to me. Bounds makes more sense in that context. Good spotting. I have committed the change.\nCheers,\nChris\n. Hi. The current \"official\" method for obtaining an ARC version is to open the demo project in Xcode and using \"Edit/Refactor/Convert to Objective-C ARC...\". The project should convert cleanly. If it doesn't please let me know.\nI'll update the README with this info.\nCheers,\nChris\n. The demo shows use with view controller within a navigation controller. But I assume you mean view controllers within custom container controllers? If you could give some more specific details of what configuration causes the problems, ideally with any example code or project, that will help a lot.\nCheers,\nChris\n. Hi, this is a good enhancement. Thanks.\nI have merged it in, but I changed the property name to \"preferredPointDirection\" and the \"unknown\" choice to \"PointDirectionAny\". I prefer this naming.\nCheers,\nChris\n. Good idea. Thanks.\n. Tagged 1.2.0.\nCheers,\nChris\n. Thanks for that. Good fix.\nThe background colour change was rejected as it doesn't animate nicely. Could be a good idea, the effect just needs to be nicer.\n. Pull requests for the new functionality are always appreciated.\nCheers,\nChris\n. Interesting. I'll review it properly soon and let you know.\n. This isn't an easy merge as the code base has moved on since this change. Haven't had anyone else ask for auto handled rotation, so I'm going to close this for now.\n. Very nice effect. Thanks!\n. I think this can be easily implemented externally to the CMPopTipView class. In a category would be a good idea.\n. I see the same error on the front page (Files tab) https://github.com/chrismiles/CMPopTipView\nI have notified github about it.\nThanks for letting me know.\nCheers,\nChris\n. Github has fixed the repo now. They are pretty quick on the response :)\nCheers,\nChris\n. I have added your Chinese description \"\u4e00\u4e2a\u6ce1\u6ce1\u98ce\u683c\u7684\u63d0\u793a\u6846\u5f00\u6e90\u63a7\u4ef6, \u7ee7\u627f\u81eaUIView\u3002iPad,iPhone\u901a\u7528\" to the README.\nI don't see a need to create a separate file.\nCheers,\nChris\n. I have fixed the deprecation warnings as part of 030ebd2a7bfe2a741ac48b477756e05c2f784cd5.\n. No. Nobody has had the need to add a property to disable gradients as yet. Pull requests welcome.\nCheers,\nChris\n. Looks good. Except, can you call the property \"hasGradientBackground\" and make sure it defaults to YES. The default behaviour should be the same as before the change.\nCheers,\nChris\n. Sorry, totally missed your update on this PR! My bad.\n. Have merged the hasGradientBackground option, and submitted PR for 1.3.0 CocoaPods spec https://github.com/CocoaPods/Specs/pull/3777\n. I have merged CMPopTipView 1.3.0 pod spec into CocoaPods.\nCheers,\nChris\n. Don't see why not. Pull request certainly appreciated :)\n. Does this change imply a minimum deployment target of 6.0?\n. I have fixed all deprecation issues as part of 030ebd2a7bfe2a741ac48b477756e05c2f784cd5.\n. I have tagged master with \"2.0.0\".\nCan you create the CocoaPod spec for it?\n. I followed this http://docs.cocoapods.org/guides/contributing_to_the_master_repo.html then just add versions to https://github.com/CocoaPods/Specs/tree/master/CMPopTipView\nI don't even use CocoaPods. I only added podspecs because people asked :)\n. The CI build is failing to compile with ARC for some reason. Does it pass pod lint locally? (Not sure if pod lint does a build, though.)\n. Ah, looks like podspecs need to be told about ARC. Try adding:\nspec.requires_arc = true\nwhich I saw used in another project's podspec.\n. There are options to flatten the drawing: \"has3DStyle\", \"hasGradientBackground\", \"hasShadow\". Does that help?\n. Interesting idea. I'll wait and see what other feedback I get about it. Thanks.\n. Looking at the submitted changes, the ivars have been deleted, but no public properties were added. The code doesn't compile with this patch. Did you forget to include the header changes in the pull request?\n. This looks to be working for me. The attached image is a capture with\npopTipView.cornerRadius = 2.0;\npopTipView.sidePadding = 30.0f;\nThe corners are almost square, and the bubbles are positioned away from the edge of the container view (the padding).\nIs this not what you are seeing?\n\n. If there is not enough room to apply the padding then it is reduced. The above examples worked for me. They are more visible when the demo is rotated to landscape. In portrait there's not enough room for large side padding values.\n. As the only method in the protocol it shouldn't be optional. An object should not conform to that protocol unless it plans on implementing the method, right?\n. I understand your view, however I disagree. The compiler should be warning you about an unimplemented (non-optional) protocol method. Which is one of the main advantages of keeping it non-optional. If it is not I recommend ramping up compiler warnings.\nI compare this strategy with MFMessageComposeViewControllerDelegate, which also has only one method, that is required. (Although admittedly Apple are not always consistent in this manner.)\nCheers,\nChris\n. Cool, that's merged. Thanks.\n. This addition works, but I don't understand the benefit. Can you explain the use case for forcing the arrow to point to the top of a button when pointing up?\nIf I enable this option in the demo I see the result below when tapping on \"Button 3\". This doesn't seem to be useful, although you probably have a use in mind that I don't yet see.\n\n. I see what you mean. It looks like you needed to point it at the label area above the text field, rather than the text field itself.\nLet's leave it for now. A better solution in future may be options for more fine grained control of positioning, but I'd prefer to hear a few more use cases from different people so we cover as many as possible.\nCheers,\nChris\n. Fixed.\n. Can you please raise the width issue as a separate bug on 2.2.0?\nSimilarly for any other issues on 2.2.0, a specific issue for each will help target fixes.\nCheers,\nChris\n. I had a look at this, but unfortunately it messes up positioning of messages with titles. See screengrabs from the demo app below.\nTwo more notes:\n\u2022 You left the podspec in, we don't need it in this repo.\n\u2022 Some of the line changes were white space only, and while legitimate, adds a lot of noise to the PR and makes it harder to review. I recommend separating white space only changes, and ideally leave them out of the PR (or make a separate PR).\nCheers,\nChris\n\n\n. Hi David,\nThe \"gesture\" for initiating a tip is probably outside of the responsibility of the CMPopTipView object. There are plenty of options though. You could show the tip on first view of a screen (which is what I've done in the past). You could have a small \"?\" or \"Help\" (or similar) button next to the main control, which pops up the tip when tapped. You could have long gesture taps on buttons (as you suggest) as a secondary gesture to pop up tips (you would still have to teach the user about the long press option, though).\nThe best option really depends on your app's UI and behaviour, and the reasons why you want to show a tip.\nCheers,\nChris\n. Should be fixed now.\n. Cool. Thanks!\n. Good question. Can you post the code you use to create the views? Or share an example project that shows the problem?\n. Did you have a look at fixing it? Free & open source software is developed by volunteers.\nLooks like the width wasn't taking the title into account. I have pushed a fix.\n. Looks good, thanks.\n. I've made a 2.2.0 release, and submitted the spec to CocoaPods https://github.com/CocoaPods/Specs/pull/10236\n. This has come up before, but my preference is for protocol methods to be required, unless they are explicitly optional. As you say, in this case, there is no sense in assigning a delegate that does not implement the protocol. I prefer the compiler to warn about that case, so makes sense to keep it required.\nCheers,\nChris\n. Thanks!\n. Can you submit a pull request containing the fix (reference this issue) ?\n. Great, thanks!\n. Looks good, except please exclude *.xccheckout and all xcuserdata from the commits. These files are user-specific and shouldn't be checked in.\n. Thanks!\n. CMPopTipView is already in CocoaPods.\n. If the button is a subview of the popup view, then any region of the button outside of the popup view's bounds won't receive touch events (even though it will be drawn). You have to keep the button inside its parents bounds.\n. I would guess height calculations are off, the last line isn't fitting so is being truncated?\nNote that you can opt-in to ARC for selected files only. That may be easier for you so you can add the latest version.\n. Thanks!\n. Can you fix spelling of Available please?\n. ",
    "myell0w": "Yeah, thanks. Sorry for the workspace/userdata, haven't yet added the xcode4-stuff to my global gitignore-file. The animation jumps, yes. If you wrap the code in animationDidStop into a UIView-Animation everything should be smooth. By the way, I wrote, based on your PopTipView a clone of the private UICalloutView that behaves and looks similar, I will release it as a different project if you don't mind.\n. ",
    "markrickert": "Whoops. meant to only do the one commit in this pull request.\n. Very welcome. Thanks for open sourcing this.\n. This is a pretty dirty commit - with all your xcode user data and everything... it'll likely get denied.\n. ",
    "iT0ny": "markrickert, sorry,fixed\n. Thanks:)It was my first pull request.\n\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e \u0441 iPhone\n20.12.2011, \u0432 4:45, Chris Milesreply@reply.github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n\nThis patch was still too dirty to apply and also did not compile. It referred to both \"contentView\" and \"customView\"; looks like the property name was half changed.\nAnyway, I cleaned up the patch and applied it manually. See https://github.com/chrismiles/CMPopTipView/commit/ddefc6dc7f815038aef4ca1eba46e2efe7895ff7\nI renamed the tap enable/disable property to disableTapToDismiss.\nThanks for the additions, they are handy. Next time I recommend cleaning up your local commits before submitting a pull request.\nCheers,\nChris\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/chrismiles/CMPopTipView/pull/9#issuecomment-3212362\n. \n",
    "LittleOrangeC": "Oh - I just noticed it's a private variable vs public variable issue.  I'd recommend renaming one.\n. Xcode 4.2.1, SDK 5.0 because I'm working on an iCloud enabled app.  \nThanks,\n  -Matt\n. ",
    "uiroshan": "I have faced this issue when I am trying to use with ARC project. CMPopTipView files converted to ARC mode by using XCode's Edit > Refactor > Convert to Objective-c ARC.. option. But I later I have noticed private variable still  contain as a  retain variable. So I changed it to strong and warning dissappears.\nThanks. \n. Hi, \nThanks for replying and taking time to look into this issue. I was using XCode 4.2 when I faced above issue. \n. I have a similar kind of issue. I was trying to show the tooltip inside the view controllers view (container view). Which has the UITableView and I am pointing tooltip to a image view inside each cell. But when scrolling the page tooltips behave abnormally pointing to places randomly.\nThen I tried to use container as the Cell. But faced above issue. Great if you find a solution and can post the solution here. \nThanks in advance.\nuiroshan\n. ",
    "serebryakov-av": "I think it should be \"strong\" in both cases instead of \"retain\". Or only \"retain\".\nhttp://developer.apple.com/library/mac/#releasenotes/ObjectiveC/RN-TransitioningToARC/Introduction/Introduction.html\n. ",
    "pashikua": "Got the same problem.\n. ",
    "nicked": "Looks like it works OK now thanks mate.\nI decided not to use dismissTapAnywhere after all, so the user doesn't accidentally dismiss the tip before they read it.\n. After some fiddling about, I added the tip to the navigation controller instead:\nUIView *buttonView = [self.navigationItem.rightBarButtonItem performSelector:@selector(view)];\n[self.tipView presentPointingAtView:buttonView inView:self.navigationController.view animated:YES];\nThis works fine, except in landscape view on the iPad, where instead of appearing on the right side of the screen, the tip appears about 2/3 of the way across.\nI found it was caused by this line (line #327): CGFloat W = containerView.frame.size.width;\nwhich returns 768x1024 when really the screen is at 1024x768. To take the rotation transform of the navigation controller into account, I guess we should be using bounds instead, so CGFloat W = containerView.bounds.size.width;\nSeems to have fixed it for me, is this correct?\n. This appears to be fixed in 2.2.0\n. ",
    "niveus": "This method doesn't work well if you want to use it as a pod. It seems most development is done in ARC nowadays. Maybe it's time to move over to it?\n. ",
    "alariccole": "You're correct, I am speaking of container view controllers. I'll see if I can whip something up, or further identify the issue. It could very well be an issue with my own setup, but I assume it isn't since UIPopoverControllers place themselves correctly.\n. ",
    "malcommac": "I've solved it at my fork: https://github.com/malcommac/CMPopTipView\nHope it helps\n. ",
    "Sempercon1": "Added a custom view , the custom view and popover view background color should be transparent but if i cleared color of custom view by default it showed as black . How to rectify this.\n. I initiated a custom view, but once i cleared  the background color of custom view it showed as black by default i want to set the custom view with needed background color.\n. ",
    "palringosteve": "The problem is that the UIWindow does not receive rotation events. I've been able to get around issues like this in the past by adding views as a subview of the first subview of the main UIWindow:-\nUIView *firstSubviewOfWindow = [UIApplication sharedApplication].keyWindow.subviews objectAtIndex:0];\n[firstSubviewOfWindow addSubview:popTipView];\n. ",
    "groupboard": "I just added an offset parameter to presentPointingAtView:\n- (void)presentPointingAtView:(UIView )targetView inView:(UIView )containerView animated:(BOOL)animated withOffset:(CGPoint)offset{\nand then just added the offset:\nCGPoint p = [targetView.superview convertPoint:targetView.center toView:containerView];\np.x += offset.x;\np.y += offset.y;\nthis works very nicely with a UISegmentedControl.\n. ",
    "fengjian0106": "hi, does CMPopTipView need this features?\n. ",
    "HBehrens": "Actually, there are specs for 0.0.1, 1.0.0, 1.1.0, and 1.2.0 f43d64fbeaba9fdce48cd26dd1d5dc88896837ce \n. \nJust to be complete, here's a screenshot the demonstrates the problem with the border without the fix by @martinjbaker\n. ",
    "pronebird": "Duplicating code is not the best thing to do since any further changes require maintenance of both code branches. Would be better to use some macro or simply temporary integer with value that is assigned using UI or NS constant depending on iOS version.\n. ",
    "hallas": "@chrismiles can you please merge this in and update cocoapods :-) ? We are needing it :P\n. chrismiles thanks!\n. +1\n. :-)\n. could you merge and update the pod?\nshould prolly be v1.3.1\ncheers\n. @chrismiles hey man, can you use this PR?\n. can you tag it or can i use it via cocoapods in any other way?\nthanks for merging in, we love your library\n. Don't know how. Just podspec create? and lint and submit?\n. @chrismiles you should maybe use cocoapods, it's really useful and easy :dancers: \n. https://travis-ci.org/CocoaPods/Specs/builds/11009123#L155 i added the podspec but it fails with this build, i don'kt now why. Maybe you can solve it @chrismiles ?\n. it does do a build, and it fails, it must be an ARC issue\n. ",
    "tomohisaota": "Thanks a lot!!\n. Just want to say that thank you very very much for adding pod spec :-)\n. ",
    "manishkungwani": "No, deployment target 4.3 works absolutely fine, without any warnings.\n. ",
    "puttin": "Hi, I wonder if this pull request is OK to merge.\n. ",
    "yvsong": "iOS 7 deprecated more stuff.\n. Visibility is decided by container view.\n. ",
    "joaopmafra": "Thanks a lot for filling this bug! Adding \"finalFrame = CGRectIntegral(finalFrame);\" after declaration of finalFrame variable solved the problem.\n. ",
    "jasperblues": "Yes, that's perfect, thanks. \nAlthough, maybe even defaulting to using these on iOS7 would be nice. \n. ",
    "pixlwave": "Hi Chris. I think I'd agree with this idea of defaulting to a flat appearance on iOS 7 or greater. I nearly skipped this project entirely based on the screenshots and the readme. \n. ",
    "veptune": "I got exactly the same problem ;(\nCan someone fix it please ?\nThanks guys :)\n. Hmm ... if i put 30.f as sidePadding i got something but when i want to increase the value let's say 50.f or 80.0f, the padding look the same\n. ",
    "Odelya": "Hi Chrismiles and thanks for the component.\nI have the same problem with a custom view:\npopTipView.cornerRadius = 0;\n        popTipView.sidePadding = 0;\n        popTipView.topMargin = 0;\nwould result like this:\n\nWhile \npopTipView.cornerRadius = 10;\n        popTipView.sidePadding = 0;\n        popTipView.topMargin = 0;\nWould result like this:\n\nI would like to have round corners but not padding. This way, the poptip will have round corners and the customview will be \"clipped\" to have as well\n. ",
    "SjoerdPerfors": "I think we talk here about different paddings.\n1) padding from the screen where the balloon should appear. (this is what sidepadding is doing)\n2) padding in the balloon where the text should appear. (can we change this?)\nAfter adjusting the cornerRadius my padding in the balloon is adjusted to a lower margin/padding value (point2).\n. Sorry Raphael, I forgot the following.\nChange in method \n- (void)presentPointingAtView:(UIView )targetView inView:(UIView )containerView animated:(BOOL)animated\nthe following: if (_pointDirection == PointDirectionDown || _pointDirection == PointDirectionGoneButDown) see snipper below\nif (targetRelativeOrigin.y+targetView.bounds.size.height < containerRelativeOrigin.y) {\n    pointerY = 0.0;\n    _pointDirection = PointDirectionUp;\n}\nelse if (targetRelativeOrigin.y > containerRelativeOrigin.y+containerView.bounds.size.height) {\n    pointerY = containerView.bounds.size.height;\n    _pointDirection = PointDirectionDown;\n}\nelse {\n    _pointDirection = _preferredPointDirection;\n    CGPoint targetOriginInContainer = [targetView convertPoint:CGPointMake(0.0, 0.0) toView:containerView];\n    CGFloat sizeBelow = containerView.bounds.size.height - targetOriginInContainer.y;\n    if (_pointDirection == PointDirectionAny) {\n        if (sizeBelow > targetOriginInContainer.y) {\n            pointerY = targetOriginInContainer.y + targetView.bounds.size.height;\n            _pointDirection = PointDirectionUp;\n        }\n        else {\n            pointerY = targetOriginInContainer.y;\n            _pointDirection = PointDirectionDown;\n        }\n    }\n    else {\n        if (_pointDirection == PointDirectionDown || _pointDirection == PointDirectionGoneButDown) {\n            pointerY = targetOriginInContainer.y;\n        }\n        else {\n            pointerY = targetOriginInContainer.y + targetView.bounds.size.height;\n        }\n    }\n}\nMy top lines of the drawRect method looks like this (I didnt implement the PointDirectionGoneButUp):\n```\n- (void)drawRect:(CGRect)rect {\nCGRect bubbleRect = [self bubbleFrame];\n\nCGContextRef c = UIGraphicsGetCurrentContext();\n\nCGContextSetRGBStrokeColor(c, 0.0, 0.0, 0.0, 1.0);  // black\nCGContextSetLineWidth(c, self.borderWidth);\n\nCGMutablePathRef bubblePath = CGPathCreateMutable();\n\nif (_pointDirection == PointDirectionUp) {\n    CGPathMoveToPoint(bubblePath, NULL, _targetPoint.x+_sidePadding, _targetPoint.y);\n    CGPathAddLineToPoint(bubblePath, NULL, _targetPoint.x+_sidePadding+_pointerSize, _targetPoint.y+_pointerSize);\n\n    CGPathAddArcToPoint(bubblePath, NULL,\n                        bubbleRect.origin.x+bubbleRect.size.width, bubbleRect.origin.y,\n                        bubbleRect.origin.x+bubbleRect.size.width, bubbleRect.origin.y+_cornerRadius,\n                        _cornerRadius);\n    CGPathAddArcToPoint(bubblePath, NULL,\n                        bubbleRect.origin.x+bubbleRect.size.width, bubbleRect.origin.y+bubbleRect.size.height,\n                        bubbleRect.origin.x+bubbleRect.size.width-_cornerRadius, bubbleRect.origin.y+bubbleRect.size.height,\n                        _cornerRadius);\n    CGPathAddArcToPoint(bubblePath, NULL,\n                        bubbleRect.origin.x, bubbleRect.origin.y+bubbleRect.size.height,\n                        bubbleRect.origin.x, bubbleRect.origin.y+bubbleRect.size.height-_cornerRadius,\n                        _cornerRadius);\n    CGPathAddArcToPoint(bubblePath, NULL,\n                        bubbleRect.origin.x, bubbleRect.origin.y,\n                        bubbleRect.origin.x+_cornerRadius, bubbleRect.origin.y,\n                        _cornerRadius);\n    CGPathAddLineToPoint(bubblePath, NULL, _targetPoint.x+_sidePadding-_pointerSize, _targetPoint.y+_pointerSize);\n}\nelse {\n    if(_pointDirection == PointDirectionGoneButDown)\n        CGPathMoveToPoint(bubblePath, NULL, _targetPoint.x+_sidePadding, _targetPoint.y - _pointerSize);\n    else\n        CGPathMoveToPoint(bubblePath, NULL, _targetPoint.x+_sidePadding, _targetPoint.y);\n    CGPathAddLineToPoint(bubblePath, NULL, _targetPoint.x+_sidePadding-_pointerSize, _targetPoint.y-_pointerSize);\n\n    CGPathAddArcToPoint(bubblePath, NULL,\n                        bubbleRect.origin.x, bubbleRect.origin.y+bubbleRect.size.height,\n                        bubbleRect.origin.x, bubbleRect.origin.y+bubbleRect.size.height-_cornerRadius,\n                        _cornerRadius);\n    CGPathAddArcToPoint(bubblePath, NULL,\n                        bubbleRect.origin.x, bubbleRect.origin.y,\n                        bubbleRect.origin.x+_cornerRadius, bubbleRect.origin.y,\n                        _cornerRadius);\n    CGPathAddArcToPoint(bubblePath, NULL,\n                        bubbleRect.origin.x+bubbleRect.size.width, bubbleRect.origin.y,\n                        bubbleRect.origin.x+bubbleRect.size.width, bubbleRect.origin.y+_cornerRadius,\n                        _cornerRadius);\n    CGPathAddArcToPoint(bubblePath, NULL,\n                        bubbleRect.origin.x+bubbleRect.size.width, bubbleRect.origin.y+bubbleRect.size.height,\n                        bubbleRect.origin.x+bubbleRect.size.width-_cornerRadius, bubbleRect.origin.y+bubbleRect.size.height,\n                        _cornerRadius);\n    CGPathAddLineToPoint(bubblePath, NULL, _targetPoint.x+_sidePadding+_pointerSize, _targetPoint.y-_pointerSize);\n}\n\n```\n. ",
    "fawazapp": "this work for me \n    CMPopTipView *popTipView = [[CMPopTipView alloc] initWithMessage:@\"A Message Text\"];\n    popTipView.cornerRadius   = 2.0;\n    popTipView.bubblePaddingY = 5;\n    popTipView.bubblePaddingX = 5;\n    popTipView.shouldEnforceCustomViewPadding = YES;\n    [popTipView presentPointingAtView:ContainerView inView:self.view animated:YES];\n. ",
    "dmur": "This was a PR I put together based on my experience integrating today. While you are right in principle, in practice this is a possible pain point for a developer integrating your library, albeit an easy one to track down.\nIMO there is no reason for the library to crash the app if I have declared myself as delegate but not implemented the method (which, while it is the only method in the protocol, still doesn't really need an implementation for the library to work).  Plus, if you decide to add other delegate methods down the line, marking this method as optional now is a good idea.\n. Fair enough, I'm not going to argue about such an arbitrary point, it just seemed to me that anything that will make integration easier is a good thing.\n. ",
    "rpungin": "Hi SjoerdPerfors.\nI can't get it to work with the code you provided. Can you please provide the complete code that handles not having the pointers? \nThanks!\nRaphael\n. ",
    "abkr": "Hi Chris,\nOk, not a biggie if you don't want to merge this. But here was why I added\nthe small change -\nI was using it on a UITextView within a scrollview, it would place it at\nthe bottom of the uitextview (actually I think (not tested) bottom of the\nscrollview AND within the current main view, not too sure)\nbefore:\nhttps://www.dropbox.com/s/x1c1whvucs2a31y/Screenshot%202013-12-18%2022.57.50.png\nafter:\nhttps://www.dropbox.com/s/w6lycwooiyjpuwb/Screenshot%202013-12-18%2022.57.10.png\nIt is only a two line change and it might complicate things in the future\nso feel free to ignore.\nthanks\nash\nOn Wed, Dec 18, 2013 at 10:01 PM, Chris Miles notifications@github.comwrote:\n\nThis addition works, but I don't understand the benefit. Can you explain\nthe use case for forcing the arrow to point to the top of a button when\npointing up?\nIf I enable this option in the demo I see the result below when tapping on\n\"Button 3\". This doesn't seem to be useful, although you probably have a\nuse in mind that I don't yet see.\n[image: 2013-12-19 08 55 18 am]https://f.cloud.github.com/assets/110112/1778097/7d6a302a-682f-11e3-8c93-70bf4e29fb4f.png\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/chrismiles/CMPopTipView/pull/56#issuecomment-30885417\n.\n. \n",
    "gookinsoftware": "I don't know if this is safe for all cases, but in:\npresentPointingAtBarButtonItem: animated:\nI replaced \ncontainerView = [UIApplication sharedApplication].keyWindow;\nwith\ncontainerView = [targetSuperview superview];\nand it works well for me in both the demo and my app.\n. ",
    "Willaw": "Chris, I'm new at Github. I correct the method to display correctly : \nThe code : \n// Draw title and text\n    if (self.title) {\n        [self.titleColor set];\n        CGRect titleFrame = [self contentFrame];\n```\n    //=========================\n    //CORRE\u00c7\u00c3O PARA IOS7 64-BIT\n    //=========================\n    NSMutableParagraphStyle paragrafo = [[NSParagraphStyle defaultParagraphStyle] mutableCopy];\n    paragrafo.lineBreakMode            = NSLineBreakByClipping;\n    paragrafo.alignment                = self.titleAlignment;\n    NSDictionary atributos            = @{ NSFontAttributeName: self.titleFont, NSParagraphStyleAttributeName: paragrafo };\n    [self.title drawInRect:titleFrame withAttributes:atributos];\n}\nif (self.message) {\n    [self.textColor set];\n    CGRect textFrame = [self contentFrame];\n// Move down to make room for title\nif (self.title) {\n    textFrame.origin.y += [self.title sizeWithFont:self.titleFont\n                                 constrainedToSize:CGSizeMake(textFrame.size.width, 99999.0)\n                                     lineBreakMode:NSLineBreakByClipping].height;\n}\n\n//=========================\n   //CORRE\u00c7\u00c3O PARA IOS7 64-BIT\n   //=========================\n   NSMutableParagraphStyle paragrafo = [[NSParagraphStyle defaultParagraphStyle] mutableCopy];\n   paragrafo.lineBreakMode            = NSLineBreakByWordWrapping;\n   paragrafo.alignment                = self.textAlignment;\n   NSDictionary atributos            = @{ NSFontAttributeName: self.textFont, NSParagraphStyleAttributeName: paragrafo };\n   [self.message drawInRect:textFrame withAttributes:atributos];\n```\n}\n. \nThis is how the image appear before the correction.\n. After the correction, the result : \n\n. ",
    "funnel20": "Hi, thank you for the update.\nIt works, but doesn't take into account the properties for titleColor and textColor.\nAccording to Apple dos:\nNSForegroundColorAttributeName\nThe value of this attribute is a UIColor object. Use this attribute to specify the color of the text during rendering. If you do not specify this attribute, the text is rendered in black.\nTherefor I extended your code by specifying the NSForegroundColorAttributeName while creating NSDictionary *atributos.\nAlso this update is not backwards compatibel with iOS 6, so I have added both based on the iOS version.\nResulting code:\n// Draw title and text\n    if (self.title) {\n        [self.titleColor set];\n        CGRect titleFrame = [self contentFrame];\n```\n    // Fix for issue #58, see https://github.com/chrismiles/CMPopTipView/issues/58\n    if ([[[UIDevice currentDevice] systemVersion] floatValue] >= 7.0) {\n        //=========================\n        //CORRE\u00c7\u00c3O PARA IOS7 64-BIT\n        //=========================\n        NSMutableParagraphStyle paragrafo = [[NSParagraphStyle defaultParagraphStyle] mutableCopy];\n        paragrafo.lineBreakMode            = NSLineBreakByClipping;\n        paragrafo.alignment                = self.titleAlignment;\n        NSDictionary atributos            = @{ NSFontAttributeName: self.titleFont, NSParagraphStyleAttributeName: paragrafo, NSForegroundColorAttributeName: self.titleColor };\n        [self.title drawInRect:titleFrame withAttributes:atributos];\n    }\n    else {\n        [self.title drawInRect:titleFrame\n                      withFont:self.titleFont\n                 lineBreakMode:NSLineBreakByClipping\n                     alignment:self.titleAlignment];\n    }\n}\nif (self.message) {\n    [self.textColor set];\n    CGRect textFrame = [self contentFrame];\n// Move down to make room for title\nif (self.title) {\n    textFrame.origin.y += [self.title sizeWithFont:self.titleFont\n                                 constrainedToSize:CGSizeMake(textFrame.size.width, 99999.0)\n                                     lineBreakMode:NSLineBreakByClipping].height;\n}\n\n// Fix for issue #58, see https://github.com/chrismiles/CMPopTipView/issues/58\nif ([[[UIDevice currentDevice] systemVersion] floatValue] >= 7.0) {\n    //=========================\n    //CORRE\u00c7\u00c3O PARA IOS7 64-BIT\n    //=========================\n    NSMutableParagraphStyle *paragrafo = [[NSParagraphStyle defaultParagraphStyle] mutableCopy];\n    paragrafo.lineBreakMode            = NSLineBreakByWordWrapping;\n    paragrafo.alignment                = self.textAlignment;\n    NSDictionary *atributos            = @{ NSFontAttributeName: self.textFont, NSParagraphStyleAttributeName: paragrafo, NSForegroundColorAttributeName: self.textColor };\n    [self.message drawInRect:textFrame withAttributes:atributos];\n}\nelse {\n    [self.message drawInRect:textFrame\n                    withFont:self.textFont\n               lineBreakMode:NSLineBreakByWordWrapping\n                   alignment:self.textAlignment];\n}\n\n}\n```\n. Hi, \nI have used version 2.2.0, but unfortunately it changes the width of the popview in a negative way. Also the property maxWidth is ignored completely.\nExamples:\nPrevious version with manual adjustments from this post:\n\nVersion 2.2.0:\n\nOn iPhone it's even worse:\nold:\n\nnew:\n\nSorry, I maintain my modified previous version.\n. I have created a new issue: https://github.com/chrismiles/CMPopTipView/issues/82\nPlease close #58, since that is fixed.\n. I can confirm that this was solved in https://github.com/chrismiles/CMPopTipView/commit/175d089259abded5a7718c3a1e2d7941b0ff2549.\nAlso the current version https://github.com/chrismiles/CMPopTipView/commit/aeda632dfac30247e9f1875c4e6fda7e783d8e65 works fine.\nThis issue can be closed.\n. @ZackZheng2014 Something like this:\n[_myPopTip presentPointingAtBarButtonItem:(UIBarButtonItem *)[self.tabBarController.tabBar.items objectAtIndex:0]\n                                 animated:YES];. The Release Notes of 2.3.1 are incomplete by only referring to: \n\nFixes issue in iOS 11 where tooltip would not display when presenting via a UIBarButtonItem.\n\nWhen I look at the master, 2.3.0 was commit 176, while 2.3.1 is 199. So there are many more changes in 2.3.1.\nCommits 185 and 186 refer to a new property for padding. \nThe change log of commit 186 https://github.com/chrismiles/CMPopTipView/commit/c9ab6ae6a408c8439530e062faacf7006e27982a shows indeed new property shouldEnforceCustomViewPadding.\nI see it's never initialised, except in initWithCustomView: which we don't use.\nWe have reverted back to 2.3.0.\n@TingtingAn Can you try with shouldEnforceCustomViewPadding = YES?. @pventura1976 Thanks for confirming this.\nThis seems to be a bug. \nWhy is it required when setting property sidePadding to explicitly set shouldEnforceCustomViewPadding?\nAt least there is a work-around now, but it doesn't make sense.. @kleinlieu Thanks for your reaction. Before jumping to a solution; what is the purpose of new property shouldEnforceCustomViewPadding?\nI would say that if a user wants to have padding, he defines sidePadding. \nIf he uses property customView and wants padding, he defines both customView and sidePadding.\nFor me it's not clear what shouldEnforceCustomViewPadding should control.\nIt seems to be some unnecessary BOOL introduced for the custom view.\nBut in my opinion it can be completely deleted.\nIt is now used as IF condition in - (CGRect)contentFrame and - (void)presentPointingAtView:(UIView *)targetView inView:(UIView *)containerView animated:(BOOL)animated. \nThe IF condition can be replaced by:\nif (_sidePadding > 0) {\nDo you agree?\nUPDATE This probably won't work, as - (CGRect)contentFrame uses bubblePaddingX and bubblePaddingY, see my next comment. But then I don't understand why the padding works properly for @pventura1976 when shouldEnforceCustomViewPadding is set to YES.. Another over dimension seems to be the parameters bubblePaddingX and bubblePaddingY. What is the difference with sidePadding?\nIt would really help if all (less obvious) properties could have proper documentation in the header file. I bet that this would have prevented code implementation issues like this one. Because now there is clearly a misunderstanding of the meaning/definition of some properties.\nI'm happy to assist with this, but at least someone needs to explain these properties.. BTW, sidePadding is already set to a default value of 2.0 in - (id)initWithFrame:(CGRect)frame.. As mentioned before, we need to know the functionality first.\nI figured it out by playing around with the DEMO project.\nIMPORTANT\nI was able to change sidePadding in the default DEMO project, where shouldEnforceCustomViewPadding is disabled.\nIn order to see the proper effect of cornerRadius, bubblePaddingX and bubblePaddingY I had to enable shouldEnforceCustomViewPadding. \nHence I changed the title if this issue from Property \"sidePadding\" to Bubble padding.\nIt's worth noting that I was mistaking sidePadding with the inner bubble padding, i.e. the offset between the text and the bubble boundary. After playing around with the DEMO project I learned that this bubble padding is controlled by cornerRadius, bubblePaddingX and bubblePaddingY. \nThere are 5 properties playing a role:\n\nsidePadding\nThis is the horizontal offset between the bubble and the view boundary:\n\nThe default value is 2. In the above screenshot it was set to 10.\ncornerRadius\nThis will round the corners:\n\nBut it also increases the bubble around the text. See the difference with the previous image when increasing the value:\n\nThe default value is 10.\nbubblePaddingX\n\nThis is the horizontal offset between the bubble text and the bubble boundary:\nIMPORTANT: When cornerRadius >0 it's added to bubblePaddingX, so the horizontal offset is the total of both properties.\nThe default value is 0. When this value >0, the horizontal bubble size increases.\nbubblePaddingY\nThis is the vertical offset between the bubble text and the bubble boundary:\n\nIMPORTANT: When cornerRadius >0 it's added to bubblePaddingY, so the vertical offset is the total of both properties.\nThe default value is 0. When this value >0, the vertical bubble size increases.\n\nshouldEnforceCustomViewPadding\nThis seems to be an unnecessary internal property which currently causes this issue that bubble padding is not working.. SOLUTION\nNow that the functionality of all involved properties is clear, the solution seems simple:\n\n\nRemove property shouldEnforceCustomViewPadding\n\nIn - (CGRect)contentFrame, the complete IF-ELSE can removed, as the IF statement should always be performed, as it contains all the 3 discussed properties: cornerRadius, bubblePaddingX and bubblePaddingY:\n```ObjC\n\n(CGRect)contentFrame {\n    CGRect bubbleFrame = [self bubbleFrame];\nCGRect contentFrame = CGRectMake(bubbleFrame.origin.x + _cornerRadius + _bubblePaddingX,\n                                 bubbleFrame.origin.y + _cornerRadius + _bubblePaddingY,\n                                 bubbleFrame.size.width - (_bubblePaddingX2) - (_cornerRadius2),\n                                 bubbleFrame.size.height - (_bubblePaddingY2) - (_cornerRadius2));\nreturn contentFrame;\n}\n3. Similar in `- (void)presentPointingAtView:(UIView *)targetView inView:(UIView *)containerView animated:(BOOL)animated` the IF condition should always be performed, so remove IF-ELSE:ObjC\n_bubbleSize = CGSizeMake(textSize.width + (_bubblePaddingX2) + (_cornerRadius2), textSize.height + (_bubblePaddingY2) + (_cornerRadius2));\n```\n\n\nVerification\nI have verified the DEMO project after these 3 changes and now the bubble padding does properly work without changing anything to the DEMO code.\nRecommendations\n1. Why does cornerRadius automatically apply bubble padding?\nThis is not common, see for example  cornerRadius of CALayer.\nIf for a larger cornerRadius bubble padding is necessary, this can be configured via bubblePaddingX and bubblePaddingY.\n2. Properly document each property in the header file.\n3. Be accurate with the Release Notes.\nThe Release Notes of 2.3.1 are incomplete by only referring to an iOS 11 fix for the tooltip on a UIBarButtonItem.\nWhen looking at the master, it appears that there are many more changes in 2.3.1. Even new properties such as the erroneous shouldEnforceCustomViewPadding and it's code that caused this issue.. I have created a pull request with the solution.\nShould I make another with more documentation in the header file?. This is resolved as 2.3.2. Yeah definitely, as this is a bug fix. So I expect it will be 2.3.2. @kleinlieu What's the next step to get this released?. @kleinlieu Thanks for the release. @kleinlieu What do you think of my analysis?. @NikolayEntin It seems this project isn't under active development anymore, as the last commit is from 7 months ago.\nYou can manually replace the existing code in presentPointingAtBarButtonItem:animated: by my code from above.\nDoes that solve your issue?. ",
    "kleinlieu": "Hey @chrismiles:\nThis should fix all the deprecated warnings for iOS7. It would be great if we could get v2.1.1 out on Cocoapods after this PR is merged. Let me know if you have any questions. \n. Looks like this was fixed in this PR: https://github.com/chrismiles/CMPopTipView/pull/64\nClosing this one. Thanks!\n. Thanks! Just saw the updated PR.\n. you should put the call to super as the first line in this method\n. Closing this in favor of #108 \n. Merge conflicts need to be resolved.\n. Merged. Thanks!\n. @i-schuetz You can find CMPopTipView here: https://cocoapods.org/pods/CMPopTipView. Closing\n. Thanks. Looks good.\n. Thanks!\n. Thanks for that. Merged.\n. Thanks for this.\n. Can you update the README to include this as a property in the appropriate section? Thanks!\n. Thanks. Looks good!\n. Looks good!\n. Hi @ecnepsnai we already have - (void)autoDismissAnimated:(BOOL)animated atTimeInterval:(NSTimeInterval)timeInterval; in the interface. . @oronbz I can help you get a new version of pods generated for this project. \n. Here you go @oronbz and @rojo69 :\n`CMPopTipView master $ pod search CMPopTipView\n-> CMPopTipView (2.3.0)\n   Custom UIView for iOS that pops up an animated \"bubble\" pointing at a button or other view. Useful for popup tips.\n   pod 'CMPopTipView', '~> 2.3.0'\n- Homepage: https://github.com/chrismiles/CMPopTipView\n- Source:   https://github.com/chrismiles/CMPopTipView.git\n- Versions: 2.3.0, 2.2.0, 2.1.0, 2.0.0, 1.3.0, 1.2.0, 1.1.0, 1.0.0, 0.0.1 [master repo]`\n. Hey @gfosco I will close this PR. This has a merge conflict, but I went ahead and added your fix to this commit https://github.com/chrismiles/CMPopTipView/commit/e72e395a8e82d641f517dacfe113362e34461fe2\nThanks!. @werner-freytag what is the recommended best practice when nil checking?\nself.borderColor != nil or && self.borderColor != Nil ?. Can you update the README file?. Thanks! @parallaxe Is this backwards compatible with versions under iOS 11? . Thanks for the fix!. I can update it this weekend for you all . Hey @dobiho5 @neilyoung @yanglk this should be fixed in the latest release tagged v2.3.1. Feel free to pull from master or find it on CocoaPods. . Hey @FungusHumungus @pventura1976 I'm really sorry for the mistake. Perhaps I should have set shouldEnforceCustomViewPadding and sidePadding to be on by default in v2.3.2. What do you think? . Should we bump the versioning too? . @funnel20 finally free from the holidays here in the States. I'll get this reviewed and merged pronto.. @WSFeng feel free to open a PR for it and I'll review and merge it. Sorry I just don't have a ton of time right now!. Can you add a line break after the invalidate call on this line? \n. ",
    "mattvague": "Any movement on this?\n. ",
    "mirekp": "Fixed by eb2c411\n. ",
    "daviddelmonte": "Got it. Thanks Chris..\nOn Jan 28, 2014, at 5:45 PM, Chris Miles notifications@github.com wrote:\nHi David,\nThe \"gesture\" for initiating a tip is probably outside of the responsibility of the CMPopTipView object. There are plenty of options though. You could show the tip on first view of a screen (which is what I've done in the past). You could have a small \"?\" or \"Help\" (or similar) button next to the main control, which pops up the tip when tapped. You could have long gesture taps on buttons (as you suggest) as a secondary gesture to pop up tips (you would still have to teach the user about the long press option, though).\nThe best option really depends on your app's UI and behaviour, and the reasons why you want to show a tip.\nCheers,\nChris\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "ghost": "I want to know how to fix this issue as well!\n. Temporary fix:\n\n. ",
    "Mamonaku": "Problem is that the view is incorrect, and points at the key window. May be a fix:\nif ([targetSuperview isKindOfClass:[UINavigationBar class]]) {\n        UIViewController *topController = [UIApplication sharedApplication].keyWindow.rootViewController;\nwhile (topController.presentedViewController) {\n        topController = topController.presentedViewController;\n    }\n    containerView = topController.view;\n}\ngithub auto formatting isn't really working, is it ?\n. ",
    "SamB2B": "if (element == 1) {\n        CMPopTipView popTip = [[CMPopTipView alloc] initWithTitle:@\"Start Here\" message:@\"Create a new calculation\"];\n        popTip.delegate = self;\n        popTip.backgroundColor = [UIColor clearColor];\n        popTip.textColor = [UIColor whiteColor];\n        popTip.has3DStyle = NO;\n        [popTip presentPointingAtView:self.calculationButton inView:self.view animated:YES];\n        self.calculateTip = popTip;\n    }\n    else if (element == 2) {\n        CMPopTipView popTip = [[CMPopTipView alloc] initWithTitle:@\"Add your calculation to the log\" message:@\"Tap here\"];\n        popTip.delegate = self;\n        popTip.backgroundColor = [UIColor clearColor];\n        popTip.textColor = [UIColor whiteColor];\n        popTip.has3DStyle = NO;\n        [popTip presentPointingAtView:self.addtoLogButton inView:self.view animated:YES];\n        self.addToLogTip = popTip;\n    }\n    else if (element == 3) {\n        CMPopTipView *popTip = [[CMPopTipView alloc] initWithTitle:@\"View your calculations\" message:@\"Tap here\"];\n        popTip.delegate = self;\n        popTip.backgroundColor = [UIColor clearColor];\n        popTip.textColor = [UIColor whiteColor];\n        popTip.has3DStyle = NO;\n        [popTip presentPointingAtView:self.viewLogButton inView:self.view animated:YES];\n        self.viewLogTip = popTip;\n}\n. Can i fix it or should I look elsewhere?\n. Yeah I had a look through the code, I do now see that the title wasn't taken into account and after I tested a bit more I discovered that if the title is longer than the message its doesn't resize properly.\nThank-you for the fix, its much appreciated.\n. ",
    "johnnypayso": "Looks like the autoDismissTimer is not used unless you actually set it (via autoDismissAnimated).  But there is somehow a built-in default timeout (which I have not been able to find in the source code) that is about 5 or 6 secs long.\nSo the symptom for me is that calling autoDismissAnimated has an effect only if the interval is shorter than the built-in timeout, e.g., 2 seconds.\n. OK, I figured out my problem...  I had wrapped the creation of the CMPopTipView in a helper method which was calling autoDismissAnimated with a default timeout.  Since that timeout dismissed the view, the additional timeout (longer than the default) was ignored.\n. ",
    "ayanonagon": "Hmmm. I guess I can just not set the delegate, but optional might still be nice in general. :octocat: \n. Closed because I realized that we don't check if the delegate responds to selector.\n. I think in general, it's nice to let protocol methods to be @optional, unless it wouldn't work at all without it. For example, UITableView doesn't make sense without -tableView:numberOfRowsInSection:.\n. :thumbsup: \n. ",
    "bakkenlab": "Was looking to do this same thing! \n. ",
    "vittoriom": "Sorry, wrong origin branch\n. ",
    "bobsmells": "Just to update this, I found some similar references to crashes with that method (drawWithRect...) and one person found that by increasing the font size a few points solved it.  That didn't work for me, but what I did try was swapping out the 3rd party font which I had been using successfully inside the CMPopTipView for the system font, and this fixes it for me.  The custom font was not that important to me and I'd rather have a working build.\nSo it's not likely anything to do with this component as such, but more likely an iOS 8 issue.  Still, would be nice to find out what the problem is.  If anyone is interested, the font that didn't play nice was this one: http://www.dafont.com/kg-be-still-know.font\n. ",
    "ABeltramo": "Found it! \n[popTipView setBorderColor: myColor];\n[popTipView setBorderWidth: 3.0];\nHow about a wiki or a list of public method?\n. You can simply not call autoDismissAnimated method.\n. In search of a solution I downloaded the source and founded this property:\npopup.hasGradientBackground = NO;\n\nMaybe it's time to update the README..\n. Fixed! Sorry for misspelling.. :smile: \n. ",
    "ogoldfinger": "Having the same problem. It looks like the title was never intended to be that long. It's line break mode is set to NSLineBreakByClipping. The problem occurs on line 458:\n        if (titleSize.width > textSize.width) textSize.width = titleSize.width;\nThis sets the textSize width to the titleSize's width ignoring the maxWidth.\nFYI your fix works for me as well. nice work!\n. ",
    "revolter": "I managed to do that by overriding the pointInside:withEvent: method for the popup's view.\n. ",
    "mworsnop": "Having ARC on selected files would be great. I haven\u2019t seen anything that says how to do that? Would you mind pointing me in the right direction? \u00a0THANK YOU\nOn February 27, 2015 at 1:16:33 PM, Chris Miles (notifications@github.com) wrote:\nI would guess height calculations are off, the last line isn't fitting so is being truncated?\nNote that you can opt-in to ARC for selected files only. That may be easier for you so you can add the latest version.\n\u2014\nReply to this email directly or view it on GitHub.\n. I found\u00a0-fno-objc-arc so disabled everything except the new stuff. \u00a0This is great maybe I can get my code updated to ARC one at a time!\u00a0\nOn February 27, 2015 at 2:22:42 PM, Mark Worsnop (mark@worsnop.com) wrote:\nHaving ARC on selected files would be great. I haven\u2019t seen anything that says how to do that? Would you mind pointing me in the right direction? \u00a0THANK YOU\nOn February 27, 2015 at 1:16:33 PM, Chris Miles (notifications@github.com) wrote:\nI would guess height calculations are off, the last line isn't fitting so is being truncated?\nNote that you can opt-in to ARC for selected files only. That may be easier for you so you can add the latest version.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thank you again the ARC version works great!\nHave a great day and thanks for some cool code!\nOn February 27, 2015 at 2:31:31 PM, Mark Worsnop (mark@worsnop.com) wrote:\nI found\u00a0-fno-objc-arc so disabled everything except the new stuff. \u00a0This is great maybe I can get my code updated to ARC one at a time!\u00a0\nOn February 27, 2015 at 2:22:42 PM, Mark Worsnop (mark@worsnop.com) wrote:\nHaving ARC on selected files would be great. I haven\u2019t seen anything that says how to do that? Would you mind pointing me in the right direction? \u00a0THANK YOU\nOn February 27, 2015 at 1:16:33 PM, Chris Miles (notifications@github.com) wrote:\nI would guess height calculations are off, the last line isn't fitting so is being truncated?\nNote that you can opt-in to ARC for selected files only. That may be easier for you so you can add the latest version.\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "grant-park": "Temporary jank solution is to make a clear colored object on storyboard and just point to that.\n. ",
    "yas375": "+1 on this! Would be nice to get it merge in.\nThanks in advance!\n. @tangkunyin \u043d\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u043e ;)\n. ",
    "ikhsan": "Now worries :+1: \nDon't forget to setup the your Travis CI to get the sweet badges :wink: \n. ",
    "spybart": "I'm also interested in this.. ",
    "tangkunyin": "\u5f53\u7136\uff0c\u4e0d\u4fee\u6539\u4e5f\u662f\u53ef\u4ee5\u5b9e\u73b0\u7684\u3002\u53ea\u662f\u5728\u8fd9\u79cd\u7279\u6b8a\u9700\u6c42\u4e0b\uff0c\u5f00\u53d1\u4eba\u5458\u6bd4\u8f83\u9ebb\u70e6\uff01\n. ",
    "jaybowong": "A GIF to demonstrate this.\nYou can see that there's no need to tap these tip views to dismiss them.\nReally hope you could take a look at this PR.\n\n. Fixed. Thank you  @kleinlieu \n. @chrismiles Hi, Chris. What do you think of this feature? Really hope you can merge this.\n. ",
    "skiplow": "i need this too,  is  cool\n. ",
    "BigSauce": "I have the same question.  Am curious to know the answer to this.\n. ",
    "oronbz": "Hi, is it possible to merge this and update cocoapod?\nIf you're not able to manage the source, please let contributors do this.\n. I was aiming my comment to @chrismiles (:\n. Thanks a lot @kleinlieu !\n. ",
    "rojo69": "I don't have such rights. Am i supposed to do something more than creating a PR to get things happening?\n. ",
    "vicky1787": "Also can we dim the background when Pop up shown , if yes can u guide how we can do ?\n. ",
    "anton-plebanovich": "@kleinlieu done. ",
    "parallaxe": "Yes, i tested it with iOS 9 and in general, it should be backwards compatible with all versions.. ",
    "neilyoung": "More precisely:\n (void)presentPointingAtBarButtonItem:(UIBarButtonItem *)barButtonItem animated:(BOOL)animated\ndoes not show up, if the UIBarButtonItem is child of a bottom toolbar.\n. @yanglk Does that work for < iOS 11 as well? This is exactly the way I was trying to fix it to no avail. Did choose another project then (NMEasyTipView, https://github.com/nitishmakhija/EasyTipView) which did it for me.. ",
    "yanglk": "I fix it by add a few lines in \n- (void)presentPointingAtBarButtonItem:(UIBarButtonItem *)barButtonItem animated:(BOOL)animated\nafter the line UIView *targetSuperview = [targetView superview];,just add these lines:\nwhile (![targetSuperview isKindOfClass:[UINavigationBar class]]) {\n        targetSuperview = [targetSuperview superview];\n }\n. @neilyoung yes, for < iOS 11, the while condition will not fulfilled, so it won't do anything.. ",
    "dobiho5": "@yanglk Do you have any plan to update for iOS 11\nI add above code after UIVIew *~ , but it does not worked on iOS 11 bottom toolbar. . @yanglk I resolved my problem for UIToolbar as your quick added code like this \nWould you update your cocoa pod?\nUIView *targetSuperview = [targetView superview];\n    while (![targetSuperview isKindOfClass:[UIToolbar class]]) { targetSuperview = [targetSuperview superview]; }\n. @yanglk @kleinlieu I got found, dismissAnimated does not work.  please solve this also. I have searched other tool tip, but CMPopTipView is best I think. \n. @kleinlieu dismiss is not issue. I fixed execute dismiss in main thread in iOS 11. . ",
    "TingtingAn": "i am hitting it also.. i have never to use initWithCustomView also. ",
    "pventura1976": "Using sidePadding = 10.0 and shouldEnforceCustomViewPadding = YESworked for me in 2.3.1. I like this proposal\nBest.\nPedro Ventura G\u00f3mez\nEl 17 nov 2017 21:50 +0100, funnel20 notifications@github.com, escribi\u00f3:\n\nBTW, sidePadding is already set to a default value of 2.0 in - (id)initWithFrame:(CGRect)frame.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "Jules2010": "Ahhh dismissTapAnywhere. ",
    "NikolayEntin": "I've got the same issue, where I have pop-up ViewControllers - tooltips for the NavigationBar in the background view still shown on top of everything.\n. @funnel20, thank you, I've actually reverted the code to previous state, instead of:\nUIView *targetView = (UIView *)[barButtonItem performSelector:@selector(view)];\n    UIView *containerView = targetView.window;\nI use old one:\nUIView *targetView = (UIView *)[barButtonItem performSelector:@selector(view)];\n    UIView *targetSuperview = [targetView superview];\n    UIView *containerView = [targetSuperview superview];\nBut I'm still wondering for motivation of the change - it did work in the past, why change to the 'window' as container for the pop-up view? What side-effects one can expect with the old code?\nCan the target view be child of something else, than referred in your 'while' loop? Did you meet it on practice?. @funnel20 I recognized that my code was not enough (I did it via class inheritance), as for some reason those tooltips were not dismissable on click afterwards. I applied your code to the original file and it seem to work like a charm!. "
}