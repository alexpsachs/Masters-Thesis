{
    "ayush": "David,\nswagger-core is not in a public maven repo yet, you'll need to build/deploy it locally. \nYou could clone swagger-core and build/deploy it to your local ivy repo by executing \"ant deploy\" and then execute \"ant dist\" as described in the readme for swagger-java-sample-app \n-ayush\nOn Oct 8, 2011, at 4:45 AM, ddsky wrote:\n\nHello,\nI wanted to test the sample Java application with swagger so I tried to build it but the build failed because the swagger-core could not be found at: http://download.java.net/maven/2/wordnik/swagger-core/1.0/swagger-core-1.0.jar.\nSo I thought I build the core lib myself but running ant on this project results in 45 errors e.g.\n\"   [scalac] G:\\Projects\\Programming\\Java\\wordnik-swagger-core-9dcb0e6\\src\\main\\scala\\com\\wordnik\\swagger\\core\\Documentation.scala:146:\nerror: type mismatch;\n  [scalac]  found   : scala.reflect.BeanProperty\n  [scalac]  required: scala.annotation.Annotation\n  [scalac]                              @BeanProperty var summary: String,\n  [scalac]                               ^\n\"\nand 44 more.\nI really like to try swagger cause it looks awesome but I have been struggeling for some hours now to get it to work. I would appreciate any available help.\nThank you and kind regards,\n          David\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/wordnik/swagger-core/issues/2\n. I think using HOCON for this makes a lot of sense. That format is \"compatible\" with Json (can be used to generate Json) and the whole intent of that format is for it to be human-editable.\n\nSo, I'd imagine a tool where you give your HOCON swagger file as input and it gives back the swagger spec format output in Json. Then a technical writer could just deal with a simpler HOCON file. We could even have a Pet store example of the HOCON based spec.\n. I think using HOCON for this makes a lot of sense. That format is \"compatible\" with Json (can be used to generate Json) and the whole intent of that format is for it to be human-editable.\nSo, I'd imagine a tool where you give your HOCON swagger file as input and it gives back the swagger spec format output in Json. Then a technical writer could just deal with a simpler HOCON file. We could even have a Pet store example of the HOCON based spec.\n. @seantbrady That seems like a reasonable workaround, although we probably need a reset method in PlayApiReader too. \nIn play2 the compilation is handled by SBT so other than your Global.onStart approach (or writing a sbt plugin?!) I'm not sure whats the hook swagger-play2 can tap into to expire that cache. In play1 there are hooks which get called back when classes change.\n. @seantbrady That seems like a reasonable workaround, although we probably need a reset method in PlayApiReader too. \nIn play2 the compilation is handled by SBT so other than your Global.onStart approach (or writing a sbt plugin?!) I'm not sure whats the hook swagger-play2 can tap into to expire that cache. In play1 there are hooks which get called back when classes change.\n. @seantbrady This commit should address this. Please reopen with more details if you encounter problems with it.\n. @seantbrady This commit should address this. Please reopen with more details if you encounter problems with it.\n. still fixing. some loose ends on this. \n. still fixing. some loose ends on this. \n. ok, try now.\n. ok, try now.\n. These supporting classes come from wordnik-oss and were recently committed You'll need to build and deploy the latest swagger-oss, specifically the common-utils modules in there. \nPlease try that and and let me know if there are still problems with using the monitoring stuff. The routes and Build.scala in scala-play2 sample app have been updated to use this.\n. These supporting classes come from wordnik-oss and were recently committed You'll need to build and deploy the latest swagger-oss, specifically the common-utils modules in there. \nPlease try that and and let me know if there are still problems with using the monitoring stuff. The routes and Build.scala in scala-play2 sample app have been updated to use this.\n. Hmm this is computed using the ManagementFactory class. Can you confirm if you're able to call its getThreadMXBean method directly?\n. Hmm this is computed using the ManagementFactory class. Can you confirm if you're able to call its getThreadMXBean method directly?\n. @brainwatch @angelokh @fehguy there was a bug in the play2 plugin which was causing this to happen only for java. This has been fixed now.\n. Did you \n1. Get the latest swagger-play2 module\n2. Publish it locally (play publish-local)\n3. Rebuild the app (play clean, play start)\n?\n. Yikes! Thanks for reporting this. \n. @geeksville that'll work but we probably want to externalize this to make it configurable in swagger.\n. @fehguy Maybe I'm missing something here but I'm not sure what needs to be done in swagger-core here. Swagger-core simply 'documents' the availability of API interfaces. Whether these API interfaces accepts POST bodies in as a form/url-encoded or in JSON or in XML or plain text is a function of how the controllers were written and whether the stack (jax-rs or play framework) automatically supports one or more of these or not. \nFrom the perspective of swagger project, doesn't this need to be simply a parameter to swagger-ui which allows users of swagger-ui to set the contentType for body params to be anything they want: for example 'application/json' or 'text/plain' or 'application/x-www-form-urlencoded'?\n. ",
    "fehguy": "trying to keep dependencies down so this is on hold\n. Hi @Angelabably, can you please pull the project and run \"mvn install\" from the top-level directory?\n. Please post your question in Chinese and we will translate\n. giving this a whirl, I'll post back my results\n. looks like last PR (https://github.com/wordnik/swagger-core/pull/64) really broke support with RESTEasy as the jersey @Context params are not all available in the resteasy context.  Looking into it\n. So it looks like WebConfig and ResourceConfig contexts are not available in RestEasy--that means the swagger-jaxrs would need a more serious rewrite for resteasy support.  The functionality is available but not portable.\n. Good news--resteasy is now supported in the current 1.2.0-SNAPSHOT.  Please see this sample:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/resteasy\nNote there is a change in the default listing path, for this example, you can hit this URL:\nhttp://localhost:9095/resteasy/api-docs.json\nswagger-ui is supported, as is swagger-codegen.\nWould love feedback on this before 1.2.0 is released!\n. confirmed working in 1.2.0-SNAPSHOT\n. Have you tried following this example?\nhttps://github.com/wordnik/swagger-core/tree/master/samples/java-resteasy\n. Got it.  The latest version (1.3.0-SNAPSHOT) removes jersey dependencies completely.  I'll get that sample updated and post back here.\n. to be clear, the sample in master works fine:\n```\nmvn package -Dlog4j.configuration=file:./log4j.properties jetty:run &\ncurl \"http://localhost:8002/resteasy/api-docs.json\"\n```\ngives what you would expect:\njson\n{\n  \"apiVersion\": \"0.1\",\n  \"swaggerVersion\": \"1.1\",\n  \"basePath\": \"http://localhost:8002/resteasy\",\n  \"apis\": [\n    {\n      \"path\": \"/api-docs.{format}/library\",\n      \"description\": \"\"\n    }\n  ]\n}\n. Please take a look at the sample's pom + web.xml to see the exact configuration\n. the sample with 1.3.0 has been updated.  If you see some issue in there you can re-open.\n. https://github.com/wordnik/swagger-core/tree/develop-1.3/samples/java-resteasy\n. Hi Chiram, thanks (and good to hear from you).\n. This will happen eventually but I'm going to leave it off the issues list.\n. You ar correct, thank you, I'll update the docs\n. Hi Chris, looking into this before the next release\n. @brindly, thanks for the comment.  I really hate the scala version in the artifact name but right now, we are supporting scala 2.8.x, 2.9.x with the same version of swagger-core.  So a breaking change at the swagger api level needs to be decoupled from a difference in the scala versions, which is why the artifact name is (unfortunately) there.\n. This would be a great addition to the 1.1 spec.  Will look into it more\n. this is on the roadmap\n. hola folks, this has been addressed in a branch which is final testing.  So if anyone wants to take it for a spin, please pull from here:\nhttps://github.com/wordnik/swagger-ui/tree/overhaul\n. pushed to latest swagger-ui.  For an example, just put \"http://petstore.swagger.wordnik.com/api/pet.json\" as the URL.\n. fixed by adding java abstract class and xml type info.  Test in https://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/test/scala/com/wordnik/test/swagger/core/DocumentationSerializationTest.scala\n. Howdy, we based this on draft 3 (http://tools.ietf.org/html/draft-zyp-json-schema-03).  It is due for an update.\n. Agreed that consistency with the spec would be ideal, we'll look into the schema and post back here if we make adjustments.  Note that the wiki shows the proposed 1.1 swagger spec, not current implementation of the 1.0 swagger spec.\n. see here for an example of documenting an existing api w/o any integration:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/no-server\n. fixed, thank you\n. Can you make sure you have the following in your Build.scala:\nval appDependencies: Seq[sbt.ModuleID] = Seq(\n    \"org.codehaus.jackson\" % \"jackson-jaxrs\" % \"1.9.5\",\n    \"org.codehaus.jackson\" % \"jackson-xc\" % \"1.9.5\",\n    \"org.codehaus.jackson\" % \"jackson-mapper-asl\" % \"1.9.5\",\n    \"org.codehaus.jackson\" % \"jackson-core-asl\" % \"1.9.5\",\n    \"swagger-play2\" %% \"swagger-play2\" % \"1.1-SNAPSHOT\")\nThat error is a missing jackson lib\n. awesome!\n. Hi, great commit, let me run through to make sure this doesn't bust anything.  Stay tuned.\n. Hi @pilhuhn, I've looked into this code.  Thank you for submitting it!\nI'm not clear what the benefit will be to manually create the XML responses without using JAXB or Jackson (for Json).  Seems like it decouples the functionality to the point that it'll be hard to maintain?  We also need to build the schema for the models which could be even more difficult with this approach.  Can you elaborate on why you think it'll make things easier for swagger users?\n. Hi @pilhuhn I plan to support this change--we got caught up with an important product release and I haven't been able to test all the different apps.  Please hold for a bit while I get it tested first.\n. Hi @pilhuhn, changes have been merged.  There were a ton of build errors in the samples & modules, that's what the delay was for.\n. They're up in sonatype snapshot repo now:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-annotations_2.9.1/1.1-SNAPSHOT/\n1.1 release is pending some bug fixes, etc.\n. it looks like swagger-springmvc has branched off from swagger core, so i'm going to close this.\n. With play 2.1 on the way I think the play 1.2.x usage is declining pretty rapidly.  Please reopen if you feel this is really inaccurate, and we can see about bringing it back up to snuff.\n. I agree, something with the reload mechanism is missing a cached object.  Will investigate...\n. thanks @ayush!\n. @brainwatch, the wordnik-oss snapshots have been updated in sonatype\n. @brainwatch also addressed some missing routes, as well the cause of the response type error that you mentioned above.  I'm going to close this out--please reopen if you see issues.\n. howdy, I followed these steps and was able to run the sample just fine--I'm putting in tests today to make sure it stays healthy.  Can you please confirm you've followed these steps and still see that error?\n- publish modules/swagger-play2-utils locally via \"play publish-local\" in that folder\n- publish modules/swagger-play2 locally via \"play publish-local\"\n- run the sample app with \"play clean\" then \"play run\"\nYou should be able to hit http://localhost:9000/resources.json and get this:\n{\n  \"apiVersion\":\"0.1\",\n  \"swaggerVersion\":\"1.0\",\n  \"basePath\":\"http://localhost:9000\",\n  \"apis\":[\n    {\n      \"path\":\"/user.{format}\",\n      \"description\":\"Operations about user\"\n    },\n    {\n      \"path\":\"/pet.{format}\",\n      \"description\":\"Operations about pets\"\n    },\n    {\n      \"path\":\"/store.{format}\",\n      \"description\":\"Operations about store\"\n    }\n  ]\n}\nand http://localhost:9000/pet.json\nshould produce something like this:\n```\n{\n  \"apiVersion\":\"0.1\",\n  \"swaggerVersion\":\"1.0\",\n  \"basePath\":\"http://localhost:9000\",\n  \"resourcePath\":\"/pet\",\n  \"apis\":[\n    {\n      \"path\":\"/pet\",\n      \"description\":\"Operations about pets\",\n      \"operations\":[\n        {\n          \"httpMethod\":\"POST\",\n          \"summary\":\"Add a new pet to the store\",\n          \"responseClass\":\"ok\",\n          \"nickname\":\"addPet\",\n          \"parameters\":[\n...\n```\n. Hi, all testing has been done on JDK 1.6.  Is there a chance you can try that version so we can hunt down the issue?\nI also just updated the Build.scala to point to a github-hosted ivy repo so you don't need to build the swagger-play2 project or the swagger-play2-utils.  Could you please pull and try again?\n. well good news and bad news.  I fired up a fresh VM with windows XP (yes, I know that's old) but with play 2.0.1, jdk 1.6.0_27 and a fresh clone of swagger-core.  I had to make 2 changes for windows to work with the Build.scala (I'm committing those) but both the swagger-play2 sample and java-play2 sample run just fine.  I think I'll need to chat with you on IRC #swagger to figure out why it's failing for you.  It's really weird.\nWhat time zone are you in?  If you can ping me at tonytam on irc then I'd be happy to help sort this out.\n. Hi, I think that error message is a red herring.  We'll get the message sorted out and report back exactly why it's there.\n. I've confirmed the issue, only happens in the java play2 sample.  Looking into it...\n. There was test code in the java app that should have been removed :(  It's gone now, and the sample is returning the correct data now.\n. @angelokh you can either publish locally or use the pre-compiled versions in the github repo.  If you build locally, I'd recommend wiping your ivy cache, at least the com.wordnik artifacts.\n. OK i see the issue.  The Play2 module is not in a maven repo--per the instructions here:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/scala-play2\nYou need to publish it locally.  So I think you will have to pull the lib and include it in your github project.  I'm looking at getting it uploaded to our public maven repo.\n. I have a work around for now--I've published the artifacts into our github pages repo:\nhttps://github.com/wordnik/wordnik.github.com/tree/master/repository\nYou can add a resolver to read this repo (which is public) and you should be able to pull your artifacts down:\nResolver.url(\"swagger-core-github-repo\", url(\"http://wordnik.github.com/repository\"))(Resolver.ivyStylePatterns),\nIt takes a bit for the files to show up in the CDN so it should be available in about 30 minutes.  Please report back!\nTony\n. Thanks, just updated the Build.scala and readme.\n. fixed in master, will deploy on 1.1.1\n. This should be addressed in the 1.1.0 release, please reopen if you see an issue still\n. Hi, please pull from this branch:\nhttps://github.com/wordnik/swagger-core/tree/1.1.0-spec\nWhich will be merged with master shortly.  It should work fine and has been tested with the latest swagger-ui\n. correction on my last post--the scala play2 app is updated, the java-play2 sample will be shortly.  Apologies on that!\n. @cainj, @angelokh, this is now fixed--I've committed the java-play2 sample changes here:\nhttps://github.com/wordnik/swagger-core/tree/1.1.0-spec/samples/java-play2\nThe updated support is in the 1.1.0-SNAPSHOT for swagger-core as well as swagger-play2.  You can build each module as needed, or you can grab them from Sonatype:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-core_2.9.1/1.1.0-SNAPSHOT/\nAnd swagger-play2 from our github repo:\nhttp://wordnik.github.com/repository/com.wordnik/swagger-play2_2.9.1/1.1.0-SNAPSHOT/ivys/ivy.xml\nThanks for your patience with this--I'm going to keep this open until I hear that it's resolved the issue, which was based on reading the host class from the route + method name, which was different from java & scala (per our implementation at least):\nhttps://github.com/wordnik/swagger-core/commit/e2bfd57a37f95901f7c95066ea4a164beaea798b\nTested with latest swagger-ui and swagger-codegen\n. @cainj you mean the stock sample here:\nhttps://github.com/wordnik/swagger-core/tree/1.1.0-spec/samples/java-play2\nis not showing up in the ui for you?  can you please wipe your ivy cache?\nrm -rf ~/.ivy2/local && rm -rf ~/.ivy2/cache\nand try again?  I'm baffled, just ran the project and it's behaving nicely with the swagger ui.\n. aha!  ivy strikes again.  Please nuke your play ivy cache as follows:\nrm -rf $PLAY_HOME/repository/cache/com.wordnik*  && rm -rf $PLAY_HOME/repository/local/com.wordnik*\nThat should do it--please post back after you give it a shot.\n. Awesome, glad that did it\n. closing this out, if issue comes back, please reopen.  Now pushed to master, artifacts in maven central\n. should be addressed in 1.1.0, please reopen if you see issues still\n. I didn't realize this was still in the core!  Looking into alternatives to it and will get back to you soon.\n. This is addressed in the 1.1-spec branch:\nhttps://github.com/wordnik/swagger-core/tree/1.1.0-spec\nYou can configure the package in you web.xml through an init-param:\nxml\n<init-param>\n   <param-name>api.model.packages</param-name>\n   <param-value>com.your.project</param-value>\n</init-param>\nThis isn't typically needed--there is a default exclusion criteria which passes all the unit tests in SpecReaderTest.scala.  But if you want to only include a certain package, please use the web.xml param per above\n. pushed to master and released in 1.1.0.  You can take the default filtering which is sensible--or put your own in web.xml or via programmatic configuration in the TypeUtil:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/main/scala/com/wordnik/swagger/core/util/TypeUtil.scala#L224\n. Suggest we follow the implementation for other languages and parse the responseClass as a string such that List[Pet] will correspond to a list of pets, with support for the containers in the datatypes (https://github.com/wordnik/swagger-core/wiki/Datatypes) section of the wiki\n. with java type erasure I think this is not possible without instantiating an actual object and passing it to the annotation, since getting the parameterized type \"String\" in classOf[List[String]] isn't really possible.\n. not possible in both scala and java with a single implementation.\n. done in 1.1.0\n. validated with mustache branch of swagger-codegen\n. I've looked into this.  Problem is, using jackson's schema generator will not allow the use of the optional (and quite helpful) annotations.  For example:\nhttp://petstore.swagger.wordnik.com/api/pet.json\nShows a \"Pet\" object with allowable values, required fields, and descriptions.  I don't see how we could ingest that easily without essentially seriously hacking the jackson json schema code\n. I think the best solution to this and #46 is to make the schema generation pluggable.  There will one implementation, based on the swagger-generated model.  In configuring that provider, we can pass the namespace for package inclusion.  Another provider can be implemented using Jackson.\n. Two approaches, hopefully they will solve the problem.  Going to add the @JsonIgnore support in the swagger schema generator.  Also going to add support for Jackson schema which at first won't take advantage of all swagger annotations.\nI have both working, going through and making sure all the tests pass, and limitations are known.\n. OK the limitation with the Jackson-based schema generator is pretty massive--that is, complex object properties cannot be \"linked\" to other complex types.  So this:\njson\n{\n  \"id\":\"ComplexObject\",\n  \"properties\" : {\n      \"names\" : {\n         \"type\":\"array[string]\"\n      }\n   }\n}\nwill work fine.  But when the names is complex (say User), we'll get this:\njson\n{\n  \"id\":\"ComplexObject\",\n  \"properties\" : {\n      \"names\" : {\n         \"type\":\"List[object]\"\n      }\n   }\n}\nThe schema can contain the details of the object but it will violate the schema flattening that swagger requires and enforces.  Ideally we would link directly to the object contained in the array, and that object could be shared in other methods:\njson\n{\n  \"id\":\"ComplexObject\",\n  \"properties\" : {\n      \"names\" : {\n         \"type\":\"List[User]\"\n      }\n   }\n},\n{\n  \"id\":\"User\",\n  \"properties\" : {\n      \"first\" : {\n         \"type\":\"string\"\n      }\n   }\n}\nSo we would have to auto-generate some new model names to support the \"anonymous\" inner complex objects.  That's fugly.\n. You can see the pluggable json schema generation here:\nhttps://github.com/wordnik/swagger-core/tree/1.1.0-spec\nThis doesn't solve the problem but it gives some options.  More soon on this wild frontier...\n. Now model introspection is pluggable:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/main/scala/com/wordnik/swagger/jsonschema/JsonSchemaProvider.scala\nNow you can write a class which reads a model via Class[_] and emits a DocumentationObject.  Will add a jackson version after some issues with jackson are  fixed.\n. While the schema generation is now pluggable, json schema proved to be too generic to support the codegen use cases.  So for now, it's not supported in swagger.\n. pushed in 1.3.0-SNAPSHOT\n. Correct--I've updated the wiki.  Thanks!\n. sure thing\n. I think we can merge this without a CLA :)\n. Hi, are you pulling from master?  This shouldn't have a dependency on com.fasterxml....  The only reference to com.fasterxml should be in the 1.1-spec branch, which is being deployed to sonatype snapshots repo but with version 1.1.0-SNAPSHOT.  What version are you depending on?\n. Got it--yes, OSGI can bring in a bunch of unwanted stuff.  Glad you got it sorted out\n. RE: PagingList, per issue #36, these are not real errors.  The message is misleading--we'll remove the message in the next update.\nFor model Junction--are there public methods/fields in it?\n. Can you post the com.avaje.ebean.Junction model code?  If it has public getter/setters, you should see the model correctly.\nThe message \"X not annotated with a @XmlRootElement annotation, using X\" is a red herring and will not be printed in the future.\n. OK, is the json coming back from the API describing the models correctly?  Can you post that?\n. OK, if you can post that, it would be helpful.  Perhaps you can join me on #swagger via irc.freenode.net?  I'm around for a few minutes\n. Did you update your conf/routes as well?\n. @domguinard, I'm certain the java version works, there is a sample which demonstrates it here:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/scala-jaxrs-no-format\nDo you have the bootstrap firing before the jersey servlet loads?\nxml\n    <servlet>\n        <servlet-name>Bootstrap</servlet-name>\n        <servlet-class>com.wordnik.swagger.sample.Bootstrap</servlet-class>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\nsee https://github.com/wordnik/swagger-core/blob/master/samples/scala-jaxrs-no-format/conf/web/web.xml\n. @rore, if you remove the format string, you'll want to update the routes to remove the .json suffix like such:\n```\nRoutes\nThis file defines all application routes (Higher priority routes first)\n~~~~\nSwagger - Root Resources Listing\nGET     /resources                       controllers.ApiHelpController.getResources\nGET     /pet                             controllers.ApiHelpController.getResource(path = \"/pet\")\nPOST    /pet                             controllers.PetApiController.addPet\nPUT     /pet                             controllers.PetApiController.updatePet\nGET     /pet  /findByStatus              controllers.PetApiController.findPetsByStatus(status)\nGET     /pet  /findByTags                controllers.PetApiController.findPetsByTags(tags)\nGET     /pet  /:petId                    controllers.PetApiController.getPetById(petId)\nGET     /store                           controllers.ApiHelpController.getResource(path = \"/store\")\nPOST    /store  /order                   controllers.StoreApiController.placeOrder\nGET     /store  /order/:orderId          controllers.StoreApiController.getOrderById(orderId)\nDELETE  /store  /order/:orderId          controllers.StoreApiController.deleteOrder(orderId)\nGET     /user                            controllers.ApiHelpController.getResource(path = \"/user\")\nPOST    /user                            controllers.UserApiController.createUser\nPOST    /user  /createWithArray          controllers.UserApiController.createUsersWithArrayInput\nPOST    /user  /createWithList           controllers.UserApiController.createUsersWithListInput\nGET     /user  /login                    controllers.UserApiController.loginUser(username,password)\nGET     /user  /logout                   controllers.UserApiController.logoutUser\nPUT     /user  /:username                controllers.UserApiController.updateUser(username)\nDELETE  /user  /:username                controllers.UserApiController.deleteUser(username)\nGET     /user  /:username                controllers.UserApiController.getUserByName(username)\n``\n. @rore--just so I'm understanding correctly, you mean you just want to remove the.json` suffix in the URL--so http://localhost:9000/pet.json/1 => http://localhost:9000/pet/1.  Is that correct?  If so, changing the routes file to remove the .json won't affect the format of the response, just the URL.\nLet me know if I'm misunderstanding your question\n. Got it--so you should do this:\nPlayApiReader.setFormatString(\".json\")\nat application bootstrap.  You can leave the routes as-is.  Can you give that a whirl and see if it solves your concern?  Swagger-ui and codgen should work fine with this change.\n. Hi @rore, that could be it.  Can you try setting that as well?  We'll look at cleaning it up to make a single config.\n. got it.  will work in a sample to demonstrate doing this.\n. This has been addressed.  Please see new sample here:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/scala-play2-no-format\nAlso you can now configure the .{format} suffix programmatically:\nscala\nPlayApiReader.formatString = \".{format}\"\nor from your application.conf:\nswagger.api.format.string=\"\"\n// or\nswagger.api.format.string=\".{format}\"\nThis is copied to the github repo as version swagger-play2-1.1.1:\nscala\n  val appDependencies: Seq[sbt.ModuleID] = Seq(\n    \"com.wordnik\" %% \"swagger-play2\" % \"1.1.1\")\n. hi @pilhuhn, this has been done here:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/main/scala/com/wordnik/swagger/core/util/TypeUtil.scala#L207\nIf using jersey, you can override this in your web.xml by passing this property:\napi.model.packages\nas such:\nhttps://github.com/wordnik/swagger-core/blob/master/samples/java-alt-resource-listing/conf/web/web.xml#L22\nPlease close if that covers your use case.\n. @pilhuhn sounds like the people have spoken!  If you have a chance to commit something on this front I'd be happy to look at it and see if we can merge it in.\n. I believe you can configure a \"swagger.config.reader\" in your web.xml, and delegate the setting of the basepath, etc to your own logic.  See here:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/ConfigReader.scala#L23\njust extend that class and point your web.xml to use your own logic.  Should do the trick\n. Awesome!  If you have time, you could help by adding to the wiki so others can know about it.\n.  hi @eyala how about joining #swagger and we can work it out?\n. Not sure you got my message via irc so here's the details on this.\nIn your web.xml:\n<init-param>\n  <param-name>swagger.config.reader</param-name>\n  <param-value>com.wordnik.swagger.sample.CustomConfigReader</param-value>\n</init-param>\nAnd implementation of a customer reader (of course you need to fill in the empty strings):\n``` java\npackage com.wordnik.swagger.sample;\nimport com.wordnik.swagger.jaxrs.ConfigReader;\nimport javax.servlet.ServletConfig;\npublic class CustomConfigReader extends ConfigReader {\n    public CustomConfigReader(ServletConfig config) {}\n@Override public String basePath() {\n    return \"\";\n  }\n@Override public String swaggerVersion() {\n    return com.wordnik.swagger.core.SwaggerSpec.version();\n  }\n@Override public String apiVersion() {\n    return \"\";\n  }\n@Override public String modelPackages() {\n    return \"\";\n  }\n@Override public String apiFilterClassName() {\n    return \"\";\n  } \n}\n```\n. I really hate this answer, but I've seen similar issues when your ivy cache gets corrupt.  Could you please try nuking it?\nrm -rf $PLAY_HOME/repository/cache\nOr if you want to \"surgically remove\" the offending component you can try:\nrm -rf $PLAY_HOME/repository/cache/commons-*\n. Tests pass fine so I'm merging.  What issue were you having running them?\n. deployed in 1.1.1-SNAPSHOT in sonatype snapshot repo\n. Hi, can you try deploying the war from the sample in your tomcat container?  Try this:\nhttp://repo1.maven.org/maven2/com/wordnik/swagger-java-sample-app_2.9.1/1.1.0/\n. Can you show what your dependencies are?  My guess is you're picking up the wrong version of scala\n. Howdy, I just got the swagger sample working fine with a fresh copy of tomcat.  All I did was grab the sample war from here:\nhttps://oss.sonatype.org/content/repositories/releases/com/wordnik/swagger-scala-sample-app_2.9.1/1.1.0/swagger-scala-sample-app_2.9.1-1.1.0.war\n... and dump it in the webapps folder with the name \"api.war\".  Sample started up just fine.\nCould you please try to reproduce that step?  You should be able to hit http://localhost:8080/api/resources.json once ./bin/catalina.sh start is executed.\n. Yep, I get that error on 7.0.29.  Any chance you can use 7.0.32?\n. I'm closing this as it seems like s 7.0.29 bug.\n. deployed in 1.1.1-SNAPSHOT in sonatype snapshot repo\n. Yes, it will be built shortly.\n. You'll see snapshots deployed for scala 2.10.0-RC1 now:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-core_2.10.0-RC1/\n. Looks like Jackson scala module is puking because there's not a 2.10 port of it.  If you're using swagger with 2.10.0-RC1, suggest you don't use the jackson-scala-module for now.\n. Will switch to use json4s in samples (https://github.com/json4s/json4s)\n. pushed 2.10-RC2 to maven central.  Will add a json4s sample shortly.\n. Hi, they are deployed as 2.10-RC2\nI hit the same snag with play 2.1 and put it on hold for a bit, hopefully it's out of snapshot soon.\n. Yep, swagger-core should create a path param with legal name.\n. seems like a good general fix--can you submit a PR to swagger.js?\n. I believe this is a swagger-ui, not swagger-core issue, and was fixed here:\nhttps://github.com/wordnik/swagger-ui/pull/91\nPlease reopen if you feel otherwise.\n. @ayush I believe this support would include the following:\n- telling the api annotation that the input would be from a form post.  The class will need the appropriate content-type set in it\n- specifying that the API in the swagger json spec would be of type FORM\nThen on the UI, we would need to turn operations of type FORM into post methods, with content type x-www-form-urlencoded\n. All, we looked into this more.  I believe the correct solution is as follows:\n1) The issue is the input format from a x-www-form-encoded is not JSON, whereas the swagger-ui supports only JSON POST input.\n2) The server needs to tell the consumer (swagger-ui) that the input type should be x-www-form-encoded rather than json by declaring what input format it expects\n3) The swagger specification needs to be amended to support the additional input format declaration (point 2)\nThat said, version 1.2 of the swagger specification will have this additional input--input format (see https://github.com/wordnik/swagger-core/wiki/Specification-Roadmap) as well as explicitly setting the content type being produced.  There is branch of swagger-core here:\nhttps://github.com/wordnik/swagger-core/tree/1.2.0-spec\nwith a docs folder containing sample specs with the new format.  They're not done, but will be shortly.  Please keep watching this thread and I'll post back when things are updated.  Thanks for the patience on this issue!\n. Please see https://github.com/wordnik/swagger-core/issues/107#issuecomment-12976087\n. There are two challenges--one, some folks don't have control over the path that their webapp is deployed.  It may be the ROOT webapp (so http://my-api.com/resources.json would be valid), others might require the version in the path, like Wordnik @ https://api.wordnik.com/v4/resources.json.  So I think setting a global discovery URL is a difficult thing to get adopted.\nWe can change convention but it may still lead to paths like /v4/api-docs/resources.json which is not universally consistent.\n. seems like returning a discovery URL in the headers might suffice, rather than an actual link response per @casualjim's suggestion.  Then the payload will be unaltered.\nWould be a shame, though, to send on every response from the API because of increased bandwidth.  Perhaps just sending in the GET from the root resource?  Thoughts on that?\n. @vsapram both can live in the same environment but you can't just configure swagger to use the older package.  There are lots of changes in jackson after it moved to com.fasterxml.\n. Dup of #47.  I'd love to fix this but with type erasure, I don't think it's possible with Java for types like List<User>.  It IS however supported in scala 2.10 on scalatra--I'm closing this ticket but keeping the other open.\n. I hate to blame ivy but it typically is the case that some erroneous dependency got in the ivy repo and it needs to be wiped.  Can you please try deleting your play/ivy cache?\nrm -rf $PLAY_HOME/repository/cache\n. I think the proper way to set it is like this:\ncom.wordnik\" % \"swagger-play2\" %% \"1.1.1-SNAPSHOT\nAlso you might pick up the 1.1.1-SNAPSHOT\n. Yes, the problem with the change to use WebConfig instead of ServletConfig, we became tied to the Jersey implementation of JAX-RS.  To support other JAX-RS implementations, we had to switch to support ServletConfig.\n. manually merged in https://github.com/wordnik/swagger-core/commit/d07a2eb0a4ed16658beee93101e3c18bce8374b1\n. also merged to the 2.9.1 branch\n. This has been added to the roadmap (https://github.com/wordnik/swagger-core/wiki/Specification-Roadmap), the propsed terms are accepts (receives) and produces (creates).\n. Our goal is to make the spec declarative the right way, then make the implementation follow accordingly.  I do believe \"produces\" and \"consumes\" is the right naming convention.  I also would like to see an override mechanism from the top level (server) to each resource, then method.  I hope to get this in shortly, like this month.\n. Take a look here for how we'd like to support this:\nhttps://github.com/wordnik/swagger-core/blob/1.2.0-spec/samples/scala-jaxrs-fileupload/src/main/scala/com/wordnik/swagger/sample/resource/PetResource.scala#L58\nThis is a language-specific example, but in general, would like to have the following in the spec:\njson\n[\n  {\n    \"httpMethod\": \"POST\",\n    \"summary\": \"uploads a form data\",\n    \"responseClass\": \"void\",\n    \"nickname\": \"formData\",\n    \"consumes\": [\n      \"application/json\"\n    ],\n    \"produces\": [\n      \"application/json\"\n    ],\n...\n. added to 1.3.0-SNAPSHOT, and will be updated in the documentation on the wiki shortly after release of swagger-core-1.3.0.\n. Hi @d1b1 have you seen the jasmine tests for swagger.js?\nOur testing plan is to use swagger-codegen to write the test scripts, which are based on the swagger spec files.\nOn a side note (since I saw resources.json in your post), we are migrating to a separate api for all the swagger docs--api-docs.json, with each api description living \"underneath\" that path, for example, see here:\nhttp://petstore.swagger.wordnik.com/api/api-docs.json\nhttp://petstore.swagger.wordnik.com/api/api-docs.json/pet\nhttp://petstore.swagger.wordnik.com/api/api-docs.json/user\nI'm working on the node.js swagger framework to make this change as well.  Will it cause trouble for you?\n. Hi @d1b1, sub path should be ok, but your base path from here:\nhttp://composer-development.ci.publicbroadcasting.net/api/station\nShould be absolute.  See http://petstore.swagger.wordnik.com/api/pet.json\n. @d1b1 just pushed an update to the node.js version to support paths as mentioned above.\n. Good points @Narretz, will look into improving the docs overall.\n. https://github.com/wordnik/swagger-core/wiki\nif you see anything else missing, please feel free to add placeholders or file issues.\n. Updated to 1.1.6\n. Hi, we now have 4 JAX-RS examples in the samples section.  (RESTEasy, grails, Jersey, Dropwizard).  Can you please start there and see if you can handle the integration?  Happy to help if you create a sample app and share it, with a specific issue.\n. Hi, there's just one thing that I know of in the way--I believe the ServletConfig being passed to our configReader is null.  Now that we have a jersey-specific module this should be fixable, will post back here once I get a chance to.\nFeel free to try that snapshot (it's in sonatype-snapshots) and see why that ServletConfig is coming in null, then we can get this supported!\n. Hi, the version number in the artifact name is for the scala version (2.10).\nI'm having trouble running your sample, it is returning 400 errors on every request.  I'm using the tomcat plugin to avoid copying war files around.  Can you please confirm you can run your sample as such:\nmvn tomcat:run\nwith this addition in your pom.xml?\nxml\n<build>\n  <plugins>\n    <plugin>\n      <groupId>org.apache.tomcat.maven</groupId>\n      <artifactId>tomcat6-maven-plugin</artifactId>\n      <version>2.1</version>\n    </plugin>\n  </plugins>\n</build>\n. from this:\nhttp://localhost:8080/swagger-cxf/api/v1.0/user.json/user1\nI get this:\n23:44:35.444 WARN  [http-8080-1] org.apache.cxf.transport.servlet.ServletController#invoke:156 - Can't find the the request for http://localhost:8080/swagger-cxf/api/v1.0/user.json/user1's Observer \nAny ideas?\n. Looks like the NPE is coming from the @Context Application not being passed by CXF.  Similar to what we've seen before--can anyone help troubleshoot this?  My guess is that is caused by an application config for CXF:\nhttps://github.com/rvullriede/swagger-core/blob/master/modules/swagger-jersey-jaxrs/src/main/scala/com/wordnik/swagger/jersey/listing/ApiListing.scala#L55\n. Thanks for looking into it.  This might require a CXF-specific module (sigh) as the Application helps us figure out what classes are annotated with JAX-RS annotations (and therefore swagger annotations).  I don't think we can get this from the ServletConfig.  Looking more but if you have suggestions for replicating this:\nhttps://github.com/rvullriede/swagger-core/blob/master/modules/swagger-jersey-jaxrs/src/main/scala/com/wordnik/swagger/jersey/listing/ApiListing.scala#L31\nwe can do this faster.\n. @chadhahn I will see about how we can integrate your findings into a solution.\n. @rvullriede @chadhahn this is great, thanks so much for working this out.  Can I adopt the swagger-cxf sample into our samples, and add some documentation?  This would also help make sure things keep working with updates, since I can add integration tests.\n. thanks to the contributions!  Official sample is now in master:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/java-jaxrs-cxf\n. Hi, Play 2.1 is still in snapshot and there are some pretty significant api changes in it.  Any idea when it's expected to be released?  I started working on the port but it'll take some work.\n. Will be looking at this again in the next couple days.\n. Hi folks, this is mostly implemented and pushed into master.  The only known incomplete feature is the security filtering is currently not enables.  You will get a number of error warnings in the console because of this (they may go away if you don't have a filter implemented) but they can be ignored.  Please note!  NO security filtering will occur right now, so if you have a resource that you don't want exposed, don't use this version.  Also the swagger-play2-utils is not updated yet.\nThe scala-play2 application has been updated to use play 2.1, I will get to the java version shortly.\nTo use the current snapshot, please look at the sample here (note, this requires the scala_2.10.0 branch!):\nhttps://github.com/wordnik/swagger-core/tree/scala_2.10.0/samples/scala-play2\nWill update this ticket when the java sample is updated, and the security filter is done.\n. The java-play2 sample is updated as well:\nhttps://github.com/wordnik/swagger-core/tree/scala_2.10.0/samples/java-play2\n. I'll run it through the validator and report back\n. Ok folks, thanks for being so patient on this.  It's resolved and fully working against Play 2.1-RC1.\nThere were some challenges with this, and I'd love any insight folks may have in the Play 2.1 core refactoring.\nThe routes-compiler was moved out of the core and into a separate routes-compiler library.  This is what we were previously using to dissect the routes and map them to swagger operations.  Well, there is no scala 2.10 version of this artifact, and using the 2.9.2 gives runtime errors because of binary incompatibility.  Furthermore, the parser was made private which required the logic to be copied out into a public class.\nI'll try to get this sorted out with the play folks, but for now, we're operational :)  Grab the latest 1.2.1-SNAPSHOT from maven central, or build the scala_2.10.0 branch locally.  Will push a non-snapshot release after Play 2.1 is out of RC.\n. opened #98 to track this issue.\n. I see two issues--first, all the rest APIs are discovered (scanned) by the tomee framework.  Can this be configured to scan only certain packages, such as com.wordnik.swagger.jaxrs.listing and com.wordnik.swagger.sample?\nNext, the @Context ServletConfig is not being set, which is causing the NPE.  Looking into that.  If you can help with the configuration of the scanning packages, that would be great.\n. Howdy, looking at this again, there's an issue with the @ServletConfig context being injected.  If you modify the PetResource.java as follows:\n``` java\n    @GET\n    @Path(\"/{petId}\")\n    @ApiOperation(value = \"Find pet by ID\", notes = \"Returns a pet when ID < 10. \"\n            + \"ID > 10 or nonintegers will simulate API error conditions\", responseClass = \"com.wordnik.swagger.sample.model.Pet\")\n    @ApiErrors(value = { @ApiError(code = 400, reason = \"Invalid ID supplied\"),\n            @ApiError(code = 404, reason = \"Pet not found\") })\n    public Response getPetById(\n            @ApiParam(value = \"ID of pet that needs to be fetched\", allowableValues = \"range[1,5]\", required = true) @PathParam(\"petId\") String petId,\n            @Context ServletConfig config)\n            throws NotFoundException {\n    System.out.println(\"ServletConfig: \" + config);\n    Pet pet = petData.getPetbyId(ru.getLong(0, 100000, 0, petId));\n    if (null != pet) {\n        return Response.ok().entity(pet).build();\n    } else {\n        throw new NotFoundException(404, \"Pet not found\");\n    }\n}\n\n```\nYou will see that the ServletConfig is null.\nCan you help sort this out?  I'm guessing it's some config in the web.xml.\n. merged sample into master\n. Thanks, added to the list.\n. supported in 1.3.0\n. Thanks @danielwegener !  Lots of changes in here, it'll take a bit to review (have a major Wednesday deadline).  Will report back shortly...\n. Hi, @sgri why would you want the Api path (per annotation) to be different from the resource itself?  They should be the same.\n. Can you send the json output of the resource listing?\n. I've reproduced this.  Working on a fix, thanks for the detailed report.\n. Please try swagger version 1.2.1-SNAPSHOT, this will resolve the issue.\n. Hi, take a look here for a fully working file upload sample.\nTony\n. hi @zxchris apologies for the late reply--i thought i replied to this but apparently not.\nIn the 1.2 spec you can specify special handling based on response code.  So for a 201, you can tell the client to expect a different model as a response.  I understand this isn't completely in-line with what you're asking, but it does address the void problem that you described.\nI think the solution also depends on what you're after.  If you are just consuming the response with the UI, you can put a note in the message field of the responseMessage.  Then the developers can know to expect that field on a 201 response.  If you're looking for code generation, then the 201 response handling should be sufficient, and you can programmatically extract the header and populate your model.  Does that help?\n. sounds great\n. Are you running Java 7?\n. there's a new api for that info with java 7, we'll get it updated shortly.\n. hi, still not resolved but will be.\n. Verified no longer an issue \n. Hi, looks like you're missing just one step.  Take a look at \"Other configurations\" in the wiki here:\nhttps://github.com/wordnik/swagger-core/wiki/Java-JAX-RS\nWhen you remove the .format suffix, you have to override the default path for the listing resource (api-docs.json).  I'll send a PR to your project.\nI'd like to make the documentation more clear, so after we get this working for you, let's see about cleaning it up.\n. There is now a jersey-specific module which will allow this to be implemented\n. please see https://github.com/wordnik/swagger-core/tree/1.2.0-spec/modules/swagger-jersey-jaxrs\n. closing as not per design\n. support is in play 2.3 now\n. Thanks!  Was just looking into this.\n. Thanks @boxfish \n. support is in play 2.3 now\n. If you can just make a simple java sample of how resource locaters are needed, without any swagger support, i can see if it can fit in.\n. formal support will come fastest with a simple working sample :)\n. great, thanks!\n. OK, I sent a pull request.  I think you'll find the solution elegant, please see that I covered all your use cases.  Essentially, we scan the return type from the method (which must be annotated with @ApiOperation) and if the class is annotated with @Api annotations, we treat it as a subresource.\nThis is all based on the 1.3.0-SNAPSHOT which has been totally refactored.\n. pushed to 1.3.0-SNAPSHOT and shown in this example:\nhttps://github.com/wordnik/swagger-core/tree/develop-1.3/samples/java-jaxrs-subresource\n. I believe this is purely a swagger-ui issue.  The server-side represents the models in a flat fashion, so self-references shouldn't be an issue.  Can you try downgrading the swagger-ui version in the mean time, to something like 1.1.5?\nhttps://github.com/downloads/wordnik/swagger-ui/swagger-ui-1.1.5.zip\n. support is in play 2.3 now\n. support is in play 2.3 now\n. There is now support for FORM params in swagger-ui, swagger.js, and a JAX-RS sample, through a snapshot version of swagger-core.  You can see the sample here:\nhttps://github.com/wordnik/swagger-core/tree/1.2.0-spec/samples/scala-jaxrs-fileupload\nThe UI to support this is available here:\nhttps://github.com/wordnik/swagger-ui/tree/master/dist\nThere is now an additional field in the spec to support form submits.  The paramType can be set to form as such:\njson\n{\nname: \"username\",\ndescription: \"user name\",\nparamType: \"form\",\nrequired: false,\nallowMultiple: false,\ndataType: \"string\"\n}\nwhich will tell swagger-ui to submit the data with multipart/form-data contentType.\nNote that this is not application/x-www-form-urlencoded like you asked about.  AFAIK, using JQuery's FormData object will only support multipart/form-data.  See here for how it's handled in our sample:\nhttps://github.com/wordnik/swagger-core/blob/1.2.0-spec/samples/scala-jaxrs-fileupload/src/main/scala/com/wordnik/swagger/sample/resource/PetResource.scala#L71\nOf course, you may not be using this server library, in which case, you're probably OK as-is.  Please reopen if you see issues!\n. Yes--the current (1.1.8) build of swagger-ui will support form submits.\nThis is done by setting the paramType attribute to form for inputs to be submitted--the ui will then submit them as multipart/form-data automatically.  If you're manually generating the swagger json spec, that's all you'd need to do--set the paramType:form.\nDoes that make sense?  Are you using a server integration to generate the swagger json, or doing it manually?\n. It depends.  multipart/form-data is a more \"modern\" way to submit data to a back-end, and depending on the back-end implementation, it may be handled exactly the same way.\nWhen dealing with files, though, you must use mulitpart/form-data.  I'd suggest pulling down this sample:\nhttps://github.com/wordnik/swagger-core/tree/1.2.0-spec/samples/scala-jaxrs-fileupload\nand trying it with the latest swagger-ui to see how it works.\nWhat server framework are you using?  Try it out, and please post back/open a new issue if you're having trouble.\n. Yes, that sample is java-specific, although you should be able to run it without doing anything but running mvn package jetty:run, assuming mvn is installed on your machine (it probably is).  Not that you want to run the java server in your system, but it'd let you see the annotations, and try out the ui with file-upload, form post, etc.\n. @CamiloMM yes, should work fine with any back end.  Think of swagger as the description, HTTP as the transport, and the server is whatever you like.\n@stianl great to hear, I would ideally like to have the ui be able to send application/x-www-form-urlencoded as well but was having trouble with the JQuery FormData object sending as that form.  If I can, I should be able to make that user-configurable.\n. can you post the swagger json for this api?\n. hey @pose checking in to see if you've looked at the comments on the gist\n. now supported, see https://github.com/wordnik/swagger-core/tree/master/samples/scala-jaxrs-fileupload\n. please reopen if you see issues.  Updated snapshot has been uploaded to sonatype\n. thanks, i need to verify that the changes in the method mapping don't cause regressions, so will merge this in a bit.\n. Manually merged into master for Play 2.1.0\n. This is all handled in the 2.0 spec.\n. closing as dup to #116 \n. I'm having a hard time reproducing this.  There are two different parts to this issue:\n1) The UI honoring the JSON being returned for both APIs and operations\n2) The generation of the JSON from server frameworks\nI'm seeing both working fine with 1.2.1.  Can someone please point to an example where this is not the case?  Or am I just getting lucky with the order?\nA more complicated example is here:\nhttp://developer.wordnik.com/docs.html\n. @engrun should be the order \"presented in the JSON\" from the server, for instance http://petstore.swagger.wordnik.com/api/api-docs.json/pet\nThe good news is the random ordering appears to be based on the server loading & inspection of the classes, not the swagger framework, which is a \"one-time\" process, which means we can expose a sort function to allow you to order them however you like.  Not sure what the best interface would be to do that, but it should be simple.\n. @shawnlauzon can you look at the JSON generated by the server?  My guess is that is changing on restarts of the app.  Take a look at both the resource listing and api declaration\n. added position to annotations:\n@Api annotation:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/Api.java#L36\n@ApiOperation annotation:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiOperation.java#L36\n@ApiProperty annotation:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiProperty.java#L55\n. Swagger doesn't claim strict JSON schema compliance, there are limitations with it that make it less useful for the codegen and consumption point of view.  Will review the latest draft but this is not specifically a defect.\n. duplicate of #51 \n. pushed to 1.3.0-SNAPSHOT\n. I sent you a pull request, you missed one step from the tutorial.  Please reopen if you have trouble\n. duplicate of #118 \n. Hi, two things.  First, please take a look at this ticket about CXF support:\nhttps://github.com/wordnik/swagger-core/pull/84#issuecomment-11392438\nSecond, there is now a jersey-specific artifact here:\nhttps://github.com/wordnik/swagger-core/tree/master/modules/swagger-jersey-jaxrs\nWith supporting sample here:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/scala-jaxrs-fileupload\nWhich can be modified to work around the CXF issue.  It's not done, but if you're looking to get ahead of this support, I'd start from that module\n. File is supported and you can see here:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/scala-jaxrs-fileupload\ngeneric form post is not currently supported in either the UI or server, but is almost complete.  Should be ready in a few days\n. yes, will be updated.\n. Please see https://github.com/wordnik/swagger-core/issues/107#issuecomment-12976087\n. Will be gone in release 1.3\n. done in 1.3.0-SNAPSHOT\n. Yes, right now the apireader isn't picking up the annotations.  Working on that next so it's automatically supported by the framework integrations.\n. now @Consumes and @Produces are supported, and swagger-ui will send them appropriately to the server.\n. thanks!\n. Internally we use the access value in the annotation to hide them--we set access=\"internal\" and let a filter look at the permissions of the user making the call (per api_key and auth_token) to make sure they're visible.  I'll look at the filter logic to see if we can expose it in the core project.\n. can you help make a test case?  The @ApiParam shouldn't affect this at all.\n. pushed as 1.3.0-SNAPSHOT\n. can you post this in swagger-ui?  there are other issues regarding the model rendering in there, and that's the proper place for the issue.\n. I believe swagger-ui is basing the relationship to the model on the model key, not the id field.  The format for models is not strict json-schema right now--it is based on an early draft of it.  Now that json-schema is more mature, we're looking to see if we can use it directly.\n. duplicate of #116 \n. Can you share more what UserResource looks like?\n. Got it.  I don't think we can pick up the swagger annotations reliably from that implementation style.\n. All classes that need to be documented by swagger require the @Api annotation, but now subresources are supported.  So you might try 1.3.0-SNAPSHOT to see if that handles your use case now.\n. Going to this URL:\nhttp://espn-server.herokuapp.com/api/info.json\nReturns this:\njson\n[\n  {\n    \"api\": \"ESPN API\",\n    \"created_at\": \"2013-01-23T10:08:05Z\",\n    \"current_match_id\": 1,\n    \"id\": 1,\n    \"updated_at\": \"2013-01-23T10:08:05Z\"\n  }\n]\nThat doesn't look like a swagger api listing.  What URL did you generate the json in your initial post from?\n. This is accomplished by setting the basePath in application.conf:\nswagger.api.basepath=\"http://production.myapi.com/v1\"\nYou can configure that to support your production route, and swagger will generate the correct path.  Does that do what you're looking for?\n. support is in play 2.3 now\n. Can you give a couple examples?\n. I believe this is a dup of #235 \n. You should be able to iterate over all the apis and execute this javascript:\njs\nDocs.toggleEndpointListForResource('user');\nwhere user is the name of the api that you're expanding.  You can execute this on page load.\n. Hi, can you try modifying your annotations as follows:\n@ApiOperation(value = \"A health route\", httpMethod = \"GET\")\nI think we can pick out the HTTP method from the routes file, but it may not be in this snapshot yet.\n. @eneko can you please change from @Api(value = \"/api/problems\", ...) to @Api(value = \"/problems\", ...)?  I'll make sure a more helpful error is returned when the api declaration isn't found.  The api path shouldn't have a / in it, I believe, which is causing it to not be found.\n. @chiappone will look into the PUT issue and anything not working with the sample\n. @chiappone I pushed a fix for the scala petstore example, this addresses some headers and support for the OPTIONS method.  You should see it here:\nhttps://github.com/wordnik/swagger-core/commit/970b07a94d607faf73c8dca7b9d9d7abe300bd4a\nSpecifically there is a route added to support OPTIONS:\nOPTIONS /*wholepath                      controllers.PetApiController.getOptions(wholepath)\nscala\n  def getOptions(path: String) = Action { implicit request => JsonResponse(new value.ApiResponse(200, \"Ok\")) }\nAs well as additional headers sent back in the api response:\nscala\nval jsonValue: String = w.toString()\nnew SimpleResult[String](header = ResponseHeader(200), body = play.api.libs.iteratee.Enumerator(jsonValue)).as(\"application/json\")\n  .withHeaders(\n    (\"Access-Control-Allow-Origin\", \"*\"),\n    (\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\"),\n    (\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\"))\nThe PUT methods should be fine now.  Can you confirm that addresses your issue and close this if so?\n. @chiappone @eneko there is now a more friendly error message returned via swagger-play2 plugin as well as to the UI.  You should be able to see an updated 1.2.1-SNAPSHOT in sonatype snapshots repo now.\n. OK great about the error message.  Looks like your issue is in your routes file--it should be:\nGET     /api-docs.json/problems     controllers.ApiHelpController.getResource(path = \"/api-docs.json/problems\")\nCan you make that change and see if it addresses the issue?  In summary, the GET route needs to match the path variable when calling the ApiHelpController which needs to match the listingPath in the annotations (but with .{format}).  It's complicated, and I'd like to simplify things soon.\n. Great news.  Will look into simplifying the setup for Play 2.1, will announce it in our google group when done:\nhttps://groups.google.com/forum/#!forum/swagger-swaggersocket\nAlso I hope to cut a release of this library this week.  If you see anything else, please share it!\n. Thanks @MaggieLeber.  There is a refactor coming to get the Play integration in sync with 1.3.0-SNAPSHOT (https://github.com/wordnik/swagger-core/tree/develop-1.3) and the docs will be updated.\n. Hi @shawnlauzon, we had to remove the com.sun.jersey dependencies to support JAX-RS w/o jersey specifically, which meant the WebConfig had to go.  Since most the world uses Jersey for JAX-RS, however, we started a swagger-jersey-jaxrs module where the sun dependencies can live, which is where this PR will need to go.\n. eh, I have to guess this is a limitation with GAE:\nhttps://developers.google.com/appengine/docs/java/runtime#The_Sandbox\nI don't know how you can/should include these classes in your app package.  Have you tried forking swagger-core and updating the ParameterizedTypeImpl class change as you suggested?\n. checking in-- did you work around this limitation in GAE?\n. there is still no support for GAE because of this limitation.  Working on a refactor right now which will help, I'll keep you posted in this issue.\n. FYI, swagger-core does not build with sbt but it indeed does use scala.\n. This is all handled in the 1.5.0-SNAPSHOT version.\n. Update to 1.5.4\n. hi folks, sorry for the delay--they are in sonatype snapshots, here:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-core_2.9.1/\nJust add that repo to your repositories and you'll be golden.\n. Pushing out a release today, I'll close this issue when it's up.\n. Hi, released:\nhttps://oss.sonatype.org/content/repositories/releases/com/wordnik/swagger-core_2.9.1/\n. Propose we amend the errorResponses to use this structure:\njson\n\"errorResponses\" : [\n  {\n    \"code\": 400,\n    \"reason\": \"Invalid tag value\",\n    \"responseClass\": \"MyErrorClassModel\"\n  }\n]\nand return MyErrorClassModel in the models section.\n. added to 1.3.0-SNAPHSHOT and tested:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/test/scala/JaxrsApiReaderTest.scala#L16\n. Hi I replied on your redlab project but in short, this is a field-level annotation, please take a look here for an example:\nhttps://github.com/wordnik/swagger-core/blob/master/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/model/User.java#L97\n. Hi, right now, no, you cannot reuse the object mapper to introspect your models.  You can, however get around this fairly easily.\nIf you look at this test class you can see different ways to support the swagger object introspector.\nWhat I would suggest is to consider moving the ObjectMapper logic to your object, and expose the fields via JAXB annotations, then swagger will read the model as the source of record for it's schema, and not get mixed up in the object mapper logic.\nI know this might not be doable, but it's the best path right now.  We will expose custom object mappers shortly so anyone can implement a model introspector for a specific class, and supporting the Jackson ObjectMapper pattern should be easy.\n. dup of #92 \n. This should be fixed in 1.2.2-SNAPSHOT, can you try again?\n. please re-open if 1.2.2-SNAPSHOT doesn't resolve this for you.\n. Looks like it's still an issue.  Per here:\nhttps://groups.google.com/forum/#!topic/swagger-swaggersocket/eO2d6qD9K9g\nThis model:\njava\npublic class DateTimeParam extends AbstractParam<DateTime> {\n    public DateTimeParam(String param) {\n        super(param);\n    }\n    protected DateTime parse(String param) {\n        return DateConverter.convertToDateTime(param);\n    }\n    public Date getValueAsDate() {\n        return getValue() == null ? null : getValue().toDate();\n    }\n    public static Date getValueAsDate(DateTimeParam dateTimeParam) {\n        return dateTimeParam == null ? null : dateTimeParam.getValueAsDate();\n    }\n}\nUsed like this:\n``` java\n public List historical(@QueryParam(\"ownerId\") Long ownerId,\n                                           @ApiParam(value = \"YYYY-MM-DD\") @QueryParam(\"fromDate\") DateTimeParam fromDate) {\npublic Response findEvents(\n            @PathParam(\"ownerId\") Long ownerId,\n            @PathParam(\"registrationType\") RegistrationTypeParam registrationType,\n            @ApiParam(required = false) @QueryParam(\"status\") AnimalExt.EnrollmentStatusCombination esc,\n            @ApiParam(required = false) @QueryParam(\"unenrollmentDate\") DateTimeParam unenrollmentDate,\n            @ApiParam(required = false) @QueryParam(\"fromDate\") DateTimeParam fromDate,\n            @HeaderParam(\"If-Modified-Since\") String modified) {\n```\nIs giving this stack trace:\n```\n1)\n2013-03-18 13:55:41,489 ERROR com.wordnik.swagger.jaxrs.HelpApi : Unable to load model documentation for no.tine.api.jersey.DateTimeParam\njava.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.TypeVariableImpl cannot be cast to java.lang.Class\n    at com.wordnik.swagger.core.ApiPropertiesReader$.getDataType(SpecReader.scala:91)\n    at com.wordnik.swagger.jsonschema.ApiModelParser.parsePropertyAnnotations(SwaggerJsonSchemaProvider.scala:154)\n    at com.wordnik.swagger.jsonschema.ApiModelParser.com$wordnik$swagger$jsonschema$ApiModelParser$$parseMethod(SwaggerJsonSchemaProvider.scala:98)\n    at com.wordnik.swagger.jsonschema.ApiModelParser$$anonfun$parseRecursive$1.apply(SwaggerJsonSchemaProvider.scala:81)\n    at com.wordnik.swagger.jsonschema.ApiModelParser$$anonfun$parseRecursive$1.apply(SwaggerJsonSchemaProvider.scala:79)\nclass def\npublic class DateTimeParam extends AbstractParam {\nAnd \n2)\n2013-03-18 13:55:41,500 ERROR com.wordnik.swagger.jaxrs.HelpApi : Unable to load model documentation for no.tine.api.jersey.RegistrationParam\njava.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.TypeVariableImpl cannot be cast to java.lang.Class\n    at com.wordnik.swagger.core.ApiPropertiesReader$.getDataType(SpecReader.scala:84)\n    at com.wordnik.swagger.core.ApiPropertiesReader$.getDataType(SpecReader.scala:70)\n    at com.wordnik.swagger.jsonschema.ApiModelParser.parsePropertyAnnotations(SwaggerJsonSchemaProvider.scala:154)\n    at com.wordnik.swagger.jsonschema.ApiModelParser.com$wordnik$swagger$jsonschema$ApiModelParser$$parseMethod(SwaggerJsonSchemaProvider.scala:98)\n    at com.wordnik.swagger.jsonschema.ApiModelParser$$anonfun$parseRecursive$1.apply(SwaggerJsonSchemaProvider.scala:81)\n    at com.wordnik.swagger.jsonschema.ApiModelParser$$anonfun$parseRecursive$1.apply(SwaggerJsonSchemaProvider.scala:79)\n```\n. I'm unable to reproduce this with 1.2.2-SNAPSHOT, if someone can help with a test case we can figure it out.\n. If you can move to 1.2.3-SNAPSHOT the issues should be resolved.  Can you please try?\n. OK rats.  Can you share what your model looks like?\n. Thanks.  Are you using Play or JAX-RS?  And is this model a parameter in a POST method?  Or the return value of a GET?\n. I didn't write the Spring MVC integration but happy to help with it.  If you can boil this down into a small sample project, I'll help sort it out.\n. got it!  Thanks for the sample.  I've updated your pom to force swagger-core_2.9.1-1.2.3-SNAPSHOT.jar, added tomcat6 plugin (remove as you see fit) and access sonatype snapshots.  I DID find an issue in ApiPropertiesReader as you mentioned, and added a simple fix.  It's uploading to sonatype right now.\nThe pom is below, but there is one other issue you're going to hit.  As is, the model schema for /api/v1/persons/ looks like this:\njson\n{\n  \"total\": \"long\",\n  \"content\": [\n    \"T\"\n  ]\n}\nWhich I'm certain you don't really want content to be type T.  This current has to be done by manually mapping the class to a concrete representation in your application bootstrap, if you want to have a proper concrete class.  To do this, please take a look at this test class:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/test/scala/com/wordnik/test/swagger/core/SpecReaderTest.scala#L68\nI'd update your sample but I'm out of time right now.  Give it a whirl and post back.  You're almost there!\nTony\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n4.0.0\ncom.knappsack\nswagger4springweb-example\nswagger4spring-web-example\nwar\n1.0.0-BUILD-SNAPSHOT\n\n1.6\n3.1.4.RELEASE\n1.6.10\n1.6.6\n1.2.3-SNAPSHOT\n\n\n\nsonatype snapshots\nsonatype snapshots\ndefault\nhttps://oss.sonatype.org/content/repositories/snapshots\n\ntrue\n\n\n\n\n\ncom.knappsack\nswagger4spring-web\n0.1.6\n\n\nslf4j-log4j12\norg.slf4j\n\n\njunit\njunit\n\n\nslf4j-api\norg.slf4j\n\n\n\n<!-- swagger -->\n<dependency>\n  <groupId>com.wordnik</groupId>\n  <artifactId>swagger-core_2.9.1</artifactId>\n  <version>${swagger-version}</version>\n  <scope>compile</scope>\n</dependency>\n\n<!-- Spring -->\n<dependency>\n  <groupId>org.springframework</groupId>\n  <artifactId>spring-context</artifactId>\n  <version>${org.springframework-version}</version>\n  <exclusions>\n    <!-- Exclude Commons Logging in favor of SLF4j -->\n    <exclusion>\n      <groupId>commons-logging</groupId>\n      <artifactId>commons-logging</artifactId>\n     </exclusion>\n  </exclusions>\n</dependency>\n<dependency>\n  <groupId>org.springframework</groupId>\n  <artifactId>spring-webmvc</artifactId>\n  <version>${org.springframework-version}</version>\n</dependency>\n\n<!-- AspectJ -->\n<dependency>\n  <groupId>org.aspectj</groupId>\n  <artifactId>aspectjrt</artifactId>\n  <version>${org.aspectj-version}</version>\n</dependency>\n\n<!-- Logging -->\n<dependency>\n  <groupId>org.slf4j</groupId>\n  <artifactId>slf4j-api</artifactId>\n  <version>${org.slf4j-version}</version>\n</dependency>\n<dependency>\n  <groupId>org.slf4j</groupId>\n  <artifactId>jcl-over-slf4j</artifactId>\n  <version>${org.slf4j-version}</version>\n  <scope>runtime</scope>\n</dependency>\n<dependency>\n  <groupId>org.slf4j</groupId>\n  <artifactId>slf4j-log4j12</artifactId>\n  <version>${org.slf4j-version}</version>\n  <scope>runtime</scope>\n    <exclusions>\n      <exclusion>\n        <artifactId>log4j</artifactId>\n        <groupId>log4j</groupId>\n      </exclusion>\n    </exclusions>\n  </dependency>\n<dependency>\n  <groupId>log4j</groupId>\n  <artifactId>log4j</artifactId>\n  <version>1.2.15</version>\n  <exclusions>\n    <exclusion>\n      <groupId>javax.mail</groupId>\n      <artifactId>mail</artifactId>\n    </exclusion>\n    <exclusion>\n      <groupId>javax.jms</groupId>\n      <artifactId>jms</artifactId>\n    </exclusion>\n    <exclusion>\n      <groupId>com.sun.jdmk</groupId>\n      <artifactId>jmxtools</artifactId>\n    </exclusion>\n    <exclusion>\n      <groupId>com.sun.jmx</groupId>\n      <artifactId>jmxri</artifactId>\n    </exclusion>\n  </exclusions>\n  <scope>runtime</scope>\n</dependency>\n\n<!-- @Inject -->\n<dependency>\n  <groupId>javax.inject</groupId>\n  <artifactId>javax.inject</artifactId>\n  <version>1</version>\n</dependency>\n\n<!-- Servlet -->\n<dependency>\n  <groupId>javax.servlet</groupId>\n  <artifactId>servlet-api</artifactId>\n  <version>2.5</version>\n  <scope>provided</scope>\n</dependency>\n<dependency>\n  <groupId>javax.servlet.jsp</groupId>\n  <artifactId>jsp-api</artifactId>\n  <version>2.1</version>\n  <scope>provided</scope>\n</dependency>\n<dependency>\n  <groupId>javax.servlet</groupId>\n  <artifactId>jstl</artifactId>\n  <version>1.2</version>\n</dependency>\n\n<!-- Test -->\n<dependency>\n  <groupId>junit</groupId>\n  <artifactId>junit</artifactId>\n  <version>4.7</version>\n  <scope>test</scope>\n</dependency>\n\n\n\n\n\norg.apache.maven.plugins\nmaven-compiler-plugin\n2.5.1\n\n1.6\n          1.6\n-Xlint:all\ntrue\ntrue\n\n\n\norg.apache.tomcat.maven\ntomcat6-maven-plugin\n2.1\n\n8002\n/\n\n\n\nrun-tomcat\npre-integration-test\n\ntrue\n\n\nrun\n\n\n\n\n\n\n\n```\n. released 1.2.3\n. Hi, we're looking at how to best incorporate Restlet and CXF into the server support.  So if you can hold on the pull request as we research this, that'd be best.  Really appreciate the contribution!  Stay tuned and I'll post back here.\n. Hi @johannbarbie the other approaches that have been tossed around seem more invasive than this. Do you want to send a PR and I can test it out?  Thanks for your patience!\n. this will be part of a major refactor of the configuration system, but to avoid breaking deployments, something along these lines will be in the next major release\n. now configs are pluggable, and don't depend on jersey injections\n. i have no idea how this was removed.  Thanks for catching it.\n. thanks, this is fixed and a new snapshot will be uploaded shortly.\n. Thanks, also added updated tests, jaxb support.\n. Can you post your api json?  If it produces the right json, it doesn't matter if you use generics, etc.  My guess is there's a circular reference in the models, and swagger-ui is getting stuck in a loop.\n. OK it looks like the reason the swagger-ui is getting hung is there's a circular reference.  My guess is it's in your web.xml.  Could you post the relevant portions?  Should look something like this:\nhttps://github.com/wordnik/swagger-core/blob/master/samples/java-jaxrs/conf/web/web.xml#L6\nNote this section:\nxml\n    <init-param>\n      <param-name>com.sun.jersey.config.property.packages</param-name>\n      <param-value>com.wordnik.swagger.jaxrs.listing;com.wordnik.swagger.sample.resource;com.wordnik.swagger.sample.util</param-value>\n    </init-param>\nMy guess is that section isn't pointing to the com.wordnik.swagger.jaxrs.listing package.\n. If you can jump into irc.freenode.net #swagger then we can sort this out more quickly.  I'd be happy to help sort this out.\n. Hi @ericchile the generic params should be resolved in 1.2.2-SNAPSHOT, which is available on sonatype snapshots repo.\n. Hi, we chatted over IRC and I believe this was solved.  Please reopen if not\n. hi @shawnlauzon need to keep the jersey-specific imports in this module: \nhttps://github.com/wordnik/swagger-core/tree/master/modules/swagger-jersey-jaxrs\n. will merge this after some more test cases can get in.  I don't want to cause a regression with the other frameworks!\n. Hey @shawnlauzon is there a reason you need the com/wordnik/swagger/jersey/Help.scala class?  The logic should now be contained in these classes:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-jersey-jaxrs/src/main/scala/com/wordnik/swagger/jersey/listing/ApiListing.scala\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-jersey-jaxrs/src/main/scala/com/wordnik/swagger/jersey/listing/ApiListingResource.scala\n. Got it--I have an approach that will make this more modular.  Give me a few and I'll post it.\n. Adding support for @JsonProperty now, should be in a patch version.  Also adding support for @JsonIgnore\n. hopefully a snapshot today\n. OK that was easy, note there are tests for this:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/test/scala/com/wordnik/test/swagger/core/SpecReaderTest.scala#L207\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/test/scala/com/wordnik/test/swagger/core/SpecReaderTest.scala#L212\nbut I have not tried it in a service.  Let me know how it goes, and close this if you're happy with it.\n. Does this solve your concern?\nhttps://github.com/wordnik/swagger-core/wiki/Overriding-Models\n. This is now fully handled via jackson in 1.5.x\n. Is this a class being returned from the API, or a property inside another class?  If a property, you can annotate it with @JsonIgnore\n. Got it.  My proposal to resolve this is as follows:\n- support an extendable model serializer, which allows you to either write your own generic serializer or implement your own for a specific class\n- add some examples of ignoring fields based on name, type with our serializer\n- revisit jackson's json-schema parser, previously it was not ready to do this.\nSound like the first & second points would do it for you?\n. You can now manually provide schemas for certain classes:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/test/scala/com/wordnik/test/swagger/core/SpecReaderTest.scala#L48\nAnd also, you can prevent including attributes for certain data types.\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/test/scala/com/wordnik/test/swagger/core/SpecReaderTest.scala#L67\nThis is uploaded to sonatype, please post back if that does the trick for you.\n. released 1.2.3\n. this is great, I'm looking to see how it can be merged and supported across the frameworks.\n. added pluggable readers in 1.3.0-SNAPSHOT.  See here for an example:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/config/DefaultJaxrsConfig.scala\nYou can now create your own scanners (this one shows a web.xml scanner) and load configs however you like.  Another sample is here:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/samples/java-jaxrs-cxf/src/main/resources/applicationContext.xml#L41\nxml\n  <!-- this scans the classes for resources -->\n  <bean id=\"swaggerConfig\" class=\"com.wordnik.swagger.jaxrs.config.BeanConfig\">\n    <property name=\"resourcePackage\" value=\"com.wordnik.swagger.sample.resource\"/>\n    <property name=\"version\" value=\"1.0.0\"/>\n    <property name=\"basePath\" value=\"http://localhost:8002/api\"/>\n  </bean>\nwhich feeds this configurator:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/config/BeanConfig.scala\n. I think this is an eclipse + scala issue.  What version of the scala plug in for eclipse are you on?\n. Shoot, sounds like an eclipse issue.  But to be sure, it builds locally for you, right?\n. I'm closing this as an eclipse plug-in issue\n. Can you try 1.2.2 snapshot?  It should work\n. Just enable delete in the UI console in the supportedSubmitMethods:\nhttps://github.com/wordnik/swagger-ui#swaggerui\nsupportedSubmitMethods: ['get', 'post', 'put', 'delete']\n. Hi @ericchile can you please make sure your UI is configured for delete?\nhttps://github.com/wordnik/swagger-ui#http-methods-and-api-invocation\nYou probably need to add delete \n. Yes, scala 2.9.x and 2.10.x are binary incompatible.  We'll have to cross-build for 2.10 (which we'll do shortly)\nBut I think 2.9.x is a compile dependency so, you must be manually overriding that to 2.10 in your project?\n. Hi @eyala, this has been done, you can find it in sonatype releases and soon maven central after it syncs.\n. this will be in the @produces support coming in the 1.2 spec.\n. you can now specify the the Accept type via @Produces annotation, or in the @ApiOperation(..., produces=\"application/octet-stream\" to tell the client to get a file download.\n. @tartakynov this applies to the response so it shouldn't matter if it's GET or POST.  But if you're talking about POST'ing files, that is different.\n. Apologies.  this sample is out of date--I will make sure it gets fixed.\n. Super easy.  See here:\nhttps://github.com/wordnik/swagger-codegen/tree/master/samples/server-generator/scalatra\nlook in the \"output\" folder, that's essentially the up-to-date server code, without the fake data that lives in the petstore demo.\n. Hi @caoilte yes, I think this should be raised on scalatra.  Sorry for the delay\n. great--there is a swagger google group here:\nhttp://groups.google.com/forum/#!forum/swagger-swaggersocket\n. support is in play 2.3 now\n. order depends on the server integration, see #115 \n. if you're behind apache or something, you can add CORS header responses that way.  Or you host the UI on the same domain as the API, then you don't need any of the CORS header junk.\n. Yes, getting there, and making sure it works across the models, etc.\n. there will be a snapshot this week\n. added support in 1.3.0-SNAPSHOT.  You create a filter and ignore whatever you like from params:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-core/src/test/scala/filter/SpecFilterTest.scala#L44\nscala\nclass SecretParamFilter extends SwaggerSpecFilter {\n  override def isOperationAllowed(operation: Operation, api: ApiDescription, params: java.util.Map[String, java.util.List[String]], cookies: java.util.Map[String, String], headers: java.util.Map[String, java.util.List[String]]): Boolean = true\n  override def isParamAllowed(parameter: Parameter, operation: Operation, api: ApiDescription, params: java.util.Map[String, java.util.List[String]], cookies: java.util.Map[String, String], headers: java.util.Map[String, java.util.List[String]]): Boolean = {\n    if(parameter.paramAccess == Some(\"secret\")) false\n    else true\n  }\n}\n. it's a snapshot, so you can find it in sonatype snapshots:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-core_2.9.1/1.3.0-SNAPSHOT/\n. see here:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-jaxrs_2.9.1/1.3.0-SNAPSHOT/\nand for jersey-specific:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-jersey-jaxrs_2.9.1/1.3.0-SNAPSHOT/\n. Hey sorry for not replying.  It was removed because of https://github.com/wordnik/swagger-core/issues/123 which is something that everyone in the known universe has asked us.  So there's no need to set the format string, because it is no longer there in 1.3.0-SNAPSHOT (and beyond)\n. Guide isn't done yet but I can tell you that issue is because you don't have the swagger JSON providers in your scope.  You can add those with the web.xml by scanning the com.wordnik.swagger.jaxrs.listing package:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/samples/java-jaxrs/src/main/webapp/WEB-INF/web.xml#L7\nxml\n    <init-param>\n      <param-name>com.sun.jersey.config.property.packages</param-name>\n      <param-value>com.wordnik.swagger.jaxrs.listing</param-value>\n    </init-param>\nBy programmatically adding them, as in the case of Dropwizard:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/samples/java-dropwizard/src/main/java/com/wordnik/swagger/sample/SwaggerSampleService.java#L28\n``` java\n  @Override\n  public void run(SwaggerSampleConfiguration configuration, Environment environment) {\n    environment.addResource(new ApiListingResourceJSON());\n    environment.addResource(new PetResource());\nenvironment.addProvider(new ApiDeclarationProvider());\nenvironment.addProvider(new ResourceListingProvider());\nScannerFactory.setScanner(new DefaultJaxrsScanner());\nClassReaders.setReader(new DefaultJaxrsApiReader());\n\n}\n```\nOr through configuration, as with Apache-CXF:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/samples/java-jaxrs-cxf/src/main/resources/applicationContext.xml#L16\n``` xml\n  \n\n\n\n\n\n the listing resource \n\n\n\n\n\n required for writing swagger classes \n\n\n\n\n\n```\n. This is pushed in 1.3.3-SNAPSHOT for both @ApiOperation and @ApiModelProperty.  There is now a hidden property on both annotations that allow you to filter away fields and methods.\n. Hi, I believe you can now use hidden=true instead of the custom filter.  Both should work\n. it looks like there isn't a hidden field in a parameter, only in ApiOperation and ApiModelProperties.\nIf you want to remove a parameter, you can simply create a filter like such:\nhttps://github.com/wordnik/swagger-core/blob/master/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/util/ApiAuthorizationFilterImpl.java#L60\nNote implementing your own logic for the isParamAllowed will make the field visible or not.\n. You shouldn't need to handle it on your own--the swagger framework will apply the filter on it's own.  See here how it's configured:\nhttps://github.com/wordnik/swagger-core/blob/master/samples/java-jaxrs/src/main/webapp/WEB-INF/web.xml#L44-L47\nxml\n    <init-param>\n      <param-name>swagger.filter</param-name>\n      <param-value>com.wordnik.swagger.sample.util.ApiAuthorizationFilterImpl</param-value>\n    </init-param>\n. Thanks--this is a general CXF configuration, not necessarily swagger.  The docs are present at http://localhost:8002/api/api-docs.json\nThe error message was coming from SampleExceptionMapper.java, which was not setting the content type correctly.  This has been fixed in the sample for json response types.\n. The model inspection will look at every property and method--if you look at the test case I added, you'll see that the @BeanProperty isn't needed for property discovery:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/test/scala/com/wordnik/test/swagger/core/TypeUtilTest.scala#L28\nGranted you shouldn't get a class cast exception, which I need to look into.  But in the mean time can you add the package org.json4s to the exclusion list for processing?  You can do so like this:\nscala\nApiPropertiesReader.excludedFieldTypes += \"Formats\"\n. You need to set that value immediately on server startup:\n``` java\nimport play.*;\npublic class Global extends GlobalSettings {\n@Override\n  public void onStart(Application app) {\n    Logger.info(\"Application has started\");\n  }  \n@Override\n  public void onStop(Application app) {\n    Logger.info(\"Application shutdown...\");\n  } \n}\n```\n. OK if you can post how you're including the org.json4s.Formats in your model, I'll troubleshoot it here.\n. OK added a test case and fixed the class cast exception.  Can you give it a whirl?  Example to exclude those objects is in the test case:\n``` scala\nclass TypeUtilTest extends FlatSpec with ShouldMatchers {\n  it should \"extract required classes\" in {\n    val refs = TypeUtil.getReferencedClasses(\"com.wordnik.test.swagger.core.House\").asScala.toSet\nApiPropertiesReader.excludedFieldTypes ++= Seq(\"Formats\", \"JsonLike\", \"Json4S\")\n\nval docObj = ApiPropertiesReader.read(\"com.wordnik.test.swagger.core.House\")\n(Set(\n  \"com.wordnik.test.swagger.core.House\", \n  \"com.wordnik.test.swagger.core.Furniture\", \n  \"com.wordnik.test.swagger.core.Window\") & refs\n).size should be (3)\n\n}\n}\n```\n. Can you clear your play repository cache?\n. OK, I just redeployed the swagger-play2_2.10-1.2.4-SNAPSHOT.  Could you please try clearing your cache and building again?\n. Great news!  And thanks for the patience with this.  Some thoughts:\n1) limit: Option[Int] should work.  Will look into that.\n2) Info messages should be turned to debug.  Will do that as well.\n3) the ERROR messages from HelpApi should be WARN.\n4) another annoying message but harmless.  Will fix.\n. The Option[Int] is a tough one to detect because it's an AnyVal.  Looking into options, but \"java.lang.Integer\" works fine :)  Will update here soon.\n. OK here's the summary.\nOption[AnyVal] is not practical to automatically inspect.  If we wanted to do so, I believe we'd have to use some fancy techniques which, with 2.9.x, would require including the scala compiler in the dependencies.  That's not much of an issue for scala apps, but for the java ones using swagger, it would be a big burden.\nThat said, there is a work-around to avoid Option[Int] from becoming an \"Object\" when building the model schema.  You can annotate any field with @ApiProperty and it the swagger reader will override the datatype.  For example:\n``` scala\nimport scala.annotation.target.field\ncase class House(\n  address: Address,\n  @(ApiProperty @field)(notes=\"Optional house size\", dataType=\"int\", required=false) squareFootage: Option[Int]\n)\n```\nwill override the actual datatype of Option[Int] with int.\nIt's not my favorite solution (decorating the models, that is) but it works, and it gives you the opportunity to document the property, which everyone loves.\nThat work for you?\n. OK I've changed the logger scope to \"swagger\".  So you can configure it in your application.conf:\nlogger.swagger=ERROR\nAs for this message:\nERROR c.w.s.p.HelpApi - Unable to resolve class float\nThis is coming from the swagger-core project, which doesn't use the play logging facility.  Those will get fixed in the next swagger-core version (float, double should be ignored).\n. OK I've changed the logger scope to \"swagger\".  So you can configure it in your application.conf:\nlogger.swagger=ERROR\nAs for this message:\nERROR c.w.s.p.HelpApi - Unable to resolve class float\nThis is coming from the swagger-core project, which doesn't use the play logging facility.  Those will get fixed in the next swagger-core version (float, double should be ignored).\n. released 1.2.3\n. released 1.2.3\n. Hi, please see here:\nhttps://github.com/wordnik/swagger-core/commit/2b163b5a57f2069fa8d61594e237dfea366146f9#modules/swagger-play2\nYou should refer to version 1.2.4 of the play2 module\n. can you please try editing your application.conf as follows:\nlogger.swagger=ERROR\nhttps://github.com/wordnik/swagger-core/blob/scala_2.10.0/samples/scala-play2/conf/application.conf#L32\n. can you please try editing your application.conf as follows:\nlogger.swagger=ERROR\nhttps://github.com/wordnik/swagger-core/blob/scala_2.10.0/samples/scala-play2/conf/application.conf#L32\n. Hi, take a look at this contribution from the folks @ Yammer:\nhttps://github.com/ryankennedy/swagger-jaxrs-doclet\n. Hi, take a look at this contribution from the folks @ Yammer:\nhttps://github.com/ryankennedy/swagger-jaxrs-doclet\n. closing as not supported\n. closing as not supported\n. this is part of a larger refactor coming in next major release\n. this is part of a larger refactor coming in next major release\n. In 1.3.0-SNAPSHOT you can initialize swagger with pluggable config readers:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/config/DefaultJaxrsConfig.scala\nUses web.xml (and is default)\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/config/BeanConfig.scala\nIs a BeanConfig approach which should be loaded before swagger is.\n. In 1.3.0-SNAPSHOT you can initialize swagger with pluggable config readers:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/config/DefaultJaxrsConfig.scala\nUses web.xml (and is default)\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/config/BeanConfig.scala\nIs a BeanConfig approach which should be loaded before swagger is.\n. this is part of a larger refactor coming in next major release\n. this is part of a larger refactor coming in next major release\n. You can now configure your own scanner, or use a org.reflections approach here:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/config/BeanConfig.scala#L20\nWhich scans a package for all classes with the appropriate annotations.\nNote that just having @Path will not trigger introspection by swagger, it needs to be contained in a class with @Api annotations.\n. You can now configure your own scanner, or use a org.reflections approach here:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/config/BeanConfig.scala#L20\nWhich scans a package for all classes with the appropriate annotations.\nNote that just having @Path will not trigger introspection by swagger, it needs to be contained in a class with @Api annotations.\n. something similar will be in the next major release.\n. something similar will be in the next major release.\n. the scanners are now pluggable, and an Application scanner can be written now.\n. the scanners are now pluggable, and an Application scanner can be written now.\n. released 1.2.3\n. released 1.2.3\n. Hi, what version of swagger are you using?  And are you using Jersey + JAX-RS?\n. Hi, what version of swagger are you using?  And are you using Jersey + JAX-RS?\n. Can you please try with either 1.2.2 or 1.2.3-SNAPSHOT?  I've tested this, and this class:\n``` java\npackage com.wordnik.test.swagger.core;\nimport javax.xml.bind.annotation.*;\n@XmlRootElement(name=\"TestXMLElement\")\npublic class TestXMLElement {\n    private String ssid = null;\n@XmlElement(name = \"SSId\", required = true)\npublic String getSSid() {\n    return ssid;\n}\n\npublic void setSSid(String ssid) {\n    this.ssid = ssid;\n}\n\n}\n```\nIs correctly identified as this json:\njson\n{\n  \"name\": \"TestXMLElement\",\n  \"fields\": [\n    {\n      \"name\": \"SSId\",\n      \"paramType\": \"string\",\n      \"required\": true,\n      \"allowMultiple\": false\n    }\n  ]\n}\nFrom a simple test.\n. Can you please try with either 1.2.2 or 1.2.3-SNAPSHOT?  I've tested this, and this class:\n``` java\npackage com.wordnik.test.swagger.core;\nimport javax.xml.bind.annotation.*;\n@XmlRootElement(name=\"TestXMLElement\")\npublic class TestXMLElement {\n    private String ssid = null;\n@XmlElement(name = \"SSId\", required = true)\npublic String getSSid() {\n    return ssid;\n}\n\npublic void setSSid(String ssid) {\n    this.ssid = ssid;\n}\n\n}\n```\nIs correctly identified as this json:\njson\n{\n  \"name\": \"TestXMLElement\",\n  \"fields\": [\n    {\n      \"name\": \"SSId\",\n      \"paramType\": \"string\",\n      \"required\": true,\n      \"allowMultiple\": false\n    }\n  ]\n}\nFrom a simple test.\n. can't reproduce, and confirmed via unit tests.\n. can't reproduce, and confirmed via unit tests.\n. Hi, right now swagger doesn't support splitting a single @Api across multiple files.  In scala, you can create each file as a trait and compose them into a single class, but I'm sure that's not an option for you.\n. Hi, right now swagger doesn't support splitting a single @Api across multiple files.  In scala, you can create each file as a trait and compose them into a single class, but I'm sure that's not an option for you.\n. soap!???\nOK on the bright side, I have verified that you can do what you're after, if you don't mind having multiple apis in your swagger-ui.  I've just verified that you can create the following (make sure you're on 1.2.3-SNAPSHOT):\n1) a listing for /pet\n2) a listing for /pet/tags\n3) a listing for /pet/foo\nI do know that an issue was resolved in 1.2.2 that allowed path params to be in the api listing.\nWhat is the issue you saw with illegal characters?\n. soap!???\nOK on the bright side, I have verified that you can do what you're after, if you don't mind having multiple apis in your swagger-ui.  I've just verified that you can create the following (make sure you're on 1.2.3-SNAPSHOT):\n1) a listing for /pet\n2) a listing for /pet/tags\n3) a listing for /pet/foo\nI do know that an issue was resolved in 1.2.2 that allowed path params to be in the api listing.\nWhat is the issue you saw with illegal characters?\n. soap!???\nOK on the bright side, I have verified that you can do what you're after, if you don't mind having multiple apis in your swagger-ui.  I've just verified that you can create the following (make sure you're on 1.2.3-SNAPSHOT):\n1) a listing for /pet\n2) a listing for /pet/tags\n3) a listing for /pet/foo\nI do know that an issue was resolved in 1.2.2 that allowed path params to be in the api listing.\nWhat is the issue you saw with illegal characters?\n. multiple files are supported as of 1.3.7\n. multiple files are supported as of 1.3.7\n. deployed to sonatype oss with version 1.2.3-SNAPSHOT\n. deployed to sonatype oss with version 1.2.3-SNAPSHOT\n. released 1.2.3\n. released 1.2.3\n. per #102 this should be supported in a very clean fashion.  Can you give the sample a shot here:\nhttps://github.com/mdekmetzian/subresource_example\nTo see if that solves your use case?\n. per #102 this should be supported in a very clean fashion.  Can you give the sample a shot here:\nhttps://github.com/mdekmetzian/subresource_example\nTo see if that solves your use case?\n. added support in 1.3.0-SNAPSHOT, see this sample:\nhttps://github.com/wordnik/swagger-core/tree/develop-1.3/samples/java-jaxrs-subresource\n. added support in 1.3.0-SNAPSHOT, see this sample:\nhttps://github.com/wordnik/swagger-core/tree/develop-1.3/samples/java-jaxrs-subresource\n. what server integration are you using?  boolean default values should be supported on all wordnik-supported integrations\n. what server integration are you using?  boolean default values should be supported on all wordnik-supported integrations\n. Got it, that sounds like a bug.\n. Got it, that sounds like a bug.\n. this is a swagger-ui bug\nhttps://github.com/wordnik/swagger-ui/issues/248\n. this is a swagger-ui bug\nhttps://github.com/wordnik/swagger-ui/issues/248\n. But @childnode are you talking about how it appears in swagger-ui?  If so, could you please open an issue there?\n. But @childnode are you talking about how it appears in swagger-ui?  If so, could you please open an issue there?\n. to be honest, this isn't a swagger-core issue, it's just how you parse the query param.  Can you share more info on your use case if that doesn't make sense?\n. This is great, but breaks compatibility with scala versions < 2.10, see here:\nhttps://issues.scala-lang.org/browse/SI-2453\nNot that becomes a showstopper, but a potential solution might be this:\n@ApiResponse(\n    responseClass = Word.class,\n    responseContainer = \"List\"\n)\nThe inner response type is now typesafe, and safe for refactoring.  The container (List, Array, Set) are string values, which is not my favorite thing to do but I believe it'd solve most of the issues from the whole response class being a string.\nFinally, Map is of course an issue since there are potentially two classes required (swagger tools don't support map for this very reason).  For Map, I'd consider supporting keys of type String only, and setting the value in the responseClass.\nWould that work well?  I'm trying to push a 1.3 development version this week, and this is an important fix.\n. Actually, this pattern may be fine, and using the List container annotation could be a fallback for prehistoric versions of scala.  Will test tonight with Type Token support in java\n. supported in 1.3.0-SNAPSHOT\n. Hi, are you using jax-rs or play2?\n. Hi, just got this, looking\n. Hi, three things to do (all easy).\n1) Your web.xml is not referring to the jersey version of swagger.  Change the scanning package to this:\nxml\n        <init-param>\n            <param-name>com.sun.jersey.config.property.packages</param-name>\n            <param-value>foo; com.wordnik.swagger.jersey.listing</param-value>\n        </init-param>\nnote jersey instead of jaxrs.  That was the biggest issue.\n2) Your additionalContent should not be of type InputStream, it should be FormDataContentDisposition:\njava\n@ApiParam @FormDataParam(\"additionalContent\") FormDataContentDisposition additionalContent)\n3) You should configure the json mapper to not write nulls (this would bite you later).  Create a mapper like this:\n``` java\npackage foo;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.MediaType;\nimport javax.ws.rs.ext.Provider;\nimport com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider;\nimport com.fasterxml.jackson.core.JsonGenerator.Feature;\nimport com.fasterxml.jackson.databind.;\nimport com.fasterxml.jackson.annotation.;\nimport com.fasterxml.jackson.databind.annotation.JsonSerialize;\n@Provider\n@Produces(MediaType.APPLICATION_JSON)\npublic class Mapper extends JacksonJaxbJsonProvider {\n    private static ObjectMapper commonMapper = null;\npublic Mapper() {\n    if(commonMapper == null){\n        ObjectMapper mapper = new ObjectMapper();\n\n        mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);\n        mapper.setSerializationInclusion(JsonInclude.Include.NON_DEFAULT);\n        mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\n        mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n\n        commonMapper = mapper;\n    }\n    super.setMapper(commonMapper);\n}\n\n}\n```\ngive that a whirl and post back!\n. The problem is, to upload a file, you have to send content as MULTIPART_FORM_DATA, but you are telling swagger to send an object of type Translation.  If you look at the payload being sent to the server, it looks like this:\n------WebKitFormBoundaryxLYuuFjSgd2j2a2O\nContent-Disposition: form-data; name=\"translation\"\n{\"customerName\":\"tony\",\"sourceLanguage\":\"foo\"}\n------WebKitFormBoundaryxLYuuFjSgd2j2a2O\nContent-Disposition: form-data; name=\"sourceDocument\"\nundefined\n------WebKitFormBoundaryxLYuuFjSgd2j2a2O--\nJersey is then trying to turn this String into a Translation object, expecting the content type to be MULTIPART_FORM_DATA, which it's not (it's json).  So it fails.\nYou should receive the Translation data as a string if you need to pass in JSON and unmarshall it there, or use FORM params, which are key/value and assemble your object manually\n. Take a look at the samples in swagger core for how it's supported for jersey.  What are you expecting?\n. fixed in 1.3.0\n. now supported in 1.3.0\n. If you could please try with 1.3.0-SNAPSHOT, that'd be great.\n. sure, an example could help a lot\n. please reopen if you can send an example of this.\n. supported & tested in 1.2.4 and 1.3.0-SNAPSHOT\n. great news.  Will try to push 1.2.4 release shortly\n. I think the appropriate thing to do would be to rename it from @ApiErrors to @ApiResponses or something, since the code + message don't necessarily need to be just errors.\n. I believe that @Deprecated annotations are detected and returned in the response.\n. Looks like this is in the api reader:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/JaxrsApiReader.scala#L106\nscala\nval isDeprecated = Option(method.getAnnotation(classOf[Deprecated])).map(m => \"true\").getOrElse(null)\nSo the Api Declaration should return deprecated=true if the method is annotated with it.\n. @arminbhy fyi i plan on making this change this week, it will break the spec + annotations interface, though :(\n. this is in the latest 1.3.0-snapshot\n. what version?  What server integration?  It should be working, and is tested:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/test/scala/com/wordnik/test/swagger/core/SpecReaderTest.scala#L277\n. closing this, if you still have an issue, please reopen.\n. Hi, the model should be describes as the body param.  the consumes should be used to specify the content format, not the content itself.\n. In the interest of avoiding a religious war about REST, I'll address the first paragraph...\nThe swagger-ui is not correctly supporting both produces and consumes.  It is only letting you tell the sever what content format you want back in the response.  It's behind the spec right now, but will be updated shortly to pass whatever headers you supply in the consumes section for the operation.\n. https://github.com/wordnik/swagger-ui/issues/219\n. yes, we will ensure the ui passes the content-type headers as provided in the spec.  it really shouldn't care what is being sent to/from the server (the server might, though)\n. Hi @manicmonkey, if you take a look here:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/config/BeanConfig.scala\nYou'll see that the next version will allow configurable scanners/readers for picking up the classes via annotations.  Would that do the trick for you?\n. You mean in the payload?  Headers?  Or in the UI?\n. Hi, yes, this is a long-standing request (but not that often asked for).  Will see that it can get in 1.3.0 before release.  I'm going to close this ticket, you can track the original issue:\nhttps://github.com/wordnik/swagger-core/issues/52#issuecomment-17937134\n. Hi, I'm getting to this now.  I'm looking to see if we can accomplish the same thing without changing the ClassReader trait--will report back shortly.\n. I made an adjustment to keep the ClassReaders trait the same, and the recursive subresource reading jax-rs specific.  Thanks!\n. merged, thank you\n. Hi @kongchen 1.2.5 was just released\n. I don't think this makes sense anymore.  As operations can return models specific to the subresource, it is overly aggressive to assume they map from parent to subresource automatically.  While it may make sense for errors, it is not possible to not map them to subresources if you don't want them to without more annotations, which we just don't need.\n. yes, but you will need to use 1.3.0-SNAPSHOT to do this.  There is now an annotation to set the produces content-type, which tells swagger-ui to render in xml.\n. see here for an example, there will be a drop-down which renders xml if selected.\nhttps://github.com/wordnik/swagger-core/tree/develop-1.3/samples/scala-jaxrs\n. Hi I suggest you ask this on the swagger google-group as this isn't really a bug.\nhttps://groups.google.com/forum/#!forum/swagger-swaggersocket\n. Hi @lisbakke, it looks like @ApiClass and @ApiModel are serving the same purpose.  Please use @ApiClass for now, I'll work on simplifying, merging & documenting up the annotation classes, as well as provide a transition guide from 1.2.x to 1.3.x\n. Yes, and as fair warning, I'm going to rename some of the annotation classes to make them consistent.\n. OK support for @ApiClass is now pushed, and all annotations are documented.  The final annotation rename should come tonight or this weekend.\n. ok also done renaming annotations in 1.3.0-SNAPSHOT\n. yes, it's not needed anymore.  To describe this:\nList[User]\nyou use this:\nresponse = User.class,\nresponseContainer = \"List\"\n. No jersey required--you can follow this example:\nhttps://github.com/wordnik/swagger-core/tree/develop-1.3/samples/scala-servlet\nWhich shows how you can annotate your servlets (or any class, for that matter) to generate swagger json.  Note!  The servlet-scanner is not 100% complete, but quite close.  I'm waiting for some feedback on it, maybe you can be the first :)\n. yes you can do this, please either read the wiki:\nhttps://github.com/wordnik/swagger-core/wiki\nor follow this sample\nhttps://github.com/wordnik/swagger-core/tree/master/samples/no-server\n. We are 2 days away from this, from the server + spec point of view.  You can track the progress in this sample:\nhttps://github.com/wordnik/swagger-core/tree/develop-1.3/samples/scala-jaxrs\nThe key points being:\n1) The authorization info is configured as a \"configuration\", not an annotation (see https://github.com/wordnik/swagger-core/blob/develop-1.3/samples/scala-jaxrs/src/main/scala/com/wordnik/swagger/sample/Bootstrap.scala as an example)\nFurthermore the description of the oauth endpoints appears in the resource listing like such (subject to change!):\njson\n{\n  \"apiVersion\": \"1.0.0\",\n  \"swaggerVersion\": \"1.2\",\n  \"basePath\": \"http://localhost:8002/api\",\n  \"apis\": [\n    {\n      \"path\": \"/api-docs/user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"path\": \"/api-docs/pet\",\n      \"description\": \"Operations about pets\"\n    }\n  ],\n  \"authorizations\": {\n    \"oauth2\": {\n      \"type\": \"oauth2\",\n      \"scopes\": [\n        \"PUBLIC\"\n      ],\n      \"grantTypes\": {\n        \"implicit\": {\n          \"loginEndpoint\": {\n            \"url\": \"http://localhost:8002/oauth/dialog\"\n          },\n          \"tokenName\": \"access_code\"\n        },\n        \"authorization_code\": {\n          \"tokenRequestEndpoint\": {\n            \"url\": \"http://localhost:8002/oauth/requestToken\",\n            \"clientIdName\": \"client_id\",\n            \"clientSecretName\": \"client_secret\"\n          },\n          \"tokenEndpoint\": {\n            \"url\": \"http://localhost:8002/oauth/token\",\n            \"tokenName\": \"access_code\"\n          }\n        }\n      }\n    },\n    \"apiKey\": {\n      \"type\": \"apiKey\"\n    }\n  }\n}\n2) The authorization requirement on each operation is done via annotation:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/samples/scala-jaxrs/src/main/scala/com/wordnik/swagger/sample/resource/PetResource.scala#L33\nscala\n  @GET\n  @Path(\"/{petId}\")\n  @ApiOperation(value = \"Find pet by ID\", \n    notes = \"Returns a pet based on ID\", \n    response = classOf[Pet],\n    produces = \"application/json,application/xml\",\n    authorizations = \"oauth2\")\nwhich appear in the api declaration:\njson\n  \"apis\": [\n    {\n      \"path\": \"/pet/{petId}\",\n      \"operations\": [\n        {\n          \"authorizations\": [\n            \"oauth2\"\n          ],\n          \"parameters\": [\nThe next steps, after finalizing the spec format, is to update the swagger.js library to consume the updated spec, then move it into the swagger-ui.\nFeedback welcome!\n. have been focusing on oauth 2, but describing oauth 1 should be no problem\n. Probably won't make it into 1.3.0-RC1 but hopefully by release, oauth 1.0 will be supported.\n. RC1 will be today.  final as soon as possible :)\n. I'm not seeing that (it was in the docs for some time).  Can you paste the relevant piece of json?\n. Right you are.  My browser and editor were both eating the duplicate value, will look into a fix but would prefer if you can switch to 1.3.0-SNAPSHOT as that will be better supported.\n. fixed in 1.3.0-SNAPSHOT\n. Thanks!  Added to the Wiki:  \nhttps://github.com/wordnik/swagger-core/wiki#how-can-i-make-my-api-swagger\n. looks like the last distribution was built for java7.  I'll get it updated, will be 1.2.5\n. Please try version 1.2.5, it was built with java 6\n. Well, I don't think this is a swagger bug--models need to be described correctly, and case matters.\nAre you using a server integration?  If so, then upgrade to swagger-core-1.3.0-SNAPSHOT, and there are lots of options.  Give some details on your environment and I can provide some direction.\n. No, it's only in scala.  however, it's trivial to override how the provider builds the JSON (because it's in scala).  I suggest the following:\n1) Use the new pluggable model processing feature in 1.3.0 to override the way you read models.  You can take this class:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-core/src/main/scala/com/wordnik/swagger/converter/SwaggerSchemaConverter.scala\nand override the model name:\n``` scala\nclass MySchemaConverter \n  extends ModelConverter \n  with BaseConverter {\ndef read(cls: Class[_]): Option[Model] = {\n    Option(cls).flatMap({\n      cls => {\n        implicit val properties = new LinkedHashMapString, ModelProperty\n        new ModelPropertyParser(cls).parse\n    val p = (for((key, value) <- properties) \n      yield (value.position, key, value)\n    ).toList\n\n    val sortedProperties = new LinkedHashMap[String, ModelProperty]()\n    p.sortWith(_._1 < _._1).foreach(e => sortedProperties += e._2 -> e._3)\n    Some(Model(\n      capitalize(toName(cls)),\n      capitalize(toName(cls)),\n      cls.getName,\n      sortedProperties,\n      toDescriptionOpt(cls)\n    ))\n\n...\n// simple function to capitalize initial char in string\ndef capitalize(s: String) = { s(0).toUpperCase + s.substring(1, s.length).toLowerCase }\n```\n2) Add your new converter in a bootstrap:\njava\n// the `true` param puts this converter first in the chain\nModelConverters.addConverter(new MySchemaConverter(), true);\n3) Your api declarations will now have initial-caps for the model names.  Alternatively you can edit the serializer, which turns the models into JSON, which is done in the SwaggerSerializers file.\nNote, you should be able to do the custom converter code in java.\n. Well, I actually don't think there is a dependency on an initial-caps (studly case) naming convention.  It should honor your JAXB annotations--I thought you wanted to make them initial-caps.\nSo what is the issue you're seeing then, if camel case is OK w/you?\n. You can bootstrap the code in your server like this:\nin you web.xml:\nxml\n  <servlet>\n    <servlet-name>Bootstrap</servlet-name>\n    <servlet-class>com.wordnik.swagger.sample.Bootstrap</servlet-class>\n    <load-on-startup>1</load-on-startup>\n  </servlet>\nand create a class like this:\nhttps://github.com/wordnik/swagger-core/blob/master/samples/java-alt-resource-listing/src/main/java/com/wordnik/swagger/sample/Bootstrap.java\nJust replace the static block with the code you want to run and it'll be fired on server startup.\n. I'm assuming you're using swagger 1.3.0-SNAPSHOT, which means the following:\nYou need to remove this line (no longer needed):\nJaxrsApiReader.setFormatString(\"\");\nYou also need to look at your dependencies.  Per the parent pom, the scala libraries should be included when you include swagger-core-1.3.0-SNAPSHOT, and are only scala 2.9.1.  So you should be able to remove scala from your direct dependencies.\n. Can you please run mvn dependency:tree to output your dependencies?\n. This is covered in #224 \n. Howdy, this requires a specification change and will be addressed in the swagger-spec repo.  See issue here:\nhttps://github.com/wordnik/swagger-spec/issues/51\n. Hi, take a look here:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-core/src/test/scala/converter/EnumConversionTest.scala\nwhere a pojo like this:\nModelWithEnumProperty.java\n``` java\nimport javax.xml.bind.;\nimport javax.xml.bind.annotation.;\npublic class ModelWithEnumProperty {\n  private TestEnum e;\npublic TestEnum getEnumValue() {\n    return e;\n  }\npublic void setEnumValue(TestEnum e) {\n    this.e = e;\n  }\n}\n```\nTestEnum.java\n``` java\nimport javax.xml.bind.annotation.XmlEnum;\nimport javax.xml.bind.annotation.XmlEnumValue;\nimport javax.xml.bind.annotation.XmlType;\n@XmlType\n@XmlEnum(String.class)\npublic enum TestEnum {\n  @XmlEnumValue(\"PRIVATE\")PRIVATE,\n  @XmlEnumValue(\"PUBLIC\")PUBLIC,\n  @XmlEnumValue(\"SYSTEM\")SYSTEM,\n  @XmlEnumValue(\"INVITE_ONLY\")INVITE_ONLY;\n}\n```\nwhich produces this:\njson\n{\n  \"id\": \"ModelWithEnumProperty\",\n  \"name\": \"ModelWithEnumProperty\",\n  \"properties\": {\n    \"enumValue\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"allowableValues\": {\n        \"valueType\": \"LIST\",\n        \"values\": [\n          \"PRIVATE\",\n          \"PUBLIC\",\n          \"SYSTEM\",\n          \"INVITE_ONLY\"\n        ]\n      }\n    }\n  }\n}\nThis currently only supports string enums.  Please reopen if this doesn't do what you're after.\n. Hi, I suggest you take 1.3.0-SNAPSHOT from this branch:\nhttps://github.com/wordnik/swagger-core/tree/develop-1.3\nwhich has updated examples of running swagger without any web.xml, ServletConfig or WebConfig dependencies.  Relevant samples:\nhttps://github.com/wordnik/swagger-core/tree/develop-1.3/samples/java-jaxrs\nNote the configuration is set in bootstrap via web.xml\nhttps://github.com/wordnik/swagger-core/tree/develop-1.3/samples/java-jaxrs-cxf\nNo web.xml configuration is done\n. Please reopen if you have trouble with the 1.3.0-snapshot\n. Can you please run mvn clean install\nI doubt that is it, but Travis-ci seems to think the build is clean.\n. Great.  There were some classes renamed that confused the compiler, I'm guessing\n. Are you building at the top level?  If not, press try that.\n. I suggest seeing what's wrong with your build--the tests are all passing so there must be a local modification or something leftover in your target folder?\nhttps://travis-ci.org/wordnik/swagger-core\n. it does seem like a localized problem for you, I just did a fresh clone on a new machine and got a passing build.\n. I've also deployed the latest to sonatype snapshots, so you can pull from there.\n. You can still link via sonatype snapshots in your app:\nxml\n  <repositories>\n    <repository>\n      <id>sonatype-snapshots</id>\n      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n    </repository>\n  </repositories>\nThey are pretty much in sync with the current code.\n. Howdy, good point.  Essentially the ApiListing class you're referring to will use a pluggable JaxrsScanner, which may or may not use a ServletConfig.  For example:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/config/ReflectiveJaxrsScanner.scala\nDoes not use it.  Since ServletConfig is a part of the JaxRS framework, referring to an object of that type optionally shouldn't cause problems.  It simply doesn't need to be used.\nThere's a full example of using the BeanConfig here:\nhttps://github.com/wordnik/swagger-core/tree/develop-1.3/samples/java-jaxrs-cxf\nWhere the entire configuration is done inside the applicationContext.xml\nMake sense?\n. It's even easier than that.  You just need to create a BeanConfig object and set the values in your code.  I don't recall how you set the @Provider in embedded mode, you'll need to make sure to add them as well.  But it should work without any fancy coding.\n. please reopen if issues persist\n. Can you tell me how to run your sample?\n. easy peasy.  Edit this file:\nSampleJaxRsApplication.java\nand configure the BeanConfig during server startup:\n``` java\nimport com.wordnik.swagger.jaxrs.config.*;\n...\npublic static void main(String[] args) throws Exception {\n    final int port = 8002;\n\n    BeanConfig config = new BeanConfig();\n    config.setResourcePackage(\"com.wordnik.swagger.sample.resource\");\n    config.setVersion(\"1.0.0\");\n    config.setBasePath(\"http://localhost:8002/api\");\n\n    SampleJaxRsWebserver server = new SampleJaxRsWebserver(port);\n    server.start();\n    System.in.read();\n    server.stop();\n}\n\n```\nThat should do it.\n. I'm no grizzly expert (I do know one of the authors, though), but it appears this:\nSampleJaxRsWebserver.java\njava\nURI baseUri = UriBuilder.fromUri(\"http://localhost/api/\").port(port).build();\nwill mount it at /api just fine.  \nThe swaggerVersion should be automatically set, I've fixed that and will push it.\nFor your issue with swagger-ui, I believe you need to add some CORS support.  Without a HttpServlet filter, I'm guessing this isn't simple.  See here as an example:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/util/ApiOriginFilter.java#L24\nAre you sure you don't want to support HttpServlet?  It is definitely the path of least resistance...\n. yes, the idea is that the swagger documentation is mounted at ${base-path}/api-docs.  Is that bad for you?  It's not hard to override, you'd simply make your own ApiListingResourceJSON.java which extends ApiListingResource, and sets the @Path value.\n. May I suggest you switch to 1.3.0-SNAPSHOT, which allows strong-typing of the response classes and a much better model introspecter?  You can grab the snapshot source from here:\nhttps://github.com/wordnik/swagger-core/tree/develop-1.3\na java example is here:\nhttps://github.com/wordnik/swagger-core/tree/develop-1.3/samples/java-jaxrs\nand snapshots are in sonatype oss:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-core_2.9.1/1.3.0-SNAPSHOT/\n. Yes, jersey is now a transitive dependency, so you can update the jersey version as you like.  If you don't want to do that, you can simply use the jersey-specific version.  Otherwise, you'll have to include them yourself.\nCan you give more detail with your ApiParam issue?  I'm not quite sure I understand the issue.\n. Are you sure there's an issue still?  I just added this test:\nhttps://github.com/wordnik/swagger-core/commit/29034cc6c5092389900245c6b50de2351f27c764\nAgainst the current code, having a @PathParam in the class-level and it passes fine, per #52.  Perhaps you have it configured differently?\nswagger-jaxrs uses Jersey as a provided dependency so you technically don't have to use it (although most people do).  There is one that is bound to jersey here:\nhttps://github.com/wordnik/swagger-core/tree/develop-1.3/modules/swagger-jersey-jaxrs\nwhich has some additional jersey-specific features, like supporting file uploads, etc.\n. I will do another test with this as a Java resource, there could be some scala magic happening.  You can look at it as well to see if it's in-line with your code as well.\n. Well why didn't you say it was that easy!  Fixed, it was the case that scala + java were handling the field differently.  A new snapshot will be uploaded shortly.\n. This is in 1.3.0, and also PATCH has been added.\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/JaxrsApiReader.scala#L320\nYou can use the snapshot from sonatype.\n. this change will break swagger-ui\n. Hi, so you're showing a model, not a resource.  Any resource would be annotated with @Api.  Can you share the resource itself?\nIn general, if a model is used as an input or output of any resource, it will be included in the model section.\n. You are correct, there is an issue.  Will look into this shortly.\n. Hi @4lejandrito, good catch!  The numeric value in the variable name was the culprit.  Test added, please reopen if you see this still.\n. OH that'll make the tests pass :)\n. updated in 1.3.0-SNAPSHOT\n. Hi, do you mean this is sent through swagger-ui?  Can you confirm that you have enabled headers per this:\nhttps://github.com/wordnik/swagger-ui#swaggerui\n. great news\n. Need a more concrete example of what is not being discovered (I have little time as well :) )\n. Hi, the parent field is simply not accessible through java reflection, which is how this works, so I don't think this can be supported.\n. I'll do my best\n. sleep is overrated\n. this isn't really a bug, it's per design.  In fact, you don't need to annotate @QueryParam or other arguments unless you want special notes on them.\n. This is quite easy to change in code, the challenge is with POST and PUT params, where the method doesn't require any JAX-RS annotations.  It seems like this would be very disruptive in peoples' code?\nOne use case for annotating a resource is to put a single @Api annotation on the top-level resource, and everything \"works\".   This would change that behavior.  What do you think?\n. Yes, if we're talking about class-level variables, they should be ignored if not annotated.  This needs to be fixed, reopening the issue.\n. just pushed a fix and a test, please confirm that does the trick.\nhttps://github.com/wordnik/swagger-core/commit/399bb429803c03cff9aa474057c72df39026787f\n. Note, you may need to update swagger UI as well.\n. Hi, can you open an issue in swagger-ui?  That's the right place for this.\n. Hi, we stopped supporting play 1.x some time ago.  I believe you'd need to check out this tag:\nhttps://github.com/wordnik/swagger-core/tree/swagger-project_2.9.1-1.1.0\nto build it.  I think others would like it as well if you can help get it up to sync with swagger 1.2.5, but it has rotted some.\n. sounds good!\n. Hi guys, I've pushed a change to get the build working.  Note!  You do need scala 2.9.1 to build it!  I have not tested this but it compiles fine and should work.\n. note, to build, follow these steps:\nplay deps\nant compile -Dplay.path=$PLAY_HOME\nplay build-module\n. cool!  Please post back if it works with your app when you can\n. It is definitely a scala version problem.  Maybe the ivy cache needs be cleaned?\n. Can you please share what your somethingDTO looks like so it can be covered in the unit tests?\n. @PedroAlvarado you and @dopeymac  are on the same team?  I ran the models in the gist through our model conversion process and got this:\njson\n[\n  {\n    \"id\": \"studentPerformanceMetric\",\n    \"name\": \"studentPerformanceMetric\",\n    \"properties\": {\n      \"metricName\": {\n        \"type\": \"string\",\n        \"required\": false\n      },\n      \"metricCount\": {\n        \"type\": \"long\",\n        \"required\": false\n      },\n      \"metricRate\": {\n        \"type\": \"double\",\n        \"required\": false\n      }\n    }\n  },\n  {\n    \"id\": \"studentPerformance\",\n    \"name\": \"studentPerformance\",\n    \"properties\": {\n      \"studentName\": {\n        \"type\": \"string\",\n        \"required\": false\n      },\n      \"studentPerformanceMetrics\": {\n        \"type\": \"List\",\n        \"required\": false,\n        \"items\": {\n          \"$ref\": \"studentPerformanceMetric\"\n        }\n      }\n    }\n  },\n  {\n    \"id\": \"school\",\n    \"name\": \"school\",\n    \"properties\": {\n      \"passRate\": {\n        \"type\": \"double\",\n        \"required\": false\n      },\n      \"endDate\": {\n        \"type\": \"date\",\n        \"required\": false\n      },\n      \"studentPerformanceList\": {\n        \"type\": \"List\",\n        \"required\": false,\n        \"items\": {\n          \"$ref\": \"studentPerformance\"\n        }\n      },\n      \"totalStudents\": {\n        \"type\": \"long\",\n        \"required\": false\n      },\n      \"totalTeachers\": {\n        \"type\": \"long\",\n        \"required\": false\n      },\n      \"totalSchoolEvents\": {\n        \"type\": \"long\",\n        \"required\": false\n      },\n      \"failRate\": {\n        \"type\": \"double\",\n        \"required\": false\n      },\n      \"startDate\": {\n        \"type\": \"date\",\n        \"required\": false\n      }\n    }\n  }\n]\n. Furthermore, the following resource:\nscala\n@Path(\"/wildcard\")\n@Api(value = \"/wildcard\", description = \"Wildcard test resource\")\nclass WildcardResource {\n  @GET\n  @Path(\"/{id}\")\n  @ApiOperation(value = \"Get object by ID\",\n    notes = \"No details provided\",\n    response = classOf[School],\n    position = 0)\n  @ApiResponses(Array(\n    new ApiResponse(code = 400, message = \"Invalid ID\", response = classOf[NotFoundModel]),\n    new ApiResponse(code = 404, message = \"object not found\")))\n  def getTest(\n    @ApiParam(value = \"sample param data\", required = true, allowableValues = \"range[0,10]\")@QueryParam(\"id\") id: String) = {\n    val out = new Sample\n    out.name = \"foo\"\n    out.value = \"bar\"\n    Response.ok.entity(out).build\n  }\n}\nis correctly read as such:\njson\n{\n  \"apiVersion\": null,\n  \"swaggerVersion\": null,\n  \"basePath\": null,\n  \"resourcePath\": \"/wildcard\",\n  \"apis\": [\n    {\n      \"path\": \"/wildcard/{id}\",\n      \"operations\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"Get object by ID\",\n          \"notes\": \"No details provided\",\n          \"responseClass\": \"school\",\n          \"nickname\": \"getTest\",\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"description\": \"sample param data\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"allowableValues\": {\n                \"valueType\": \"RANGE\",\n                \"min\": \"0.0\",\n                \"max\": \"10.0\"\n              },\n              \"paramType\": \"query\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 400,\n              \"message\": \"Invalid ID\",\n              \"responseModel\": \"NotFoundModel\"\n            },\n            {\n              \"code\": 404,\n              \"message\": \"object not found\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"models\": {\n    \"school\": {\n      \"id\": \"school\",\n      \"name\": \"school\",\n      \"properties\": {\n        \"passRate\": {\n          \"type\": \"double\",\n          \"required\": false\n        },\n        \"endDate\": {\n          \"type\": \"date\",\n          \"required\": false\n        },\n        \"studentPerformanceList\": {\n          \"type\": \"List\",\n          \"required\": false,\n          \"items\": {\n            \"$ref\": \"studentPerformance\"\n          }\n        },\n        \"totalStudents\": {\n          \"type\": \"long\",\n          \"required\": false\n        },\n        \"totalTeachers\": {\n          \"type\": \"long\",\n          \"required\": false\n        },\n        \"totalSchoolEvents\": {\n          \"type\": \"long\",\n          \"required\": false\n        },\n        \"failRate\": {\n          \"type\": \"double\",\n          \"required\": false\n        },\n        \"startDate\": {\n          \"type\": \"date\",\n          \"required\": false\n        }\n      }\n    },\n    \"studentPerformanceMetric\": {\n      \"id\": \"studentPerformanceMetric\",\n      \"name\": \"studentPerformanceMetric\",\n      \"properties\": {\n        \"metricName\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"metricCount\": {\n          \"type\": \"long\",\n          \"required\": false\n        },\n        \"metricRate\": {\n          \"type\": \"double\",\n          \"required\": false\n        }\n      }\n    },\n    \"studentPerformance\": {\n      \"id\": \"studentPerformance\",\n      \"name\": \"studentPerformance\",\n      \"properties\": {\n        \"studentName\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"studentPerformanceMetrics\": {\n          \"type\": \"List\",\n          \"required\": false,\n          \"items\": {\n            \"$ref\": \"studentPerformanceMetric\"\n          }\n        }\n      }\n    },\n    \"NotFoundModel\": {\n      \"id\": \"NotFoundModel\",\n      \"name\": \"NotFoundModel\",\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"code\": {\n          \"type\": \"int\",\n          \"required\": false\n        }\n      },\n      \"description\": \"error response model\",\n      \"extends\": \"java.lang.Void\",\n      \"discriminator\": \"\"\n    }\n  }\n}\nLet me know what's missing here.\n. Can you look at the sample resource I provided and see if you are referencing the model in the same way?  Note the response type is School, perhaps you have it as an input param? \n. Hi, I took your code verbatim got the expected, except I did make the method public.  Source:\njava\n@Path(\"/wildcard\")\n@Api(value = \"/wildcard\", description = \"Wildcard test resource\")\nclass SchoolResource {\n  @GET\n  @Produces(\"application/json\")\n  @Path(\"/school/{id}\")\n  @ApiOperation(value=\"Return a list of schools\",\n                notes=\"Input parameter takes a school Id\",\n                response=School.class,\n                responseContainer = \"List\")\n  public List<School> getSimilarSchools(\n      @ApiParam(value=\"School ID\", required=true)\n      @PathParam(\"id\")\n      String id) {\n    return null;\n   }\n}\noutput:\njson\n{\n  \"apiVersion\": null,\n  \"swaggerVersion\": null,\n  \"basePath\": null,\n  \"resourcePath\": \"/wildcard\",\n  \"apis\": [\n    {\n      \"path\": \"/wildcard/school/{id}\",\n      \"operations\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"Return a list of schools\",\n          \"notes\": \"Input parameter takes a school Id\",\n          \"responseClass\": \"List[school]\",\n          \"nickname\": \"getSimilarSchools\",\n          \"produces\": [\n            \"application/json\"\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"description\": \"School ID\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"models\": {\n    \"school\": {\n      \"id\": \"school\",\n      \"name\": \"school\",\n      \"properties\": {\n        \"passRate\": {\n          \"type\": \"double\",\n          \"required\": false\n        },\n        \"endDate\": {\n          \"type\": \"date\",\n          \"required\": false\n        },\n        \"studentPerformanceList\": {\n          \"type\": \"List\",\n          \"required\": false,\n          \"items\": {\n            \"$ref\": \"studentPerformance\"\n          }\n        },\n        \"totalStudents\": {\n          \"type\": \"long\",\n          \"required\": false\n        },\n        \"totalTeachers\": {\n          \"type\": \"long\",\n          \"required\": false\n        },\n        \"totalSchoolEvents\": {\n          \"type\": \"long\",\n          \"required\": false\n        },\n        \"failRate\": {\n          \"type\": \"double\",\n          \"required\": false\n        },\n        \"startDate\": {\n          \"type\": \"date\",\n          \"required\": false\n        }\n      }\n    },\n    \"studentPerformanceMetric\": {\n      \"id\": \"studentPerformanceMetric\",\n      \"name\": \"studentPerformanceMetric\",\n      \"properties\": {\n        \"metricName\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"metricCount\": {\n          \"type\": \"long\",\n          \"required\": false\n        },\n        \"metricRate\": {\n          \"type\": \"double\",\n          \"required\": false\n        }\n      }\n    },\n    \"studentPerformance\": {\n      \"id\": \"studentPerformance\",\n      \"name\": \"studentPerformance\",\n      \"properties\": {\n        \"studentName\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"studentPerformanceMetrics\": {\n          \"type\": \"List\",\n          \"required\": false,\n          \"items\": {\n            \"$ref\": \"studentPerformanceMetric\"\n          }\n        }\n      }\n    }\n  }\n}\n. OK, looks like the issue is in the School.java, line 39:\n``` java\n  public List getSchoolPerformanceList() {\n    return schoolPerformanceList;\n  }\npublic void setSchoolPerformanceList(\n          List schoolPerformanceList) {\n    this.schoolPerformanceList = schoolPerformanceList;\n  }\n```\n...which is triggered by having and underscore in the element name: school_performance\nAnd caused by a regex which didn't expect underscores:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-core/src/main/scala/com/wordnik/swagger/converter/ModelPropertyParser.scala#L132\nwhich are totally valid in model names.  This has been fixed, but since RC1 has been cut already, you'll have to deploy from source to pick it up.\nYou can grab the 1.3-RC1 branch and run mvn clean install to pick it up.\n. good one!  You should consider a career in QA :)  Fixed in RC1 branch\n. I've reproduced your issue while putting the models in proper unit tests.  Will update shortly.\n. Added a recursive property scanner, please see the RC1 branch:\nhttps://github.com/wordnik/swagger-core/tree/1.3-RC1\n. it is uploading to maven central now, as 1.3.0-RC1.  Will take a few minutes.\n. it's up now:\nhttps://oss.sonatype.org/content/repositories/releases/com/wordnik/swagger-core_2.9.1/1.3.0-RC1/\n. Are you returning the ENUM class directly somewhere?  If referenced as a model property only you should not find it as a top-level model.\n. added test to confirm fixed:\nhttps://github.com/wordnik/swagger-core/blob/1.3-RC1/modules/swagger-jaxrs/src/test/scala/ResourceWithEnumsTest.scala\n. Still getting 1.3.0 out the door.  To be clear, you can still use swagger with maps, but the model schemas or code gen will not be accurate.  Viewing and performing operations will work fine until then\n. The JsonSchemaConverter class in swagger-core 1.3-RC1 is not used.  Swagger isn't using full Json schema for a number of reasons, so the models are not json schema compliant.\nYou can, however, make your own serializer and throw away the default SwaggerSchemaConverter.  Simply implement ModelConverters:\n``` scala\ntrait ModelConverter {\n  def read(cls: Class[]): Option[Model]\n  def toName(cls: Class[]): String\n  def toDescriptionOpt(cls: Class[_]): Option[String]\ndef ignoredPackages: Set[String] = Set(\"java.lang\")\n  def ignoredClasses: Set[String] = Set(\"java.util.Date\")\n}\n```\nand register it with the ModelConverter object:\nscala\nModelConverters.addConverter(myCusomConverter, true)\nwhich will put it first in the conversion chain.  You can have logic to fallback to our converter if it can't do it by returning None from the read(cls: Class[_]) method\n. Hi, can you please try with 1.2.5?  And when you say you can't see your api, do you mean in raw json or in the swagger-ui?\n. Please reopen with more information\n. hi, what version of swagger core are you using?  and are you using spring mvc or jaxrs directly?\n. Hi, I think you mean swagger-springmvc?  If so, I think we need to post in that project to get some more information.\n. No problem--if it's an issue in swagger-core, please bring it up here\n. Looks to me like you don't have jersey included as a dependency in your project.  Which library are you using for jax-rs?  Jersey is transitive, so you'll need to include it explicitly\n. Hi Timur, can you share your web.xml?  And what version of swagger-jaxrs is this?\n. is there a reason you're using swagger as a filter instead of inside a jersey servlet?  I think I'd need to see a sample project to sort this out.\n. Hi @kevinosullivan this is supported in 1.3-RC3.  See here:\nhttps://github.com/wordnik/swagger-core/wiki/Java-Integrations\n. More details, please?\ncd samples/java-jaxrs-cxf\nmvn clean package jetty:run\nResponds fine with http://localhost:8080/api/api-docs\ncd samples/java-jaxrs\nmvn clean package jetty:run\nResponds fine with http://localhost:8002/api/api-docs\nThey also have integration tests, passing fine under travis-ci:\nhttps://travis-ci.org/wordnik/swagger-core/branches\n. Got it, yes the wiki won't be updated to the RC until it's released :( \n. Hi, i'm unable to build, can you make sure the repository settings are correct?\n. ok it built, will update you shortly.\n. OK good news and not great news--  the good news is, the error is fixed.  The not-great news is that Maps are not supported in swagger, and you need to work around them.  There are a couple ways.\n1) You can just not use them--make a list of objects with named properties instead of being open-ended keys.\n2) You can override the model schemas for your class, which is com.wordnik.swagger.sample.data.School\nIf you need more help on either of those, please reopen this!\n. Yes, take a look here, it's pretty simple:\nhttps://github.com/wordnik/swagger-core/blob/1.3-RC1/modules/swagger-core/src/test/scala/converter/GenericModelConverterTest.scala#L45\nAnd here on the wiki:\nhttps://github.com/wordnik/swagger-core/wiki/overriding-models\n. Hi @tyler8691 easy to fix.  I your web.xml, your basePath is currently \"http://localhost:8080\", but it should be \"http://localhost:8080/myapp\".\nPlease see if that's the case\n. OK, the load process looks like this-- Swagger-ui first loads the resource listing (http://localhost:8080/myapp/api-docs.json) and then will go to your \"test\" api, which is a concatenation of basePath (http://localhost:8080) and path (api-docs.{format}/test), which comes from here:\njson\n{\n  \"apiVersion\": \"1.0\",\n  \"apis\": {\n    \"description\": \"\",\n    \"path\": \"/api-docs.{format}/test\"\n  },\n  \"basePath\": \"http://localhost:8080\",\n  \"swaggerVersion\": \"1.1\"\n}\nThat means, it'll expect the /test api to be listed under http://localhost:8080/api-docs/test (note the missing myapp).\nThat won't be the answer to the problem if you're getting an error about loading a class.  If you're just getting started with swagger, could you switch to 1.3.0-RC1 (https://github.com/wordnik/swagger-core/tree/1.3-RC1/samples/java-jaxrs)?\n. Yes, you do need to add one thing to your webxml.  see here for an example, the swagger configs have moved outside the jersey servlet config:\nhttps://github.com/wordnik/swagger-core/blob/1.3-RC2/samples/java-jaxrs/src/main/webapp/WEB-INF/web.xml#L29-L45\nxml\n  <servlet>\n    <servlet-name>DefaultJaxrsConfig</servlet-name>\n    <servlet-class>com.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig</servlet-class>\n    <init-param>\n      <param-name>api.version</param-name>\n      <param-value>1.0.0</param-value>\n    </init-param>\n    <init-param>\n      <param-name>swagger.api.basepath</param-name>\n      <param-value>http://localhost:8002/api</param-value>\n    </init-param>\n    <init-param>\n      <param-name>swagger.filter</param-name>\n      <param-value>com.wordnik.swagger.sample.util.ApiAuthorizationFilterImpl</param-value>\n    </init-param>\n    <load-on-startup>2</load-on-startup>\n  </servlet>\n. Awesome!  Please reopen this if you keep having issues.\n. Hi, checking in, are we clear on this issue?\n. OK, if you have a chance to help figure out why that issue came up, it'd be appreciated so I can make sure whatever config/code bug there is can be addressed.\n. I really don't know.  Can you paste the entire output from running the mvn command?\n. We need to move modeling discussions to the swagger-spec repo.  We can support composition in the models now.\n. great catch\n. Added!\n. yes :)\nhttps://github.com/wordnik/swagger-core/blob/1.3-RC3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/JaxrsApiReader.scala#L259\ncoming this weekend\n. added:\nhttps://github.com/wordnik/swagger-core/commit/eccf7a601681be425be9535ca641e17196091613\n. Hi, you can definitely point swagger-ui to any path, not just the resource listing.  but having a single listing isn't on the roadmap now.\n. Hi, looks like this didn't get implemented.  Will do so shortly and include in RC-3\n. grab the 1.3-RC3 branch, this is supported.\n. Yes, the position field is 1-indexed.\n. I don't understand.  You can start with position = 1 and increment from there:\njava\n@Api(value = \"/cats\", description = \"Operations about cats\", position = 1)\n@Api(value = \"/snakes\", description = \"Operations about snakes\", position = 3)\n@Api(value = \"/dogs\", description = \"Operations about dogs\", position = 2)\nThat should work.\n. I will need more info then.  This test:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-jaxrs/src/test/scala/JaxrsApiReaderTest.scala#L160\nand this one:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/test/scala/filter/SpecFilterTest.scala#L67\nare there to ensure it's ordered correctly.\n. In swagger-core 1.2.x:\nresponseClass = \"com.yourpackage.YourModel\", multiValuedResponse=true\nIn swagger-core 1.3-x:\nresponse = YourModel.class, responseContainer=\"List\"\nThe advantage of the latter is that it's typesafe.\n. I know this sounds crazy, but are you sure you don't have some value cached in your browser?  I suggest using chrome, opening the network tab and clearing the cache.  Also there is an option to \"not cache\" in the bottom right.  This has bitten me more than once.\n. I'd love to help but I think there's some odd environment problem on your deployment.  I'm not sure how it can be debugged remotely.\nI've seen the browser cache issue (above, you confirmed that's not it) as well as servlet filters to cause a problem.\nSame java version?  If you curl /api-docs to get the response?\n. Hi, this tells me that your web.xml isn't being picked up correctly.  in the first example (local), there is no basePath being set, which is read from web.xml.\nHow are you deploying this?  As a war file?  And when you run locally are you using a jetty plugin or something?\n. great news.  Yes, the IDE magic can hide the truth!\n. that's a bug, will fix it today.\n. that looks right, want to send a PR?\n. Sure, easy enough.\n. Hi, you need to create a filter--follow this pattern:\nhttps://github.com/wordnik/swagger-core/blob/1.3-RC3/modules/swagger-core/src/test/scala/filter/SpecFilterTest.scala#L45\nscala\nclass SecretParamFilter extends SwaggerSpecFilter {\n  override def isOperationAllowed(operation: Operation, api: ApiDescription, params: java.util.Map[String, java.util.List[String]], cookies: java.util.Map[String, String], headers: java.util.Map[String, java.util.List[String]]): Boolean = true\n  override def isParamAllowed(parameter: Parameter, operation: Operation, api: ApiDescription, params: java.util.Map[String, java.util.List[String]], cookies: java.util.Map[String, String], headers: java.util.Map[String, java.util.List[String]]): Boolean = {\n    if(parameter.paramAccess == Some(\"secret\")) false\n    else true\n  }\n}\nAnd enable your filter in your swagger config.  If a web.xml:\nxml\n  <servlet>\n    <servlet-name>DefaultJaxrsConfig</servlet-name>\n    <servlet-class>com.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig</servlet-class>\n    <init-param>\n      <param-name>api.version</param-name>\n      <param-value>1.0.0</param-value>\n    </init-param>\n    <init-param>\n      <param-name>swagger.api.basepath</param-name>\n      <param-value>http://localhost:8002/api</param-value>\n    </init-param>\n    <init-param>\n      <param-name>swagger.filter</param-name>\n      <param-value>com.yourpackage.YourFilterName</param-value>\n    </init-param>\n    <load-on-startup>2</load-on-startup>\n  </servlet>\n. thanks\n. Yes, we will support jersey2 shortly.  It should be quite easy to transition the 1.3 branch to support jersey, and I think swagger-jersey2-jaxrs would be a good module name since jersey 1.x will be in use for a long time.\n. I suggest you start on the 1.3-RC3 branch since it has been refactored to make it simple to plug in readers now.  The 1.2.x branch will be a lot of code repeat...\n. see here:\nhttps://github.com/wordnik/swagger-core/tree/develop/modules/swagger-jersey2-jaxrs\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-jersey2-jaxrs_2.10/\n. I think you'll have to try changing dependencies in your project, and possibly forking swagger-core to match what you need.  It's impossible to support every combination of frameworks\n. I suggest you add this to swagger-jaxrs or swagger-jersey-jaxrs\n. is it working?\n. It's not in the current plans but if there are contributions, happy to see about getting it in.\n. Hi, I would work off the 1.3-RC3 branch as the right place to work from.  Scala 2.10 will become the default shortly (RC3 on 2.10 was just pushed to maven central last night).\n. scala_2.10-1.3-RC3 is the correct branch for the 2.10 version\n. supported in 1.3.7\n. done!\nhttps://github.com/wordnik/swagger-codegen/blob/master/src/main/resources/logback.xml\n. Hi, if you're using CXF could you please verify your integration with this quickstart?\nhttps://github.com/wordnik/swagger-core/wiki/Java-CXF-Quickstart\n. Hi, you just closed this--did you get it working?  Anything needed to update in the wiki docs?\n. awesome, thanks for the feedback!  Docs are getting better but they have a ways to go.\n. Hi, scalatra is getting bumped up to the latest swagger version shortly--this issue is resolved in 1.3-RC3 of swagger-core but scalatra is on 1.2.x right now.  Can you open a ticket in the scaltra project?\n. @webron i don't think so.  feel free to close it\n. Added support for subType declaration:\nhttps://github.com/wordnik/swagger-core/commit/1e6d5dc7bedd799bdcf852a43a920b2f9f526355\nThis doesn't include @JsonTypeInfo as-is.  Looking at supporting that but this is the work-around:\njava\n@ApiModel(value=\"my base model\", \n   discriminator=\"type\", \n   subTypes={WildAnimal.class, DomesticAnimal.class})\n. That's the next step of this.\n. thanks, fixed!\n. an issue for this would belong in the swagger-spec repo.\n. You need to target the annotation as such:\n``` scala\nimport scala.annotation.target.field\ncase class TargetEmailRequest (\n  @(ApiProperty @field)(value = \"name of the model\") campaignId: Long\n)\n```\n. see 1.3.5 or later\n. Hi, the sample has been updated in master, and there's a grails quickstart here:\nhttps://github.com/wordnik/swagger-core/wiki/Java-grails2-Quickstart\n. Hi, a couple things.  First, you are mixing 1.2.x and 1.3.x libraries, including different release candidates.  1.3.0 release is out now, and you should use that.\nTwo, you should use maven to grab the required dependencies in your app, or make a stub app and copy them out.  I believe you're missing a couple dependencies.\n. You can download dependencies and add them manually.  Here are the deps for the java-jaxrs project:\ncommons-lang-2.4.jar\ndom4j-1.6.1.jar\nguava-11.0.2.jar\njackson-annotations-2.1.5.jar\njackson-core-2.1.5.jar\njackson-databind-2.1.5.jar\njackson-jaxrs-json-provider-2.0.0.jar\njackson-module-jaxb-annotations-2.0.0.jar\njackson-module-jsonSchema-2.1.0.jar\njackson-module-scala_2.10-2.1.5.jar\njavassist-3.12.1.GA.jar\njoda-convert-1.2.jar\njoda-time-2.1.jar\njson4s-ast_2.10-3.2.4.jar\njson4s-core_2.10-3.2.4.jar\njson4s-ext_2.10-3.2.4.jar\njson4s-jackson_2.10-3.2.4.jar\njson4s-native_2.10-3.2.4.jar\njsr305-1.3.9.jar\njsr311-api-1.1.1.jar\njunit-4.8.1.jar\nlogback-classic-1.0.1.jar\nlogback-core-1.0.1.jar\nparanamer-2.3.jar\nreflections-0.9.8.jar\nscala-actors-2.10.0.jar\nscala-compiler-2.10.0.jar\nscala-library-2.10.0.jar\nscala-reflect-2.10.0.jar\nscalap-2.10.0.jar\nscalatest_2.10-1.9.jar\nservlet-api-2.5.jar\nslf4j-api-1.6.3.jar\nswagger-annotations_2.10-1.3.0.jar\nswagger-core_2.10-1.3.0.jar\nswagger-jaxrs_2.10-1.3.0.jar\nxml-apis-1.0.b2.jar\nI would suggest cloning the swagger-core project and do the following:\ncd samples/java-jaxrs\nmvn package\nand copy in the dependencies from target/lib\n. This can be caused by a bunch of different things.  I suggest you take a look at the java-jaxrs sample, which uses maven to sort out the dependencies, and go from there.  Otherwise, the only reliable way to figure this out is to share your project.\n. Hi, two things.  First, you need to use the Jersey reader to scan your resources (the above tells me you're using the DefaultJaxRSReader.  Next, you are correct, even when scanned correctly, swagger-ui file upload is currently broken.  Expect that to be addessed this week.\n. You can always look at https://github.com/martypitt/swagger-springmvc if you're moving to spring.\n. You need the 2.0 release of swagger-ui to support the updated names.  And yes, type is the correct one.  Can you please grab from master or the 2.0 release tag?\n. Please reopen if you still have issues with the 2.0.x swagger-ui.\n. We have update the auth support in the 2.0 spec.  Thanks for all the feedback\n. Hi, the wiki is updated, although there is much more to do.\nResource Listing\nApi Declaration\nParameters\nData Types\nIf you see omissions or anything confusing, please reopen this, or file a new ticket.  Unfortunately I don't think github notifies watchers when the wiki changes.\n. Hi, I believe this is fixed in 1.3.4, which was released today.  We needed to add a filter to the Reflections scanning.  Please reopen if not working as expected!\n. Hi, thanks for working on isolating this.  I hate to say it, but this is exactly the intended behavior.  The code to do so is here:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/JaxrsApiReader.scala#L286-L301\nThe reason is, if you look at the swagger-ui, it groups operations by resource path.  That organizes GET/PUT/POST/DELETE/PATCH in the same \"block\" rather than spread out across the UI.  In addition the swagger json is also structured that way, see here:\nhttp://petstore.swagger.wordnik.com/api/api-docs/store?api_key=special-key\nNote how the GET and DELETE operations are nested under the same resource path.\nSo that said, I'm afraid this is expected behavior.\n. Hi, you should switch to swagger-core 1.3 release now.  And play2 support has not been updated yet, it should in the next few weeks.\n. See #307 \n. Hi, the current implementation for the body param is that it's always called body, which facilitates a number of items.  I don't think this affects anything downstream since the body post is an envelope and there's no reference to the param name, anywhere.\n. Hi, while I do understand it is repetitive, many folks are using a different @Api path for documentation than the actual API itself.  That, plus the annotation requires that a \"value\" is set (which could be the description).  So I think this minor inconvenience isn't worth the breakage that would occur if we change it.\n. Hi @gaffa thanks for putting this info down.  It is true that Swagger uses scala, and that makes many people very happy.  It is also hard for pure java apps for some of the reasons you mention (I don't necessarily agree with all of them).  However, this is how swagger-core is currently written and refactoring to pure java would be an enormous amount of work.  There are many things that are much simpler because of scala.\nI do agree though that it would be helpful to the java community to have a pure java version, and support the scala community with a pure scala community.  Some folks will be caught in the middle, such as those who are using java frameworks with scala (like we have been until we started migrating everything over to scalatra).\nSo I'm up for getting a pure java version of swagger in the swagger-core project, and I know others would like to as well.  In fact, I know of at least one, that is running in a very large gaming company, which was based off the concepts of swagger-core but migrated to pure scala.\nI suggest that if this is to happen, the following occur:\n1) Start with a swagger-core branch\n2) Swagger-core is migrated to pure java, but still interoperable with swagger-jaxrs (if possible)\n3) The scala-based tests continue on (it's hard to argue that the scala test frameworks are years ahead of pure java ones)\n4) We see about getting contributions back from the pure java ports (I can reach out) to see if contributions make sense.\nNow this isn't exactly turnkey though, as pure java frameworks can also bring along a lot of baggage (ever see how many dependencies come along with spring???).  I'm not sure it's going to be worth the effort, just for the sake of dependencies and some familiarity with the code, but if you want to take a stab at this, let's see how it goes.\n. Done in the develop_2.0 branch.\n. I think this is impossible with the reflection technique.  Can you produce a test case and I'll see if it's possible?  See here for examples:\nhttps://github.com/wordnik/swagger-core/tree/master/modules/swagger-core/src/test/scala/converter\n. should be supported in 1.3.5 and later.\n. Hi, you cannot use generics in the response class because of type erasure.  Please take a look here to follow the supported technique:\nhttps://github.com/wordnik/swagger-core/wiki/overriding-models#with-swagger-core-version-130\n. I believe the \"/\" bug is something we need to fix.  However, please keep in mind that the @Api path value is NOT the same as the resource path itself.  It's where you are hosting the Swagger specification, which often does not map 1:1 with the resource.\n. per design, the value is different than the @Path location.\n. In the develop_2.0 spec, params are now subclassed by param type.\n. Hi, I just verified that this is behaving as expected.  I modified the petstore as follows:\nhttps://github.com/wordnik/swagger-core/blob/master/samples/scala-jaxrs-fileupload/src/main/scala/com/wordnik/swagger/sample/resource/PetResource.scala#L40\n@Api(value = \"/pet\", description = \"Operations about pets\")\nto this:\n@Api(value = \"/v1/pet\", description = \"Operations about pets\")\nThe output was as expected:\nhttp://localhost:8002/api/api-docs\njson\n{\n  \"apiVersion\": \"1.0.0\",\n  \"swaggerVersion\": \"1.2\",\n  \"apis\": [\n    {\n      \"path\": \"/v1/pet\",\n      \"description\": \"Operations about pets\"\n    },\n    {\n      \"path\": \"/user\",\n      \"description\": \"Operations about user\"\n    }\n  ],\n  \"authorizations\": {\nand this:\nhttp://localhost:8002/api/api-docs/v1/pet\njson\n{\n  \"apiVersion\": \"1.0.0\",\n  \"swaggerVersion\": \"1.2\",\n  \"basePath\": \"http://localhost:8002/api\",\n  \"resourcePath\": \"/v1/pet\",\n  \"produces\": [\n    \"application/json\",\n    \"application/xml\",\n    \"text/plain\",\n    \"text/html\"\n  ],\n  \"apis\": [\n    {\n      \"path\": \"/v1/pet/{petId}\",\nwith responses working on this:\nhttp://localhost:8002/api/pet/1\njson\n{\n  \"id\": 1,\n  \"category\": {\n    \"id\": 2,\n    \"name\": \"Cats\"\n  },\n  \"name\": \"Cat 1\",\n  \"photoUrls\": [\n    \"url1\",\n    \"url2\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"tag1\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"tag2\"\n    }\n  ],\n  \"status\": \"available\"\n}\nSo i have to guess something else needs to be fixed on your side.\n. Since I can't reproduce this, can you please reopen if you can't figure it out?\n. to be clear, this is not an update to swagger-core 1.3, or am I missing something?\n. @OliverKK that's not really an error, in later builds of swagger-core it is an INFO.  Can you update to 1.3.1-SNAPSHOT?  See here...\nhttps://groups.google.com/forum/#!topic/swagger-swaggersocket/lN99-GetOLY\n. Hi folks, the @ApiErrors was renamed to @ApiResponses because it's not just for documenting error states.  There are some slight differences in the signature but switching between the annotations is very simple.  See here:\nhttps://github.com/wordnik/swagger-core/blob/2966229f0e9767f481aa147e2231598ae3818e80/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiError.java\nhttps://github.com/wordnik/swagger-core/blob/2966229f0e9767f481aa147e2231598ae3818e80/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiErrors.java\nand here:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiResponses.java\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiResponse.java\n. pushed to maven central\nhttp://oss.sonatype.org/content/repositories/releases/com/wordnik/swagger-play2_2.10/1.3.1/\n. Great @OliverKK !\n. Hi, I understand the need, but that's outside the goal of swagger.  The response model definition cannot vary based on content-type.\nYou CAN, however, return different models depending on the response code.  So a HTTP 299 code, for example (not suggesting that you use that code) can return a completely different model.\n. per design, not supported.\n. Yes folks (and @seanadkinson  has been quite patient with this), it is known that the support for subresources needs to improve.  Samples to help indicate the best behavior will really help make sure it's done correctly.\n. Hi guys, I still don't understand exactly what is not working.  If someone can assemble a solid test case or sample, I can help sort it out.\n. should be addressed in 1.3.7 and later\n. this should be handled by 1.3.9-SNAPSHOT, you can put a \"hidden=true\" in the @Api annotation.\n. Hi, are you saying that the swagger-ui is not sending these fields?  Or when they're verified sent, they're not being received by the server?\nOr perhaps you mean the spec isn't detecting these fields and providing the proper json?  Can you please clarify?\n. Hi, I'll need to see your JSON and how you're annotating the code.  Headers have been well tested, so let's see what's off.\n. Can you pull from master and retry?  I believe this was fixed.\n. I'm sure that swagger-js is doing the right thing, it does need to single-encode the query params, both name and value, before generating the query string:\nhttps://github.com/wordnik/swagger-js/commit/5fa1423acd99be79379b769653c51ba7e23de453\nbut I still cannot reproduce this.  For example, this is what is submitted from master to the petstore sample:\n\nnote the params are correctly space encoded.\nNetwork monitor in chrome dev tools is also as expected:\n\n. Oh, but petstore isn't running master of swagger-ui.  I just updated it to that and you should see the results I had.  Petstore was running an experimental version with authentiation support.  Please clear your browser cache and try again with petstore (i've reverted it) or from swagger-ui/master, which is here:\nhttps://github.com/wordnik/swagger-ui/tree/master/dist\n. great\n. Hi @st411ar I've opened this issue with the SwaggerHub team.  If you could, please contact support there via https://community.smartbear.com/t5/SwaggerHub/ct-p/SwaggerHub. You are correct, the name of the file + folder is a problem when hosting off the file system.  You have two choices with stock swagger-ui:\n1) Use the routes to detect a path segment after api-docs\n2) Put an absolute path in the resource listing to point to the api json files in different locations.\n. In this file:\nhttps://github.com/wordnik/swagger-core/blob/master/samples/no-server/src/main/webapp/api-docs\nNote that the path has an absolute location, which points to these files:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/no-server/src/main/webapp/listings\n. closing as old, please reopen as needed.\n. @rage-shadowman ?\n. Pull requests with tests get priority, in general.  Also when there are pieces changing, they won't be merged immediately.\n. fixed in the develop branch and in 1.3.2-SNAPSHOT in sonatype oss\n. Hi, did you look at this sample?\nhttps://github.com/wordnik/swagger-core/tree/master/samples/java-resteasy\n. Yes, there are many ways to configure swagger.  You can do so without using the Application class at all.  If you can initialize and configure this class:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/config/BeanConfig.scala\nYou can pick up annotated classes outside the web.xml & application context.\n. OK i'm going to close this, please reopen if you have issues.\n. Hi, it's not really a bug, the @JsonProperty annotations are simply not supported in the model processor.  I'll look at the enhancement from @jknova shortly\n. in next version, full jackson support is enabled.\n. My guess is that you have resources with the same nickname (i.e. method name).  Can you post your json for each of the resources?\n. are these two different apps?  You're not deploying them in the same VM are you?\n. You can do it, but you'll need the swagger libraries to live in your container, not your webapp.  That means, if you're using Jetty, the swagger libraries would need to live in ${jetty.home}/lib so they can share classes across the webapp instances.\nIf you don't do this, you should still be able to have two separate api-docs listed, one for each webapp.  I'd recommend starting just one of the apps and making sure that the ui works fine, then the other, and then together.\n. I'm closing, please reopen if you need more info.\n. You'll find the latest, release version of swagger-play2 in this branch:\nhttps://github.com/wordnik/swagger-core/tree/scala_2.10.0/modules/swagger-play2\n. Got it.  I suggest you fork the scala_2.10.0 branch and modify the swagger-play2 module as needed--if you would like to contribute the fixes back you can send a pull request.\nDoes that make sense?\n. Sounds good, thanks for contributing!\n. @andyoll you've migrated the play2 module to swagger-core 1.3?  or are you talking about play 2.2 rc1 + rc2?\n. Hi, the models are now all in scala, and are case classes here:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/main/scala/com/wordnik/swagger/model/SwaggerModels.scala\nThe initialization process is much simpler now, take a look at the java quickstart and it explains it.\n. Great news, let me konw when you'd like a review.\n. Please see here:\nhttps://groups.google.com/forum/#!topic/swagger-swaggersocket/lN99-GetOLY\n. I suggest you put @ApiModelProperty annotations on the fields that you want to appear, and map them appropriately in the dataType annotation field.\nFor types such as XMLGregorianCalendar, you can manually define what those look like, by using the override converter:\nhttps://github.com/wordnik/swagger-core/wiki/overriding-models\n. Take a look at the play2 samples\n. accepted, but i'm changing the artifact name\n. swagger-play2-1.2.6-SNAPSHOT is now in sonatype snapshots:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-play2_2.10/1.2.6-SNAPSHOT/\n. Hi, to use Jersey 2, you will need to use the 1.3.1-SNAPSHOT built specifically for that version of jersey:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-jersey2-jaxrs_2.10/\n. You're probably missing one step--take a look here:\nhttps://github.com/wordnik/swagger-core/wiki/Java-JAXRS-Quickstart#specify-a-swagger-configuration-class\n. Since this is in snapshot, you'll need to add sonatype snapshots to your pom.xml repository:\nxml\n  <repositories>\n    <repository>\n      <id>sonatype-snapshots</id>\n      <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n    </repository>\n  </repositories>\n. Petstore demonstrates required parameters for the Pet object, see below.  Note, there was a defect in swagger-ui that was closed a week or so ago that caused all model properties to appear as optional.\n\n. release v2.0.2 has been pushed, it has this fix.\n. I believe you should not have anything variable in the @Api annotation.  That's the path used for the description.  It does not need to match the actual @Path value.\n. the @Api value represents the location of the documentation.  Having a template there doesn't make sense.\n. @andyoll the issue you are hitting is that Long is of type anyval and cannot be reflected upon.  If you changed it to java.lang.Long, you would see it become an optional type long.\nI will look at the datatype mapping, that should still work.\n. Hi, I think the right thing to do is map java.util.Collection to type List in an override converter so it can be treated as such.  There should be examples on the wiki to do so.\n. Hi @Lorkster this enhancement is in progress but not complete.  Will be in 1.3.6-SNAPSHOT shortly.\n. verified fixed in https://github.com/swagger-api/swagger-core/blob/develop_scala-2.10/modules/swagger-core/src/test/scala/converter/ScalaEnumTest.scala#L21\n. Hi, with swagger-core 1.3, there should be NO effect from jackson on writing the swagger JSON files.  That was done intentionally because if we were using the standard json mapper, some people were required to change their default behavior.\nThat said, if you are including the swagger json providers, this should happen automatically.  Please make sure you have them in your scanning packages!\nhttps://github.com/wordnik/swagger-core/blob/master/samples/java-jaxrs/src/main/webapp/WEB-INF/web.xml#L12\n. Hi, please reopen if you need more info on this.\n. pushed to develop branch, 1.3.1-SNAPSHOT in sonatype OSS\n. published to sonatype snapshots:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-play2_2.10/1.2.6-SNAPSHOT/\n. Thanks @rage-shadowman.  I'm going to close this--if you still have the issue, please reopen.\n. Hi, you need to give some more detail as to what doesn't work.  Please reopen if you're still stuck with this.\n. added in develop branch\n. Hi, not now, the model schemas currently need to be declared locally.\n. No, it's being worked on in the develop_2.0 branch in this repository, you can watch for the release of 1.5\n. @shifu can you explain how you'd want this to work in the swagger-core?  Essentially models need to exist in the runtime, and therefore can be described.  We can add an additional annotation value to say that \"even though the User model is defined here, use the global definition at http://my.company.com/schema#/definitions/User\" or something like that\n. hi, can you please take a look at the updated sample?  There was a fix required for play > 2.0 which is currently in this snapshot:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-play2_2.10/1.2.6-SNAPSHOT/\nThe updated samples are here:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/java-play2\nhttps://github.com/wordnik/swagger-core/tree/master/samples/scala-play2\n. please reopen if still an issue.\n. Howdy, if you're using the Servlet integration, you cannot also use the JAXRS integration.  They'll get in the way in strange ways.\nWith two servlets, the swagger-servlet module will \"merge\" the resources, based on the paths.\n. Thank you--looking into this\n. This has been merged to the develop branch instead of master:\nhttps://github.com/wordnik/swagger-core/tree/develop\nWill publish snapshots today.  Thanks again @andyoll for pushing this effort!\n. Hi, if you are working without using subresources, I believe what you're asking about isn't implemented in swagger-jaxrs BUT it is supported in the swagger-servlet.  I've added the code to the develop branch:\nhttps://github.com/wordnik/swagger-core/commit/e431fb9112b892382eb0392fc2c4f1934b251f5e\n. you're on the wrong project, and if you read the README there is a link to a functional sample.\nhttps://github.com/wordnik/swagger-node-express#read-more-about-swagger\n. Hi, should this be opened in the mokito project?\n. Hi, it was released on the 12th--if you follow here:\nhttps://groups.google.com/forum/#!forum/swagger-swaggersocket\nor on twitter here:\nhttps://twitter.com/reverbfordevs\nYou'll see the announcements.\n. Hi, generics are not introspected correctly.  An alternative approach is to override the definition for the model itself, see here:\nhttps://github.com/wordnik/swagger-core/wiki/overriding-models\n. Hi @trycatchblock it depends on your use case.  I do know that you can't send an Iterable over the wire...\nYou can take a look at the tests to see what's supported\n. closing as not supported\n. Hi, if you're using 1.3.1-SNAPSHOT, the scala-play2-no-format sample should be removed, since the \".{format}\" is gone by default.  Take a look in this branch:\nhttps://github.com/wordnik/swagger-core/tree/develop/samples/scala-play2\nfor a proper, updated sample.  I'll remove the no-format sample now.\n. Hi, this is very hard to do with annotations, as in the jax-rs implementation.  If you're able to take a leap to scala, there is excellent support for operation declaration reuse with Scalatra:\nhttp://www.scalatra.org/guides/swagger.html\nWhere each parameter is really a variable, and can be applied to all operations.\n. Got it--I should have asked what implementation you're using first.\nIn the swagger-node-express module reusing params should actually be quite simple.  I haven't used swagger-jack personally but my guess is that it's not too different.  You can look here:\nhttps://github.com/wordnik/swagger-node-express/blob/master/Apps/petstore/petResources.js\nand see how the params.query(\"...\"), etc. could easily be reused in the resource definition.\nFor the JSON itself, there will be repetition, but the goal is to make the system well documented over having a light JSON payload, since the structure is used primarily for modeling & discovery.\n. Hi, currently it does not\n. please reopen in swagger-spec repo if needed\n. Hi, that is the correct mapping--a java.util.Date, per json-schema, is mapped to that type:\nhttps://github.com/wordnik/swagger-core/wiki/Datatypes#primitives\n. it will be mapped like such:\nhttp://petstore.swagger.wordnik.com/api/api-docs/store?api_key=special-key\njson\n\"shipDate\" : {\n  \"type\": \"string\",\n  \"format\": \"date-time\",\n  \"description\": \"Date shipped, only if it has been\"\n}\nWhich comes from here:\nhttps://github.com/wordnik/swagger-core/blob/master/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/model/Order.java#L80\n. please open in swagger-ui...\n. How are you getting this JSON?  If I modify the unit tests as such:\nModelWithEnumProperty.java\n``` java\npackage testmodels;\nimport javax.xml.bind.;\nimport javax.xml.bind.annotation.;\npublic class ModelWithEnumProperty {\n  public TestEnum e;\n}\n```\nEnumConversionTest.scala\n``` scala\n// ...\n    enumValue.allowableValues should be (AllowableListValues(List(\"PRIVATE\", \"PUBLIC\", \"SYSTEM\", \"INVITE_ONLY\")))\nprintln(JsonSerializer.asJson(model))\n\n```\nI get this, which is expected:\njson\n{\n  \"id\": \"ModelWithEnumProperty\",\n  \"properties\": {\n    \"enumValue\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"PRIVATE\",\n        \"PUBLIC\",\n        \"SYSTEM\",\n        \"INVITE_ONLY\"\n      ]\n    }\n  }\n}\n. subresources currently are required to have @Api annotations (as are regular resources).  Is that a dangerous assumption with subresources?\n. Please reopen if needed.\n. You're missing one line:\n```\nconverter.add(\"java.util.Calendar\", jsonString);\nModelConverters.addConverter(converter, true);\n```\nThis will stick the override converter in the front of the chain (the true param does that).  You'll get the right results.\n. please reopen if you're still having an issue with this.\n. Hi @nikhilingole please reopen if the response in the google group doesn't help you solve your issue.\n. Thanks, this is fixed in develop and pushed to 1.3.1-SNAPSHOT\n. Hi, please give it a shot and open a ticket if you see issues.  Since dropwizard uses jaxrs it should work as-is, as there is no special dropwizard code in swagger.\n. Hey, @jknova this is awesome.  It will take a bit to get the map support properly tested but I'm reviewing this PR.\n. Hi, the annotations should be working fine, per unit tests:\nFormatTest.scala\nSubTypeModelTest.scala\nCan you give more info on the symptoms?\n. Hi @rvinjamu please give a simple example and I should be able to point you towards a solution.\n. Hi, this is quite easy, but there are some other consequences to monkeying with the object names.  But this is the solution.\nJust create a custom model converter that changes the case of the objects when turning them into objects.  For example, say you have this model:\nscala\n@XmlRootElement(name=\"snakeCaseModel\")\nclass SnakeCaseModel {\n  @BeanProperty var bar:Bar = null\n  @BeanProperty var title:String = null\n}\nThe model converter produces this, when read:\njson\n{\n  \"id\": \"snakeCaseModel\",\n  \"properties\": {\n    \"bar\": {\n      \"$ref\": \"Bar\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    }\n  }\n}\nNote the model type will be snakeCaseModel, not SnakeCaseModel.  You then have a model converter that reads the model type and converts it to snake case.  But the challenge is that all references to that model type need to be updated as well:\n``` scala\nclass SnakeCaseConverter extends SwaggerSchemaConverter {\n  override def read(cls: Class[_]): Option[Model] = {\n    super.read(cls).map(model => {\n      val properties = new LinkedHashMap[String, ModelProperty]\n  model.properties.keys.foreach(key => {\n    val p = model.properties(key)\n    val property = p.copy(`type` = toSnakeCase(p.`type`))\n    properties += toSnakeCase(key) -> property\n  })\n  model.copy(id = toSnakeCase(model.id), properties = properties)\n})\n\n}\nval primitives = Set(\"string\", \"integer\", \"number\", \"boolean\", \"array\")\n  def toSnakeCase(str: String) = {\n    primitives.contains(str) match {\n      case true => str\n      case false => Character.toUpperCase(str.charAt(0)) + str.substring(1)\n    }\n  }\n}\n```\nYou add this to the model converters like this:\nscala\nModelConverters.addConverter(new SnakeCaseConverter, true)\nNow the output looks like this:\njson\n{\n  \"id\": \"SnakeCaseModel\",\n  \"properties\": {\n    \"bar\": {\n      \"$ref\": \"Bar\"\n    },\n    \"title\": {\n      \"$ref\": \"string\"\n    }\n  }\n}\n. hi, the scala versioning system is confusing.  As @ddragosd mentioned, the scala version is only relevant if you use scala in your project, since the scala minor versions are not compatible.\nSo if you're using java only, it doens't really matter.  If you're using scala, then you need to match the scala version with the version you use (2.9.1 or 2.10).\nThere actually is a scala 2.10.0 version of swagger, but back to the crazy scala versioning conventions, it's under \"2.10\" not \"2.10.0\".  See here:\nhttps://oss.sonatype.org/content/repositories/releases/com/wordnik/swagger-core_2.10/1.3.0/\n. i suggest you take a look here:  \nhttps://github.com/wordnik/swagger-core/tree/develop/modules/swagger-play2\nthe 1.3.1-SNAPSHOT brings swagger-play2 in-sync with the latest for JAX-RS\n. There will be a version of swagger-play2 which doesn't have any Jaxrs annotations.  But for now, they are required.\n. Just pushed a unit test (and a fix) to do this:\nhttps://github.com/wordnik/swagger-core/blob/develop/modules/swagger-core/src/test/scala/converter/CustomConverterTest.scala#L47\nThis is being deployed to 1.3.1-SNAPSHOT in sonatype right now.\n. looks like that caused a test regression.  Will update shortly\n. added example and uploaded an update to swagger-core-1.3.1-SNAPSHOT to support a new field type:\nhttps://github.com/wordnik/swagger-core/wiki/Overriding-Models\n. Hi, you can get it in swagger-play2-1.3.1, which is now on maven central.\n. this definitely will clean things up in the UI.  But if you use the client generators, etc., you'll have the same problem.  I think the best thing to do is the model converter technique.\n. Hi, I suggest you fork the project and update the libraries.  We can take a look from there.\n. see #374 \n. this shouldn't be necessary since the swagger jaxrs library isn't tied to Jersey, but the swagger-jaxrs library is.\n. Well I don't see an issue.  I just pushed a sample here:\nhttps://github.com/wordnik/swagger-core/tree/develop/samples/java-jersey2\nAnd all seems good.  Please take a look at that and report back what's not working\n. Can you please upgrade to swagger-core 1.3.x?  There will be an enum array of allowable values.\n. Looks like this is a spec question.  Closing...\n. Thanks--I will deploy a SNAPSHOT version as well.\n. Is this the sample in the repo?  Scala or Java?\n. great\n. merged to develop branch \nhttps://github.com/wordnik/swagger-core/commit/4ea892b411a3c14de8c17ee6e0ce63cece8cb622\n. It's done, and if you'd like a preview I would love feedback before we release it.\n. It is private now, but I've just added you to the repo.  You should see it in your github dashboard now\n. Yep, see here https://github.com/wordnik/swagger-docs/wiki/Swagger-RESTful-API-Documentation-Specification\n. @quasipedia thanks very much for the input!  I hope to make the repo public this coming week after we do another rev of review.\nOur goal is to get the current spec documented and clear, and guide the next version.\n. Folks, i'm happy to announce that we have a rewrite of the swagger-spec documented here:\nhttps://github.com/wordnik/swagger-spec\nMany thanks to @webron  in getting this together--we'll be ripping stuff out of the current site as well.\n. Great Jan!  Please take a look and pass on any feedback on the docs.\n. Hi, the issue you're seeing isn't because of using swagger embedded in jetty--it's that you're trying to create two applications inside a single jetty instance.  Swagger has some static resources which are being shared across each application that you're making.\nI'm not sure why you would need two servlets to live under two applications, but i'm assuming you have good reason (usually many rest endpoints can live under a single app).  For example the canonical swagger sample at http://petstore.swagger.wordnik.com has 3 endpoints under the same application\nSo you will need to attach the two servlets under the same application or run different instances.  Deploying swagger in a war will keep the classloaders separate, but since you're running embedded, this isn't an option for you.\n. With swagger, operations on the same path are grouped automatically.  So if you have a path like this:\n/v1/foo/{customerId}\nwith get/put/post operations, they will be grouped under that path.\nThat means in your diagram above, the application2link would represent an instance of swagger (like a webapp or stand-alone embedded jetty instance), the api-listing would contain two values (apilisting1, apilisting2, which are called api declarations in the swagger vocab) and restend1,2,3,4,5 would be operations.\nSo this is quite doable.  Maybe I'm not understanding your question?\n. Hi, I'm going to close this--please reopen if you're still having issues\n. Hi, yes--the config information is static to the web context.  If you're running separate war files, the sandboxing should keep the contexts separate.\n. got it--if you have control over how things are packaged, what you said will work:\n1) keep the swagger-core and swagger-jaxrs libraries in your webapp (sandboxed) files\n2) put the rest of your shared code in the shared files\nThat will solve this problem for you.  I am exploring keeping the contexts non-static, but that's not a quick fix.\n. Thanks for sharing, and glad you have it working.  We'll continue to see if the statics can be moved out of swagger but in the mean time, this is the right approach.\n. Hi, I think you need to post an issue in the plug-in project's repo.  That's a community-driven effort.\n. Howdy, sorry for the delay in responding.  Since Scalatra has a very deep integration with swagger, I suggest you open a ticket in that project.  Furthermore the scalatra 2.3.x version has a completely new integration with swagger and doesn't depend on swagger core.\n. I don't see that?\n```\nfehguy:swagger-core tony$ mvn install\n...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] wordnik-swagger-project ........................... SUCCESS [1.810s]\n[INFO] swagger-annotations ............................... SUCCESS [13.599s]\n[INFO] swagger-core ...................................... SUCCESS [35.856s]\n[INFO] swagger-jaxrs ..................................... SUCCESS [25.985s]\n[INFO] swagger-jaxrs-utils ............................... SUCCESS [4.557s]\n[INFO] swagger-jersey-jaxrs .............................. SUCCESS [0.204s]\n[INFO] swagger-jersey2-jaxrs (Jersey 2.x support) ........ SUCCESS [6.056s]\n[INFO] swagger-servlet ................................... SUCCESS [1.125s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 1:29.578s\n[INFO] Finished at: Mon Dec 02 11:22:53 PST 2013\n[INFO] Final Memory: 31M/74M\n[INFO] ------------------------------------------------------------------------\nfehguy:swagger-core tony$ git status .\nOn branch master\nUntracked files:\n(use \"git add ...\" to include in what will be committed)\n\nswagger-core.sublime-project\nswagger-core.sublime-workspace\nnothing added to commit but untracked files present (use \"git add\" to track)\n``\n. Also, the \"canonical\" build is done via travis-ci, which is shown on the home page for the project.\n. This seems impossible--the introspector is not picking upInteger` as a swagger primitive. What operating system are you on?  Can you please list the libraries under modules/swagger-core/target/lib?\n. Hi folks, thanks for working this out--any chance you can help get the samples working correctly with these changes?\n. please reopen if still an issue\n. This should be fixed in https://github.com/wordnik/swagger-core/commit/b6e73334dd03072abed07537a7c79d00dc4348d3\n. in the sample here:\nhttp://petstore.swagger.wordnik.com\nread the api description--if you enter special-key in the api key area, you'll get options to do post, put, patch, delete.  This also includes the option for how you accept XML or JSON via consumes.\n. Yes, just put something like this:\n\"consumes\" : [\n  \"application/json\",\n  \"application/xml\"\n]\n\n. almost.  The spec says that consumes, produces belong to the operation, not the parameters.  So for petstore:\njs\n\"operations\": [\n  {\n    \"method\": \"POST\",\n    \"summary\": \"Add a new pet to the store\",\n    \"notes\": \"\",\n    \"type\": \"void\",\n    \"nickname\": \"addPet\",\n    \"consumes\": [\n      \"application/json\",\n      \"application/xml\"\n    ],\n    \"parameters\": [\n      {\n        \"name\": \"body\",\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"required\": true,\n        \"type\": \"Pet\",\n        \"paramType\": \"body\"\n      }\n    ],\n    \"responseMessages\": [\n      {\n        \"code\": 405,\n        \"message\": \"Invalid input\"\n      }\n    ]\n  }\n. what language/server framework do you use?\n. You can build the server from your json files.  See here for an example, it should do everything you need.  Some tweaking will be needed to use resteasy, but that should be easy:\nhttps://github.com/wordnik/swagger-codegen#to-build-a-server-stub\n. Hi @mikemil I'm going to close this, I'm assuming you got going with things.  One other thing to add, there is now a YML to Swagger converter here:\nhttps://github.com/wordnik/swagger-codegen/wiki/Creating-Swagger-JSON-from-YAML-files\n. Swagger is geared towards REST, not RPC, so you can do it but it may be difficult. it looks like the authorization filter has been removed--I'll merge this and add it back later.  Thanks!\n. yes, see here, there are a couple options (note these are community-driven projects)\nhttps://github.com/wordnik/swagger-core/wiki/Java-Integrations\nspecifically:\nhttps://github.com/dotcy/swdogen\nhttps://github.com/ryankennedy/swagger-jaxrs-doclet\nnote, you won't be able to use the filtering capabilities of the description with static techniques...\n. Hi, I'm going to close this--please reopen if you're having issues.\n. hi, the regex in path is not supported\n. I believe the annotations cannot be read by swagger when they are on a superclass.\n. It's very possible.  I haven't dug into this too much but I do know it's doable.\n. the annotations now are marked as @Inherited so this should be supported.\n. Hi, the @Api(value=\"/\") is just for the documentation purposes, and isn't really allowed by Swagger.  Can you point that to some other location?  Again, this doesn't affect the operation of your API, just where the documentation is hosted (i.e. /api-docs/foo for value=\"/foo\")\n. hi marcello, i'm going to close this--please reopen if you're still having issues.\n. Hi @chadhahn the issue is that setting an API to be documented on \"/\" isn't allowed in the spec.  So if there was a work-around in an older version, that was outside the spec.\nTo be more specific, say you have an api that responds on the root of the servlet @Path(\"/\").  This is totally valid per swagger, and swagger-core-1.3.  Your still have to mount your documentation \"somewhere\", and the default would be for the resource listing to be here:\n/api-docs\nThe resource listing points to api declarations, which means they cannot occupy the same path.  Thus, the annotation @Api(\"/\") is not valid, since it would want to describe the root api (@Path(\"/\")) under this location:\n/api-docs\nWe can see where this goes--the two cannot be in the same location.  So the documentation can be put anywhere under the resource listing, such as here:\n/api-docs/root\nBy adding the annotation @Api(\"/root\").  This does NOT affect where the actual API responds (\"/\") and is solely for documentation purposes.\nWe can debate if this is the best design for the swagger specification--I can also debate whether or not mounting an API under the root of the servlet path is a good idea or not.  It is, however outside the spec, and shouldn't be supported in the underlying implementation.\nDoes that make sense?\n. I've reproduced this.  It's not behaving per design, as you've pointed out.\n. see here for a test case:\nhttps://github.com/wordnik/swagger-core/blob/8ab9618f0aae33881f2782f2103456ec6a77695b/modules/swagger-jaxrs/src/test/scala/RootResourceTest.scala\n. Wink is JAX-RS, so I suspect so.  You should try it out and open an issue if you find a bug in swagger for jax-rs.\n. Hi, the issue is that you need to have two things--one is a resource listing, the other is the api declaration.  The resource listing is typically under a path like /api-docs while the api declaration is typically under a path like /api-docs/consumers\nIn your example, they are trying to occupy the same path which means something is misconfigured.  The swagger JSON files try to avoid collisions with the actual rest APIs.\nCan you take a look at https://github.com/wordnik/swagger-core/tree/master/samples/scala-servlet as an example?\n. What you're describing seems correct--your web.xml should have these two entries:\n``` xml\n   swagger servlet reader \n\nDefaultServletReaderConfig\ncom.wordnik.swagger.servlet.config.DefaultServletReaderConfig\n2\n\nswagger.resource.package\ncom.wordnik.swagger.sample.servlet\n\n\nswagger.api.basepath\nhttp://localhost:8002\n\n\napi.version\n1.0.0\n\n\n swagger api declaration \n\nApiDeclarationServlet\ncom.wordnik.swagger.servlet.listing.ApiDeclarationServlet\n\n\nApiDeclarationServlet\n/api-docs/*\n\n```\nPerhaps you can share a simple version of your project?\n. i'm closing this, please reopen if you're having issues still.\n. Can you give some more info on this?\n. Hi, this has been fixed:\nhttps://github.com/wordnik/swagger-core/commit/5c38f86779a78dc640179cb8ed69016e3fb9ced9\nWill push this update to sonatype snapshots shortly, in the mean time you can build locally\n. Hi I believe the annotations in subclasses are not preserved by swagger.  There are a couple other tickets on this issue, but it's not expected to work as-is.\n. Hi, this is not a very helpful issue report.  You can reopen the issue if you like, but please provide some helpful details.\n. You can specify a filter programmatically in your code like such:\n``` java\nimport com.wordnik.swagger.config.;\nimport com.wordnik.swagger.core.filter.;\n...\nFilterFactory.filter = (SwaggerSpecFilter)new YourFilter();\n```\n. Hi, I've made this simple with a new parameter in the BeanConfig class.  Please see the updated sample configuration:\nhttps://github.com/wordnik/swagger-core/blob/develop/samples/java-jaxrs-cxf/src/main/resources/applicationContext.xml#L50\nand filter class:\nhttps://github.com/wordnik/swagger-core/blob/develop/samples/java-jaxrs-cxf/src/main/java/com/wordnik/swagger/sample/util/ApiAuthorizationFilterImpl.java\nThis is in the 1.3.2-SNAPSHOT which is in sonatype-snapshots repo\n. Hi, it is supported, please see here:\nhttps://github.com/wordnik/swagger-core/wiki/Parameters\nReopen if you have issues.\n. I took an easier route in the 1.3.2-SNAPSHOT (develop branch):\nhttps://github.com/wordnik/swagger-core/blob/develop/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/listing/SwaggerProviders.scala#L31\nscala\n    if(mediaType.isCompatible(MediaType.APPLICATION_JSON_TYPE))\n      out.write(JsonSerializer.asJson(data).getBytes(\"utf-8\"))\n    else if (mediaType.isCompatible(MediaType.APPLICATION_XML_TYPE))\n      out.write(JsonSerializer.asXml(data).getBytes(\"utf-8\"))\n. Can you please see #406 to see if that solves your issue?\n. for case classes, you need to add @field annotations like such:\nscala\n@(ApiModelProperty @field)(position=1)\n. Yes, that seems to get me every time.  Which example did you follow?\n. The application level info should be set in a Global.scala like such:\n``` scala\nimport play.api._\nimport com.wordnik.swagger.config.\nimport com.wordnik.swagger.model.\nobject Global extends GlobalSettings {\n  val info = ApiInfo(\n    title = \"Swagger Sample App\",\n    description = \"\"\"This is a sample server Petstore server.  You can find out more about Swagger \n    at http://swagger.wordnik.com or on irc.freenode.net, #swagger.  For this sample,\n    you can use the api key \"special-key\" to test the authorization filters\"\"\", \n    termsOfServiceUrl = \"http://helloreverb.com/terms/\",\n    contact = \"apiteam@wordnik.com\", \n    license = \"Apache 2.0\", \n    licenseUrl = \"http://www.apache.org/licenses/LICENSE-2.0.html\")\nConfigFactory.config.info = Some(info)\n}\n```\nhowever, I don't see it being picked up.  Can you open a new issue for that?  Should be a trivial fix.\n. pushed to swagger-play2-1.3.2-SNAPSHOT, and added to sample here:\nhttps://github.com/wordnik/swagger-core/commit/12654026e5c76c6d1cc2bd7916aefe2ae1aff801\n. please try beanConfig.setScan(true) as the last method\n. if you can send a pull-request with a sample with no web.xml, i'll get it to work, document it, and put it in the samples repo. There are a bunch of different ways to do so without web.xml\n. I'm going to check it out in a bit and will let you know if I have questions--thx for pushing that\n. I'm getting this error when building:\nfehguy:jboss7-empty-web-xml tony$ mvn clean package\n[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for com.wordnik:jboss7-empty-web-xml_2.10-ear:ear:1.3.2-SNAPSHOT\n[WARNING] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-ear-plugin is missing. @ line 17, column 18\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO] \n[INFO] jboss7-empty-web-xml\n[INFO] jboss7-empty-web-xml_2.10-war\n[INFO] jboss7-empty-web-xml_2.10-ear\n[INFO]                                                                         \n[INFO] ------------------------------------------------------------------------\n[INFO] Building jboss7-empty-web-xml 1.3.2-SNAPSHOT\n[INFO] ------------------------------------------------------------------------\n[INFO] \n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ jboss7-empty-web-xml_2.10 ---\n[INFO]                                                                         \n[INFO] ------------------------------------------------------------------------\n[INFO] Building jboss7-empty-web-xml_2.10-war 1.3.2-SNAPSHOT\n[INFO] ------------------------------------------------------------------------\n[WARNING] The POM for xalan:xalan:jar:2.7.1.jbossorg-2 is missing, no dependency information available\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] jboss7-empty-web-xml .............................. SUCCESS [0.133s]\n[INFO] jboss7-empty-web-xml_2.10-war ..................... FAILURE [0.530s]\n[INFO] jboss7-empty-web-xml_2.10-ear ..................... SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\nIdeas?  Is there a repository in your settings.xml that I need to add?\n. I've resolved the dependency issue with this explicit dependecy:\nxml\n<dependency>\n   <groupId>xalan</groupId>\n   <artifactId>xalan</artifactId>\n   <version>2.7.1</version>\n</dependency>\nCan you please tell me how you start up the app?\n. I think we can close this out as the issue was reflections.\n. Hi, you'll need to share a bit more to figure this out.  Please reopen with the full JSON output.\n. Hi, this is due to this logic:\nhttps://github.com/wordnik/swagger-core/blob/develop/modules/swagger-core/src/main/scala/com/wordnik/swagger/converter/ModelPropertyParser.scala#L73\nscala\n  def extractGetterProperty(methodFieldName: String): (String, Boolean) = {\n    if (methodFieldName != null &&\n      (methodFieldName.startsWith(\"get\")) &&\n      methodFieldName.length > 3) {\n      (methodFieldName.substring(3, 4).toLowerCase() + methodFieldName.substring(4, methodFieldName.length()), true)\n    } else if (methodFieldName != null &&\n      (methodFieldName.startsWith(\"is\")) &&\n      methodFieldName.length > 2) {\n      (methodFieldName.substring(2, 3).toLowerCase() + methodFieldName.substring(3, methodFieldName.length()), true)\n    } else {\n      (methodFieldName, false)\n    }\n  }\nLooking at alternatives to just detecting \"is_\"\n. is/has (boolean), get/set (other) are typical for POJOs, and are used to determine a property name (getFoo => foo, isFoo => foo, etc.)  is_, has_ can have special treatment.  To be clear, you're looking to see that is_* is preserved?\n. Looks like this is an issue with both the internal (1.3.x) introspection and jackson as well (1.5.x).  Since the focus is on 1.5.x right now, I'm looking into a solution.\nThe Jackson BeanDescription method findProperties() is taking public property names like such:\nis_persistent\ngettersAndHaters\nand mangling them to _persistent and tersAndHaters\nI could use some help from @cowtowncoder on this one:\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-core/src/main/java/com/wordnik/swagger/jackson/ModelResolver.java#L172\njava\n    for (BeanPropertyDefinition propDef : beanDesc.findProperties()) {\n      Property property = null;\n      String propName = propDef.getName();\nWhere the properties in this test class:\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-core/src/test/scala/models/ModelPropertyName.java\njava\npublic class ModelPropertyName {\n  public boolean is_persistent() { return true; }\n  public String isometric() { return null; }\n  public String gettersAndHaters() { return null; }\n}\nemerge mangled\n. Thanks, any way to detect as \"getXxx\" as a getter and not treat \"getxxx\" as a getter?  Likewise \"isXxx\" is a getter but \"isxxx\" or \"is_xxx\" is not \n. @kieranbenton @mkantor I've addressed this in 1.3.13-SNAPSHOT.  I'm keeping this open so it can be tracked for 1.5.x\n. It's a hack but it works:\nhttps://github.com/swagger-api/swagger-core/commit/d183d8cd0f735fc18f5a50dcd52e2076da69b5df\nRequired get to be followed by an uppercase or uses original field name.  Same behavior for is.\n. Please try 1.3.11, just released today\n. great!  Send thx to @gorgonblot for making the fix\n. You actually can specify the model in the @ApiImplicitParams through the dataType field.  It needs to be the fully-qualified class name, though.\n. This commit should force cache clearing during stop of the app, which I believe happens on recompile/deploy.\n. While an overhaul of the whole documentation scheme is in progress, there is documentation to set required fields for java implementations:\nhttps://github.com/wordnik/swagger-core/wiki/Java-JAXRS-Quickstart#annotate-your-models\nSwagger also honors the @XmlElement(required=true) annotation.\n. declare a customer converter:\nscala\nclass JavaDateTimeConverter extends SwaggerSchemaConverter {\n  override def typeMap = Map(\"date\" -> \"long\")\n}\nadd the converter to the ModelConverters:\nscala\n  ModelConverters.addConverter(new JavaDateTimeConverter, true)\nand this will translate all Date values into long, which map out like such:\njson\n{\n  \"id\": \"ModelWithDate\",\n  \"properties\": {\n    \"dateValue\": {\n      \"type\": \"integer\",\n      \"format\": \"int64\"\n    }\n  }\n}\n. pushed to 1.3.2-SNAPSHOT\n. thanks, this is a carry-over from programming in scala :(  I'll update this in the develop branch, which will promote to master after the next release.\n. Hi, I can't reproduce this either.  Can you please reopen with more environmental details?\n. Hi, take a look at the swagger-ui project:\nhttps://github.com/wordnik/swagger-ui\nYou can probably just copy the dist package into the no-server webapps folder.  Remember if you send a pull request to do so against the develop branch!\n. probably :)\n. merged into the develop branch\n. thanks, this is fixed in the develop branch and will be pushed today\n. this is now available on sonatype-snapshots\n. This is fixed in 1.3.2-SNAPSHOT. Could you please try that?\n. it's happening now, should be up in an hour or two.\n. I would be happy to merge this but it's breaking the unit tests.\n. thanks\n. merged to develop:\nhttps://github.com/wordnik/swagger-core/commit/52b7e0b4aee3ea6aa19422ffeeb95dcce53f2c35\n. Hi, can you send the PR into the develop branch, please?  And since you fixed the issue, perhaps you can add that as well.\n. see #434 \n. I suggest you run mvn package and check the libraries in the target/lib folder in modules/swagger-core and verify that intellij brought in the same ones.\nAlso make sure you're using the right scala version (2.10 for the develop branch).\n. what is your swagger dependency?\n. Can you remove the swagger-codegen dependency?  There are some models that collide between that and swagger-core.\n. Do you mean, how can you include the codegen library in the same project?  Or what does the codegen library do?\n. Got it.  There's some work to do in the codgen to make them compatible, so right now, it's simply not possible to have both core + codegen in the same VM unless you can sandbox things somehow.\n. I'm closing this ticket, and we'll prioritize getting the namespaces fixed in codegen.  It's quite simple to separate them in the code, but tricky to consolidate models.  See here:\nhttps://github.com/wordnik/swagger-codegen/issues/123\n. There are two FORM submits in the petstore sample.  Do you see the behavior on the 2nd, which is here:\nhttp://petstore.swagger.wordnik.com/#!/pet/updatePetWithForm_post_2\n. Are you running the petstore sample?  Or this is against your own service?\nI just tested on our online version and it's working fine, for both operations.\n. When I go to that URL, i don't get the api-docs.  What is the full URL to the resource listing?\n. Got it--and yes, I'm seeing that error from master as well.  Can you pull the swagger-ui \"oauth2\" branch and try again?  I will look into this issue as well in master\n. great--I will get that updated in https://github.com/wordnik/swagger-ui shortly.  Closing this issue.\n. Yes, this is a challenge, because it takes the overridden model (MyModel) as having the definition you supply at face value.  Here is an alternative approach:\n- Create a Model with the representation that you'd like.  So for MyModel you might have MySimpleModel which represents how you want it.  It would contain a proper reference to MyChildModel\n- Create a custom ModelConverter like such:\n``` scala\nclass MyModelConverter extends ModelConverter with BaseConverter {\n  private val LOGGER = LoggerFactory.getLogger(this.getClass)\ndef read(cls: Class[_], typeMap: Map[String, String]): Option[Model] = None\n// note the lowercase key!\n  override def typeMap = Map(\"my.package.mymodel\" -> \"my.package.MySimpleModel\")\n}\n```\nI haven't tried it, but I think that'd do the trick.\nI'm also interested in simplifying the ModelConverter process, so if you have thoughts, please share them--probably best on the google group.\n. I am \"java-ifying\" many of these interfaces.  How about creating a new issue to have the ModelConverters work with a builder, or expose only java collections?\n. Moving to M2\n. This is almost impossible to support, but we can the facility to add models manually to the spec.\n. There are a couple maven plug ins to do this, is what you've written different?  See https://github.com/wordnik/swagger-core/wiki/Java-Integrations\n. See here:\n\"A JavaDoc Doclet that can be used to generate a Swagger resource listing suitable for feeding to swagger-ui.\"\nhttps://github.com/ryankennedy/swagger-jaxrs-doclet\n\"It's simple. You develop your Web service API using standard Java technologies and attach Enunciate to your build process. Suddenly, your Web service API is boasting some pretty impressive features:\nFull HTML documentation of your services, scraped from your JavaDocs.\nClient-side libraries (e.g. Java, .NET, iPhone, Ruby, Flex, AJAX, GWT, etc.) for developers who want to interface with your API.\nInterface Definition Documents (e.g. WSDL, WADL, XML-Schema, etc.)\nEtc.\"\nhttp://enunciate.codehaus.org/index.html\n. I have added a swagger-utils module to swagger core in the develop branch--you can point a CLI tool to any jar and have it extract JSON from the models.  Same goes for the APIs--this is exactly how the unit tests read the JAXRS resources.  If you're interested in something there, I'd send a PR to that module in swagger-core:\nhttps://github.com/wordnik/swagger-core/tree/develop/modules/swagger-utils\n. Hi, I think a sample with spray+swagger would be great!\n. see above for a good implementation of swagger for spray.\n. moved to #588 \n. Hi, please update your project to use swagger-play2 for 1.3.4 and it should work as-is.\n. HI, I believe this is merged into the develop branch and will be released in 1.3.3\n. I believe this was merged manually.\n. supported in 1.3.7\n. No, actually, type refers to primitive types in the schema, arrays or objects:  https://github.com/wordnik/swagger-spec/blob/master/versions/1.2.md#431-primitives.\nBut the first comment--how is this created?  Can you share more?\njson\n{\n  \"$ref\": \"array\",\n  \"items\": {\n    \"type\": \"IndividualModel\"\n}\n. json schema support is better in 2.0, and i believe the above is correct.  reopen if not.\n. this is a swagger spec issue which was addressed but it does look like the deprecated field is not available in the Operation.java class.\n. Yes, not supported but we can target this for 1.3.5\n. Hi, just pushed to maven central, and documented here:\nhttps://groups.google.com/forum/#!topic/swagger-swaggersocket/cXCnE3cyKBA\n. hi @apemberton I think the implementation is a bit picky about how the Bean is annotated.  The annotations need to be on the property, not the method.  For example:\n``` java\npublic class QueryResultBean {\n  @QueryParam(\"skip\")\n  private Integer skip;\n@QueryParam(\"limit\")\n  private Integer limit;\npublic Integer getSkip() {\n    return skip;\n  }\n  public void setSkip(Integer skip) {\n    this.skip = skip;\n  }\npublic Integer getLimit() {\n    return limit;\n  }\n  public void setLimit(Integer limit) {\n    this.limit = limit;\n  }\n}\n```\nThe sample project is here:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/java-jersey2\nAnd shows the above bean working fine.\n. see also https://github.com/wordnik/swagger-core/issues/543\n. This is your problem then (note the scanner package com.wordnik.swagger.jersey.config.JerseyJaxrsConfig):\nxml\n  <servlet>\n    <servlet-name>Jersey2Config</servlet-name>\n    <servlet-class>com.wordnik.swagger.jersey.config.JerseyJaxrsConfig</servlet-class>\n    <init-param>\n      <param-name>api.version</param-name>\n      <param-value>1.0.0</param-value>\n    </init-param>\n    <init-param>\n      <param-name>swagger.api.basepath</param-name>\n      <param-value>http://localhost:8002/api</param-value>\n    </init-param>\n    <load-on-startup>2</load-on-startup>\n  </servlet>\nThe scanner is what inspects the annotations, and unfortunately is very picky to the jersey versions.  I'm pretty confident that once you have the correct scanner, it'll work as expected.\n. Not a big change, no.  I wanted to get initial support out, we can round it out in the next dot release.\n. Hi, can you please try the 1.3.6-SNAPSHOT?  It is not in a formal release yet.\n. Hi @swarupe04 It is definitely supported.  Please take a look at this sample:\nhttps://github.com/swagger-api/swagger-core/tree/develop_2.0/samples/java-jaxrs-no-webxml\nIt is a jaxrs 1.x sample but the spirit is the same.  All configuration for swagger is done in the Bootstrap.java.\n. Master should be fine. Can you share the bean property?  Email is fine if its private\n. Tony@swagger.io\n. Hi, there was a version mismatch and putting this dependency for swagger:\n\"com.wordnik\" %% \"swagger-play2\" % \"1.3.3\"\nshould solve the issue.\n. Hi, just released 1.3.3, so your dependencies should be updated as such:\n\"com.wordnik\" %% \"swagger-play2\" % \"1.3.3\"\nI'm going to get the versions back in sync by releasing swagger-core-1.3.4 next, skipping swagger-core-1.3.3.\n. Hi, please pull master, this issue was resolved today, and play2 libs have been deployed under version 1.3.3\n. Hi, I believe you're using the swagger servlet support when you should really be using the swagger jaxrs support.  If you're still having issues, can you reopen this?\n. added in https://github.com/swagger-api/swagger-core/commit/13b6e352ef54da4205c9f980d77b118d293bd5c8\n. Hi, I haven't looked at the possibility of swagger having interopt with odata.  how do you envision this working?\n. I haven't honestly dug in too much, but when I looked at the odata structure previously, I felt like it could fit inside swagger just fine.  Where it gets murky is in how the parameters are generated to build filters, etc., which would need some custom work in the UI.\n. I am moving this to swagger-spec:  https://github.com/swagger-api/swagger-spec/issues/230\n. please reopen if you're still having an issue.\n. hi @adina270898 authorization code grant will be added to a future sample.\n. Do you mean the swagger spec 1.0?  That does not support authorization\nOn Mar 31, 2014 8:36 AM, \"adina270898\" notifications@github.com wrote:\n\nHello Tony,\nI want to ask you if you know a web application that uses Swagger 1.0\nversion and where I could find some docs/specifications about Swagger 1.0.\nThank you,\nAdina\nOn Thursday, March 20, 2014 9:37 AM, Adina Tusa adina270898@yahoo.com\nwrote:\nThank you Tony.\nI've already downloaded the Scala oAuth2 sample with and i run with both\ngrants and I saw what's going on.\nMy only problem is that if I emulate a HTTP request from Dev HTTP client\nto a endpoint that's described in the json, I supposed that on HTTP\nResponse I have somehow the code, but in fact I receive the html page that\nprompt for username/password. So, I figured that the endpoint described in\nthe json is the final endpoint (where the username and password are sent).\nHave a nice day!\nOn Thursday, March 20, 2014 6:31 AM, Tony Tam notifications@github.com\nwrote:\nhi @adina270898 authorization code grant will be added to a future sample.\nReply to this email directly or view it on GitHub.\n\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/456#issuecomment-39103032\n.\n. see the swagger-spec for 2.0\n. This issue has drifted some since opened.  I'm opening a new one here:\n\nhttps://github.com/swagger-api/swagger-spec/issues/229\n. Hi, please add a test case to the develop branch and reopen.\n. This is fixed in 1.5.x, please see this sample:\nhttps://github.com/swagger-api/swagger-core/tree/develop_2.0/samples/java-jersey2\n. Fixed in 1.3.3-SNAPSHOT\n. Hi, there are unit tests to ensure models are correctly extracted with deep nesting.  See this test:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/test/scala/converter/ModelPropertyTest.scala#L21\nPlease pull master from swagger-ui and see if you're still having the issue, we resolved a nesting issue just yesterday.  If you still see an issue, open a ticket in that project.\n. If this is not addressed in #497, can you please add a test case to the develop branch and reopen?\n. Good idea.  In the JSON Schema we could do something like this:\njson\n{\n   \"type\": \"string\",\n   \"format\": \"password\"\n}\nWe just need to add some logic to the annotations to pick up the format hint.  I'll keep this open as a feature.\n. Hi, since we now have a separate repo for the spec, do you mind opening a ticket there to add a password format for string types?\n. This is now supported in both the core and javascript libraries for develop_2.0\n. good question, i'll reopen this as a reminder to document.  dataType must be a fully-qualified class, so I'm certain that password is not correct.\n. @to-kra TBH the mechanism for multiple swaggers is now formalized, previously it was a hack that shouldn't have worked :). Hi, inner classes are not introspected by default.  There can be other issues with this so I think it's best to avoid trying to support it.\n. Hi @quasipedia I'm a bit late to the conversation.  The intention of the responseModel field in the ResponseMessage object is simple--to give the consumer a chance to parse it.  It is NOT required if you want to use the HTTP status code to tell you about the success/failure/informatin about the operation, but if it has information to consume, it can be used.\nYou are correct the Operation has an implicit 200 response code associated with the model being returned.  As well, the Petstore sample should return ApiResponse as the responseModel IF it is intended to be parsed.\nSo the correct behavior imho is as follows:\n- the Operation has an implied 200 response code associated with the response type.\n- The ResponseMessages have an optional responseModel if and only if the message is intended for consumption\n- Having a responseMessage with code 200 is redundant and would be bad practice.\n. Which spray integration module are you using?\n. Wow, I've never seen spray being used with swagger like this, very cool.  I don't believe the introspection can find the inner classes.  You'll have to declare them outside the MyWebView object, I believe.  There may be a way to add them into the introspector, but I'm not sure it'll be consistent.\n. This is an old issue, and I believe the parsing has been addressed after 1.3.7.  Can you please reopen if still having trouble with it?\n. hi, please reopen if you have this issue and you think it's because of the swagger libraries.\n. @valdemon allowMultiple is intended to support passing multiple values for the same parameter--for instance, a query param:\nfoo=a,b,c,d\nif you're looking for this:\nfoo=a&bar=b\nas query params, you don't need to pass it.\nRegarding the format for the first case, there is no standard, only convention, and that varies wildly between formats, servers, developers and the phase of the moon.  We're adding a format parameter to allow that to be described, which should end the chaos.\n. Hi, @valdemon thanks for following up.  I think the correct course of action is to change the specification to support the array type, add a format attribute, and get rid of the allowMultiple syntax.\nIn the mean time, the allowMultiple will remain, for query parameters, until the 2.0 spec.  I believe having a @QueryParam annotation with type List would allow swagger to auto-detect and generate the right structure for the 2.0 spec.  I think we can nudge in a format param now, since it is non-breaking for the spec, and will solve the immediate need.\nThe current UI will turns the values into a CSV string.  Again, not ideal.\n. 1.5.0 will use pure jackson and therefore the @JsonView annotation.\n. Hi, you should be able to use the fix in #588 to address the same goal.\n. Thanks.  Yes, this will not hurt other to change.\n. it's pushed into 1.3.3-SNAPSHOT, which is in sonatype-snapshots now.\n. Hi, I have not been able to reproduce this--if you have any tips on how to do so, please pass them on here.  In the mean time, there was a defect (https://github.com/wordnik/swagger-core/issues/486) which may be relevant--could you please try this with 1.3.3-SNAPSHOT?\n. FYI the snapshots are here:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-core_2.10/1.3.3-SNAPSHOT/\nDid you test against the develop branch, which builds the 1.3.3-SNAPSHOT?\n. per @elisid 's request...\n. Hi, this isn't really right.  A LinkedHashMap will preserve the order which items are inserted.  There is no way to guarantee the order of property reflection of class members (in a scala case class, you can), if you want a particular order, you must use the position annotation.\n. can you create a reproducible test case?  If this is truly a bug I'd like to fix it quickly\n. Yes, this is badly needed. \n. Hi, this is on the server code, not in the spec--it makes the auto-generated swagger description hidden for a particular field.\nThere are many reasons to do this, some could be with how the framework is parsed by the swagger framework.\n. Hi, can you explain more?  Maybe add a screenshot?\n. please reopen if there's still an issue\n. added nicknames to annotations.\n. Thanks guys--i spent some time last night scratching my head over this.  The result makes sense now.\n. agreed, no clear (single) solution for versioning.  I suggest opening a ticket in https://github.com/wordnik/swagger-spec (or adding notes to one there).\n. Hi, I believe this has been fixed in issue https://github.com/wordnik/swagger-js/issues/82.  Can you please see that you're using master from swagger-ui/dist, or version 2.0.12 or later?\n. will be in 1.3.3-SNAPSHOT.\n. For now, there is the opportunity to override datatypes with the @ApiModelProperty annotation, like such:  https://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-core/src/test/scala/1_3/models/ModelWithModelPropertyOverrides.java#L7-L18\n```\npublic class ModelWithModelPropertyOverrides {\n  @ApiModelProperty(dataType = \"List[models.Children]\")\n  private String children;\npublic String getChildren() {\n    return children;\n  }\npublic void setChildren(String children) {\n    this.children = children;\n  }\n}\n```\nwhere you override the datatype with whatever you like, which means generics can be expressed in any concrete class.\n. Partial solution, moving to M2 for more investigation and more use cases.\n. It is technically impossible to support all forms of generics.  The general solution is to manually map generics to an interface or type if runtime reflection is not possible.  There will be guidelines for M2, which we're working on.\n. @chenjianjx please see my comment https://github.com/swagger-api/swagger-core/issues/498#issuecomment-73732315\n. @Marvel77 thank you for sharing\n. Will test for this case for m2\n. I believe the logic for this is in swagger-servlet but must not have been merged to the jaxrs implementation.  If you can send a pull request to the develop branch that passes the tests, would be great to merge it.\n. yes, clean install will run tests.\n. fixed in https://github.com/swagger-api/swagger-core/commit/d9fafcd511dcfecf2fa456dd3604b601214baaca\n. I haven't chased down the version of json4s used in that plugin.  Perhaps you can give some more info on what it's using?\nswagger-core is using 3.2.4 of json4s.\n. Then I'd try evicting the 3.2.4 in favor of this version, and you shouldn't get that error.\n. swagger is built with maven, and the play module with sbt.  I've just deployed 1.3.3-SNAPSHOT to sonatype oss which depends on json4s-3.2.5.  I've also pushed the play module with this dependency, let me know how it goes.\n. I'm still looking to fix something before releasing.  In the meantime, I've pushed the snapshot again, you should see it any minute.\n. Jeez, they keep deleting the snapshots.  Pushing again.\nWe do have a version mismatch where the release version will be 1.3.4 for both swagger-core and swagger for play.  I'll announce it here when it's done.\n. Hi, just released 1.3.4!\n. Somehow this PR was blown away in a merge\n. Hi, looking at putting this in 1.3.5\n. please see comments here:\nhttps://github.com/salimane/java-jersey2/pull/1\nThen running mvn clean package tomcat7:run will work fine.\n. Yes it is\n. Hi, the problem is, these fields don't actually exist in the model property section of the swagger spec.  So there's no place to put them in the output (the annotations shouldn't have them).\nThe spec is here:\nhttps://github.com/reverb/swagger-spec/blob/master/versions/1.2.md#529-property-object\nand as you see, those fields don't exist for models.\n. Hi, we don't plan on removing them as they are not harming anything--we will make sure they're properly documented.  @kongchen are you in the swagger 2.0 workgroup?\n. pushed in 1.3.4\n. I assume upgrading to 1.3.x is not possible?\n. Take a look here:\nhttps://github.com/wordnik/swagger-core/wiki/Overriding-Models/938057a0e56f30fa735c736a938a4abe042ef0f7\n. There is some ordering that's causing problems here--i'll leave this open and we'll try to get it fixed.\n. Take a look here:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/java-jaxrs-no-annotations\nThere are some restrictions, though.  For instance, it's common to return type Response instead of the concrete return type.  In these cases, it's impossible to determine the correct return type.  There are also notes, etc., that cannot be extracted without custom annotations.\nSend feedback!\n. Hi, if you want the clients (swagger-ui, codegen) to function properly, you should stick to the types supported in the spec.  That said, the frameworks probably don't need to override the type format directly--this is done by the implicit mappings:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/main/scala/com/wordnik/swagger/model/SwaggerSerializers.scala#L102-L129\nscala\n  def toJsonSchema(name: String, `type`: String): JObject = {\n    `type` match {\n      case \"int\"       => (name -> \"integer\") ~ (\"format\" -> \"int32\")\n      case \"long\"      => (name -> \"integer\") ~ (\"format\" -> \"int64\")\n      case \"float\"     => (name -> \"number\")  ~ (\"format\" -> \"float\")\n      case \"double\"    => (name -> \"number\")  ~ (\"format\" -> \"double\")\n      case \"string\"    => (name -> \"string\")  ~ (\"format\" -> JNothing)\n      case \"byte\"      => (name -> \"string\")  ~ (\"format\" -> \"byte\")\n      case \"boolean\"   => (name -> \"boolean\") ~ (\"format\" -> JNothing)\n      case \"Date\"      => (name -> \"string\")  ~ (\"format\" -> \"date-time\")\n      case \"DateTime\"  => (name -> \"string\")  ~ (\"format\" -> \"date-time\")\n      case \"date\"      => (name -> \"string\")  ~ (\"format\" -> \"date\")\n      case \"date-time\" => (name -> \"string\")  ~ (\"format\" -> \"date-time\")\n      case _           => {\n        val ComplexTypeMatcher = \"([a-zA-Z]*)\\\\[([a-zA-Z\\\\.\\\\-]*)\\\\].*\".r\n        `type` match {\n          case ComplexTypeMatcher(container, value) => \n            toJsonSchemaContainer(container) ~ {\n              (\"items\" -> {if(isSimpleType(value))\n                  toJsonSchema(\"type\", value)\n                else\n                  toJsonSchema(\"$ref\", value)})\n            }\n          case _ => (name -> `type`)    ~ (\"format\" -> JNothing)\n        }\n      }\n    }\n  }\n. Hi, is your issue that swagger is sending a request for application/json when fetching either the api-docs or api declaration?  Or when making actual API requests?\n. Hi @JimB123 if you look at the petstore.swagger.wordnik.com sample, you'll see that you can request TEXT/PLAIN for the getPet api.  Looking at the traffic shows that it's correctly sending the accept header.\nThere must be something else going on, even running a sample with only the text/html @Produces annotation seems fine as well:\n{\n  apiVersion: \"1.0.0\",\n  swaggerVersion: \"1.2\",\n  basePath: \"http://localhost:8002/api\",\n  resourcePath: \"/pet\",\n  produces: [\n    \"text/plain\"\n  ],\n  apis: [\n. Can you update to 1.3.4, which was released yesterday?  It should pick up\nthe annotation\nOn Mar 31, 2014 10:51 AM, \"Suman Jakkula\" notifications@github.com wrote:\n\nI have a Rest resource with as groovy class as response type.\nI used @JsonIgnoreProperties annotation to exclude metaClass property from\ngroovy. But still this property is listed in swagger-ui Response Class\nmodel.\nhttp://stackoverflow.com/questions/22763820/exclude-metaclass-properties-for-groovy-model-classes-in-swaggerlists the Foo instance.\ncom.wordnik.swagger.converter.ModelPropertyParser class does not seem to\nconsider the JsonIgnoreProperties annotation. Is this true? How do I make\nswagger consider my JsonIgnoreProperties annotation?\n\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/519\n.\n. If you can help create a test case to reproduce the issue, we can help. It\nshould honor the annotation so yes, this is a bug\nOn Apr 1, 2014 11:44 AM, \"Suman Jakkula\" notifications@github.com wrote:\nCan anyone provide me a work around? Is this a bug? Am planning to change\nall my classes from groovy to java to proceed further. This is a painful\nprocess. Want to know if this indeed is a problem? or am I missing anything?\n\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/519#issuecomment-39242825\n.\n. Will add tests and close after confirming.\n. This is a general issue that needs to be sorted out--a related reflection issue is here:\n\nhttps://github.com/wordnik/swagger-core/issues/137\nI'd love to get some more suggestions on supporting multiple classloaders and reflection without the sun-specific packages.\n. I don't think this is still an issue with 1.5.x.  Please reopen if so\n. hi @emilesvt I think you'd have to have the @Api annotation point to a different resource name in one of the api declarations, such as @Api(value = \"/bankThingsV1\") and another with @Api(value = \"/bankThingsV2\").  Would that work for you?\n. closing with no response.\n. hi, can you send the PR into the develop branch?\n. Hi, can you please send this pull request against the develop branch?\n. Not sure if built-in properties on ebeans can / should be detected and hidden, but during the M1 release we'll figure it out and report back here.\n. Fix is in 1.3.13-SNAPSHOT\n. what swagger version are you on?  See the sample here, which compiles and runs just fine:\nhttps://github.com/wordnik/swagger-core/blob/master/samples/java-dropwizard/src/main/java/com/wordnik/swagger/sample/SwaggerSampleService.java#L28-L40\n``` java\n  @Override\n  public void run(SwaggerSampleConfiguration configuration, Environment environment) {\n    environment.addResource(new ApiListingResourceJSON());\n    environment.addResource(new PetResource());\nenvironment.addProvider(new ResourceListingProvider());\nenvironment.addProvider(new ApiDeclarationProvider());\nScannerFactory.setScanner(new DefaultJaxrsScanner());\nClassReaders.setReader(new DefaultJaxrsApiReader());\n\nSwaggerConfig config = ConfigFactory.config();\nconfig.setApiVersion(\"1.0.1\");\nconfig.setBasePath(\"http://localhost:8000\");\n\n}\n```\n. Hi @azhawkes thanks very much for this.  I'm going to pull your changes into the develop branch since that's the codebase for the next release.\n. https://github.com/wordnik/swagger-core/commit/33424a2f7c70fc195dc49b343870cd68ebf93ec1\npushed and available in 1.3.5-SNAPSHOT on sonatype oss.\n. Thank you\n. This should be supported in 1.5.x, in the develop_2.0 branch.\n. Currently not supported, will see about getting it in 1.3.5\n. merging into develop\n. Hi @chadhahn the goal of this is to support scanning only the package specified.  For multiple packages, I'd suggest checking the Reflections documentation--I'm pretty sure it's supported.\nCan you explain how it breaks scanning interfaces and superclasses?  That should only happen if outside the specified package.\n. swagger has some static variables that are referenced across the same VM.  So it's not intended to work with multiple instances in the same war file.\nMarking this as a feature\n. No longer an issue with 1.5.x as there is no static state.\n. Hi, I believe you're using the maven plugin--if that's the case, you should open a ticket there, it's a community-driven project and may not be using the latest version of swagger-core.\n. Hi, it seems like there are some combinations of \"where\" annotations live that is causing some annotations to be ignored.  For example, having @XmlElement annotations seem to cause headaches for the @ApiModelProperty annotations.\nCan you please post more details on your pojos?  From the petstore sample, this:\n``` java\n@XmlRootElement(name = \"Pet\")\npublic class Pet {\n  private long id;\n@ApiModelProperty(value = \"pet id\", required=true)\n  public long getId() {\n    return id;\n  }\n```\nappears correct:\n``` json\n    \"Pet\": {\n      \"id\": \"Pet\",\n      \"required\": [\n        \"id\"\n      ],\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"pet id\"\n        },\n```\n. Hi, I just wrote a unit test to see if we get the right thing from your model.  This what I see:\njson\n[\n  {\n    \"id\": \"AnnotatedPOJO\",\n    \"required\": [\n      \"variable0\",\n      \"variable1\",\n      \"variable3\"\n    ],\n    \"properties\": {\n      \"variable0\": {\n        \"type\": \"string\",\n        \"description\": \"variable0\"\n      },\n      \"variable1\": {\n        \"type\": \"string\",\n        \"description\": \"variable1\"\n      },\n      \"variable2\": {\n        \"type\": \"string\",\n        \"description\": \"variable2\"\n      },\n      \"variable3\": {\n        \"type\": \"integer\",\n        \"format\": \"int32\",\n        \"description\": \"variable3\"\n      }\n    }\n  }\n]\nSo something else is going on.\nWhat version of swagger-core are you using?  Can you try 1.3.5?  Are you using OSGi or something else?\n. thanks for the follow-up--I'll reference the issue in swagger-spring MVC for others, and close this:\nhttps://github.com/martypitt/swagger-springmvc/issues/281\n. The logic is in master but it's not complete.  In addition, in master it's scala and not java so it'll need a complete redo\n. Hi, namespaces cannot be qualified in swagger. You'll have to make unique names in your annotations. I suggest using subtypes if possible\n. change made manually in develop_2.0 branch\n. scala dependency is now updated to 2.10.4.\n. Hi, my guess is you have multiple CORS filters present.  Can you please paste the output of curl against your resource listing?  For example:\n$ curl -i petstore.swagger.wordnik.com/api/api-docs\nHTTP/1.1 200 OK\nDate: Mon, 05 May 2014 14:32:00 GMT\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Methods: GET, POST, DELETE, PUT, PATCH, OPTIONS\nAccess-Control-Allow-Headers: Content-Type, api_key, Authorization\nContent-Type: application/json;charset=utf-8\nContent-Length: 1310\nIf you have multiple wildcard (, ) entries for the allow-origin value, you'll have issues.\n. Can you please modify your filter and make a single Access-Control-Allow-Headers response like such:\njava\nres.addHeader(\"Access-Control-Allow-Headers\",\n    \"Content-Type,Content-Length,Cache-Control,Transfer-Encoding,Server\");\n. reopen if still an issue.\n. Typesafe revises and breaks Play with reckless abandon.  Can you see what version of reflections you're using?  You may need to force 0.9.8--it shouldn't affect swagger-core to do so.\n. got it.  Can you force 0.9.8 during your app build?\n. Meaning, you can exclude the Reflections 0.9.9-RC from the swagger-play2 module.  I believe it will work fine like that.  You can also revert to 1.3.4 which I believe used reflections 0.9.8\n. 1.3.7-SNAPSHOT is available in sonatype snapshots.  The exclude is now in the project for play 2.2.\n. Hi, the value in the @Api annotation isn't the path to the resource itself--it's the path for the documentation.  So you can serve docs up on /api-docs/foo and actually process requests on /api-docs/bar\n. the @Api class is documented correctly now.\n. Thanks, fixed\nhttps://github.com/wordnik/swagger-core/blob/master/samples/scala-jaxrs/README.md\n. It'll happen soon, problem is we need to fork the code now because of changes in package names between 2.10 and 2.11.\n. oh, right you are, I didn't realize that.  this should be simple then, building a snapshot now.\n. Swagger core for 2.11 is in snapshots, working on the other libs now. Yes I expect we'll drop support for play 2.2.x\n. Folks, as expected the switch to 2.11 has had some hiccups.  If anyone wants to jump on the branch to help, it's here:\ndevelop_scala-2.11\nThe issue right now is under the modules/swagger-play2 (I'm stuck on the first issue):\n[error] bad symbolic reference. A signature in package.class refers to type compileTimeOnly\n[error] in package scala.annotation which is not available.\n[error] It may be completely missing from the current classpath, or the version on\n[error] the classpath might be incompatible with the version used when compiling package.class.\n[error] /Users/tony/dev/projects/wordnik/swagger-core/modules/swagger-play2/app/controllers/ApiHelpController.scala:136: -8256821097970055419\n[error]       case _ => List()\n[error]                     ^\n[error] /Users/tony/dev/projects/wordnik/swagger-core/modules/swagger-play2/app/controllers/ApiHelpController.scala:147: Reference to method foreach in class List should not have survived past type checking,\n[error] it should have been processed and eliminated during expansion of an enclosing macro.\n[error]     references.foreach {\n[error]                ^\n[error] /Users/tony/dev/projects/wordnik/swagger-core/modules/swagger-play2/app/controllers/ApiHelpController.scala:149: Reference to method augmentString in object Predef should not have survived past type checking,\n[error] it should have been processed and eliminated during expansion of an enclosing macro.\n[error]         Logger(\"swagger\").debug(\"reference: %s\".format(ref.toString))\n. Looks like a number of items are off version, including SBT.  Working on getting those updated now.\n. See https://github.com/wordnik/swagger-core/pull/620\n. the scala code is not really compatible with javadocs.  in the next version this will be handled.\n. Well that's really weird.  Can you enable logging for com.wordnik=debug and post your output?\n. Hi, I just helped someone out with a similar issue.  It turned out that there's a defect in swagger-jaxrs when you have multiple classes defining the same @Api path.  Is that your case?  Do your java classes \"merge\" into one @Api (such as /Booking)?\n. It is a bug right now.  I expect it'll get fixed in 1.3.6\n. I'm going to close this issue, please refer here:\nhttps://github.com/wordnik/swagger-core/issues/560\n. Yes, that is correct--it is tricky with all the different deployment models that people are using swagger for, that's the only concern.\nMarking this as a feature.\n. I believe this is fixed now.\n. maps will be supported in the next version.\n. Yes, I'd recommend not working in that class, we're doing some clean-up in there right now.\nCan you describe your use case a bit more?  Are you just trying to simplify your code implementation or introduce something new in the specification?\n. Would the use of SubTypes work here?\nhttps://github.com/wordnik/swagger-spec/blob/master/versions/1.2.md#5272-inheritance-example\n. Great!  Can you send a pull request to the develop branch here?\n. This should be fixed in 1.3.6\n. Annotations on ~~resources~~ interfaces are NOT read by swagger.\n. Oh boy, typo.  Annotations on interfaces are not read by swagger.\n. @shwaaathi dropwizard is a framework based on jersey. \nYou can scan a parent package (ie com.yourcompany) and it should find resources in sub packages. \n. @chadhahn I understand the fix in 535 made other situations stop working. I'm pretty sure you can specify multiple packages with the reflections library. \nRegarding interfaces, I'd like to support this without introducing new dependencies. Do you have a suggestion for doing that?\n. Currently, yes you do.\n. scanning annotations from interfaces is a feature not supported yet\n. we did add @Inherited annotations on all of the swagger annotations.  So I believe this is supported as of 1.3.10.\n. see https://github.com/wordnik/swagger-core/pull/620\n. Thanks--can you send this PR to the develop branch?  Master is stable!\n. Sounds good, please send it to develop when ready and thank you in advance for your contribution. \n. Hi, I'll be looking into how to merge this.  It's really too bad how typesafe makes older and popular versions incompatible so quickly--I'd really like to avoid yet another version number in the swagger artifact to handle both play 2.2 and 2.3.\n. yes, i understand.  We will cross build the library after finalizing the play version support\n. Hi, there are two issues-- first, this drops support for play 2.2.  Second, this doesn't work with scala 2.11.  Since play is now about on 3.0 I think we can go ahead and allow this.  But the 2.11 change will break the code compatibility with 2.10 and 2.9\n. closing as we're working on the develop_2.11 branch.\n. Can you set your logger to com.wordnik=debug and share the results?  Are there other methods mounted under the same @Api path?\n. Closing as no further info provided\n. thank you--can you please send the pull request against the develop branch?\n. thanks\n. I'm confused why this isn't working.  Did you look here?\nhttps://github.com/wordnik/swagger-core/wiki/overriding-models\n. @e28eta I'm saying, we should be able to support this easily.  I believe @webron is trying, I pointed him at some undocumented logic that should do the trick\n. Hi, take a look at #588 for a solution to this issue.\n. Hi, please try upgrading to 1.5.x. We're putting 1.3.x in maintenance mode.\n. Hi, the cause of this is simple.  You're not referencing the model as either an input or output, and therefore the swagger-core library doesn't think it's required.\nTry changing the dataType = \"tag\" to match the CLASS name (i.e. Tag instead of tag).  It may need the fully qualified name (with package).\n. this is addressed in 1.5.x\n. Can you please send the PR to the develop branch?\n. closing this, please reopen with more info\n. Hi, thanks for adding this support, folks have been asking about it.  Can you (a) send the pull request into the develop branch and (b) it looks like travis-ci is having some test failures.  It'd speed things up considerably if you could look at those.\n. did you solve this?\n. I'll reply I your google group question later today\n. depends on #806 \n. fixed in 1.5.x-M1\n. fixed in 1.5.x-M1\n. I think your code doesn't make sense.  You have @QueryParam and @PathParam bound to a single variable, which I think is illegal.  Shouldn't it be this?\njava\n@ApiOperation(value = \"get communities\", \n        protocols = \"https\", authorizations = \"OAuth\",\n        notes = \"get communities\", response = CommunityList.class, position = 2, nickname = \"get communities\", httpMethod = \"Get\")  \n@ApiResponses(value = { @ApiResponse(code = 401, message = \"Unauthorized\", response = com.NoAccessError.class), @ApiResponse(code = 404, message = \"bad\") })        \n@Produces(\"application/json\")\n@GET\npublic User get(\n  @ApiParam( value = \"address\", required = true ) @QueryParam( \"page\") final String page,\n  @ApiParam( value = \"the communities\") @PathParam( \"communities\" ) final String email ){\n  /**\n   ...\n   **/\n  return new User();\n}\n. I think your code doesn't make sense.  You have @QueryParam and @PathParam bound to a single variable, which I think is illegal.  Shouldn't it be this?\njava\n@ApiOperation(value = \"get communities\", \n        protocols = \"https\", authorizations = \"OAuth\",\n        notes = \"get communities\", response = CommunityList.class, position = 2, nickname = \"get communities\", httpMethod = \"Get\")  \n@ApiResponses(value = { @ApiResponse(code = 401, message = \"Unauthorized\", response = com.NoAccessError.class), @ApiResponse(code = 404, message = \"bad\") })        \n@Produces(\"application/json\")\n@GET\npublic User get(\n  @ApiParam( value = \"address\", required = true ) @QueryParam( \"page\") final String page,\n  @ApiParam( value = \"the communities\") @PathParam( \"communities\" ) final String email ){\n  /**\n   ...\n   **/\n  return new User();\n}\n. I strongly suggest taking a look at any of the fully-working samples in the repo.  You can try & test them easily:\nhttps://github.com/wordnik/swagger-core/tree/master/samples\n. I strongly suggest taking a look at any of the fully-working samples in the repo.  You can try & test them easily:\nhttps://github.com/wordnik/swagger-core/tree/master/samples\n. I guess I don't understand the problem then. Can you elaborate on what is wrong with input parameters?\n. I guess I don't understand the problem then. Can you elaborate on what is wrong with input parameters?\n. please reopen if you're still having trouble\n. please reopen if you're still having trouble\n. Please see the jersey2 sample:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/java-jersey2\n. Please see the jersey2 sample:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/java-jersey2\n. Got it.  This is a known bug, fixed in 1.3.6-SNAPSHOT.  It is, merging of the paths when they are in multilpe classes.  Can you please try the snapshot??\n. Got it.  This is a known bug, fixed in 1.3.6-SNAPSHOT.  It is, merging of the paths when they are in multilpe classes.  Can you please try the snapshot??\n. https://oss.sonatype.org/content/repositories/snapshots/com/wordnik/\nYou can add this repository to your pom.xml as such:\nxml\n  <repositories>\n     <repository>\n       <id>sonatype-snapshots</id>\n       <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n       <releases><enabled>false</enabled></releases>\n       <snapshots><enabled>true</enabled></snapshots>\n     </repository>\n   </repositories>\n. https://oss.sonatype.org/content/repositories/snapshots/com/wordnik/\nYou can add this repository to your pom.xml as such:\nxml\n  <repositories>\n     <repository>\n       <id>sonatype-snapshots</id>\n       <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n       <releases><enabled>false</enabled></releases>\n       <snapshots><enabled>true</enabled></snapshots>\n     </repository>\n   </repositories>\n. thanks--yes I'm looking to reproduce this issue later today\n. thanks--yes I'm looking to reproduce this issue later today\n. this was fixed in 1.3.7, please reopen if you still see it.\n. this was fixed in 1.3.7, please reopen if you still see it.\n. closing as this is not a bug.\n. closing as this is not a bug.\n. Can you elaborate more?\n. Can you elaborate more?\n. um, no, i'm quite serious.  are you talking about building swagger-core, your sample project, an integration test, a unit test, or what?\n. um, no, i'm quite serious.  are you talking about building swagger-core, your sample project, an integration test, a unit test, or what?\n. Hi, the SwaggerPlugin.scala is calling onStop(), which is clearing the cache.  My guess is that the slow down is due to garbage being generated and not cleaned up off the heap?\nscala\n  override def onStop() {\n    ApiListingCache.cache = None\n    Logger(\"swagger\").info(\"Plugin - stopped\");\n  }\n. Hi, the SwaggerPlugin.scala is calling onStop(), which is clearing the cache.  My guess is that the slow down is due to garbage being generated and not cleaned up off the heap?\nscala\n  override def onStop() {\n    ApiListingCache.cache = None\n    Logger(\"swagger\").info(\"Plugin - stopped\");\n  }\n. We'll investigate and see if this can be done in the 1.5.0-M3 release.\n. We'll investigate and see if this can be done in the 1.5.0-M3 release.\n. Thank you.  I did not promote the 1.3.6 artifacts for play2--I just did, and you should see them in maven central any minute.\n. Thank you.  I did not promote the 1.3.6 artifacts for play2--I just did, and you should see them in maven central any minute.\n. closing as this this should be supported in 1.5.x\n. closing as this this should be supported in 1.5.x\n. hi @frankgibbs, you've found a bug.  It looks like the description isn't being set when scanning the annotations:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-servlet/src/main/scala/com/wordnik/swagger/servlet/config/ServletReader.scala#L54\nI'll look at getting this fixed in a snapshot shortly.\n. hi @frankgibbs, you've found a bug.  It looks like the description isn't being set when scanning the annotations:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-servlet/src/main/scala/com/wordnik/swagger/servlet/config/ServletReader.scala#L54\nI'll look at getting this fixed in a snapshot shortly.\n. will be in 1.3.7\n. will be in 1.3.7\n. Hi, I don't understand why you're having these issues.  Can you give either a test case or sample project to demonstrate them?  You can modify the petstore sample in this repo as well in a fork.\n. Hi, I don't understand why you're having these issues.  Can you give either a test case or sample project to demonstrate them?  You can modify the petstore sample in this repo as well in a fork.\n. This may or not be supported, as it seems to be an issue with reading ParameterizedTypes only.  Will resolve either way in the 1.5.0-M1 release\n. This may or not be supported, as it seems to be an issue with reading ParameterizedTypes only.  Will resolve either way in the 1.5.0-M1 release\n. Addressed in 1.5.0-SNAPSHOT\n. Addressed in 1.5.0-SNAPSHOT\n. 1.5.x should be api compatible with 1.3.x.  Can you upgrade?\nGiven resources (time) it's difficult to back port changes back to 1.3.x unless they're big bugs.  1.5.2-M1 has been released to maven central, with M2 a couple days away.  If you can migrate to it, I expect your life will get a lot easier\n. 1.5.x should be api compatible with 1.3.x.  Can you upgrade?\nGiven resources (time) it's difficult to back port changes back to 1.3.x unless they're big bugs.  1.5.2-M1 has been released to maven central, with M2 a couple days away.  If you can migrate to it, I expect your life will get a lot easier\n. this should be fixed in 1.3.9-SNAPSHOT\n. this should be fixed in 1.3.9-SNAPSHOT\n. Working on this now. It may be supported in the next version of swagger core\n\nOn Aug 15, 2014, at 5:08 PM, helloworld1 notifications@github.com wrote:\nSame issue here\n\u2014\nReply to this email directly or view it on GitHub.\n. Working on this now. It may be supported in the next version of swagger core\nOn Aug 15, 2014, at 5:08 PM, helloworld1 notifications@github.com wrote:\nSame issue here\n\u2014\nReply to this email directly or view it on GitHub.\n. On it right now, but in the develop_2.0 branch, which is supporting swagger 2.0 spec.\n. On it right now, but in the develop_2.0 branch, which is supporting swagger 2.0 spec.\n. Hi, we're working with the Jackson folks in this for the 1.5.0 version\n. Hi, we're working with the Jackson folks in this for the 1.5.0 version\n. Here's the code, based on jackson:\n\nhttps://github.com/swagger-api/swagger-core/tree/develop_2.0/modules/swagger-core/src/main/java/com/wordnik/swagger/jackson\nHere's a test (note it's disabled):\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-core/src/test/scala/GuavaTest.scala\n. Yes this is now in 1.5.1-M1. Thanks!\n. Hi, thanks for sending this.  What version of swagger are you using?  I believe that 1.3.6 was updated to support this but perhaps you've found an issue.\n. Hi, thanks for sending this.  What version of swagger are you using?  I believe that 1.3.6 was updated to support this but perhaps you've found an issue.\n. OK fixed.  It looks like the api declarations were being merged, but the models were not.  That would have made inconsitent results when merging, depending on reflection order.  The above patch should fix this permanently.\n. see 1.3.7-SNAPSHOT in sonatype snapshots for an artifact\n. Please see 1.3.9-SNAPSHOT.  the annotations have been marked accordingly.\n. i'm closing this as duplicate of #566 \n. I think showing \"no content\" is the correct thing to do if you're returning a 201 response.  Please reopen if that's not correct.\n. @MaxPMagee Maps are not going to be easily supported in the short term.  The next version of the spec (out in the next few weeks) addresses it gracefully.\nIf you're looking to support PUT requests, an alternative approach is to have a model with all optional parameters.\n. thanks, this has been deployed to sonatype snapshots as 1.3.8-SNAPSHOT.  Two things remaining:\n1) I believe this breaks play 2.2 compatibility--there are a lot of people on play 2.2.  Do you have suggestions for artifact naming for 2.2/2.3 compatibility?  I'd like to support both via multiple artifacts.  We could add a play version suffix:\nswagger-play23_2.11-1.3.8-SNAPSHOT\nthat kind of gives me a headache just looking at it but I'm not sure of alternatives.\n2) Can you help get the samples updated?  Prefer to not use activator.\nThank you very much for this contribution!\n. @slustbader this build is just 2.11, but will produce snapshots for 2.10 as well as soon as we sort out the naming challenges\n. I believe we can simply update the dependencies as follows:\nswagger-play2/project/Build.scala:\n\"com.wordnik\" %% \"swagger-jaxrs\" % \"1.3.8-SNAPSHOT\"\nWe have been publishing the maven-built artifacts for each scala version.\n. yes, i was going to do something like that as well :)  And yes, it's messy.\nBut since the play module and the rest are built separately, it shouldn't be an issue for you to just update the Build.scala for now.\n. @slustbader the 2.10 artifacts are in sonatype snapshots, 1.3.8-SNAPSHOT\n. Hi, can you send the PR against the develop branch?\n. Hi, could you rebase before the PR?  There are so many changes that it's very hard to tell what you've done.  I'd like to get this supported.\n. using a profile with maven to cross-build is really ugly--you can't build modules individually with it like such.  Probably best to just have different branches for deploying across scala versions.\n. the develop_scala-2.11 is building fine now and pushed to sonatype snapshots as 1.3.8-SNAPSHOT.\n. develop_scala-2.10 is also deployed to sonatype snapshots\n. there were two efforts on this same front--can you try out the 1.3.8-SNAPSHOT which is in sonatype?  Source is here:\nhttps://github.com/wordnik/swagger-core/tree/develop_scala-2.10\n. This has been done in 1.3.12\n. Hi, we're in the process of getting 1.3.8 out, which will likely be next week.  The next snapshot version will have this change, which is in sonatype-snapshots.\nIf you need a release version, I'd subscribe for notifications from this repo, and you'll get one when it's released.\n. yes, sorry, those are in different branches.  I'll redeploy today\n. Hi, just did, sorry for the delay--please let me know how it goes\n. OK this is done.  All the branches to support the different scala versions is making it a little painful, but things are deployed to sonatype snapshots now.\n. java8 is not supported yet.  The artifacts when built with java7 should work just fine.\n. Thank you, we'll fix that\n. yes it is, fixed in #681.  Note, this was only to build locally, the artifacts worked fine.\n. this should be supported in 1.3.8\n. see #663 \n. The @Api(hidden = true) has been added in 1.3.8.  See sample here:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/java-jaxrs-subresource\n. this should be fixed in 1.3.8.  You can add a \"hidden\" value to the @Api operation to hide the resource completely, except in the case of being a subresource.\n. added in 1.3.8\n. The problem is that file uploads need to be sent with content-type multipart/form-data.  What you're seeing in the debug log is correct.\nTo fix this, your server needs to consume mulitpart/form-data for this request, and your consumes should represent that as well:\n\"consumes\": [\n  \"multipart/form-data\"\n]\n. No, I don't know how to say this except, you cannot send a file with anything other that multipart/form-data with the UI, period.  It will switch to that content type when you try to pass a file.\n. fixed in 1.3.8\n. Since this repo is primarily about java integrations, I suggest putting any ruby-specific examples in the swagger-spec readme.\n. Hi guys, there is a snapshot based on this branch:\nhttps://github.com/wordnik/swagger-core/tree/develop_scala-2.11\nIs there anything different in this work that we need to merge?\n. addressed in 1.5.x\n. This is a bug.  It should honor @ApiModel(\"foo\") to override the name.\n. confirmed this was addressed in https://github.com/swagger-api/swagger-core/commit/5d67884af6557f358cce0c59c9a04d21061c0afd\n. thank you, this is fixed.\n. Looks to me that you're not including the dependencies included in that client correctly.\n. please reopen if you're having issues still\n. please reopen if still an issue\n. Hi, we've created a separate scala module to help address this:\nhttps://github.com/swagger-api/swagger-scala-module\n. this is merged to 1.3.11\n. this was addressed in 1.3.10.\n. The type issue should be addressed in 1.3.8\n. Hi, please try upgrading to 1.5.x.  We're putting 1.3.x in maintenance mode.\n. Hi, please try upgrading to 1.5.x.  We're putting 1.3.x in maintenance mode.\n. Hi, this looks good, and apologies for the delay in the review.  It slipped through the cracks.\nThe proper develop branch is develop_scala-2.10 for sending the PR.  Can you please point it there and I'll merge?\n. that is correct.  we use develop_scala-2.10 as the \"main\" develop branch and I'll merge into 2.11.  It's ugly, I know\n. Hi I replied to the post.  What version of swagger is this?  Option[String] should be supported.  Option[Int] is not, but Option[java.lang.Integer] is.\n. Just verified in 1.3.8 and it's behaving as expected.\n. Can you please provide an example so this can be added to a test?\n. @olensmar correct, this is not a 2.0 issue--it should be fixed in 1.5.x, and in the develop_2.0 branch.\n. moving to m3 as m2 is getting too big.\n. can you please refer to the sample here:\nhttps://github.com/wordnik/swagger-core/tree/master/samples/scala-play2\n. if you're using play 2.3, please use 1.3.8, released today.\n. Please see 1.3.9-SNAPSHOT, as the annotations are now annotated with @Inherited, per #611 \n. can you please try with 1.3.9-SNAPSHOT?  We've added the @Inherited annotation so it's possible this is doable now.\n. please reopen if you're still having issues\n. as @webron said, this is by design.\n. fixed in 1.3.9-SNAPSHOT\n. This has deep support in swagger spec 2.0, which is in the 1.5.0-SNAPSHOT.  Closing this issue, please take a look at migrating to the updated release.\n. I believe you're getting the wrong Option type (maybe guava vs scala?).  Regardless these signatures have changed completely in swagger 1.5.x and are pure java.  Please take a look in the develop_2.0 branch \n. Hi, there are a lot of changed files in this PR.  Can you rebase and submit it?\n. This is fixed in 1.5.2-M1\n. this is now supported in the model introspection of properties.  I don't believe it's needed in the annotations, though.\n. I think this is impossible to support generically.  It's a good idea, but without making major assumptions about the container, it's not possible.  Boo.\n. I believe this is a documentation issue.\n. added support for overriding datatypes with collections with annotations, including:\n@ApiModelProperty(dataType = \"List[models.Children]\")\nprivate String children;\nWill resolve to:\n{\n    \"id\": \"ModelWithModelPropertyOverrides\",\n    \"properties\": {\n      \"children\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"Children\"\n        }\n      }\n    }\n  }\nand unwrap the inner types.\n. you should be able to do this easily--please see this sample and reopen if you still have issues.\nhttps://github.com/wordnik/swagger-core/blob/master/samples/scala-oauth-authorization-server/src/main/scala/com/wordnik/swagger/sample/resource/PetResource.scala#L198-L217\n. Ok, so you're all set then?\n. Hi @legshort there is some test code that didn't get removed in time.  I'm pushing a new version, which will be 1.3.10.\n. ok it's done.  that was embarrassing!  Please update to 1.3.10 and you should be good with the samples, integration tests, etc.  Close after checking...\n. thank you for the explanation, i'll get this added to our documentation.\n. Thanks--this was fixed in https://github.com/wordnik/swagger-core/commit/1f22395efbaa0b98b6bbad26c1c96bcce21e137c\n. Definitely do not want this provider to handle all media types.  I suggest that if you want special behavior, to subclass this with your own media type handling, or to remove it from the property packages that are scanned.\n. With 1.5.x-M1, you can now plug your own annotation processors.  While documentation needs to be written, you can follow the swagger-jersey2-jaxrs module as an example, allowing you to create a simple module which is loaded via SPI.\n. Hi, please pull master--there is a macro bug in scala 2.10 that is exposed in the tests that lived in the samples.  I've addressed that by using a different technique.\n. I don't believe you can override datatypes in model properties, period.\n. ~~Yes, you can add the annotations, but I don't believe they're honored.  I'd suggest checking the tests.~~\nPer @webron's comment below, I was mistaken.\n. it is impossible to support all overrides in this fashion.  It's a string, and to read the annotation, we're instantiating the class.  So \"List[String]\" is not only invalid syntax for java, but impossible to instantiate because List isn't a concrete class.\nI suggest we document the behavior, add support for overrides in the property parsing, and start using concrete classes for overrides rather than string representations.\n. OK I've dug into this--you cannot change a model property with an override converter from an array to a simple type like string.  I understand where it may be desirable but I think this is more of a design challenge in the API than a configuration in swagger.\nYou can do this:\n@ApiModelProperty(dataType=\"string\")\nvar myBytes: Array[Byte] = _\nbut the model will be this:\n\"properties\": {\n    \"myBytes\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"format\": \"byte\"\n      }\n    }\n  }\nI have fixed the error message to not be so opaque, though, as you first reported:\nhttps://github.com/swagger-api/swagger-core/commit/2f2caca0efc1649330acda3d2965ca1b75543071\n. I have confirmed that option 2 works for any JAXRS resource.  Please reopen if needed.  Note, you can actually support (1) with the parameter extensions that swagger 1.5.x has introduced.  Just look at the swagger-jersey2-jaxrs module at how it is made available via SPI, and can be triggered when reading annotations.\n. it's hidden, so it won't be exposed to anyone.  A client can still make use of it, however the UI should not, by definition, show it.\n. Hi, there is no way to turn it off except to disable the module during test mode.  If you have suggestions on doing this and want to send a PR I'm sure it'd be helpful to others.\n. as this has been merged, closing the issue.\n. will need to look into the test errors later.\n. @martoe thanks, will look at this shortly\n. which ones?  I believe both master and the develop-scala_2.11 branches are up-to-date.\n. swagger-ui is automatically updated as part of the build process now, in 1.3.12-SNAPSHOT.\n. this is supported in 1.5.0-SNAPSHOT, take a look at the develop_2.0\n. @palkopatel I'm looking for testing feedback and closing out the issues marked as v1.5.0 milestone.  Still not a concrete date but it's getting closer.  If you can test and provide feedback, that'll speed things up.\n. Once swagger-maven-plugin is updated to the 1.5.0 snapshot, it will work.  Please open an issue and track it from there.\n. you will see this in the 1.5.0 version of swagger-core, which lives in the develop_2.0 branch in this project\n. that will be the case.  I'll update this ticket with the mechanism shortly.\n. OK the original question was about tying into javadocs, and for that, please take a look at the integrations here.  In addition, I believe you can now use Enunciate to generate swagger specs from javadocs.\nFor the other discussion, please open a new ticket if still relevant.\n. This has been added, but it's incorrectly adding the XML property when not valid, such as with $ref models.\n. dup of #416 \n. thanks, fixed in the develop_2.0 branch\n. I agree with @webron.  I do understand optional values are problematic to Scala and that Option is best for describing optional values.\n. Option parsing support [https://github.com/swagger-api/swagger-core/pull/755] has been added, and will be available in 1.3.12.\n. yes, that is a bug.  want to send a PR?\n. Plus changing the Pom. This is a community supported project and things happen faster that way. Not \"only\" that way but \"fastest\"\n. Hi, filtering has been part of the play2 module since the beginning. I do know that the current version does not work with play 2.1 (2,3.x) only\nHowever I believe you can use play2 module 1.3.6 with your version of play. Grab the tag and look at the samples\n. I agree that it should be a string[].  To avoid breaking compatibility we will leave it as is, and for a breaking api change (2.0) we can improve it.\n. Hi @ShokuninSan I will review for the 1.3.13 to see if it can be included.\n. there are unit tests to confirm that this field is working, see here:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/test/scala/converter/HiddenFieldTest.scala\n. as @webron said, please open any spec suggestions in (now) swagger-spec\n. I suggest making a test case in swagger-core so we can address this.\n. Hi, I think that's not possible.  The swagger annotations don't affect any of the runtime of the API, just the description of it.\n. Should be fixed in https://github.com/swagger-api/swagger-core/commit/6a0d89747dce837419512eff52a4c1706831e552\n. In master or develop_2.0?  I think it's used in one of the modules\n. Yep, looks like it builds fine.  I'll make this change in the develop branch, which would become 1.3.11 on publish.\n. thanks, the app also runs without activator:\nsbt run\n. can we use a subdomain such as docs.swagger.io?  It will simplify things tremendously\n. the easiest thing is to use the existing path with a subdomain.  Then we can just use github pages with a CNAME:\nhttp://docs.swagger.io/swagger-core/apidocs\n. see here:  \nhttp://docs.swagger.io/apidocs/\nWork ok?  Close if so\n. just add a subfolder.  The way gh-pages work with CNAME records is:\n{organization}.github.io/{project-name} => CNAME record\nso this:\nswagger-api.github.io/swagger-core/foo => docs.swagger.io/foo\nJust make a subdir called swagger-core if you want that location to stick.\n. we can add a step to this process if we want them under one route.  Just leave this ticket open then\n. will investiagte for m2\n. This has been fixed as of 1.5.2-M1\n. I see @aciganj, I misunderstood your question.  Please try what @bthule suggested and if it doesn't work, open a new ticket.\n. Jackson Module Swagger should not depend on swagger core, it should depend on swagger-models.  Where do you see this?\nhttps://github.com/FasterXML/jackson-module-swagger/blob/master/pom.xml#L55-L59\n. Understood.  I will either add a profile for the swagger-models or split it into a separate repo.  I prefer to not have more repos so probably the latter.\n. Solved by moving the jackson-module-swagger code into the swagger-core module\n. This is addressed in 1.5.x, there are no more references to sun impl.\n. Hi, can you take a look at how the codegen works for develop 2.0?  Specifically here:\nhttps://github.com/swagger-api/swagger-codegen/issues/343\nShows how the existing codegen can be wrapped into a build process.  Otherwise, as @webron suggested, send a PR to the spec and we'll include it for others to use\n. Added here:\nhttps://github.com/swagger-api/swagger-spec/commit/03938160f33a553f07a8c2cf177cb396d0cc804e\n. Thanks @adrianbk , a couple things.  First, it looks like the defaultValue on the params should really be default.  See here in the spec:\nhttps://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#parameter-object-\nNext, one challenge with treating the JSON response in a map-like fashion is that you lose the ability to test for order.  The properties need to maintain order, and it's a bug if it's lost.  Any way to do that with the JsonSlurper you are using? \n. I believe this support has caught up in the develop_2.0 branch\n. Swagger caches the entire response on the server so I doubt that it can be the generation. \nCan you run \"time curl xxxxx\" against each endpoint?  Is the payload \"massive\"?\n. Please enable debug logging and post the output.\n. closing as inactive, please reopen if needed\n. @rktoomey  @mingfang thank you.  I'd really like to get the inclusion of swagger-ui more automated.  I've recently added a plugin for the maven projects--is there analogous logic for sbt that we can use?  See here:\nhttps://github.com/swagger-api/swagger-core/blob/develop_scala-2.10/samples/java-jaxrs/pom.xml#L75-L119\nxml\n      <plugin>\n        <groupId>com.googlecode.maven-download-plugin</groupId>\n        <artifactId>download-maven-plugin</artifactId>\n        <version>1.2.1</version>\n        <executions>\n          <execution>\n            <id>swagger-ui</id>\n            <goals>\n              <goal>wget</goal>\n            </goals>\n            <configuration>\n              <url>https://github.com/swagger-api/swagger-ui/archive/v${swagger-ui-version}.tar.gz</url>\n              <unpack>true</unpack>\n              <outputDirectory>${project.build.directory}</outputDirectory>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <artifactId>maven-resources-plugin</artifactId>\n        <version>2.6</version>\n        <executions>\n          <execution>\n            <id>copy-resources</id>\n            <phase>validate</phase>\n            <goals>\n              <goal>copy-resources</goal>\n            </goals>\n            <configuration>\n              <outputDirectory>${basedir}/src/main/webapp</outputDirectory>\n              <resources>\n                <resource>\n                  <directory>${project.build.directory}/swagger-ui-${swagger-ui-version}/dist</directory>\n                  <filtering>true</filtering>\n                  <excludes>\n                    <exclude>index.html</exclude>\n                  </excludes>\n                </resource>\n              </resources>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n. let's let folks use webjars for play projects.\n. since we have two scala versions supported via branches (yes), please send the PR into this:\ndevelop_scala-2.10\n. not yet\n. no problem @tpetr my bad for not catching it sooner.\n. closing as PRs have been merged\n. Hi, can you please send the PR into the develop_scala-2.10 branch?  Master is clean!\n. Yes, the develop_scala-2.10 branch should be in sync with master, with the exception of the version number being 1.3.11-SNAPSHOT.  I'll close this so you can resubmit, thanks!\n. Hi, I'd love to merge this but ask that you please add some tests.  Can you do so?\n. closing as #761 has been merged\n. Yes, in this case the bug is in the generated yaml from swagger-jaxrs \n. You are kidding, right?\n. Ron the format for the spec and tooling is JSON. There is no reason why we can't produce yaml though\n. Yes, I think that is a practical solution for undetectable @QueryParam and @PathParam types.  Can you submit a PR to address this?\n. I think that supporting toString() for complex, Serializable value types is just too dangerous.  I suggest making your own annotation reader with Swagger's SPI support for parsing annotations.  Take a look at swagger-jersey2-jaxrs module for example.\n. @mbarbanson is this still valid after #779?\n. yes, these tests are misnamed.\n. Can you put the @JsonIgnore field on the setter too just as a test?\n. Got it.  It appears that for overridden fields, the annotations are not being honored.\n. OK this one is tricky, I've traced it down to the parseRecursive method inside ModelPropertyParser.scala.  It seems that the subclass field is ignored, but added when parsing properties for the superclass.  Looking for a solution...\n. OK found it--one line fix of course :)  Please try out the 1.3.13-SNAPSHOT which is now on sonatype, or build locally from the develop_scala-2.10 branch.\n. Yes, please see here:\nhttps://github.com/swagger-api/swagger-core/commit/5d67884af6557f358cce0c59c9a04d21061c0afd\n. Yes, there is a regression that is causing internal java object methods to be exposed.  The missing nickname is a red herring--the root cause is the internal methods.  Looking into it.\n. Hi, this is addressed in 1.3.12. Please give that a shot and reopen the issue if you have any problems.\n. merged\n. Can you put some tests around this?  I can't believe it has been wrong, so I worry that changing this will cause other breakage.\n. Thanks. A test would be best still\n. Yes, we should be able to show that it was broken before, and that it's fixed after the change wih a unit test. \n. Can we close this?\n. can you file this against develop_scala-2.10?\n. Could do it soon, now that there's a good reason for a release \n. just released 1.3.11\n. That is expected. Swagger 1.2 has references to each api definition. If you look at /api-docs/pet you will see that definition. Note the 'path' attribute in what you saw is a location relative to the api-docs\n. I'm closing this, please reopen if the above doesn't help\n. OK we can't introduce a new type (Vector) since it's not in the spec.  I'm guessing that Vector should be the same type as list.  Does that make sense?\n. We have moved the scala support into it's own independently-evolving module.  And there is a test to ensure this is working correctly, please see here:\nhttps://github.com/swagger-api/swagger-scala-module/commit/db60af9f3abc51ed8ed4955c90838012b53b1fcb\n. thanks for following up with your solution\n. I'd love to get some tests around this.  I'm going to merge but please see if you can send a PR with some testing coverage.\n. Hi, I had to revert the change to ModelImpl.java as it's adding an attribute that's not supported by the swagger spec.\n. fixed in 1.3.12-SNAPSHOT\n. Hi @W1zzard two things-- 1) are you saying the input type is not correct?  Meaning, you're expecting MergeRequestDTO<KeywordDTO> but getting KeywordDTO?\nRegardless I'd say to open this issue on the maven plugin repo.  Post more info if you like and we can look--I'm going to close this out.\n. thanks, this looks good.  But can you please send the PR into the develop_scala-2.10 branch?  Master is the released version.\n. thanks, this looks good.  But can you please send the PR into the develop_scala-2.10 branch?  Master is the released version.\n. thanks, this looks good.  But can you please send the PR into the develop_scala-2.10 branch?  Master is the released version.\n. Thank you!  I'll close this pr\n. Thank you!  I'll close this pr\n. Thank you!  I'll close this pr\n. Hi @sachavan, I'm guessing you're using jersey--assuming that's the case you would use the allowableValues query parameter to set the set of possible values:\nhttp://docs.swagger.io/swagger-core/apidocs/com/wordnik/swagger/annotations/ApiParam.html#allowableValues()\nHowever, mashing key/values in the query params and making part of it open-ended isn't really supported in the UI, even if supported in the spec via regex.\nPlease reopen if you feel like the annotations don't answer your question, and you can open an issue in swagger-ui about the UI support for regex.\n. Hi @sachavan, I'm guessing you're using jersey--assuming that's the case you would use the allowableValues query parameter to set the set of possible values:\nhttp://docs.swagger.io/swagger-core/apidocs/com/wordnik/swagger/annotations/ApiParam.html#allowableValues()\nHowever, mashing key/values in the query params and making part of it open-ended isn't really supported in the UI, even if supported in the spec via regex.\nPlease reopen if you feel like the annotations don't answer your question, and you can open an issue in swagger-ui about the UI support for regex.\n. Hi @sachavan, I'm guessing you're using jersey--assuming that's the case you would use the allowableValues query parameter to set the set of possible values:\nhttp://docs.swagger.io/swagger-core/apidocs/com/wordnik/swagger/annotations/ApiParam.html#allowableValues()\nHowever, mashing key/values in the query params and making part of it open-ended isn't really supported in the UI, even if supported in the spec via regex.\nPlease reopen if you feel like the annotations don't answer your question, and you can open an issue in swagger-ui about the UI support for regex.\n. Hi, this is because the api has an api-key-based filter on it.  Add \"special-key\" to the api key section and they'll magically appear.\n. Hi, this is because the api has an api-key-based filter on it.  Add \"special-key\" to the api key section and they'll magically appear.\n. Hi, this is because the api has an api-key-based filter on it.  Add \"special-key\" to the api key section and they'll magically appear.\n. thanks--I'm going to merge this shortly after making sure the change in default behavior doesn't cause any issues.  The challenge is that there is a \"scan.all.resources\" option for jax-rs that causes all resources to be detected, even if no @Api annotations are present.  Might need a similar flag for this as well.\n. thanks--I'm going to merge this shortly after making sure the change in default behavior doesn't cause any issues.  The challenge is that there is a \"scan.all.resources\" option for jax-rs that causes all resources to be detected, even if no @Api annotations are present.  Might need a similar flag for this as well.\n. @talton-rmn can you use the new swagger-parser project, which consumes both formats?\n. Great--it's a fairly new project.  I'm closing this out.\n. m2 is too big for this, moving to m3\n. m2 is too big for this, moving to m3\n. This is added in the https://github.com/swagger-api/swagger-core/tree/master/modules/swagger-hiberate-validations\n. This is added in the https://github.com/swagger-api/swagger-core/tree/master/modules/swagger-hiberate-validations\n. This has been done with #580\n. This has been done with #580\n. The plan right now is to use the jsr-303 annotations.\n. The plan right now is to use the jsr-303 annotations.\n. Will definitely take a look.  I get dizzy just thinking about going back to pure junit assertions.\n. Will definitely take a look.  I get dizzy just thinking about going back to pure junit assertions.\n. I'm not going to do this for M1, will push to M2 and reconsider then.\n. I'm not going to do this for M1, will push to M2 and reconsider then.\n. model converters have been ported to 1.5.x, https://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-core/src/main/java/com/wordnik/swagger/converter/ModelConverter.java\n. model converters have been ported to 1.5.x, https://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-core/src/main/java/com/wordnik/swagger/converter/ModelConverter.java\n. @webron can you help on this?\n. @webron can you help on this?\n. Can you be more specific as to where?\n. Can you be more specific as to where?\n. Also, the alternative is to create a bunch of objects which are just going to be gc'd\n. Also, the alternative is to create a bunch of objects which are just going to be gc'd\n. OK, so I consider this a coding style, not a bug.  There are many, many things that would break by returning empty lists, JSON generation not the least (many fields should not be returned unless they have values).  As I do know that returning null makes more work for the consumer, I'm going to close this out.\n. OK, so I consider this a coding style, not a bug.  There are many, many things that would break by returning empty lists, JSON generation not the least (many fields should not be returned unless they have values).  As I do know that returning null makes more work for the consumer, I'm going to close this out.\n. you can now configure via web.xml:\nxml\n    <init-param>\n      <param-name>swagger.pretty.print</param-name>\n      <param-value>true</param-value>\n    </init-param>\nor via BeanConfig:\njava\nconfig.setPrettyPrint(true)\n. you can now configure via web.xml:\nxml\n    <init-param>\n      <param-name>swagger.pretty.print</param-name>\n      <param-value>true</param-value>\n    </init-param>\nor via BeanConfig:\njava\nconfig.setPrettyPrint(true)\n. Thanks for asking--default is off (compact)\n. Thanks for asking--default is off (compact)\n. thanks!  The deserializer should also address #762 too, testing that.\n. thanks!  The deserializer should also address #762 too, testing that.\n. @elirazBusi I'm going to close this, however I'd suggest looking into the develop_2.0 project where you can mutate the swagger object based on your own business logic.  So that will allow you to make it dynamic while still using the core library.\n. @elirazBusi I'm going to close this, however I'd suggest looking into the develop_2.0 project where you can mutate the swagger object based on your own business logic.  So that will allow you to make it dynamic while still using the core library.\n. verified in tests and deployed to http://petstore.swagger.wordnik.com/v2/swagger.json\n. verified in tests and deployed to http://petstore.swagger.wordnik.com/v2/swagger.json\n. @webron is so generous... the 1.5 branch has a new pluggable mechanism for adding additional annotation support so making a module to support the different flavors of bean validations (like hibernate) without bringing in the dependencies to the core project.\n. @webron is so generous... the 1.5 branch has a new pluggable mechanism for adding additional annotation support so making a module to support the different flavors of bean validations (like hibernate) without bringing in the dependencies to the core project.\n. this should be supported in 1.5.4-M1-SNAPSHOT.\n. this should be supported in 1.5.4-M1-SNAPSHOT.\n. Fixed by #831 \n. Fixed by #831 \n. The replace can be moved to Json.prettyPrint(Object) but doing the replace on each of the string values is really ugly.  Any other way to address it?\n. The replace can be moved to Json.prettyPrint(Object) but doing the replace on each of the string values is really ugly.  Any other way to address it?\n. @martoe looks like @whitlockjc has addressed this\n. @martoe looks like @whitlockjc has addressed this\n. Yes thank you.  I've made this change and deployed the snapshot.\n. Yes thank you.  I've made this change and deployed the snapshot.\n. This won't work with the jaxrs implementation.  for other uses, it is very reasonable to annotate members.\n. This won't work with the jaxrs implementation.  for other uses, it is very reasonable to annotate members.\n. @todd-richmond I believe you can use @XmlElement(name=\"a\") to override any model property name.  I do agree that overriding the name in the annotation would be good.\n. I agree and will address this in 1.5.0-M2\n. @JamesDunne consider submitting a PR\n. Best if you put it in a gist and post the link here.\n. we can't move to java 6 for swagger, so this is going to be a problem.  I'll move to m2 just in case there's hope for some sort of resolution.\n. hi, support for java6 is not possible.\n. If you can provide a unit test demonstrating this, I'd be happy to look into it more.\n. We still have a failing test but it's not related to this (and should be moved to v2.1.0-M2)\n. I believe we can enforce ordering with the @JsonPropertyOrder annotation.  Otherwise as @tomtit stated, method ordering is not guaranteed in the JVM.\n. Support the property ordering via jackson, I believe that's the only reliable way to do it.\n. I've moved scala support into a separate module so it can both evolve independently and not clutter up the java code.\nSee https://github.com/swagger-api/swagger-scala-module\nWhen this module is included as a dependency, it will automatically be detected and enabled by the ModelConverters.\n. Can we close this @MDoumin ?\n. I believe this has been addressed in 1.3.13-SNAPSHOT.  Can you please retry that version?\n. @maneeshsahu you might be able to force update it to use swagger-core 1.3.13-SNAPSHOT.  can you give that a shot?\n. this has been fixed in 1.5.x, and will be picked up automatically with the scala support.\n. some need to move to m2\n. Since scala support has been moved to a different repository, I'm closing out the scala samples above.\n. moving some to M3\n. nice!  thanks\n. OK I have a couple suggestions.\n@TuomasKiviaho can you please open a separate ticket for that enhancement?\n@pbielicki The swagger-ui is not on version 2.1.8-M1 and this type check should be fixed.  The cause is downstream in your model, where it's getting the type of ImpactedEntitiesType wrong.  If you want to dig into that more, please reopen the issue.\nFinally, the 1.5.x code has much better support for introspection as it uses Jackson for parsing.  Please consider upgrading to 1.5.2-M1 or later.\n. This should be addressed in #975 \n. Hi, please try upgrading to 1.5.x.  We're putting 1.3.x in maintenance mode.\n. I have no idea how they weren't included in the build.  I do see them in the source code.\n. pushed in 1.5.1-SNAPSHOT\n. updated in 1.5.1-SNAPSHOT\n. This was added by https://github.com/swagger-api/swagger-samples/pull/53. Hi, to set timing expectations, the subtype support is being addressed in the 1.5-M2 release:\nhttps://github.com/swagger-api/swagger-core/milestones\nSo it is expected that it doesn't work right now.  I do appreciate the test cases though, and we'll bake those into the unit tests when we build it out.\n. now the absence of a setter (via @JsonIgnore) and presence of a getter will trigger readOnly to be true.\n. Right you are.  Fix + tests are coming.\n. Hi, this has been fixed and pushed to 1.5.0-SNAPSHOT.  We'll probably put this in a point release, since it's pretty major.\n. Thanks.  Which sample are you referring to?\n. got it.  thank you\n. I believe there's an even easier way to do this now:\njava\n    Info info = new Info()\n      .version(\"1.0.0\")\n      .title(\"Swagger Petstore\")\n      .contact(new Contact()\n        .name(\"Wordnik API Team\")\n        .email(\"foo@bar.baz\")\n        .url(\"http://swagger.io\"));\nI'll update the samples to do this\n. ok samples updated.  thanks again\n. Hi, thanks for sending this.  Two thoughts.\n1) the develop branch for the swagger 1.3.x project is develop_scala-2.10.  Master is stable, so PRs should not be sent to it\n2) we are on 1.5.0-M1 now, and the development for the 1.3.x branch is mostly for critical bug fixes.  I suggest transitioning to 1.5.0-M1 if you can, since that's where the efforts are being spent.\n. Fixed in https://github.com/swagger-api/swagger-core/commit/1fc5d89356b5fcb05f5eff730e6a1713045f84b0\n. pushed in 1.5.1-SNAPSHOT\n. Thanks--looks like a bug to me.  Will look into it.\n. OK yep, this was a regression and is addressed in 1.5.1-SNAPSHOT.  Can you please give it a whirl?  Tests have been added.\n. will be looking in a bit.\n. jersey (1) or jersey 2?  Can you share your pom.xml?\n. Thanks, I will keep this open to look at the dependencies.\n. @steowens you should not need to exclude the JSR-311 as it's already excluded by the swagger-jersey2-jaxrs artifact.\n. @cppexpert I've been looking at this and have some thoughts.  (kudos for being the first person I've seen using sbt for a non-play java project!)\n- Your build.scala has both the older, swagger 1.3.12 module as well as jackson 2.5.0.  I don't believe that swagger version works with jackson 2.5 in scala.  It may in java, but scala pulls in all kinds of stuff that can cause resolution & eviction issues.\n- Whether you use a custom object mapper or not, it shouldn't matter, meaning, you can have multiple object mappers live in your app at once.  Swagger will use it's internal mapper for reading and deserializing.  To write the swagger spec JSON, you can load com.wordnik.swagger.jaxrs.listing.SwaggerSerializers provider and it will write only the swagger spec.\nI believe that the issue isn't swagger, but a library incompatibility and configuration settings.  I've sent a PR for the following:\n- Upgrade to swagger-jersey-jaxrs-1.5.2-M1\n- Removed unused dependencies from build.scala\n- Enabled swagger in the web.xml\n- Removed the json object mapper from the web.xml packages\n- Added the swagger serializer which lets it use the mapper only for the swagger spec\nI've sent a PR to your repo with the changes, Please check it out.\n. Well, let's first get the basic wink example working and committed to 1.5.x and then make things more complicated with CDI, etc.\n. Hi, @lemoncolly any update on this?\n. Moving this to M3 due to inactivity\n. The idea is, you already have a model being introspected by the service.  For example, you have a User definition which is referenced by an operation like GET: /users/.  Instead of relying on the introspection of the User pojo or java object, we want to expose the model as a reference.\nFour use cases:\n1) As an operation, instead of specifying a response class in an operation like this:\n@ApiOperation(value = \"Find users\", \n  response = User.class,\n  authorizations = @Authorization(value = \"api_key\")\n)\nwe might do something like this:\n@ApiOperation(value = \"Find users\", \n  responseReference = \"http://my.company.com#/definitions/User\",\n  authorizations = @Authorization(value = \"api_key\")\n)\nI'm not saying thats exactly the best annotation, but something along those lines.  Instead of drilling into com.mycompany.User, I will simply (blindly) insert the remote ref in there.\n2) In a pojo, we should define an annotation that will override the parsing of the model properties.  This is much more simple, but necessary:\n@ApiModel(remoteReference = \"http://my.company.com#/definitions/User\")\n3) In the @ApiResponse annotation, which is optionally put in an operation annotation, we should support the remote reference:\n@ApiResponse(code = 404, message = \"User not found\", remoteReference = \"http://my.company.com#/definitions/Error\") })\n4) in a model property, an @ApiModelProperty should be annotated to point to a remote reference rather than introspect into a property:\n@ApiModelProperty(value = \"Order Status\", remoteReference = \"http://my.company.com#/definitions/OrderStatus\")\npublic String getStatus() {\n  return status;\n}\nso a complex definition can be returned rather than a simple text string.\nAgain, let's work on the names for the annotation changes (@webron will probably have some good input) but this \n. ok @webron please choose some names so we can add support and close this?\n. pointer?  @webron please just pick one.\n. please reopen if needed.\n. Hi, I'm closing this out as we're not planning on more work on the 1.3.x branch.\n. I believe this is fixed in develop_2.0.  Will verify \n. The httpMethod was not doing a case insensitive match, and GET would cause empty operation types.\n. This is a defect for 1.5.0-M2\n. This should be fixed now in https://github.com/swagger-api/swagger-core/blob/30a06854d972420106fc85b0450a7a9a778dc894/modules/swagger-jaxrs/src/main/java/com/wordnik/swagger/jaxrs/listing/ApiListingResource.java\nBeanConfig and WebXMLReader are not meant to be used together.  Can you please retry from develop_2.0 and report back?\n. Hi @Helmsdown can you please sync with develop_2.0 for swagger-core?  They shouldn't affect the codegen PRs, which i'm getting to now.\n. please use 1.5.3-M1-SNAPSHOT now\n. so the whole swagger spec is in the response payload?  I'm not sure I understand the issue.\n. Hi, you have a body param in your function (without annotations) and an implicit param.  That's why you see two body params.\nYou should annotate your method argument instead of using the ApiImplicitParam.  Those are used when there is no variable to annotate.\n. @webron looks like the errors are because of more strict parsing of javadoc tags.  The @return value needs to be set for each method or it'll fail to build on java8.  Can you please help with this one?\n. Make sure you have Java 8 and run mvn install\n. I fixed the self-closing element issues. https://github.com/swagger-api/swagger-core/commit/e11fb9553b273a522a1d22c38fa73ebcc62e8cb5\n. Means we're looking into the issue but if it can't be addressed for the release, it can be bumped to the next one\n. Please reopen if still an issue.\n. Closing due to inactivity. Please take a look at the dependencies in the sample project:\nhttps://github.com/swagger-api/swagger-core/tree/master/samples/java-jersey2\n. Have you followed the sample?  What is the URL that you're putting in the UI?  And what is your webroot?\n. Then you should be pointing your UI to http://localhost:8080/swagger/api-docs from your configuration above.  If you put that in a browser, what do you get?\n. No put that in your browser, not the swagger-ui.  I suggest you clone one of the samples directly and get familiar with the configuration process.\n. I'm really trying to help, but I need to you to do what I'm asking.  Put this DIRECTLY in your browser:\nhttp://localhost:8080/swagger/api-docs\nDO NOT put it in swagger-ui.  Paste the output from the error message, NOT the swagger ui.\n. then swagger is not mounted on the context /swagger.  You'll have to sort out where you've mounted it before anyone can help.\n. The samples are here for you to follow so you can configure your system.  Nobody can help without more information so please go back to the samples and diff your setup from them.\n. OK the original issue described here has drifted.  I'll address the last comment and close the issue--let's open a new one if it's not clear.\nthe swagger-ui currently does not dynamically configure the text box for api key.  That is slated for the next release, M2.  That said, the default in swagger-ui is configured to set a query parameter called api_key based on the value you enter in the text box:\nhttps://github.com/swagger-api/swagger-ui/blob/b5ebe4f79607f066a4a4f6fb47e660bc62492dc3/dist/index.html#L63\nThis is intended for you to change for your usage.  As I mentioned, swagger-ui will dynamically configure the authentication UI based on the spec shortly.  Track this issue:\nhttps://github.com/swagger-api/swagger-ui/issues/798\n. Please send a pull request to the develop_scala-2.10 branch, the sample is from here:\nhttps://github.com/swagger-api/swagger-core/blob/master/samples/scala-oauth-authorization-server/src/main/scala/com/wordnik/swagger/sample/resource/PetResource.scala#L77-L79\n. @cppexpert what are you expecting this to do?  I've run the following model:\n``` java\npublic class ModelWithTuple2 {\n  @ApiModelProperty(value = \"Possible values for state property of timesheet or timesheet entry\", required = true)\n  public Pair timesheetStates;\n@ApiModelProperty(value = \"set of pairs\", required = true)\n  public Set> manyPairs;\n@ApiModelProperty(value = \"set of pairs wiht complex left\", required = true)\n  public Set> complexLeft;\nstatic class ComplexLeft {\n    public String name;\n    public Integer age;\n  }\n}\n```\nand I get this, which is actually what I expected:\njson\n{\n  \"ComplexLeft\" : {\n    \"properties\" : {\n      \"name\" : {\n        \"type\" : \"string\"\n      },\n      \"age\" : {\n        \"type\" : \"integer\",\n        \"format\" : \"int32\"\n      }\n    }\n  },\n  \"ModelWithTuple2\" : {\n    \"required\" : [ \"complexLeft\", \"manyPairs\", \"timesheetStates\" ],\n    \"properties\" : {\n      \"timesheetStates\" : {\n        \"description\" : \"Possible values for state property of timesheet or timesheet entry\",\n        \"$ref\" : \"#/definitions/Pair\"\n      },\n      \"manyPairs\" : {\n        \"type\" : \"array\",\n        \"description\" : \"set of pairs\",\n        \"uniqueItems\" : true,\n        \"items\" : {\n          \"$ref\" : \"#/definitions/Pair\"\n        }\n      },\n      \"complexLeft\" : {\n        \"type\" : \"array\",\n        \"description\" : \"set of pairs wiht complex left\",\n        \"uniqueItems\" : true,\n        \"items\" : {\n          \"$ref\" : \"#/definitions/Pair\"\n        }\n      }\n    }\n  },\n  \"Pair\" : {\n    \"properties\" : {\n      \"value\" : {\n        \"type\" : \"string\"\n      },\n      \"key\" : {\n        \"$ref\" : \"#/definitions/ComplexLeft\"\n      },\n      \"right\" : {\n        \"type\" : \"string\"\n      },\n      \"left\" : {\n        \"$ref\" : \"#/definitions/ComplexLeft\"\n      }\n    }\n  }\n}\n. OK I've pushed an example of how to override the type in the 1.5.x develop branch:\nhttps://github.com/swagger-api/swagger-core/blob/d867f2d1c908bb575c39bfaf65fa926653b42abb/modules/swagger-core/src/test/scala/models/ModelWithTuple2.java\nHere I'm simply saying that Pair<String, String> is a Map<String, String>\n. Looks like this causes an issue with non jdk8 builds.  Is there a way to make this flag conditional depending on jdk version?\n. this has been fixed.\n. Hi for now, this scenario is simply not supported.  There is an open ticket #899 which could solve it for you.  Please watch that ticket.\nIn the mean time, you can ignore this property by removing the annotations and use the @ApiImplicitParam, which will let you specify the datatype for each operation.  Note the datatype needs to be fully qualified with the pacakge, and cannot be an inner type.\nPlease reopen if that's not clear.\n. @TuomasKiviaho thank you for opening a new issue, the other one was hijacked and the title was wrong (it's not missing because it's not supposed to be there).  I do agree with the convenience, it's simply a priority issue.  If you like, you can for the develop_2.0 branch and send a pull request for it.  As long as it's well tested, we'll merge it.\n. This has been added in https://github.com/swagger-api/swagger-core/commit/9e8b2c6bff639598df077465b9a78ebb854f0b83. @webron all of this is possible but introduces some other considerations.\n1) This would require someone to define all tags in a bootstrap to add to the Swagger instance.  Are you sure you want to require that?\n2) What do we do if we encounter a tag string that is not defined at bootstrap?  Meaning, as it stands, we can construct tags at the top level without bootstrap\nwe can change the signature for tags now, but shouldn't after M2 is released.  So chime in and we can make it so.\n. ok got it.  so we should remove tags from @Api, change to String[] for @ApiOperation and enable setting tags w/descriptions + external docs outside the controllers.  Finally if a tag appears in the @ApiOperation we add it w/o a tag.  LMK if this isn't true.\n. Renaming this ticket.  It's not improving, it's refactoring.\n. @webron isn't this what we want?\nhttps://github.com/swagger-api/swagger-core/blob/be191a6b7d452d19e44b174a4535eb82faa5675a/modules/swagger-jaxrs/src/test/scala/resources/Resource841.java#L13\nhttps://github.com/swagger-api/swagger-core/blob/be191a6b7d452d19e44b174a4535eb82faa5675a/modules/swagger-jaxrs/src/test/scala/resources/Resource841.java#L20\n. Go ahead and delete it in a PR, if it builds, it's not needed.\n. This is expected, he subtype support is expected in M2, out shortly\n. We are targeting 3/14 but it's possibly a week out.\n. Hi @cppexpert M2 is off by a week.  I can certainly do a point release of M1.\nWatch for 1.5.3-M1 in a bit.\n. 1.5.3-M1 is now released.  It should appear in maven central shortly\n. Implicit params are supported (was the original issue posted here).  Did you look at the fix in the sample project you provided?\nThe model issue #847 is not quite done yet.\n. This implicit parameter code path should be well tested. If you can please provide an example of what is not working we can figure it out. \n. Yes, it's a defect.  Working on it.\n. @cppexpert I think your dependency isn't right.  Please try this:\n\"io.swagger\" % \"swagger-jersey2-jaxrs\" % \"1.5.1-SNAPSHOT\"\nThat is where the fix lives.  Let us know?\n. Yes, please try sonatype snapshots:\n\"sonatype-snapshots\" at \"https://oss.sonatype.org/content/repositories/snapshots\"\n. I do see it here:\nhttps://oss.sonatype.org/content/repositories/snapshots/io/swagger/swagger-models/1.5.1-SNAPSHOT/\nI'll republish the snapshot though.  Try again?\n. wrong branch, should be develop_scala-2.10\n. added http://petstore.swagger.io/v2/swagger.json\n. I'm sure it can technically be done, but we deprecated 1.3.x well over a year ago, so we don't plan on making changes to it.\n. Please look at the tests in the develop_2.0 branch. For instance:\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-core/src/test/scala/com/wordnik/swagger/model/override/SamplePropertyConverter.java\n. Take a look at the POM here:\nhttps://github.com/swagger-api/swagger-core/tree/develop_2.0/samples/java-jersey2\n. it should live on /swagger.json not /api-docs now\n. I strongly suggest walking through the samples in the develop_2.0 branch and seeing how the configuration works, and how it's different from your app.\n. Hi, looks to me like there's a jackson issue.  There should be no null values exposed in swagger.\nI am guessing that you have multiple @Providers trying to write the JSON.  Are you using a web.xml?  If so, can you look at the differences between yours and this?\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/samples/java-jersey2/src/main/webapp/WEB-INF/web.xml\n. Please make sure you add this provider directly:\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-jaxrs/src/main/java/com/wordnik/swagger/jaxrs/listing/SwaggerSerializers.java\nThen the swagger model should be serialized correctly.\n. Are you sure you are adding the jersey2 module?  Bean params are supported and well tested. \n. If it's included in your webapp's classpath, it should register automatically.  Can you please share the libraries that are pulled into your app?  At least the swagger ones.\n. @alpeb if you're looking at how this works in the 1.5.x version, you should look at the swagger-scala-module which will support scala\n. I'll get that updated on the project, please track https://github.com/swagger-api/swagger-scala-module/issues/2\n. ok @alpeb please take a look at the homepage for the scala module for instructions on adding it.\n. That's what this ticket is for. Scala support is in but play support is in process. Sorry, I read your comment as a general scala question not play specific\n. Hi @ctolkmit I'm going to close this out and ask that we continue in the swagger-play repo.  There are multiple efforts on Play! integration from outside the core swagger team that I'm trying to see about combining forces with.\n. Looks great--only comment is about removing the prettyPrint during tests to keep them less verbose\n. Hi, I know this is confusing--and it's going to get a lot less confusing soon, but the develop branch is develop_2.0 for the current (1.5.x) version.  If you're looking for something for the previous (1.3.x), it should be develop_scala-2.10.  Sorry it's a maze, but again, will be cleaned up completely when 1.5.0 is released.\n. fixed in https://github.com/swagger-api/swagger-core/commit/6721e95389cf6dea013fed6931844c9d031907a8\n. Hi, try 1.5.3-M1-SNAPSHOT. We recently updated the  subresource support there. Also a sample should help you as well:\nhttps://github.com/swagger-api/swagger-core/tree/develop_2.0/samples/java-jaxrs-subresource\n1.5.0-M2 should be released this weekend. I'd love to get your feedback on this beforehand!\n. Hi, looks like we need to send a PR to that repository.\n. Hi, this is using subresources.  Can you please try with 1.5.3-M1-SNAPSHOT?  The annotations should be the same, and there is a sample here:\nhttps://github.com/swagger-api/swagger-core/tree/develop_2.0/samples/java-jaxrs-subresource\n. Hi, the develop_2.0 branch is targeting 1.5.3-M1-SNAPSHOT:\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/pom.xml\nYou can find the snapshot artifacts in sonatype:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-core/\n(the 2.0 snapshot is a misfire, I need to delete it)\n. See the sample here:\nhttps://github.com/swagger-api/swagger-core/tree/develop_2.0/samples/java-dropwizard\nNote there are some dependencies you need to handle in the pom.xml.\n. @shivangshah thank you for the feedback.  Here are some answers:\n1) I will look at supporting that.  If you have @ApiOperation that should be sufficient, like you're expecting\n2) the required flags were fixed yesterday.  If you get a new snapshot you should see them working fine.\n3) the body parameter should be found, so this is a defect too.\n. I would really appreciate the separate issues, yes\n. since we have new, separate issues, i'm marking this as resolved.\n. Are you using web.xml?\n. Are you using web.xml?\n. Could you please share the web.xml?  It shouldn't be going into this block of code without a valid swagger object.\n. I don't see anything wrong in here.  I'm guessing this will help:\nhttps://github.com/swagger-api/swagger-core/tree/develop_2.0/samples/java-jaxrs-no-webxml\nSpecifically, my guess is we're missing these lines in your bootstrap:\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/samples/java-jaxrs-no-webxml/src/main/java/com/wordnik/swagger/sample/Bootstrap.java#L17-L19\njava\n  public void init(ServletConfig config) throws ServletException {\n    ReflectiveJaxrsScanner scanner = new ReflectiveJaxrsScanner();\n    scanner.setResourcePackage(\"com.wordnik.swagger.sample.resource\");\n    ScannerFactory.setScanner(scanner);\n    Info info = new Info()\n      .title(\"Swagger Sample App\")\n///\n. Please try 1.5.2-M2-SNAPSHOT.  This should work just fine.\n. Hi, I suggest upgrading to 1.5.x as soon as you can.  We are using Jackson under the hood to read models and some of this support will \"come for free\".  I haven't tried this use case, I'll mark it for investigation.\n. Please reopen if still an issue.\n. Hmm.  That is generated by the Jackson YAML module.  If you can look in the Yaml module settings it would help out a lot.\n. :+1: \n. Please upgrade to 1.5.3-M1.  It should be fixed there and if not, it can be deployed this weekend along with 1.5.0-M2\n. The new version uses swagger.json as the default listing location.\n. Great news!  There will be a new release of swagger-ui any hour now, too.\n. @BigSocial perhaps you're bringing up something different.  Are you annotating different methods with the same path + http operation but different produces or consumes values?  If so that's a bug.\n. hi @ralf0131 it's not a spec bug, but it is a feature limitation.  Please consider adding a comment to that repo with your usecase and desire to have it changed.\n. I believe this is fixed in 1.5.3-M1. Can you please retest? \n. Thank you for testing, will assure this is fixed \n. Yes, the are no longer needed.  Can you explain more what you're trying to do?\n. Actually, you're right.  The setFilterClass is indeed missing\n. you can remove the setApiReader.  the setFilterClass will be pushed shortly.\n. If you update to 1.5.4-M1-SNAPSHOT from sonatype-snapshots you will see the setFilterClass on BeanConfig.\n. thanks\n. Please reopen if still an issue.\n. this is fixed in develop_2.0\n. If you wait a few, there will be a formal release.  I'm verifying for 1.5.0-M2 right now.\n. This won't be able to be changed until M3.  Pushing to next milestone.\n. This should be fixed now.\n. I believe the swagger-ui e2e tests are going to look for the text that used to be there (irrespective of order).  Can you please keep the same text values for now?\n. Just change the descriptions to what they should be, swapping the tag name so they're correct.  Push that and the PR should update.\n. You can try rebuilding swagger-core-1.5.0-M2 with JDK6.  It should work.  Please report back after trying\n. Not possible in 1.3.x as @webron said.  Possible in 1.5.x, but it's a non-standard configuration.  If you want to go this route, you'll be going off-road a bit but it's technically possible.  Consider using the BeanConfig technique to generate a Swagger.java pojo from whatever classes you like, and serving it up on one of your routes.\n. Swagger.java\n. @blackat this was added a year ago in a standard way, please see this example:\nhttps://github.com/swagger-api/swagger-samples/tree/master/java/java-jersey-jaxrs-multi. The NPE should be gone, but the presence of a null set of classes indicates another issue.  Regardless this can be closed.\n. fixed in #1014\n. I suggest the latter to maintain 1.3.x compatibility\n. fixed in #1017\n. Will look into this for m3.\n. @webron @Poohie can we close this?\n. Please see #1502 for info on configuring the ObjectMapper for Jackson JAXB annotation support.\n. I know there is, but to be honest I don't recall.  I'd suggest following the technique in swagger-samples for the appropriate system.\n. Please reopen if still an issue\n. Please upgrade to 1.5.1-M2, this should be supported now.\n. Hi, you should be able to call Json.mapper() to get access to the underlying mapper to register additional components.\n. @ron is correct.  You would need to do the same thing for YAML:\nObjectMapper mapper = Yaml.mapper()\nIf you modify this mapper, it will affect the serializers for the spec.\n. should use the Yaml class.  that would be a bug.\n. Please reopen if still an issue.\n. There are now fallbacks for custom formats, and you won't get a NPE if you don't match specific values.  Please reopen if you're still having an issue.\n. There was a build error but I've addressed it.\n. thanks @ben-manes.  There is an m2-snapshot in sonatype, fyi.\n. oh for shame.  The snapshot wasn't pushed---I've just done it:\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-core/\nSorry about that.\n. This is a monster commit so it may take some time to get reviewed.\n. Please reopen if still an issue.\n. @buremba oops, that is my mistake then.  If it's not in the spec, it shouldn't be filed as a ticket--I told you otherwise, I apologize.\n. I don't see why this is necessary.  What provider are you using for serializing the Swagger object to JSON?  We have built one that will do this already, and if you're not using it, you should use the logic that it has.\nThe raw ObjectMapper:\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/main/java/com/wordnik/swagger/util/Json.java\nThe provider:\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/main/java/com/wordnik/swagger/jaxrs/json/JacksonJsonProvider.java\n. @kungfoo great--but you also need to use the provider I mentioned.  Can you please do that?  It won't affect any of your other operations, it's only used for the swagger mapping.\n. Many ways to configure it, but the easiest--assuming you're using web.xml--is to add the path to your scanning properties:\nhttps://github.com/swagger-api/swagger-core/blob/master/samples/java-jaxrs/src/main/webapp/WEB-INF/web.xml#L12\n. Yes, @webron is right, I should have pointed you to that file.\n@webron should we delete the old provider?\n. okie.  This PR has drifted into different issues during it's short life, but it did expose one very important bug--arrays of enums (your Set property) was causing expansion problems.  Thank you for bringing that up, and https://github.com/swagger-api/swagger-core/commit/605180e75a0246adec0f97aeef0fc380f092a5c3 should address it.\nThis does raise, unfortunately, another issue.  The latest swagger-jersey2-jaxrs module has added an import for org.glassfish.jersey.media.multipart.FormDataParam, which is specific to the jersey implementation.  Thus it cannot be excluded from your pom.xml and you get an ugly runtime error.\nThat said, I'm going to close this ticket and open a new one to track the jersey2 dependency\n. confirmed bug, also, empty package specifier does not scan all packages, per #1098 \n. fixed in #1025 \n. Being in a separate jar should be no problem at all, and most deployments do this.  Please try 1.5.x and report back--you can reopen this issue if it continues.\n. yes, there should be some private value to map these too in the properties.\n. This has been added back.\n. @wing328 I've pushed the updated petstore now, it should work.  There was a delay, we merged a PR and caused a spec problem.\n. I believe this is a swagger-ui question, and probably more specific to the framework you're using.  Can you please open a ticket in swagger-ui, or in the respective framework that you're using?\n. Not sure if you want to do that.  See examples:\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-jaxrs/src/test/scala/resources/ResourceWithApiResponseResponseContainer.java#L13-L21\nWe support \"Map\" where keys are strings.\n. @lugaru1234 if @webron wants to remove support of map in the response headers (to support the spec properly), please remove it from the sample ResourceWithApiResponseResponseContainer.java.  @webron merge when you're happy with this.\n. can you send a PR to remove the old one?\n. This PR is very difficult to merge.  Please do not mix reordering headers, formatting, etc. with code changes and changes in the expected test results.  It makes it much more difficult to accept.  I am closing, and if you can resend a PR with explanations and/or more structural changes, we can always merge style changes in follow-up requests.\n. can you please upgrade to 1.5.x?\n. It is, but as we're not developing that version anymore, it would be wise to upgrade if possible.  If not, we can hunt it down but you may be stuck patching a fork rather than getting it from the mainline.\n. sure thing.  Can you share your pojo?\n. ok that's very different then.  the model converters will not be triggered in this scenario.\nI suggest adding the response class to the @ApiOperation, that should solve it:\n@Path(\"getTime\")\n@ApiOperation(value = \"getTime\", response = String.class)\n@GET\n@Produces({\"application/json\"})\npublic java.util.Calendar getTime() throws java.rmi.RemoteException, {\n  LOG.info(\"Executing operation getTime\");\n  return binding.getTime();\n}\nRight now, you're relying on the parsing of the method return type to specify the response model.  You can do this in the annotation instead.\n. I believe that's correct.\n. Someone want to fire up their IDE to implement these and send a PR?\n. @dilipkrish please explain more?\n. Sure, I understand.  For something like Swagger I think the chance of this popping up is extremely low, and each of the swagger pojos has full control to modify the lists, etc, which are verified at comparison time for both hashcode and equals.  If there's a better way, I'm happy to merge it.\n. I'm closing this out as it's a spec issue, and has a corresponding issue in that repo.\n. OK, looking at the source of this issue, I do believe this is how the code has always been--the File datatype is automatically mapped to body:\nhttps://github.com/swagger-api/swagger-core/blob/v1.3.12/modules/swagger-jersey-jaxrs/src/main/scala/com/wordnik/swagger/jersey/JerseyApiReader.scala#L178-L182\nscala\ncase e: FormDataParam => {\n  mutable.dataType match {\n    case \"java.io.InputStream\" => {\n      mutable.name = readString(e.value, mutable.name)\n      mutable.paramType = \"body\"\n      mutable.dataType = \"File\"\n    }\nLooking at the UI code, it looks like the datatype file is also ignoring the paramtype:\nhttps://github.com/swagger-api/swagger-ui/blob/master/src/main/javascript/view/OperationView.js#L218-L222\njs\n      if (type && type.toLowerCase() === 'file') {\n        if (!contentTypeModel.consumes) {\n          contentTypeModel.consumes = 'multipart/form-data';\n        }\n      }\nWith that background, I suggest we do NOT change the underlying java code and release 1.3.13.  We should simply annotate the spec that the param type is ignored for datatype File.  I fear that releasing a new version of 1.3.x would not help.\nChalk this up to underspecification of the spec previously, which is addressed in 2.x.\n. OK I have created two PRs that will address this issue.  Let's decide if we want to merge them.\n. The plugin will need to add the swagger-scala-module for this. \n. I'm closing this out as it's an implementation issue in the swagger-maven-plugin\n. @webron let's just do this then.  What do you want the samples repo to be called?\nI see a number of languages & frameworks need samples.  The swagger-core samples were really swagger java samples.  This may be the right time to make a samples repo for all samples, not separated by language or framework.  Post your feedback and we'll get it done.\n. Do you want me to move them?\nhttps://github.com/swagger-api/swagger-samples\n. @webron please merge https://github.com/swagger-api/swagger-core/pull/1083 when docs, links, etc. are update do support this.\n. hi @kylebober any update?\n. @ankurpiyush26 please open a new issue with some more details.\n. Hi @okigan what is the purpose of this?\n. Can you please retest with 1.5.2-M2-SNAPSHOT?\n. no, I've just updated that.\n. well that's not right.  looking into it, it should be supported.\n. well that's not right.  looking into it, it should be supported.\n. can you please test this behavior with 1.5.2-M2-SNAPSHOT?  From tests, it looks to work correctly.\n. can you please test this behavior with 1.5.2-M2-SNAPSHOT?  From tests, it looks to work correctly.\n. it's for back-compatibility support only.\n. it's for back-compatibility support only.\n. It should be a string array\n. It should be a string array\n. Deployment error, this has been fixed. \n. Deployment error, this has been fixed. \n. closing as #1011 supports this (just scan all packages)\n. Which scanner are you using?  web.xml, BeanConfig, etc?  And which swagger version?\n. Which scanner are you using?  web.xml, BeanConfig, etc?  And which swagger version?\n. OK please try develop_2.0, which is available on 1.5.3-M2-SNAPSHOT via sonatype oss.  I've added a unit test and this is not giving an error\n. OK please try develop_2.0, which is available on 1.5.3-M2-SNAPSHOT via sonatype oss.  I've added a unit test and this is not giving an error\n. I suggest you send a PR then, you can even base it on the previous comments.\n. I suggest you send a PR then, you can even base it on the previous comments.\n. This could be tricky to support in the tree, when scanning to find a parent reference.  Every resource may live on it's own, so if you don't want it to be picked up, I don't see how you can avoid marking it as hidden at the @Api annotation.\n. not that i know of.  we can upgrade it.\n. not that i know of.  we can upgrade it.\n. Looks great--samples are passing validation with this change, I'm merging.\n. Looks great--samples are passing validation with this change, I'm merging.\n. This should be fixed in 1.5.1 and later releases.\n. This was added in https://github.com/swagger-api/swagger-core/commit/5928abd2668448d29bf29ce6147d83ec1200eb59\n. This was added in https://github.com/swagger-api/swagger-core/commit/5928abd2668448d29bf29ce6147d83ec1200eb59\n. This was added by https://github.com/swagger-api/swagger-core/commit/5928abd2668448d29bf29ce6147d83ec1200eb59\n. This was added by https://github.com/swagger-api/swagger-core/commit/5928abd2668448d29bf29ce6147d83ec1200eb59\n. There is something called a RefProperty which supports this.  Please try that and reopen if needed.\n. There is something called a RefProperty which supports this.  Please try that and reopen if needed.\n. Hi, please re-open if you're having an issue with 1.5.x.  As @webron said, you should consider updating to 1.5.x.\n. I believe the sorting was added because, given it is a map, the order would change just fetching the items twice in a row.  Since the maps are unordered, I think it's best to leave this as such.\nI do suggest using tags if you want to organize your resources better.\nPlease reopen if you strongly disagree and we can try to find some sort of solution.\n. yes you can\n. yes you can\n. @gkozyryatskyy what swagger plugin are you referring to?  If this is springfox, then it's a separate project that may not support the latest annotations.. @gkozyryatskyy what swagger plugin are you referring to?  If this is springfox, then it's a separate project that may not support the latest annotations.. OK looks like we need to open a ticket in that project.. OK looks like we need to open a ticket in that project.. Thanks all--this is fixed in master now and will go out in the next release.\n. There is no \"permalink\" to a section of the swagger spec.  I think you can create something of your own, that follows the general hierarchal structure of the swagger object, though.\n. This has been addressed by #1161\n. OK so you're all set by updating the dependency?\n. OK so you're all set by updating the dependency?\n. work-arounds described in the thread.\n. Yes, using string as an example really doesn't work here.  Will try to get this addressed in an update to the swagger-core and swagger-models.\n. Follow #1107. Follow #1107. @skjegg apologies for the delay.  You are indeed correct, the getSingletons() method will not return class objects.  Your fix makes sense--if you can submit a PR to the develop_2.0 branch, that'd be great.\n. @skjegg apologies for the delay.  You are indeed correct, the getSingletons() method will not return class objects.  Your fix makes sense--if you can submit a PR to the develop_2.0 branch, that'd be great.\n. @webron you're one step away from a PR\n. Added to the annotations in 1.5.11.. As I mentioned, someone can send a PR and I'd be happy to get it merged.  But the cause and the magic of groovy is not something that's clear to me.\n. We have created fallbacks in PropertyBuilder so the type can have an implementation when format is not matched.\n. Sure thing, reopening here.\n. Added in master.. @bchazalet yes, this is a missing feature.  The spec allows it and it will be implemented.  It's just not complete.\nIn the mean time, you can flatten you model references.  For example your Model has a nested schema in a property--instead of nesting, you can use a ref:\nyaml\nModel:\n  type: object\n  required:\n    - simple1\n    - submodel\n  properties:\n    simple1:\n      type: integer\n    submodel:\n      required:\n        - element1\n      type: object\n      properties:\n        element1:\n          type: integer\n          format: int32\ncan be this:\nyaml\nModel:\n  type: object\n  required:\n    - simple1\n    - submodel\n  properties:\n    simple1:\n      type: integer\n    submodel:\n      $ref: '#/definitions/SubModel'\nSubModel:\n  required:\n    - element1\n  type: object\n  properties:\n    element1:\n      type: integer\n      format: int32\n. Fixing the underlying issue is not terribly difficult.\nWhat would you expect the embedded object to be \"named\"?  For example, a code generation will likely create a second object for the complex property.  Since we probably wouldn't want it to be an inner class, what would you expect it to be generated as, as an end user?\n. I get it.  Yes, let's get that supported in core, I'll bump up the priority on this.\n. As @webron said, you can include just the swagger annotations for lightweight support.\n. OK turns out this is buried deep in Jackson.  I don't think that overriding the @JsonIgnore is very feasible.  The annotation introspector allows an introspection pair--however, the default introspector will \"win\" if it sees an ignore annotation.  Since we don't want to remove the default introspector, it's going to be hidden even if you have the @ApiModelProperty(hidden=false).  See:\nhttps://github.com/FasterXML/jackson-databind/blob/jackson-databind-2.4.5/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationIntrospectorPair.java#L275\n. Since this is a behavior in Jackson, I don't think it can be resolved.  You'll have to perform some other Jackson magic to support this.\n. Closing as old, we'll update the organization for 3.0 support.. closing as fixed in 1.5.3\n. The helper security was added (not securityRequirement per your request) as it follows the JSON representation of attribute names.  There is als a securityDefinition helper for building a swagger with the SecurityDefinition object.  I'm not quite sure what the need is for a Requirement object though.\n. @boillodmanuel How are you getting securityRequirement?  The SwaggerSerializers for jackson should address this.  Perhaps you're not using them?  They are required.\n. Ok, please report back if you're having troubles with this.  You can use the Json.mapper() for convenience.\n. This was fixed by https://github.com/swagger-api/swagger-core/pull/1783\n. It should be in 1.5.9.  Can you please check and report back?\nhttps://github.com/swagger-api/swagger-core/commit/d24904f9bf36f00a6fad0f66f09eb0472c4bd551\n. I'm looking at the build error, it's unrelated to the change.\n. I think you'd have to implement this and send a PR.  What do you want to do when a property is skipped?  Ignore it?. Looks good, thanks for contributing.\n. As discussed, we should avoid changing the pattern for models until a 2.0 release, since it'll break every usage of the SwaggerModel artifact.  While this is much better, I suggest we work around the interfaces and push the renaming into next major.\n. Well this looks really good.  Let's get @webron's input as well as his spec changes first and we can see if this can be merged for the next minor release.\n. We can't break the models.  We can add to them though.  We can add new accessors or fields, but not break old ones :(\n. if we are breaking the old models then we cannot.  If we add new ones, then great.\n. looks good @Helmsdown \n. So, the swagger introspection logic does not look into custom deserializers.  Those do the work but not expose the structure that they will expose.  So:\n- Do not expect the @JsonDeserialize to be considered for producing the swagger.json\n- Do not expect the @JsonSerialize to be considered for producing the swagger.json\nYou can easily configure a different handling for LocalDateTime by configuring the ModelConverters though.  Please look at this test for an example:\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/test/java/io/swagger/model/override/GericModelConverter.java\nJust implement the resolveProperty to check for the type that you're interested in applying a special conversion to.\n. @Mowee if you look here in the tests:\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/test/java/io/swagger/model/override/ModelPropertyOverrideTest.java#L15\nYou should see how to add your converter.  Please open a new issue if you still have trouble.. No need for static.  Thank you.\n. @rkosegi could you please send this pull request to the develop_2.0 branch?  I will get it released this week.\n. thank you\n. To download a file, set the type to be byte.class and set the appropriate @Produces annotation such as application/octet-stream or the specific media type of the file.  Swagger-ui will handle it correctly.. You should consider posting a JSON or XML payload--that way you can send as much data as needed.\nHTTP does not allow multiple BODY entities in a single post.  It does, though, allow complex POST bodies.\n. this should be addressed in the validator code.  Please open an issue in that project if you're having issues with it still.\n. It's an oddity in the models that could technically go away.  You can use something called a RefProperty which can point to a model, which is how the Response object works.  We'll probably clean this up, but it'll be a breaking change in the models and require a major release.\n. This will change with the 3.0 specification, as parameters, models, and properties will essentially be the same.. Why did the assertions need to change?  Did the resource definition change with the test refactoring?\n. Thank you\n. I've verified that this is supported in 1.5.2.  Adding a test to confirm that null definitions don't cause the NPE.\n. Something is being misunderstood I think.\nThe swagger POJOs are serialized by io.swagger.jaxrs.listing.SwaggerSerializers.  These are necessary to ensure the right serializers are configured for parameters, models, etc., and that nulls aren't written.  This @Provider will only try to write entities of class io.swagger.models.Swagger.\nYou don't need to use JacksonJsonProvider unless you want to.  It's strictly for convenience.  If you don't want it, please make sure it's not in your scanning path.\n. How are you configuring jersey?\n. OK got it.  To be honest, every JAX-RS framework I've dealt with has some control over what is scanned.  Can you include specific property packages or classes to scan, @t1?\n. @t1 were you able to look into including/excluding classes or packages?\n. OK thanks for the feedback.  Thinking through what the best way is to handle this, I'll update this issue here shortly.\n. unfortunately annotations don't support this type of behavior.  We are a bit stuck with the current JLS, unless we decided to put a \"meta syntax\" in the example field like @rowanhill is proposing.  That could be quite messy to maintain though.\n. The dataType field is expecting either a primitive or a fully-qualified type.  So you can certainly use java.io.File and it'll follow the regular processing patterns.\n. hmm.  Can you please change the input type to java.io.InputStream and let me know what you get?\n. OK I've dug into this more.  We do indeed need to make a change in the processing chain :(\n. You can pull this from master\n. Hi, I have pushed a snapshot to sonatype-snapshots repo.  For the next release, I don't have a date but I do hope to do it within a few weeks.  I apologize that we didn't get this into 1.5.4, there was just too much to do :)\n. great, thank you\n. @dklotz please share your whole annotation declaration\n. @webron can you please review the changes?\n. Slight clarification to @webron's comment. Swagger spec is not bound solely to any framework including jaxrs. Therefore it is quite possible to have a framework feature which is outside of the spec, this seems to be an example. \n. I'm going to close this as \"as designed\".  Please open a spec enhancement in swagger-spec if this is too restrictive for you and you have a general proposal for handling it.\n. if you could, please send a PR with a test in it that exhibits the problem.\n. As @webron said, this is by design.  Please look at the swagger-spec and file any enhancements you are looking for in that project.\n. OK I've reproduced this with a simple test:\n``` java\npackage io.swagger.resources;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport io.swagger.annotations.ApiParam;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.PathParam;\nimport javax.xml.bind.annotation.XmlRootElement;\n@Path(\"/v1\")\n@Api(value=\"root\")\n@XmlRootElement\npublic class Resource1343 {\n  RestApplication _application = null;\n@GET\n  @Path(\"/{dbkey}\")\n  @ApiOperation(value=\"Retrieve a database resource\")\n  public DatabaseResource getDatabase(@ApiParam(name=\"dbkey\",value=\"Database key\") @PathParam(\"dbkey\") String dbKey) throws Exception {\n      return new DatabaseResource(this, dbKey);\n  }\n// should not output anything in swagger\n  public String doNothing() {\n    return \"nothing\";\n  }\npublic RestApplication getApplication() {\n     return _application;\n  }\nstatic class RestApplication {\n    public Integer id;\n    public String name;\n  }\nstatic class DatabaseResource {\n    public String databaseName;\npublic DatabaseResource(Object parent, String key) {\n\n}\n\n}\n}\n```\nThis adds the RestApplication in the definitions section of the JSON.  Will work on a fix\n. I will add some tests around this, but as-is, it should deserialize this into a map with key type string and value java.lang.Integer\n. The deserializer handles addtional properties, see tests.\n. Per @webron 's comments, we cannot change the meaning for @Api#value()\n. This is a behavioral change.  We added support for scanning of @Path operations even if not annotated with @ApiOperation.  Please consider adding @ApiOperation(hidden=true) to avoid them.\n. There is a flag to scan all resources. Take a look at the 1.3.12 tag in the samples folder in swagger core (these have moved to a separate repo in 1.5.x at the \"no annotations\" sample. \n. Looking at BeanConfig, it looks like you can have multiple packages, separated by ,.  Can you please try that?\n. @dheerajarora which issue are you having?  The original issue about scanning or multiple packages via beanConfig?\nSince this issue has strayed, i'm closing.  Please reopen a new one with details on the issue you're having.\n. This could potentially create other issues and therefore we need to test the impact first.  Targeting 1.5.5\n. In the 3.0 spec, this will become first class.. Timing depends on the whole OAI technical group, not just me.  I suggest following OpenAPI Spec on Twitter for timing announcements. . Hi if you can, please update to 1.5.3 (yes, no M1 suffix).\n. OK, please update your signature with an annotation:\npublic Response create(@ApiParam(\"description\") Shop shop)\nI believe that'll do it.\n. It was the predecessor to the io.swagger project. \n. Got it. Then you can keep the current dependency and sumply add the @ApiParam annotation and all should be fine. There is probably an update to dropwizard swagger, or you can follow the sample in the swagger-samples project. \n. great, let me know @wakandan \n. great news, thanks for following up!  And yes, perhaps you can reference the PR here for others\n. fixed by https://github.com/swagger-api/swagger-core/commit/8031d514f2487e26f73b080a339c993b1964ec61\n. Can you share your dependencies?\n. this has been added and will be available in 1.5.4\n. @Helmsdown sorry for the delay.  Is there any sort of test that we can use to show what the effect of this is?  I'm just not sure how it'll affect things.\n. thank you @Helmsdown \n. This should be working fine now.. Hi, I appreciate this PR but want to keep dependencies out of the models artifact.\n. fixed by https://github.com/swagger-api/swagger-core/commit/8031d514f2487e26f73b080a339c993b1964ec61\n. Just modify hem so it's clear. A banner at the top, etc, but right now, this is causing problems for prospective users as Google has it indexed higher than the current docs. \n. I believe that was to support array types.. Use the @Extension annotation. Use the @Extension annotation. Per design.. Per design.. I believe this can be closed. I believe this can be closed. Hi, in concept it sounds good but you now have a failing test.  Do you want to look at that?\n. Hi, in concept it sounds good but you now have a failing test.  Do you want to look at that?\n. sorry, didn't mean to close\n. sorry, didn't mean to close\n. This would be for swagger-parser, if still valid.. This would be for swagger-parser, if still valid.. Please reopen if you're still having an issue.\n. Please reopen if you're still having an issue.\n. Looks good to me\n. Looks good to me\n. Not supported in the spec.. Not supported in the spec.. This was added via https://github.com/swagger-api/swagger-core/commit/305811ef71fe35725512d7450631175785dc55fa and will release in 1.5.4\n. This was added via https://github.com/swagger-api/swagger-core/commit/305811ef71fe35725512d7450631175785dc55fa and will release in 1.5.4\n. Parser is a separate project, and this is addressed in the latest parser snapshot, which will be released soon after swagger-core-1.5.4 is out.\n. Parser is a separate project, and this is addressed in the latest parser snapshot, which will be released soon after swagger-core-1.5.4 is out.\n. This PR has drifted a bunch from the codebase and I believe we've moved in a slightly different direction. This PR has drifted a bunch from the codebase and I believe we've moved in a slightly different direction. Seems like this is valid @veitmichael.  Could you please open a new issue for this and we can get it fixed?\n. Seems like this is valid @veitmichael.  Could you please open a new issue for this and we can get it fixed?\n. looks good to me.\n. looks good to me.\n. I believe the answer is no.. I believe the answer is no.. closing as supported via https://github.com/swagger-api/swagger-core/pull/1501.\n. closing as supported via https://github.com/swagger-api/swagger-core/pull/1501.\n. Hi, I'm closing this out--if you create a gradle plug-in and OSS it, feel free to send a PR to the swagger.io repository and we'll add it there.  Lots of people are using gradle now, and it'd be a welcomed addition to the tooling.\n. Hi, I'm closing this out--if you create a gradle plug-in and OSS it, feel free to send a PR to the swagger.io repository and we'll add it there.  Lots of people are using gradle now, and it'd be a welcomed addition to the tooling.\n. I'm closing this since we have the @SwaggerDefinition as @webron stated.\n. I'm closing this since we have the @SwaggerDefinition as @webron stated.\n. Correct, this should be changed.  Targeting 1.5.5\n. Correct, this should be changed.  Targeting 1.5.5\n. fixed by https://github.com/swagger-api/swagger-core/commit/8031d514f2487e26f73b080a339c993b1964ec61\n. fixed by https://github.com/swagger-api/swagger-core/commit/8031d514f2487e26f73b080a339c993b1964ec61\n. Hmm, that message is odd.  Can you please share your method signature that it's failing on?\n. Hmm, that message is odd.  Can you please share your method signature that it's failing on?\n. Hi @vishakMetric, this is really sounding like a swagger-ui issue.  Please reopen an issue in that project if you're still seeing problems.\n. Hi @vishakMetric, this is really sounding like a swagger-ui issue.  Please reopen an issue in that project if you're still seeing problems.\n. Hi, the JSON above is actually not valid--\"id\":String is missing quotes.  Please reopen an issue in swagger-ui if you think there's a problem still.\n. Hi, the JSON above is actually not valid--\"id\":String is missing quotes.  Please reopen an issue in swagger-ui if you think there's a problem still.\n. Please retest on master. Please retest on master. That would be great!\n. That would be great!\n. Yes!  There is first class support via the SwaggerFilter interface. Take a look there and post back any questions. Essentially you have the option to filter methods, parameters, and model properties on a per-request basis, which can use headers, etc to tell the filter \"what to do\"\n. Yes!  There is first class support via the SwaggerFilter interface. Take a look there and post back any questions. Essentially you have the option to filter methods, parameters, and model properties on a per-request basis, which can use headers, etc to tell the filter \"what to do\"\n. Also adding support for x-example for scalar parameters (i.e. query, path, header, formData).\n. Also adding support for x-example for scalar parameters (i.e. query, path, header, formData).\n. fixed in https://github.com/swagger-api/swagger-core/pull/1501\n. fixed in https://github.com/swagger-api/swagger-core/pull/1501\n. I've addressed the two comments from before.\n. I've addressed the two comments from before.\n. - [x] Need to make sure the example value has the correct type, currently always string.\n. - [x] Need to make sure the example value has the correct type, currently always string.\n. OK for the naming, the annotation processor is Jackson, which is not--by default--using the JaxB annotation processor.  You can easily enable it, which should cause the desired effect:\njava\nObjectMapper mapper = Json.mapper();\nAnnotationIntrospector primary = new JacksonAnnotationIntrospector();\nAnnotationIntrospector secondary = new JaxbAnnotationIntrospector();\nAnnotationIntrospector pair = new AnnotationIntrospector.Pair(primaryIntrospector, secondaryIntropsector);\nThe reason why this is an optional step is that we're trying to avoid adding too many jackson dependencies to core unless needed.  This should address your issue, please reopen if you don't have luck with it.\n. @ssoltanid can you create a pull request?  Looks like a proposed solution is above.\n. Sure, but suggest that is done by overriding the ApiListingResource which lets you mutate the whole spec.  Wouldn't that do for this type of case?\n. Please see https://github.com/swagger-api/swagger-ui/issues/1689#issuecomment-149791854\n. OK I am going to close this--the spec filter isn't supposed to allow manipulation of the spec--it's just a filter.  There are other techniques to get a handle on the swagger object.  It shouldn't be done here.\n. Closing as optional with work-around.. It is . Hi, can you please explain more?  Do you mean for generated code?  Or for the swagger definition?\n. I really don't understand, @markvdkerkhof.  It seems like you're talking about swagger-codegen, right?  So generating a server or client from swagger definition?\n. Answered your question in the google group:\nhttps://groups.google.com/forum/#!topic/swagger-swaggersocket/n1M0pabWf24\nHi, I suggest you use http://editor.swagger.io to model your API.  It'll guide you through the process.  But for your specific question:\nin JSON:\njson\n{\n  \"definitions\": {\n    \"User\": {\n      \"properties\": {\n        \"addresses\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Address\"\n          }\n        }\n      }\n    },\n    \"Address\": {\n      \"properties\": {\n        \"type\": {\n          \"description\": \"the type of address\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"home\",\n            \"office\"\n          ]\n        },\n        \"line1\": {\n          \"description\": \"blah blah\",\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}\nAnd you can paste this in the editor:\nyaml\n  User: \n    properties: \n      addresses: \n        type: \"array\"\n        items: \n          $ref: \"#/definitions/Address\"\n  Address: \n    properties: \n      type: \n        description: \"the type of address\"\n        type: \"string\"\n        enum: \n          - \"home\"\n          - \"office\"\n      line1: \n        description: \"blah blah\"\n        type: \"string\"\n. Yep, this is a copy/paste bug.\n. As @webron said, this is really part of your filter config. Can't be done with swagger.\n. This is a terrible to track down error.  Remove your  apiParam annotation from the form data Parm\n. What are your dependencies?  If you're not using the swagger-jersey-jaxrs module, I'd expect to see this behavior, which is indeed not helpful.  But in the module, you'll see that a FormDataParam with type InputStream should convert to the file type.\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jersey-jaxrs/src/main/java/io/swagger/jersey/SwaggerJerseyJaxrs.java\n. OK got it.  That's different then--and you're bringing up a different use case than the file type was intended to support.\nThe file type is exclusively an multipart/form-data POST operation.  If you want to send a file this way, it's the way to go, because it allows the client to tell how long the body is so the server can support streaming, etc.\nYou can always send BASE64-encoded strings to the server by sending a JSON body with a content structure like such:\njson\n{\n  \"contents\": \"VGhpcyBpcyBhbiBhbWF6aW5nIGZpbGUgY29udGVudCB0aGF0IHJlYWxseSByZWFsbHkgaXMgYXdlc29tZS4=\"\n}\nThis would still be content-type:application/json but the swagger-ui is not going to support this out of the box.  You can easily hack it in, but since there's no standard way to send the data, there's no standard way to support it in the UI.\n. Sure, that's fair, but if you're looking for support, help with more details.  Specifically:\n- What content-type would you expect the API to describe?  I'm guessing it's application/json but if my memory serves correctly, some of the ones you listed are using octet-stream\n- If the server does represent InputStream, it could be using a vendor extension for the property to state that it's base64-encoded.  Or are you expecting a different encoding?\n- It is possible that the UI represents this using an extension, which is perfectly legal from the spec point of view but it may be tricky if the content-type is json\n. I believe @webron has covered the current spec behavior in his comments.  For 3.0, that will change.. Well I'm quite sure that we are generating valid swagger in our projects.  From what your posting, it looks to me like you may be using the Swagger POJOs from the swagger-models project, but not the SwaggerSerializer class?  That's a requirement to turn them into JSON.  Please post back here if I'm misreading your intent.\n. I'm happy to help, but (a) swagger-diff is not the official way to validate swagger compliance and (b) you're not following those instructions.\nFirst off, the dependency listed here:\nhttps://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup-1.5#concrete-class-selection\nIs quite different from what you're using.  com.wordnik was deprecated over a year ago.  Please use this as your dependency:\nxml\n<dependency>\n  <groupId>io.swagger</groupId>\n  <artifactId>swagger-jersey2-jaxrs</artifactId>\n  <version>1.5.4</version>\n</dependency>\nThis is the latest release version of swagger-core.\nNext, your web.xml here:\n<servlet-class>com.wordnik.swagger.jersey.config.JerseyJaxrsConfig</servlet-class>\nIs pointing to the older version of swagger (note the com.wordnik).  Use the proper package, which is shown here:\nhttps://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup-1.5#package-scanning--concrete-class-selection\nFinally, there are samples that do all this for you, which you'll probably have an easier time following.  For jersey2:\nhttps://github.com/swagger-api/swagger-samples/tree/master/java/java-jersey2\nI know it can be frustrating getting things working, but if our own tools couldn't validate against our own specification, something would really be wrong.\n. You need to ensure that the SwaggerSerializers are enabled.  They are what turn the POJOs into the swagger objects correctly.\n. We probably could have done better with the versioning for 1.5.x but as ron said, this change is history.\n. see https://github.com/swagger-api/swagger-core/pull/1563\n. Please take a look at the sample here:\nhttps://github.com/swagger-api/swagger-samples/tree/master/java/java-jersey-jaxrs\nwhich has a file upload example.  There's setup in your app that makes it pretty tough to debug without more info.\n. i just pushed 1.5.5-SNAPSHOT\n. Not yet, but it's about to be in.. Hmm this must be from a configuration problem.  Can you share more?  Compare with the samples?\n. Thanks for the follow up\n. You need to enable scanning with BeanConfig.  Take a look here for an example:\nhttps://github.com/swagger-api/swagger-samples/blob/5809a49e3b7184da7194cdfb818fee7151750cf8/java/java-jersey2-guice/src/main/java/io/swagger/sample/SwaggerExampleGuiceContextListener.java#L32-L45\n. that's a long road to go down.  Is there a reason why you can't use a dependency manager?  There are a lot of dependencies for jaxrs.\n. That class is application-specific and you can probably remove it.\n. Hi @titiu7, a couple answers for you.\nFor (1), yes, it should detect and add any models which are referenced as either inputs or outputs to operations.  Typically it'll scan the class or interface referenced and not all possible permutations of classes which implement the interface.  So add the interface in the annotations and it should show the correct model schemal\nFor (2), I would need to see some examples.  Can you share a definition or test case to show what you're talking about?\n. Hi @titiu7, you'd simply have to create a custom model converter to process these types.  You can then define exactly what you want to expose, and the overloaded setter method won't be an issue.\nHonestly this is the first time I've heard of this one so it's possible that there's a fix in Jackson somewhere.\n. Well what id username and password?  Are they form params?  You have to designate how the values will be sent to the system somehow, either via path, body, query, header, form, etc.\n. yea, it's really not clear what you're after.  Seems like API design vs. usage of this library.  Consider posting in the swagger google group for design questions.\n. Yes, we can simply change the parsing of the consumes and produces property to split on commas.  Please consider adding a PR to get this done more quickly.\n. annotations don't work that way--it's all cached.\n. I think you'll need to implement a cache-dump on your own.  If it's generalized, please send a PR and others can take advantage of it.\n. hmm, to be honest, this sounds like a swagger2markup issue.  If you could, please open a ticket there.  I don't think this belongs in swagger-core, as the spec you're showing looks accurate.\n. It is legal to have them all contain shared properties, JSON schema does say that which one is used is indeterminate.\nIf the parser is creating multiple parameters with the same name--well that's a bug of the parser.  I do believe internally that it's using linked hash maps, which means it's technically impossible.\nIf we can create a sample test then I can get it figured out pretty quickly.  @rdiehl do you think you can send a PR with a test that shows the problem?\n. Hi @jawher this is great.  Sorry for the delay, @webron was waiting for my review, and I'm both slow and lazy.\n. Hi, not exactly sure what you mean.  Are you talking about the schema?  The server default value?  Or perhaps an example?  And are you talking about spring-mvc or jaxrs?\n. more details, please?\n. If you were using pure swagger-core / swagger-jaxrs, you would simply define the interface of what you want to expose, and set that as the responseClass.  For Springfox, please open an issue in that repository, I'm sure they have this support in the framework.\n. @benmccann agreed, we can support both constructs in the annotation.\n. @benmccann Because we can specify type and format in the @ApiImplicitParam which effectively lets you set the type to anything.  If you think that accepting a class would be dramatically better, we can look at that.. OK I'll reopen this and we can look at merging the PR.. Suggest that we enhance ModelImpl rather than introduce a primitive model\n. This was handled in #1611 \n. It would be convenient, to do something like this, yes\n. Absolutely test contributions would be great. There is a general structure in place that would be good to follow if possible\n. Please open that on swagger-ui. Hmm.  The swagger object mapper is supposed to only trigger on the Swagger object, not your own data.\n. What are we missing in the test framework?  Please add details.\n. @garydgregory right you are.  I have updated the tests and addressed some issues in this PR via #1578.  Shame on me\n. hi @kevinmic, what version are you upgrading from?\n. You have many options for this, including creating a SwaggerSpecFilter to take away any operations that you don't want to have shown.  Please reopen if you feel that's not sufficient.\n. Yes, I believe you are right, we are not recursing into subresources over and over.\n. Please follow this PR.  It needs testing and feedback, so if you have time to do so it will accelerate things:\nhttps://github.com/swagger-api/swagger-core/pull/1563\n. @davidvc I think we have a pretty good extension model now.  Have you seen how the validations extension works?\n. Got it, that's a totally different project, and unfortunately it's not under our control.  Looks like you'll have to ask them to get it supported.\n. This should be fixed by https://github.com/swagger-api/swagger-core/commit/5aae81b68c44c7ac20c9177042234775d5e98f6b. I have confirmed that the BeanConfig is already implemented to support this.  For an appplicationContext.xml:\nxml\n<property name=\"schemes\">\n  <list>\n    <value>https</value>\n    <value>http</value>\n  </list>\n</property>\n<property name=\"host\" value=\"localhost:8002\"/>\n<property name=\"basePath\" value=\"/api\"/>\nWill correctly set the basePath, host, schemes array.  Likewise via programmatic configuration:\njava\nBeanConfig bc = new BeanConfig();\nbc.setSchemes(new String[] {\"http\", \"https\"});\nbc.setHost(\"petstore.swagger.io\");\nbc.setBasePath(\"/api\");\n. @suen you're talking about a different issue--please follow #1514\n. Best thing you can do is create a test case in the same structure as in swagger-core and we can tackle it.\n. Hi, are these automatically generated?\n. @garydgregory 1.5.6 was just release to maven central, and includes this fix\n. Hi, it's pretty hard to tell from that stack trace as it's not providing any details on the error.\n. Try enabling debug logging and sharing that output.\n. OK the clue is here:\nJan 06, 2016 1:40:57 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate\nINFO: Initiating Jersey application, version 'Jersey: 1.19 02/11/2015 03:25 AM'\nJan 06, 2016 1:40:57 PM com.sun.jersey.spi.inject.Errors processErrorMessages\nSEVERE: The following errors and warnings have been detected with resource and/or provider classes:\nSEVERE: Conflicting URI templates. The URI template / for root resource class com.*.*.rest.service.HealthCheckRestService and the URI template / transform to the same regular expression (/.)?\nWARNING: A HTTP GET method, public javax.ws.rs.core.Response com.**.*.rest.service.*RestService.dryRefund(java.lang.String,com.*.*.dto.refund.RefundRequest) throws com.*.*.core.exception.RefundException,com.*.*.core.exception.*Exception,com.*.*.core.exception.AuthorizationException,java.security.GeneralSecurityException, should not consume any entity.\nWARNING: A sub-resource method, public javax.ws.rs.core.Response com.*.*.rest.service.*RestService.get****(java.lang.String), with URI template, \"\", is treated as a resource method\nPlease remove these:\nio.swagger.jaxrs.json\nio.swagger.jaxrs.listing\ntemporarily from your scanning to see if it starts up fine.  My guess is that you have operations like such:\n/*\nand that the listing for /swagger.json is colliding with it.\n. OK, it seems like the routing of your application is too greedy to use the listing resource.  You'll need to mount the actual api calls under a subpath or something, or have a different routing strategy.\nYou can certainly do this:\n@Path(\"/{foo : \\\\d+\"}\nif you are accepting numbers at the root of your app.  But if you have something that uses strings, Jersey is not able to differentiate between /swagger.json and /foo, hence the fatal error.\n. I don't believe we can merge this, as it fundamentally changes how the processor works.  I'm going to keep it open so documentation can be improved but also ensure it's behaving as intended.\n. We've clarified how the processing picks up annotations, please see here for details:\nhttps://github.com/swagger-api/swagger-core/releases/tag/v1.5.9. Please use @ApiModelProperty(hidden=true) to hide the property\n. Apologies.  Yes, that's true--you'll need to have separate models or interfaces defined in your resources.  Each model schema must be consistent across input or output.\n. You can control scanning, see here: https://github.com/swagger-api/swagger-core/releases/tag/v1.5.9. see https://github.com/swagger-api/swagger-parser/issues/151\n. thanks @nbruno \n. @botchniaque I suggest following this issue, which we're just about to start on:\nhttps://github.com/swagger-api/swagger-core/issues/1514\nI'm going to close this out as #1514 should cover it, please add comments to that one if you see anything missing.\n. It's tricky to keep up with the Jacksons, many implementations don't move as fast.\nWhat is the new syntax in 2.7.x?  Is it back compatible?\n. Thank you for investigating.  Let's hold on 2.7.1 then, and I believe it should work as-is?\n. Got it, if the method is available in the 2.4.x libraries, we should change it.  Do you mind sending a PR?\n. But good to know that 2.7.1 is fine with swagger-core.\n. Todd, please check the release notes for 1.5.7 to see if the issue is the '@Provider' change we made.\n. Hi @todd-richmond can you provide a simple sample project?\n. Master is upgraded to 2.8.4.. More details?  as title doesn't tell me enough what your problem is with it.\n. I believe a similar support was just merged in https://github.com/swagger-api/swagger-core/commit/d319d9a55c2c77870aeff75bcfc2038f254b3697\n. Yes, we are going to remove it in the next release.\n. You can see this in 1.5.7-SNAPSHOT, available on sonatype-oss snapshots.\n. we have a few tickets to close before releasing.  It won't be long but you should continue with the snapshot.  Reference sonatype snapshots in your pom file and you can build \"normally\"\n. I've verified this works.  There is a slight change in usage though--as shown in the samples, this:\ncontext.setAttribute(\"swagger\", swagger);\nhas been replaced with this:\nnew SwaggerContextService().withServletConfig(config).updateSwagger(swagger);\nWe'll update the release notes\n. Please re-test with master.. @frantuma you've been working on similar code--do you have any ideas on this?\n. I believe we tackled this before, namely in this sample:\nhttps://github.com/swagger-api/swagger-samples/tree/master/java/java-jaxrs-subresource\nThe solution--albeit hacky--is to annotate the subresource and set hidden=true as shown here.\nNow, this sample uses web.xml and not BeanConfig.  I don't think that would cause a difference though.\nAm I missing something?\n. I don't know a pretty way to do this.\nYou may have a resource and it's annotated as @Api, you don't know whether or not it should be at the root of the api definition or not.\nYou may have a resource which is annotated with @Api AND you don't want to expose a subresource\nYou may have a resource which is annotated with @Api and belongs at both the root and attached as a subresource\nI don't see any programmatic way to handle all these cases without saying \"don't expose this at root level\".\n. This is fixed in master.. @frantuma looks great.  Does this mean some of the code in the special module here:\nhttps://github.com/swagger-api/swagger-core/tree/master/modules/swagger-hibernate-validations\ncan be removed?\n. @Helmsdown I think that works.  Let's set the path-level path and then the routing should take care of it.  If you can send a PR that'd be great.\n. Yes, but making it less greedy so only matches on /swagger.json and /swagger.yaml would help a lot.\n. ? it's not breaking, that's how it's currently working.  ApiListingResource maps /swagger.json to the documentation.  What am I missing?\n. Looks good!  At first I was not understanding why we aren't just doing the cleanup in the SpecFilter.java after cloning but thinking about it more, you may not want to clean up all the unused references.\n. sure, done.\n. I really don't understand the suggestion here.  You can't override values in an annotation as they are final.  The swagger spec filter seems to be the solution for dynamic filtering, as you've pointed out.\n. Ah, got it, and that makes sense.  The parameters passed in the SwaggerSpecFilter are decoupled from the annotations, and you've pointed out a disconnect in the data that's provided.\nI think to do what you want would require passing all annotations to the SwaggerSpecFilter, not just the Swagger annotations.  That is doable but a little ugly.  I'm not sure there's another way to do it, though.\n. No, per comments above, adding the annotations into the filter would be quite ugly.  If you can propose a way to do it, we can consider merging\n. Here is a suggestion on this topic.  While it would be nice if everything was pluggable, I don't know if that would serve the community well.  If we really don't want runtime introspection of classes (i.e. automatically generating the swagger definition), it's quite simply to build a static swagger.json, stuff it in your webapp folder and call it done. Then you have zero dependencies on the stack.\nIf someone wants to take a stab at helping make things pluggable, yet require minimal configuration (like it has), I'd love to see that.\nI do believe we support the most general case (5mb of dependencies is honestly nothing if you step back a bit) BUT making it more flexible--if testable--would never hurt.\n. good reference for future implementations, thanks!. @Helmsdown can you please comment if this addresses your use case?\n. So you want me to merge, push, then undo if you don't like it?\n. @rmannibucau I'm all for removing dependencies, but this PR is failing.  Do you want to look at the test?\n. @kevinmic, @webron is pointing you in the right direction.  If you want to \"lie\" about the type, just mark the actual param as \"hidden\" and use an implicit param.  This is better supported than overriding the dataType in the @ApiParam annotation.  I do agree that the logic could be merged into one annotation, but suggest you follow this path for now.\n. I'd like to merge the concept, but the files are out of date and too many formatting updates.  If you'd like to resubmit, please do.. @ed0906 It uses SPI to pick up the extensions.  Note the WEB-INF/services folder.  There is a plugin mechanism which will inject any plugins in a processing chain.\n. Thank you--I will merge this after 1.5.7 is released.\n. Hi, can you please send a PR with a test case?\n. @frantuma is this ok?\n. Please create a test case in a PR.. Thanks Andriy and Aki.  @frantuma is going through the PR now.\n. Correct.  There is no namespacing in objects--if you want to use two different object definitions, please use different names.\n. This is fixed in swagger-ui.. @Helmsdown it looks good--can you toss in a couple tests?\n. Yes, this is a bug--thanks for filing the issue, we can get this taken care of before the next release.\n. This has been fixed.. This should be fixed in master.. fixed in https://github.com/swagger-api/swagger-core/pull/1668\n. This should be fixed now.. This is a spec concern, not swagger-core.  Can you please open an issue on the OAI Spec Repo?\n. thank you\n. I believe this can be closed as documentation has been updated.. Agreed, this makes sense to add\n. We've changed to use LinkedHashMaps. As of 1.5.9, the logic for scanning has been updated:\nhttps://github.com/swagger-api/swagger-core/releases/tag/v1.5.9. see #1107. For custom constraints, there's a mechanism to make a custom module.  Take a look at https://github.com/swagger-api/swagger-core/tree/master/modules/swagger-jersey2-jaxrs for an example, it uses SPI for loading.  \n@xaviarias if you see issues or need more help, please open a new issue.  I'm closing this because I think the original request has been answered by @frantuma \n. @Kvezon please confirm?  We are trying to release tomorrow.\n. Your question isn't very clear.\n. :+1: \n. eh, more details are needed.. Please provide more details.  This does not help\n. Is this spring mvc?  Seriously, need more info.\n. @frantuma can you look at this?\n. Please give more details.. Huh?  Ok, feel free to file a ticket against the specification.  Beats just complaining.\n. This was only a backwards compatibility support.  Please prefix with #/definitions.. see the guides in http://swagger.io!. @Pluggables can you share the exception?  There is an open parser issue around enums, and I think the AWS gateway is using the parser under the hood.\n. I think (actually, I'm sure) this is working now in gateway.. How would you expect this to work?  Looking for input on how we scan objects.\n. Hmm, that's weird.  Can you please give more information on this?  How are you generating the property?\n. This shouldn't be an issue anymore.  Please reopen if you're still having a problem. I'm sorry for this taking so long, but this introduces attributes which are illegal in the spec (parent) so we can't merge it.. There is a difference between having a property in the java pojo and in the JSON/YAML description.  This:\nhttps://github.com/sapienstech/swagger-core/blob/2e5df42c7053660c8fc34e4e6cb128a9d4e3661b/modules/swagger-core/src/test/resources/Cat.json#L15\nIs not valid in the specification:\nhttps://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md\nAnd can't be there.  We can have private fields in the pojos, but they cannot live in the JSON generated.. A PR with the issue, or fix would be helpful.. Please share the output of your swagger.json.. Please re-test with a newer version.. Model encapsulates primitives and Arrays.  The array doesn't have a type so it's not in the interface.. Please use instanceOf or consider a PR.. Yea, that's a nice behavior.  If you feel like adding a PR that'd be great.\n. you can use the dataType with classes.. Hi, this is certainly supported.  Please look here for an example:\nhttps://github.com/swagger-api/swagger-core/tree/master/modules/swagger-jersey2-jaxrs\nEssentially you can plug in an extension for scanning your own annotations.  That's how the jersey2 module works.\n. Steps:\n1) Add a value to the META-INF/services like such\n2) Implement SwaggerExtension or extend AbstractSwaggerExtension like this\n. OK looks like that's currently not supported then.  You can certainly follow this structure, add a new method to the SwaggerExtension and tie into the Reader class to call the extension.\n. @scsynergy just FYI, those HTTP methods are simply not supported in the specification\n. @mtraynham can you please send a PR with a test case?  Would help a lot.\n. I haven't been in this piece of code for a bit.  @frantuma can you please check this out and merge if it looks OK?\n. Because there's too much to do :)  I don't just merge without testing, and I should get to this shortly.  Perhaps @frantuma can review faster than me.\n. @webron I don't see why we wouldn't do this--but we do need to add some tests before merging, or it'll get lost.\n. Sounds like you have a dependency issue.  I think you need to look at the provided dependencies in your project to sort this out.\n. @frantuma look OK to you?\n. OK but the current behavior is the desired behavior.  We don't want the inner name to be the same as the wrapper.. Can you please add a PR with a test case?. Please share a sample project if you're still having issues.. @GADNT please see my comment: https://github.com/swagger-api/swagger-core/issues/1774#issuecomment-269110771. Hi thank you for this--the changes look good, but please see the one comment around the scan method.\n. You can fork this project and add any support you like.  But this is outside the spec.. I believe this is supported now, reopen if you have issues. So, I appreciate the PR but this has been discussed before.  You must use our jackson serializers and when you do, the securityRequirement is correctly handled.  If you do not, well, you'll have other problems, this being the least of them.\nWe cannot accept this PR because (a) the serialization strategy works fine as-is and (b) this is a breaking change to a model signature, and this alone is not worthy of bumping to a 2.0 release.\nDuring the 2.0 development we will fix this, so I'll keep your issue #1258 \n. I can guarantee you that our serializer is not producing invalid swagger, or all swaggers would be broken.  How are you enabling the serializer?\n. I'm a terrible person for not merging this.\n. You can use any integer code.. This is a common case and is well tested.  Please retest against 1.5.11. Use markdown . This should be fully supported.. Please give details of what you expect.. Please add more details as to what you're after.. Only one external doc is supported per the spec.. Please give an example of how you suggest this is done?\n. Got it, yes, that makes a lot of sense.\n. A PR would be great for this, or an example of the usage you're looking for.. This was added. fixed in master.. Try snapshot, we've updated the jackson version there.. Hi, you've asked in many places.  What you're describing is not a normal request, and therefore not part of the current tooling.  I believe I've given you some other pointers on how to do this.\n. What dependency are you using?\n. File support requires the jersey dependency:\nxml\n<!-- http://mvnrepository.com/artifact/io.swagger/swagger-jersey-jaxrs -->\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-jersey-jaxrs</artifactId>\n    <version>1.5.9</version>\n</dependency>\n. I'm not familiar enough with how liberty works with jaxrs to say.\n. please share the pojo that is giving this issue.. Hi, the link is dead, please share more details and re-open if needed.. Please share more details if you're still having an issue.. Please share more details and re-open.. Hi, this is a codegen issue.  There are measures to avoid code injections by escaping newlines.. There's no validateHost in swagger.java.. There is an exclusion for logback now. Take a look at this tutorial about SpringBoot + Swagger:\nhttp://heidloff.net/article/usage-of-swagger-2-0-in-spring-boot-applications-to-document-apis/\n. Simply override the dataType for your JSONObject value like such:\njava\npublic class MyModel {\n  @ApiModelProperty(value=\"dummyAttrib\", dataType = \"java.util.Map\")\n  public JsonNode getDummyAttrib() {\n    return null;\n  };\n  public void setDummyAttrib(JsonNode node) {}\n}\nThen your definition looks like it accepts a Map<String, Object>:\njson\n{\n  \"MyModel\" : {\n    \"type\" : \"object\",\n    \"properties\" : {\n      \"dummyAttrib\" : {\n        \"type\" : \"object\",\n        \"description\" : \"dummy\",\n        \"additionalProperties\" : {\n          \"type\" : \"object\"\n        }\n      }\n    }\n  }\n}\n. Please look at my example above again.  You're missing the dataType annotation above\n@ApiModelProperty(value=\"dummyAttrib\", dataType = \"java.util.Map\")\n. Hi, please take a look at the swagger-samples project for integration examples.\n. A PR with an example showing the issue would make it possible to solve. Hi, I suggest being specific about what is missing.  To be clear, the generated java server is not simply coping the swagger definition specification and regurgitating it when called.  The code being generated is using annotations and will \"reproduce\" the spec from the source code itself.  It is not supposed to create the exact same file.\nRegardless, if you're seeing structural, functional issues, please open a ticket in the swagger-codegen project, which is where the java servers are produced.\n. This should be fixed as of 1.5.10.  Please test and reopen if needed.. Yes, in the next major release as this is will be a breaking change.. I think this can be handled by changing the reader class.  Consider a PR for this.. @frantuma is this good to merge?\n. Hi, it's not entirely clear what you're looking to do.  Can you please elaborate on your use case?\n. That's just not how this library is expected to work.  Adding a mountain of annotation variables is an ugly way to use swagger.\nConsider different models for input and output.  They can have inheritance between them, etc, and then it's a java modeling issue.\nSo User as input and UserResponse as output.  UserResponse may have an id field which is read-only and not acceptable for input.  But let's not jam them in annotations.\n. Well I hear you, but that's just not how we want this library to evolve.\nI do believe that we'll have better control over the required / optional / readOnly / writeOnly(?) on parameters but putting that in the annotation layer is really, really ugly.\n. It's so fast to mutate on each request, that's the recommended way to go.  The other way you can hide things is using the hidden=true property which is available in most annotations.  Those will cause things to be skipped by the processor.  You have more control with the spec filter.\n. no, but you do realize that the Spec Filter is going to run in milliseconds, right?  That's the design to use, or you can extend the ApiListingResource and cache it yourself.\n. @frantuma can you see if this is mergable?\n. This is a known limitation of the example property in the annotation.  No current work-around, so let's keep this issue open.\n. see #1107. Hi, this is a good place to post issues, but I think you're asking a question.  What you described above looks like an accurate way to return a List<CustomClass>.\n. Can you please upgrade to 1.5.9 to see if the issue persists?\n. I believe this is addressed.  Reopen if you still see issues.. This is a bug--if you have time for a PR for a test and/or fix, it'd be appreciated.. Eh, that sounds like something you'll need to take up with the Django authors.  This project is really just for the java implementation by the swagger team.\n. will be fixed with merge of #2057. This takes a major refactoring of the models, which is on the way.  . Will be supported in 3.0.0 support, please see the feature/3.0.0-rc2 branch for details.. We've made a very handy mechanism for you to add your own support for extensions using SPI.  Take a look at the https://github.com/swagger-api/swagger-core/tree/master/modules/swagger-hibernate-validations module.  You can even send a PR to add that support :). @m-radzikowski did you look at how the extension mechanism works?  You can make a single extension and handle as many annotation types as you like.  You can decide if you want to pass the processing on to the next extension or abandon.  Please let me know what's missing there.. It's kind of hard to support every case with this.  To most people, @NotNull means \"cannot be null\" and \"value is required\".  Thus that annotation is winning.  There's no way to handle conflicting configurations without making someone unhappy.\nI can see a case where the @ApiModelProperty will win no matter what.  Maybe that's the answer but still someone won't like it.. Feel free to send a PR. Please try latest, I believe this has been fixed.. @benken-parasoft sure thing, but can you please provide a test case in a PR?. Thank you. Jackson is pretty good about being forward compatible. Going too far can cause issues for others but yes we will consider the update. \nBtw I saw \"Jackson 5\" in your comment and smiled\n. Done in latest to 2.8.4. This was just fixed, please try the latest . I don't think this is supported by this library.  If you can make a more clear goal, it may be doable.. @frantuma, look OK to you?\n. Please follow #1889.  This is indeed a bug.. That indeed is valid.  I just looked at the WebXMLReader and it will leave schemes as null if not set.  This may have changed since you filed the issue, so please reopen if you are having trouble still.. Please share the whole method definition so we can troubleshoot this.\n. Please try changing to Integer instead of int and report back what you get.  Not saying that's the solution but it would help.\n. OK this is an issue in how numerics are stored internally.  Please follow #1889 for a fix. Please try the latest.  A lot of work has gone in to support interfaces, generics, and subclasses.. As of https://github.com/swagger-api/swagger-core/commit/9e8b2c6bff639598df077465b9a78ebb854f0b83, the preferred mechanism to override is by using type and format but we can merge this specific case anyway.. This should be fixed now, and can be overridden by https://github.com/swagger-api/swagger-core/commit/9e8b2c6bff639598df077465b9a78ebb854f0b83. I think this belongs in swagger-ui.. This has been added in https://github.com/swagger-api/swagger-core/commit/9e8b2c6bff639598df077465b9a78ebb854f0b83. Use response=byte.class to properly represent a file download, and set the @Produces appropriately.. You should post your annotations here for completeness.\nI believe you can mark your verificationRequestDTO as hidden with hidden = true and add an @ApiImplicitParam, which will let you \"lie\" about the data type.  Just set it as a string.\n. You may have trouble with scala classes if they are objects with inner classes. \n. You should probably open this in the swagger-scala-module project.  But as I said, I don't think you can reference inner classes inside scala objects\n. Please see https://github.com/swagger-api/swagger-core/blob/master/LICENSE\nFrom my understanding, it's not necessary to document each source code file given the ROOT license exists.\n. Hi, since this project is really for run-time integration, it doesn't make sense to add it in here.. This is supported for web.xml configurations:\nhttps://github.com/swagger-api/swagger-samples/blob/master/java/java-jaxrs-no-annotations/src/main/webapp/WEB-INF/web.xml#L52\nYou can easily subclass BeanConfig to add this support.  Better yet, consider adding a PR to BeanConfig and it can be merged.. OK, the BeanConfig is used for programmatic configuration without needing web.xml.  The web.xml configuration will not trigger scanning in BeanConfig.  So you have two choices:\n1) Use web.xml through the DefaultJaxrsConfig.  You don't need to subclass it, and doing so the way you did isn't going to work.  Use the fields that are supported in that class, including host and basepath.\n2) Use a programmatic configuration.  You can follow a pattern like this:\nhttps://github.com/swagger-api/swagger-samples/tree/master/java/java-jaxrs\nWhere a web.xml configures most of the application, and a custom servlet does the rest.\n. This is correct, and the AbstractNumericProperty should pull in the implementing numeric class.. This has been fixed in 1.5.11. Hidden=true is certainly working and is well tested.  Consider sending a PR showing a test that is failing and we can look into it.. This is configurable now in 1.5.11. #1895 was merged. Hi @iblocks-shaun no problem checking.  I have to make sure this is tested correctly and doesn't break any downstream projects\n. replaced by #1991 . Sure--this PR was failing, I must have misunderstood the relationship between the two.. You have to do an exclusion.. You'll have to provide a spec with more details.. @rainabba the validator is trying to read your swagger.json file at https://localhost:7000/swagger.json.  The validator is on the internet and cannot reach your localhost--it can only do so if the files are public on the internet (we don't post the file to the validator for obvious reasons).\nBest to just disable the validator if you're using it against localhost, see here:\nhttps://github.com/swagger-api/swagger-ui#parameters. This just isn't supported in the specification.. See the examples in the swagger-samples project.. Yikes.  If you have time, please send a PR that adds the new methods and deprecates (but leaves present) the old.  We'll have to make some adjustments in the Reader to ensure that the annotation values are both considered.\nThis will ensure it's address in the next major version\n. Can you please give an example of what you are trying to get documented by swagger?\n. This should be supported in 1.5.11.. Hmm I believe it's possible that the BeanConfig will wipe out the @SwaggerDefinition annotations.  Can you possibly share a sample configuration?\n. This was answered on stackoverflow.  Just add the servlet dependency. Follow #1107. No, that's just not supported by the swagger specification. . I know you've posted pretty much a whole application setup here, but it's not really clear what you're expecting to happen.  Content-type is not getting to your application itself?  Please reopen with detials on what's happening that is wrong. . Sigh :(. Try using https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-annotations/src/main/java/io/swagger/annotations/SwaggerDefinition.java. Please send a PR for a test case.  . Look at the swagger-samples project on using multiple war files in a single JVM.. Thanks @HugoMario.  @jbrazdil, I know this is an old issue, but please see what is different between your setup and this test.\n. added in #2052 . Definitely would like to.  We had issues with 2.7.0 but looks like all issues with this project have been resolved in 2.7.1 and greater.\n. Thanks @HugoMario!  @dasevilla could you please try the PR and see if it addresses your issue?\n. Need more info.. OK, but this will lead to some potential usage issues. as long as MyObj can be resolved, it'll be resolved and added correctly.. We are using java 1.7, not 1.8.  I think this makes this PR not possible, please reopen if that's not the case and change the java version to 1.7. Release on the way.... @iblocks-shaun can you please supply a test case?\n. Please retest using the latest master.  I believe this has been fixed.. Please create a test case for this in a PR. I believe this should be opened on swagger-codegen.. It's too hard to add this as a general solution.. I believe this was implemented.. if you look at the supported types in the link I posted, you'll see basic auth, api key, oauth\n. This should be fixed.  . Feels like an edge case.  If you can add a PR with a generalized solution, would be happy to add it.. Hi, this is more of a style change and doesn't affect the functionality.  I'm closing as not required. Hi, it's a style issue.  If we merged every variation in style of code, we'd have things flip-flopping every day and nothing would get released.  I agree that it may be easier for some to read, but there are probably the same number who prefer the array style. . @msiemczyk @dklotz sorry for the lag.  Yes, this should be fine.. Follow #1107. While I agree that objects in the extensions makes sense, jamming the example object into them isn't right.\n. seems like having an examples map with object is a simple alternative.. You're close, but have some syntax errors in your definition.  This is the right approach:\n```yaml\nswagger: '2.0'\ninfo:\n  title: Title\n  version: 1.0.0\npaths:\n  /a:\n    post:\n      parameters:\n        - in: body\n          name: A\n          required: true\n          schema:\n            $ref: '#/definitions/A'\n      responses:\n        201:\n          description: Success\ndefinitions:\n  A:\n    type: object\n    properties:\n      b1:\n        $ref: '#/definitions/C'\n      b2:\n        $ref: '#/definitions/D'\n  B:\n    type: object\n    properties:\n      num:\n        type: integer\n      str:\n        type: string\n  C:\n    allOf:\n      - $ref: '#/definitions/B'\n      - required:\n        - num\nD:\n    allOf:\n      - $ref: '#/definitions/B'\n      - required:\n        - str\n```. For your first question, there is an extension model in swagger-core to do your own processing.  See how https://github.com/swagger-api/swagger-core/tree/master/modules/swagger-hibernate-validations works for example.\nFor issue #2, If you're using custom annotations, it's kinda impossible for swagger-core to do that.. Please look at the samples here for getting started. Please look at the samples here for getting started with configuration.. Take a look at the samples here for quick getting started.. Seems like test case would be helpful for this.  In concept it sounds like it would be a good addition. @pjfanning yes, looks like the behavior has changed with jackson 2.7.8.  I'll see if this magically is fixed by 2.8.x--if not, it's going to be a bear to track down.. @pjfanning yes, I was hoping to get the jackson version updated.  There are some issues in 2.4.x that necessitate an update.  Can you send a PR to get us above 2.5 and I can release today?. Default values are only supported though the annotations right now.. Question isn't clear.. Use the @Examples annotation.. Yes that looks like a bug\n. Updated the wiki. My guess is you have an old swagger-ui.  The more recent versions use Example Value in the UI and switch to XML view when changing the request or response type.  Try http://petstore.swagger.io\n\n. I'm doing testing and should be releasing this weekend. Hi, please add more details.  Is this deployed in a WAR with web.xml?  My guess is it depends on how you're mounting the application in your servlet.. It seems like you're trying to reproduce some behavior of swagger-core without using swagger-core.  If that's the case, I wouldn't open an issue here, but ask general questions in the google group.. Yes, that should be just fine to do.. It's java.lang.String, and since your field is a string, you can leave that property off.. Fixed in #2020 . This has been added. Please open this on swagger-ui. OK, but swagger-core models don't allow additionalProperties: true.  I think this would belong in the swagger-parser.. Track https://github.com/swagger-api/swagger-parser/issues/366 for further updates on this.. Looks like this is no longer an issue:\nhttps://github.com/swagger-api/swagger-core/pull/2042/commits/911bb58c8a8287ff82fb3aca7947aae894cb9c2a\n{\n  \"swagger\" : \"2.0\",\n  \"paths\" : {\n    \"/paged\" : {\n      \"get\" : {\n        \"summary\" : \"Get list of the paged pickticket for datatable\",\n        \"description\" : \"\",\n        \"operationId\" : \"getRequestData\",\n        \"produces\" : [ \"application/json\" ],\n        \"parameters\" : [ {\n          \"in\" : \"body\",\n          \"name\" : \"body\",\n          \"required\" : false,\n          \"schema\" : {\n            \"$ref\" : \"#/definitions/NonFieldMethodBean\"\n          }\n        } ],\n        \"responses\" : {\n          \"default\" : {\n            \"description\" : \"successful operation\"\n          }\n        }\n      }\n    }\n  },\n  \"definitions\" : {\n    \"NonFieldMethodBean\" : {\n      \"type\" : \"object\"\n    }\n  }\n}. Got saves us all.  Closing as already implemented. It's part of the solution to let the format be password.  Now the front-end can choose to hide the input value. Simply set type=\"string\", format=\"password\" and swagger-ui will render the password correctly.. You're not declaring what the response will be.  You need to add a @Produces annotation like such:\n@Produces(\"application/pdf\")\nto your method.  Also specify your response type:\n@ApiResponses(value = { @ApiResponse(code = 200, message = \"Perfect\", response = byte.class) })\nRight now, you're saying \"nothing is returned\", so swagger-ui doesn't know what to do.. OK if you submit an issue again, please give all the details the first time.\nSounds to me like you need to open this on swagger-ui but to confirm, what version are you using?. I think you'll have to open the issue in the springfox repo--it's not clear what version 2.5.0 maps to.  You can test using http://petstore.swagger.io and load your URL to see if the version is the issue.. LGTM. PR merged. Let's isolate the problem by looking in your swagger definition rather than the UI.  What order are they in there?. OK great, then you've got the ticket in the right place.  I'll check into this, it should retain the order inserted as we're using LinkedHashMap. You might check the tests for usage examples. What version of swagger-core are you using?  Can you please try 1.5.11-SNAPSHOT?. I did find a couple places that weren't using linked hash maps, this is in #2051 . This should be fixed, and is tested by https://github.com/swagger-api/swagger-core/blob/3290187ebb746881e19a4b3fe2afc0bf90e92c31/modules/swagger-jaxrs/src/test/java/io/swagger/SimpleReaderTest.java. Can you please confirm this is still the case with 1.5.12?. Yes, release notes published as well. Depends on load to sync from sonatype to maven central . Please retest with 1.5.12. I really hate the dataTypeClass annotation property but I do understand that it is necessary to avoid breaking the API.. Yea, I don't have a better solution right now, @pjfanning.  Not without breaking the signature. As of 1.5.12 you can specify type and format to override datatypes for support like this.. Are you using SpringFox?  I believe that has it's own technique for handling parameters.\nNote as of swagger-core 1.5.12, I believe you can use @ApiImplicitParams at the class level, so they can repeat across many endpoints.. I think you opened this on the wrong project. At this stage, we are not going to change the model implementation signatures but this will be supported in the 3.0.0 support, which is in the feature/3.0.0-rc1 branch.. @pjfanning sorry for the delay.  When you say the \"test case\" do you mean the one that @knime supplied?  Which parameterizedMethod3 are you referring to?. That would introduce another dependency, which we are only doing if absolutely necessary.  So I don't think this falls into that category. which part do you disagree with?. Yes, we do not support the JsonSerialize(...) annotation at all.  I also don't want to add another dependency as it creates other messes.\nHowever, for testing purposes, let's go ahead and add the immutables dependency as a test dependency.\nPlease add a test showing this issue and go ahead and the dependency, we'll see if we can fix it in general.. This has been merged, sorry for the delay. Hi, I've tried but simply cannot reproduce this.  Any chance you can help provide a complete Resource class?\nAll internal references that I see are using LinkedHashMaps and not doing bulk setting of maps.. Oh that has a huge impact on things :(  I didn't realize you were on springfox, this may warrant an issue being opened there.. @ahatzz11 A quick scan tells me the issue is most likely in SpringFox but TBH I'm no expert in this codebase.. Upgrade to 1.5.12 and report back.. Looks from your trace like this is a swagger2markup issue.  And there's no 2.2.2-SNAPSHOT of swagger-core. @martingy thank you.  What affect does bringing classmate into the picture have on backwards compatibility with Jackson?. @martingy could you please rebase?. Can you please open this on swagger-parser?. Travis gets mad sometimes, I've restarted it.. @tobilarscheid understood--and I agree that what is used for Swagger should not need to apply to the entire application.\nI believe the code to serialize the Swagger POJO into JSON lives here.  The issue is, the swagger specification does not allow null anywhere in it--that means not serializing null in the Path is only part of the problem.  There are many other locations that may have a null value, which will make any consumer of the spec very unhappy if null appears...\nProbably the best solution would be to modify the BaseApiListingResource to call the Json.mapper() explicitly--and ensure that that class (which also lives in swagger-core) has the NON_NULL setting in it.  Then, you don't care what the global mapper says, we only write with the swagger-specific Json mapper.\nMake sense?. But @tobilarscheid we can \"take over\" the serialization process here and return the string rather than letting JAXRS choose what it thinks is best.  The problem will become that there are other settings that will break the process--for example you may have an underscore naming rule.  Well that's great, but it'll bust the swagger definition, because it is designed as camelCase.. Sounds good.  Consider using the io.swagger.util.Json class in that PR! . LGTM. Please send a PR with a test case and we can figure this out. You're right--it is technically possible but outside the standard, and we're discouraging going outside the standard by not supporting it.\nIf you break the standard then other tools won't work and everyone will be sad.. @nickreevesuk not true.  JSON schema decided that siblings to $ref are not allowed.  Sure, the Swagger format could have deviated and said \"that's not the case for us\" but then pretty much no tooling would support it, period.  That seemed like a bad idea.\nIt is relatively easy to say that a feature of JSON schema is not supported by the format.  But to break a primary construct of it would not be wise, regardless of technical ease of implementation.  Hence, it's not supported.\nPlease feel free to share your views on this in the OAI Specification which is the swagger specification under the Linux foundation.  You are not raising a tooling concern but a pure spec concern.\nI'm closing this out--not because it isn't a valid discussion, it's just not valid in this repository.  Ignoring the additional extension as the OP mentioned is per design of the swagger-core library, which does it's very best to follow the spec.. @andylowry we actually are about to refactor the examples for the 3.0 spec support.  Admittedly they are not great in the current code but any changes will definitely break the signatures, and right before the 3.0 spec hits RC-0 (next week).  So my suggestion is hold on changing the examples in the 1.5.x swagger-core and submodules, and focus on a plan for 3.0.\nOn that front, I'm expecting to port some of this code:\nhttps://github.com/swagger-api/swagger-inflector/tree/master/src/main/java/io/swagger/inflector/examples\ninto swagger-core, support proper example objects, etc.  Take a look and share your feedback if you're interested.. This will be added to the 3.0 models. I'm happy to merge this, but did it create an issue?  If so, could you please provide a test case that shows it?  Will help the project to document such cases.. Thanks. Hi Keld, that does seem like an issue.  Could you please send a pull request?  I don't think startsWith is doing what was intended.. @KeldOelykke do you have a test that we can add to this PR?. You can write your own extension or model converter to do so.  We don't honor the json mapper naming strategy in core--it's probably doable but needs to be a community contribution.. You're annotating a model but showing Json for a parameter. Can you share the parameter definition?. I'm not sure why this would be in this project.  Are you parsing a specification that already exists?  If so, please open this on the parser.  Swagger core won't generate any $ref values like what you're describing.. Hi, yes we can do so.. https://github.com/swagger-api/swagger-core/pull/2145/commits/80ae5f6ab7c0e652b7374d3b578833bd16dae45e. That's because you're creating a Swagger object which is not a static or a singleton in your app.  Try using the @SecurityDefinition annotation.. looks good, apologies for the delay reviewing. @webron any concerns about updating the reflections library?. @webron, semver is an aspiration endpoint, nothing more.. thanks--yes we're about to completely refactor the annotation (for spec 3.0) to address this.  We won't backport it to the current 1.5.x version.. merged. Not sure why you'd be passing null here, but this is a safe thing to merge.. @navidsh since v3 of the OAI Spec is almost out, we won't update this version unless absolutely necessary.  Do you have a case that requires it?  If so, I ask that you provide a PR.\nIf you're interested in V3, please look here for the current working models:\nhttps://github.com/swagger-api/swagger-core/tree/feature/3.0.0-rc0/modules/swagger-models. @jbau this is a tough one to change in the current version without affecting many deployments of swagger-core so with the upcoming changes to this library, I'm going to reluctantly say we should not change the behavior.\nWe are, however, actively working on a new version of this library for 3.0.0 spec support and encourage you to open an issue against that, and ensure it's behaving correctly there.  Note the annotations have the proper @Inherited flags, and we should be able to support this.\nPlease see https://github.com/swagger-api/swagger-core/tree/feature/3.0.0-rc1. Please supply a test case showing the issue. @pjfanning that's just for a specific flavor of tests so I think it's OK?. @pjfanning yes that is ugly.  So if you do not do this, what happens in your IDE?. @ralphdoe, per comments from @pjfanning could you please keep your fix but remove the dependency on Lombok and the test that depends on it?. Since we're focusing on the 3.0 version, I prefer to leave the current behavior as-is, unless there's a strong need to change.. Not for 2.0 spec support, no.  We are focusing on 3.0 work.. @dilipkrish would love your input on this, and on the annotations for v3 as a whole.... I really hate typing OAS in the names also.  Also, putting the version in the models (not that you were saying that) feels bad.\nAdding oas in the package feels a little weird too.  @webron what do you think?\n. OK I suggest that we add the oas package separator and for the @Response, we can add @ApiResponse or something like that.  I agree that typing OAS* over and over is giving me a headache.. Hi, we're not actively updating this (very old) version.  Can you consider updating to the latest?. Well I would first look to see if it's even an issue in master (currently 1.5.13).  If so, then that would be the right place.. Hi, looks good to me.  For scanning, would you expect that the setClasses method would be used to provide a list of classes which should be scanned, and some \"other helper\" would determine that list of classes independently?  So, a web.xml reader, for example, would scan for the appropriate classes (either by Swagger annotations or other), then call this configuration utility?\nI think the only thing missing to me is how we trigger such logic.  In the programmatic case, this should be sufficient, as long as we have a mechanism to provide packages or classes, by names (strings) for scanning.. I'm guessing that the build won't work on your local machine either--there are numerous test failures due to changes in signatures, probably making the JSON schema invalid.  I'd suggest looking at them locally to see what the cause is.. I understand the change, but what is the motivation for doing so?. ref #2211 . Hi, there are two ways to add custom handling for a class.\nFirst, you can create a custom model converter, where you can return a special schema for a specific class.  See here for an example:\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/test/java/io/swagger/ModelConverterTest.java#L184\nModelConverters.getInstance().addConverter(asMapConverter);\nNext, if you want to skip a class (which is what you were originally asking), you can do this:\nModelConverters.getInstance().addClassToSkip(JsonNode.class);\nHowever, if you skip the class, you may not have a reasonable output in your definition.  Thus, it's best to look at your API to see why you're returning JsonNode.class and consider returning something appropriate for that case.  . Be fixed how?  Repeating the model with same name is simply not supported. What is the expected behavior?. Please provide a test case and we'll see what it would take.  But namespacing is 100% your job, the spec, nor the tooling, does not support doing it for you.. This should be fixed by #2236. What is your question or issue?. Could you please open this issue in the swagger-editor project unless it's an issue with swagger-core?  And if it's swagger-core, please share more details.. You have to use one of the subclasses, since the enum is typed.. Well not if the PR breaks all the tests!  See if you can address the tests and we can look.. Yes Java 7. Next version Java 8. It can be done with class names though. I'm confused :)  Would be happy to add the support when builds pass and your company gives you permission to contribute, assuming it follows the framework style and doesn't break things.. @ralphdoe almost there!  I can't locate the spot in the code right now but I'll point out some issues I'm seeing.\n\nThe requestBody is still missing conversion.  They're showing up as parameters without an in attribute\noperationId values should be used when explicitly provided, or extracted from method names.  I don't see them working in either case\nAll operations must have a responses object with at least one response.  If there is literally nothing to extract, I would use default as the response code, and a description of \"no description provided\" when extracting\n. Great!  I see some issues still but let's get this merged.  Thank you @ralphdoe !. Hey @ralphdoe that PR is only partially fixing this issue.  Namely the unchecked item above is not done.\n\n@webron I've dug into this more and I don't know how we can support quoting numeric keys without hacking Jackson.  It looks like the logic to determine if its \"a number\" or not is a regex and when we say \"minimize quotes\", it will automatically remove quotes in keys, if it passes the regex.\nHere's the code that determines this:\nhttps://github.com/FasterXML/jackson-dataformat-yaml/blob/master/src/main/java/com/fasterxml/jackson/dataformat/yaml/YAMLGenerator.java#L504-L526. @webron this doesn't cover the quoted numeric keys but should get the others.  If good w/you, let's merge and keep #2292 open to track the numeric key issue (that existed in the previous major version too). Looks like the test failures are because we're expecting quoted strings in places where we're now getting unquoted ones.. @ralphdoe I've tried testing out this change in this sample app:\nhttps://github.com/swagger-api/swagger-samples/tree/test-default-config/java/java-jersey2\nBut don't see the config being triggered.  Can you please look at it and see what I'm doing wrong?. Point 1\n* Consider renaming io.swagger.oas.media.DiscriminatorMapping to Discriminator.  @webron ???\nPoint 2\n* Jackson annotations can be substituted with @Schema annotations, correct?  Meaning, they're not required.\nPoint 3-- yes that makes sense.\nPoint 4\n* I believe all models should be resolved as $refs whenever possible.  This gives the best possible chance for a good codegen output\nPoint 5\n* Yes, the example you gave is technically correct, and is \"reversible\" where the 2.0 solution was not.  We run the risk of overlapping types if parent & child have incompatible definitions, but that's a design issue.\nPoint 6\n* We should remove position.  It was never in the spec, and was added only to make tests pass.  The switch to use LinkedHashMap has helped with this\nPoint 7--that's just fine\nPoint 8\n* Whoa I never saw that (or I don't remember).  I don't think that serves any value.\nPoint 9\n* Yes, that would be good.  I think the missing extensions is just an oversight\nPoint 10\n* Add \"send a cupcake to @webron ) to your list.\nLooks good, very complete.  Thank you!. Hmm I'm not exactly sure. Arent the subtypes only needed for oneOf or anyOf ?  If so I don't think it should be added to '@schrma'. It's hard to say without more details. I suggest looking at the 3.0.0-rc2 branch and reporting what doesn't work . You have two choices.  Use \"allOf\" and a discriminator, which allows a base class to be returned, and one-or-more subclasses of the base class.  Or wait for the 3.0 specification, which is due out next week.  This repository supports that new specification in the feature/3.0.0-rc2 branch.. You can use allOf but in v3 there is oneOf or anyOf which is easier for most cases.. @arthurdm, I've tagged a few people to give the feedback on.  I'll add them to the reviewers list--since they've done the bulk of the implementation, I'm guessing they will have feedback on the items, or at least should know that things are being changed.\nAs far as moving away ArraySchema and merging the fields into the Schema class, we did this because annotations do not allow circular references, hence you cannot have this:\njava\n@Schema(type = \"array\", items = @Schema(...))\nThat was a deal breaker, because using @Schema as an array type meant it would only work with primitive types, not complex ones using a @Schema annotation object.  I don't think it would be smart to remove that capability.. You might dispose of the prettyPrint in the tests unless they're needed\n. I agree, I believe that the JacksonAnnotatinIntrospector is embedded in SwaggerAnnotationIntrospector\n. ~~Why did you change the check for the value (0.1) to convert it to a boolean here?~~\nScratch that.  I see that the original implementation was not per JSON Schema (5.1.2.1)\n. This will break the signature for the model.  While it may be more clear, I think we are too far along in the release of 1.5 to do this.\n. In general, we've moved away from wildcard imports.  Not a blocker to this PR of course, just making sure you've seen the style guides\n. Please leave the cls parameter here, it is for future usage\n. We already have the getPaths to do this\n. Yes, I would suggest removing it and opening a new PR to remove the sorting on the existing method.  I see no reason why we need to monkey with the sort order when fetching the paths.\n. I believe this is needed by the yaml listing provider: https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/listing/BaseApiListingResource.java#L135. Got it. @webron is this correct?  That the wrapped value would take the name items and the XML property itself would be item?  I believe it's the opposite, but I've been staying far away from XML-land.. I think you mean \"it should ignore a hidden field\"?. thanks, fixed that.. The addPathItem should take the parameters (operationPath, pathItemObject). operationId is not used for $ref like this.. Since annotations have an empty string as default, please only set the value if StringUtils.isNotBlank(...).  We use null values to indicate in the output that a field has not been set, which is very different from an empty string.\nThis should happen in all cases when reading annotation properties.. Similar to the above but slightly different for Boolean values.  If the value is false, do not set false in the method.. In general, when adding to a map, please ensure that the key is not an empty string by using StringUtils.isNotBlank(...) to avoid stuff like this:\njson\n\"servers\" : [ {\n  \"url\" : \"\",\n  \"description\" : \"\",\n  \"variables\" : {\n    \"\" : {\n      \"description\" : \"\"\n    }\n  }\n} ]. As with other places, skip fields and don't add to map if empty strings.. I think this logic isn't right.  Parameters may be explicit by being decorated with @Schema annotations, or with @QueryParam, etc.  Look at the ParameterProcessor logic from the previous version for more details on this.. Do a check to see if responses.size() is > 0 or not.  The apiOperation.responses() is never Empty because it's an empty map.  That will avoid this:\n\"responses\": {\n          \"default\": {}\n        }\nWhich we don't want. Suggest you don't return Optional on maps.  Return an empty map instead. For some reason, the schemas are being added in-line.  They need to be added to the components object and set as a reference.  This:\n\"content\": {\n  \"application/json\": {\n    \"schema\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\"\n        },\n        \"username\": {\n          \"type\": \"string\"\n        },\n        \"firstName\": {\n          \"type\": \"string\"\n        },\n        \"lastName\": {\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"password\": {\n          \"type\": \"string\"\n        },\n        \"phone\": {\n          \"type\": \"string\"\n        },\n        \"userStatus\": {\n          \"type\": \"integer\",\n          \"description\": \"User Status\",\n          \"format\": \"int32\",\n          \"enum\": [\n            null\n          ]\n        }\n      }\n    }\n  }\n}\nShould be this:\n\"content\": {\n  \"application/json\": {\n    \"schema\": {\n      \"$ref\": \"#/components/schemas/User\"\n    }\n  }\n}\nWith the corresponding components:\n\"components\": {\n  \"schemas\": {\n    \"User\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\"\n        },\n        \"username\": {\n          \"type\": \"string\"\n        },\n        \"firstName\": {\n          \"type\": \"string\"\n        },\n        \"lastName\": {\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"password\": {\n          \"type\": \"string\"\n        },\n        \"phone\": {\n          \"type\": \"string\"\n        },\n        \"userStatus\": {\n          \"type\": \"integer\",\n          \"description\": \"User Status\",\n          \"format\": \"int32\",\n          \"enum\": [\n            null\n          ]\n        }\n      }\n    }\n  }\n}. Do an empty string check to avoid this:\n\"explode\": false. parameter object should never be missing an in attribute.  In this case, the parameter body must be a requestBody rather than a parameter.. This is not right, the value should be parsed into an object not shown as an escaped string. see the tests, only if they start that way. Not sure if we want this here.... This too.... This is very different from defaulting to @Operation().  We need to see the impact of this. Need to see the effect of this, very different than using a default of @LinkParameters. Not sure if this makes any sense.  If a proper RequestBody, it should be the annotation object rather than a string.. This too is a big change.  Need @webron @ralphdoe @gracekarina to look at this. @frantuma can you confirm this is OK?. @frantuma is this OK?  Not sure why we would make this change but I trust your input. See comment on oneOf. @gracekarina @ralphdoe why were these disabled?  Concerns about enabling them?. Same as above. This lives in the ArraySchema and shouldn't go here, unless I'm mistaken. Why change the default here @arthurdm ?. @gracekarina @ralphdoe is this change OK?. @arthurdm why deviate from the naming convention previously used?  It doesn't follow the schema property names.. Same as above.  Why make this change?  It's confusing.. @arthurdm why delete this?. Why???  . Why do this???. Is this just a naming change plus change in default?  If so, I get it, but this deviates from the naming in the spec, which will create confusion. I don't get it.  @arthurdm your PR is moving away from defaults but adding here? Why?. Same as above.  Now no default?  What does that mean for usability?. Don't like the name change. ",
    "chadhahn": "Gaffney, why don't you guys just use the reflection scanner? This has come up several times already. It obviously needs to be better documented since people are so confused. \nhttps://github.com/wordnik/swagger-core/issues/400\n. FYI: I've had the same problems with NPE on the val resources = app.getClasses().asScala ++ app.getSingletons().asScala.map(ref => ref.getClass) line. For us, we're using RESTEasy with Autoscanning of resources and don't have a JAX-RS Application class. You can look at my fork here: https://github.com/chadhahn/swagger-core and see that I removed the need for the Application class being present, but note that my stuff is heavily edited and a work in progress.\n. Maybe I wasn't very clear above, but I ran into the same problem w/RESTEasy which has the ability to scan for JAX-RS annotations using Scannotation: see http://bill.burkecentral.com/2008/01/14/scanning-java-annotations-at-runtime/ \nYou can see an example https://github.com/chadhahn/swagger-core/tree/master/samples/resteasy-servlet3 that doesn't have an Application class and uses https://code.google.com/p/reflections/ to locate the API annotations at runtime. I'm thinking there needs to be a similar 'autoscan' option in Swagger as not everything that is JAX-RS based is going to have a JAX-RS Application class.\nhttps://github.com/chadhahn/swagger-core/blob/master/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/listing/ApiAnnotationLoader.scala#L11-L24\n. Pretty sure this commit to include the nested routes via regex fixes this. Try 1.2.1-SNAPSHOT version vs 1.2.0 and see if it works.\nhttps://github.com/wordnik/swagger-core/commit/30db009431f621fa0fc6caf0c73a052ce7ef6c90\n. See my comment on https://github.com/wordnik/swagger-core/issues/400#issuecomment-31138151 Basically, by using the ReflectiveJaxrsScanner, annotations are found via scanning for types and subtypes instead of only looking at the Application class. That allows Swagger to work with annotations added to interfaces or base classes. \n. You shouldn't close this as it is a bug. In JAX-RS, it's valid to have a path of \"/\" as that will just be the base of a resource, for instance the default value at your context root. If you use @Api(value=\"/\"), to match this resource, the Swagger UI breaks as it doesn't have a valid name to give this base resource. If you give it a different name, the UI doesn't work as it creates an invalid URL from the given value. I can create a test case when I get time, but this is broken. I worked on a fix back in 1.2 and it basically involves checking if the given Path param is \"/\" only and constructing the UI link from that rather than the Api(value). \n. No, it doesn't make sense because a base resource won't be usable in Swagger UI. Look at https://github.com/chadhahn/swagger-core/blob/aa49f58da031d8944d360811d03968f09d9826e5/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/resource/SimpleResource.java and try it out in Swagger UI. Should be clear that it's a problem.\n. If you're using the ReflectiveJaxrsScanner, I think it should work. That was part of the reason for having that scanner. See https://github.com/wordnik/swagger-core/blob/master/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/config/ReflectiveJaxrsScanner.scala We're putting all our API docs inside interfaces, so I know that works. Think abstract classes should be the same\n. Can you view https://github.com/chadhahn/swagger-core/tree/master/samples/java-dropwizard which is a working example of having all the Swagger annotations in a base class + Reflective scanner and compare to what you're trying to do? I'm not quite following your hierarchy w/Child + Base + Interface \n. How do you scan multiple packages?\nEdit: It looks like this change will also break scanning interfaces and super classes, which was the main benefit of this approach. Are there any tests around that?\n. Correction, Annotations on interfaces USED to work. See https://github.com/chadhahn/swagger-core/tree/master/samples/java-dropwizard and https://github.com/wordnik/swagger-core/issues/400\nHowever, without testing it, it seems that https://github.com/wordnik/swagger-core/pull/535 might have broken it. Unfortunately, this keeps coming up. It needs some documentation around what/how, but it should 100% work when using the ReflectiveJaxrsScanner. That class originally had two goals \n1) scanning for the API annotations which was helpful for RESTEasy, for example \n2) Being able to having the API annotations on base classes or interfaces\nLet me know how I can help. I'm also adamant that, when using ReflectiveJaxrsScanner, it needs to scan multiple packages and not just a single one, which was also something that https://github.com/wordnik/swagger-core/pull/535 changed/broke\n. @fehguy Maybe I don't understand how this all works. I haven't had a chance to get up to speed on changes that have been made. Can you clarify or point me to the docs that explain the relationship between ReflectiveJaxrsScanner and ServletScanner? Maybe everything still does work and I don't quite understand what the multiple scanners are doing. \nAs far as scanning interfaces, the reflections library does that already. Including http://reflections.googlecode.com/svn/trunk/reflections/javadoc/apidocs/org/reflections/scanners/SubTypesScanner.html via setScanners() should handle that (when you also have http://reflections.googlecode.com/svn/trunk/reflections/javadoc/apidocs/org/reflections/scanners/TypeAnnotationsScanner.html). Other than that, you should be good, but having only a single resourcePackage is still a problem, which should probably be a different ticket. The use case for that is having JAX-RS resources in packages \"org.example\" and \"com.example\"\n. ",
    "Angelabably": "when i use\"mvn clean test \"and \"mvn install\"\uff0ci meet the problems like you ,what can i do \n. when i run  \"mvn install \",it shows project failure..\u3002my mvn version is 3.0.4 \uff0cthe problem shows like these:\nScanning for projects...\nSome problems were encountered while building the effective model for org.androidpn:server:jar:0.5.0\n'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: dom4j:dom4j:jar -> duplicate declaration of version 1.6.1 @ org.androidpn:androidpn-server:0.5.0, C:\\Users\\wanghl\\Documents\\NetBeansProjects\\androidpn-server-0.5.0\\pom.xml, line 230, column 15\nThe expression ${version} is deprecated. Please use ${project.version} instead.\nThe expression ${artifactId} is deprecated. Please use ${project.artifactId} instead.\nThe expression ${version} is deprecated. Please use ${project.version} instead.\n'reporting.plugins.plugin.version' for org.apache.maven.plugins:maven-changes-plugin is missing. @ org.androidpn:androidpn-server:0.5.0, C:\\Users\\wanghl\\Documents\\NetBeansProjects\\androidpn-server-0.5.0\\pom.xml, line 389, column 12\n'reporting.plugins.plugin.version' for org.apache.maven.plugins:maven-checkstyle-plugin is missing. @ org.androidpn:androidpn-server:0.5.0, C:\\Users\\wanghl\\Documents\\NetBeansProjects\\androidpn-server-0.5.0\\pom.xml, line 392, column 12\n'reporting.plugins.plugin.version' for org.apache.maven.plugins:maven-javadoc-plugin is missing. @ org.androidpn:androidpn-server:0.5.0, C:\\Users\\wanghl\\Documents\\NetBeansProjects\\androidpn-server-0.5.0\\pom.xml, line 400, column 12\n'reporting.plugins.plugin.version' for org.apache.maven.plugins:maven-jxr-plugin is missing. @ org.androidpn:androidpn-server:0.5.0, C:\\Users\\wanghl\\Documents\\NetBeansProjects\\androidpn-server-0.5.0\\pom.xml, line 403, column 12\n'reporting.plugins.plugin.version' for org.apache.maven.plugins:maven-pmd-plugin is missing. @ org.androidpn:androidpn-server:0.5.0, C:\\Users\\wanghl\\Documents\\NetBeansProjects\\androidpn-server-0.5.0\\pom.xml, line 406, column 12\n. hello @fehguy, when i run \"mvn install \",it shows project failure..\u3002my mvn version is 3.0.4 \uff0cthe problem shows like these:\nScanning for projects...\nSome problems were encountered while building the effective model for org.androidpn:server:jar:0.5.0\n'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: dom4j:dom4j:jar -> duplicate declaration of version 1.6.1 @ org.androidpn:androidpn-server:0.5.0, C:\\Users\\wanghl\\Documents\\NetBeansProjects\\androidpn-server-0.5.0\\pom.xml, line 230, column 15\nThe expression ${version} is deprecated. Please use ${project.version} instead.\nThe expression ${artifactId} is deprecated. Please use ${project.artifactId} instead.\nThe expression ${version} is deprecated. Please use ${project.version} instead.\n'reporting.plugins.plugin.version' for org.apache.maven.plugins:maven-changes-plugin is missing. @ org.androidpn:androidpn-server:0.5.0, C:\\Users\\wanghl\\Documents\\NetBeansProjects\\androidpn-server-0.5.0\\pom.xml, line 389, column 12\n'reporting.plugins.plugin.version' for org.apache.maven.plugins:maven-checkstyle-plugin is missing. @ org.androidpn:androidpn-server:0.5.0, C:\\Users\\wanghl\\Documents\\NetBeansProjects\\androidpn-server-0.5.0\\pom.xml, line 392, column 12\n'reporting.plugins.plugin.version' for org.apache.maven.plugins:maven-javadoc-plugin is missing. @ org.androidpn:androidpn-server:0.5.0, C:\\Users\\wanghl\\Documents\\NetBeansProjects\\androidpn-server-0.5.0\\pom.xml, line 400, column 12\n'reporting.plugins.plugin.version' for org.apache.maven.plugins:maven-jxr-plugin is missing. @ org.androidpn:androidpn-server:0.5.0, C:\\Users\\wanghl\\Documents\\NetBeansProjects\\androidpn-server-0.5.0\\pom.xml, line 403, column 12\n'reporting.plugins.plugin.version' for org.apache.maven.plugins:maven-pmd-plugin is missing. @ org.androidpn:androidpn-server:0.5.0, C:\\Users\\wanghl\\Documents\\NetBeansProjects\\androidpn-server-0.5.0\\pom.xml, line 406, column 12\n. @fehguy  \u4f60\u597d\uff0c\u4f60\u4f1a\u8bf4\u4e2d\u6587\u5417\uff1f\u6211\u7684\u82f1\u8bed\u4e0d\u597d\uff0c\u6240\u4ee5\u6709\u65f6\u5019\u4e0d\u80fd\u5f88\u597d\u7406\u89e3\u4f60\u7684\u610f\u601d\u3002 can you speak chinese ? i can't speak english  very well,so sometimes i can't unstand your meaning very well..\n. @jimhao  \u4f60\u597d\u3002\u600e\u4e48git pull \uff1f\u4ec0\u4e48\u624d\u662f\u6240\u8c13\u7684\u9876\u5c42project? \n. @fehguy  \u4f60\u597d\uff0c\u6211\u7684maven\u662f3.0\u7248\u672c\u7684\uff0c\u8c03\u8bd5\u9879\u76ee\u7684\u65f6\u5019\uff0c\u51fa\u73b0\u4e86\u8ddf\u697c\u4e3b\u4e00\u6837\u7684\u9519\u8bef\u3002\u5f53\u6211\u6253\u5305\u9879\u76ee\u7684\u65f6\u5019\uff0c\u51fa\u73b0\u4e86\u4ee5\u4e0a\u7684\u90a3\u4e9b\u9519\u8bef\u3002\u8fd0\u884cmvn install\u547d\u4ee4\uff0c\u6ca1\u6709\u6210\u529f\u3002\n. ",
    "jimhao": "fehguy commented\n12 hours ago\nHi @Angelabably, can you please pull the project and run \"mvn install\" from the top-level directory?\nfehguy\u662f\u8bf4\uff0c\u5148git pull \u9876\u5c42 project ( top-level (swagger-core) project ), \u7136\u540e\u6267\u884c\u547d\u4ee4 run \"mvn install\"\n. ",
    "jimhaovipimo": "\u4e00\u6b65\u4e00\u6b65\u6765\uff0c\n1. \u5148\u4ecegithub\u7f51\u7ad9checkout swagger-core (\u6211\u5047\u8bbe\u4f60\u5df2\u7ecf\u505a\u8fc7\u4e86\uff09\n2. get latest code:  git pull\n3. maven build:  mvn clean install\n\u8bf7\u8bd5\u8fd0\u884c\u8fd9\u4e9b\u6b65\u9aa4\uff0c\u7136\u540e\u628a\u547d\u4ee4\u7684\u8f93\u51fapost\u5728\u8fd9\u91cc\u3002\u6211\u4eec\u4f1a\u5e2e\u52a9\u4f60\u5206\u6790\n. \u4e00\u6b65\u4e00\u6b65\u6765\uff0c\n1. \u5148\u4ecegithub\u7f51\u7ad9checkout swagger-core (\u6211\u5047\u8bbe\u4f60\u5df2\u7ecf\u505a\u8fc7\u4e86\uff09\n2. get latest code:  git pull\n3. maven build:  mvn clean install\n\u8bf7\u8bd5\u8fd0\u884c\u8fd9\u4e9b\u6b65\u9aa4\uff0c\u7136\u540e\u628a\u547d\u4ee4\u7684\u8f93\u51fapost\u5728\u8fd9\u91cc\u3002\u6211\u4eec\u4f1a\u5e2e\u52a9\u4f60\u5206\u6790\n. ",
    "cleemansen": "Hi, I've tried to combine swagger with an example out of the RESTeasy framework (examples-jaxb-json). Like the wiki describes (Method #2) I added the class ApiListingResource extends JavaApiListing with @Path(\"resources.json\").\nAdditionally I added the package definition so RESTeasy can scan for root resources.\nI've deployed it to a tomcat and it starts up fine. Unfortunately when trying to open the /resource.json Resource I get the following Nullpointer Exception:\njava\n21.10.2012 11:59:00 org.apache.catalina.core.StandardWrapperValve invoke\nSCHWERWIEGEND: Servlet.service() for servlet Resteasy threw exception\norg.jboss.resteasy.spi.UnhandledException: java.lang.NullPointerException\n    at org.jboss.resteasy.core.SynchronousDispatcher.handleApplicationException(SynchronousDispatcher.java:351)\n    at org.jboss.resteasy.core.SynchronousDispatcher.handleException(SynchronousDispatcher.java:220)\n    at org.jboss.resteasy.core.SynchronousDispatcher.handleInvokerException(SynchronousDispatcher.java:196)\n    at org.jboss.resteasy.core.SynchronousDispatcher.getResponse(SynchronousDispatcher.java:551)\n    at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:513)\n    at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:125)\n    at org.jboss.resteasy.plugins.server.servlet.ServletContainerDispatcher.service(ServletContainerDispatcher.java:208)\n    at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:55)\n    at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:50)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\n    at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)\n    at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:602)\n    at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n    at java.lang.Thread.run(Thread.java:680)\nCaused by: java.lang.NullPointerException\n    at com.wordnik.swagger.jaxrs.ApiListing$class.getAllApis(ApiListing.scala:63)\n    at com.wordnik.swagger.jaxrs.JavaApiListing.getAllApis(JavaApiListing.scala:5)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:597)\n    at org.jboss.resteasy.core.MethodInjectorImpl.invoke(MethodInjectorImpl.java:167)\n    at org.jboss.resteasy.core.ResourceMethod.invokeOnTarget(ResourceMethod.java:257)\n    at org.jboss.resteasy.core.ResourceMethod.invoke(ResourceMethod.java:222)\n    at org.jboss.resteasy.core.ResourceMethod.invoke(ResourceMethod.java:211)\n    at org.jboss.resteasy.core.SynchronousDispatcher.getResponse(SynchronousDispatcher.java:536)\n    ... 18 more\nI'm using:\nxml\n   <dependency>\n      <groupId>com.wordnik</groupId>\n      <artifactId>swagger-jaxrs_2.9.1</artifactId>\n      <version>1.1.0</version>\n      <scope>compile</scope>\n   </dependency>\nWhat is missing?\n. ",
    "ghost": "I have the same problem with JBoss AS 7 and jerseys classes. When I adding artifactId swagger-jaxrs_2.9.1 to my pom.xml, i have errors during deployment something like this\njava\n17:25:21,137 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-2) MSC00001: Failed to start service jboss.deployment.unit.\"server.war\".POST_MODULE: org.jboss.msc.service.StartException in service jboss.deployment.unit.\"server.war\".POST_MODULE: Failed to process phase POST_MODULE of deployment \"server.war\"\n    at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:119) [jboss-as-server-7.1.1.Final.jar:7.1.1.Final]\n    at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1811) [jboss-msc-1.0.2.GA.jar:1.0.2.GA]\n    at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1746) [jboss-msc-1.0.2.GA.jar:1.0.2.GA]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_13]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_13]\n    at java.lang.Thread.run(Thread.java:722) [rt.jar:1.7.0_13]\nCaused by: org.jboss.as.server.deployment.DeploymentUnitProcessingException: JBAS011232: Only one JAX-RS Application Class allowed.  com.sun.jersey.api.core.DefaultResourceConfig com.sun.jersey.server.impl.application.DeferredResourceConfig com.sun.jersey.api.core.ClasspathResourceConfig com.sun.jersey.api.core.ClassNamesResourceConfig com.sun.jersey.api.core.ScanningResourceConfig com.sun.jersey.api.core.ResourceConfig com.sun.jersey.api.core.servlet.WebAppResourceConfig com.sun.jersey.api.core.PackagesResourceConfig com.sun.jersey.api.core.ApplicationAdapter com.test.test.rest.JaxRsActivator\n    at org.jboss.as.jaxrs.deployment.JaxrsScanningProcessor.scan(JaxrsScanningProcessor.java:209)\n    at org.jboss.as.jaxrs.deployment.JaxrsScanningProcessor.deploy(JaxrsScanningProcessor.java:105)\n    at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:113) [jboss-as-server-7.1.1.Final.jar:7.1.1.Final]\n    ... 5 more\nmaven\n        <dependency>\n            <groupId>com.wordnik</groupId>\n            <artifactId>swagger-jaxrs_2.9.1</artifactId>\n            <version>1.2.5</version>\n            <scope>compile</scope>\n        </dependency>\nDo u have any idea? I'm trying different versions of swagger-jaxrs(also, of course, 1.2.0), but result the same.\n. I have the same problem with JBoss AS 7 and jerseys classes. When I adding artifactId swagger-jaxrs_2.9.1 to my pom.xml, i have errors during deployment something like this\njava\n17:25:21,137 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-2) MSC00001: Failed to start service jboss.deployment.unit.\"server.war\".POST_MODULE: org.jboss.msc.service.StartException in service jboss.deployment.unit.\"server.war\".POST_MODULE: Failed to process phase POST_MODULE of deployment \"server.war\"\n    at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:119) [jboss-as-server-7.1.1.Final.jar:7.1.1.Final]\n    at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1811) [jboss-msc-1.0.2.GA.jar:1.0.2.GA]\n    at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1746) [jboss-msc-1.0.2.GA.jar:1.0.2.GA]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_13]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_13]\n    at java.lang.Thread.run(Thread.java:722) [rt.jar:1.7.0_13]\nCaused by: org.jboss.as.server.deployment.DeploymentUnitProcessingException: JBAS011232: Only one JAX-RS Application Class allowed.  com.sun.jersey.api.core.DefaultResourceConfig com.sun.jersey.server.impl.application.DeferredResourceConfig com.sun.jersey.api.core.ClasspathResourceConfig com.sun.jersey.api.core.ClassNamesResourceConfig com.sun.jersey.api.core.ScanningResourceConfig com.sun.jersey.api.core.ResourceConfig com.sun.jersey.api.core.servlet.WebAppResourceConfig com.sun.jersey.api.core.PackagesResourceConfig com.sun.jersey.api.core.ApplicationAdapter com.test.test.rest.JaxRsActivator\n    at org.jboss.as.jaxrs.deployment.JaxrsScanningProcessor.scan(JaxrsScanningProcessor.java:209)\n    at org.jboss.as.jaxrs.deployment.JaxrsScanningProcessor.deploy(JaxrsScanningProcessor.java:105)\n    at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:113) [jboss-as-server-7.1.1.Final.jar:7.1.1.Final]\n    ... 5 more\nmaven\n        <dependency>\n            <groupId>com.wordnik</groupId>\n            <artifactId>swagger-jaxrs_2.9.1</artifactId>\n            <version>1.2.5</version>\n            <scope>compile</scope>\n        </dependency>\nDo u have any idea? I'm trying different versions of swagger-jaxrs(also, of course, 1.2.0), but result the same.\n. Yes, of course. Also I'm trying to start sample java-resteasy. I think, dependencies to jersey are unacceptable with JBoss.\njava\n18:31:20,814 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-4) MSC00001: Failed to start service jboss.deployment.unit.\"swagger-java-resteasy-sample_2.9.1-1.2.5.war\".POST_MODULE: org.jboss.msc.service.StartException in service jboss.deployment.unit.\"swagger-java-resteasy-sample_2.9.1-1.2.5.war\".POST_MODULE: Failed to process phase POST_MODULE of deployment \"swagger-java-resteasy-sample_2.9.1-1.2.5.war\"\n    at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:119) [jboss-as-server-7.1.1.Final.jar:7.1.1.Final]\n    at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1811) [jboss-msc-1.0.2.GA.jar:1.0.2.GA]\n    at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1746) [jboss-msc-1.0.2.GA.jar:1.0.2.GA]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_13]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_13]\n    at java.lang.Thread.run(Thread.java:722) [rt.jar:1.7.0_13]\nCaused by: org.jboss.as.server.deployment.DeploymentUnitProcessingException: JBAS011232: Only one JAX-RS Application Class allowed.  org.jboss.resteasy.examples.service.LibraryApplication com.sun.jersey.api.core.servlet.WebAppResourceConfig com.sun.jersey.api.core.ClassNamesResourceConfig com.sun.jersey.api.core.DefaultResourceConfig com.sun.jersey.api.core.ScanningResourceConfig com.sun.jersey.api.core.ResourceConfig com.sun.jersey.api.core.PackagesResourceConfig com.sun.jersey.api.core.ClasspathResourceConfig com.sun.jersey.server.impl.application.DeferredResourceConfig com.sun.jersey.api.core.ApplicationAdapter\n    at org.jboss.as.jaxrs.deployment.JaxrsScanningProcessor.scan(JaxrsScanningProcessor.java:209)\n    at org.jboss.as.jaxrs.deployment.JaxrsScanningProcessor.deploy(JaxrsScanningProcessor.java:105)\n    at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:113) [jboss-as-server-7.1.1.Final.jar:7.1.1.Final]\n    ... 5 more\nBoth Jersey and Resteasy are realizations of JAX-RS. In resteasy sample just can't be, in principle, relationships to jersey...\n. Yes, of course. Also I'm trying to start sample java-resteasy. I think, dependencies to jersey are unacceptable with JBoss.\njava\n18:31:20,814 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-4) MSC00001: Failed to start service jboss.deployment.unit.\"swagger-java-resteasy-sample_2.9.1-1.2.5.war\".POST_MODULE: org.jboss.msc.service.StartException in service jboss.deployment.unit.\"swagger-java-resteasy-sample_2.9.1-1.2.5.war\".POST_MODULE: Failed to process phase POST_MODULE of deployment \"swagger-java-resteasy-sample_2.9.1-1.2.5.war\"\n    at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:119) [jboss-as-server-7.1.1.Final.jar:7.1.1.Final]\n    at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1811) [jboss-msc-1.0.2.GA.jar:1.0.2.GA]\n    at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1746) [jboss-msc-1.0.2.GA.jar:1.0.2.GA]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [rt.jar:1.7.0_13]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [rt.jar:1.7.0_13]\n    at java.lang.Thread.run(Thread.java:722) [rt.jar:1.7.0_13]\nCaused by: org.jboss.as.server.deployment.DeploymentUnitProcessingException: JBAS011232: Only one JAX-RS Application Class allowed.  org.jboss.resteasy.examples.service.LibraryApplication com.sun.jersey.api.core.servlet.WebAppResourceConfig com.sun.jersey.api.core.ClassNamesResourceConfig com.sun.jersey.api.core.DefaultResourceConfig com.sun.jersey.api.core.ScanningResourceConfig com.sun.jersey.api.core.ResourceConfig com.sun.jersey.api.core.PackagesResourceConfig com.sun.jersey.api.core.ClasspathResourceConfig com.sun.jersey.server.impl.application.DeferredResourceConfig com.sun.jersey.api.core.ApplicationAdapter\n    at org.jboss.as.jaxrs.deployment.JaxrsScanningProcessor.scan(JaxrsScanningProcessor.java:209)\n    at org.jboss.as.jaxrs.deployment.JaxrsScanningProcessor.deploy(JaxrsScanningProcessor.java:105)\n    at org.jboss.as.server.deployment.DeploymentUnitPhaseService.start(DeploymentUnitPhaseService.java:113) [jboss-as-server-7.1.1.Final.jar:7.1.1.Final]\n    ... 5 more\nBoth Jersey and Resteasy are realizations of JAX-RS. In resteasy sample just can't be, in principle, relationships to jersey...\n. Thanks. I hope that this time the sample to be tested.\n. Thanks. I hope that this time the sample to be tested.\n. Are you try run with Jboss Application Server 7?\nReseasy is a realization of Jboss, as well as Jboss AS. I think that it is likely to use this server.\n. Are you try run with Jboss Application Server 7?\nReseasy is a realization of Jboss, as well as Jboss AS. I think that it is likely to use this server.\n. You are partly right. Can you tell me when version 1.3.0 will released? Because some configuration files are not the same with samples. Fox example, I can't find interface ApiAuthorizationFilter and class ConfigReader.\nAlso I tell you why your sample for resteasy is bad. It's bad because maven configuration depends on specific server(jetty in your case).\n. You are partly right. Can you tell me when version 1.3.0 will released? Because some configuration files are not the same with samples. Fox example, I can't find interface ApiAuthorizationFilter and class ConfigReader.\nAlso I tell you why your sample for resteasy is bad. It's bad because maven configuration depends on specific server(jetty in your case).\n. thanks. but I can't see it. can you post direct link?\n. thanks. but I can't see it. can you post direct link?\n. +1 on this issue.\n. +1 on this issue.\n. I'm not really sure from this conversation, but is there support for Play 2.2.0 ? \n. I'm not really sure from this conversation, but is there support for Play 2.2.0 ? \n. Bump\n. Bump\n. In what way are you asking this? Hope its not sarcastic. Because i'm just trying to make myself as clear as possible.\n. In what way are you asking this? Hope its not sarcastic. Because i'm just trying to make myself as clear as possible.\n. Sorry for my later response. I've been very busy lately.\nIf you run Play it starts with a \"mode\". This can be Dev/Test/Prod. Test mode wil be triggered if you run Unittests, intergration test or a Specs2(plugin for unit specifications and acceptance specifications). In test mode there is no need for swagger. But it will be triggered and the tests will be slowed down by swagger. \nI Have managed to interupt swagger from running in testmode by adding \"swagger.api.basepath=nonvalidurl\" in the config file. This is a really dirty solution. i know :(\n. Sorry for my later response. I've been very busy lately.\nIf you run Play it starts with a \"mode\". This can be Dev/Test/Prod. Test mode wil be triggered if you run Unittests, intergration test or a Specs2(plugin for unit specifications and acceptance specifications). In test mode there is no need for swagger. But it will be triggered and the tests will be slowed down by swagger. \nI Have managed to interupt swagger from running in testmode by adding \"swagger.api.basepath=nonvalidurl\" in the config file. This is a really dirty solution. i know :(\n. I actually had this same problem today using the swagger-play2 plugin. In Play, you can disable plugins when using fakeApplication(). Here is the signature of the method:\npublic static FakeApplication fakeApplication(Map<String, ? extends Object> additionalConfiguration, List<String> additionalPlugins, List<String> withoutPlugins)\nSo in my particular case I'm using this call for each of my integration tests:\nrunning(testServer(3333, fakeApplication(InMemoryDatabase.inMemoryDatabase(), new ArrayList<String>(), Arrays.asList(\"play.modules.swagger.SwaggerPlugin\"))), HTMLUNIT, browser -> {\n. I actually had this same problem today using the swagger-play2 plugin. In Play, you can disable plugins when using fakeApplication(). Here is the signature of the method:\npublic static FakeApplication fakeApplication(Map<String, ? extends Object> additionalConfiguration, List<String> additionalPlugins, List<String> withoutPlugins)\nSo in my particular case I'm using this call for each of my integration tests:\nrunning(testServer(3333, fakeApplication(InMemoryDatabase.inMemoryDatabase(), new ArrayList<String>(), Arrays.asList(\"play.modules.swagger.SwaggerPlugin\"))), HTMLUNIT, browser -> {\n. @fehguy, if you look at https://github.com/swagger-api/swagger-core/pull/973/files#diff-6b04f0da967ddc159fc20e0c415942bfR47 and let me know if you'd like me to cut one of the config types, or add some code to prefer one over the other but try both, ill add that to the PR\n. @fehguy, if you look at https://github.com/swagger-api/swagger-core/pull/973/files#diff-6b04f0da967ddc159fc20e0c415942bfR47 and let me know if you'd like me to cut one of the config types, or add some code to prefer one over the other but try both, ill add that to the PR\n. I am, we're just installing to our local repos via sbt publish-local. You just have to change into the modules/swagger-play2 directory and issue the sbt publish-local command. Then just update your sbt dependency version wherever you want to use it to 1.3.12_play24. \ngit clone https://github.com/mikalveli/swagger-core\ncd swagger-core\ngit checkout 1.3.12-play2.4\ncd modules/swagger-play2\nsbt publish-local\nThen inside your Play projects, update build.sbt so the libraryDependencies has:\n\"com.wordnik\"                    %% \"swagger-play2\"             % \"1.3.12_play24\"\nEdit: Cleaned up, added list of instructions for example.\n. I am, we're just installing to our local repos via sbt publish-local. You just have to change into the modules/swagger-play2 directory and issue the sbt publish-local command. Then just update your sbt dependency version wherever you want to use it to 1.3.12_play24. \ngit clone https://github.com/mikalveli/swagger-core\ncd swagger-core\ngit checkout 1.3.12-play2.4\ncd modules/swagger-play2\nsbt publish-local\nThen inside your Play projects, update build.sbt so the libraryDependencies has:\n\"com.wordnik\"                    %% \"swagger-play2\"             % \"1.3.12_play24\"\nEdit: Cleaned up, added list of instructions for example.\n. Hey @cablegunmaster, the command \"git checkout 1.3.12-play2.4\" is to switch to the branch where I pushed my modifications in the forked repo. Once you change over to the 1.3.12-play2.4 branch with the git checkout command, you will have the modules/swagger-play2 directory where you will navigate to in order to issue the sbt publish-local command.\n. Hey @cablegunmaster, the command \"git checkout 1.3.12-play2.4\" is to switch to the branch where I pushed my modifications in the forked repo. Once you change over to the 1.3.12-play2.4 branch with the git checkout command, you will have the modules/swagger-play2 directory where you will navigate to in order to issue the sbt publish-local command.\n. @who - I'm using the Scala module, which (though I'm not sure how) seems to circumvent the getter/setter logic in ModelResolver (since in Scala it's common to use immutable case classes for everything, so the presence of a setter isn't really related to whether a REST client is allowed to modify the property).\nHowever, I'm not sure why the code would behave the way you say it's behaving. On lines 380-384, it looks like it does override the readOnly flag based on the getter/setter situation, but only if property.getReadOnly() is still null at that point... and if you had readOnly=false in your annotation, then it should have already set readOnly to false, rather than null, on line 378. So I'm not sure what's going on there.\n. @who - I'm using the Scala module, which (though I'm not sure how) seems to circumvent the getter/setter logic in ModelResolver (since in Scala it's common to use immutable case classes for everything, so the presence of a setter isn't really related to whether a REST client is allowed to modify the property).\nHowever, I'm not sure why the code would behave the way you say it's behaving. On lines 380-384, it looks like it does override the readOnly flag based on the getter/setter situation, but only if property.getReadOnly() is still null at that point... and if you had readOnly=false in your annotation, then it should have already set readOnly to false, rather than null, on line 378. So I'm not sure what's going on there.\n. (As you can see, I'm \"not sure\" about a lot of things...)\n. (As you can see, I'm \"not sure\" about a lot of things...)\n. I can't say I even understand the intended behavior for Java code. I mean, just because a Java bean property has a setter is not evidence that a REST client is supposed to be able to edit it; nor is the contrary true, since Java programmers can use immutable classes for the same reasons Scala programmers do. It's inappropriately assuming a direct correspondence between how the class is used internally in your code and how it's used via REST. I've filed that as #1165.\n. I can't say I even understand the intended behavior for Java code. I mean, just because a Java bean property has a setter is not evidence that a REST client is supposed to be able to edit it; nor is the contrary true, since Java programmers can use immutable classes for the same reasons Scala programmers do. It's inappropriately assuming a direct correspondence between how the class is used internally in your code and how it's used via REST. I've filed that as #1165.\n. Hi,\nwe have the same issue on Websphere. All the paths are available except for the swagger.json/.yaml resource. The Websphere has been configured with DisableJaxRSEngine and PARENT_LAST.\nIn Websphere Liberty Profile I was not able to reproduce the issue on my local machine.\n. I was able to peek at some logs and I found a java.io.FileNotFoundException: for jaxb-api.\nAfter adding that dependency the exception did not occur again after redeployment, but the swagger.json is still not available.\n. Hi Tony,\nif you mean the /swagger.json responses object then I can say that we experienced this as well. This is actually bad, because we are losing information here.\n. Hi Tony,\nif you mean the /swagger.json responses object then I can say that we experienced this as well. This is actually bad, because we are losing information here.\n. +1. +1. Ah, now I figured out how this is working. This would be the 1.5 equivalent of an 1.3 @Api annotation with description.\n@Api(tags = { \"My Swagger Resource\" })\n@SwaggerDefinition(tags = { @Tag(name = \"My Swagger Resource\", description = \"Meaningful stuff in here\") })\nI think this definitively should be mentioned in the migration guide!. Ah, now I figured out how this is working. This would be the 1.5 equivalent of an 1.3 @Api annotation with description.\n@Api(tags = { \"My Swagger Resource\" })\n@SwaggerDefinition(tags = { @Tag(name = \"My Swagger Resource\", description = \"Meaningful stuff in here\") })\nI think this definitively should be mentioned in the migration guide!. What does that mean, exactly? The docs shows this:\n@ApiModelProperty(description = \"pet status in the store\", allowableValues =  {\"available\",\"pending\",\"sold\"})\n  public String getStatus() {\n    return status;\n  }\nBut that annotation doesn't exist in 2.0.0-rc2. How should I document fields in my class?. What does that mean, exactly? The docs shows this:\n@ApiModelProperty(description = \"pet status in the store\", allowableValues =  {\"available\",\"pending\",\"sold\"})\n  public String getStatus() {\n    return status;\n  }\nBut that annotation doesn't exist in 2.0.0-rc2. How should I document fields in my class?. That works! Thank you :). That works! Thank you :). The snapshot works great, thank you very much!. The snapshot works great, thank you very much!. I do believe I'm using the latest snapshot. mvn dependency:tree gives me the following (after removing one internal library and sorting):\n[INFO]    ch.vorburger.mariaDB4j:mariaDB4j-core:jar:2.2.3-1:test\n[INFO]    ch.vorburger.mariaDB4j:mariaDB4j-db-linux64:jar:5.7.19:test\n[INFO]    ch.vorburger.mariaDB4j:mariaDB4j-db-mac64:jar:5.7.19:test\n[INFO]    ch.vorburger.mariaDB4j:mariaDB4j-db-win32:jar:10.2.7:test\n[INFO]    com.fasterxml.jackson.core:jackson-annotations:jar:2.8.10:compile\n[INFO]    com.fasterxml.jackson.core:jackson-core:jar:2.8.10:compile\n[INFO]    com.fasterxml.jackson.core:jackson-databind:jar:2.8.10:compile\n[INFO]    com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:jar:2.9.1:compile\n[INFO]    com.github.kstyrc:embedded-redis:jar:0.6:test\n[INFO]    com.github.stephenc.findbugs:findbugs-annotations:jar:1.3.9-1:compile\n[INFO]    com.google.api:api-common:jar:1.1.0:compile\n[INFO]    com.google.api-client:google-api-client:jar:1.23.0:compile\n[INFO]    com.google.api:gax-grpc:jar:0.26.0:compile\n[INFO]    com.google.api:gax:jar:1.9.0:compile\n[INFO]    com.google.api.grpc:grpc-google-cloud-pubsub-v1:jar:0.1.21:compile\n[INFO]    com.google.api.grpc:grpc-google-common-protos:jar:0.1.9:compile\n[INFO]    com.google.api.grpc:proto-google-cloud-pubsub-v1:jar:0.1.21:compile\n[INFO]    com.google.api.grpc:proto-google-common-protos:jar:0.1.21:compile\n[INFO]    com.google.api.grpc:proto-google-iam-v1:jar:0.1.21:compile\n[INFO]    com.google.apis:google-api-services-storage:jar:v1-rev115-1.23.0:compile\n[INFO]    com.google.auth:google-auth-library-appengine:jar:0.7.0:compile\n[INFO]    com.google.auth:google-auth-library-credentials:jar:0.8.0:compile\n[INFO]    com.google.auth:google-auth-library-oauth2-http:jar:0.8.0:compile\n[INFO]    com.google.auto.value:auto-value:jar:1.2:compile\n[INFO]    com.google.cloud.bigtable:bigtable-client-core:jar:1.0.0-pre4:compile\n[INFO]    com.google.cloud.bigtable:bigtable-hbase-1.x:jar:1.0.0-pre4:compile\n[INFO]    com.google.cloud.bigtable:bigtable-hbase:jar:1.0.0-pre4:compile\n[INFO]    com.google.cloud.bigtable:bigtable-protos:jar:1.0.0-pre4:compile\n[INFO]    com.google.cloud:google-cloud-core-grpc:jar:1.8.0:compile\n[INFO]    com.google.cloud:google-cloud-core-http:jar:1.8.0:compile\n[INFO]    com.google.cloud:google-cloud-core:jar:1.8.0:compile\n[INFO]    com.google.cloud:google-cloud-pubsub:jar:0.26.0-beta:compile\n[INFO]    com.google.cloud:google-cloud-storage:jar:1.8.0:compile\n[INFO]    com.google.code.findbugs:jsr305:jar:3.0.2:compile\n[INFO]    com.google.code.gson:gson:jar:2.7:compile\n[INFO]    com.google.errorprone:error_prone_annotations:jar:2.0.19:compile\n[INFO]    com.google.guava:guava:jar:21.0:compile\n[INFO]    com.google.http-client:google-http-client-appengine:jar:1.22.0:compile\n[INFO]    com.google.http-client:google-http-client-jackson2:jar:1.23.0:compile\n[INFO]    com.google.http-client:google-http-client-jackson:jar:1.22.0:compile\n[INFO]    com.google.http-client:google-http-client:jar:1.23.0:compile\n[INFO]    com.google.instrumentation:instrumentation-api:jar:0.4.3:compile\n[INFO]    com.google.oauth-client:google-oauth-client:jar:1.23.0:compile\n[INFO]    com.google.protobuf:protobuf-java:jar:3.4.0:compile\n[INFO]    com.google.protobuf:protobuf-java-util:jar:3.4.0:compile\n[INFO]    commons-beanutils:commons-beanutils:jar:1.9.3:compile\n[INFO]    commons-cli:commons-cli:jar:1.4:compile\n[INFO]    commons-codec:commons-codec:jar:1.9:compile\n[INFO]    commons-collections:commons-collections:jar:3.2.2:compile\n[INFO]    commons-io:commons-io:jar:2.5:compile\n[INFO]    commons-logging:commons-logging:jar:1.2:compile\n[INFO]    com.opencsv:opencsv:jar:3.3:compile\n[INFO]    com.sendgrid:java-http-client:jar:4.1.0:compile\n[INFO]    com.sendgrid:sendgrid-java:jar:4.1.0:compile\n[INFO]    com.squareup.okhttp3:okhttp:jar:3.8.1:compile\n[INFO]    com.squareup.okio:okio:jar:1.13.0:compile\n[INFO]    io.dropwizard.metrics:metrics-core:jar:3.1.2:compile\n[INFO]    io.grpc:grpc-auth:jar:1.7.0:compile\n[INFO]    io.grpc:grpc-context:jar:1.7.0:compile\n[INFO]    io.grpc:grpc-core:jar:1.7.0:compile\n[INFO]    io.grpc:grpc-netty:jar:1.7.0:compile\n[INFO]    io.grpc:grpc-protobuf:jar:1.7.0:compile\n[INFO]    io.grpc:grpc-protobuf-lite:jar:1.7.0:compile\n[INFO]    io.grpc:grpc-stub:jar:1.7.0:compile\n[INFO]    io.netty:netty-buffer:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-codec-http2:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-codec-http:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-codec:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-codec-socks:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-common:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-handler:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-handler-proxy:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-resolver:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-tcnative-boringssl-static:jar:2.0.6.Final:compile\n[INFO]    io.netty:netty-transport:jar:4.1.16.Final:compile\n[INFO]    io.opencensus:opencensus-api:jar:0.7.0:compile\n[INFO]    io.opencensus:opencensus-contrib-grpc-util:jar:0.7.0:compile\n[INFO]    io.prometheus:simpleclient_common:jar:0.0.26:compile\n[INFO]    io.prometheus:simpleclient_hotspot:jar:0.0.26:compile\n[INFO]    io.prometheus:simpleclient:jar:0.0.26:compile\n[INFO]    io.prometheus:simpleclient_servlet:jar:0.0.26:compile\n[INFO]    io.swagger.core.v3:swagger-annotations:jar:2.0.0-SNAPSHOT:compile\n[INFO]    io.swagger.core.v3:swagger-core:jar:2.0.0-SNAPSHOT:compile\n[INFO]    io.swagger.core.v3:swagger-integration:jar:2.0.0-SNAPSHOT:compile\n[INFO]    io.swagger.core.v3:swagger-jaxrs2:jar:2.0.0-SNAPSHOT:compile\n[INFO]    io.swagger.core.v3:swagger-models:jar:2.0.0-SNAPSHOT:compile\n[INFO]    io.zipkin.brave:brave-instrumentation-http:jar:4.7.1:compile\n[INFO]    io.zipkin.brave:brave-instrumentation-jaxrs2:jar:4.7.1:compile\n[INFO]    io.zipkin.brave:brave-instrumentation-p6spy:jar:4.7.1:compile\n[INFO]    io.zipkin.brave:brave:jar:4.7.1:compile\n[INFO]    io.zipkin.java:zipkin:jar:2.0.0:compile\n[INFO]    io.zipkin.reporter:zipkin-reporter:jar:1.1.0:compile\n[INFO]    io.zipkin.reporter:zipkin-sender-okhttp3:jar:1.1.0:compile\n[INFO]    io.zipkin.zipkin2:zipkin:jar:2.0.0:compile\n[INFO]    javax.annotation:javax.annotation-api:jar:1.2:compile\n[INFO]    javax.inject:javax.inject:jar:1:compile\n[INFO]    javax.servlet:javax.servlet-api:jar:3.1.0:compile\n[INFO]    javax.validation:validation-api:jar:1.1.0.Final:compile\n[INFO]    javax.ws.rs:javax.ws.rs-api:jar:2.0.1:compile\n[INFO]    joda-time:joda-time:jar:2.9.9:compile\n[INFO]    junit:junit:jar:4.12:test\n[INFO]    mysql:mysql-connector-java:jar:5.1.6:compile\n[INFO]    one.util:streamex:jar:0.6.5:compile\n[INFO]    org.apache.commons:commons-collections4:jar:4.1:test\n[INFO]    org.apache.commons:commons-dbcp2:jar:2.1.1:compile\n[INFO]    org.apache.commons:commons-exec:jar:1.3:test\n[INFO]    org.apache.commons:commons-lang3:jar:3.5:compile\n[INFO]    org.apache.commons:commons-pool2:jar:2.4.2:compile\n[INFO]    org.apache.hbase:hbase-shaded-client:jar:1.3.1:compile\n[INFO]    org.apache.htrace:htrace-core:jar:3.1.0-incubating:compile\n[INFO]    org.apache.httpcomponents:httpclient:jar:4.5.2:compile\n[INFO]    org.apache.httpcomponents:httpcore:jar:4.4.4:compile\n[INFO]    org.apache.logging.log4j:log4j-api:jar:2.8.2:compile\n[INFO]    org.apache.logging.log4j:log4j-core:jar:2.8.2:compile\n[INFO]    org.apache.logging.log4j:log4j-slf4j-impl:jar:2.8.2:compile\n[INFO]    org.apache.logging.log4j:log4j-web:jar:2.8.2:compile\n[INFO]    org.apache.shiro:shiro-core:jar:1.3.2:compile\n[INFO]    org.apache.shiro:shiro-web:jar:1.3.2:compile\n[INFO]    org.codehaus.jackson:jackson-core-asl:jar:1.9.11:compile\n[INFO]    org.eclipse.jetty:jetty-continuation:jar:9.2.14.v20151106:compile\n[INFO]    org.eclipse.jetty:jetty-http:jar:9.2.21.v20170120:compile\n[INFO]    org.eclipse.jetty:jetty-io:jar:9.2.21.v20170120:compile\n[INFO]    org.eclipse.jetty:jetty-security:jar:9.2.21.v20170120:compile\n[INFO]    org.eclipse.jetty:jetty-server:jar:9.2.21.v20170120:compile\n[INFO]    org.eclipse.jetty:jetty-servlet:jar:9.2.21.v20170120:compile\n[INFO]    org.eclipse.jetty:jetty-util:jar:9.2.21.v20170120:compile\n[INFO]    org.glassfish.hk2.external:aopalliance-repackaged:jar:2.5.0-b32:compile\n[INFO]    org.glassfish.hk2:hk2-api:jar:2.5.0-b32:compile\n[INFO]    org.glassfish.hk2:hk2-locator:jar:2.5.0-b32:compile\n[INFO]    org.glassfish.hk2:hk2-utils:jar:2.5.0-b32:compile\n[INFO]    org.glassfish.hk2:osgi-resource-locator:jar:1.0.1:compile\n[INFO]    org.glassfish.jersey.bundles.repackaged:jersey-guava:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.containers:jersey-container-jetty-http:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.containers:jersey-container-servlet-core:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.containers:jersey-container-servlet:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.core:jersey-client:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.core:jersey-common:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.core:jersey-server:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.media:jersey-media-jaxb:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.test-framework:jersey-test-framework-core:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:jar:2.25.1:compile\n[INFO]    org.hamcrest:hamcrest-core:jar:1.3:test\n[INFO]    org.hamcrest:hamcrest-library:jar:1.3:test\n[INFO]    org.javassist:javassist:jar:3.21.0-GA:compile\n[INFO]    org.jooq:jooq:jar:3.9.3:compile\n[INFO]    org.json:json:jar:20160810:compile\n[INFO]    org.mockito:mockito-core:jar:1.10.19:test\n[INFO]    org.objenesis:objenesis:jar:2.4:test\n[INFO]    org.powermock:powermock-api-mockito-common:jar:1.6.6:test\n[INFO]    org.powermock:powermock-api-mockito:jar:1.6.6:test\n[INFO]    org.powermock:powermock-api-support:jar:1.6.6:test\n[INFO]    org.powermock:powermock-core:jar:1.6.6:test\n[INFO]    org.powermock:powermock-module-junit4-common:jar:1.6.6:test\n[INFO]    org.powermock:powermock-module-junit4:jar:1.6.6:test\n[INFO]    org.powermock:powermock-reflect:jar:1.6.6:test\n[INFO]    org.secnod.shiro:shiro-jersey:jar:0.2.0:compile\n[INFO]    org.slf4j:jul-to-slf4j:jar:1.7.25:compile\n[INFO]    org.slf4j:slf4j-api:jar:1.7.25:compile\n[INFO]    org.springframework:spring-core:jar:4.3.6.RELEASE:test\n[INFO]    org.threeten:threetenbp:jar:1.3.3:compile\n[INFO]    org.yaml:snakeyaml:jar:1.18:compile\n[INFO]    p6spy:p6spy:jar:3.3.0:compile\n[INFO]    redis.clients:jedis:jar:2.9.0:compile\nplus reflections when I add that.. I do believe I'm using the latest snapshot. mvn dependency:tree gives me the following (after removing one internal library and sorting):\n[INFO]    ch.vorburger.mariaDB4j:mariaDB4j-core:jar:2.2.3-1:test\n[INFO]    ch.vorburger.mariaDB4j:mariaDB4j-db-linux64:jar:5.7.19:test\n[INFO]    ch.vorburger.mariaDB4j:mariaDB4j-db-mac64:jar:5.7.19:test\n[INFO]    ch.vorburger.mariaDB4j:mariaDB4j-db-win32:jar:10.2.7:test\n[INFO]    com.fasterxml.jackson.core:jackson-annotations:jar:2.8.10:compile\n[INFO]    com.fasterxml.jackson.core:jackson-core:jar:2.8.10:compile\n[INFO]    com.fasterxml.jackson.core:jackson-databind:jar:2.8.10:compile\n[INFO]    com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:jar:2.9.1:compile\n[INFO]    com.github.kstyrc:embedded-redis:jar:0.6:test\n[INFO]    com.github.stephenc.findbugs:findbugs-annotations:jar:1.3.9-1:compile\n[INFO]    com.google.api:api-common:jar:1.1.0:compile\n[INFO]    com.google.api-client:google-api-client:jar:1.23.0:compile\n[INFO]    com.google.api:gax-grpc:jar:0.26.0:compile\n[INFO]    com.google.api:gax:jar:1.9.0:compile\n[INFO]    com.google.api.grpc:grpc-google-cloud-pubsub-v1:jar:0.1.21:compile\n[INFO]    com.google.api.grpc:grpc-google-common-protos:jar:0.1.9:compile\n[INFO]    com.google.api.grpc:proto-google-cloud-pubsub-v1:jar:0.1.21:compile\n[INFO]    com.google.api.grpc:proto-google-common-protos:jar:0.1.21:compile\n[INFO]    com.google.api.grpc:proto-google-iam-v1:jar:0.1.21:compile\n[INFO]    com.google.apis:google-api-services-storage:jar:v1-rev115-1.23.0:compile\n[INFO]    com.google.auth:google-auth-library-appengine:jar:0.7.0:compile\n[INFO]    com.google.auth:google-auth-library-credentials:jar:0.8.0:compile\n[INFO]    com.google.auth:google-auth-library-oauth2-http:jar:0.8.0:compile\n[INFO]    com.google.auto.value:auto-value:jar:1.2:compile\n[INFO]    com.google.cloud.bigtable:bigtable-client-core:jar:1.0.0-pre4:compile\n[INFO]    com.google.cloud.bigtable:bigtable-hbase-1.x:jar:1.0.0-pre4:compile\n[INFO]    com.google.cloud.bigtable:bigtable-hbase:jar:1.0.0-pre4:compile\n[INFO]    com.google.cloud.bigtable:bigtable-protos:jar:1.0.0-pre4:compile\n[INFO]    com.google.cloud:google-cloud-core-grpc:jar:1.8.0:compile\n[INFO]    com.google.cloud:google-cloud-core-http:jar:1.8.0:compile\n[INFO]    com.google.cloud:google-cloud-core:jar:1.8.0:compile\n[INFO]    com.google.cloud:google-cloud-pubsub:jar:0.26.0-beta:compile\n[INFO]    com.google.cloud:google-cloud-storage:jar:1.8.0:compile\n[INFO]    com.google.code.findbugs:jsr305:jar:3.0.2:compile\n[INFO]    com.google.code.gson:gson:jar:2.7:compile\n[INFO]    com.google.errorprone:error_prone_annotations:jar:2.0.19:compile\n[INFO]    com.google.guava:guava:jar:21.0:compile\n[INFO]    com.google.http-client:google-http-client-appengine:jar:1.22.0:compile\n[INFO]    com.google.http-client:google-http-client-jackson2:jar:1.23.0:compile\n[INFO]    com.google.http-client:google-http-client-jackson:jar:1.22.0:compile\n[INFO]    com.google.http-client:google-http-client:jar:1.23.0:compile\n[INFO]    com.google.instrumentation:instrumentation-api:jar:0.4.3:compile\n[INFO]    com.google.oauth-client:google-oauth-client:jar:1.23.0:compile\n[INFO]    com.google.protobuf:protobuf-java:jar:3.4.0:compile\n[INFO]    com.google.protobuf:protobuf-java-util:jar:3.4.0:compile\n[INFO]    commons-beanutils:commons-beanutils:jar:1.9.3:compile\n[INFO]    commons-cli:commons-cli:jar:1.4:compile\n[INFO]    commons-codec:commons-codec:jar:1.9:compile\n[INFO]    commons-collections:commons-collections:jar:3.2.2:compile\n[INFO]    commons-io:commons-io:jar:2.5:compile\n[INFO]    commons-logging:commons-logging:jar:1.2:compile\n[INFO]    com.opencsv:opencsv:jar:3.3:compile\n[INFO]    com.sendgrid:java-http-client:jar:4.1.0:compile\n[INFO]    com.sendgrid:sendgrid-java:jar:4.1.0:compile\n[INFO]    com.squareup.okhttp3:okhttp:jar:3.8.1:compile\n[INFO]    com.squareup.okio:okio:jar:1.13.0:compile\n[INFO]    io.dropwizard.metrics:metrics-core:jar:3.1.2:compile\n[INFO]    io.grpc:grpc-auth:jar:1.7.0:compile\n[INFO]    io.grpc:grpc-context:jar:1.7.0:compile\n[INFO]    io.grpc:grpc-core:jar:1.7.0:compile\n[INFO]    io.grpc:grpc-netty:jar:1.7.0:compile\n[INFO]    io.grpc:grpc-protobuf:jar:1.7.0:compile\n[INFO]    io.grpc:grpc-protobuf-lite:jar:1.7.0:compile\n[INFO]    io.grpc:grpc-stub:jar:1.7.0:compile\n[INFO]    io.netty:netty-buffer:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-codec-http2:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-codec-http:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-codec:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-codec-socks:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-common:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-handler:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-handler-proxy:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-resolver:jar:4.1.16.Final:compile\n[INFO]    io.netty:netty-tcnative-boringssl-static:jar:2.0.6.Final:compile\n[INFO]    io.netty:netty-transport:jar:4.1.16.Final:compile\n[INFO]    io.opencensus:opencensus-api:jar:0.7.0:compile\n[INFO]    io.opencensus:opencensus-contrib-grpc-util:jar:0.7.0:compile\n[INFO]    io.prometheus:simpleclient_common:jar:0.0.26:compile\n[INFO]    io.prometheus:simpleclient_hotspot:jar:0.0.26:compile\n[INFO]    io.prometheus:simpleclient:jar:0.0.26:compile\n[INFO]    io.prometheus:simpleclient_servlet:jar:0.0.26:compile\n[INFO]    io.swagger.core.v3:swagger-annotations:jar:2.0.0-SNAPSHOT:compile\n[INFO]    io.swagger.core.v3:swagger-core:jar:2.0.0-SNAPSHOT:compile\n[INFO]    io.swagger.core.v3:swagger-integration:jar:2.0.0-SNAPSHOT:compile\n[INFO]    io.swagger.core.v3:swagger-jaxrs2:jar:2.0.0-SNAPSHOT:compile\n[INFO]    io.swagger.core.v3:swagger-models:jar:2.0.0-SNAPSHOT:compile\n[INFO]    io.zipkin.brave:brave-instrumentation-http:jar:4.7.1:compile\n[INFO]    io.zipkin.brave:brave-instrumentation-jaxrs2:jar:4.7.1:compile\n[INFO]    io.zipkin.brave:brave-instrumentation-p6spy:jar:4.7.1:compile\n[INFO]    io.zipkin.brave:brave:jar:4.7.1:compile\n[INFO]    io.zipkin.java:zipkin:jar:2.0.0:compile\n[INFO]    io.zipkin.reporter:zipkin-reporter:jar:1.1.0:compile\n[INFO]    io.zipkin.reporter:zipkin-sender-okhttp3:jar:1.1.0:compile\n[INFO]    io.zipkin.zipkin2:zipkin:jar:2.0.0:compile\n[INFO]    javax.annotation:javax.annotation-api:jar:1.2:compile\n[INFO]    javax.inject:javax.inject:jar:1:compile\n[INFO]    javax.servlet:javax.servlet-api:jar:3.1.0:compile\n[INFO]    javax.validation:validation-api:jar:1.1.0.Final:compile\n[INFO]    javax.ws.rs:javax.ws.rs-api:jar:2.0.1:compile\n[INFO]    joda-time:joda-time:jar:2.9.9:compile\n[INFO]    junit:junit:jar:4.12:test\n[INFO]    mysql:mysql-connector-java:jar:5.1.6:compile\n[INFO]    one.util:streamex:jar:0.6.5:compile\n[INFO]    org.apache.commons:commons-collections4:jar:4.1:test\n[INFO]    org.apache.commons:commons-dbcp2:jar:2.1.1:compile\n[INFO]    org.apache.commons:commons-exec:jar:1.3:test\n[INFO]    org.apache.commons:commons-lang3:jar:3.5:compile\n[INFO]    org.apache.commons:commons-pool2:jar:2.4.2:compile\n[INFO]    org.apache.hbase:hbase-shaded-client:jar:1.3.1:compile\n[INFO]    org.apache.htrace:htrace-core:jar:3.1.0-incubating:compile\n[INFO]    org.apache.httpcomponents:httpclient:jar:4.5.2:compile\n[INFO]    org.apache.httpcomponents:httpcore:jar:4.4.4:compile\n[INFO]    org.apache.logging.log4j:log4j-api:jar:2.8.2:compile\n[INFO]    org.apache.logging.log4j:log4j-core:jar:2.8.2:compile\n[INFO]    org.apache.logging.log4j:log4j-slf4j-impl:jar:2.8.2:compile\n[INFO]    org.apache.logging.log4j:log4j-web:jar:2.8.2:compile\n[INFO]    org.apache.shiro:shiro-core:jar:1.3.2:compile\n[INFO]    org.apache.shiro:shiro-web:jar:1.3.2:compile\n[INFO]    org.codehaus.jackson:jackson-core-asl:jar:1.9.11:compile\n[INFO]    org.eclipse.jetty:jetty-continuation:jar:9.2.14.v20151106:compile\n[INFO]    org.eclipse.jetty:jetty-http:jar:9.2.21.v20170120:compile\n[INFO]    org.eclipse.jetty:jetty-io:jar:9.2.21.v20170120:compile\n[INFO]    org.eclipse.jetty:jetty-security:jar:9.2.21.v20170120:compile\n[INFO]    org.eclipse.jetty:jetty-server:jar:9.2.21.v20170120:compile\n[INFO]    org.eclipse.jetty:jetty-servlet:jar:9.2.21.v20170120:compile\n[INFO]    org.eclipse.jetty:jetty-util:jar:9.2.21.v20170120:compile\n[INFO]    org.glassfish.hk2.external:aopalliance-repackaged:jar:2.5.0-b32:compile\n[INFO]    org.glassfish.hk2:hk2-api:jar:2.5.0-b32:compile\n[INFO]    org.glassfish.hk2:hk2-locator:jar:2.5.0-b32:compile\n[INFO]    org.glassfish.hk2:hk2-utils:jar:2.5.0-b32:compile\n[INFO]    org.glassfish.hk2:osgi-resource-locator:jar:1.0.1:compile\n[INFO]    org.glassfish.jersey.bundles.repackaged:jersey-guava:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.containers:jersey-container-jetty-http:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.containers:jersey-container-servlet-core:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.containers:jersey-container-servlet:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.core:jersey-client:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.core:jersey-common:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.core:jersey-server:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.media:jersey-media-jaxb:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.test-framework:jersey-test-framework-core:jar:2.25.1:compile\n[INFO]    org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:jar:2.25.1:compile\n[INFO]    org.hamcrest:hamcrest-core:jar:1.3:test\n[INFO]    org.hamcrest:hamcrest-library:jar:1.3:test\n[INFO]    org.javassist:javassist:jar:3.21.0-GA:compile\n[INFO]    org.jooq:jooq:jar:3.9.3:compile\n[INFO]    org.json:json:jar:20160810:compile\n[INFO]    org.mockito:mockito-core:jar:1.10.19:test\n[INFO]    org.objenesis:objenesis:jar:2.4:test\n[INFO]    org.powermock:powermock-api-mockito-common:jar:1.6.6:test\n[INFO]    org.powermock:powermock-api-mockito:jar:1.6.6:test\n[INFO]    org.powermock:powermock-api-support:jar:1.6.6:test\n[INFO]    org.powermock:powermock-core:jar:1.6.6:test\n[INFO]    org.powermock:powermock-module-junit4-common:jar:1.6.6:test\n[INFO]    org.powermock:powermock-module-junit4:jar:1.6.6:test\n[INFO]    org.powermock:powermock-reflect:jar:1.6.6:test\n[INFO]    org.secnod.shiro:shiro-jersey:jar:0.2.0:compile\n[INFO]    org.slf4j:jul-to-slf4j:jar:1.7.25:compile\n[INFO]    org.slf4j:slf4j-api:jar:1.7.25:compile\n[INFO]    org.springframework:spring-core:jar:4.3.6.RELEASE:test\n[INFO]    org.threeten:threetenbp:jar:1.3.3:compile\n[INFO]    org.yaml:snakeyaml:jar:1.18:compile\n[INFO]    p6spy:p6spy:jar:3.3.0:compile\n[INFO]    redis.clients:jedis:jar:2.9.0:compile\nplus reflections when I add that.. We have a <scope>test</scope> dependency on org.reflections, which I think might stop swaggers import of the library. This is part of the mvn dependency:tree -Dverbose output:\n366 [INFO] +- io.swagger.core.v3:swagger-jaxrs2:jar:2.0.0-SNAPSHOT:compile\n367 [INFO] |  +- com.fasterxml.jackson.core:jackson-databind:jar:2.9.1:compile\n368 [INFO] |  |  +- (com.fasterxml.jackson.core:jackson-annotations:jar:2.9.1:compile - version managed from 2.9.0; omitted for duplicate)\n369 [INFO] |  |  \\- (com.fasterxml.jackson.core:jackson-core:jar:2.9.1:compile - version managed from 2.1.3; omitted for duplicate)\n370 [INFO] |  +- (org.reflections:reflections:jar:0.9.11:compile - omitted for duplicate)\n371 [INFO] |  +- org.javassist:javassist:jar:3.21.0-GA:compile\n372 [INFO] |  +- io.swagger.core.v3:swagger-models:jar:2.0.0-SNAPSHOT:compile\n373 [INFO] |  |  \\- (com.fasterxml.jackson.core:jackson-annotations:jar:2.9.1:compile - version managed from 2.9.0; omitted for duplicate)\n374 [INFO] |  +- io.swagger.core.v3:swagger-annotations:jar:2.0.0-SNAPSHOT:compile\n375 [INFO] |  \\- io.swagger.core.v3:swagger-integration:jar:2.0.0-SNAPSHOT:compile\n376 [INFO] |     +- (org.reflections:reflections:jar:0.9.11:compile - omitted for duplicate)\n--\n--\n[INFO] +- org.reflections:reflections:jar:0.9.11:test (scope not updated to compile)\n[INFO] |  +- (com.google.guava:guava:jar:23.0:test - version managed from 20.0; omitted for duplicate)\n[INFO] |  \\- (org.javassist:javassist:jar:3.21.0-GA:test - version managed from 3.20.0-GA; omitted for duplicate)\nDo you think that's what's wrong? That our test scoped dependency on reflections stops swaggers dependency?. We have a <scope>test</scope> dependency on org.reflections, which I think might stop swaggers import of the library. This is part of the mvn dependency:tree -Dverbose output:\n366 [INFO] +- io.swagger.core.v3:swagger-jaxrs2:jar:2.0.0-SNAPSHOT:compile\n367 [INFO] |  +- com.fasterxml.jackson.core:jackson-databind:jar:2.9.1:compile\n368 [INFO] |  |  +- (com.fasterxml.jackson.core:jackson-annotations:jar:2.9.1:compile - version managed from 2.9.0; omitted for duplicate)\n369 [INFO] |  |  \\- (com.fasterxml.jackson.core:jackson-core:jar:2.9.1:compile - version managed from 2.1.3; omitted for duplicate)\n370 [INFO] |  +- (org.reflections:reflections:jar:0.9.11:compile - omitted for duplicate)\n371 [INFO] |  +- org.javassist:javassist:jar:3.21.0-GA:compile\n372 [INFO] |  +- io.swagger.core.v3:swagger-models:jar:2.0.0-SNAPSHOT:compile\n373 [INFO] |  |  \\- (com.fasterxml.jackson.core:jackson-annotations:jar:2.9.1:compile - version managed from 2.9.0; omitted for duplicate)\n374 [INFO] |  +- io.swagger.core.v3:swagger-annotations:jar:2.0.0-SNAPSHOT:compile\n375 [INFO] |  \\- io.swagger.core.v3:swagger-integration:jar:2.0.0-SNAPSHOT:compile\n376 [INFO] |     +- (org.reflections:reflections:jar:0.9.11:compile - omitted for duplicate)\n--\n--\n[INFO] +- org.reflections:reflections:jar:0.9.11:test (scope not updated to compile)\n[INFO] |  +- (com.google.guava:guava:jar:23.0:test - version managed from 20.0; omitted for duplicate)\n[INFO] |  \\- (org.javassist:javassist:jar:3.21.0-GA:test - version managed from 3.20.0-GA; omitted for duplicate)\nDo you think that's what's wrong? That our test scoped dependency on reflections stops swaggers dependency?. Thank you! :). Thank you! :). Thank you again! :) Confirmed working.. Thank you again! :) Confirmed working.. Thank you again very much! :). Thank you for the suggestion! I see that my resource classes aren't found by the call to ctx.read(). Do you know why that could be? At first I thought it was because I had the code you posted before I eventually started the server (org.eclipse.jetty.server.start()), but I have the same problem when I'm sure to have your code after the server has started. Do you have any pointers on how I can make sure to do this in a way that'll include my resource classes?. I didn't specify the resources actually, because calling /openapi.json found them automatically. I thought then that they should be found automatically when I called ctx.read() manually. But explicitly adding the package worked :) Thank you again!. Thank you!:). Thank you!. Thank you!. Fantastic! Thank you :). Thank you! How will it be supported? Say I have this resource method:\n@POST\n@Consumes(MediaType.MULTIPART_FORM_DATA)\npublic Response postCsv(\n  @FormDataParam(\"file\")\n  @RequestBody(description = \"The CSV file to upload.\", required = true)\n    InputStream file\n  @FormDataParam(\"filename\")\n  @Parameter(description = \"The name of the file.\", required = true)\n    String filename;\n) {\n  return emptyResponse();\n}\nWould that (eventually) work? Or is @Parameter the right annotation to use for each thing?. This seems to be working with the latest snapshot version.. Is it possible to get this working when I have two separate resources on the same path, but that produces different mediatypes?\nI have both of these:\n```\n  @GET\n  @Operation(\n      operationId = \"getStuff\",\n      summary = \"Gets stuff.\",\n      responses = {\n          @ApiResponse(\n              responseCode = \"200\",\n              description = \"Some stuff.\",\n              content = @Content(\n                  mediaType = \"application/json\",\n                  schema = @Schema(implementation = MyJsonResponse.class)\n              )\n          )\n      }\n  )\n  @Path(\"/{param1}/{param2}\")\n  @Produces(\"application/json\")\n  public Response getStuffJson(\n      @PathParam(\"param1\")\n      @Parameter(description = \"param1.\")\n          String param1,\n      @PathParam(\"param2\")\n      @Parameter(description = \"param2.\")\n          String param2\n  ) {\n    ...\n  }\n@GET\n  @Operation(\n      operationId = \"getStuff\",\n      summary = \"Gets stuff.\",\n      responses = {\n          @ApiResponse(\n              responseCode = \"200\",\n              description = \"Some stuff.\",\n              content = @Content(\n                  mediaType = \"text/csv\",\n                  schema = @Schema(implementation = MyCsvResponse.class)\n              )\n          )\n      }\n  )\n  @Path(\"/{param1}/{param2}\")\n  @Produces(\"text/csv\")\n  public Response getStuffCsv(\n      @PathParam(\"param1\")\n      @Parameter(description = \"param1.\")\n          String param1,\n      @PathParam(\"param2\")\n      @Parameter(description = \"param2.\")\n          String param2\n  ) {\n    ...\n  }\n```\n  But only one of them is appearing in openapi.json. I'm using the latest snapshot version of swagger.core.v3.. Thank you. (Sorry for responding to this so slowly.). ",
    "cthiebault": "And for those using RestEasy with Spring:\nhttp://surunairdejava.com/2013/11/25/jetty-resteasy-swagger-spring\nSorry it's in french but there's lots of code...\n. And for those using RestEasy with Spring:\nhttp://surunairdejava.com/2013/11/25/jetty-resteasy-swagger-spring\nSorry it's in french but there's lots of code...\n. ",
    "mkurian": "I tried using this example: https://github.com/wordnik/swagger-core/blob/master/samples/java-resteasy/src/main/webapp/WEB-INF/web.xml\nBut still run into issues like resource not found. \nIn my case, there are multiple rest resources and providers. So I just appended the swagger dependencies to those. I do see \"ResteasyDeployment Adding singleton resource ... from Application javax.ws.rs.core.Application\" in the logs. But when I access the url for api-docs, get the 'Could not find resource ' exception.\nHere are the snippets from my web.xml:\n\nresteasy.resources\ncom.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON         \n\n\nresteasy.providers\ncom.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider,com.wordnik.swagger.jaxrs.listing.ResourceListingProvider\n\n\njavax.ws.rs.core.Application\ncom.xx.yy.MyApplication\n\n\nresteasy.servlet.mapping.prefix\n/api-docs\n\n\nDefaultJaxrsConfig\ncom.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig\n\napi.version\nv1\n\n<load-on-startup>1</load-on-startup>\n\nOne thing I clearly see missing from the Jersey example is the following. What is the resteasy equivalent of this? How do I convey to resteasy to scan particular set of resources(not all of them) for the purpose of generating documentation and how do I access the documentation(url) in this particular example?\n<filter>\n    <filter-name>jersey</filter-name>\n    <filter-class>com.sun.jersey.spi.container.servlet.ServletContainer</filter-class>\n<init-param>\n    <param-name>com.sun.jersey.config.property.packages</param-name>\n    <param-value>com.xx.yy;com.wordnik.swagger.jersey.listing</param-value>\n</init-param>\n</filter>\n<filter-mapping>\n    <filter-name>jersey</filter-name>\n    <url-pattern>/xx/*</url-pattern>\n    <url-pattern>/api-docs</url-pattern>\n</filter-mapping>\nAny help is greatly appreciated.\n. ",
    "pthorson": "Updated link https://github.com/swagger-api/swagger-samples/tree/master/java/java-resteasy. ",
    "JanxSpirit": "Sounds like a great idea.\n. ",
    "zeke": "+1\n. ",
    "davidwindell": "+1 saves on routing and makes caching easier\n. ",
    "andreineculau": "I have replied by email, but seems like my comment didn't reach github.\nhmm, if I look at https://github.com/wordnik/swagger-core/wiki/datatypes then:\n1a. type is defined in JSON-schema as \"string\", not \"String\"\n1b. and type has no definition in the JSON-schema for Byte, Int, Long, Double, nor Date\nsee http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1\n1. JSON-schema defines no allowableValues. Of course validation won't fail due to JSON's mustIgnore rule, but still...\nI'm not trying to be picky here, but why don't you create a Swagger extended JSON-schema that defines exactly how you intend things to work (like overload type or define allowableValues)?\nIt would make it easier for devs to take a model/API described by other means to be translated to Swagger and validate those instances automatically.\n. ",
    "seantbrady": "That worked.  Thanks!\nOn Apr 27, 2012, at 2:31 PM, fehguy wrote:\n\nCan you make sure you have the following in your Build.scala:\nval appDependencies: Seq[sbt.ModuleID] = Seq(\n   \"org.codehaus.jackson\" % \"jackson-jaxrs\" % \"1.9.5\",\n   \"org.codehaus.jackson\" % \"jackson-xc\" % \"1.9.5\",\n   \"org.codehaus.jackson\" % \"jackson-mapper-asl\" % \"1.9.5\",\n   \"org.codehaus.jackson\" % \"jackson-core-asl\" % \"1.9.5\",\n   \"swagger-play2\" %% \"swagger-play2\" % \"1.1-SNAPSHOT\")\nThat error is a missing jackson lib\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/wordnik/swagger-core/issues/26#issuecomment-5387611\n. Brute forcing it works for now:\n\nI added a reset() method to ApiHelpInventory and then call it from Global.onStart(...)\nApiHelpInventory\n  def reset = {\n      controllerClasses.clear\n      resourceMap.clear\n  }\nGlobal\n  onstart(...) {\n      ApiHelpInventory.reset();\n  }\n. +1\n. ",
    "pilhuhn": "My reasoning is that in our project (RHQ ; rhq-project.org) we can't offer the cool interactive swagger functionality, but still need a way to document the api. So the first part of this is the split-off of the annotations in GH-27 to not pull in 3rd party libraries, that we don't want.\nCurrently I do not see a unified way of creating Jax-RS documentation out there. So instead of RHQ having their own documentation annotations (and thus fragment \"the market\"), I want to use Swagger ones. This is the GH-27 part\nNow GH-28 mainly iterates over the annotations in a jax-rs project and takes the Swagger annotations + the Jax-Rs ones and creates an easily structured xml output as intermediate format, which can then be transformed into various targets. I don't think a Schema is necessary, as the format is pretty easy. GH-28 is not meant to interactively return XML to users, but to create a static intermediate XML format which then can be transformed into html, docbook etc.\nSo GH-27 is something that can stand without GH-28 and people can use the swagger annotations for their purpose without fragmenting the market\nGH-28 is an example annotation processor to create standalone docs; if you don't like it I have no issue to just keep that in my own tree, but I really ask you to push GH-27.\n. Hey @fehguy could you please push GH-27 and make it available in a maven artifact? This is independent from GH-28.\nOr tell me that you will not accept it, so that I can work on alternatives for my needs\nThank you\n  Heiko\n. Hi @fehguy Do you think you will find some time for this soonish? Thanks, Heiko\n. Hi @fehguy \nCool man, thanks.\nYou could have told me that I need to fix that first :-) \nAny idea when you will create artifacts from that that are pushed to maven central?\nThanks, Heiko\n. I close this - first, the implementation is not good enough: com.sun.mirror* classes are used as I thought javax.lang.mirror (or what it's called) would be in java 7 only, but in fact is in java 6 already.\nAnd then I can see how this may be too specific.\n. I think allowing them on type level is a good idea - method level overrides must still be possible.\nWith the approach of @ApiError(code=404, throwables={NotFoundException,FooBarException...}  one may even have a flag \"global\" to denote this as applicable to all REST-classes. This would also go in line with JAX-RS javax.ws.rs.ext.ExceptionMapper, which also maps throwables to response codes.\n. Not really (as before) I want to use the annotations in the annotations artifact for standalone documentation generation in a JAX-RS use case. I am using a java annotation processor for this to output static documentation for docbook.\nNow for the parameter classes, it would be nice to annotate them with something like @ApiClass to denote that they should be included as well.\nThis is a bit similar to the @Api annotation - sort of a counterpart for the data classes.\nI can open a pull-request for the swagger-annotations module.\n. I will look into this in the next days\n. @singalen I think you could use @ApiProperty for the fields (at least this is what I do). It is rather the type level thing that I am missing. \nBut then I am not opposed to also introduce something on field level.\n. ",
    "martypitt": "Indeed, this is exactly how the SpringMVC class handles it -- errors are parsed in order of Swaggers @ApiError annotation first, then our custom @ApiError(class=...) annotation, and finally the throwable. \nFirst match wins.\nHere's the relevant source\nLet me know if I can help with this in any way.\n. ",
    "brainwatch": "Swagger-play2-util got published with no issues by adding Health library from wordnik-oss. Followed the documentation for routes and build file changes and the UI came out smooth. Ping service works with \"OK\" message, but not reflected in the swagger UI. Health report unfortunately does not work. Find the stacktrace.\nplay.core.ActionInvoker$$anonfun$receive$1$$anon$1: Execution exception [[Illega\nlAccessError: sun/management/ManagementFactory]]\n        at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:134) [\nplay_2.9.1.jar:2.0.1]\n        at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:115) [\nplay_2.9.1.jar:2.0.1]\n        at akka.actor.Actor$class.apply(Actor.scala:311) [akka-actor.jar:2.0.1]\n        at play.core.ActionInvoker.apply(Invoker.scala:113) [play_2.9.1.jar:2.0.\n1]\n        at akka.actor.ActorCell.invoke(ActorCell.scala:619) [akka-actor.jar:2.0.\n1]\n        at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:196) [akka-actor.j\nar:2.0.1]\nCaused by: java.lang.IllegalAccessError: sun/management/ManagementFactory\n        at com.wordnik.util.perf.HealthSnapshot$.get(Health.scala:69) ~[common-u\ntils_2.9.1-1.1-SNAPSHOT.jar:1.1-SNAPSHOT]\n        at controllers.HealthController$$anonfun$getHealth$1.apply(HealthControl\nler.scala:39) ~[swagger-play2-utils_2.9.1.jar:2.0.1]\n        at controllers.HealthController$$anonfun$getHealth$1.apply(HealthControl\nler.scala:37) ~[swagger-play2-utils_2.9.1.jar:2.0.1]\n        at play.api.mvc.Action$$anon$1.apply(Action.scala:170) ~[play_2.9.1.jar:\n2.0.1]\n        at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.s\ncala:126) ~[play_2.9.1.jar:2.0.1]\n        at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.s\ncala:126) ~[play_2.9.1.jar:2.0.1]\n. Tried accessing ThreadMXBean in my code. It works fine.\nAnd more trace issue regarding Health. But its from different library. Not sure about the referencing. \n[error] c.w.s.c.u.TypeUtil$ - Unable to load class com.wordnik.swagger.discover.Health\n[error] c.w.s.p.HelpApi - Unable to resolve class com.wordnik.swagger.discover.Health\n. I tried a clean setup - new play 2.0.1, swagger-core-91670c5. \nFollowed you steps.\n- publish modules/swagger-play2-utils locally via \"play publish-local\" in that folder\n- publish modules/swagger-play2 locally via \"play publish-local\"\n- run the sample app with \"play clean\" then \"play run\"\nSince swagger-play2-utils have swagger-play2 dependency, there was an error. so changed the order.\n- publish modules/swagger-play2 locally via \"play publish-local\"\n- publish modules/swagger-play2-utils locally via \"play publish-local\" in that folder\n- run the sample app with \"play clean\" then \"play run\"\nSetup and publishing was smooth. \nThe response for resources.json and pet.json reflects the same as referenced in your message.\nBut, the error still persists.\n[info] play - Listening for HTTP on port 9000...\n(Server started, use Ctrl+D to stop and go back to the console...)\n[info] Compiling 2 Scala sources and 18 Java sources to D:\\eWorkspace\\appify\\mod\nules\\wordnik-swagger-core-91670c5\\samples\\java-play2\\target\\scala-2.9.1\\classes.\n..\n[warn] Note: D:\\eWorkspace\\appify\\modules\\wordnik-swagger-core-91670c5\\samples\\j\nava-play2\\app\\controllers\\UserApiController.java uses unchecked or unsafe operat\nions.\n[warn] Note: Recompile with -Xlint:unchecked for details.\n[debug] application - SwaggerPlugin.onStart\n[info] play - Application started (Dev)\n[error] application - Unable to resolve apiFilter class security.AuthorizationFi\nlter\n[debug] application - Found Resource /user @ controllers.UserApiController\n[debug] application - Found Resource /pet @ controllers.PetApiController\n[debug] application - Found Resource /store @ controllers.StoreApiController\n[debug] application - Loading resource /pet from class controllers.PetApiControl\nler @ /pet\n[error] c.w.s.p.HelpApi - Unable to resolve apiFilter class security.Authorizati\nonFilter\n[error] application - Cannot determine Path. Nothing defined in play routes file\n for api method public static play.mvc.Result controllers.PetApiController.addPe\nt()\n[debug] application - /pet\n[error] application - Could not find route controllers.PetApiController.addPet\n[error] application - Cannot determine Path. Nothing defined in play routes file\n for api method public static play.mvc.Result controllers.PetApiController.updat\nePet()\n[debug] application - /pet\n[error] application - Could not find route controllers.PetApiController.updatePe\nt\n[error] application - Cannot determine Path. Nothing defined in play routes file\n for api method public static play.mvc.Result controllers.PetApiController.getPe\nt(java.lang.String)\n[debug] application - /pet\n[error] application - Could not find route controllers.PetApiController.getPet\n[error] application - Cannot determine Path. Nothing defined in play routes file\n for api method public static play.mvc.Result controllers.PetApiController.findP\netsByTags(java.lang.String)\n[debug] application - /pet\n[error] application - Could not find route controllers.PetApiController.findPets\nByTags\n[error] application - Cannot determine Path. Nothing defined in play routes file\n for api method public static play.mvc.Result controllers.PetApiController.findP\netsByStatus(java.lang.String)\n[debug] application - /pet\n[error] application - Could not find route controllers.PetApiController.findPets\nByStatus\n[error] c.w.s.c.u.TypeUtil$ - Unable to load class com.wordnik.swagger.sample.mo\ndel.Pet\n[error] c.w.s.p.HelpApi - Unable to resolve class com.wordnik.swagger.sample.mod\nel.Pet\n. Hi\nAny update on this issue. I'm still having this error, which i do not see in the scala version sample. Kindly update.\nEDIT : More information on my Environment : Windows 7 and Jdk 1.7.0_03 / And also on Linux with jdk 1.7 \n. Hi\nI tried all scenario\n- with jdk 1.7 and latest java-play2\n- with jdk 1.6 and latest java-play2\nbut still the error persists. One thing I notice is that the error persists, but its not following the same sequence. I'm attaching the the trace again fyr. And once the first time url is called, it hangs and no more calls are services by the server.\nI would appreciate your help in resolving this.\nEDIT : Tried scala version and its just smooth and also reflected in the ui perfectly.\nTrace log :\nD:\\eWorkspace\\appify\\modules\\wordnik-swagger-core-63ccf9d\\samples\\java-play2>pla\ny run\n[info] Loading project definition from D:\\eWorkspace\\appify\\modules\\wordnik-swag\nger-core-63ccf9d\\samples\\java-play2\\project\n[info] Set current project to petstore (in build file:/D:/eWorkspace/appify/modu\nles/wordnik-swagger-core-63ccf9d/samples/java-play2/)\n[info] Updating {file:/D:/eWorkspace/appify/modules/wordnik-swagger-core-63ccf9d\n/samples/java-play2/}petstore...\n[info] Resolving org.hibernate.javax.persistence#hibernate-jpa-2.0-api;1.0.1.Fin\n[info] Done updating.\n--- (Running the application from SBT, auto-reloading is enabled) ---\nSLF4J: Class path contains multiple SLF4J bindings.\nSLF4J: Found binding in [jar:file:/D:/eWorkspace/appify/platform/play-2.0.1/fram\nework/../repository/local/ch.qos.logback/logback-classic/1.0.0/jars/logback-clas\nsic.jar!/org/slf4j/impl/StaticLoggerBinder.class]\nSLF4J: Found binding in [jar:file:/D:/eWorkspace/appify/platform/play-2.0.1/fram\nework/../repository/cache/org.slf4j/slf4j-log4j12/jars/slf4j-log4j12-1.6.3.jar!/\norg/slf4j/impl/StaticLoggerBinder.class]\nSLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.\n[info] play - Listening for HTTP on port 9000...\n(Server started, use Ctrl+D to stop and go back to the console...)\n[info] Compiling 2 Scala sources and 18 Java sources to D:\\eWorkspace\\appify\\mod\nules\\wordnik-swagger-core-63ccf9d\\samples\\java-play2\\target\\scala-2.9.1\\classes.\n..\n[warn] Note: D:\\eWorkspace\\appify\\modules\\wordnik-swagger-core-63ccf9d\\samples\\j\nava-play2\\app\\controllers\\UserApiController.java uses unchecked or unsafe operat\nions.\n[warn] Note: Recompile with -Xlint:unchecked for details.\n[debug] application - SwaggerPlugin.onStart\n[info] play - Application started (Dev)\n[debug] application - Found Resource /user @ controllers.UserApiController\n[debug] application - Found Resource /pet @ controllers.PetApiController\n[debug] application - Found Resource /store @ controllers.StoreApiController\n[debug] application - Loading resource /user from class controllers.UserApiContr\noller @ /user\n[debug] application - Loading resource /pet from class controllers.PetApiControl\nler @ /pet\n[debug] application - Loading resource /store from class controllers.StoreApiCon\ntroller @ /store\n[error] application - Cannot determine Path. Nothing defined in play routes file\n for api method public static play.mvc.Result controllers.PetApiController.updat\nePet()\n[error] application - Cannot determine Path. Nothing defined in play routes file\n for api method public static play.mvc.Result controllers.UserApiController.crea\nteUser()\n[error] application - Cannot determine Path. Nothing defined in play routes file\n for api method public static play.mvc.Result controllers.StoreApiController.pla\nceOrder()\n[debug] application - /store\n[debug] application - /pet\n[debug] application - /user\n[error] application - Could not find route controllers.PetApiController.updatePe\nt\n[error] application - Could not find route controllers.StoreApiController.placeO\nrder\n[error] application - Could not find route controllers.UserApiController.createU\nser \n. Hi\nGood and a Bad news from my side too. I tried you patch on jdk 1.6. The error still exists but the system works fine ( except the swagger UI ) and I was able to fire queries on each service uri multiple times. The system did not hang on the first call like before. But on jdk 1.7, the error exists and the system hung on first call to the uri itself.\nI'm on GMT + 5:30 ( India ) timezone. Let me know your availability on IRC and I'll ping you.\nThank you for your time.\n. Hi\nAlso the service call to particular action ( example : /pet.json/1 ... 10 ) is returning a json with all null data. I think either the data is not loading due to the error which we are talking about or the service query is not able to fetch the data.\n. It works fine.\n. Hi\nCould you deploy the swagger artifacts for scala 2.10 as the latest play 2.1-SNAPSHOT fails to publish the module with the following error.\n[warn]  ::::::::::::::::::::::::::::::::::::::::::::::\n[warn]  ::          UNRESOLVED DEPENDENCIES         ::\n[warn]  ::::::::::::::::::::::::::::::::::::::::::::::\n[warn]  :: com.wordnik#swagger-core_2.10;1.2.0: not found\n[warn]  :: com.wordnik#swagger-annotations_2.10;1.2.0: not found\n[warn]  ::::::::::::::::::::::::::::::::::::::::::::::\nerror sbt.ResolveException: unresolved dependency: com.wordnik#swagger-core_2.10;1.2.0: not found\n[error] unresolved dependency: com.wordnik#swagger-annotations_2.10;1.2.0: not found\n[error] Total time: 136 s, completed Nov 30, 2012 12:20:06 PM\n. Thanks.\nI crossed this barrier but there are quite a lot of errors encountered. Like I said I'm working on the PLAY 2.1-SNAPSHOT and hence would appreciate if someone can share or guide through in this process.\nAttaching the errors encountered.\n[info] Generating Scala API documentation for main sources to D:\\swagger-play2\\target\\scala-2.10\\api...\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\ApiHelpInventory.scala:166: value getTypesAnnotatedWith is not a member of play.api.Application\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\ApiHelpInventory.scala:166: value getTypesAnnotatedWith is not a member of play.api.Application\n[error]       val swaggerControllers = current.getTypesAnnotatedWith(\"controllers\", classOf[Api])\n[error]       val swaggerControllers = current.getTypesAnnotatedWith(\"controllers\", classOf[Api])\n[error]                                        ^\n[error]                                        ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:16: value RoutesCompiler is not a member of object play.core.Router\n[error] import play.core.Router.RoutesCompiler.Route\n[error]                         ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:17: value DynamicPart is not a member of object play.core.Router\n[error] import play.core.Router.DynamicPart\n[error]        ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:18: value StaticPart is not a member of object play.core.Router\n[error] import play.core.Router.StaticPart\n[error]        ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:33: value RoutesCompiler is not a member of object play.core.Router\n[error]   import play.core.Router.RoutesCompiler.RouteFileParser\n[error]                           ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:35: not found: type Route\n[error]   private var _routesCache: Map[String, Route] = null\n[error]                                         ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:70: not found: type Route\n[error]   private def populateRoutesCache: Map[String, Route] = {\n[error]                                                ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:16: value RoutesCompiler is not a member of object play.core.Router\n[error] import play.core.Router.RoutesCompiler.Route\n[error]                         ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:17: value DynamicPart is not a member of object play.core.Router\n[error] import play.core.Router.DynamicPart\n[error]        ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:18: value StaticPart is not a member of object play.core.Router\n[error] import play.core.Router.StaticPart\n[error]        ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:33: value RoutesCompiler is not a member of object play.core.Router\n[error]   import play.core.Router.RoutesCompiler.RouteFileParser\n[error]                           ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:74: not found: type RouteFileParser\n[error]     val parser = new RouteFileParser\n[error]                      ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:35: not found: type Route\n[error]   private var _routesCache: Map[String, Route] = null\n[error]                                         ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:78: not found: value routes\n[error]         routes map { rule =>\n[error]         ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:88: not found: type Route\n[error]       case _ => MapString, Route\n[error]                             ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:70: not found: type Route\n[error]   private def populateRoutesCache: Map[String, Route] = {\n[error]                                                ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:122: value path is not a member ofAny\n[error]       case Some(route) => route.path.parts map {\n[error]                                 ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:74: not found: type RouteFileParser\n[error]     val parser = new RouteFileParser\n[error]                      ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:78: not found: value routes\n[error]         routes map { rule =>\n[error]         ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:151: value verb is not a member ofAny\n[error]       case Some(route) => o.httpMethod = route.verb.value\n[error]                                                ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:88: not found: type Route\n[error]       case _ => MapString, Route\n[error]                             ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:122: value path is not a member ofAny\n[error]       case Some(route) => route.path.parts map {\n[error]                                 ^\n[error] D:\\swagger-play2\\app\\play\\modules\\swagger\\PlayApiReader.scala:151: value verb is not a member ofAny\n[error]       case Some(route) => o.httpMethod = route.verb.value\n[error]                                                ^\n[error] 12 errors found\n[info] No documentation generated with unsucessful compiler run\n[error] 12 errors found\nerror Scaladoc generation failed\nerror Compilation failed\n[error] Total time: 172 s, completed Nov 30, 2012 3:44:46 PM\n[swagger-play2] $\n. I'm not sure on the dates but as the Play 2.1-RC1 is out, it should be closing by for the stable release very soon, I hope.\n. ",
    "angeloh": "I also got the same errors. I am not sure what I do wrong. All swagger jsons return normally.\n[error] application - Cannot determine Path. Nothing defined in play routes file for api method public static play.mvc.Result controllers.Register.registerByForm()\n[debug] application - /register\n[error] application - Could not find route controllers.Register.registerByForm\n@Api(value = \"/register\", description = \"Operations about register\")\npublic class Register extends Controller {\n    @POST\n    @ApiOperation(value = \"Add a new member to the store\")\n    @ApiErrors(value = { @ApiError(code = 405, reason = \"Invalid input\") })\n    @ApiParamsImplicit({\n        @ApiParamImplicit(\n            name = \"deviceId\", value = \"device GUID\",\n            required = false, dataType = \"String\", paramType = \"body\")})\n    @BodyParser.Of(BodyParser.Json.class)\n    public static Result registerByForm() {\n    }\n}\nPOST    /register                   controllers.Register.registerByForm()\nGET     /resources.json             controllers.ApiHelpController.getResources()\nGET     /register.json              controllers.ApiHelpController.getResource(path = \"/register\")\nPOST    /register.json              controllers.Register.registerByForm()\n. I just tried the java-play2 sample project. Yes, I got same error too.\n[debug] application - /user\n[error] application - Could not find route controllers.UserApiController.updateUser\n[error] application - Cannot determine Path. Nothing defined in play routes file for api method public static play.mvc.Result controllers.UserApiController.createUsersWithListInput()\n. Thanks. Btw, could you paste the solution or link here?\n. I tried java-play2. Here are the errors when browse http://localhost:9000/user.json.\n[error] application - Cannot determine Path. Nothing defined in play routes file for api method public static play.mvc.Result controllers.UserApiController.createUser()\n[debug] application - /user\n[error] application - Could not find route controllers.UserApiController.createUser\n[error] application - Cannot determine Path. Nothing defined in play routes file for api method public static play.mvc.Result controllers.UserApiController.createUsersWithArrayInput()\n. Still have errors in java-play2.\n[error] application - Cannot determine Path. Nothing defined in play routes file for api method public static play.mvc.Result controllers.UserApiController.updateUser(java.lang.String)\n[error] application - Cannot determine Path. Nothing defined in play routes file for api method public static play.mvc.Result controllers.PetApiController.addPet()\n[error] application - Cannot determine Path. Nothing defined in play routes file for api method public static play.mvc.Result controllers.StoreApiController.placeOrder()\n[debug] application - /user\n[debug] application - /pet\n[debug] application - /store\n[error] application - Could not find route controllers.PetApiController.addPet\n[error] application - Could not find route controllers.StoreApiController.placeOrder\n[error] application - Could not find route controllers.UserApiController.updateUser\n. I follow your steps, still get same errors.\nThen I remove /usr/local/share/play-2.0.1/framework/../repository/local/com.wordnik/swagger-play2_2.9.1/1.1-SNAPSHOT/ and do a local-publish again. And clean and run java-play2. The errors are still there.\nAnother problem I found in java-play2 and swagger-play2. Both were looking for commons-io jar. So I have to add \"commons-io\" % \"commons-io\" % \"2.3\" to Build.scala to be able to build them.\n[warn]  [NOT FOUND  ] commons-io#commons-io;2.0.1!commons-io.jar (0ms)\n[warn] ==== local: tried\n[warn]   /usr/local/share/play-2.0.1/framework/../repository/local/commons-io/commons-io/2.0.1/jars/commons-io.jar\n[warn]  ::::::::::::::::::::::::::::::::::::::::::::::\n[warn]  ::              FAILED DOWNLOADS            ::\n[warn]  :: ^ see resolution messages for details  ^ ::\n[warn]  ::::::::::::::::::::::::::::::::::::::::::::::\n[warn]  :: commons-io#commons-io;2.0.1!commons-io.jar\n. This is my current local repo status.\n$ git pull\nAlready up-to-date.\n$ git log --oneline\n9f7acc6 fixed the path param name for getPet\nd615dfb Bugfix to support discovery of java controllers in PlayApiReader\n. I guess this is the problem. The current sample https://github.com/wordnik/swagger-core/tree/master/samples/java-play2 is using jars from github repo.\n. Okay. If I browse http://localhost:9000/resources.json, it works fine. However, when I use it w/ swagger-ui, bunch of errors pop up. I will open another ticket.\n. I tried adding it to Build.scala. But it is still not able to resolve.\n```\nval appDependencies = Seq(\n  // Add your project dependencies here,\n  \"com.github.twitter\" % \"bootstrap\" % \"2.0.2\",\n  \"postgresql\" % \"postgresql\" % \"9.1-901-1.jdbc4\",\n  \"com.googlecode.libphonenumber\" % \"libphonenumber\" % \"4.1\",\n  \"com.restfb\" % \"restfb\" % \"1.6.9\",\n  \"swagger-play2\" %% \"swagger-play2\" % \"1.1-SNAPSHOT\"\n)\nval main = PlayProject(appName, appVersion, appDependencies, mainLang = JAVA).settings(\n  // Add your own project settings here\n  resolvers += \"webjars\" at \"http://webjars.github.com/m2\",\n  resolvers += \"Mave2\" at \"http://repo1.maven.org/maven2\",\n  resolvers += \"Sonatype snapshots\" at \"http://oss.sonatype.org/content/repositories/snapshots/\"\n)\n```\n. Thanks. It works for me.\nOne thing that is different than what described here.\nhttps://github.com/wordnik/swagger-core/blob/master/samples/java-play2/project/Build.scala\nI have to change group id to \"com.wordnik\".\n\"com.wordnik\" %% \"swagger-play2\" % \"1.1-SNAPSHOT\"\nPlease modify the above example and the module's readme.\nhttps://github.com/wordnik/swagger-core/tree/master/modules/swagger-play2\n. I tried you patch. \nFirst, I git pull latest changes from swagger-core repo, and publish local for swagger-play2. Make java-play2 to use local repo jars.\nThen, I tried you patch. Remove local cache. Republish and recompile.\nThe result looks the same to me with or without your patch. Only /store.{format} have shown up on swagger-ui, not the other two (/pet and /user). Did you try java-play2 example at your local env?\n. Yes. For ebean model, there are public accessors in it.\n. So you mean I don't need to put the weird @XmlRootElement in my models, right? the fix will come in next release, right?\n. com.avaje.ebean.Junction is not my model. this is ebean model and I think it is an interface.\nhttp://grepcode.com/file/repo1.maven.org/maven2/org.avaje/ebean/2.7.0/com/avaje/ebean/Junction.java\n. this is my model.\nhttps://gist.github.com/3445494\n. I don't have json coming back from model, only from controller where I defined @Api @ApiOperation..\n. sure. let me join that. I do have one more issue.\n. Thanks @fehguy \nIf anyone searched and found this issue, you might want to check https://github.com/wordnik/swagger-core/blob/master/samples/java-play2/app/controllers/PetApiController.java#L25\nThe responseClass will be used by swagger to parse the response result.\nAnd those error messages\n[error] c.w.s.p.HelpApi\n[error] c.w.s.j.ApiModelParser\nwill be fixed in 1.1.1 release.\n. +1\n. ",
    "wordnik-ci": "If you want to use the snapshot version of swagger, you'll need to add the sonatype snapshot repo to your resolvers\n\"Angelo K. Huang\" reply@reply.github.com wrote:\n1. First, under swagger-play2, execute\n     $ play publish-local\n2. add appDependencies to my play2's project/Build.scala\n     \"swagger-play2\" %% \"swagger-play2\" % \"1.1-SNAPSHOT\"\n3. add resolvers to my play2's project/Build.scala\n     resolvers += Resolver.url(\"local-ivy\", new URL(\"file://\" + Path.userHome.absolutePath + \"/.ivy2/local\"))(Resolver.ivyStylePatterns),\n     resolvers += Resolver.url(\"local-ivy-cache\", new URL(\"file://\" + Path.userHome.absolutePath + \"/.ivy2/cache\"))(Resolver.ivyStylePatterns),\n     resolvers += Resolver.url(\"local-ivy-cache-mvn\", new URL(\"file://\" + Path.userHome.absolutePath + \"/.ivy2/cache\"))(Resolver.mavenStylePatterns),\n     resolvers += (Resolver.file(\"Local Maven Repository\", file(Path.userHome.absolutePath+\"/.m2/repository\"))(Resolver.ivyStylePatterns))\nWhen I run\n      $ git push heroku master\nI got the errors for missing dependency for swagger-play2.\n[warn]  module not found: swagger-play2#swagger-play2_2.9.1;1.1-SNAPSHOT\n       [warn] ==== local: tried\n       [warn]   /tmp/build_1sxx8y8pc37jg/.sbt_home/.ivy2/local/swagger-play2/swagger-play2_2.9.1/1.1-SNAPSHOT/ivys/ivy.xml\n       [warn] ==== Typesafe Releases Repository: tried\n       [warn]   http://repo.typesafe.com/typesafe/releases/swagger-play2/swagger-play2_2.9.1/1.1-SNAPSHOT/swagger-play2_2.9.1-1.1-SNAPSHOT.pom\n       [warn] ==== Typesafe Snapshots Repository: tried\n       [warn]   http://repo.typesafe.com/typesafe/snapshots/swagger-play2/swagger-play2_2.9.1/1.1-SNAPSHOT/swagger-play2_2.9.1-1.1-SNAPSHOT.pom\n       [warn] ==== webjars: tried\n       [warn]   http://webjars.github.com/m2/swagger-play2/swagger-play2_2.9.1/1.1-SNAPSHOT/swagger-play2_2.9.1-1.1-SNAPSHOT.pom\n       [warn] ==== Mave2: tried\n       [warn]   http://repo1.maven.org/maven2/swagger-play2/swagger-play2_2.9.1/1.1-SNAPSHOT/swagger-play2_2.9.1-1.1-SNAPSHOT.pom\n       [warn] ==== local-ivy: tried\n       [warn]   file:/tmp/build_1sxx8y8pc37jg/.sbt_home/.ivy2/local/swagger-play2/swagger-play2_2.9.1/1.1-SNAPSHOT/ivys/ivy.xml\n       [warn] ==== local-ivy-cache: tried\n       [warn]   file:/tmp/build_1sxx8y8pc37jg/.sbt_home/.ivy2/cache/swagger-play2/swagger-play2_2.9.1/1.1-SNAPSHOT/ivys/ivy.xml\n       [warn] ==== local-ivy-cache-mvn: tried\n       [warn] ==== Local Maven Repository: tried\n       [warn]   /tmp/build_1sxx8y8pc37jg/.sbt_home/.m2/repository/swagger-play2/swagger-play2_2.9.1/1.1-SNAPSHOT/ivys/ivy.xml\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/wordnik/swagger-core/issues/35\n. ",
    "geeksville": "swagger-ui is working well for me, but I had to make a few small fixes.  I suspect the one you want for this is:\nhttps://github.com/Xeralux/swagger-core/commit/688616e8c87b64b920183c094fa9b31f1a5fb5c4\n. btw - here's a possible fix if you want it.  Worked well for my case: https://github.com/Xeralux/swagger-core/commit/8dac1cf5cace0624368fc908c445da015b8a69e9\n. ",
    "cainj": "I'm seeing this issue also, has it been resolved.\n. I'm still see these errors.  Everything works fine with scala-play, but the java-play not so well.  PathParams are not showing up in swagger-ui\n. Did as you suggested and came to the following conclusion.  It works like a charm, when I run the sbt console, but if I use the play console, that's when the errors happen.  So I think it's a play issue and not swagger.  Although, if I run the scala-play2 with the play console it works fine.\n. That did it.  You are the man!  \nThe ivy cache can really mess things up.  Thanks again.\n. ",
    "rore": "+1 for supporting play 2.0.2\n. What update is needed in the routes?\nOn Mon, Sep 10, 2012 at 4:31 PM, fehguy notifications@github.com wrote:\n\nDid you update your conf/routes as well?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/59#issuecomment-8423453.\n. And what if I don't want to remove it but have it always as a specific\nformat? (Say only .json)\nOn Sep 11, 2012 4:37 PM, \"fehguy\" notifications@github.com wrote:\n@rore https://github.com/rore, if you remove the format string, you'll\nwant to update the routes to remove the .json suffix like such:\nRoutes\nThis file defines all application routes (Higher priority routes first)\n~~~~\nSwagger - Root Resources Listing\nGET     /resources                       controllers.ApiHelpController.getResources\nGET     /pet                             controllers.ApiHelpController.getResource(path = \"/pet\")\nPOST    /pet                             controllers.PetApiController.addPet\nPUT     /pet                             controllers.PetApiController.updatePet\nGET     /pet  /findByStatus              controllers.PetApiController.findPetsByStatus(status)\nGET     /pet  /findByTags                controllers.PetApiController.findPetsByTags(tags)\nGET     /pet  /:petId                    controllers.PetApiController.getPetById(petId)\nGET     /store                           controllers.ApiHelpController.getResource(path = \"/store\")\nPOST    /store  /order                   controllers.StoreApiController.placeOrder\nGET     /store  /order/:orderId          controllers.StoreApiController.getOrderById(orderId)\nDELETE  /store  /order/:orderId          controllers.StoreApiController.deleteOrder(orderId)\nGET     /user                            controllers.ApiHelpController.getResource(path = \"/user\")\nPOST    /user                            controllers.UserApiController.createUser\nPOST    /user  /createWithArray          controllers.UserApiController.createUsersWithArrayInput\nPOST    /user  /createWithList           controllers.UserApiController.createUsersWithListInput\nGET     /user  /login                    controllers.UserApiController.loginUser(username,password)\nGET     /user  /logout                   controllers.UserApiController.logoutUser\nPUT     /user  /:username                controllers.UserApiController.updateUser(username)\nDELETE  /user  /:username                controllers.UserApiController.deleteUser(username)\nGET     /user  /:username                controllers.UserApiController.getUserByName(username)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/59#issuecomment-8459747.\n. No, my initial question was misleading. I want swagger to always use .json\nand not .format\n\nOn Sep 11, 2012 4:50 PM, \"fehguy\" notifications@github.com wrote:\n\n@rore--just so I'm understanding correctly, you mean you just want to\nremove the .json suffix in the URL--so http://localhost:9000/pet.json/1 =>\nhttp://localhost:9000/pet/1. Is that correct? If so, changing the routes\nfile to remove the .json won't affect the format of the response, just the\nURL.\nLet me know if I'm misunderstanding your question\n\u2014\nReply to this email directly or view it on GitHub.\n. Yes, I've tries that but the generated definition (which I'm getting by\ngoing to the swagger resource url) still contains .{format} instead of\n.json.\n\nI've noticed that PlayApiSpecParser also has a FORMAT_STRING parameter that\ndoesn't get set when you call the PlayApiReader.setFormatString . Could\nthat be the problem?\nOn Tue, Sep 11, 2012 at 8:00 PM, fehguy notifications@github.com wrote:\n\nGot it--so you should do this:\nPlayApiReader.setFormatString(\".json\")\nat application bootstrap. You can leave the routes as-is. Can you give\nthat a whirl and see if it solves your concern? Swagger-ui and codgen\nshould work fine with this change.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/59#issuecomment-8464774.\n. You can't really set it up, this class is protected and I didn't see a way\nof accessing it.\nOn Sep 13, 2012 8:10 AM, \"fehguy\" notifications@github.com wrote:\nHi @rore https://github.com/rore, that could be it. Can you try setting\nthat as well? We'll look at cleaning it up to make a single config.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/59#issuecomment-8518427.\n. \n",
    "sclasen": "+1 Hit this issue too, \n. ",
    "rintcius": "Same problem here (play 2.0.2 scala). Any idea how to get around this? The exception is quite mysterious\n. Same problem here (play 2.0.2 scala). Any idea how to get around this? The exception is quite mysterious\n. FYI, I created a pull request for the scala part, see #55\n. FYI, I created a pull request for the scala part, see #55\n. thanks for the quick merge!\n. thanks for the quick merge!\n. ",
    "privateblue": "Hi! Would this also work for overridden methods, where the Api attribute is applied to the subclass which contains the overriding method, but the ApiOperation attribute is applied to the super method in the superclass? Thanks!\n. Hi! Would this also work for overridden methods, where the Api attribute is applied to the subclass which contains the overriding method, but the ApiOperation attribute is applied to the super method in the superclass? Thanks!\n. ",
    "webron": "Opened issue 51 which I believe is related to this issue and can possibly resolve this issue along the way.\n. A possible proper solution - http://jackson.codehaus.org/1.7.0/javadoc/org/codehaus/jackson/type/TypeReference.html\nNote the link in the class description.\n. Okay, I did some digging, and this is what I've come up with.\nIf I understand you correctly, you're missing a few fields in the JSON Schema that Jackson generates such as \"description\", \"allowableValues\" and perhaps others. There are two issues here, as far as I can tell:\n1. Jackson's JSON schema generation is limited, and Tatu states so on his own: http://markmail.org/thread/bcji7hkneq3oquzy - As such, support for various JSON Schema attributes is limited.\n2. According to http://swagger.wordnik.com/spec - Swagger is supposed to conform to the 3rd draft of the JSON schema, however, that's not the case. For example, the attribute \"allowableValues\" is used instead of \"enum\" which according to the spec is equivalent to that.\nSo it seems we end up bare-handed on either side. If we use Swagger's mapper, we'll need to create some proxy class or perhaps add additional annotations on top of Jackson's so that it'll create the right model. If we use Jackson's mapper, we get a lean schema with no sugar.\nI agree that it making the schema generation pluggable is a good idea, but it seems I'll still have ways to go before getting a fully descriptive usable schema.\n. That's definitely fugly - going to have a look at it.\n. @mdekmetzian - Apologies for the really delayed reply. Since opening this issue I've left the relevant job and neglected following up on things.\nAs you suggested, @QueryParam can be used for parameters that are always required for the methods in the that resource class, and yes, paging (that is, limit and offset parameters) is a good use case for that.\nAs for it working on the method layer, I refer you to the javadoc - https://jsr311.java.net/nonav/javadoc/javax/ws/rs/QueryParam.html\n\"Binds the value(s) of a HTTP query parameter to a resource method parameter, resource class field, or resource class bean property.\" - If I understand that correctly, you can use the annotation on top of a java bean property setter method.\nDo note that I consider this to be a bad practice to include @QueryParam on class fields, however, Swagger should still probably support them.\n. Closing as this should be handled once we release a new version of the Play module.\n. This is covered by https://github.com/wordnik/swagger-spec/issues/50\n. @PabloEzequiel - are you using a version that was released in 2012? If so, it's time to upgrade.\n. As part of the work on the Swagger Specification 2.0, I'll create a new issue on the spec repo and close this one. Feel free to add comments there.\n. @psinghsp - this is really not the right place for the question. Sounds like you're looking for swagger-node-express.\n. @shinijaQB - swaggervel has nothing to do with this project. If you have an issue with it, please open a ticket on the right repository.\n. For hidden=true, you need swagger-core 1.3.4. swagger-ui version is irrelevant.\n. @pofallon - Yes. You can use the BeanConfig class to set the filter.\n. @chrisinmtown Swagger/OpenAPI 2.0 does not support that, however, OAS3 might be able to. Would suggest filing a new ticket for it.. OAS3 is OpenAPI 3.0, the new version of the spec. And you would file the new ticket on this repo, with an explanation of what you'd like to achieve.. @raspacorp it should work. What do you get?\n. @raspacorp responseContainer was never part of @ApiResponse but rather of @ApiOperation \n. You don't. Currently, it is not supported by the spec.\nThe next version of the spec organizes these things better and you'd be able to return a list of object as well.\nAt most, what you can currently do is return an object (model) that contains a list.\n. We're not really going to write migration docs for that anymore, so no longer an issue. However, there's #902 for the future.\n. No.\nOn May 23, 2014 4:02 PM, \"Chris Fournier\" notifications@github.com wrote:\n\nDid OAuth 1.0a make it into the 1.3 release in any way?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/217#issuecomment-44005826\n.\n. OAuth 1.0 is currently not supported by the Swagger Specification so it\ncan't be included in Swagger core.\n\nWe just kicked off the Swagger 2.0 specification procedure, so feel free to\nhead to the swagger-spec repo and open an issue about it.\nOn May 23, 2014 4:06 PM, \"Chris Fournier\" notifications@github.com wrote:\n\nAny chance that it's in your roadmap at all?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/217#issuecomment-44006173\n.\n. Since it we now manage the spec separately, I'll close this issue for now. Should OAuth 1.0 support be added with the new version of the spec, it will also be supported by the version of swagger-core supporting that.\n. This discussion is moved to the swagger-spec repository as it first needs to be resolved in the swagger specification - https://github.com/wordnik/swagger-spec/issues/38.\n. Is this also relevant to 1.5?\n. No problem, I was actually asking @fehguy  ;)\n. Great. Closing out. \n. When you run what command? What is your set up like?\n. It runs fine for me.\n\nTry running mvn -U package.\nIf that doesn't work, please paste the output of mvn -X package.\n. Okay, that looks like a version mismatch. The first step would be to run mvn clean package and if that doesn't work, I'd delete the local .m2 directory (backing up any settings of course) and run it again.\n. @varunmehra03 Swagger-core does not affect file uploads. There are two possible issues - either the swagger output doesn't describe a parameter as a file or swagger-ui is giving you some issues.\nIn order to analyze it, I'd suggest giving full details of your configuration (including versions of core and ui), and possibly the json output in a thread in the google group. If we find out there's a problem, then you should open an issue on it.\n. We have a scala jersey sample with file upload here - https://github.com/wordnik/swagger-core/tree/master/samples/scala-jaxrs-fileupload - and it works fine.\nI suspect something is wrong with your configuration. I need full details of the jersey version that you use and your pom.xml. Please don't paste it here as it ends up being all over the place and impossible to read (as you can see from the previous pastes). Again, I'd starting a thread on the google group as this is not really this issue.\n. @TrentBrown - there was a new sorter parameter added to the SwaggerUi object (https://github.com/swagger-api/swagger-ui#swaggerui) - it may solve your issue.\n. You're looking for an explicit example to see how the @Api can be different\nthan the @Path or a use case for it?\nPersonally, I find that using consts in the @Path can help both for this\nand other use uses.\nOn Sun, May 25, 2014 at 12:41 PM, SylvainJuge notifications@github.comwrote:\n\nIs there any example available that shows when to choose a different path\nbetween Jersey resource path and Swagger specification ?\nMaybe that's probably confusing only while integrating with Jersey, and\ndoes not happen when using other frameworks, and thus making the path\noptional would not be the best choice.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/304#issuecomment-44126984\n.\n. @mdzhigarov You'd have to ask on that project's repo. No idea how they allow such configurations there. It may work with the examples here, but really not sure.\n. Unfortunately, as much as it may be important, we will not be able to merged it as-is. Most efforts go into swagger-core 1.5 where the implementation should be better.\n. @sameer11sep - I assume you're using swagger-springmvc. In that case, you should open an issue on their repository and ask there directly.\n. There are several places it can be used, and I'm not sure if swagger-springmvc uses it as well or has another way of registering converters.\n. @pradeepg-telsiz - I'd suggest opening a new issue or rather send an email to the mailing list describing your use case.\n. While this is great work, map support is done natively in swagger-core 1.5.X.\n. I'm only now seeing this. @rage-shadowman  - the sample you posted regarding the single enum reference rather than the array one is actually wrong and shouldn't be like it. The correct output should have been something like \n\njs\n\"dayOfWeek\":{\"type\":\"string\",\"enum\":[\"SUNDAY\",\"MONDAY\",\"TUESDAY\",\"WEDNESDAY\",\"THURSDAY\",\"FRIDAY\",\"SATURDAY\"]}\nThe 1.2 spec does not allow defining an enumeration on a list of values, so this means the alternative for now would be to have an object (model) containing one field with an enumerated value, and then have a list of that model. This is how I'd expect swagger-core to deal with Enum lists at the moment at least.\n. @TimSoethout - I understand what you're trying to do, but officially, there's no way to enforce that using the current swagger specification. \nIf you look at https://github.com/wordnik/swagger-spec/blob/master/versions/1.2.md#434-items-object you'll see that \"enum\" is not supported when the type is \"array\". \nThat said, it doesn't mean it shouldn't allow it, which is why I opened this issue - https://github.com/wordnik/swagger-spec/issues/35 - which you can follow.\n. That doesn't mean swagger-ui doesn't have extended functionality ;-)\nOn May 7, 2014 11:15 PM, \"Shadow Man\" notifications@github.com wrote:\n\n@webron https://github.com/webron That's funny because when I built the\nswagger config files manually (as opposed to using swagger-core to generate\nthem as I am doing now) it worked with the following:\n\"daysOfWeek\": {\n           \"type\": \"array\",\n           \"allowableValues\": {\n              \"valueType\": \"LIST\",\n              \"values\": [ \"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\", \"FRIDAY\", \"SATURDAY\", \"SUNDAY\" ]\n           }\n        },\ndisplaying in swagger-ui as:\ndaysOfWeek (array) = ['MONDAY' or 'TUESDAY' or 'WEDNESDAY' or 'THURSDAY' or 'FRIDAY' or 'SATURDAY' or 'SUNDAY'],\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/375#issuecomment-42477547\n.\n. @quasipedia - I also wanted to thank you for the input! I hope the general Swagger population would enjoy it as well ;)\n. @biolinh - I just ran it on my own machine and it seems to work fine. Can you elaborate on the issue you encounter?\n. can you try running mvn clean install?\n\nOn Tue, Mar 18, 2014 at 2:08 PM, biolinh notifications@github.com wrote:\n\nPrerequisites\n-\nJava 1.6 or greater\n   $java -version\n   java version \"1.6.0_45\"\n   -\nApache maven 3.0.3 or greater\n   $ mvn -version\n   Apache Maven 3.0.4\ni do as follow there steps:\n1. git clone https://github.com/wordnik/swagger-core.git\n2. cd swagger-core\n3. mvn -N\n4. mvn install\nthen i got the error:\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec\nResults :\nTests in error:\nshould format a date(converter.FormatTest):\n\"...time\"},\"intValue\":{\"[$ref\":\"Int\"},\"longValue\":{\"type\":\"integer\",\"format\":\"int64\"},\"floatValue\":{\"$ref\":\"Float\"},\"doubleValue\":{\"$ref\":\"D]ouble\"}}}\"\nwas not equal to\n\"...time\"},\"intValue\":{\"[type\":\"integer\",\"format\":\"int32\"},\"longValue\":{\"type\":\"integer\",\"format\":\"int64\"},\"floatValue\":{\"type\":\"number\",\"format\":\"float\"},\"doubleValue\":{\"type\":\"number\",\"format\":\"d]ouble\"}}}\"\nTests run: 55, Failures: 0, Errors: 1, Skipped: 5\n[INFO]\n[INFO] Reactor Summary:\n[INFO]\n[INFO] wordnik-swagger-project ........................... SUCCESS [5.077s]\n[INFO] swagger-annotations ............................... SUCCESS\n[14.361s]\n[INFO] swagger-core ...................................... FAILURE [8.541s]\n[INFO] swagger-jaxrs ..................................... SKIPPED\n[INFO] swagger-jersey-jaxrs .............................. SKIPPED\n[INFO] swagger-jersey2-jaxrs (Jersey 2.x support) ........ SKIPPED\n[INFO] swagger-servlet ................................... SKIPPED\n[INFO] swagger-oauth2-server ............................. SKIPPED\n[INFO]\n[INFO] BUILD FAILURE\n[INFO]\n[INFO] Total time: 29.452s\n[INFO] Finished at: Tue Mar 18 18:52:40 ICT 2014\n[INFO] Final Memory: 26M/205M\n[INFO]\n[ERROR] Failed to execute goal\norg.apache.maven.plugins:maven-surefire-plugin:2.10:test (default-test) on\nproject swagger-core_2.10: There are test failures.\n[ERROR]\n[ERROR] Please refer to\n/home/jmango/www/swagger-core/modules/swagger-core/target/surefire-reports\nfor the individual test results.\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the\n-e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions,\nplease read the following articles:\n[ERROR] [Help 1]\nhttp://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR]\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/387#issuecomment-37925368\n.\n. These errors won't break the build, so if the build fails there has to be\nother errors.\nWhat about what @fehguy asked?\n\nOn Tue, Mar 18, 2014 at 6:04 PM, biolinh notifications@github.com wrote:\n\n@webron https://github.com/webron: i tried it. it didn't work.\nwhen i scroll back, i got error\n[ERROR] Error fetching link:\n../swagger-core/modules/swagger-core/target/apidocs/page-list. Ignored it.\n[ERROR] Error fetching link:\n../swagger-core/modules/swagger-jaxrs/target/apidocs/page-list. Ignored it.\n[ERROR] Error fetching link:\n../swagger-core/modules/swagger-jersey-jaxrs/target/apcs/package-list.\nIgnored it.\n[ERROR] Error fetching\nlink:../swagger-core/modules/swagger-jersey2-jaxrs/target/aocs/package-list.\nIgnored it.\n[ERROR] Error fetching link:\n../swagger-core/modules/swagger-servlet/target/apidocsckage-list. Ignored\nit.\n[ERROR] Error fetching\nlink:../swagger-core/modules/swagger-oauth2-auth-server/tar/apidocs/package-list.\nIgnored it.\n[INFO]\nLoading source files for package com.wordnik.swagger.annotations...\nConstructing Javadoc information...\nStandard Doclet version 1.7.0_51\nBuilding tree for all the packages and classes...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/387#issuecomment-37951143\n.\n. Can you please paste the entire output of mvn clean install?\nOn Mar 18, 2014 6:12 PM, \"biolinh\" notifications@github.com wrote:\n@fehguy https://github.com/fehguy: My OS is Ubuntu 13.04\nI don't have lib folder under modules/swagger-core/target/\nIt is missing.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/387#issuecomment-37952152\n.\n. Okay, it fails on the clean part. Can't delete swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annotations/Api.html.\nUnfortunately, I don't know why it can't delete that. My guess would be lack of permissions. Can you check that out? Worst case, just delete the target dirs manually (notice, all the target dirs).\n. Not saying this issue shouldn't be solved, but for now, why are you trying to build swagger instead of using the dependency directly from maven? Just want to speed up your development process.\n. @sivamrkumar you can't comment on an issue from 2013 and say it's still not working. It's not even the same code base. If you have an issue, considering opening a new ticket.\n. @mbde - which version of swagger-core do you use?\n. @mbde - never mind, just saw the original issue.\n. As opposed to?\n. Fixed in develop_2.0.\n. @okigan - this is a bug in the current version. Feel free to open a new issue about it.\n. Applies to https://github.com/swagger-api/swagger-core/milestones/v1.5.0-M1 as well.\n. @dmn1899 commenting on an issue that was closed over two years ago is not the way to do it. If you experience an issue with the latest version, consider submitting a new ticket with the details.. @rage-shadowman - sorry for the delay on this.\n\n1.3.X is no longer under development. I don't know if you upgraded to 1.5.X yet and whether this issue is still relevant for you there. Can you please provide an update?\n. Does https://github.com/gettyimages/spray-swagger answer this issue?\n. @rage-shadowman - I think this is a general documentation issue first. If you look at the source code, you'll see this:\njava\n  /** The base path that is prepended to all @Path elements. This may be an override for certain scenarios only */\n  String basePath() default \"\";\nHowever, which scenarios are not documented.\nI'd love it if you could explain a bit more. I think I've seen a similar issue elsewhere (could be here or on swagger-ui).\nAs for an issue on swagger-spec, that depends on the suggested feature. There could be room for it over there.\n. @pikazlou - even though it's a bit late, please take a look here - https://github.com/wordnik/swagger-core/issues/618#issuecomment-49002949\n. Take a look at - http://swagger.wordnik.com/#!/pet/deletePet_delete_1\nOn Fri, Mar 14, 2014 at 8:01 AM, adina270898 notifications@github.comwrote:\n\nHi, on the http://petstore.swagger.wordnik.com/ I didn't find any example\nof oauth2, only an authorization with api_key. Do you have any other\nsamples? Thank you.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/456#issuecomment-37619189\n.\n. The deletePet uses implicit grant type OAuth2...\n\nOn Fri, Mar 14, 2014 at 9:36 AM, adina270898 notifications@github.comwrote:\n\nThe deletePet doesn't help me...I need to test Oauth2 authorization\nintegrated with Swagger, like it was described on:\nhttps://github.com/wordnik/swagger-core/wiki/authorizations with grant\ntypes implicit and authorization code. Could you help me with a Swagger\ncompliance server to support these? Thank you.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/456#issuecomment-37623007\n.\n. That's because you're only looking at how to declare the authorizations on\nthe operation.\nTake a look here - http://petstore.swagger.wordnik.com/api/api-docs/\n\nOn Fri, Mar 14, 2014 at 9:50 AM, adina270898 notifications@github.comwrote:\n\nYes, but in the deletePet I can see only these:\n\"authorizations\":{\"oauth2\":[{\"scope\":\"email\",\"description\":\"Access to your\nemail address\"},{\"scope\":\"pets\",\"description\":\"Access to your pets\"}]}\nBut I need to test a resource that contains this piece of json described\nhere: https://github.com/wordnik/swagger-core/wiki/authorizations.\nIn fact, the 2 jsons are very different.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/456#issuecomment-37623661\n.\n. You'd be better off looking at those samples. Whatever I give you manually has better chances of including mistakes in it. The maven build shouldn't take more than a few minutes, even if you don't have any of the dependencies on your computer.\n. Adina,\n\nI think you got something wrong. There's no Swagger 2.0.\nCan you give us some more information about what you have exactly at the\nmoment? Maybe even a sample of the json you have?\n. Take a look here then -\nhttps://github.com/wordnik/swagger-spec/wiki/1.2-transition\nOn Tue, Apr 1, 2014 at 9:02 AM, adina270898 notifications@github.comwrote:\n\nAh, sorry, I messed up the versions.\nI mean Swagger 1.2. At link,\nhttp://petstore.swagger.wordnik.com/api/api-docs/pet the swaggerVersion\nis 1.2.\nI need a Swagger 1.1 specifications/docs in order to see the differences\nbetween the json formats.\nOn Tuesday, April 1, 2014 8:54 AM, webron notifications@github.com\nwrote:\nAdina,\nI think you got something wrong. There's no Swagger 2.0.\nCan you give us some more information about what you have exactly at the\nmoment? Maybe even a sample of the json you have?\nOn Tue, Apr 1, 2014 at 8:33 AM, adina270898 notifications@github.comwrote:\n\nI have to test an application with Swagger 1.0, and this is not related\nto\nthe authentication. I just want to see if the json format is different\nfrom\n1.0 to 2.0.\nOn Monday, March 31, 2014 7:27 PM, Tony Tam notifications@github.com\nwrote:\nDo you mean the swagger spec 1.0? That does not support authorization\nOn Mar 31, 2014 8:36 AM, \"adina270898\" notifications@github.com\nwrote:\n\nHello Tony,\nI want to ask you if you know a web application that uses Swagger 1.0\nversion and where I could find some docs/specifications about Swagger\n1.0.\nThank you,\nAdina\nOn Thursday, March 20, 2014 9:37 AM, Adina Tusa adina270898@yahoo.com\nwrote:\nThank you Tony.\nI've already downloaded the Scala oAuth2 sample with and i run with\nboth\ngrants and I saw what's going on.\nMy only problem is that if I emulate a HTTP request from Dev HTTP\nclient\nto a endpoint that's described in the json, I supposed that on HTTP\nResponse I have somehow the code, but in fact I receive the html page\nthat\nprompt for username/password. So, I figured that the endpoint\ndescribed\nin\nthe json is the final endpoint (where the username and password are\nsent).\nHave a nice day!\nOn Thursday, March 20, 2014 6:31 AM, Tony Tam \nnotifications@github.com\nwrote:\nhi @adina270898 authorization code grant will be added to a future\nsample.\nReply to this email directly or view it on GitHub.\n\nReply to this email directly or view it on GitHub<\nhttps://github.com/wordnik/swagger-core/issues/456#issuecomment-39103032>\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/wordnik/swagger-core/issues/456#issuecomment-39172307>\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/456#issuecomment-39173448\n.\n. I don't know of publicly available swagger 1.1 samples (you could check the\nexisting known deployments).\nAs for swagger 1.2 - the pet store and all the samples in swagger-core are\nof version 1.2.\n. The document I referred you to before lists the changes between the\nversions.\nOn Apr 1, 2014 1:22 PM, \"adina270898\" notifications@github.com wrote:\nI discovered an application that has integrated Swagger 1.1 and in json\nfile, the operations element, has \"httpMethod\". An other application that\nhas 1.2 version, use \"method\".\nThese changes are related to the Swagger version? And if you do know other\njson changes from 1.1 to 1.2?\nThank you.\nOn Tuesday, April 1, 2014 10:50 AM, webron notifications@github.com\nwrote:\nI don't know of publicly available swagger 1.1 samples (you could check\nthe\nexisting known deployments).\nAs for swagger 1.2 - the pet store and all the samples in swagger-core are\nof version 1.2.\nOn Tue, Apr 1, 2014 at 10:47 AM, adina270898 notifications@github.comwrote:\n\nWhere could I find a complete example of json for swagger 1.1 and\nanother\none for swagger 1.2?\nOn Tuesday, April 1, 2014 9:13 AM, Adina Tusa adina270898@yahoo.com\nwrote:\nOk, thank you Tony.\nOn Tuesday, April 1, 2014 9:07 AM, webron notifications@github.com\nwrote:\nTake a look here then -\nhttps://github.com/wordnik/swagger-spec/wiki/1.2-transition\nOn Tue, Apr 1, 2014 at 9:02 AM, adina270898 notifications@github.comwrote:\n\nAh, sorry, I messed up the versions.\nI mean Swagger 1.2. At link,\nhttp://petstore.swagger.wordnik.com/api/api-docs/pet the\nswaggerVersion\nis 1.2.\nI need a Swagger 1.1 specifications/docs in order to see the\ndifferences\nbetween the json formats.\nOn Tuesday, April 1, 2014 8:54 AM, webron notifications@github.com\nwrote:\nAdina,\nI think you got something wrong. There's no Swagger 2.0.\nCan you give us some more information about what you have exactly at\nthe\nmoment? Maybe even a sample of the json you have?\nOn Tue, Apr 1, 2014 at 8:33 AM, adina270898 notifications@github.comwrote:\n\nI have to test an application with Swagger 1.0, and this is not\nrelated\nto\nthe authentication. I just want to see if the json format is\ndifferent\nfrom\n1.0 to 2.0.\nOn Monday, March 31, 2014 7:27 PM, Tony Tam \nnotifications@github.com\nwrote:\nDo you mean the swagger spec 1.0? That does not support\nauthorization\nOn Mar 31, 2014 8:36 AM, \"adina270898\" notifications@github.com\nwrote:\n\nHello Tony,\nI want to ask you if you know a web application that uses Swagger\n1.0\nversion and where I could find some docs/specifications about\nSwagger\n1.0.\nThank you,\nAdina\nOn Thursday, March 20, 2014 9:37 AM, Adina Tusa \nadina270898@yahoo.com\nwrote:\nThank you Tony.\nI've already downloaded the Scala oAuth2 sample with and i run\nwith\nboth\ngrants and I saw what's going on.\nMy only problem is that if I emulate a HTTP request from Dev HTTP\nclient\nto a endpoint that's described in the json, I supposed that on\nHTTP\nResponse I have somehow the code, but in fact I receive the html\npage\nthat\nprompt for username/password. So, I figured that the endpoint\ndescribed\nin\nthe json is the final endpoint (where the username and password\nare\nsent).\nHave a nice day!\nOn Thursday, March 20, 2014 6:31 AM, Tony Tam \nnotifications@github.com\nwrote:\nhi @adina270898 authorization code grant will be added to a future\nsample.\nReply to this email directly or view it on GitHub.\n\nReply to this email directly or view it on GitHub<\n\nhttps://github.com/wordnik/swagger-core/issues/456#issuecomment-39103032>\n\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub<\n\nhttps://github.com/wordnik/swagger-core/issues/456#issuecomment-39172307>\n\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/wordnik/swagger-core/issues/456#issuecomment-39173448>\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/wordnik/swagger-core/issues/456#issuecomment-39178781>\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/456#issuecomment-39190422\n.\n. Using my phone, unfortunately, so I'll keep it brief.\n\nMac is absolutely right regarding the null issue - a null field is not\nequivalent to a non-existing field. MongoDB is an example where they have\ntwo distinct different meanings.\nWhether it's good to rely on it or not is besides the point.\nOn Mar 1, 2014 12:28 PM, \"Mac Ryan\" notifications@github.com wrote:\n\n@rage-shadowman https://github.com/rage-shadowman\nessentially the same is not exactly the same\nWell, there you have it above. Having a property set to null is not the\nsame as not having a property altogether. It seems to me that you are\nimplicitly using the mental model of a relational DB (in which you cannot\nhave records in a table that simply \"miss a column\").\nHowever this is an artificial constraint that should not be imposed onto\nan API specification.\nThe most obvious user case for which assuming a non-existent property is\nequal to null is plain wrong is when you are using duck typing or any\nother introspective technique relying on the behaviour/structure of data to\ninfer business logic.\nA silly example: you might have a class Worker that subclasses to\nTranslator adding Translator.books. Now, if you are transferring data\nwithout metadata associated to it, you need the books attribute to\ndistinguish between the two models: a translator must have a booksproperty even if she/he has only translated business documents (in which\ncase it will be set to null.\nAs I said, the example above it a little silly, but especially when you\nhave no control over the source of the data (as in the OP case, where (s)he\nuses a legacy DB), duck typing is a very useful technique.\nThe definitive reason not to go with the assumption you suggested is\nhowever not the user caes, but the fact the two are simply not just the\nsame thing in terms of formal logic (and thus implementation in many\nlanguages).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/459#issuecomment-36421400\n.\n. Kevin,\n\nCan you please try upgrading the reflections.org library as such -\n<dependency>\n        <groupId>org.reflections</groupId>\n        <artifactId>reflections</artifactId>\n        <version>0.9.9-RC1</version>\n    </dependency>\nI'm curious to know whether this would solve this issue. We already have a\nticket to upgrade the dependency as it proved useful in many other cases,\nand it may be relevant to yours as well (please make sure maven omits the\nswagger reflections dependency as it should).\nOn Mon, Feb 17, 2014 at 2:55 AM, Kevin Breidenbach <notifications@github.com\n\nwrote:\nWe've tried using the reflections scanner, it doesn't appear to work at\nall. Here is our resource config class:\npublic class MyServices extends org.glassfish.jersey.server.ResourceConfig\n{\npublic MyServices() {\n// Providers - JSON.\nregister(FasterXmlJacksonFeature.class);\n//Filter - CORS\nregister(CrossDomainFilter.class);\n//Jackson formatting\nregister(JacksonConfigurator.class);\n// Validation.\nregister(ValidationConfigurationContextResolver.class);\n// Providers - Swagger.\nregister(ApiListingResourceJSON.class);\nregister(ReflectiveJaxrsScanner.class);\nregister(JerseyApiDeclarationProvider.class);\nregister(JerseyResourceListingProvider.class);\nproperty(ServerProperties.BV_SEND_ERROR_IN_RESPONSE, true);\n}\n}\nOn Sun, Feb 16, 2014 at 4:14 PM, chadhahn notifications@github.com\nwrote:\n\nThis is wrong. You don't have to annotate the implementation if you use\nthe reflections scanner, which was the whole purpose of using that.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/wordnik/swagger-core/issues/460#issuecomment-35217876>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/460#issuecomment-35221923\n.\n. Then I imagine Tony's reply stands for now.\n\nOn Tue, Feb 18, 2014 at 5:41 PM, Kevin Breidenbach <notifications@github.com\n\nwrote:\nI tried that, but still got the same result (the fully qualified class\nname being displayed). I even tried excluding the artifact from the swagger\ndependency just to see if that worked:\ncom.wordnik\nswagger-jersey2-jaxrs_2.10\n1.3.2\njsr311-api\njavax.ws.rs\norg.reflections\nreflections\norg.reflections\nreflections\n0.9.9-RC1\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/460#issuecomment-35396557\n.\n. @HelenGao, I think we should continue this discussion in the google group (since you left a message there as well). If we'll find an actual issue, you're more than welcome to open a new one.\n. Can you provide a few more details? What have you done so far?\n\nOn Fri, Feb 21, 2014 at 1:38 PM, poonkothai408425\nnotifications@github.comwrote:\n\nI am facing the same issue.\nI used java jersey swagger.API is not listing.\ncan any one provide solution for java jaxrs swagger?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/463#issuecomment-35723522\n.\n. @HelenGao - I believe Tony is helping you work this out in the mailing list. Can I close the issue here?\n. @to-kra - can you open a new issue or even just send the question to the google group. It'd be difficult to track this way.\n. @to-kra - great, thanks for the update!\n. @to-kra: considering that version has a critical bug that produces invalid specs, I'd recommend you find a way to make the upgrade. If there are other issues relating to multiple instances (which should have been solved already), please raise them in separate tickets.. Let's keep it in the google group.. no point iterating over it in two places.\n. It would really help if you can attach your web.xml.\n\nOn Fri, Feb 21, 2014 at 4:35 PM, poonkothai408425\nnotifications@github.comwrote:\n\nIn my project there are 26 rest services are there.\nI have to implementswagger for all rest services.\nI followed the JAXRS tutorial.\ni ran the swagger in chrome using the below link\nhttp://localhost:8080/rest/api-docs.\nI am getting below output\n{\"apiVersion\":\"0.0\",\"swaggerVersion\":\"1.2\"}\ni couldnt able to get the API List.\nweb.xml configured as per below tutorial.\nhttps://github.com/wordnik/swagger-core/wiki/Java-JAXRS-Quickstart\nThanks in advance\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/470#issuecomment-35734983\n.\n. You can't attach files here. As suggested, please continue this in the google group.\n. I would really like to help, but unfortunately this is not working.\nPlease just join the google group -\nhttps://groups.google.com/forum/#!forum/swagger-swaggersocket and post the\ninformation there. It'll work a lot smoother this way. I promise you, the\nsolution would be simple, but we need to work together.\n\nOn Fri, Feb 21, 2014 at 5:38 PM, poonkothai408425\nnotifications@github.comwrote:\n\nhope u get my deployment descriptor.\nPlease revert back\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/470#issuecomment-35741308\n.\n. Would it be possible for you to create a simple app that reproduces this problem and share it?\n. Same as https://github.com/wordnik/swagger-core/issues/473#issuecomment-36221067.\n. @poonkothai408425, while I appreciate you're having some issues integrating Swagger with your application, opening the same issues here and in the google group doesn't help anyone. It takes up more time to go over both places and instead of spending time on assisting you, we end up spending time cleaning up.\n\nIf you have questions regarding the integration, please keep them in the google group and we'll do our best to help. Please open issues only if after talking with us we assured you that it is indeed an issue that should be opened.\n. This is a great set of points you're raising, and this is how I see it.\nProblem 1\nThere's definitely a duplication here, and we're aware of it. We plan on making a change in the future - currently the goal is to remove the type from the operation itself and move everything into the responseMessages field. Since any of the 2XX status codes can be used to give a positive response, it makes sense to declare exactly which one is used (and one must be used).\nAs for the current behavior in case both exist - it is undefined. There's no distinct 'this overrides that'. My suggestion for now would be to simply avoid creating the duplication and use the type as that's mandatory.\nProblem 2\nThe way I see it, and @fehguy may correct me, the message part in the responseMessage is meant as a description of the reason behind the status code, but not necessarily the response from the server. Think of it as you would any of the description fields throughout the spec.\nProblem 3\nI agree with you on this point. I'm in the process of writing up a new Java sample and tutorial now, and noticed that I want to return 400 to say that at least one of the fields is missing, but mention which one is missing. Though if you look at the response to Problem 2, if the message is just a general description of what can cause this error and not the error itself (which may change dynamically), then there's no real need for overloading.\n. @eljonny - the general solution path would be to upgrade to the latest 1.5 version.\n. This is an issue that's been opened and closed on a different version of swagger-core. If you're experiencing issues, please file a new ticket.. Just tested - no crash here.\n. Using allowMultiple and an array value type are mutually exclusive. Do you\nexperience the same problem with types that are not array?\nTo be clear, 'allowMultiple`suggest a different way to pass multiple values\nthan an array does.\nOn Wed, Mar 5, 2014 at 11:59 AM, valdemon notifications@github.com wrote:\n\nHi,\nI'm using the swagger-jaxrs_2.10:1.3.2 (with swagger-core_2.10:1.3.2) and\nexperienced missing 'allowMultiple' attribute in the generated API JSON\nspec, when using the ApiParam(allowMultiple=true...) annotation.\nThe annotation attribute is not marked as deprecated. Is it missing in\nJSON by intention (eg. because being redundant as of usage of the 'array'\ntype) or is it a bug?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/478\n.\n. Let's try and organize a few things - I completely understand why the\ncurrent state may be confusing (which is why we're rewriting the\ndocumentation).\n\nFirst off, swagger-core never had a 2.9.x version. The 2.9.x vs 2.10.x in\nthe library name denote the Scala version that was used to compile the code\n(that is, 2.9 vs 2.10). Current swagger-core version is 1.3.2/1.3.3.\nThat said, the current Swagger-Core version supports Swagger Spec version\n1.2 I am not familiar with the history of all changes that were made over\ntime in the spec, and it's possible that allowMultiple was used initially\nover an array value.\nallowMultiple is currently not deprecated, but may change in functionality\nin future spec versions.\nAn array would lead to a value in the format of [value1, value2, value3].\n'allowMultiple', when used in a query parameter, would lead the values\nbeing coma separated, so that the url would look like\nhttp://path/to/resource?paramName=value1,value2,value3.\nSo while both allow multiple values, the way they are used is a bit\ndifferent. Does this clear things up?\nOn Wed, Mar 5, 2014 at 4:30 PM, valdemon notifications@github.com wrote:\n\nI've been using the 'allowMultiple' since the swagger-core 2.9.x.\nFor now, i can't find anything about this attribute in the Wiki:\nhttps://github.com/wordnik/swagger-core/wiki/Parameters, and there's a\nstatement there: \"When sending multiple values, the array type should be\nused\".\nWhen using the swagger-jaxrs lib, in cases that the List or Type[] is used\nfor the JAXRS service method query param, the 'array' type is declared in\nthe generated JSON spec. (which is fine), but the 'allowMultiple' is not\nthere any more (as it was there before - in 2.9.x, i guess), when declared\nin ApiParam annotation.\nProbably making assumptions using the 'allowMultiple' in this case was my\nmistake. Actually the 'array' type is enough to assume that the multiple\nvalues can come.\nAbove concerns the issue wordnik/swagger-ui#304https://github.com/wordnik/swagger-ui/pull/304,\nwhere the 'allowMultiple' attr was inspected. I decided to change that\nfunctionality and use the 'array' type check instead. Just wanted to know\nif the 'allowMultiple' is kinda deprecated..\nI can't find any documentation about the 'allowMultiple' definition & use\ncases. Could you provide an example when this attribute could be used for\nnon-array param cases?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/478#issuecomment-36747015\n.\n. That actually depends on the mime-type the application consumes. Assuming\nJSON, it would look like\nhttp://path/to/resource?paramName=[value1,value2,value3]\nPersonally, I would avoid using an array of values in a query parameter\nas the value would also need to be URL encoded. That said, it doesn't mean\nit's not possible.\n\nI can't really comment regarding the open Swagger-UI issue.\nOn Wed, Mar 5, 2014 at 5:40 PM, valdemon notifications@github.com wrote:\n\nOk, thanks for clarifying that.\nHow should the example request URL look like, when using the 'array' type\nfor the query parameter? Could you please align this somehow with the\ndiscussions @ wordnik/swagger-ui#118https://github.com/wordnik/swagger-ui/issues/118?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/478#issuecomment-36754938\n.\n. Okay, I may have got it wrong regarding how it would work with query\nparams, and your sample makes sense. Keep in mind that with primitives that\nwould be easy, but with complex models, that's where it'd get more\ncomplicated (hence the mime types, since the models need to be\nde/serialized somehow).\n\nI can't really give you an actual use case for the use of 'allowMultiple',\nhowever the swagger-ui issue you previously linked to shows some samples\nthat may be relevant/common with other frameworks.\nOn Wed, Mar 5, 2014 at 6:36 PM, valdemon notifications@github.com wrote:\n\nhmm, now i'm really confused.\nAs far as I know, the mime-type (or Content-type header) concerns the BODY\npart of the request not the query params.\nMaybe i'll describe my use case:\n1. Using the JAXRS implementation I declare the REST service with a GET\nmethod, which takes the array (or java.util.List) of primitives (eg\nIntegers) annotated with swagger's ApiParam.\n2. swagger-jaxrs 'DefaultJaxrsApiReader' generates the JSON spec with the\nparameter of the 'array' type by automation in such a case.\n3. JAXRS implementation converts & injects the request parameter\nautomatically to the array or List method parameter as long as the request\nquery is in a format like '...&param=value1&param=value2...'.\nAs the No.3 is kinda standard for the JAXRS reference implementations, and\nthe request query syntax: '...param=value1&param=value2...' is the most\nused \"standard\", i'd like to have an interactive REST documentation, which\nproduces the request in an expected by the REST service way, from some\nfriendly UI (comma separated string in a textbox, multi-select list box\netc.). But that's rather swagger-js & swagger-ui related (I've put some\npropositions for that with my latest pull requests).\nThe 'allowMultiple' seems to be superfluous in my use case. Question is if\nthere's really a use case, which fits for using this attribute (especially\nin case of query params)?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/478#issuecomment-36762615\n.\n. @brutuscat - that's a naming convention, not a value one. By default, JAX-RS will use multiple instances of the same name (so key=X&key=Y). If you want to end up with key[]=value you'd have to make sure to translate that to the parameter name as well.\n. @brutuscat - this project is about Java in general and JAX-RS more specifically right now (with some support for other frameworks). It doesn't need to support conventions that don't exist here.\n\nAs for URI templating, that's an entirely different issue that's been discussed in our google groups and swagger-spec repo several times. Please try to look those up.\n. https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/main/java/io/swagger/core/filter/SwaggerSpecFilter.java\n. Support has been added via https://github.com/swagger-api/swagger-core/pull/2681.. Actually, it does support it, the docs are wrong.\nAs for the UI module - that may be correct, but the issue should be opened there - https://github.com/wordnik/swagger-ui - would you mind reopening there?\n. Swagger does not support the full JSON Schema, especially not the\nvalidation part of it.\nIn future versions of the spec, we intend to extend the support based on\nrequested features.\nOn Thu, Mar 13, 2014 at 2:28 AM, Damien Lebrun notifications@github.comwrote:\n\njson-schema patternProperties property allows to describe an object\nallowed property by a regex pattern:\nhttp://json-schema.org/latest/json-schema-validation.html#anchor64\nDoes swagger support it? if not how would one add support for it?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/484\n.\n. @Paave  - Thank you for providing a solution. Feel free to reopen it if you feel the need.\n. @elisid, @Paave - can any of you possibly provide a test case we can use to see the problem and debug it? If you create one, please remember to provide environment details (such as which JEE and container and versions are used).\n. @lluu - you can't attach files by replying to the email with the attachments.\nYou need to upload them somewhere and link to them from here.\n. @perabello - Okay, so can this be closed?\n. In order to control the order, you have different variables in their respective annotations:\n1. https://github.com/wordnik/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/Api.java#L43\n2. https://github.com/wordnik/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiOperation.java#L51\n3. https://github.com/wordnik/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiModelProperty.java#L70\n\nDo these help you?\n. Is the json output ordered properly?\nOn Wed, Apr 2, 2014 at 5:25 PM, perabello notifications@github.com wrote:\n\nI already use the annotation \"position\" for the service.\nThey are ordered in \"strapdown.html\", but not in swagger-ui.\nShall I open a issue for swagger-ui?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/493#issuecomment-39336264\n.\n. I'm referring to that generated json.\n\nOn Wed, Apr 2, 2014 at 7:13 PM, perabello notifications@github.com wrote:\n\nWhat do you mean with json output ordered?\nI only generate the file \"strapdown.html\" and a forlder with json that\ndefine the services documented\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/493#issuecomment-39350068\n.\n. And just to be sure, how is the json generated? Using swagger-core directly\nor another tool that wraps it (like the maven-swagger plugin)?\n\nOn Thu, Apr 3, 2014 at 11:26 AM, perabello notifications@github.com wrote:\n\nNo. The creating json order (on execute maven) is not the order specified\nby annotation \"position\".\nAnd in file \"service.json\" the order is not the correct too.\nIn swagger-ui, services are showed with same order that in service.json\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/493#issuecomment-39425178\n.\n. do you expose the api-docs endpoint as well or just use\nswagger-maven-plugin? I'm trying to isolate whether it's swagger-core that\ndoesn't respect 'position' or rather swagger-maven-plugin.\n\nOn Thu, Apr 3, 2014 at 4:33 PM, perabello notifications@github.com wrote:\n\nI use swagger-maven-plugin to generate json and strapdown.html\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/493#issuecomment-39451041\n.\n. Would it be possible to add the swagger servlet just to test it?\n\nOn Thu, Apr 3, 2014 at 4:50 PM, perabello notifications@github.com wrote:\n\nI only use json generated by swagger-maven-plugin to expose the api\ndocumentation with swagger-ui.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/493#issuecomment-39452853\n.\n. I'm not sure what you mean by 'cast json to my api'.\n\nThe next step is probably me testing the 'position' on my own. If it works\nproperly, then it's a swagger-maven-plugin issue.\nIf it doesn't, then there should be a separate issue on this on\nswagger-core.\nI'll probably be able to get around to testing it later on today.\nOn Thu, Apr 3, 2014 at 4:59 PM, perabello notifications@github.com wrote:\n\nIf I cast json to my api (by a servlet), then the services are ordered\nwell.\nBut it does not run, because I can not set scope to \"compile\" when I\npackage the war.\nWhat else I should test?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/493#issuecomment-39453881\n.\n. In that case, you should open an issue on that project.\n\nOn Thu, Apr 3, 2014 at 5:09 PM, perabello notifications@github.com wrote:\n\nI think that the problem is with swagger-maven-plugin.\nWhen I test the annotation \"position\" in a example with a servlet it runs\nwell.\nBut when I use the swagger-maven-plugin, it stops working.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/493#issuecomment-39455095\n.\n. Shouldn't this be opened on Swagger-UI?\n. It was never closed.\n. @tavoda @fehguy was talking about the limitations of Java with type erasure as the ability to read and retrieve the types. Changes to the spec have nothing to do with swagger-core. If you'd like to see changes there, please open a ticket on the spec itself.\n. If you feel things can be improved, you're more than welcome to submit PRs with changes.\n. You'd need to create a specific type for each service, yes. https://github.com/OAI/OpenAPI-Specification/issues/555 covers this as a feature request for the next version as there's no easy way to define wrappers for responses.\n. @feliperoos you commented on an issue from over a year ago, which is not even relevant to the current stable version. If you have an issue with the 1.5.X versions, please open a new ticket and provide details so we can try and help. Keep in mind that by default the new swagger-core doesn't support JAXB annotations but the support can be added manually.\n. I believe the solution for your issue can be found here -\nhttp://stackoverflow.com/questions/14288856/jersey-2-injection-source\n\nOn Tue, Mar 25, 2014 at 12:47 AM, Salimane Adjao Moustapha \nnotifications@github.com wrote:\n\nThe source code at https://github.com/salimane/java-jersey2 is basically\na slighly modified version of the sample java-jersey2 sample in\nswagger-core. The relevant change is herehttps://github.com/salimane/java-jersey2/blob/master/src/main/java/com/salimane/swagger/api/resource/v1/UserResource.java#L50.\nBut I'm getting the following error when trying to run :\nSEVERE: Following issues have been detected:\nWARNING: No injection source found for a parameter of type public javax.ws.rs.core.Response com.salimane.swagger.api.resource.v1.UserResource.createUser2(java.lang.String,com.salimane.swagger.api.model.User,java.util.List) at index 1.\nWARNING: A resource model has ambiguous (sub-)resource method for HTTP method POST and input mime-types as defined by @Consumes and @Produces annotations at Java methods public javax.ws.rs.core.Response com.salimane.swagger.api.resource.v1.UserResource.createUser2(java.lang.String,com.salimane.swagger.api.model.User,java.util.List) and public javax.ws.rs.core.Response com.salimane.swagger.api.resource.v1.UserResource.createUser(com.salimane.swagger.api.model.User) at matching regular expression /v1/user. These two methods produces and consumes exactly the same mime-types and therefore their invocation as a resource methods will always fail.\nMar 24, 2014 3:29:50 PM org.apache.catalina.core.ApplicationContext log\nSEVERE: StandardWrapper.Throwable\norg.glassfish.jersey.server.model.ModelValidationException: Validation of the application resource model has failed during application initialization.\n[[FATAL] No injection source found for a parameter of type public javax.ws.rs.core.Response com.salimane.swagger.api.resource.v1.UserResource.createUser2(java.lang.String,com.salimane.swagger.api.model.User,java.util.List) at index 1.; source='ResourceMethod{httpMethod=POST, consumedTypes=[], producedTypes=[application/json, application/xml], suspended=false, suspendTimeout=0, suspendTimeoutUnit=MILLISECONDS, invocable=Invocable{handler=ClassBasedMethodHandler{handlerClass=class com.salimane.swagger.api.resource.v1.UserResource, handlerConstructors=[org.glassfish.jersey.server.model.HandlerConstructor@1cab6b8]}, handlingMethod=public javax.ws.rs.core.Response com.salimane.swagger.api.resource.v1.UserResource.createUser2(java.lang.String,com.salimane.swagger.api.model.User,java.util.List), parameters=[Parameter [type=class java.lang.String, source=username, defaultValue=null], Parameter [type=class com.salimane.swagger.api.model.User, source=Created user object, defaultValue=null], Pa\n rameter [type=interface java.util.List, source=List of user object, defaultValue=null]], responseType=class javax.ws.rs.core.Response}, nameBindings=[]}', [FATAL] A resource model has ambiguous (sub-)resource method for HTTP method POST and input mime-types as defined by @Consumes and @Produces annotations at Java methods public javax.ws.rs.core.Response com.salimane.swagger.api.resource.v1.UserResource.createUser2(java.lang.String,com.salimane.swagger.api.model.User,java.util.List) and public javax.ws.rs.core.Response com.salimane.swagger.api.resource.v1.UserResource.createUser(com.salimane.swagger.api.model.User) at matching regular expression /v1/user. These two methods produces and consumes exactly the same mime-types and therefore their invocation as a resource methods will always fail.; source='org.glassfish.jersey.server.model.RuntimeResource@23a1eaf3']\n    at org.glassfish.jersey.server.ApplicationHandler.initialize(ApplicationHandler.java:427)\n    at org.glassfish.jersey.server.ApplicationHandler.access$500(ApplicationHandler.java:162)\n    at org.glassfish.jersey.server.ApplicationHandler$3.run(ApplicationHandler.java:287)\n    at org.glassfish.jersey.internal.Errors$2.call(Errors.java:289)\n    at org.glassfish.jersey.internal.Errors$2.call(Errors.java:286)\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:315)\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:297)\n    at org.glassfish.jersey.internal.Errors.processWithException(Errors.java:286)\n    at org.glassfish.jersey.server.ApplicationHandler.(ApplicationHandler.java:284)\n    at org.glassfish.jersey.servlet.WebComponent.(WebComponent.java:302)\n    at org.glassfish.jersey.servlet.ServletContainer.init(ServletContainer.java:167)\n    at org.glassfish.jersey.servlet.ServletContainer.init(ServletContainer.java:349)\n    at javax.servlet.GenericServlet.init(GenericServlet.java:160)\n    at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1280)\n    at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1193)\n    at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:1088)\n    at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:5176)\n    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5460)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:724)\nAny idea what I'm doing wrong ?\nThanks\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/507\n.\n. If you're not uploading files, try removing the jersey-media-multipart dependency (that is, make sure it's not pulled in by any of the other dependencies as well).\n. and I assume you can't upgrade to 0.8.1?\n\nOn Tue, Mar 25, 2014 at 9:05 PM, jeremyxxdman notifications@github.comwrote:\n\nBecause I am using swagger-springmvc 0.6.5, which depends on swagger-core\n1.2.0\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/510#issuecomment-38606777\n.\n. Of course. First of all, you should upgrade to swagger-core 1.3.2 if possible (soon to be 1.3.3).\nThen you need to browse to the root of your application with the addition of /api-docs.\n\nSo if your application runs at http://localhost/app, go to http://localhost/app/api-docs\nThat would give you a list of resources available. If you have a resource books, go to http://localhost/app/api-docs/books and you'll get the swagger schema for it, including the models.\n. Looks like your message was cut off. \n. That's just a rendering of the model schema. The way it appears in the UI\nis not really a valid json (and definitely not a json schema).\nAfter all, if you click on the Model Schema link in Swagger UI, you get\njust the model schema as it is.\nIt's just a more human-readable format. You can probably look into\nSwagger-UI's code and see how the transformation is done, but again, it's\nnot not even a valid json.\nOn Wed, Mar 26, 2014 at 7:34 PM, jeremyxxdman notifications@github.comwrote:\n\nI modified it\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/511#issuecomment-38714418\n.\n. Hello Salimane,\n\nThe ApiAuthorizationFilterImpl is just an example of how to filter out\noperations descriptions (that is, they don't block the actual\noperations). Just want to be clear on that. Swagger does not affect the API\nitself but provides you of a way to document it.\nBasic Authentication control can be supported in different means, either by\nyour web server (tomcat, jetty, and so on) or using software mechanism\n(Spring security, Apache Shiro and others).\nOn Wed, Mar 26, 2014 at 5:17 PM, Salimane Adjao Moustapha \nnotifications@github.com wrote:\n\nHi,\nIt seems there is no way to do a browser pop up basic authentication\nwithout touching tomcat-users.xml. Looking at ApiAuthorizationFilterImpldoesn't help. I just want a pop up to be displayed upon requesting the\nfirst api endpoint, then have ApiAuthorizationFilterImpl take care of the\nauthentication using Basic Authentication.\nAnyone has some ideas ?\nThanks\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/512\n.\n. There are examples out there. This is how you'd do it if you use Jersey,\nfor example - https://jersey.java.net/documentation/latest/security.html.\n\nOn Wed, Mar 26, 2014 at 5:59 PM, Salimane Adjao Moustapha \nnotifications@github.com wrote:\n\nYep you are right ApiAuthorizationFilterImpl is just a sample. I thought\nit would be easier to find a very simple basic auth that doesn't depend on\nweb servers\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/512#issuecomment-38702047\n.\n. @ankitjaininfo - there are a few ways to disable Swagger in production (including just removing the exposed servlet).\n\nAs @davidecavestro  mentioned, you can use com.wordnik.swagger.jaxrs.config.BeanConfig to initialize Swagger rather than use web.xml. In fact, you can search the google group for information on how to configure Swagger without a web.xml (hence, programmatically).\nFor example, take a look at the following code:\n``` java\n@WebListener\npublic class SwaggerInitializer implements ServletContextListener {\npublic void contextInitialized(ServletContextEvent servletContextEvent) {\n    BeanConfig beanConfig = new BeanConfig();\n    beanConfig.setVersion( \"1.0.2\" );\n    beanConfig.setResourcePackage( \"com.company.swagger.domain.rest\" ); // replace with your packages\n    beanConfig.setBasePath( \"http://localhost:8080/myApp/resources/\" );\n    beanConfig.setDescription( \"My RESTful resources\" );\n    beanConfig.setTitle( \"My RESTful API\" );\n    beanConfig.setScan( true );\n}\n\npublic void contextDestroyed(ServletContextEvent servletContextEvent) {\n}\n\n}\n```\n. @swaggering - I saw your question on SO as well. Since you're probably using swagger-springmvc, you should check their documentation or open an issue on their repository. A solution that may work here may not work there.\n. Probably an environment issue as it works fine on my mac.\nHow mvn command do you use exactly to build?\nAlso, is there a reason why you're trying to build it on your own?\nOn Fri, Mar 28, 2014 at 3:42 AM, moxiegirl notifications@github.com wrote:\n\nMy environment\nApache Maven 3.0.4 (r1232337; 2012-01-17 00:44:56-0800)\nMaven home: /usr/share/maven\nJava version: 1.6.0_65, vendor: Apple Inc.\nJava home: /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home\nDefault locale: en_US, platform encoding: MacRoman\nOS name: \"mac os x\", version: \"10.8.5\", arch: \"x86_64\", family: \"mac\"\nTests in error:\nshould honor a path param target at the class\nlevel(JavaPathParamTargetTest): 2 was not equal to 3\nTests run: 19, Failures: 0, Errors: 1, Skipped: 0\n[INFO]\n[INFO] Reactor Summary:\n[INFO]\n[INFO] swagger-jaxrs ..................................... FAILURE [5.227s]\n[INFO] swagger-jersey-jaxrs .............................. SKIPPED\n[INFO] swagger-jersey2-jaxrs (Jersey 2.x support) ........ SKIPPED\n[INFO] swagger-servlet ................................... SKIPPED\n[INFO] swagger-oauth2-server ............................. SKIPPED\n[INFO]\n[INFO] BUILD FAILURE\n[INFO]\n[INFO] Total time: 5.772s\n[INFO] Finished at: Thu Mar 27 17:34:01 PDT 2014\n[INFO] Final Memory: 20M/81M\n[INFO]\n[ERROR] Failed to execute goal\norg.apache.maven.plugins:maven-surefire-plugin:2.10:test (default-test) on\nproject swagger-jaxrs_2.10: There are test failures.\n[ERROR]\n[ERROR] Please refer to\n/Users/mary/GitRepo/swagger-core/modules/swagger-jaxrs/target/surefire-reports\nfor the individual test results.\n[ERROR] -> [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute\ngoal org.apache.maven.plugins:maven-surefire-plugin:2.10:test\n(default-test) on project swagger-jaxrs_2.10: There are test failures.\nPlease refer to\n/Users/mary/GitRepo/swagger-core/modules/swagger-jaxrs/target/surefire-reports\nfor the individual test results.\nat\norg.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:213)\nat\norg.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\nat\norg.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\nat\norg.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\nat\norg.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\nat\norg.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\nat\norg.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\nat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)\nat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)\nat org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)\nat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)\nat org.apache.maven.cli.MavenCli.main(MavenCli.java:141)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:597)\nat\norg.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)\nat\norg.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)\nat\norg.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)\nat\norg.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)\nCaused by: org.apache.maven.plugin.MojoFailureException: There are test\nfailures.\nPlease refer to\n/Users/mary/GitRepo/swagger-core/modules/swagger-jaxrs/target/surefire-reports\nfor the individual test results.\nat\norg.apache.maven.plugin.surefire.SurefireHelper.reportExecution(SurefireHelper.java:87)\nat\norg.apache.maven.plugin.surefire.SurefirePlugin.writeSummary(SurefirePlugin.java:641)\nat\norg.apache.maven.plugin.surefire.SurefirePlugin.handleSummary(SurefirePlugin.java:615)\nat\norg.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:137)\nat\norg.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:98)\nat\norg.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)\nat\norg.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)\n... 19 more\n[ERROR]\n[ERROR]\n[ERROR] For more information about the errors and possible solutions,\nplease read the following articles:\n[ERROR] [Help 1]\nhttp://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\nRunning JavaPathParamTargetTest\n17:34:00.580 [main] DEBUG c.w.swagger.jaxrs.JaxrsApiReader - checking for\nimplicits\n17:34:00.581 [main] DEBUG c.w.swagger.jaxrs.JaxrsApiReader - checking for\nimplicits\n17:34:00.583 [main] DEBUG c.w.swagger.jaxrs.JaxrsApiReader - checking for\nimplicits\n17:34:00.583 [main] DEBUG c.w.swagger.core.util.ModelUtil$ - adding\ndependent model java.lang.String\n17:34:00.583 [main] DEBUG c.w.swagger.core.util.ModelUtil$ - adding\ndependent model java.lang.String\n17:34:00.583 [main] DEBUG c.w.swagger.core.util.ModelUtil$ - adding\ndependent model java.lang.String\n17:34:00.584 [main] DEBUG c.w.swagger.core.util.ModelUtil$ - adding\ndependent model java.lang.String\n17:34:00.584 [main] DEBUG c.w.swagger.core.util.ModelUtil$ - adding\ndependent model java.lang.String\n17:34:00.584 [main] DEBUG c.w.swagger.core.util.ModelUtil$ - adding\ndependent model java.lang.String\n17:34:00.584 [main] DEBUG c.w.swagger.core.util.ModelUtil$ - adding\ndependent model java.lang.String\n17:34:00.584 [main] DEBUG c.w.swagger.core.util.ModelUtil$ - adding\ndependent model Array[int]\n17:34:00.584 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nclass class testmodels.JavaSample\n17:34:00.584 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String testmodels.JavaSample.getName()\n17:34:00.585 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype java.lang.String against 11 keys, got java.lang.String\n17:34:00.585 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\njava.lang.String\n17:34:00.585 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype String against 11 keys, got string\n17:34:00.585 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype string against 11 keys, got string\n17:34:00.585 [main] DEBUG c.w.s.converter.ModelPropertyParser - added\nparam type java.lang.String for field theName\n17:34:00.585 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String testmodels.JavaSample.getValue()\n17:34:00.585 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype java.lang.String against 11 keys, got java.lang.String\n17:34:00.585 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\njava.lang.String\n17:34:00.586 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype String against 11 keys, got string\n17:34:00.586 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype string against 11 keys, got string\n17:34:00.586 [main] DEBUG c.w.s.converter.ModelPropertyParser - added\nparam type java.lang.String for field theValue\n17:34:00.586 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String testmodels.JavaSample.getId()\n17:34:00.586 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype java.lang.String against 11 keys, got java.lang.String\n17:34:00.587 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\njava.lang.String\n17:34:00.587 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype String against 11 keys, got string\n17:34:00.587 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype string against 11 keys, got string\n17:34:00.587 [main] DEBUG c.w.s.converter.ModelPropertyParser - added\nparam type java.lang.String for field id\n17:34:00.587 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nclass class java.lang.Object\n17:34:00.587 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final void java.lang.Object.wait() throws\njava.lang.InterruptedException\n17:34:00.587 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String java.lang.Object.toString()\n17:34:00.587 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public native int java.lang.Object.hashCode()\n17:34:00.588 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final native java.lang.Class java.lang.Object.getClass()\n17:34:00.588 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\nnull\n17:34:00.588 [main] DEBUG c.w.s.converter.ModelPropertyParser - skipping\nclass\n17:34:00.588 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final native void java.lang.Object.notify()\n17:34:00.588 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final native void java.lang.Object.notifyAll()\n17:34:00.589 [main] DEBUG c.w.swagger.core.util.ModelUtil$ - loading int,\nArray\n17:34:00.590 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nclass class testmodels.JavaSample\n17:34:00.590 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String testmodels.JavaSample.getName()\n17:34:00.590 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype java.lang.String against 11 keys, got java.lang.String\n17:34:00.590 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\njava.lang.String\n17:34:00.590 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype String against 11 keys, got string\n17:34:00.590 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype string against 11 keys, got string\n17:34:00.590 [main] DEBUG c.w.s.converter.ModelPropertyParser - added\nparam type java.lang.String for field theName\n17:34:00.590 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String testmodels.JavaSample.getValue()\n17:34:00.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype java.lang.String against 11 keys, got java.lang.String\n17:34:00.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\njava.lang.String\n17:34:00.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype String against 11 keys, got string\n17:34:00.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype string against 11 keys, got string\n17:34:00.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - added\nparam type java.lang.String for field theValue\n17:34:00.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String testmodels.JavaSample.getId()\n17:34:00.592 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype java.lang.String against 11 keys, got java.lang.String\n17:34:00.592 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\njava.lang.String\n17:34:00.592 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype String against 11 keys, got string\n17:34:00.592 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype string against 11 keys, got string\n17:34:00.592 [main] DEBUG c.w.s.converter.ModelPropertyParser - added\nparam type java.lang.String for field id\n17:34:00.592 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nclass class java.lang.Object\n17:34:00.592 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final void java.lang.Object.wait() throws\njava.lang.InterruptedException\n17:34:00.592 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String java.lang.Object.toString()\n17:34:00.593 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public native int java.lang.Object.hashCode()\n17:34:00.593 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final native java.lang.Class java.lang.Object.getClass()\n17:34:00.593 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\nnull\n17:34:00.593 [main] DEBUG c.w.s.converter.ModelPropertyParser - skipping\nclass\n17:34:00.593 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final native void java.lang.Object.notify()\n17:34:00.594 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final native void java.lang.Object.notifyAll()\n17:34:00.594 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nclass class testmodels.JavaSample\n17:34:00.595 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String testmodels.JavaSample.getName()\n17:34:00.595 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype java.lang.String against 11 keys, got java.lang.String\n17:34:00.595 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\njava.lang.String\n17:34:00.595 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype String against 11 keys, got string\n17:34:00.595 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype string against 11 keys, got string\n17:34:00.595 [main] DEBUG c.w.s.converter.ModelPropertyParser - added\nparam type java.lang.String for field theName\n17:34:00.595 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String testmodels.JavaSample.getValue()\n17:34:00.596 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype java.lang.String against 11 keys, got java.lang.String\n17:34:00.596 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\njava.lang.String\n17:34:00.596 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype String against 11 keys, got string\n17:34:00.596 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype string against 11 keys, got string\n17:34:00.596 [main] DEBUG c.w.s.converter.ModelPropertyParser - added\nparam type java.lang.String for field theValue\n17:34:00.596 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String testmodels.JavaSample.getId()\n17:34:00.597 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype java.lang.String against 11 keys, got java.lang.String\n17:34:00.597 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\njava.lang.String\n17:34:00.597 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype String against 11 keys, got string\n17:34:00.597 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype string against 11 keys, got string\n17:34:00.597 [main] DEBUG c.w.s.converter.ModelPropertyParser - added\nparam type java.lang.String for field id\n17:34:00.597 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nclass class java.lang.Object\n17:34:00.598 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final void java.lang.Object.wait() throws\njava.lang.InterruptedException\n17:34:00.598 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String java.lang.Object.toString()\n17:34:00.598 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public native int java.lang.Object.hashCode()\n17:34:00.598 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final native java.lang.Class java.lang.Object.getClass()\n17:34:00.598 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\nnull\n17:34:00.598 [main] DEBUG c.w.s.converter.ModelPropertyParser - skipping\nclass\n17:34:00.598 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final native void java.lang.Object.notify()\n17:34:00.599 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final native void java.lang.Object.notifyAll()\n17:34:00.599 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nclass class testmodels.JavaSample\n17:34:00.600 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String testmodels.JavaSample.getName()\n17:34:00.600 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype java.lang.String against 11 keys, got java.lang.String\n17:34:00.600 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\njava.lang.String\n17:34:00.600 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype String against 11 keys, got string\n17:34:00.600 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype string against 11 keys, got string\n17:34:00.600 [main] DEBUG c.w.s.converter.ModelPropertyParser - added\nparam type java.lang.String for field theName\n17:34:00.600 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String testmodels.JavaSample.getValue()\n17:34:00.600 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype java.lang.String against 11 keys, got java.lang.String\n17:34:00.601 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\njava.lang.String\n17:34:00.601 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype String against 11 keys, got string\n17:34:00.601 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype string against 11 keys, got string\n17:34:00.601 [main] DEBUG c.w.s.converter.ModelPropertyParser - added\nparam type java.lang.String for field theValue\n17:34:00.601 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String testmodels.JavaSample.getId()\n17:34:00.601 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype java.lang.String against 11 keys, got java.lang.String\n17:34:00.601 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\njava.lang.String\n17:34:00.601 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype String against 11 keys, got string\n17:34:00.602 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating\ndatatype string against 11 keys, got string\n17:34:00.602 [main] DEBUG c.w.s.converter.ModelPropertyParser - added\nparam type java.lang.String for field id\n17:34:00.602 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nclass class java.lang.Object\n17:34:00.602 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final void java.lang.Object.wait() throws\njava.lang.InterruptedException\n17:34:00.602 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public java.lang.String java.lang.Object.toString()\n17:34:00.602 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public native int java.lang.Object.hashCode()\n17:34:00.602 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final native java.lang.Class java.lang.Object.getClass()\n17:34:00.602 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting\nnull\n17:34:00.603 [main] DEBUG c.w.s.converter.ModelPropertyParser - skipping\nclass\n17:34:00.603 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final native void java.lang.Object.notify()\n17:34:00.603 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing\nmethod public final native void java.lang.Object.notifyAll()\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.038 sec\n<<< FAILURE!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/514\n.\n. We don't have a specific example related to Spring Boot (it's impossible to\ngive examples for all configuration options out there).\nHowever, if you tell us what you're doing and what problems you encounter,\nwe should be able to guide you to the solution.\n\nOn Fri, Mar 28, 2014 at 6:30 PM, newtechfellas notifications@github.comwrote:\n\nis there an example of Jersey 1.x for JaxRs resource using Spring boot?\nI am trying to follow wiki and setup but running into problems and not\nable to bringup the UI.\nI posted a question in stackoverflowhttp://stackoverflow.com/questions/22698575/spring-boot-application-configuration-for-jaxrs-based-swagger.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/515\n.\n. It looks like someone added a comment there with a spring-boot sample. Try\nfollowing that.\n\nOn Mon, Apr 7, 2014 at 11:04 PM, Suman Jakkula notifications@github.comwrote:\n\nhttp://stackoverflow.com/questions/22921823/swagger-and-spring-boot-integration-throws-scannerexceptionis the problem I have.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/515#issuecomment-39776656\n.\n. I believe it should be inferred. \nint/Integer -> int32, float -> float, Date -> date and so on.\n\nOr are you looking for ways to override assumed format?\n. @tsandall - the issue was opened on swagger-core 1.3 which was Swagger 1.2. What do you find to be a problem though?\n. Sorry, I wasn't clear. Of course you should be able to control it manually, it's just that in many cases you'd opt for a wrapping class or using standard JSR303 annotations to provide with the additional restrictions, rather than manually do the processing within the method. Feel free to open a new ticket for it with the detailed use case, and we'll see how/if we'll support it.\n. @Isnogud77 - would it be possible for you to compile a sample app that reproduces this issue? Would be much easier to debug it.\n. To clarify - the \"type\" field is mandatory for any operation, so while\nthat may cause a bug in swagger-ui (which of course it shouldn't), the real\nissue the missing \"type\" field.\nOn Mon, Apr 14, 2014 at 7:04 PM, JimB123 notifications@github.com wrote:\n\nHi Tony - I think I've figured it out. Pretty non-obvious.\nIf you specify a \"type\" for the API, the \"produces\" tag is respected and\nsent in the request \"accept\" header. If you fail to specify a \"type\", then\n\"application/json\" is sent in the request \"accept\" header.\nIn my example above, if I just add:\n\"type\": \"string\",\nthe accept header is properly sent.\nThis is even more confusing due to the poor documentation of the \"type\"\ntag. See bug report: wordnik/swagger-ui#444https://github.com/wordnik/swagger-ui/issues/444\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/518#issuecomment-40384351\n.\n. Right now, these are different issues to be addressed.\n\nIf swagger-core produces operation documentations without a return type, it's an issue that needs to be addressed here.\nThe issue(s) with swagger-ui should be opened on that project. We're also very happy to receive user contributions and fixes to any of the Swagger projects, improving both capabilities and stability of them.\n. @fehguy - is this still an issue for 1.5? Doesn't the Jackson parsing read these annotations now?\n. Personally, I'd rather avoid using ASM with Swagger, but that's up to @fehguy.\nWhile probably won't solve the issue, can you try upgrading the reflections dependency to version 0.9.9-RC1?\n. @emilesvt - Thank you for bringing up this issue.\nIt made me realize that there's something not clear with the swagger-spec documentation, and I just updated it. Keep in mind this is not a change in the spec but rather a clarification.\nSo the spec states that there can be only one http method + path combination as a unique entity. This means that even though you may have multiple methods with @Produces and @Consumes on the same path + http method - Swagger would consider them to be the same operation (just accepting and producing different content types).\nThe actual bug here is that Swagger introspects your annotations, and probably overrides one definition over the other instead of collating them. Since there's no guarantee for the introspection order, you may sometime see one definition and sometime the other. \nI think it won't be a simple solution to just collate them as you may have conflicting descriptions and then it's difficult to decide how it should behave.\nNow, for something a bit unrelated (but related) - I assume the logic both methods perform is the same. Why do you end up duplicating the code instead of stating that the methods consumes/produces both variations? \n. Okay, I was not aware of this versioning paradigm, but let's face it, REST has almost no rules.\nAs stated in the previous answer, the Swagger specification does not support this kind of documentation as it identifies a unique resource as http method + path and not http method + path + mime type (for that matter, it won't recognize http method + path + header as a unique resource as well).\nI see a different issue here as well. Swagger has an apiVersion property that can/should be used for separating API versions.\nThis means that theoretically, you should have something like http://host/path/v1/api-docs and http://path/v2/api-docs (just as an example obviously) and each would serve the different API versions. This is for documentation only and does not imply how the versioning is controlled by the API itself.\nNow, theoretically, you can create two separate resource listings and api declarations (swagger terms) to include the relevant pieces and you'd be done. What concerns me is that if they're included in the same resource file in your code, it may be more difficult to separate.\nFirst thing's first though - do you agree there should be two different endpoints to describe the different api versions?\n. I think my previous question wasn't clear. I wasn't asking about the implementation of the REST API but rather of its documentation.\nI understand there's a paradigm stating it can/should be using the same URI's and that's perfectly fine.\nIn terms of documenting the API, personally, I would find that completely confusing. Say you see the same path, same http method, you'd have to dig in and pick the relevant version that you want to check the documentation for. So what I'm asking here is whether you agree that the documentation should have a different endpoint per version? This has absolutely nothing to do with how versioning is implemented by the application itself.\nThis is more a question of clarity and easy-of-use/read by your user. They can still use whichever version of the API they want (though if you interchangely support different version request by the same client, that can lead to a whole world of pain for you, but that's off topic really). \nThe reason I emphasize this is because it can effect what options you have for using Swagger with your current API design.\nSo again, are you okay with having two separate documentation endpoints for the API versions or is it vital for you to have everything in a single place?\n. Please resubmit against the develop branch.\n. Thanks, that's fixed now.\nPlease note that the main information about language integration is now part of the Swagger Spec repository.\n. Applies to https://github.com/swagger-api/swagger-core/milestones/v1.5.0-M1 as well.\n. It's quite possible that with newer versions of dropwizard things work a\nbit differently.\nI have very little experience with dropwizard, but if you could provide a\nsimple working dropwizard app (similar to our existing sample), I could\nplay with it and make it work.\nIt would probably take an existing user much less time to create a sample\nthan to me.\nOn 27 June 2014 20:07, P. Todd Decker notifications@github.com wrote:\n\nI'm having problems too integrating the Swagger dropwizard sample\napplication with dropwizard's own 'hello world' sample. In doing so, I\nnoticed that the Swagger dropwizard sample application uses\n'com.yammer.dropwizard' resources (with appropriate dependencies in the\nPOM):\nimport com.yammer.dropwizard.Service;\nimport com.yammer.dropwizard.config.Bootstrap;\nimport com.yammer.dropwizard.config.Environment;\nHowever, the dropwizard hello world from their site seems to have moved\nthese to 'io.dropwizard' and no longer seems to have the Service class\nreplaced instead by Application.\nimport io.dropwizard.Application;\nimport io.dropwizard.setup.Bootstrap;\nimport io.dropwizard.setup.Environment;\nCould it be that the swagger dropwizard example is out of date? Certainly\nit works because the POM pulls in the older com.yammer.dropwizard classes.\nBut, could the move to io.dropwizard be causing issues?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/528#issuecomment-47375100\n.\n. @shivam03164, @ptdecker - while not a working sample, yesterday while handling another dropwizard-related issue, someone pointed out https://github.com/federecio/dropwizard-swagger. Perhaps this would help with your integration (it's 0.7+).\n. This is a duplicate of #446. Closing.\n. @kiennguyen - I don't think so.\n. @fehguy - isn't this resolved in 1.5 already?\n. @fehguy - isn't this part of 1.5 already?\n. Closing as supported. Please resubmit an bug if still an issue.\n. If you feel there's a problem, it's better to open a new issue.\n. Not sure this is still an issue in 1.5, but should be checked.\n. Closing as no longer relevant.\n. This is not a swagger-core issue but rather a swagger specification one.\nCurrently, the response has to be unique based on the operation. The\noperation is a combination of a path and an HTTP operation.\nSince the query parameters do not take part of the path, they cannot be\nused to distinguish different operations.\n\nAs such, there's no way to describe what you're looking for. You need an\nexplicit way to define that based on query parameter X the response should\nbe Y.\nIf you feel strongly about this feature, please open a ticket about it in\nthe swagger-spec repo.\nFor now, if PersonDto extends PersonBasicDto, I'd suggest documenting the\noperation as returning PersonDto. You could explain in the operation notes\nthe difference in the output based on the query parameter value used.\nOn Thu, May 15, 2014 at 5:05 PM, perabello notifications@github.com wrote:\n\nI have a get operation that return two diferent classes (and it could be\nmore) depending on a parameter input.\nI could resolve it separating to multiple operations. One for each result\nclass.\nBut it forces me to add a path for the GET.\nExample: \\persons{id}\\info=?\nIt returns PersonDto o PersonBasicDto for FULL o BASIC parameter.\nAnd I don't want to publish something like: \\persons{id}\\full\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/569\n.\n. The model overriding is meant to be used to override they way models are\ndescribed, not to convert them to primitives (could be a nice idea, feel\nfree to open a specific issue about it).\nIf you want to 'replace' the type of it, you can use\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiImplicitParam.java#L58to\ndescribe that parameter instead.\n\nOn Wed, May 21, 2014 at 2:02 AM, Dan Jackson notifications@github.comwrote:\n\nI can't figure out how to override a class and specify that it should be a\nprimitive type\nFor example, given:\nclass Foo {\n  Date myDate}\nHow do I make swagger think that Dates should be strings, such that\nswagger-ui (and other clients following the spec) thinks that this is a\nvalid Foo object:\n{ \"myDate\": \"2014-01-01\" }\nI've tried this:\nhttps://github.com/wordnik/swagger-core/wiki/overriding-models\nHowever, that results in clients expecting that Foo objects look like this:\n{ \"myDate\": { \"value\": \"2014-01-01\" } }\nI also want to attach a description (for example) to the date class that\nspecify recognized formats.\nSo far I want this for things like dates (XMLGregorianCalendar),\nBigDecimal, and BigInteger, where our JSON serialization knows how to\nserialize/deserialize as strings in a particular format.\nThanks!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/573\n.\n. We're actually working on a stronger integration between Jackson and\nSwagger, so it may end up resulting with that. However, I'm not entirely\nsure at the moment.\nI think it would require additional manual work since what you're looking\nto do is unwrap the complex models into primitive types and I'm not sure\nthat can be done (or should be done) automatically.\n\nOn Wed, May 21, 2014 at 8:03 PM, Dan Jackson notifications@github.comwrote:\n\nI don't think that'll work, I want to replace the type for all requests,\nparameters and responses, and I can't do it through annotations.\nDates are a great example. Our (third-party provided) schema specifies\nthat the date fields have type XMLGregorianCalendar. We've told Jackson\n(the json serialization library we're using) that it should produce and\nconsume strings with a certain format (yyyy-MM-dd...) for all\nXMLGregorianCalendar fields.\nI need Swagger to reflect this fact.\nAnd a very similar story for BigDecimal. Because it's a global override,\nthere's no way I want to find and annotate each field with the target type,\neven if we could.\nCan this be the specific issue to provide this feature? Is there some\nother way I can word it to be more clear?\nThanks!\nDan\n\nOn May 21, 2014, at 4:30 AM, webron notifications@github.com wrote:\nThe model overriding is meant to be used to override they way models are\ndescribed, not to convert them to primitives (could be a nice idea, feel\nfree to open a specific issue about it).\nIf you want to 'replace' the type of it, you can use\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiImplicitParam.java#L58to\ndescribe that parameter instead.\nOn Wed, May 21, 2014 at 2:02 AM, Dan Jackson notifications@github.comwrote:\n\nI can't figure out how to override a class and specify that it should\nbe a\nprimitive type\nFor example, given:\nclass Foo {\nDate myDate}\nHow do I make swagger think that Dates should be strings, such that\nswagger-ui (and other clients following the spec) thinks that this is\na\nvalid Foo object:\n{ \"myDate\": \"2014-01-01\" }\nI've tried this:\nhttps://github.com/wordnik/swagger-core/wiki/overriding-models\nHowever, that results in clients expecting that Foo objects look like\nthis:\n{ \"myDate\": { \"value\": \"2014-01-01\" } }\nI also want to attach a description (for example) to the date class\nthat\nspecify recognized formats.\nSo far I want this for things like dates (XMLGregorianCalendar),\nBigDecimal, and BigInteger, where our JSON serialization knows how to\nserialize/deserialize as strings in a particular format.\nThanks!\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/wordnik/swagger-core/issues/573>\n.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/573#issuecomment-43785534\n.\n. This is an issue for https://github.com/wordnik/swagger-spec not swagger-core.\n. Also, specifically it seems related to https://github.com/wordnik/swagger-spec/issues/57 - feel free to expand there.\n. No worries, the contribution is appreciated!\n\nOn Thu, May 22, 2014 at 2:50 PM, IAmTheEye notifications@github.com wrote:\n\nThanks, I'll take it there. A bit confusing with all the subprojects ;-).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/575#issuecomment-43877641\n.\n. Can you list the libraries pulled in by maven?\n. @flenzi - same question applies. Can you share your pom.xml?\n. Yes, the current implementation is a bit nasty.\nThe expected value is a comma-delimited list of possible values.\n\nTake a look here for example - https://github.com/wordnik/swagger-core/blob/d9dca92625f5754a12c7d3fe3b5fccc7448b920b/modules/swagger-play2/test/testdata/DogController.scala#L23 - even though it's on @Api, the same logic applies.\nKeep in mind that Swagger will pick up on the @Consumes and @Produces JAX-RS annotations, but these fields can be used to override these or apply values in other environments (such as Servlets).\n. I've never tried it, but it's an interesting challenge.\nCan you share your current pom.xml and a list of which libraries are\nactually deployed to your tomcat shared dir?\nOn Mon, Jun 9, 2014 at 11:13 AM, Fuffa notifications@github.com wrote:\n\nHi all,\nI've a Jersey2 webapp and I noticed that the Swagger deps on it are ~32mb\nso, since my webapp is ~8mb, Swagger increase its size to ~40mb (and that\nis a small pain just to add api docs...). I've also several apps to\ndocument so I'd like to copy the swagger libs once.\nTo solve I'm trying to deploy the Swagger deps as shared lib in Tomcat,\nmarking them as provided in my pom, but at runtime I get the Jersey error:\n[image: image]\nhttps://cloud.githubusercontent.com/assets/3236943/3214372/7d0b8c18-efad-11e3-9cec-b53c149f3c08.png\nI know that Swagger tries to import several jars that are already deployed\nby Jersey so I left them into the war, avoiding to provide them into tomcat\nshared lib dir. Indeed I'm sure the jar that contains the WebConfig\n(jersey-container-servlet-core-2.7.jar) is part of the war (compiled, not\nprovided).\nDo you know if it is possible to use Swagger as provided dep? If not, do\nyou know a workaround to solve my \"issue\"?\nI'm using swagger-jersey2-jaxrs_2.10 version 1.3.5.\nThanks a lot,\nPaolo\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/593.\n. Can you try to change the swagger dependency to this:\n        \ncom.wordnik\nswagger-jersey2-jaxrs_2.10\ncompile\n1.3.5\n\n\njavax.ws.rs\njsr311-api\n\n\n\n. Sorry, that came out wrong:\n\n<dependency>\n            <groupId>com.wordnik</groupId>\n            <artifactId>swagger-jersey2-jaxrs_2.10</artifactId>\n            <scope>compile</scope>\n            <version>1.3.5</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>javax.ws.rs</groupId>\n                    <artifactId>jsr311-api</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n. the  is not really needed there.\n. I'm a bit confused as to what issue you're trying to solve.\nAll your  tags are commented and you said you have no Swagger related libraries in your shared library. If that's the case and you're still getting the error from the screenshot, it's likely the suggested change will fix it.\n. Okay, so when it is marked as \"provided\", what do you have in the shared\nlib of tomcat at that time?\nIf you have nothing Swagger/Jersey related, obviously you'll get an error.\nOn Mon, Jun 9, 2014 at 6:34 PM, Fuffa notifications@github.com wrote:\n\nThe main issue is that I'm trying to use swagger as provided dep to reduce\nthe size of the resulting war (that with swagger increase by ~38mb).\nThe error in the screenshot happens when the swagger dep is marked as\n\"provided\", so that means that deploying it as provided breaks something on\nJersey (also if all the jersey libs are deployed as \"compile\") :(\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/593#issuecomment-45504492\n.\n. Okay, so try that again, but remove the jsr311-api-1.1.1.jar from there and let me know how that goes.\n\nFor future reference, you can use:\nmvn dependency:tree\nThat will give you a list of dependencies as they are pulled in by other dependencies (your IDE probably has a similar tool to visualize it).\n. Are the webapps deployed as two separate WARs?\n. I'm not that familiar with the way Tomcat deals with shared libraries. Swagger uses static configuration, and as such needs to be loaded separately per web application.\nA deployed web application would be isolated, and if it's included as part of it, there would be no problem.\nHowever, it is possible that Tomcat shares the loaded libraries as well, and in that case, you won't be able to deploy it that way.\n. Great, thanks for sharing the link!\nOn Tue, Jun 10, 2014 at 2:58 PM, Fuffa notifications@github.com wrote:\n\nClosed #593 https://github.com/wordnik/swagger-core/issues/593.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/593#event-129744994.\n. @lammel - can you give a few more details about your application? Is it servlet, jax-rs, play? How is swagger-core configured?\n. If it's Play then perhaps @fehguy will be able to assist. I'm not that familiar with the Play integration.\n. Okay, this has nothing to do with Swagger. If you want to parse fields that are not part of your POJO, you need to look into the JSON parser you use. If you use Jackson, for example, it has many tools to deal with that.\n\nKeep in mind Swagger will not be able to describe such fields unless you explicitly specify them.\n. I don't see how that is related to Swagger...\n. Can you send the pull request against the develop branch?\n. That's because that page shouldn't exist. Deleted.\n. Thanks, that should be updated as well.\nOn 25 June 2014 17:41, Louis notifications@github.com wrote:\n\nThat's the download page you guys pointed in your website :\nhttps://helloreverb.com/developers/swagger\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/603#issuecomment-47109951\n.\n. Unfortunately, no, but you don't need to download Swagger to use it.\nDo you use maven or some other dependency management tool?\n\nOn 25 June 2014 17:57, Louis notifications@github.com wrote:\n\nCan you update it real quick so I can start using swagger?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/603#issuecomment-47112278\n.\n. swagger-core itself is a collection of jars, and it depends on a few other\njars which are not packed with it.\nThis is why having a download for it won't be very useful.\n\nIf you need to get all the dependencies, the best thing you can do is run\none of our samples and take all the dependencies you get from there.\nOn 25 June 2014 18:05, Louis notifications@github.com wrote:\n\nNo, is there any other methods getting it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/603#issuecomment-47113529\n.\n. Edited the title to note that the class is not added to the models.\n\nThere are two possible workarounds for now (both are a bit ugly, but that what makes them workarounds).\nThere simpler workaround is to add an API operation that accepts the requested model as a parameter and does nothing. Using the @ApiOperation set the hidden property to true so it won't actually be part of the Swagger documentation, but it should run the introspection (hopefully, didn't test it). \n. Just to clarify, this may be related to the integration with Play. \nThe scala-jaxrs sample (https://github.com/wordnik/swagger-core/tree/master/samples/scala-jaxrs) adds an apikey configuration and works fine.\n. How do you deploy the Swagger dependencies? Are they part of each WAR or\nare they deployed centrally?\nWhich version of Tomcat do you use?\nOn 10 July 2014 03:03, arsenaid notifications@github.com wrote:\n\nI have a problem with Swagger API response being cached when multiple\nJAX-RS webservice WARs deployed in a Tomcat container, e.g.\nhttp://localhost:8080/ServiceA/api-docs\nhttp://localhost:8080/ServiceB/api-docs\nI have both APIs deployed but when I access the swagger spec using second\nURL it always refers to the first API that is deployed. I am not able to\nget both the URL working at the same time. Is there any configuration that\nis required to get this working ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/613.\n. Okay, that's not going to work. Swagger uses static configuration and\nintrospection, so deploying them centrally with the way Tomcat's\nclassloading works would lead to sharing Swagger's classes between all apps.\nYou have to deploy the dependencies per application for that to work.\n\nOn 10 July 2014 19:28, arsenaid notifications@github.com wrote:\n\nSwagger dependencies are deployed centrally. I use Tomcat 7.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/613#issuecomment-48628800\n.\n. This is a duplicate of #564 and a few others as well.\n. It would be great if you, or anyone else, took the time to create such a\nsample project, preferably by making a copy of it so that the play 2.2\nsample is still there.\n\nSince we don't necessarily use Play, it's not always easy to follow the\nchanges of the framework.\nOn Jul 11, 2014 12:28 AM, \"ArvindPotnuru\" notifications@github.com wrote:\n\nIt would be nice to have a new swagger-play2 module compiled with\nplay-2.3. play-2.3 does not have SimpleResult anymore.\nOur application uses play-2.3 and we are not able to use the latest\nswagger library because of the SimpleResult class not found conflict.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/616.\n. I suspect the 201 response is after the issue occurs, not before it. I'd\nsuggest enabling it globally.\nOn Jul 11, 2014 1:19 AM, \"raghuramgururajan\" notifications@github.com\nwrote:\nHi\nI took the \"no-server\" module and customized the json to reflect my API\nand then I tried launching swagger and trying to hit my server running on\nlocalhost:8080.I see that the request is coming from the swagger to my\nlocalhost on the Tomcat logs and i can see the response returned with a\nstatus of 201 but I dont see the response content on swagger ui and it\nalways shows \"no content\".I have also enabled the CORS headers as below\nResponse.status(201).type(\"text/plain\").entity(result).header(\"Access-Control-Allow-Origin\", \"*\").header(\"Access-Control-Allow-Methods\", \"GET, POST, OPTIONS\").build();\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/617.\n. Can you share your web.xml? Looking for the swagger configuration.\n. Try adding this property to the bean:\n\nxml\n<property name=\"apiReader\" value=\"com.wordnik.swagger.jersey.JerseyApiReader\"/>\n. Maps are not really supported by swagger-core at the moment (nor by Swagger specification 1.2).\nI agree the behavior is odd, but whether the output is HashMap (which is fairly useless) or the UNKNOWN variant, it's just not supported.\n. Unfortunately, that's not something I can help with and perhaps @fehguy could provide some insight.\nAs for the API design itself, I believe there are several alternatives, but this is probably out of scope. If you'd like to hear another opinion on the matter, feel free to contact me directly.\n. @MaxPMagee - just as a hint, we solved it a bit differently in one of my previous projects. We had a custom message reader that got the json, merged it with the existing object (jackson can do that), and then passed it on to our REST call implementation. That way, the client sent the same json object, and in the actual API code, we already had the modified object at hand.\nWe utilized the difference in sending \"key\":null and not sending the key at all. The first meant the value needs to be nullified and the second that it should remain as is. Hope this helps as a general idea.\nKeep in mind that if you use a map for your API, you're not really documenting it. You're saying, I accept any set of keys and values, but you're not telling the user what the keys are and what legal values they can have. \n. Can you send the pull request against the develop branch?\n. @raspacorp - swagger-core is written almost exclusively in scala (except for the annotations), so removing the scala dependencies will pretty much break everything.\nCurrently, there's not much you can do (unless you have several WAR files in which case you can install some dependencies on your application server directly). Actually, even if you have a single WAR, you can deploy these dependencies as part of your environment build-up rather than your WAR (depending on the way you work).\nFuture (major) versions of swagger-core may migrate completely to Java and remove the scala dependencies, however, no date can be given as to when.\n. @phraktle - the only scala dependencies are for testing. It has zero effect on the compiled output. No need to reopen it.\n. Yes, that's because it's version 1.3.12 which was written in scala, not Java.\nThe 1.5.x versions are the Java based ones.\n. I don't know if/when @fehguy will merge it, but to accompany this there should be a clear wiki page and a code sample (preferably both java and scala) to see it in action. I realize many features are not well documented, but we're working on improving that and adding features like this one without proper documentation will only set us back.\n. A separate wiki page would help, I'll modify it as required with the rest of the documentation.\nLooks like you missed a few readers like the BasicJaxrsReader and the ServletReader in the implementation.\nI would imagine that tests would be useful as well to ensure nothing breaks in the future.\n. Just remember, this is not a guarantee for a merge, this is up to Tony.\n. Thanks for the PR but it used to be for the 1.3.X branch which is no longer maintained. I hope we can provide better support for Play in general in the future.\n. Can you show your method's signature (including the annotations)?\n. Yeah, your specification file is not valid. \nPlease take a look at the file explanation - https://github.com/wordnik/swagger-spec/blob/master/versions/1.2.md#435-file. Notice the values for consumes and paramType.\n. @thorntech - technically speaking, they are all files, just the content type differs per file.\nThat said, it may be an interesting adjustment to the Swagger Spec - allowing you to declare the required content type(s) for a file type. In Swagger 2.0, you can overcome it for now using vendor extensions, but feel free to open an issue about it on the Swagger Spec repo so we can consider this change for a future version. The tooling support for it (including the ui) should come after it is part of the spec.\n. That sounds like an issue for swagger-ui.\nOn 5 August 2014 23:37, Max Magee notifications@github.com wrote:\n\nFollowing the wiki advice, we've got basic auth working for our requests.\nWe've got a GET target that will respond with png or bmp image data. The\nrequests are sending the data correctly, I see the image and can download\nits data (and open the resulting file to observe the correct image) when\nusing Postman's GET.\nIn Swagger, the image GET is performed correctly, the response code is\n200, and when I inspect the response.data, it shows:\n\"\ufffdPNG\nIHDR &\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/638.\n. @tlovett-rmn - as mentioned above, for now you can use the @XmlRootElement annotation as a workaround. I realize it's ugly (especially if you don't use XML), but at least it should work\n. Looking at the code posted at the issue in swagger-ui, you're using @RequestBody. Isn't that a Spring-MVC annotation?\n. Which REST framework do you use then? As far as I know,@RequestBody is a Spring-MVC annotation.\n. Okay, so I'm not sure why you have the @RequestBody annotation there. Can you try removing it and testing again?\n. I think we are looking at two separate issues. The problem I saw with the original post was this:\n\njs\n{\n\"allowMultiple\": false,\n\"description\": \"WTR_DamagedBagsCreateRQ_schema request\",\n\"name\": \"body\",\n\"paramType\": \"body\",\n\"required\": true,\n\"type\": \"\"\n}\nWhich is not the operation you're currently changing.\nSo based on the comment https://github.com/wordnik/swagger-core/issues/646#issuecomment-51897686, what is the current problem?\n. Can you share the full method signature that includes WTR_DamagedBagsCreateRQ_schema request?\n. Can you try adding @ApiModel(\"the name you want\") together with the @XmlRootElement and see if that solved the problem?\n. And if you annotate like this:\n``` java\n@ApiModel(\"WTR_DelayedBagsCreateRQ_schema\")\n@XmlRootElement(name=\"WTR_DelayedBagsCreateRQ_schema\")\n@ApiModel(\"WTR_DamagedBagsCreateRQ_schema\")\n@XmlRootElement(name=\"WTR_DamagedBagsCreateRQ_schema\")\n```\nWhat's the output then?\n. I'm not entirely sure where we stand at the moment.\n. Thanks for this. Not sure how many more releases of 1.3.X we're going to have, so we'll see if we integrate it. We do appreciate the effort you took into creating the PR though.\n. Sorry, missed you on IRC. Can you share a sample of how you used the annotation?\n. Yup, it looks like the field is not being read at all.\n. The error you're sharing involves ArrayList but your code sample uses List. Is the code sample correct?\nAlso, just to be on the safe side, can you update swagger-jaxrs to 1.3.7? You don't need the other dependencies, they will be pulled in automatically by maven.\n. Do you encounter the same problem if you use List instead of ArrayList?\n. You'd need to check out Swashbuckle's repository for documentation, and if that doesn't help, open an issue on that repository.\nYou can find the repository here - https://github.com/domaindrivendev/Swashbuckle\n. #797 may help with this issue eventually.\n. #961 now.\n. This will be solved via #978.\n. Avoid using \"/\" as the value for your @Api annotation. The value you give to it is doesn't have to be the same as the @Path. In your case, I'd probably use something like @Api(value=\"/root\").\nCan you try that and see if it solves your problem?\nKeep in mind that the operations are not visible at the /api-docs but rather at a specific path as you see in that json (which is why \"/\" is not a good value). If you change it based on the suggestion above, you should see your operations by accessing /api-docs/root\n. What output do you get when you use:\njava\n@Path(\"/v0\")\n@Scope(\"request\")\n@ContextConfiguration(locations = { \"classpath:application-config.xml\" })\n@Api(value = \"/v0\", description = \"Rules CRUD operations. Rules are used to customize financial transaction categorization\")\n. And when you open /api-docs/v0 ?\n. Yes, but that's how Swagger works (at least for now). So everything is working as expected.\n. Yup. Path parameters are always mandatory. There's no support for making those optional.\n. Regarding a) - this something that's just not supported by Swagger 1.2 so it is not feasible to do it. Personally, I don't see much added value to it since documentation shouldn't imply code structure. Swagger 2.0 introduces the ability to define and reuse parameters, but you still won't be able to group several parameters under one logical unit.\nb) is definitely a bug though.\n. Then perhaps I don't understand what you mean by \"a)\" because by the way I understand it, it would be impossible for swagger-springmvc to do it properly. If you can show an example, that would help.\n. I'm just not sure what you mean by \"However, I verified in a springmvc project that it does.\".  What's the output from it that you're seeing it? \n. I don't need to see the code, I need the output. The reason I ask for it is because what you're saying doesn't make sense with regards to Swagger and I'm guessing there's some misunderstanding along the way.\nEach parameter as it is defined by Swagger has a name and type. There's no additional higher-level grouping of parameters. Since @BeanParams are just a convenient way to group parameters in the code, they are not exposed externally. Keep in mind there are many development languages and frameworks and they don't all have the concept of @BeanParam. \nThis is why I'm asking to see some output that you say that does it so I can explain what's going on there, because it's definitely not the grouping that I understand.\n. I don't need to see the code, I need the output. The reason I ask for it is because what you're saying doesn't make sense with regards to Swagger and I'm guessing there's some misunderstanding along the way.\nEach parameter as it is defined by Swagger has a name and type. There's no additional higher-level grouping of parameters. Since @BeanParams are just a convenient way to group parameters in the code, they are not exposed externally. Keep in mind there are many development languages and frameworks and they don't all have the concept of @BeanParam. \nThis is why I'm asking to see some output that you say that does it so I can explain what's going on there, because it's definitely not the grouping that I understand.\n. That's okay, but I believe my explanation was enough to explain why what you're asking can't be done not with swagger-core and not with swagger-springmvc.\n. That's okay, but I believe my explanation was enough to explain why what you're asking can't be done not with swagger-core and not with swagger-springmvc.\n. You can't specify Aclass.class due to Java's type erasure. Aclass and Aclass are the same for java.\n. You can't specify Aclass.class due to Java's type erasure. Aclass and Aclass are the same for java.\n. The answer is still the same...\n. The answer is still the same...\n. :thumbsup: \n. :thumbsup: \n. :-1:\n. :-1:\n. @wb14123 - Please check https://github.com/wordnik/swagger-spec/ for the updated schemas. The ones that are here will be deleted.\n. @wb14123 - Please check https://github.com/wordnik/swagger-spec/ for the updated schemas. The ones that are here will be deleted.\n. This should be submitted against the develop-scale_2.10 branch. Can't promise it'll be merged as we not concentrate on critical issues for the 1.3.X releases and concentrate on adding features to the 1.5.X tree.\n. This should be submitted against the develop-scale_2.10 branch. Can't promise it'll be merged as we not concentrate on critical issues for the 1.3.X releases and concentrate on adding features to the 1.5.X tree.\n. I assume this is for documentation purposes only? :)\n. In that case, I shall close it for now, and thanks for bringing it up.\n. Please see #628.\n. Please see #628.\n. I doubt it's related to the media type. If you change it to application/json, for example, do you see it then?\n. I doubt it's related to the media type. If you change it to application/json, for example, do you see it then?\n. https://github.com/wordnik/swagger-ui#custom-header-parameters---for-basic-auth-etc\n. https://github.com/wordnik/swagger-ui#custom-header-parameters---for-basic-auth-etc\n. Can we close the issue then?\n. Can we close the issue then?\n. Can't find anything specific that requires documentation. @lagrwilson if there's anything you feel is missing, please add a comment.\n. Can't find anything specific that requires documentation. @lagrwilson if there's anything you feel is missing, please add a comment.\n. This is probably a better question to the google group or swagger-spec.\nHowever, the answer is that it is possible with Swagger 2.0. I still haven't updated the samples there to show how it can be done, but schemas which represent models can use a JSON Reference ($ref) to include definitions for external resources as well. Also, Swagger 2.0's specification file is basically a single file and not spanning several ones like previous versions, unless you want it to.\n. This is probably a better question to the google group or swagger-spec.\nHowever, the answer is that it is possible with Swagger 2.0. I still haven't updated the samples there to show how it can be done, but schemas which represent models can use a JSON Reference ($ref) to include definitions for external resources as well. Also, Swagger 2.0's specification file is basically a single file and not spanning several ones like previous versions, unless you want it to.\n. @Produces({\"application/json\", \"application/*+json\"}) may be a safer choice.\n. @Produces({\"application/json\", \"application/*+json\"}) may be a safer choice.\n. Unfortunately, that's not really an option, at least not without going into extreme annotation processing (which even then may not offer what you want).\nAnnotation values are determined at compilation and not runtime, so at most you can have static strings and use those as values for the annotations.\nIn terms of annotation processing, accepting user-generated annotations won't work as well, as like you said, there's no annotation inheritance.\nWe could at some point change the @ApiResponse to a java class to allow static initialization, but even if we do end up doing that, it'll only be in a future major version since it'll break backwards compatibility.\n. Unfortunately, that's not really an option, at least not without going into extreme annotation processing (which even then may not offer what you want).\nAnnotation values are determined at compilation and not runtime, so at most you can have static strings and use those as values for the annotations.\nIn terms of annotation processing, accepting user-generated annotations won't work as well, as like you said, there's no annotation inheritance.\nWe could at some point change the @ApiResponse to a java class to allow static initialization, but even if we do end up doing that, it'll only be in a future major version since it'll break backwards compatibility.\n. @mwhig - thanks for the suggestion, looks interesting, especially as an idea to allow user-created response annotations.\nThat partially solve the second request from @todd-richmond, but not the first. If I understand correctly, he wants the \"message\" part to be dynamic - so not just \"Resource not found\" but rather \"{X} not found\" where X is replaced by the resource name.\nThe reason that it only partially solves the second request is that @ApiResponse is currently not used processed from being directly on the method but rather only as an input to @ApiRsponses. The @Target(ElementType.METHOD) is actually a bug and the proper declaration should have been @Target({}). The reason for that is simple - you can't have more than one instance of an annotation on a method, and if you want to include several responses you won't be able to do that (and we don't support it for a single response declaration). Your suggestion may help there, but it would also force the user to create their own annotations which is not necessarily what we want.\n. @mwhig - thanks for the suggestion, looks interesting, especially as an idea to allow user-created response annotations.\nThat partially solve the second request from @todd-richmond, but not the first. If I understand correctly, he wants the \"message\" part to be dynamic - so not just \"Resource not found\" but rather \"{X} not found\" where X is replaced by the resource name.\nThe reason that it only partially solves the second request is that @ApiResponse is currently not used processed from being directly on the method but rather only as an input to @ApiRsponses. The @Target(ElementType.METHOD) is actually a bug and the proper declaration should have been @Target({}). The reason for that is simple - you can't have more than one instance of an annotation on a method, and if you want to include several responses you won't be able to do that (and we don't support it for a single response declaration). Your suggestion may help there, but it would also force the user to create their own annotations which is not necessarily what we want.\n. Try running the same with the clean goal, so something like mvn clean jetty:run.\nBy the way, as far as I know mvn eclipse:eclipse is pretty much deprecated today and you shouldn't use it. Import the project as a maven project using the m2e plugin instead.\n. Try running the same with the clean goal, so something like mvn clean jetty:run.\nBy the way, as far as I know mvn eclipse:eclipse is pretty much deprecated today and you shouldn't use it. Import the project as a maven project using the m2e plugin instead.\n. Instead of using a converter, have you tried the following?\njava\n@ApiModelProperty(value = \"base64 encoded string\", dataType=\"string\", notes = \"base64 string\", required = true)\nprivate byte[] myBytes;\nI'm not entirely sure it'll work with string, but if not, you can also try String or java.lang.String.\n. Instead of using a converter, have you tried the following?\njava\n@ApiModelProperty(value = \"base64 encoded string\", dataType=\"string\", notes = \"base64 string\", required = true)\nprivate byte[] myBytes;\nI'm not entirely sure it'll work with string, but if not, you can also try String or java.lang.String.\n. You've tried all 3 variants? \nAlso, not that it should matter, can you also try changing your dependency to swagger-jersey-jaxrs instead?\n. You've tried all 3 variants? \nAlso, not that it should matter, can you also try changing your dependency to swagger-jersey-jaxrs instead?\n. Hmm, it looks like this is related to #334 unfortunately.\nI'm not sure you can assign a converter to an array, but @fehguy will have to comment on that.\n. Hmm, it looks like this is related to #334 unfortunately.\nI'm not sure you can assign a converter to an array, but @fehguy will have to comment on that.\n. Well, you can try string, String, or java.lang.String.\n. Well, you can try string, String, or java.lang.String.\n. Theoretically, we allow it - https://github.com/wordnik/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiModelProperty.java#L67\n. Theoretically, we allow it - https://github.com/wordnik/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiModelProperty.java#L67\n. Just tested it and it works fine. I've used @ApiModelProperty(dataType=\"string\") on a getter of a long field and the specification came out as string.\n@magnusar - if it doesn't work for you, could you please produce a test case I can check locally?\n. Just tested it and it works fine. I've used @ApiModelProperty(dataType=\"string\") on a getter of a long field and the specification came out as string.\n@magnusar - if it doesn't work for you, could you please produce a test case I can check locally?\n. Okay, I did some further testing. The problem is not related with primitive arrays but rather with arrays or anything that translates to an array. The type can be a primitive or a class, and the array could be a java array or the collections we parse as arrays (List, Set...). And this is a bug the way I see it.\n@fehguy - could you look into that please?\n. Okay, I did some further testing. The problem is not related with primitive arrays but rather with arrays or anything that translates to an array. The type can be a primitive or a class, and the array could be a java array or the collections we parse as arrays (List, Set...). And this is a bug the way I see it.\n@fehguy - could you look into that please?\n. With swagger-core 1.5 I don't think it's relevant anymore, but I'm not sure follow everything you say here.\nI agree with the usage of concrete classes instead of a string (though it would be a problem with collections). But what is the actual problem with replacing a value type of array with another one?\nJust to make sure we're on the same page, I'm referring to this:\njava\n@ApiModelProperty(dataType=\"string\")\nprivate byte[] myBytes;\nvs \njava\n@ApiModelProperty(dataType=\"string\")\nprivate long date;\nThe first sample doesn't work, the second works fine.\n. With swagger-core 1.5 I don't think it's relevant anymore, but I'm not sure follow everything you say here.\nI agree with the usage of concrete classes instead of a string (though it would be a problem with collections). But what is the actual problem with replacing a value type of array with another one?\nJust to make sure we're on the same page, I'm referring to this:\njava\n@ApiModelProperty(dataType=\"string\")\nprivate byte[] myBytes;\nvs \njava\n@ApiModelProperty(dataType=\"string\")\nprivate long date;\nThe first sample doesn't work, the second works fine.\n. @magnusar - there is a workaround but that would require you to duplicate your model and may add a few additional annotations for the documentation. It may be enough for you for now.\n. @magnusar - there is a workaround but that would require you to duplicate your model and may add a few additional annotations for the documentation. It may be enough for you for now.\n. It's a bit difficult since I don't know how you use your model (as a body parameter, response type..).\nFor starters, you'd have to create a copy of the class and replace the byte[] field with a String field.\n. It's a bit difficult since I don't know how you use your model (as a body parameter, response type..).\nFor starters, you'd have to create a copy of the class and replace the byte[] field with a String field.\n. Okay, so you'd have something like this:\n``` java\n@ApiModel(value = \"MyView\")\npublic class MySwaggerView {\n@ApiModelProperty(value = \"a name\", required = true)\nprivate String name;\n@ApiModelProperty(value = \"some text\", notes = \"base64 string\", required = true)\nprivate String byteArray;\n}\n```\nAnd:\n``` java\n@POST\n@Path(\"/someservice\")\n@ApiOperation(value = \"bla, bla\",\nnotes = \"bla bla\",\nresponse = MySwaggerView.class)\npublic MyView doRequest(@ApiParam(value = \"Parameters for ...\", required = true) InputObject inputObject) {\nreturn getNewMyViewInstance(inputObject);\n}\n```\n(I'm ignoring the fact that in the sample there are only private fields with no setters)\n. Okay, so you'd have something like this:\n``` java\n@ApiModel(value = \"MyView\")\npublic class MySwaggerView {\n@ApiModelProperty(value = \"a name\", required = true)\nprivate String name;\n@ApiModelProperty(value = \"some text\", notes = \"base64 string\", required = true)\nprivate String byteArray;\n}\n```\nAnd:\n``` java\n@POST\n@Path(\"/someservice\")\n@ApiOperation(value = \"bla, bla\",\nnotes = \"bla bla\",\nresponse = MySwaggerView.class)\npublic MyView doRequest(@ApiParam(value = \"Parameters for ...\", required = true) InputObject inputObject) {\nreturn getNewMyViewInstance(inputObject);\n}\n```\n(I'm ignoring the fact that in the sample there are only private fields with no setters)\n. As said it's a workaround. I can't comment as to if or when a different solution will be available.\n. As said it's a workaround. I can't comment as to if or when a different solution will be available.\n. Answering your questions:\n1. That would require a specific Dropwizard module to read and interpret such annotations. I can't say if or how soon we could provide with such an implementation.\n2. We don't need to add anything. @HeaderParam is a JAX-RS annotation (which dropwizard uses), so you can just add that to your code and swagger-core will read it as such.\n3. I don't think that makes a whole lot of sense. That would allow people to convert any parameter type to any other parameter type. However, I can think of some odd use case where it may be required (not the one you mentioned), but I don't recall anyone ever asking for it.\n4. Unfortunately, no. As long as the parameter is not annotated with any of the JAX-RS annotations it will be treated as a body parameter.\n. Answering your questions:\n1. That would require a specific Dropwizard module to read and interpret such annotations. I can't say if or how soon we could provide with such an implementation.\n2. We don't need to add anything. @HeaderParam is a JAX-RS annotation (which dropwizard uses), so you can just add that to your code and swagger-core will read it as such.\n3. I don't think that makes a whole lot of sense. That would allow people to convert any parameter type to any other parameter type. However, I can think of some odd use case where it may be required (not the one you mentioned), but I don't recall anyone ever asking for it.\n4. Unfortunately, no. As long as the parameter is not annotated with any of the JAX-RS annotations it will be treated as a body parameter.\n. I don't have any real knowledge of dropwizard so writing a sample would take me too long.\nIf you can create and share such a sample for me to test, that would be best.\n. I don't have any real knowledge of dropwizard so writing a sample would take me too long.\nIf you can create and share such a sample for me to test, that would be best.\n. @whisperwing - there are ways around it, but you'd have to update to the latest version.\n. @whisperwing - there are ways around it, but you'd have to update to the latest version.\n. @whisperwing - what exactly do you need? To add the header parameter, remove the auth parameter from being a body parameter or both?\n. @whisperwing - what exactly do you need? To add the header parameter, remove the auth parameter from being a body parameter or both?\n. You can, just add @ApiParam(hidden=true) next to it.\n. You can, just add @ApiParam(hidden=true) next to it.\n. That feature was added in 1.5.1 I think, which is why I asked you to upgrade. Glad it worked out.\n. That feature was added in 1.5.1 I think, which is why I asked you to upgrade. Glad it worked out.\n. @vsriram30 what you're saying just doesn't make sense. Why would you hide a required parameter?\n. @vsriram30 what you're saying just doesn't make sense. Why would you hide a required parameter?\n. Not sure there's any need to implement it. The reason the reusable parameter definitions exist is to ease up on manual writing of specification files either on your own or using other tools like swagger-editor.\nWhen it comes to computer-generated specifications, there's not much of a benefit there.\n. Not sure there's any need to implement it. The reason the reusable parameter definitions exist is to ease up on manual writing of specification files either on your own or using other tools like swagger-editor.\nWhen it comes to computer-generated specifications, there's not much of a benefit there.\n. Did you happen to mean to open this issue on https://github.com/wordnik/swagger-codegen then?\n. Did you happen to mean to open this issue on https://github.com/wordnik/swagger-codegen then?\n. swagger-core is the scala/java library for generating swagger specifications from the code.\nswagger-codegen is the library used to read swagger specification files and generate client/server code from them.\nIt sounds like this is not a matter of swagger-core not generating such specification but rather swagger-codegen not reading it.\n. swagger-core is the scala/java library for generating swagger specifications from the code.\nswagger-codegen is the library used to read swagger specification files and generate client/server code from them.\nIt sounds like this is not a matter of swagger-core not generating such specification but rather swagger-codegen not reading it.\n. If the intent was to generate code from a spec, then yes.\nI'm not sure of swagger-core 1.5 supports generating the example field.\n. If the intent was to generate code from a spec, then yes.\nI'm not sure of swagger-core 1.5 supports generating the example field.\n. This is a known issue. For now you can run it with -Dmaven.test.skip=true\n. This is a known issue. For now you can run it with -Dmaven.test.skip=true\n. You're not supposed to see com.mycompany.myObject as the data type. If you do, there's some kind of error. The consumer of your API doesn't really care about com.mycompany.myObject.\nSwagger 2.0 will have better support for additional documentation.\nBy the way, for general-purpose question, you can also use our google group. Of course you can still open issues here, though those normally serve problems that are encountered.\n. You're not supposed to see com.mycompany.myObject as the data type. If you do, there's some kind of error. The consumer of your API doesn't really care about com.mycompany.myObject.\nSwagger 2.0 will have better support for additional documentation.\nBy the way, for general-purpose question, you can also use our google group. Of course you can still open issues here, though those normally serve problems that are encountered.\n. Okay, that's definitely not the way the output should look like. Can you show the method signature of that operation including all the annotations on it? There's literally no reason it would show that. The javadoc may be useful for Java consumers, but non-java consumers will look at it and blink.\nIn any case you won't be able to make that into a link to the javadocs, but you would be able to add a link to an external documentation of the operation.\nSwagger 2.0 came out earlier this month. There's a work-in-progress support for it in the develop_2.0 branch (which is actually swagger-core 1.5) but it's still not done. I'm not sure if it has support for the external docs or if it will have for the 1.5 release.\nThe other tools are slowly catching up with support for Swagger 2.0.\n. Okay, that's definitely not the way the output should look like. Can you show the method signature of that operation including all the annotations on it? There's literally no reason it would show that. The javadoc may be useful for Java consumers, but non-java consumers will look at it and blink.\nIn any case you won't be able to make that into a link to the javadocs, but you would be able to add a link to an external documentation of the operation.\nSwagger 2.0 came out earlier this month. There's a work-in-progress support for it in the develop_2.0 branch (which is actually swagger-core 1.5) but it's still not done. I'm not sure if it has support for the external docs or if it will have for the 1.5 release.\nThe other tools are slowly catching up with support for Swagger 2.0.\n. Regarding the usage of OrganizationId as a path parameter, since I imagine it's not really an object but a string, you'd have to register a converter for it to work properly.\nPlease check out https://github.com/wordnik/swagger-core/wiki/overriding-models.\n. Regarding the usage of OrganizationId as a path parameter, since I imagine it's not really an object but a string, you'd have to register a converter for it to work properly.\nPlease check out https://github.com/wordnik/swagger-core/wiki/overriding-models.\n. I don't think it matters for this case, but don't use 1.3.8 or 1.3.9. Both releases were... not so good. Upgrade at 1.3.10 please.\n. I don't think it matters for this case, but don't use 1.3.8 or 1.3.9. Both releases were... not so good. Upgrade at 1.3.10 please.\n. Specifically regarding the last comment, it doesn't make a lot of sense to set required as true by default for @APIModelProperty.\nOne reason is that the specification itself sets the default value as false, and the annotation simply follows that.\nThe other reason, which is related to the first is that based on our experience, it is more common to have fields as optional both for requests and responses as if fields are empty, they are simply not send (to avoid unnecessary traffic). It's more important for requests, as it is very common for clients to send only the relevant information as the object. Since @ApiModelProperty is generic for all models, it makes sense the default is false.\nI realize it may not suit your specific use case, but we need to accommodate everyone, so there's always going to be a use case where it is less convenient. \n. Specifically regarding the last comment, it doesn't make a lot of sense to set required as true by default for @APIModelProperty.\nOne reason is that the specification itself sets the default value as false, and the annotation simply follows that.\nThe other reason, which is related to the first is that based on our experience, it is more common to have fields as optional both for requests and responses as if fields are empty, they are simply not send (to avoid unnecessary traffic). It's more important for requests, as it is very common for clients to send only the relevant information as the object. Since @ApiModelProperty is generic for all models, it makes sense the default is false.\nI realize it may not suit your specific use case, but we need to accommodate everyone, so there's always going to be a use case where it is less convenient. \n. Check the swagger json you get. If the type of the response is not an \"array\", then something is definitely wrong in the parsing process.\nHowever, since you're using swagger-springmvc, you should move this issue to their repository. \n. Check the swagger json you get. If the type of the response is not an \"array\", then something is definitely wrong in the parsing process.\nHowever, since you're using swagger-springmvc, you should move this issue to their repository. \n. So yeah, I'd take it to swagger-springmvc.\n. So yeah, I'd take it to swagger-springmvc.\n. @osbornk - I have to ask, why add the wiki page to swagger-spec?\n. @osbornk - I have to ask, why add the wiki page to swagger-spec?\n. Thanks. It would be great if you could add a link in the PR to the wiki page so that @fehguy can review both.\n. Thanks. It would be great if you could add a link in the PR to the wiki page so that @fehguy can review both.\n. It sounds like a swagger-ui issue, yes. You can check the swagger specification output you get from your app - if the information is there (order being irrelevant), then it's a swagger-ui issue. If something is left out of the swagger specification you get, then it should stay here.\n. It sounds like a swagger-ui issue, yes. You can check the swagger specification output you get from your app - if the information is there (order being irrelevant), then it's a swagger-ui issue. If something is left out of the swagger specification you get, then it should stay here.\n. Thank you for pointing that out, I'll make sure the fix the javadocs.\nI don't know if there's a specific reason for String rather than String[], that's up to @fehguy to say.\nBased on that, I assume you managed to solve the problem by changing the declaration to the following?\njava\n@ApiParam(allowableValues = \"asc,desc\")\n. Thank you for pointing that out, I'll make sure the fix the javadocs.\nI don't know if there's a specific reason for String rather than String[], that's up to @fehguy to say.\nBased on that, I assume you managed to solve the problem by changing the declaration to the following?\njava\n@ApiParam(allowableValues = \"asc,desc\")\n. This should be submitted against the develop-scale_2.10 branch. Can't promise it'll be merged as we not concentrate on critical issues for the 1.3.X releases and concentrate on adding features to the 1.5.X tree.\n. This should be submitted against the develop-scale_2.10 branch. Can't promise it'll be merged as we not concentrate on critical issues for the 1.3.X releases and concentrate on adding features to the 1.5.X tree.\n. This should be submitted against the develop_scale-2.10 in order to be merged. Can't promise it will be merged as we mostly handle critical issues for 1.3 now.\n. This should be submitted against the develop_scale-2.10 in order to be merged. Can't promise it will be merged as we mostly handle critical issues for 1.3 now.\n. I already replied your post on the google group. There's not enough information to help there.\n. I already replied your post on the google group. There's not enough information to help there.\n. Is this an internal user role or an oauth2 scope?\nOn 9 October 2014 06:44, liuyang1204 notifications@github.com wrote:\n\nHi,\nIs there any way to make swagger API return the access control information?\nFor example, I use Apache Shiro with Spring MVC:\n@RequiresRoles(\"admin\")@RequestMapping(value = \"/{name}\", method = RequestMethod.GET)public Greeting greeting(@PathVariable String name) {\n    return new Greeting(counter.incrementAndGet(),\n            String.format(template, name));}\nI want to make the @RequiresRoles(\"admin\") info available on swagger-ui.\nIs there any easy way to config it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/719.\n. Is this an internal user role or an oauth2 scope?\n\nOn 9 October 2014 06:44, liuyang1204 notifications@github.com wrote:\n\nHi,\nIs there any way to make swagger API return the access control information?\nFor example, I use Apache Shiro with Spring MVC:\n@RequiresRoles(\"admin\")@RequestMapping(value = \"/{name}\", method = RequestMethod.GET)public Greeting greeting(@PathVariable String name) {\n    return new Greeting(counter.incrementAndGet(),\n            String.format(template, name));}\nI want to make the @RequiresRoles(\"admin\") info available on swagger-ui.\nIs there any easy way to config it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/719.\n. It does matter, yes. The spec doesn't have room to carry that information unless it's part of the standard authorization schemes that are supported by Swagger.\n\nOne possibility you have is to apply a SwaggerFilter that will filter out the operations based the user authentication. So that if they don't have the \"admin\" role, they won't see that operation (though honestly, I'm not sure SwaggerFilter has access to that).\nAnother option is to add that information to the operation's \"notes\" field. However, since you use Spring MVC and I assume swagger-springmcv, you'd have to ask on their repository if you can extend their reader to include such information.\n. It does matter, yes. The spec doesn't have room to carry that information unless it's part of the standard authorization schemes that are supported by Swagger.\nOne possibility you have is to apply a SwaggerFilter that will filter out the operations based the user authentication. So that if they don't have the \"admin\" role, they won't see that operation (though honestly, I'm not sure SwaggerFilter has access to that).\nAnother option is to add that information to the operation's \"notes\" field. However, since you use Spring MVC and I assume swagger-springmcv, you'd have to ask on their repository if you can extend their reader to include such information.\n. You're more than welcome to submit a specification feature request over at https://github.com/wordnik/swagger-spec so we could consider it for a future version. If you do that, please try to give an elaborate example with use cases and such. We need to see extensive definitions and also additional user requests for that feature for it to actually be accepted, but we always welcome new ideas.\n. Which version of swagger-core do you use? Which dependency do you use specifically?\n. Can you try putting the @ApiModelProperty on the getter of the field rather than on the field itself? I tested it not too long ago and it worked just fine. \n. It shouldn't be a problem but for testing purposes you can try removing the @XmlElement and see if it works.\n. How do you use that model? As a response or parameter? Can you share the\nrelevant method signature?\nOn Oct 10, 2014 4:45 PM, \"Mukul Gupta\" notifications@github.com wrote:\n\nNo, I tried it after removing @XmlElement but still doesn't work. Any\nother work around ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/720#issuecomment-58657250\n.\n. The one using it as a response, including the annotations.\nOn Oct 10, 2014 4:52 PM, \"Mukul Gupta\" notifications@github.com wrote:\nI'm using that model as a reponse of my rest api. which method signature\nshould I share with you ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/720#issuecomment-58658217\n.\n. And I assume MyPojo.class is the one containing that field?\n. There's something that doesn't quite add up here.\nIn the original post you have a code sample like this:\n\njava\npublic class Person implements Serializable {\n   @org.jongo.marshall.jackson.oid.Id\n   @ObjectId\n   private String id; // internal mongo db id\n   ...\nThat field is actually a String a not Mongo's ObjectId, which indeed translates to what you posted above when using its .toString(). So, are you trying to convert that field or another one? It could be useful to see the whole actual pojo if you can share it.\n. You can, I just don't think it's needed. If you can provide us with a test case, we could investigate it further as to why it doesn't natively work.\n. Yeah, the test case should be something I could run locally without too much work (I'll give you a hint, I don't have mongodb installed ;) - though that shouldn't matter for the test case)).\nAs for the converter, in which part of your code did you register it?\n. Have you registered the Bootstrap in your web.xml?\n. It looks right, and unfortunately I can't test it at the moment. The only thing I'd suggest trying is registering the converter before initializing the scanner and reader (no idea if that would help).\n. Okay, that error actually implies that the converter is used, so that's a step in the right direction.\nI believe the problem is with the jsonString you use, but now that I think about it, the converter is probably not the right way to go. The converter can be used to replace a one model representation with another model representation, but in your case, you want to replace a model with a primitive. \nCan you share your whole model definition as-is?\n. Yeah, I'm familiar with MongoDB's ObjectIds (just haven't used it for a while now).\nI'd like to see a full model class containing such an ObjectID whose conversion gives you the unwanted results, assuming you can share it. If not, then we'll have to wait for the test case (which may still be needed even if you provide the full model class).\n. But if I understand correctly, what you're describing here is operating your own API, not looking at the generated Swagger specification. Swagger does not affect your API in any way.\n. Do you have any custom Jackson configuration in your application?\n. https://github.com/bguerout/jongo/issues/154 shows an example of someone using both Jongo and Swagger, and they haven't reported an issue such as the one you describe (though granted, they use a different version of Swagger).\nTo be clear, which Swagger annotations you remove for it to work properly?\nWe can also investigate further. Any chance you can share the output of mvn dependency:tree?\n. @alino91 - thank you for sharing this information!\n@mukulgupta2507 - glad you have it sorted out for now. Closing the issue now, please reopen if needed.\n. Tested and confirmed, issue exists. FYI, it's not related to Jersey, it's the JAX-RS definition of how it should work.\n. Do you want docs.swagger.io to replace to the whole path or can we have something like docs.swagger.io/swagger-core/documentation/annotations/apidocs/current?\n. Sure, that would work great. It just means I can control the paths as they are in gh-pages which is fine.\n. I'm a little bit disappointed. You said http://docs.swagger.io/swagger-core/apidocs and now you're saying http://docs.swagger.io/apidocs/. The one with the swagger-core in the name allows for per-project documentation when the time comes. le sigh\n. Okay, but won't that be an issue if say we want to access swagger-codegen docs under the docs.swagger.io subdomain? If this is impossible (or more complicated), we'll cross that bridge when we get to it.\n. let's leave it for now and deal with it when the time comes. I'll create the sub dir for swagger-core and when the time comes we can just move it to the root dir.\n. I believe that just follows the spec.\nYou have the Swagger Object and in it the swagger property denoting the version.\n. Can you provide with a sample models (super+inherited)?\n. Right, but in this specific example, it sounds like you'd want to hide the \"uselessAnnoyingProperty\" anyways, so why not add @ApiModelProperty to it?\n. It's probably not a relevant solution as with the next version of swagger-core, Jackson will be responsible entirely for the de/serialization process. However, we'll look into it.\n. Jackson processes JAXB's annotations as well, so it should work fine. There's probably not going to be direct support for Moxy just like there's not going to be direct support for Gson.\nAs for your issue, there's another workaround which won't be less ugly, so I'm not sure it's worth mentioning. \n. Maybe add it to this list - https://github.com/swagger-api/swagger-spec#java?\n. https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiImplicitParam.java#L36\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiImplicitParams.java#L28\n...\n. @tpetr - do you still have these changes as well? If so, maybe @fehguy could just revert the merge (with that funky github button) and you can send the PR against the proper branch like #749. \n. Just to be sure, you're using version 1.3.10?\nAlso, does it take this long with every load or just the first one?\n. This is more of a curiosity question, but do your API calls occur in a timely fashion or are they also relatively slow?\n. That's great. \nWhat are your JVM settings? Specifically the memory? \n. @rdiehl - any updates on this issue?\n. I don't know if that's wise. The webjars are not maintained by us. I believe @fehguy's method is the right track.\n. I assume this is an extension for #739.\nI think we accidentally merged that into master and not against develop. Not sure if @fehguy had a chance to fix it yet.\n@tpetr - can you change this PR against the develop branch?\n. @fehguy - did you fix the merge of #739?\n. Just as long as you don't say I'm nagging you.\n. Can you open it against the develop_scala-2.10 branch instead?\n. @fehguy - was this intended in this repository?\n. Why does swagger-jaxrs generates a yaml?\n. No... I was under the impression that we agreed YAML is a swagger-editor format only.\n. @fehguy and I had this discussion in the past. I have major concerns about using YAML beyond the editor for various reasons. I really wouldn't want the tool developers out there to think they need to support both formats, especially since the official Swagger format is in JSON. We may easily end up with tools thinking supporting YAML is enough.\nOur community is constantly growing and if we let it get confused by the standard, it would make things more difficult in the future. There are quite a few details that I won't get into now. YAML is awesome for the editor, but I believe that's where it should stay.\nI've outlined a few more details here - https://github.com/swagger-api/swagger-ui/issues/595#issuecomment-60829097.\n. We can also produce XML and HTML directly from it, but there's no reason to do those either.\n. @earth2marsh - generally speaking, I agree with what you're saying, I just think there may be a few problems. That said, this ticket is probably not the right place to discuss it. \nWith regards to the original post, if there are issues with the output YAML, they should definitely be resolved.\n. Thanks, should be all fixed now.\n. For now, as a workaround, you can try using @ApiModelProperty with hidden=true and see if that hides it.\n. Could you provide us with a small test case project that reproduces it? It would help us in isolating and solving the problem. \n. Applies to https://github.com/swagger-api/swagger-core/milestones/v1.5.0-M1 as well.\n. The same behavior can be observed in the sample - https://github.com/swagger-api/swagger-core/tree/master/samples/java-jaxrs-no-annotations.\n. Can you open the PR against the develop_scala-2.10 branch?\n. Are both the interface and the implementation in the same package?\n. It's not a matter of whether they should or shouldn't be in the same package, it just affects the configuration.\nCan you share the way you configure Swagger in your application?\n. Sure, you can find my email in our mailing list - https://groups.google.com/forum/#!forum/swagger-swaggersocket.\n. Okay. I'm not sure why Jersey won't load interface/implementation combinations when using the ResourceConfig.packages(...). However, if you use ResourceConfig.register(...) instead, you can configure Swagger to work as well.\nInstead of using the code you have in the BaseLauncher:\njava\nMap<String, String> swaggerParams = new HashMap<>();\nswaggerParams.put(\"api.version\", \"1.0.1\");\nswaggerParams.put(\"swagger.api.basepath\", BASE_URI.toString());\nswaggerParams.put(\"\")\nSwaggerJaxrsConfig.register(swaggerParams);\nUse the BeanConfig class (use it after you start your web server:\n``` java\nBeanConfig beanConfig = new BeanConfig();\nbeanConfig.setVersion(\"1.1.1\");\nbeanConfig.setResourcePackage(\"net.bogdoll\");\nbeanConfig.setScan(true);\n```\nNotice that the setScan has to be set to true for the scanning to work. One thing to keep in mind is that this will scan all classes under the package, whether they are loaded by Jersey or not. However, this should expose all your APIs properly. Let me know if this works for you.\n. I don't think you can attach images via email responses, but only when you use the web interface.\nHowever, the reason you're experiencing the triple operations is due what I wrote in the last paragraph in my last comment - One thing to keep in mind is that this will scan all classes under the package, whether they are loaded by Jersey or not.. \nYour sample project contains multiple resources on the same URLs with the same operations (for testing purposes, of course), and Swagger scans them all and loads them up. So you're basically seeing the same resource with three of the operations.\n. If I'm not mistaken, yes.\n. @brandonheller - I just tested it with the latest swagger-core, and it works fine. \nThis means that this is an issue with swagger-springmvc. It may be related to it using an old version of swagger-core which had this issue or they're doing their own introspection and have a bug there.\nYou'd need to open the issue on their repository for that.\n. @fenoloco - there shouldn't be a problem with annotated interfaces. I have a working sample like that (which uses spring as well).\nWhich version of swagger-core do you use? How did you configure swagger?\n. @fenoloco - there shouldn't be a problem with annotated interfaces. I have a working sample like that (which uses spring as well).\nWhich version of swagger-core do you use? How did you configure swagger?\n. That's the Swagger resources, but what about the configuration? Do you have anything else?\n. That's the Swagger resources, but what about the configuration? Do you have anything else?\n. One more question - how is your application configured to load your own resources?\n. One more question - how is your application configured to load your own resources?\n. Okay, and are those the interfaces or the implementing classes? \n. Okay, and are those the interfaces or the implementing classes? \n. Sorry for going back and forth, but what is the output you get from your /api-docs endpoint (that is, the swagger documentation)?\n. Sorry for going back and forth, but what is the output you get from your /api-docs endpoint (that is, the swagger documentation)?\n. Thank you for the detailed response, it really helps.\nIn your SwaggerJaxrsConfig can you change ScannerFactory.setScanner(new DefaultJaxrsScanner()); to ScannerFactory.setScanner(new ReflectiveJaxrsScanner());?\nIf that won't work, I'll have to further investigate.\n. Thank you for the detailed response, it really helps.\nIn your SwaggerJaxrsConfig can you change ScannerFactory.setScanner(new DefaultJaxrsScanner()); to ScannerFactory.setScanner(new ReflectiveJaxrsScanner());?\nIf that won't work, I'll have to further investigate.\n. Heh, ok, sorry about that. Let me dive in it and get back to you.\n. Heh, ok, sorry about that. Let me dive in it and get back to you.\n. @fenoloco - thanks for the patience.\nI missed one step with the ReflectiveJaxrsScanner. You need to set the package(s) of the resources to scan.\nSo your code would look like this:\njava\n        SwaggerConfig swaggerConfig = new SwaggerConfig();\n        ConfigFactory.setConfig(swaggerConfig);\n        swaggerConfig.setApiVersion(API_VERSION);\n        ReflectiveJaxrsScanner reflectiveJaxrsScanner = new ReflectiveJaxrsScanner();\n        reflectiveJaxrsScanner.setResourcePackage(\"com.wordnik.swagger.sample\"); // replace with your own package\n        ScannerFactory.setScanner(reflectiveJaxrsScanner);\n        ClassReaders.setReader(new DefaultJaxrsApiReader());\nand that should scan the interfaces/implementations properly.\nAs an alternative, you can use the (slightly) simpler BeanConfig option:\njava\n        BeanConfig beanConfig = new BeanConfig();\n        beanConfig.setVersion(API_VERSION);\n        beanConfig.setBasePath(\"http://localhost:8002/api\"); //basepath here\n        beanConfig.setResourcePackage(\"com.wordnik.swagger.sample.resource\"); //resource package(s) here\n        beanConfig.setScan(true);\nJust note that here too you must set the package(s) to scan for it to work properly. Also, the setScan(true) is required for the scanning of resources to be done.\nAs a final note, since you're using the Application class to bootstrap your REST application, you can put both snippets above at the constructor of your Application class and remove the additional servlet. It would behave the same way and you may consider it a cleaner code.\nLet me know how it goes.\n. @fenoloco - thanks for the patience.\nI missed one step with the ReflectiveJaxrsScanner. You need to set the package(s) of the resources to scan.\nSo your code would look like this:\njava\n        SwaggerConfig swaggerConfig = new SwaggerConfig();\n        ConfigFactory.setConfig(swaggerConfig);\n        swaggerConfig.setApiVersion(API_VERSION);\n        ReflectiveJaxrsScanner reflectiveJaxrsScanner = new ReflectiveJaxrsScanner();\n        reflectiveJaxrsScanner.setResourcePackage(\"com.wordnik.swagger.sample\"); // replace with your own package\n        ScannerFactory.setScanner(reflectiveJaxrsScanner);\n        ClassReaders.setReader(new DefaultJaxrsApiReader());\nand that should scan the interfaces/implementations properly.\nAs an alternative, you can use the (slightly) simpler BeanConfig option:\njava\n        BeanConfig beanConfig = new BeanConfig();\n        beanConfig.setVersion(API_VERSION);\n        beanConfig.setBasePath(\"http://localhost:8002/api\"); //basepath here\n        beanConfig.setResourcePackage(\"com.wordnik.swagger.sample.resource\"); //resource package(s) here\n        beanConfig.setScan(true);\nJust note that here too you must set the package(s) to scan for it to work properly. Also, the setScan(true) is required for the scanning of resources to be done.\nAs a final note, since you're using the Application class to bootstrap your REST application, you can put both snippets above at the constructor of your Application class and remove the additional servlet. It would behave the same way and you may consider it a cleaner code.\nLet me know how it goes.\n. Thanks for letting me know. Feel free to contact with us with any other issue.\n. Thanks for letting me know. Feel free to contact with us with any other issue.\n. If it's a Spring MVC project, then you're looking for springfox.\n. If it's a Spring MVC project, then you're looking for springfox.\n. Can you provide more information? Which REST framework do you use? Which version of swagger-core? Can you provide a sample method signature (with annotations) that shows the problem?\n. Can you provide more information? Which REST framework do you use? Which version of swagger-core? Can you provide a sample method signature (with annotations) that shows the problem?\n. Thank you for providing the details.\nThat looks like it may be an issue with the swagger-maven-plugin which is a community contribution.\nCan you access Swagger in your application at runtime too? Do you experience the same issue there?\n. Thank you for providing the details.\nThat looks like it may be an issue with the swagger-maven-plugin which is a community contribution.\nCan you access Swagger in your application at runtime too? Do you experience the same issue there?\n. I don't see how that is stopping you from testing it.\n. I don't see how that is stopping you from testing it.\n. Can you resubmit against the develop-scala_2.10 branch?\n. Can you resubmit against the develop-scala_2.10 branch?\n. If I understand correctly, you want to describe the existence of one query parameter or another one (that is, they can't coexist). If that's the case, then currently Swagger cannot describe conditional parameters.\nIf that's not what you meant, please give more details.\n. If I understand correctly, you want to describe the existence of one query parameter or another one (that is, they can't coexist). If that's the case, then currently Swagger cannot describe conditional parameters.\nIf that's not what you meant, please give more details.\n. Now I see. The value of the query parameter is some sort of DSL which you want to describe. At best, you can use a regex to describe those, but that may prove to be quite difficult.\n. Now I see. The value of the query parameter is some sort of DSL which you want to describe. At best, you can use a regex to describe those, but that may prove to be quite difficult.\n. Now I see. The value of the query parameter is some sort of DSL which you want to describe. At best, you can use a regex to describe those, but that may prove to be quite difficult.\n. Will reissue.\n. Will reissue.\n. Will reissue.\n. @reta - would you like to see if a similar functionality can be implemented in 1.5?\n. @reta - would you like to see if a similar functionality can be implemented in 1.5?\n. Sure, that would be the develop_2.0 branch. We try concentrating our efforts there now.\n. Sure, that would be the develop_2.0 branch. We try concentrating our efforts there now.\n. @reta - still not sure if/when we're going to release 1.3.13, but it's marked for it so we'll take a look at it when the time comes.\n. @reta - still not sure if/when we're going to release 1.3.13, but it's marked for it so we'll take a look at it when the time comes.\n. Thank you for that. I'm going to close this PR though as we're keeping 1.3.X in maintenance mode only and will provide only crucial fixes.\n. Thank you for that. I'm going to close this PR though as we're keeping 1.3.X in maintenance mode only and will provide only crucial fixes.\n. It may end up a confusing, and would complicate the (soon to be released) docs. Perhaps it's better to have the whole revamp with swagger-core 2.0.\n. It may end up a confusing, and would complicate the (soon to be released) docs. Perhaps it's better to have the whole revamp with swagger-core 2.0.\n. We may consider releasing an interim version as 1.6 with the new package names. We can either do that after 1.5 is final or alongside, though maintaining that would be a pain. It'll easier for new users to adopt 1.6 and for existing ones to just migrate to 1.5 from 1.3.\n. We may consider releasing an interim version as 1.6 with the new package names. We can either do that after 1.5 is final or alongside, though maintaining that would be a pain. It'll easier for new users to adopt 1.6 and for existing ones to just migrate to 1.5 from 1.3.\n. @todd-richmond - we want to make the transition to 1.5 from 1.3 as seamless as possible. Some people wouldn't mind doing a mass find&replace, but some may be wary of making such a huge commit initially.\n. @todd-richmond - we want to make the transition to 1.5 from 1.3 as seamless as possible. Some people wouldn't mind doing a mass find&replace, but some may be wary of making such a huge commit initially.\n. This also requires an update for the annotations wiki page (and obviously the javadocs).\n. This also requires an update for the annotations wiki page (and obviously the javadocs).\n. Umm, definitely not junit. If anything TestNG. Spock is probably worth looking at.\n. Umm, definitely not junit. If anything TestNG. Spock is probably worth looking at.\n. Well, we decided to go with TestNG for now.\n. Well, we decided to go with TestNG for now.\n. A few bytes is relative. For large specs it could be significant. Maybe make it configurable?\n. A few bytes is relative. For large specs it could be significant. Maybe make it configurable?\n. :+1:\nWhat's the default value though?\n. :+1:\nWhat's the default value though?\n. As far as I know, there isn't.\nThe way authorization is defined is unique, since there's no standard to authorization, unlike to REST that there are common standards like JAX-RS, Play and so on.\nIt wouldn't really make sense to do what you ask, as you may just as well end up writing the spec manually for that.\n. As far as I know, there isn't.\nThe way authorization is defined is unique, since there's no standard to authorization, unlike to REST that there are common standards like JAX-RS, Play and so on.\nIt wouldn't really make sense to do what you ask, as you may just as well end up writing the spec manually for that.\n. I understand that, but we pretty much tried covering in the mailing list. I won't have any magical suggestions here ;) We may need to add some more elaborate support for it.\n. Which version of swagger-core do you use? Also, which flavor (jaxrs, play, servlet, jersey, jersey2)?\n. Right, so you're using the spray-swagger library which takes advantage of swagger-core's annotations but does its own processing. For this, you need to open the issue on spray-swagger's repository.\n. No worries. I'm sure the spray-swagger author could help.\n. Looks like it's related to #815 - either it's not deployed yet to the pet store sample, or it's not fully fixed.\n. It's planned, but probably not for the initial release of 1.5.\n. Heh, thanks. It's really @fehguy. I'm just here for cheap entertainment.\nJSRs 303/349 are great, but there are many extensions to it that people would probably expect to be supported (hibernate validator for example). It'll be done, just a matter of priorities and capacity.\n. Closing this one in favor of #892. Please add relevant comments there if needed.\n. Do you use spray-swagger?\n. Actually, you don't. \nYou can create your own annotation, and annotate with with @ApiOperation, and that should work for introspection.\nI don't think it's a right step for us to add a target on fields as well. It doesn't make sense to any of the frameworks Swagger-Core supports, nor any other Java frameworks. My concern is that it'll end up confusing the users.\n. M2 wasn't released yet...\n. Closing as won't be merged here, but linked to #918 to be taken into account in the new Play module.\n. Assuming you're using JAX-RS, if you have a @HeaderParam it would translate to a header parameter. If not, you can use @ApiImplicitParam and mark it as a header parameter.\n. The beanConfig.setScan(true); line is the one kicking off the scanning.\nI realize it works on Jetty/Tomcat, but obviously something is slightly different in the WebSphere environment.\nTwo suggestions:\n1. Can you try setting the resourcePackage explicitly just for the sake of testing (that is, use the string rather than load it from an external resource)? This may not be relevant if your apiVersion is indeed 1.0 in your spring configuration as well (that's another way to test, change the value in the spring config and see if it changes in the /api-docs).\n2. The other option is that the BeanConfig is not being loaded properly or at the right time. How did you set it up to run?\n. Looks good, overall.\nI doubt this is the problem, but the line ScannerFactory.setScanner(beanConfig); is not really needed. Can you remove it and check again? Just to get it out of the way.\n. Is this the commercial version of websphere or the community edition? \n. Thank you for the additional information. Different classloaders could definitely be the issue.\nAre the JAX-RS resources and the beanconfig in the same module? \n. And to be certain, the ResourceConfig class is also in the same module as the resources, right?\n. I think the next step would be to enable the logs and try to see if there's anything there that can help us. Can you try that please? The samples have sample configurations for the logs. \n. Tracing the error and looking into Reflection's code, it looks like the only way to get that error is if resourcePackage is empty or null. \nI realize it doesn't make a lot of sense, especially since the other parameters seem to load fine.\nDo you have an additional web.xml configuration (or applicationContext.xml)?\nBy the way, you never mentioned what happened when you tried setting the resourcePackage explicitly (you only mentioned you did it).\n. what about the web.xml/applicationContext (for spring)?\n. Thanks for sharing the web.xml. Regarding the applicationContext, I only really need anything that may be related to Swagger (that is, relates to the swagger-core classes). I'm trying to figure out if there's a chance for duplicate definitions that may override each other.\n. Okay, that's good. Thanks for the patience with this, this is a but uncharted ground and unfortunately I don't have access to WebSphere to do local testing so it requires some back and forth.\nAnd since you say it works with jetty/tomcat, we know it's not a configuration issue. Most likely a class loading / ordering issue.\nDo you have any other application on that WebSphere instance that produces a Swagger documentation?\n. Do you have means to test the application on an isolated WebSphere instance? I'd rather we rule out any chance for conflict there.\n. It's been a really long time for me since I had used WebSphere, but if I recall correctly, there are ways to control the order of the application loading and the scope of the class loaders.\nCan you see if you can ensure that the new application is loaded before the old one for testing purposes?\n. Another thing that's worth checking is whether you have the reflections.org library in websphere's shared libraries directory and if so, which version is there. \n. Aha! So it was the com.ibm.ws.classloader.strict parameter?\n. Thanks for sharing the solution, it may prove helpful to other users as well. \nCan we close the issue? \n. I was going to check the option set it only for a specific application. The last sentence at http://www-01.ibm.com/support/knowledgecenter/api/content/nl/en-us/SSEQTP_7.0.0/com.ibm.websphere.nd.doc/info/ae/ae/xrun_jvm.html#com.ibm.ws.classloader.strict pretty much killed that suggestion.\n. Okay, just looked into the GitHub issues for reflections.org and it looks like some fixes were add (though one was rejected) that may help with resolving this issue.\nThis would require some further testing on your end.\nFirst step would be to exclude the reflections.org dependency from swagger-core. This is to ensure that maven picks the right version.\nThe second step is to add the reflections.org dependency explicitly, with version 0.10-SNAPSHOT. It should be available from Sonatype and not central.\n. Since you're already compiling it yourself, try modifying the pom.xml and set the target version - https://github.com/ronmamo/reflections/blob/master/pom.xml#L250 - to 1.6.\nAnother option is to use the jdk 1.5 profile - https://github.com/ronmamo/reflections/blob/master/pom.xml#L147-L157\n. That's an odd error. I'd expect it to work with source 1.7 and target 1.6. I'll try reaching out the reflections.org developer and see if he can provide any insight (at least regarding the websphere fixes).\n. @fehguy - how would you like to proceed here?\n. No, support for play 2.2.X has dropped since 1.3.9.\n. @maneeshsahu - any update on this issue?\n. This is not really an issue to swagger-core but rather to swagger-spec.\n. I'd advise upgrading to 1.3.12 as the behavior you describe is odd and seems like a bug rather than the intended behavior. Parameters should never have the type void.\n. Can you share the relevant part of the swagger spec that gives you the error/wrong output?\n. Sure\n. Okay, something is wrong with that output.\nCan you share the method signature that produces that (with the annotations)?\n. Did you set up a custom deserializer for MyEventRequest?\n. In that case, that looks like a possible bug with regards to the parsing of the typed class.\n. Okay, that's a separate issue. I was referring to the fact that the javadocs themselves are not up to date, not that they are not included in the build.\n. Fixed in develop_2.0.\n. Thanks for the PR but we're no longer making changes to the 1.3 branch. \n. To be sure, I assume here that you're using the 1.5.X version of Swagger (we recently released M1 of it), as only Swagger 2.0 has support for a readOnly property.\nHave you seen #695? I'm not sure it adds support to parsing the Jackson annotations as you use them, but it does offer support using our own @ApiModelProperty annotation.\n. That's swagger-core 1.3.7 which produces Swagger 1.2 spec files. Unfortunately, there's no support for readOnly with that version of the spec.\nIf it's important to you, you'd have to upgrade to the newer version.\n. No problem. Let us know if you need any assistance with it. \nThe upgrade to 1.5.0-M1 should be as simple as changing the dependency, assuming you have no custom configuration (such as custom converters).\nAlso, remember that as mentioned above, support for readOnly would only be available in M2 which should hopefully come out in 3-4 weeks.\n. Closing this for now as not against the right branch. @tandrup - if you'd like to check if it's relevant for 1.5 and resubmit against that, it would be greatly appreciated.\n. Can you change the PR to be against develop_2.0?\n. Which version of swagger-core do you use?\nWhat does your Application class look like?\n. Okay, that's interesting. \nAs for the second method, I suspect your provider isn't picked up because you didn't include it in the jersey.config.server.provider.classnames init-param value.\n. I can come up with a solution, but you may not like it :) The set up guide in the wiki provides several alternatives, one of which would be to use the Application class, but that would require you to manually set to classes. With Jersey 2 you can also use the ResourceConfig which can help by only going over the packages instead of explicit classes.\n. the jersey2 module extends the jaxrs module.\nUnfortunately, I don't have a specific usage example of ResourceConfig.\nHowever, I think if you look both here and in the ResourceConfig section here you'd be able to combine the two into a working example. Basically, the packages(...) and register(...) methods replace the direct work done with the Application class.\n. They use different packages, which is what is meant to isolate them. And at the moment, there won't be an easy way to decouple them.\n. Are you sure its docs are right? I get 404 for pretty much any URL.\n. Okay, that works.\nTo be clear, you changed the issue being described here? Technically, even with that sample, you don't get proper API documentation.\n. Another thing, will you be able to try using 1.5.0-M1 instead? Testing it, it seems the API call that doesn't work with the older dependency works with the newer one.\n. Okay, that's at least some progress. @fehguy would have to jump in here now.\n. @cppexpert - well, if it makes you happy, it makes us happy. \n. @steowens - I don't see how those two issues are related (the one you're talking about and the one the OP is). Do you also have your own ObjectMapper?\n. This is going to be fun to troubleshoot.\nDo you know which JAX-RS implementation you use? I assume it's Wink but it's worth checking.\nWhich specific Swagger-core dependency do you use? If your application includes more than one, provide the whole set of dependencies.\n. No, I mean the actual dependency. You're not using swagger-core directly, you're probably using swagger-jaxrs. Just trying to make sure.\n. I have a feeling you're going to have to open an issue with IBM's support (I assume you're using a commercial version of the Liberty Profile).\nIt looks like there's an issue with the combination of the CDI and the SPI mechanism. In swagger-core 1.5.x we utilize Java's native SPI mechanism to support plugin processing, making the basic code more modular and allowing easier extensions to it.\nIf you look at the error itself, it is not directly on the swagger-core classes but rather Java's SPI classes. Perhaps IBM can provide more information on that.\n. @fehguy may have additional input here, but I think this is a platform-dependent issue and not one that's directly related with swagger-core. You could try turning off CDI support (if that's possible) only to test the loading of the swagger modules, though I'm not sure that would give us more useful information.\n. You're getting 404 because there's  o longer api-docs. Swagger-core produces Swagger 2.0 specs which are formatted differently and are hosted as swagger.json at the context root of your application. \nThe guides are not updated to the 1.5.X release yet. \n. Is that with CDI enabled or without?\n. Thanks for the update. Keep us posted. It may also help future users as well.\n. @lemoncolly - another ping for progress :)\n. @lemoncolly - anything? I'm inclined to close this issue unless there are more details from IBM about it.\n. Closing it for now, please reopen if still relevant.\n. 1+3 are the same (even if in different annotations) as they both affect the responses of the operation.\nWe can also theoretically say that @ApiParam can have it, but that is relevant only to body parameters which do not require @ApiParam today (iirc).\nThe challenge is that remoteReference and dataType/response are mutually exclusive, so if the user gives a value to both... We basically need to well-define the behavior here. I'd say remoteReference would take precedence as it's less likely to fill that by mistake.\nFor completeness, we should add support for it in @ApiImpicitParam as well.\n. If we're going to allow remote refs for different things (responses, operations, models and parameters), it's probably better to keep a common name for them all.\n. remoteDefinition is explanatory for all of them.\n. sure, overridingDefinition would be bit long though but could work.\n. sure, reference, let's go with that. the javadocs would need to explain what it means.\n. Done in develop_2.0.\n. @murkein - have you tested it?\n. Closing as we're not going to release 1.3.13. Please upgrade to the latest version.\n. This is done.\n. M2 is fairly close. About a week or two.\n. You can always build a snapshot of develop_2.0 locally ;)\n. @Helmsdown - any updates on it?\n. Which one is that?\n. There's no swagger-core 1.3.19...\n. I've made some fixes (not pushed yet) that caused a the javadocs generation to fail. However, I didn't encounter the issue @cppexpert encountered. How did you run the javadoc compilation? Perhaps I need to test something else that I hadn't.\n. I have. Not getting the error the OP did. Got other javadoc-related errors which I'd fixed, but definitely not Invalid \u201cself-closing element not allowed\u201d.\n. @fehguy - duh, thanks for the update. I'll push the rest of the fixes.\n. @cprokopiak - did you ever test it with the 1.5 version?\n. Do you use CXF or Restlet? Can't find reference to JAXRSApplication anywhere but in Restlet.\n. To be sure, you're using 1.5.0 (with the io.swagger package), right?\nLooking at the original post and the new one, it looks like you're mentioning two different packages. Are your resources find directly under the phcdb.endpoint.rs package (it's a bit of an odd, yet valid, package name)?\n. The original question mentioned that this seems to be an issue when adding the singletons to the Application class. After migrating to the latest version of swagger-core, is this still the case? That is, if you comment the addition of the singletons, do you get the proper output or does the problem persist?\n. Okay, this is odd. The next steps I can think of is trying to turn up the logging (of swagger-core) or trying to create a small test case project to reproduce it so we can further investigate. I realize this may be difficult since you have your internal set up.\nBy the way, which version of CXF do you use?\n. I realize this is not necessarily simple for production code, but can you try upgrading to CXF 2.7.15 and run it?\n. @cprokopiak - any update?\n. Did you explicitly include jersey 2.6 in the pom?\n. I'm not sure I follow the problem then. If the jersey 2 version from swagger-core overrides your own, just manually exclude it.\n. That's unrelated to Jersey. The Swagger dependency is not included in the application. Do you pack it in your jar/war with maven on top of including it in the lib of tomcat? What exactly have you included in your tomcat lib directory?\n. Those are not enough.\nDo you use maven at all or manually manage your dependencies?\n. If you use maven (or any other dependency management system that uses maven's repositories), I'd strongly suggest using that instead of manually adding swagger-core to your application.\nOtherwise, you'd have to use mvn dependency:list on the relevant project/dependency and see the (long) list of dependencies you need to ensure that are in your tomcat's shared directory. The list you shared doesn't cover it.\n. While that issue should be fixed, is there a reason you don't use a security definition for the token? It seems to make sense here (though entirely up to you, of course).\n. Please take a look at https://github.com/swagger-api/swagger-core/blob/v1.5.2-M1/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/Bootstrap.java#L29 and https://github.com/swagger-api/swagger-core/blob/v1.5.2-M1/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java#L49-L53 - that should give you some information on how to use it.\n. Can you share your output swagger.json?\n. Actually, the spec looks fine with regards to the security definitions, it's all in there.\nThe info part is a different issue though, and I'd suggest opening a separate ticket on it.\n. No, the security aspect is implemented differently. You can utilize the api key box at the top right, for example. Please go over the swagger-ui README for more information.\n. Closing as duplicate of #1058 which contains more details.\n. I assume we'll follow the mathematical standard where [ and ] are inclusive and ( and ) are exclusive.\n. I've duplicated it in #957, but since the discussion is there, I'll close this one.\n. Have you tried excluding the offending dependency from the swagger-core library that you use?\n. Closing as we're not going to release 1.3.13. Please upgrade to the latest version.\n. Apologies, noticed this is related to the Play module and not the Jersey one. Please follow #918 for progress regarding the Play module migration.\n. This is done.\n. It should also be clear to users what's taken as tags for operations in case no tags is provided (I assume it's not empty), and possibly provide the logic to completely remove the tags for a given operation if that's the case (probably tags={}).\n. Neither points is relevant. Tags are not required to be defined at the top. They need to be defined at the top only if a user wants to add a description to a given tag. \nSo for 1) - it would require that when wanting to add a description. We could use the @Api annotation instead, but that invites possible conflicts. For 2) we don't need to do anything. Just add the tag to the operation itself.\n. I'd say for ease-of-use for developers, we keep the tags in @Api which all operations under it will inherit, and those can be overridden within an individual @ApiOperation tags. More complicated to implement, but I believe that would be the common use case instead of having to repeat it.\nYes to String[].\n\nFinally if a tag appears in the @ApiOperation we add it w/o a tag. \n\nI assume you mean here we add it w/o description, and then yes. But we only need to add it to the operation's tags. No need for complicated mechanism to add it to the top-level tags. It's perfectly acceptable if that list is partial. Should simplify the logic here.\n. @fehguy - shouldn't the @Tag annotation be removed now?\n. It is, which is why I think https://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/Tag.java should be deleted, no? Or is it used elsewhere?\n. :+1: \n. #938 is ready, build seems to pass.\n. Duplicate of #847.\n. Reopening for now pending further investigation. I believe the behavior here has changed from 1.3.\n. @cppexpert - closing this now as tested by @MDoumin. Please reopen if still an issue.\n. @itayavra - if you're using the swagger-magen-plugin, you'd need to open an issue on that project. \n. Will check that, but spec-wise, you're probably better off describing it as a security definition and not as an operation parameter.\n. Can you refer me to that discussion please?\n. It will be handled soon.\n. It's a whole set of logic that needs to he added to the Reader.java.\n. It's going great, thank you :) Seriously though, I believe we could get it done next week. This week may prove to be difficult.\n. @olensmar - sure, we'll talk about it offline\n. @alexworden - thanks!\n. @prota - this is unrelated. The issue is on the 1.5.X branch. Unfortunately, we no longer issue new releases for the 1.3.X branch.\n. Considering others have reported other bugs related to @ApiImplicitParam, it means that they are now successfully scanned and processed (definitely not ignored). If you're still experiencing an issue, feel free to open a new ticket and we'll see how we can investigate it.\n. I took the sample you shared in the original post, updated the dependencies, package names and imports, and it loads the implicit parameter just fine. You may have missed something in the process, I don't know what. Make sure you update the web.xml as well (com.wordnik.swagger... -> io.swagger...).\n. Actually, the fix is available in 1.5.0.\n. Oh my, that's embarrassing. We meant the develop_2.0 branch. @fehguy - it's time to do a clean up. :)\n. Closing it assuming it is fixed. Please reopen if needed.\n. @cppexpert - any updates?\n. Thanks for the update :)\n. swagger-core is a runtime library and does not have access to javadocs which are available only at compile time. Some compile time libraries such as Enunciate or the swagger-maven-plugin may be able to utilize the javadocs to generate the documentation.\nThere's currently no integrated support for internationalization. Feel free to follow this issue to see progress.\n. @swarupe04 - can you please upgrade to the latest (1.5.1-M2) and see if the issue still exists?\n. What type of parameter is the enum? It's possible it's solved in the develop_2.0 branch.\n. For path params - https://github.com/swagger-api/swagger-core/issues/875.\n. In that case, can we close this issue and open a new one for the enums?\n. Could you open the issue on the enums? It's better when the user that encounters it opens the issue ;) Thanks!\n. Since we're not going to release a new version of 1.3 (for Play or otherwise), I'll link the existing Play issues here so we can make sure those are taken care of as part of the migration.\n. - [ ] #944 - Swagger & java play 2 class loading problems 1.3.12\n- [ ] #956 - Play Framework binders\n- [ ] #827 - Feature/getresource encoding\n- [ ] #1115 - Develop scala 2.11 \n- [ ] #1272 - Add info (metadata) in play module\n. We'd like to push it forward just like any other project, but as you can imagine, we have limited resources (and not necessarily enough experience with Play). The best way to push it forward is work together on the solution.\n. https://github.com/swagger-api/swagger-play\n. #1090 should cover this one.\n. I honestly don't understand what you're trying to achieve.\n. You'd need to give a concrete example (that is, code) to explain the use case. I don't see how it's related to servlet module at all.\n. I think I get what you're trying to suggest here, as a generic way to describe APIs which is implementation-agnostic. While it's an interesting idea, it's a bit out of scope for this issue. Right now, our main drive is to migrate the 1.3 module to 1.5.\nTo support what you want, we may need to plan it further and it may be an expansion/generalization of the servlet module. You can open a new issue as a feature request, but I cannot guarantee high prioritization.\n. it would help mentioning the version of Jersey that you use as well as the version of swagger-core.\n. Well, that release is a year and a half old. I'd start by upgrading to the latest using either 1.3.12 or 1.5.3-M1.\n. That's what you should try, yes.\n. @mayuranchalia - have you tried it with the 1.5.X version?\n. @mayuranchalia - please try. It may solve many issues.\n. Closing this due to lack of activity. Please reopen if needed.\n. @smil2k - better open a new ticket. This is for an entirely different lifetime of the project.. Sorry for the delayed response.\nCan you provide more details? What's the class you're trying to replace? What does your converted look like (the whole code)?\n. Where do you have com.xml.rpc.xsd.ArrayOfObject? As an input? output? Can you provide a sample code where it is used?\n. You created a class with the package com.xml.rpc.xsd.ArrayOfObject? And as said, please provide a sample of where the class is used, as request, response, including all the annotations around it.\n. This is due to an issue with the json schema we had for the swagger specification which was fixed a few minutes ago. @whitlockjc needs to release a new version of swagger-tools with the new schema, and then @mohsen1 can apply it to the editor and it will valid there as well.\n. The leading slashes are not really a mistake. It sounds to me that this is more of an issue with the swagger parser not being able to consume it properly.\n. Which version of swagger-core do you use?\n. Can't say, but we really need that information to move forward.\n. This is an issue with the Swagger specification as it doesn't allow you to describe overloaded operations that return a different result based on the mime type. This is discussed in https://github.com/swagger-api/swagger-spec/issues/146.\nSince it can't be described by the spec, swagger-core cannot support this use case.\n. The value of the @Api affected where the documentation was hosted, not the documentation itself. There's just no way have it documented in Swagger 2.0 and as such there can't be a workaround to it here.\n. @BigSocial - I've replied to your comment on the other thread.\n. Using which version of swagger-core?\n. @Flamenco - thank you for the suggestion. Are you looking to create a dynamic way to filter out the spec? Can you provide a use case for usage?\nI imagine you know you can create a filter using the SwaggerSpecFilter.\n. @shivangshah - it was indeed released under 1.5.0-M2.\n. @shivangshah - this should be fixed in develop_2.0 now. Can you try?\n. @shivangshah I don't think we have a published snapshot for it yet, so you'd have to build it on your own.\n. @shivangshah - I'm afraid that at this point you'd have to provide us with a sample project that mimics the problem for us to further investigate.\n. Which version are you using?\n. Sorry for the delayed response. Since we're not going to deal with it in 1.3, I've made reference to it from #918 so we can look into it in the new module.\n. Then just don't merge or close it for now. The problem is that the descriptions are wrong and they look funny in the online petstore sample.\nI can look into the swagger-ui e2e tests too, though it may be too late with the weekend release.\n. Sounds like it worked out. Is there any other issue or can this ticket be closed?\n. 2.1.0-M2 is the latest (just released). I believe that part of the footer was removed as you can see from http://petstore.swagger.io.\n. @JunNakamura - it's not supposed to handle base_path because the spec states it needs to be basePath.\n. Are you looking to do that within a single web application?\n. That's not really supported with 1.3.X. @fehguy - is this possible with 1.5.X?\n. Eventually, the Swagger.java is what's being served. You can check the code to see how it is currently served and copy the mechanism to serve another separate copy of it.\n. Closing due to lack of activity. Please reopen if needed.\n. Updated ticket to include @ApiOperation.\n. Fixed in develop_2.0.\n. Updated original topic with an alternative to protocols()'s value.\n. FWIW, don't change the type to string[], let's keep the breaking changes for a minimum Keep it as string.\nAlso, make sure to provide proper tests, especially with the combination of @Api and @ApiOperation.\n. If we implement it, we need to modify the javadocs for the annotation as well.\n. Fixed in develop_2.0.\n. Sorry for the delayed response. Since we're not going to deal with it in 1.3, I've made reference to it from #918 so we can look into it in the new module.\n. Looks right, though you may want to take into account the other validation constraints that can be applied to parameters as well (exclusiveMinimum/Maximum, min/maxLength and so on). If you look at the Property objects, you'll see that they have some sort of structure that supports it. You may want to look into a fuller solution.\n. Fixed in develop_2.0.\n. I imagine you didn't enable cors - https://github.com/swagger-api/swagger-ui#cors-support.\n. You probably need to add an asterisk value for all the headers, for example:\njava\n        cres.getHeaders().add(\"Access-Control-Allow-Origin\", \"*\");\n. We don't have specific documentation for Grizzly (it's not that common), but there are a few topics about it in the google group that may be able to provide more information.\nTo be sure this is a CORS issue, open your browser's web console and check the errors as you try reading the api-docs.\n. I assume that's because that's not the right URL. Is your api-docs hosted as the root of your application (literally /)?\n. Do you get anything if you open those URLs directly (and not under the swagger-ui)?\n. Okay, that sounds like you're trying to load the swagger-ui URL under swagger-ui and that obviously doesn't work. Unfortunately, the information you provide is a bit unclear.\nAssuming you do host your swagger-ui at the root of your application (that is http://localhost:8889), what happens when you open the following URLs directly in your browser (and not in swagger-ui):\n1. http://localhost:8889/api-docs\n2. http://localhost:8889/api-docs/\n3. http://localhost:8889/SERVICE1_REST/api_docs\n4. http://localhost:8889/SERVICE1_REST/api_docs\n. Any chance you can hop in our IRC channel? Would be easier to solve it synchronously. http://webchat.freenode.net/?channels=swagger\n. Then I assume any other IRC client won't work. I'm in a meeting right now, but will look into the details you provided a bit later.\n. @gkbalu - apologies, this was lost under the workload. Have you managed to resolve it or do you need further assistance?\n. Closing due to lack of activity. Please reopen if needed.\n. What's done is done.\n. https://github.com/swagger-api/swagger-core/releases - changelog\n. Thanks for the feedback, updated.\n. It seems like we overwrote the JAXB annotation parsing of Jackson.\nFor now, the simple solution would be to add both Json.mapper().registerModule(new JaxbAnnotationModule()); and Yaml.mapper().registerModule(new JaxbAnnotationModule()); and it should solve the related issues.\n. I assume you mean JAXB 2.0?\nYou can put it anywhere that loads on start up in your application. If you use BeanConfig, you can set it up at the same place. If you use the Application subclass to register your resources, you can set it there.\n. @Poohie - you don't do that via BeanConfig. You can just add those two lines wherever you initialize the BeanConfig (simply copy and paste as-is, you'd need to add the proper imports as well).\n. Aha! Yes, if you use Spring to configure the BeanConfig, then you can't easily use that.\nThose two lines can be added anywhere in your own code (that is, not configuration) that runs as part of your application start up. If you don't have any, then you'd have to create something like it. \nAnd since you shared your configuration, I may add that you don't need both the servlet DefaultJaxrsConfig and the BeanConfig configuration together, they pretty much override each other. \nYou can also take a look at the Bootstrap servlet we have in our samples (https://github.com/swagger-api/swagger-core/blob/master/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/Bootstrap.java) - that's used to initialize Swagger with more information, and that's also a place where you can put those two extra lines of code.\n. @Poohie - thanks for the update and confirmation it works.\n. @fehguy - Depends. Do we want to support JAXB annotations by default? If so, I'll fix it in the code. If not, I'll document how to add support for it.\n. Okay, after some additional research, we never provided full support for JAXB annotations but rather a subset of those. I believe the same subset is supported now as well.\nThere is a way to add full scanning as mentioned above, but we're not going to add it to the code for now. We'll add documentation for the process so that it would at least be easier for the users.\n. What fields do you find to be missing in the output? Need some explicit examples of what you have and what you expect to see.\n. This may actually be a problem with Jackson. First thing to try is to upgrade the Jackson dependencies to the latest, which I think is 2.5.4 and try (need to make sure the new version overrides the existing ones for all relevant dependencies). \nIf that doesn't work, we'd need some simple test case that reproduces the problem which we can use for further debugging.\n. Before that, let's run a little test.\nCan you add something like @XmlTransient on any of the fields? (I assume you don't use Jackson annotations at all). To be on the safe side and completely clobber it, you can put it on the field declaration, setter and getter just to be on the safe side. Then run it and see if that field disappears from the documentation.\nIf the property disappears, then the issue is not with the integration with Jackson but rather the Jackson parsing itself. \n. And before JaxbAnnotationMappingModule, @XmlTransient was ignore, correct?\n. Yeah, so as I was afraid, this is an issue with the JaxbAnnotationMappingModule Jackson component and not really within our control. I can open an issue with Jackson about it, but a simple project that reproduces it may help with further debugging there. Can't make any promises regarding to when/if this will be fixed.\nFor now, I believe you can overcome it by writing your own model converters, but that would indeed require extra coding from your end.\n. @CSchulz - thanks for opening the issue on Jackson, I was away for a while. We'll follow up on it.\n. Can you create a SSCCE that would help us debug this issue?\n. @juergenzimmermann - if you can't provide us with a test project, we won't be able to debug it.\n. For general support questions, it's better to use the google group. Please start a thread there and provide additional information such as the version of swagger-core and CXF you're using, plus the method you use to configure swagger-core (web.xml, BeanConfig and so on).\n. Fixed it in the develop_2.0 branch - https://github.com/swagger-api/swagger-core/commit/3185d08e6f72a60bf88fe711424cd3d7d6c1326d#diff-a4d244d88e30f7e9e8c99c041812f838.\n. Which version of swagger-core do you use?\n. https://github.com/swagger-api/swagger-core/tree/v1.3.12/samples/java-resteasy-spring shows an example where the interfaces and implementations are in different packages and it works fine.\n. First, what part of your code generates the default value?\nSecond, you should try that with the latest version first - 1.5.1-M2.\n. It is. The point release refers to the milestone, and not the other way around.\n. Not saying the @DefaultValue shouldn't be read, but for now, you can try adding the default value to the @ApiParam:\njava\n            @ApiParam(value = \"report request json object\", defaultValue=\"{}\")\n            ReportRequest request,\n. oh, I missed your comment.\n. Which of the swagger-core dependencies do you use?\n. Is the issue with the default value only when used within a BeanParam?\n. @whitlockjc - you handled the BeanParams in 1.5, no? Can you please check this issue?\n. @swarupe04 - we're working on this issue now, but \"DefaultValue on Post body json\" is unclear. Can you supply a sample code for it to show us exactly what isn't working?\n. @swarupe04 - okay. We could probably provide partial support for it. It may be translated to a string default value and not a JSON object, which will in effect create an invalid Swagger definition.\n. @csuich2 - I believe that would be supported with JSR 303 integration (#800).\n. Fixed in develop_2.0\n. Fixed in develop_2.0.\n. @tomtit - are #988 / #1002 related?\n. Thanks, but in that case, this issue can be closed.\n. Related to #847.\n. @vvicario - any updates?\n. Thanks. In that case it looks like there's a problem. We'll investigate further.\n. @vvicario - looks like swagger-dropwizard has released a new version that's based on our 1.5 version. That produced Swagger 2.0 specification files which is the latest one.\n@tomtit has tested a similar use case (he's going to add the test to the code) and the output was fine. So this could very well be an issue with swagger-core 1.3.X. If you can upgrade to swagger-dropwizard 0.7.0, it should solve your problem.\n@kinetifex - which library and version do you use for generating the Swagger definition?\n. @kinetifex - looks like you need to upgrade to 1.5 then.\n. @vvicario - are you able to upgrade and see if it works? I'\n. This is fixed in develop_2.0.\n. It will not affect the operation at all, and the behavior would be the same as if the tag was never declared at the top level tags (which means, if the tag appears in an operation, it will still appear in the UI as a tag, but will have no description, for example).\nWhile working on the migration of the samples, I noticed that when we filter the operations, we basically hide all the 'store' operations, unless accessed with the special-key. However, since the tags are declared elsewhere, they still appear at the top-level tags and it's a bit obvious that something is out of place.\nIs that clearer?\n. Fixed in develop_2.0.\n. Fixed in develop_2.0.\n. Also updated the java-jersey2 sample with upgrading to jersey 2.6 and using the @Providers under com.wordnik.swagger.jaxrs.listing only.\n. And just a small cleanup for the mule sample.\n. @griswold - keep in mind there are two ObjectMappers - one in Json and one in Yaml and they both need to be taken into account.\n. @griswold - keep in mind there are two ObjectMappers - one in Json and one in Yaml and they both need to be taken into account.\n. This is a duplicate of #800.\n. This is a duplicate of #800.\n. @bertramn - it's been a while since I tinkered with these things, but how would you normally register a custom JacksonAnnotationIntrospector in your own application?\n. @bertramn - it's been a while since I tinkered with these things, but how would you normally register a custom JacksonAnnotationIntrospector in your own application?\n. That would affect the YAML generator. If you want affect the JSON, you can get the ObjectMapper using JSON.mapper(). So if you throw that around your application bootstrap, you can use that to register your custom introspection and it should work.\n. That would affect the YAML generator. If you want affect the JSON, you can get the ObjectMapper using JSON.mapper(). So if you throw that around your application bootstrap, you can use that to register your custom introspection and it should work.\n. Yup. Looks like extending the YAML ObjectMapper would be a tad more challenging at the moment.\n. Yup. Looks like extending the YAML ObjectMapper would be a tad more challenging at the moment.\n. But would that affect the YAML generation as well, @fehguy? That's controlled by a different ObjectMapper created in the SwaggerSerializers which is not as easily accessible.\n. But would that affect the YAML generation as well, @fehguy? That's controlled by a different ObjectMapper created in the SwaggerSerializers which is not as easily accessible.\n. @fehguy - there may be a slight issue then. It looks like SwaggerSerializers uses its own object mapper for YAML rather than using the Yaml class.\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/main/java/com/wordnik/swagger/jaxrs/listing/SwaggerSerializers.java#L34-L39\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/main/java/com/wordnik/swagger/jaxrs/listing/SwaggerSerializers.java#L71\nIs this the intended behavior or should it be rewritten to use the Yaml class?\n. @fehguy - there may be a slight issue then. It looks like SwaggerSerializers uses its own object mapper for YAML rather than using the Yaml class.\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/main/java/com/wordnik/swagger/jaxrs/listing/SwaggerSerializers.java#L34-L39\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/main/java/com/wordnik/swagger/jaxrs/listing/SwaggerSerializers.java#L71\nIs this the intended behavior or should it be rewritten to use the Yaml class?\n. Great, I'll open an issue.\n. Great, I'll open an issue.\n. @bertramn - any updates?\n. @bertramn - any updates?\n. @bertramn - it's updated in develop_2.0.\n. @bertramn - it's updated in develop_2.0.\n. Heh, oh wow. Can you please submit a PR fixing this issue? If so, please submit against the develop_2.0 branch.\n. Heh, oh wow. Can you please submit a PR fixing this issue? If so, please submit against the develop_2.0 branch.\n. It should be fairly easy, just make sure to start off the develop_2.0 branch and submit against the develop_2.0 branch. Thanks for giving it a shot.\n. It should be fairly easy, just make sure to start off the develop_2.0 branch and submit against the develop_2.0 branch. Thanks for giving it a shot.\n. Since the PR was merged, closing the issue.\n. Since the PR was merged, closing the issue.\n. Technically, if you compare a literal string, there's no need to check if the compared value is null first as it won't throw NPE (just return false). But as far as a PR goes, it looks good. Congrats on the first one :)\n. Technically, if you compare a literal string, there's no need to check if the compared value is null first as it won't throw NPE (just return false). But as far as a PR goes, it looks good. Congrats on the first one :)\n. Right you are!\n. Right you are!\n. Fixed in develop_2.0.\n. Fixed in develop_2.0.\n. It actually does - https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiOperation.java#L59.\n. It actually does - https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiOperation.java#L59.\n. We're keeping the same signature for annotations where possible and only adding new fields if needed. Since in nickname was changed to operationId between 1.2 and 2.0, and since we want to keep the migration between swagger-core 1.3 to 1.5 as simple as possible, we decided not to change the name of the field in the annotation.\n. We're keeping the same signature for annotations where possible and only adding new fields if needed. Since in nickname was changed to operationId between 1.2 and 2.0, and since we want to keep the migration between swagger-core 1.3 to 1.5 as simple as possible, we decided not to change the name of the field in the annotation.\n. I'm working on a revamp to the javadocs, should make a PR with the updates soon.\n. I'm working on a revamp to the javadocs, should make a PR with the updates soon.\n. This is actually due to this bug - https://github.com/swagger-api/swagger-core/issues/971 which is already fixed in develop_2.0.\n. This is actually due to this bug - https://github.com/swagger-api/swagger-core/issues/971 which is already fixed in develop_2.0.\n. Thanks for bringing it up. Can't guarantee a timeline here, but we'll try to look into it.\n. Thanks for bringing it up. Can't guarantee a timeline here, but we'll try to look into it.\n. Apologies, read the issue too quickly. Regarding @ApiModelProperty, you are correct. Organization-wise though, you need to pick whether this issue deals with this problem or the feature request, and open an additional issue to cover the other part. We can definitely fix the @ApiModelProperty issue.\n. Apologies, read the issue too quickly. Regarding @ApiModelProperty, you are correct. Organization-wise though, you need to pick whether this issue deals with this problem or the feature request, and open an additional issue to cover the other part. We can definitely fix the @ApiModelProperty issue.\n. I can change the tags, it's no problem, but if you a new one for the bug, make sure to change the title of this one.\nI'd create one for the feature request and leave this one for the bug. Up to you.\n. I can change the tags, it's no problem, but if you a new one for the bug, make sure to change the title of this one.\nI'd create one for the feature request and leave this one for the bug. Up to you.\n. If you need JAX-RS 2 support with RESTEasy, use the swagger-jersey2-jaxrs module. The module adds support for jax-rs 2 and file uploads when using Jersey 2. It should work just as well for RESTEasy, only without the file upload support. If you require it, that can be resolved differently.\n. If you need JAX-RS 2 support with RESTEasy, use the swagger-jersey2-jaxrs module. The module adds support for jax-rs 2 and file uploads when using Jersey 2. It should work just as well for RESTEasy, only without the file upload support. If you require it, that can be resolved differently.\n. @ben-manes - any updates?\n. @ben-manes - any updates?\n. master is stable, develop_2.0 is snapshot.\n1.5.1-M2 is indeed newer than 1.5.3-M1.\n. master is stable, develop_2.0 is snapshot.\n1.5.1-M2 is indeed newer than 1.5.3-M1.\n. @natros - there's no file upload support for RESTEasy. You can easily add it on your own though by creating a SwaggerExtension. Check out https://github.com/swagger-api/swagger-core/pull/1023 for an example. Registering the SwaggerExtension is very simple as we use the standard SPI mechanism.\n. @ben-manes - any updates?\n. You asked which release to try and were provided with the information.\n. Thanks. I'll keep the issue open so that we may be able to provide easier integration in the future.\n. What's the question, @mrj365?\n. Awesome, thanks! :)\n. Fixed in develop_2.0.\n. That's a problem with Glassfish 4.1 as it includes an old version of Jackson that supersedes the one provided with swagger-core.\nTo solve it, you'll have to:\n- Download Glassfish-4.1 b13\n- Replace all the Jackson jars under the common lib with version 2.42\n. I'm afraid there's no way around it, as far as I know.\nAnd yes, you should always test such changes in some testing environment before changing in production ;)\n. Can you run curl -I <url of a REST API> and paste the result here?\n. Any chance your API is public?\n. @asanka88 - any update?\n. Fixed in develop_2.0.\n. @ApiParam doesn't have an example property to it because there's no equivalent in the specification itself so there won't be a way to represent it.\nDuring the discussions around Swagger 2.0, some people raised it as an option but eventually we decided to not include it.\n. @buremba - the whole concept of examples/samples is much more complicated than it seems. I've been looking for the discussion regarding examples for params, but cannot find it right now. \nIIRC, the reason was simple - complex models have the examples in their definition, so there's no need to add those. For primitives, samples don't really add much info. If a field is of type integer, providing a sample of 123 is a bit pointless.\n. If you're using spring-mvc, you're not using swagger-core...\n. @kungfoo - if you're using jax-rs 2.0, you'd need the swagger-jersey2-jaxrs dependency. Yes, it would work for resteasy as well.\n. Also, FWIW, https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/main/java/com/wordnik/swagger/jaxrs/listing/SwaggerSerializers.java will give you a more complete solution than https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/main/java/com/wordnik/swagger/jaxrs/json/JacksonJsonProvider.java so you can use that s a Provider instead (it also supports YAML).\n. @fehguy - I think so. We have it for easier migration, but I'm planning on making it clear in the migration guide that the ApiListingProvider and SwaggerSerializers providers are the only ones needed, making it much more easier to configure without caring which jax-rs module is used.\n. Thanks. I'll probably get around to look at it tomorrow.\n. @kungfoo - swagger-core itself uses Java 7. We use whatever is needed.\nI'm a bit confused by your finding. Can you share the specific line of code you think is causing the problem?\n. Not really sure what you're trying to build though.\n. Which branch?\n. Just built it locally, went fine. Try running mvn clean install.\n. Not sure what to tell you.\n[INFO] Reactor Summary:\n[INFO]\n[INFO] wordnik-swagger-project ............................ SUCCESS [  2.010 s]\n[INFO] swagger-annotations ................................ SUCCESS [  9.194 s]\n[INFO] swagger-models ..................................... SUCCESS [  5.911 s]\n[INFO] swagger-core ....................................... SUCCESS [ 27.123 s]\n[INFO] swagger-jaxrs ...................................... SUCCESS [ 17.405 s]\n[INFO] swagger-jersey2-jaxrs (Jersey 2.x support) ......... SUCCESS [ 12.728 s]\n[INFO] swagger-jersey-jaxrs ............................... SUCCESS [  4.495 s]\n[INFO] swagger-hiberate-validations ....................... SUCCESS [ 11.868 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 01:31 min\n[INFO] Finished at: 2015-04-30T17:21:24+03:00\n[INFO] Final Memory: 57M/559M\n[INFO] ------------------------------------------------------------------------\nmvn -version\nApache Maven 3.3.3 (7994120775791599e205a5524ec3e0dfe41d4a06; 2015-04-22T14:57:37+03:00)\nMaven home: /usr/local/Cellar/maven/3.3.3/libexec\nJava version: 1.8.0_45, vendor: Oracle Corporation\nJava home: /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"mac os x\", version: \"10.10.3\", arch: \"x86_64\", family: \"mac\"\n. @cowwoc - don't think we can do much more here.\n. You can open an issue on swagger-spec with a detailed request if you'd like it to be considered for a future version of the spec.\nFor now, you'd have to document it manually in the notes field\n. @jharter- did you mean to comment on #1059 instead?\n. Does this mean we can close this issue again?\n. To an extent. It's supported in swagger-jersey-jaxrs.\n@fehguy - Shouldn't https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jersey2-jaxrs/pom.xml#L74 point at swagger-jersey-jaxrs instead?\n. Right, forgot they changed the package signature, so it is indeed missing.\nAlso, that's not a workaround, that's a solution :)\n. It's like one step before submitting a PR to add it to https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jersey2-jaxrs/src/main/java/com/wordnik/swagger/jersey/SwaggerJersey2Jaxrs.java (in the develop_2.0 branch of course) ;)\n. Fixed in develop_2.0. Thanks for the PR!\n. We hope to make a point release in the next few days.\n. @Helmsdown - Any input regarding @lugaru1234's suggestion?\n. Is this a new integration or an old project?\n. Moving it to a different jar shouldn't be a problem unless it's loaded by a different classloader (like in an OSGi environment and such). Which version of swagger-core do you use?\n. It's provided? :)\nCan you try upgrading to 1.3.12? I don't think it would help, but worth a shot.\n. Perhaps @fehguy would have an idea, but this may take a while to investigate. As an alternative, I'd recommend migrating to the 1.5 version which has quite a few enhancements and would be easier for us to provide support.\n. Yup. The link is in the wiki's sidebar.\nOn May 3, 2015 11:24 PM, \"Mauricio Fenoglio\" notifications@github.com\nwrote:\n\nOk, I will try to update, is there a guide like this one :\nhttps://github.com/swagger-api/swagger-core/wiki/Swagger-Core-RESTEasy-2.X-Project-Setup#hooking-up-swagger-core-in-your-application\nFor the 1.5 version?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1026#issuecomment-98538520\n.\n. @m-radzikowski - due to a change in the spec, we had to rework how tags are generated. While /sample would indeed be converted to sample as a tag, it will not take its description due to possible conflicts.\n\nThe way to configure the description now is different. You can take a look at the sample to see how it works - https://github.com/swagger-api/swagger-core/blob/master/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/Bootstrap.java#L35-L45.\n. When moving from 1.3 to 1.5, we left the annotations as-is besides adding a few new fields. This was done to be as backwards-compatible as possible.\nTo keep a similar behavior to previous versions, the @Api#value() is converted to a tag, but we indeed added @Api#tags(). This allows you to set multiple tags, and will override the value() if one is provided.\nThe description is indeed redundant now. Still WIP, but I'm updating the javadocs as you can see here - https://github.com/webron/swagger-core/blob/annotation_docs/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/Api.java#L60-L66.\n. @okigan - that's a fair question. The change is derived from the difference in Swagger 2.0's grouping method. With it, @Api can now affect multiple groups (aka, tags). In fact, there could be multiple @Apis with the same tags, and conflicting descriptions.\nOne way would be to apply the description to all the tags, allow the last-read to override whatever was found before, but that may very well lead to confusion when hitting unexpected results.\n. There's still ambiguity. You can still have two @Apis with the same value() and a different description(). Also, documenting the suggested behavior in a way people would be able to follow is quite challenging.\n. @wing328 - it's not deployed yet. will be deployed with an official release.\n. The question is a bit unclear.\nFirst, while not impossible, returning application/javascript is a bit odd.\nSecond, what kind of GET operation? On one hand you say there's a 200 response, and on the other you say it's 406, so which is it? What exactly do you experience?\n. Do you actually return a javascript file from the operation? Or is it JSON? Or something else?\n. Really? Have you tried setting it to application/json?\n. Keep in mind the module name is.... jersey2.\n. Perhaps we should resolve it as part of #1244.\n. For @ApiOperation and @ApiResponse it's okay to have map. This is specifically for @ResponseHeader. \n. Should we remove it or keep it until we implement the usage for it? There's no way, for example, to set externalDocs for an operation, as far as I can tell.\n. This is now used by @Tag, no reason to remove.\n. What kind of exception? It should work fine and is used by some of our samples.\n. Thanks for the update.\n. Fair point @fehguy. I'll go over the PR with @tomtit but let's keep it open for now.\n. @hellfur - Thanks you for the PR. However...\nFirst, we only accept PRs against the develop_2.0 branch.\nSecond, we may want to make it configurable so that people can choose whether to deep scan or not.\nThird, labels are a huge no-no.\n. Heh, that's awesome. Not really related to swagger-core, but I get why you opened it here.\n@olensmar - can you look at that please?\n. All better now, thanks for reporting.\n. Thank you for the PR but those need to be submitted against the develop_2.0 branch. Can you please resubmit?\n. @mayuranchalia - was this resolved for you?\n. Great, thanks for the update.\n. We're not developing the 1.3 branch anymore. If you upgrade to 1.5 and experience the same issue, we'd be happy to resolve it there.\n. https://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiOperation.java#L94-L98 \nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/Api.java#L76-L82\nThey are deprecated. Unfortunately the javadocs were not updated in previous released but will be in the next one.\n. It's not an array, so you can't really guarantee order.\n. In Swagger 1.2 operations were an array. In 2.0 they're not.\n. They do. In JSON parsing, order of object's properties order is not guaranteed.\n. Yes, but there's no position attribute in the spec, so it can't be exported.\n. Closing for now, Please reopen as needed.\n. @sschwell - the spec is not going to change any time soon to support it. The order of resources can be controlled based on the order of the tags as you declare them. The order of the operations can't.\n. If it's not working for you, it's a bug. Just file a new ticket.. I think the problem is slightly different. The description itself is set in the code as a single line (no line breaks) and as such should be represented as either a single line or a folded block (>). \nNot really sure why Jackson/SnakeYaml output it that way.\n. So far I haven't been able to find any configuration or reason for it to happen. I'll try catching Jackon's author online later.\n. @earth2marsh - I'm definitely not an expert in YAML, but it seems to be a valid format, at least in YAML 1.1/1.2. Take a look at Example 7.5 under http://www.yaml.org/spec/1.2/spec.html#id2787109.\nWhile some tools seem to be unable to process it properly, the following tools suggest it is just fine:\nhttp://www.yamllint.com/\nhttp://www.json2yaml.com/\nhttp://nodeca.github.io/js-yaml/\nSo... I don't think there's much we need to do here.\n. @earth2marsh - I'm just glad it gave me the opportunity to dive into YAML a bit more. I should probably go through its whole spec so learn how we can benefit more of it.\n. Well, the reason is simple. JerseyJaxrsConfig doesn't really serve anything and it shouldn't be mapped to any URL.\nThe Swagger definition would be exposed by the ApiListingResource and will be available at swagger.json directly under your context root.\n. I wouldn't use the JerseyJaxrsConfig at all, but rather the BeanConfig (as described in the tutorial). It allows for better definitions and you can set it right after the ResourceConfig initialization.\nGlad it worked out though, I'll close the issue now. \n. @wing328 - not really sure what's missing.. byte is treated as a valid format there.\n. Fair enough. However, as mentioned in one of the codegen comments, byte format is intended to be a Base64 encoded string, hence the string type. I'm not sure that would solve the issue that led you here.\n. @wing328 - can you open an issue about it on swagger-spec? I want to make sure that this was indeed the intent.\n. @wing328 - sure. That issue was originally opened for 1.2, but it applies to 2.0 just as well.\n. Please refrain from opening new tickets on an issue you're already opened and is still open.\n. Need to see how this is going to work with #1066. @fehguy, are we going to keep the 1.2 pet store specifically in the new repo and just modify it there?\n. I'm also not really looking forward to releasing 1.3.13 just to solve this thing. Would rather not update the spec either though. The issue with the file type is an old one, and I was sure we fixed it, but unfortunately we didn't.\n. Which version of swagger-core do you use?\n. Swagger-core 1.3.X (which is the one you use) doesn't support Maps.\nI see you assume this is to take form parameters and not really a body parameter. In that case, you'd have to describe each form parameter separately. If you require arbitrary input, you cannot do that with swagger-core 1.3.X. In 1.5 you can, if this is a body parameter, but not if it is form parameters.\n. I assume it shows up because your method accepts a parameter which is automatically treated as a body parameter. You'd have to filter it out.\n. No annotation. You need to use a SwaggerSpecFilter for it.\n. @jharter - My bad, completely forgot. You can set @ApiParam(hidden=true) on it and it should hide it.\n. Well, the problem is I don't know exactly which version you use as the version is not specified in the dependency snippet. If you don't want to upgrade to 1.5, then the latest version of 1.3 is 1.3.12.\n. Maven :) Which jax-rs implementation do you use?\n. I just want to refer you to the correct guide, that should help you integrate 1.5 easily with your code. So let's see what the response to the JAX-RS implementation would be.\n. None of these are related to the JAX-RS implementation. It'd be difficult to offer more support without that information.\n. Yes, it most certainly does. Unfortunately, we don't have a guide ready for CXF integration.\nHowever, we released today a general migration guide from 1.3 to 1.5 that may be enough (and it would be great to get some feedback). \nThe guide is located here - https://github.com/swagger-api/swagger-core/wiki/1.3--1.5-Migration.\nFor the guide, you should know that the dependency name you need to use is swagger-jaxrs and the version is 1.5.1-M2. \nCan you give it a shot?\n. That's the dependency. Right now you probably have:\nxml\n        <dependency>\n            <groupId>com.wordnik</groupId>\n            <artifactId>swagger-jaxrs_2.10</artifactId>\n        </dependency>\nSo you need to replace that with:\nxml\n        <dependency>\n            <groupId>com.wordnik</groupId>\n            <artifactId>swagger-jaxrs</artifactId>\n            <version>1.5.1-M2</version>\n        </dependency>\n. Fixed in develop_2.0.\n. Which version of swagger-core do you use?\n. Okay, since I'm not sure if this issue was fixed already or not, can you please upgrade to 1.5.1-M2 and see if it persists?\n. Right, the problem is clear. Can you try upgrading?\n. Very well, we need to take care of it.\n. 1.5.1-M2 is the newer release. I don't recall exactly what's new in it.\n. Within a couple of weeks.\n. That belongs in swagger-ui, not here.\n. We can just call it swagger-samples then. If this is going to be a multi-language repository, the only catch is possibly the build process. However, that's probably not a big deal.\n. We'll also need to update the links in the wiki to the samples.\n. Yeah, but it's better to move the samples in develop_2.0. If we're going to have multiple language samples there, maybe split it to language directories.\n. This is done.\n. Swagger works with Java 7, yes.\nAre you trying to compile swagger-core or your own application?\n. Well, that's not a valid dependency version. Try changing it to 1.5.1-M2\n. I don't see how that's related to swagger-core. The error itself tells you the issue is with the jdk. Try upgrading your JDK, there have been new releases.\n. no idea. I'm using 7u67 and it works fine.\n. Can you share your configuration?\n. Which version of jersey-guice do you use?\n. Can you share a sample project that reproduces the problem? It'd be easier to work off that.\n. Great, thanks. \n. @kylebober - gotta ping you again, we're trying to clear out open issues.\n. Closing this issue due to lack of activity. Please reopen if needed.\n. This is fixed in develop_2.0.\n. So we can close this issue?\n. Fixed in develop_2.0, using #1122.\n. https://github.com/swagger-api/swagger-core/tree/develop_2.0/samples/java-resteasy-spring uses annotations on the interfaces and loads just fine.\nPerhaps there are other paradigms that are not covered and those should be handled.\n. Just to be clear, when you say different frameworks, what frameworks are you talking about?\n. There's a Jersey sample as well exhibiting the behavior as well. It could depend on whether we get the resources from the jax-rs implementation or whether those are fed directly to swagger-core.\n@okigan - can you share a sample project in which you encounter the problem? It'd definitely help us investigate it further and provide a fuller solution.\n. Thanks. If there is a problem, we definitely need to fix it. Keep in mind that in the develop_2.0 branch there's a Jersey sample with Spring that also uses annotations on the interfaces. \n. @okigan - since this is a PR, I'd suggest opening an issue rather than reopen the PR.\n. Also, unfortunately the sample you shared doesn't exhibit the problem as there's a small bug in it. You forgot to actually extend the base resource. I've submitted a small PR that fixes it - https://github.com/okigan/swagger-core/pull/1. With that change, it works as expected.\n. So we can close?\n. 1.5.1-M2 is the latest version.\n. @ApiImplicitParam support is not yet implemented for 1.5.\nPlease follow https://github.com/swagger-api/swagger-core/issues/905.\n. Can you rebase? By the way, did you include the fixes for the samples in the migrated repo as well?\n. This was done in #1129.\n. Fixed in develop_2.0.\n. @Amyntas - A huge thanks for the work here, but I'm afraid we'll have to rework it due to some changes. Someone is already looking into it and will use your PR as a reference. Again, the effort is greatly appreciated.\n. @okigan - any update? We're very close to making a release so any input would be useful.\n. https://github.com/swagger-api/swagger-samples/tree/develop_2.0/java\n. Okay, so we're good to close?\n. Great, thanks for verifying.\n. Swagger-core will indeed use the value of the @Api to group the operations, and you can use tags to override it. An alternative would be to simply provide the @Api with the same value. \n. Which version of Swagger-core do you use? \n. Which version of swagger-core do you use?\nIt shouldn't recognize page and size as body parameters in any case, so that's a bug.\nHowever, it is not clear what output you get when you add @ApiParam to those parameters. It doesn't have a way to set the type as that's inferred from the actual type of the parameter.\n. @bogdatov - if you're using springfox, this has nothing to do with swagger-core. They use the same annotations but that's pretty much it. All the processing is done by them. You'd need to open an issue on their repository looking for assistance as this is unfortunately beyond the scope of this project.\n. This can also be resolved by #1011. However, it's a nice idea.\n. @fenoloco - have you had a chance to test it?\n. @thegreatdao - the easiest to resolve it would be to upgrade to 1.5. There's a migration guide in the wiki, and also a full integration guide if you need it.\n. @thegreatdao - have you had a chance to look into it?\n. #918 \n. Please follow that issue.\n. @pycloux - that may be great. Please comment on that issue and @fehguy may reach out. I believe the support should be language-agnostic (within what's relevant).\n. Yeah, it's related to Grizzly not using a servlet container. We need to find a work around for it.\n. Which version of swagger-core do you use?\n. Okay, this should have been fixed with #964 but if you say you experience it, then we need to check it again.\nCan you share your model code and a sample operation that uses it that would exhibit the problem?\n. No worries, thanks for the update.\n. What generated html? This is swagger-core. It doesn't generate HTML.\n. @Helmsdown - the amount of dust I needed to clean in order to remember what this was even about is insane, and I can't still can see clearly. This came from a specific use case, and perhaps that's the key. I believe this relates to sub-resources that are not annotated with @Path at the class level.\n. Yeah, I actually get aaaaaaaaaall notifications ;)\n. There isn't, no. This sounds more of an issue with the UI though. It shouldn't show your suggestion, but it should at least indicate it being a set.\n. I see. Well, perhaps we need to modify the example behavior but this is going to be a challenge as a free-form type.\n. It's not possible because the spec doesn't allow it. We can't implement things that are not supported by the spec.\n. Which version of swagger-core do you use?\n. That's the scala version, but it also means you're using the 1.3.X branch.\nI assume this is a new integration - you should use the 1.5 branch. The wiki contains a few guides for integration. Even though there isn't one for wink, the integration would be very similar to any of the other guides out there and the steps would be very simple (there's a wink sample in the develop_2.0 branch).\nTry that and report back if you have any issues.\n. Well, there are some issues with Liberty but since that's a commercial product, we don't have access to it for testing.\nOne thing to keep in mind that since the same configuration works with other app server but not with Liberty, it's more likely that the issue is with Liberty itself.\nCan we close the issue?\n. Will this lead to what we discussed?\nThat is:\n- MyModel<String> -> MyModelString\n- MyModel<Integer> -> MyModelInteger\n- MyModel<MyModel<String>> -> MyModelMyModelString\n. Perhaps add a test for body param as well?\n. Can you try with 1.5.2-M2?\n. @quilicicf - any update?\n. @quilicicf - we just released 1.5.0 - better test with that, even though it'd require code changes.\n. @quilicicf - just tested it with 1.5.0 and it seems to work fine. Please upgrade and test. Reopen if needed.\n. @quilicicf - happy to hear, thanks for the update!\n. Thanks for the PR. Since we're not actively developing the 1.3 branch anymore, I'll be closing it, but provided a link from #918 to be taken into account when the Play module is migrated.\n. @fehguy - any reason not to upgrade?\n. You'd need to provide more information. Which version of swagger-core do you use? How did you configure it?\n. Closing this one in favor of the more generic feature request - https://github.com/swagger-api/swagger-core/issues/1118.\n. That was meant to be https://github.com/swagger-api/swagger-core/issues/1318.\n. I believe #1699 should address that.\n. This is resolved in develop_2.0.\n. Merged manually.\n. This is done in develop_2.0.\n. Can you try the develop_2.0 branch? It's available as a snapshot, but would require a little extra work as we've repackaged the project as io.swagger instead of com.wordnik. Snapshot version is 1.5.0-SNAPSHOT.\n. @sudohippie - heh, we don't really have jacoco installed so it never fails for us, but since it's code coverage, that doesn't affect functionality. We're looking into 'fixing' it, but for now, please skip it and check the original issue.\n. @jahlborn - testing with 1.5.0 I don't see that behavior. Have you tried with that version? If so, can you share a class that reproduces it?\n. @jahlborn - did you get a chance to look into it?\n. I assume you're looking for it as a general Swagger models support and not specific for JAX-RS generation?\n. Fair enough.\n. Need more info here.\n. Since this is a general question and is not directly related to swagger-core, please use the google group to ask it and you may get answers from other people from the community as well.\n. Fixed in develop_2.0.\n. Great, thanks!\n. Fixed in develop_2.0.\n. @Ciantic - there are plans for it, either directly in code or as a separate project. Can't say when though.\n. Thanks for the great work everyone. I'll close this issue for now. For progress on the Play module, please follow #918.\n. @MarvGilb - thanks for the PR, looks interesting and can also solve #1169 elegantly (as @tomtit kindly pointed out to me).\nTwo points - \n1. This needs to be submitted against the develop_2.0 branch, so please resubmit it.\n2. With the new coding standards we now employ, please add blocks for the if statements, even if they have one line in them.\n. @SrinivasMonocept - that's an issue for Swashbuckle. Please reopen the issue there.\n. You're mixing swagger-core 1.3 and 1.5. If you have the swagger-jersey-jaxrs dependency, you don't need the swagger-core one.\nWe just released an official version of 1.5.0 which you should use instead. It requires a few more code changes but should be easy enough to follow. \n. We've repackaged the project under io.swagger - http://search.maven.org/#artifactdetails|io.swagger|swagger-jersey-jaxrs|1.5.0|jar\n. @phillro - which version of swagger-core do you use?\n. @phillro - sorry for the delayed reply here. I'm not sure I follow the problem to the fullest. Can you share both use cases' code snippets and output (full output) so that the problem is clearer?\nKeep in mind that if this is an issue with 1.3.12, we will not be able to provide a fix for it.\n. @phillro - any update?\n. Fixed in develop_2.0.\n. Yeah, it should be in 1.5.1-SNAPSHOT, feel free to try it and let us know how it goes.\n. If you're still getting 1.5.0, you may have another dependency in it.\nAlso, make sure you have the sonatype repository defined for snapshots because snapshots are not available at maven central.\n. @Syzygy24 - thanks for the feedback, much appreciated.\n. Whether we do it or not, you need to keep in mind there is just no ordering supported anyways. Everything is represented as a JSON object and not as a JSON array, and by definition, there's no order of properties within a JSON object and they can be parsed differently by different parsers.\nIf you want to control the order in the UI, you'd need to write your own sorter for it.\nThat said, it doesn't mean we won't change the sorting  behavior in swagger-core, I'd just recommend not relying on it as the behavior you expect is simply not guaranteed in any way.\n. @darklynx - @fehguy may have a reason for ordering that, not sure. He's away for a few days but should get back to you when he can. If there's no explicit reason for it, I don't see a reason not to simplify it.\n. @darklynx - the path sort option was explicitly removed from the spec. If you'd like to see it re-added in the future, you'd better open a feature request in the swagger-spec project, but explain your reasoning well (because we had reasons to exclude it ;)). We can continue the discussion there and assess whether it should change back in a future version of the spec.\n. The discussion was in the 2.0 workgroup. If you email me, I'll try to find it and forward it to you. It may take a couple of days. \n. Resolved in develop_2.0.\n. No format :-) It's an optional field. \n. Resolved in develop_2.0.\n. Fixed in develop_2.0.\n. #1150?\n. @ashley-taylor time to upgrade to the latest version and try!\n. @msimons - Development is done in the develop_2.0 branch, so please submit your PR against it.\n. For the sake of documentation, the format is csv because of the intent in 1.3.X and we tried to keep it backwards compatible. However, since it really doesn't make sense and breaks the API documentation then it definitely needs to be multi. I believe this makes allowMultiple obsolete, but for now it should probably also give a multi value.\n. Fixed in develop_2.0.\n. Thanks for the submission. Two notes though:\n1. Code changes need to be made against the develop_2.0 branch, so please resubmit it against it.\n2. In terms of @JsonPropertyOrder I would push it at the end, or at least after options. \n. I'm afraid I have to close it as it's submitted against the wrong branch. Feel free to resubmit against develop_2.0.\n. We still need to make a decision on that issue before merging this PR.\n. @boazsapir - finally clearing out the PRs (as much as I can). Based on our discussion, I imagine this is no longer relevant (that is, it needs to be modified)?\n. I believe I talked with Tony about it offline, but let me just make sure :)\n. It probably would, but out of curiosity, how do you end up having a model that extends Throwable?\n. Okay, fair enough, thanks for the details.\n. @andi-livn - can you provide more details regarding your use case? As it is now, it seems to behave as you would expect it to.\n. @andi-livn any update?\n. Could be the hour for me, but I don't follow you.\n. Whether it is or isn't, it may still be worth investigating. Just keep in mind that the usage of swagger.json and swagger.yaml is based on the standard recommendation specified in the Swagger specification to end up with a common name for the documentation (similarly to the /api-docs in previous versions).\n. Funny you should mention it. The specification does not mention where it should be hosted, and then came this - https://github.com/swagger-api/swagger-spec/issues/393. It doesn't affect this version, but may affect future ones.\n. For easier reference, this should now be resolved by #1172.\n. Well, not now, but will be resolved with it is merged.\n. This is resolved as the PR is merged.\n. \"doesn't seem to work with it\" doesn't provide us with information to better understand what doesn't work and what you've done so far. Without more details, we will not be able to help.\n. What doesn't work?\n. Which URL do you try to open?\n. Try http://localhost:8080/ClassWaitlist/v1/swagger.json\n. You're contradicting yourself. One time you say you can't open specific URLs and the other that you can't even deploy the app. I just don't know how to help you.\n. Can't help here without clearer details. If anyone wants to try and provide those, that would be great.\n. Where do you see that swagger-core requires any version of CDI?\n. I'm afraid I have to close this issue as there are no clear details. I'd be happy to reopen if anyone chooses to clarify.\n. FWIW, the next release of swagger-core will upgrade the Guava dependency to 18.0.\n. Can you rebase this one?\n. @MarvGilb - unfortunately the build is failing. Can you have a look?\n. @who - it is, to an extent, but this is a different issue than the original request. The original request may be able to provide a workaround, but this should be solved in a different way if possible. Can you open a separate ticket on it?\n. @who - any additional input on the @ApiModel#hidden()?\n. Yes, but if an operation refers to it, what happens?\njava\n@GET\n@ApiOperation(...)\npublic Foo bar() {\n}\nand\njava\n@ApiModel(hidden=true)\npublic class Foo {\n...\n}\nWhat's the bar's return type in the Swagger definition?\n. Okay, glad I managed to explain the problem I see with the example. Not always easy to communicate ideas. On the other hand, I'm not sure I see the use case you're trying to solve. Can you show me a similar case where hiding a model would affect anything? Models are scanned if they are referred to, not just randomly, so you shouldn't end up having a model that's under definitions and not used. So when would be the case you'd want to hide it and it wouldn't be a logical conflict? Really just trying to understand so the solution would be proper.\n. Why not use http://docs.swagger.io/swagger-core/v1.5.0/apidocs/io/swagger/annotations/ApiModelProperty.html#hidden() on private Bar bar then? The complexity (and logical conflict risk) of adding it on the model doesn't seem to be worth it compared to the existing alternative.\nWould love to get @dilipkrish's input as well of course :)\n. That's fair, but considering there's an alternative, and that your suggestion has a risk for the logical conflict, I'm not sure we should introduce this complexity to the library right now.\n. Would you be okay with changing the title of the issue to @ApiModel#ignore()? We can keep the thread for the details, and I'll mark it as a potential future feature.\n. BTW, the @ApiParam#hidden() is available in the 1.5.1-SNAPSHOT at sonatype if you'd like to test it out, and of course in the previous comment I meant to write @ApiModel#hidden().\n. @who - I believe we covered it for now. I don't think we should have the @ApiModel#hidden for now, and perhaps in the future we can come up with a general other way of fine tuned control here.\n. Fixed in develop_2.0.\n. Fixed in develop_2.0.\n. Resolved in develop_2.0.\n. @mortias - you said it is not working with the maven plugin, but have you tested the real time generation with swagger-core?\n. @mortias - can you try with the snapshot version?\n. Thanks for the confirmation. Closed as fixed in develop_2.0.\n. @mortias - just tested it, works as expected. \n. @ipeluffo, thanks for opening the issue. I preferred going into the discussion here rather than in the group as to not lose information. This is something we can definitely implement, but I'm curious to know your use case. \nWhen we wrote the spec, we tried covering common uses within common libraries. JAX-RS specifically use multi by default for multiple values. Are you looking to set it to any other kind? Do you parse it internally as part of your app?\n. @ipeluffo - okay, if #1160 is indeed the issue (and we will change it), then let's keep this one open as a general feature request, we may just not prioritize it high for now.\n. There's no collectionFormat in swagger-core 2.x.. @gdilipkumar - a few thoughts: \n- I'm not really sure what problem you're trying to solve with this PR.\n- PRs need to be made against the develop_2.0 branch.\n- We will not accept PRs that are not well tested, and not ones that break existing tests. You will have to fix those if you want the PR to be merged.\n. Fixed in develop_2.0.\n. Fixed in develop_2.0. Thanks @t1!\n. Fixed in develop_2.0.\n. Fixed in develop_2.0.\n. Will try to review it in the next few days.\n. Needs a rebase.\n. This issue was moved to swagger-api/swagger-samples#9\n. Can you rebase please?\n. This is related to #993.\n. Right, but you're actually looking for the swagger-parser project if you want to convert a Java definition to POJOs. Some features may indeed not be supported by it.\n. Duplicate of #1133.\n. This should be solved in 1.5.4.\n. Related to #804.\n. I guess that's a regular problem. We have users who depend on Jackson 2.2 and 2.3 and in a way they are forced to upgrade to 2.4(.2) when using swagger-core. Not sure there's a right answer here. \n. Closing this one for now. The real reason to upgrade to 2.5/2.6 would be if the new version includes something that affects swagger-core. 2.6 may include a fix to some issue and then it would become relevant.\n. Related to #804.\n. Related to #804.\n. Related to #804.\n. Related to #804.\n. This is not really an issue. The jaxrs module which represents JAX-RS 1 depends on it and the Jersey2 module which represents JAX-RS 2 depends on the other. We do need to clean out the dependencies a bit, but there's no need to upgrade anything.\n. That depends on the RESTEasy version you use. If you're using one that supports JAX-RS 1, you should use the swagger-jaxrs module. If you're using the one that supports JAX-RS 2, then you should use the swagger-jersey2-jaxrs module (yes, jersey2). The reason for this is historical and while it is not the most convenient solution, it's the one we currently offer. None of the other modules will provide support for @BeanParams. \nWhat we don't support with RESTEasy (or anything other than Jersey) is file uploads. We need to restructure the modules a bit for easier seamless integration, but this is the current situation. There's still no room to 'upgrade' the swagger-jaxrs dependency to JAX-RS 2.0 as it is intended to support 1.0/1.1.\n. Thanks for the update. For reference, I just created https://github.com/swagger-api/swagger-core/issues/1244 so we won't forget to handle it.\n. Will need to investigate it further, but have you tried putting the swagger-core annotations on the interface alongside the jax-rs annotations?\n. I see. This would make the processing that much complicated, and can't say it end up being high in the priorities we have right now, unfortunately.\nNot wanting to include swagger-core as a dependency is understandable, but FWIW, you can include only the swagger-annotations dependency in the public API jar which is very lightweight (about 14k). \n. Care to submit a PR (including a test)?\n. Fixed in develop_2.0.\n. It's supported when using JSR303.\n. @danieljsun - have you tried it?\n. Closing this one due to lack of activity. Please reopen if needed.\n. This is a bit challenging because it means we need to generate two separate models, but we have only one model name. We could suffix the models with Read and Write though some may not like it.\n. Had we ignored the setter annotation and use the setter annotation, that would have also been arbitrary. There's no doubt there's an issue here, I'm just not sure what the proper solution would be. Eventually, it's a matter of a naming convention and as you know, \"There are only two hard things in Computer Science: cache invalidation and naming things.\".\n. Even if @ApiModelProperty takes precedence (and it should), it would not really solve the problem you bring up.\n. Are you referring to just adding a note to the specific property?\n. Yeah, looking at the code it looks like @JsonIgnore takes precedence over @ApiModelProperty. We'll have to look into it.\n. Fixed in develop_2.0.\n. @bofalot - thanks for the effort, but I'd rather review and merge those separately. can you split the #1162 content to a separate PR?\n. Related to #804.\n. Related to #804.\n. Related to #804.\n. Related to #804.\n. Related to #804.\n. Related to #804.\n. Related to #804.\n. Related to #804.\n. Related to #804.\n. @Helmsdown - 1.5.1-SNAPSHOT is now available in sonatype with the PR if you need to test anything.\n. It's an unimplemented feature - https://github.com/swagger-api/swagger-ui/issues/1117.\n. Fixed in develop_2.0.\n. Can you rebase please?\n. Which branch did you test?\n. It's odd because I tried making sure the build works with Java 8 before publishing. Just ran mvn clean package on master and it worked fine...\n. Aha, I do see the problematic line, but we don't normally build javadocs for that module. How do you run the build?\n. Thanks for checking. We should still clean those errors (they could be in multiple modules). If you can submit a PR that'd be great - it's a simple fix.\n. Fixed in develop_2.0, thanks for the PR.\n. Can you resubmit it against develop_2.0 please? master is stable.\n. I'll review the PR shortly.\n. Fixed in develop_2.0.\n. May also want to take #997 into account here.\n. Related to #1031 as well.\n. Just curious, have you encountered a related issue?\n. Fair enough. And one other question, are you trying to hide it completely or really based on some access value?\n. In that case, be on the lookout for #1188 which would give you the same effect without having to configure a SpecFilter. \nThanks for the PR!\n. Yes.\n. I don't really know what that means.\n. It should. \n. Most of them, but you should use the latest, 1.5.0.\n. Which version do you use?\n. @wasifshikder ?\n. Closing the issue due to lack of response. Please reopen if needed.\n. I don't see how this is related to swagger-core.\n. Closing due to lack of response. If you can provide more details, we can reopen.\n. First, upgrade to the latest version to see if the issue persists.\nThe description is now controlled via tags - https://github.com/swagger-api/swagger-samples/blob/master/java/java-jaxrs/src/main/java/io/swagger/sample/Bootstrap.java#L35-L45.\n. @greenreign - any update?\n. That solution should be available in 1.5.1-M2 too, iirc.\n. Yes, but setting the Tags via the Swagger object directly as done in the Bootstrap sample shared above has existed since the first release.\n. No problem. Feel free to reopen if needed.\n. @tcuje - following @zyro23's comment (thanks!) can you try the 1.5.1-SNAPSHOT version to see if it solves your issue?\n. @tcuje - Central doesn't allow for snapshots, and so they're available at sonatype - https://oss.sonatype.org/content/repositories/snapshots/io/swagger.\n. @titiu7 - no idea, sorry, we don't really have a roadmap for releases (at least now). This issue will be closed automatically once the PR solving it is merged. If you need to test it, just add a comment and I'll publish a SNAPSHOT containing it.\n. Fixed in develop_2.0.\n. Please upgrade to the latest version, it should be solved there.\n. That's not the latest version. Check out https://github.com/swagger-api/swagger-core/releases/tag/v1.5.0 (notice we changed the package and dependency names).\n. For general declaration, there are no annotations. You would go about it in a way similar to https://github.com/swagger-api/swagger-samples/blob/master/java/java-jersey-jaxrs/src/main/java/io/swagger/sample/Bootstrap.java#L31-L35.\nFor operation-specific declarations, you have https://github.com/swagger-api/swagger-core/wiki/Annotations-1.5.X#authorization-authorizationscope.\n. That has nothing to do with swagger-core then. You'd have to consult with springfox's documentation regarding the authentication definition. \n. @hgwood - not yet.\n. There are a few more PRs I'd like to merge in before pushing 1.5.10 out - hoping to get it all done next week. In the meantime, you can check out 1.5.10-SNAPSHOT.\n. @boillodmanuel - it's pushed.\n. Yup, it depends on it.\n. Since you're using springfox, you need to open the issue on their repository.\n. Fixed in develop_2.0.\n. Fixed in develop_2.0.\n. @maxime-morand - is there a respective ticket opened on swagger-codegen?\n. @maxime-morand - can you please open one and link to the PR? This is for documentation purposes, especially with a cross-project dependency. Should end up in the release notes of the codegen when it's released with the fix.\n. Heh, I believe @fehguy meant to merge it ;)\n. PR merges works on PRs as a whole, not specific commits. If something was left out, it means the PR wasn't created properly. Feel free to submit an additional PR to cover what's missing.\n. Since we're in the process of migrating to TestNG (and migrating all the tests), can you maybe convert the new tests to TestNG? It'd just help us with less migration.\n. Much appreciated. And from your note, once this is merged it resolved #1022 as well, right?\n. Thanks for the work, @Helmsdown. I'm going to leave the review to @fehguy on this one though.\n. After updating the spec, working out the proper places for vendor extensions, here is the full list:\n- Swagger (i.e. the root object)\n- Info\n- Contact\n- License\n- Paths\n- Path Item\n- Operation\n- External Docs\n- Parameter\n- Items\n- Responses\n- Response\n- Header\n- Tag\n- Schema (which includes Property)\n- XML\n- Security Scheme\n- Scopes\nAll other objects cannot contain vendor extensions. \nI suspect there may be an issue with the security-related objects in the Java implementation. Not sure if it's related to the change here or not, but perhaps should be taken into account. Have a look at #1258 and #1261.\n. Since it's breaking, I'd rather have @fehguy's opinion. It's a bit tricky.\n. Thanks for all the effort, @Helmsdown\n. How would we resolve #1258 and #1261 then?\n. #1261 shouldn't be part of this PR but requires #1258 to be solved. \nNot resolving #1258 means that there can't be proper security representation for tools that depend on models, and swagger-core can't be used in general to output such definitions.\n. Right now, it's not possible. I've added the request to issue #918, please follow it for progress.\n. @marcelalburg - considering that Java-wise, those two are equivalent, it's unlikely that's the cause of the issue you're experiencing. Do you see any difference in the swagger.json produced by both variants?\n. @marcelalburg?\n. That's an entirely different issue than the original one.\nThe difference is output is due to a difference in versions. I don't know how you manage your dependencies, but something is messed up there if you get different results in different environments. Make sure you use 15.2.\n. Which version of swagger-core do you use?\n. Which LocalDateTime is that? Joda or Java 8?\nI assume you use Gson for custom serialization and not Jackson?\n. How do you currently register your custom (de)serializer?\n. This is more of an issue with your operating system than it is with the project. You can try asking in the google group and perhaps someone could suggest a solution. Otherwise, just search for a general solution to the problem (again, not related to swagger at all).\n. Can you share how you define it in the code?\n. I'm afraid you've hit a bug.\n. However springfox utilizes the annotations is up to them. You'd need to ask them about it.\n. What? \n. Fair enough. Feel free to submit a PR for it.\n. Solution merged in master, thanks @arosenber.\n. @Helmsdown - I'm a bit surprised by this as we pretty much produce YAML successfully already, so I don't follow the use case.\nAlso, if we're to upgrade it, it's better to upgrade all related Jackson versions (such as jackson-guava-version).\n. I'll try to do it a bit later (in the middle of a few things) but I'm basing my knowledge on http://petstore.swagger.io/v2/swagger.yaml which looks pretty YAML to me ;) However, perhaps you're talking about a different use case, which is what I'm trying to understand.\n. I'm inclined to keep it as-is for now. There may be a fix in Jackson 2.6 that would be helpful and we'd upgrade to it, but we've had issues with some of our users (you may know a few of them) even with Jackson 2.4.2 (though that's the bare minimum we have to use).\nOn the other hand, 2.4.5 is a minor bump so it may not be an issue. If you can push the guava update as well, that'd be good. Give us a couple of days and we may merge it still (if only to solve the pretty() bug).\nThanks again for all the work!\n. :+1: \n. I'm afraid this is a hard problem, and we currently don't offer a solution for it in swagger-core.\nOne of the reasons for it is that each model needs a unique name, and even if there was some complicated way of saying 'use this property for that operation', we'd need to generate multiple models, assigning each one its own name, and generating the proper reference (okay, this is the easier part).\nWe do have some model-name manipulation in some cases, but this is somewhat more complicated than those.\n. No problem. For future reference, it may be better to ask general questions in the google group.\n. That's really a question for springfox and not here.\n. Thanks, deleted that page. It's no longer relevant.\n. Yes, that's because someone re-created it. Unfortunately, I can't do much about it.\n. @Plonk42 - thanks for submitting the issue and investigating it. Can you try with the 1.5.1-SNAPSHOT? That specific piece of code has changed a bit.\n. Closing due to inactivity. Please reopen if needed.\n. Closing due to inactivity. Please reopen if needed.\n. Closing due to lack of response. Please reopen if needed.\n. We're no experts in OSGi. Some other user have mentioned he may submit a few PRs to help the code improve with that regard, but if you know what needs to be done, go ahead and do it.\n. Hi @NidG, you're looking to open the issue in Swashbuckle.\n. Okay, I was being optimistic. How do you build the Response?\n. Please open the issue on Swashbuckle.\n. This PR broke the 1.5.1 release and forces us to release 1.5.2 to fix it. \nWe can easily add the necessary check (parameter can be null, so it throws NPE). However, the whole use case for this PR is unclear, and should be furthered explained. If you want this to make in, make sure you provide us with more information, and add additional tests to the code to make sure the edge cases are covered.\n. You can describe the payload, you can't make our tools consider it as separate parameters.\n. This is unclear.\nYou never mention what the error is. It would also help to know what code produces that output.\n. Yes, but what do you mean 'the validation fails'? What error does it give you?\nAlso, I meant for you to share the code that you wrote that translates to that definition. \n. So a few things.\nYou're using BigInteger which unfortunately gets mistranslated to 'long' in the current version. https://github.com/swagger-api/swagger-core/pull/1171 fixes that and will be part of the upcoming release.\nOtherwise, the output you provided is valid. Since you're not saying what the actual validation error you get with it, I can't help you more.\nAnd last, matrix parameters are not supported by Swagger and as such not supported by swagger-core.\n. Okay, that looks like a bug with the validator but we may be able to work around it here.\n. Should have added the implementation note - while the 1.0E18 notation is probably valid, we should see if we can enforce Jackson to serialize it as the full number.\n. 1.5.3-M1 is a fairly old version (and unlike what you'd think, it's older than 1.5.2). Give 1.5.3 a try.\n. Thanks for the confirmtion, @mattcarrier.\n. The JacksonJsonProvider is provided for backwards compatibility for some cases when migrating from 1.3.X. It is not intended to be used directly anymore and nowhere in the docs is it suggested to use it. Not sure if removing it is the right step right now.\n. It's a fair use case where automatic scanning is done (and classloading priorities and all that). Perhaps we should consider dropping it and mention something in the migration guide. Now matter how we planned it, moving from 1.3 to 1.5 requires some extra work.\n. @t1 - I can actually think of a few reasons why @Provider shouldn't always be scanned automatically, and the simple fact is that most (if not all) JAX-RS frameworks let you choose whether to scan everything, scan specific packages or pick specific classes to load. That said, there's definitely a problem with your use case. I imagine there's a way to exclude a resource, but that defeats the purpose of zero-config, doesn't it? Renaming the provider is not an option as again, it breaks the original intent. It's either keep or remove entirely.\n. @rockxwre - you're right that it would load it, but it's fairly meaningless. That's actually an indirect loading as it scanned in the package, however, as you can see, it is not explicitly set.\n. @dustin-johnson - you can test if #1360 solves it for you and provide the feedback, that would help.\n. No idea.\n. In the future, please use the google group for general support questions.\nWhich URL did you try using for the swagger.json?\n. Have you tried http://localhost:8080/RestJersey/rest/swagger.json?\n. You'd have to use a third party tool like swagger-maven-plugin.\n. Not really sure what this question has to do with swagger-core.\nIt is supported, and I don't know what you mean by 'not working'.\n. FWIW, a formData parameter can't be a complex type.\nWhat does it show you?\n. You can't. As said, formData parameters can't be complex types, only primitives.\n. It's not possible, right now, no, and not because of a limitation of swagger-core but rather that's what the spec allows. Right now, this is taken from how JSON Schema works, which doesn't allow to define it, and that would make it more difficult to implement in future versions as well.\nYou are invite to open an issue on swagger-spec and ask for this feature, and we'll see if we can incorporate it in future versions.\n. You asked the same question in the google group and got an answer there.\n. @lemoncolly - congrats on the new child!\nCan you test the latest snapshot first (1.5.4-SNAPSHOT)?\n. Closing as resolved in the snapshot.\n. That's one of the restrictions of the Swagger specification. You can't have multiple operations on a single path+verb combination.\n. Oh, I definitely don't remember commit IDs. For anything. The PR may have not resolved this specific issue. Guess we'll have to look into it.\n. @kiennguyen - thank you, but that changes the meaning of @Api#value() which was changed in 1.5 (check the javadocs). I don't think it's wise to give the value a double meaning for the same framework (i.e., JAX-RS).\n. You can, but why have you downgraded if you don't mind me asking?\nOn Fri, Oct 2, 2015 at 1:02 AM, Lefteris Tsallas notifications@github.com\nwrote:\n\nI have a similar question. I Just downgraded from 1.5.3 to 1.3.12 and I\nlost the definitions for methods withoud @ApiOperation. Can I get the\nopposite behaviour in swagger 1.3.12, meaning having the operations scanned\nwithout @ApiOperation?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1358#issuecomment-144950728\n.\n\n\n\nhttp://swagger.io\nhttps://twitter.com/SwaggerApi\n. Closing for inactivity. Please reopen if needed.\n. Where's the PR? ;)\n. Cool, thanks for the update. \n. Done, give it a try.\n. Isn't that karaf-specific though? How would that affect other OSGi implementations?\nMy main concern with it is maintenance. We really have no experience or knowledge in OSGi, and we need to understand what/how to maintain.\n. https://github.com/swagger-api/swagger-core/wiki/Annotations-1.5.X#extension - the wiki says it's not supported yet.\n. Yup, that's indeed a bug. Which version of swagger-core have you tried it with?\n. While I seriously doubt it's been resolved, can you give 1.5.3 a try?\n. Not from 1.5.0 - unless you meant one of the Milestone versions (M1, M2, M3). 1.5.0 (final) already has a namespace change. In any case, if you're on any of the milestones, I'd highly recommend upgrading. Thanks for giving it a try.\n. yup, just change the groupId from com.wordnik to io.swagger.\n. Okay, thanks for the confirmation. We'll have to look into it.\n. @wsalembi, @asicignano - if the issue indeed exists for other types as well, please open a new ticket for it. The PR dealt with the issue as it was reported, and at least for the sake of documentation, I'd rather we resolve other types in a new ticket rather than opening this one. It should work for at least some other types, even if not all.\n. Do you use any existing REST framework or did you write one of your own?\n. Well, no, it's not the only obstacle. In any case, I don't think we're going to add it to @ApiOperation, and it would require more work in general with a specific Reader (much like the one we're creating for generic servlets). It's unlikely there's going to be an out-of-the-box solution here. You can create your own annotation and produce your own Reader if needed.\n. We're in the process of migrating it.\n. At the moment, we're not looking to add support for additional frameworks. The support for servlets as it's been before is included in 1.5.4.\n. This is related to #1189. Make sure you use 1.5.1 or above.\n. @wsalembi - did you try upgrading?\n. http://docs.swagger.io/swagger-core/v1.5.0/apidocs/\n. Current javadocs will always be deployed at http://docs.swagger.io/swagger-core/current/apidocs/ from now on.\n. Unfortunately there are dependencies on it, so I can't.\n. There is none. Please consider submitting a PR to add support.\n. Which version of swagger-core do you use?\n. @adcoolguy - check out https://github.com/swagger-api/swagger-samples/tree/master/java/java-servlet.\n. Just change those to the values you need. You can use any of the HTTP verbs supported by the spec, same goes for paramType.\n. Sure, you can use something along the lines of @ApiOperation(httpMethod = \"POST\", value = \"Create a new user\", nickname = \"addtUser\"). If you're looking for something more specific, please elaborate.\n. As it is written right now it may be possible, but it's not trivial. @fehguy may have more info on that.\n. Any reason you're using 1.3.12?\n. Yes, but why do you use that version and not the latest?\n. Thanks, please keep us posted.\n. Samples have migrated - https://github.com/swagger-api/swagger-samples/tree/master/java/java-jersey2-guice \n. Did you update to the latest version?\n. The samples are not updated with the latest version. Make sure to update the dependency version, as there was a related bug that was solved in a recent version.\n. You're using Jersey 2, right?\n. Okay, we'll have to look into it.\n. @agusgr - by the way, in general, if you're looking to hide a parameter entirely, you can now use @ApiParam#hidden() to set it.\n. When you say latest swagger-codegen, do you mean the master branch or develop_2.0?\n. Unfortunately, due to some obligations we cannot remove the legacy docs.\nI've added a reference at the top of each page to the equivalent new version of it... in a way that's kind of hard to miss.\n. Unfortunately, due to some obligations we cannot remove the legacy docs.\nI've added a reference at the top of each page to the equivalent new version of it... in a way that's kind of hard to miss.\n. That's exactly what I did for all the relevant pages (as mentioned in the previous comment):\n\nWhat's missing?\n. That's exactly what I did for all the relevant pages (as mentioned in the previous comment):\n\nWhat's missing?\n. @tomtit - custom formats are valid no matter what type is used.\n. @tomtit - custom formats are valid no matter what type is used.\n. @ePaul - I'm afraid that's not a valid definition. It probably deserves a clarification in the spec (feel free to open a separate issue on swagger-spec). Swagger does not support multiple types, no matter where. Also, null is not a valid type, no matter where.\n. @ePaul - I'm afraid that's not a valid definition. It probably deserves a clarification in the spec (feel free to open a separate issue on swagger-spec). Swagger does not support multiple types, no matter where. Also, null is not a valid type, no matter where.\n. This should be resolved as part of https://github.com/swagger-api/swagger-core/issues/1500.\n. This should be resolved as part of https://github.com/swagger-api/swagger-core/issues/1500.\n. It would probably take a few more days.\n. It would probably take a few more days.\n. @elakito - I'm afraid there's another problem. io.swagger.config exists in both swagger-core and swagger-jaxrs, and the classes are repackaged in the jars.\n. @elakito - I'm afraid there's another problem. io.swagger.config exists in both swagger-core and swagger-jaxrs, and the classes are repackaged in the jars.\n. Thanks!\n. Thanks!\n. @mattburns - maybe I was too quick on the trigger. Looks like it's the other way around - http://testng.org/javadoc/org/testng/Assert.html#assertEquals%28boolean,%20boolean%29\n. @mattburns - maybe I was too quick on the trigger. Looks like it's the other way around - http://testng.org/javadoc/org/testng/Assert.html#assertEquals%28boolean,%20boolean%29\n. No problem, thanks for looking out.\n. No problem, thanks for looking out.\n. Try following https://github.com/swagger-api/swagger-core/issues/960.\n. Try following https://github.com/swagger-api/swagger-core/issues/960.\n. Apologies for the delayed reply.\nWhat sort of impact do you expect @XmlValue to have? Can't really follow the usage.\n. Apologies for the delayed reply.\nWhat sort of impact do you expect @XmlValue to have? Can't really follow the usage.\n. That's a great explanation, thanks, but where does @XmlValue come in? :) Or is that just the equivalent for XML?\n. That's a great explanation, thanks, but where does @XmlValue come in? :) Or is that just the equivalent for XML?\n. Yeah, it is tightly integrated with Jackson. There's some basic manual processing of JAXB annotations but those are rare. The full integration with JAXB should be using Jackson JAXB module, but it looks like it doesn't work for you, which makes me wonder what would be the cause of it. Do you use it to represent an XML structure or a JSON structure (or both)?\n. Yeah, it is tightly integrated with Jackson. There's some basic manual processing of JAXB annotations but those are rare. The full integration with JAXB should be using Jackson JAXB module, but it looks like it doesn't work for you, which makes me wonder what would be the cause of it. Do you use it to represent an XML structure or a JSON structure (or both)?\n. Can you rebase please?\n. Can you rebase please?\n. Also, the test doesn't seem to cover the MapProperty.\n. Also, the test doesn't seem to cover the MapProperty.\n. Resolved in master.\n. Resolved in master.\n. Yeah, I think it's a known issue. However, which version of swagger-core are you using?\n. Yeah, I think it's a known issue. However, which version of swagger-core are you using?\n. Thanks for this, but setting aside the solution, what would be the expected output? Wouldn't you end up with something like /resource/{subresource}?\n. Thanks for this, but setting aside the solution, what would be the expected output? Wouldn't you end up with something like /resource/{subresource}?\n. Yeah, that's a recursive definition, which is generally ok, but is not supported in Swagger (for now), so I don't think we can add support for in the reader. That said, perhaps we should find a nicer way to deal with it than go into an infinite loop.\n. Yeah, that's a recursive definition, which is generally ok, but is not supported in Swagger (for now), so I don't think we can add support for in the reader. That said, perhaps we should find a nicer way to deal with it than go into an infinite loop.\n. well, we don't support the recrusiveness at all, so no need to expand anything ;)\n. well, we don't support the recrusiveness at all, so no need to expand anything ;)\n. Thanks for all the effort, @elakito, it's really great. I'll do my best to review it tomorrow.\n. Thanks for all the effort, @elakito, it's really great. I'll do my best to review it tomorrow.\n. Which version of swagger-core do you use?\n\nconfig.setResourcePackage(\"com.ads.userservice.client,com.ads.userservice.api\");\n\nIs that the interfaces package or the implementations package?\n. Which version of swagger-core do you use?\n\nconfig.setResourcePackage(\"com.ads.userservice.client,com.ads.userservice.api\");\n\nIs that the interfaces package or the implementations package?\n. Try pointing he package to the actual implementation then.\n. Try pointing he package to the actual implementation then.\n. Can you share a sample interface method and implementation method, with all the annotations?\n. Can you share a sample interface method and implementation method, with all the annotations?\n. Apologies for the delay. In general it should work, but we'll have to investigate it further. We're just a bit swamped right now. I believe someone could have a look at it next week.\n. Apologies for the delay. In general it should work, but we'll have to investigate it further. We're just a bit swamped right now. I believe someone could have a look at it next week.\n. Thanks for the feedback. We normally try to handle issues like this one more promptly, it really is just a bit of a chaotic time for us and not everyone is available. Thanks for checking in and for your patience.\n. Thanks for the feedback. We normally try to handle issues like this one more promptly, it really is just a bit of a chaotic time for us and not everyone is available. Thanks for checking in and for your patience.\n. @iushankin - are you sure it works for @BeanParam? I know it works for 'regular' ones.\n. @iushankin - are you sure it works for @BeanParam? I know it works for 'regular' ones.\n. Oh look, there's even a test for it!\n. Oh look, there's even a test for it!\n. While it shouldn't throw NPE, please note that setting additionalProperties: false is not needed as unlike JSON schema, that's the assumption in Swagger. In a way, that's not even supported in the description and the schema validation may soon impose this restriction.\n. While it shouldn't throw NPE, please note that setting additionalProperties: false is not needed as unlike JSON schema, that's the assumption in Swagger. In a way, that's not even supported in the description and the schema validation may soon impose this restriction.\n. @tedepstein - you're right that it's inconsistent with what the spec says, but the actual error is in the spec as that was the implied intent which never made it to the docs (unfortunately). There may even still be an open ticket to change that in the doc in 2.0...\n. @tedepstein - you're right that it's inconsistent with what the spec says, but the actual error is in the spec as that was the implied intent which never made it to the docs (unfortunately). There may even still be an open ticket to change that in the doc in 2.0...\n. @frantuma - can you review this please? If it makes sense, we can ask @briandelaney to rebase and we'll merge.\n. @frantuma - can you review this please? If it makes sense, we can ask @briandelaney to rebase and we'll merge.\n. @andersaa - haven't had the chance to test it myself... busy times... but can you try configuring the Json and Yaml mappers before setting the BeanConfig?\n. @andersaa - haven't had the chance to test it myself... busy times... but can you try configuring the Json and Yaml mappers before setting the BeanConfig?\n. FWIW, support for some Java 8 Date API has been added in 1.5.4.\n. FWIW, support for some Java 8 Date API has been added in 1.5.4.\n. :+1: \n. :+1: \n. Fixed, thanks.\n. Fixed, thanks.\n. Tried it with the wink sample, works well. Can't reproduce it.\n. Tried it with the wink sample, works well. Can't reproduce it.\n. It doesn't have the ScannerFactory as that was moved as part of https://github.com/swagger-api/swagger-core/pull/1412, which is included in the latest snapshot (https://oss.sonatype.org/content/repositories/snapshots/io/swagger/swagger-core/1.5.4-SNAPSHOT/swagger-core-1.5.4-20150921.134406-10-sources.jar). Had you provided the full details in the first place, I could have given you the answer right away. I can't guess what you're doing or experiencing. \n. It doesn't have the ScannerFactory as that was moved as part of https://github.com/swagger-api/swagger-core/pull/1412, which is included in the latest snapshot (https://oss.sonatype.org/content/repositories/snapshots/io/swagger/swagger-core/1.5.4-SNAPSHOT/swagger-core-1.5.4-20150921.134406-10-sources.jar). Had you provided the full details in the first place, I could have given you the answer right away. I can't guess what you're doing or experiencing. \n. Ruslan, if you have concerns with the service you're getting from me, you're more than welcome to raise them, though I feel there are better venues.\nI'm going to refrain from replying to the points here though as this is not the place for such a discussion.\nIf pulling the latest snapshot solves the issue, please close it. If not, let me know and we'll investigate further.\n. Ruslan, if you have concerns with the service you're getting from me, you're more than welcome to raise them, though I feel there are better venues.\nI'm going to refrain from replying to the points here though as this is not the place for such a discussion.\nIf pulling the latest snapshot solves the issue, please close it. If not, let me know and we'll investigate further.\n. The response not showing in the UI is a bug in the UI (there's an open ticket). It will indeed only show for 200.\nThere is a responseContainer attribute in @ApiResponse but you'd need to update to the latest version of swagger-core to use it.\n. The response not showing in the UI is a bug in the UI (there's an open ticket). It will indeed only show for 200.\nThere is a responseContainer attribute in @ApiResponse but you'd need to update to the latest version of swagger-core to use it.\n. @ndhar-1 - any update?\n. @ndhar-1 - any update?\n. Awesome, thanks for the update!\n. Awesome, thanks for the update!\n. Regarding your second option, isn't that exactly what BeanParam covers?\n. Regarding your second option, isn't that exactly what BeanParam covers?\n. @HenrikHL - if you're getting that, then it looks like a bug. It should definitely render as it does in your second screenshot. Which version of swagger-core did you test it with?\n. @HenrikHL - if you're getting that, then it looks like a bug. It should definitely render as it does in your second screenshot. Which version of swagger-core did you test it with?\n. @lugaru1234 - can you check it please? There's a test with a @BeanParam that includes a body parameter as well. It may fail if a body parameter is not included.\n. @lugaru1234 - can you check it please? There's a test with a @BeanParam that includes a body parameter as well. It may fail if a body parameter is not included.\n. That's where the bug may occur. The parameter is treated as a body parameter mistakenly.\n. That's where the bug may occur. The parameter is treated as a body parameter mistakenly.\n. @HenrikHL - are we good to close this issue?\n. @HenrikHL - are we good to close this issue?\n. Yeah, those are indeed issues. FWIW, it doesn't make the definition invalid but rather irrelevant.\nThe sample itself is found at https://github.com/swagger-api/swagger-samples/tree/master/java/java-jersey-jaxrs - if you'd like to submit a PR to resolve those issues, that would be great!\n. Yeah, those are indeed issues. FWIW, it doesn't make the definition invalid but rather irrelevant.\nThe sample itself is found at https://github.com/swagger-api/swagger-samples/tree/master/java/java-jersey-jaxrs - if you'd like to submit a PR to resolve those issues, that would be great!\n. Please try upgrading to the latest version of swagger-core and retest it. It looks like you're using a fairly old version.\n. Please try upgrading to the latest version of swagger-core and retest it. It looks like you're using a fairly old version.\n. @arunspec5 - indeed, please upgrade to the latest version and report back.\n. @arunspec5 - indeed, please upgrade to the latest version and report back.\n. Thanks for the update!\n. Thanks for the update!\n. This issue has been resolved in newer versions of swagger-core. Make sure you use 1.5.3.\n. This issue has been resolved in newer versions of swagger-core. Make sure you use 1.5.3.\n. @quilicicf - thanks for this! Can you please just modify the code to following our standard guidelines? Specifically https://github.com/swagger-api/swagger-core/wiki/Coding-Standards#block-less-loops-and-if-statements? Referring specifically to the equals(*) implementation.\n. @quilicicf - thanks for this! Can you please just modify the code to following our standard guidelines? Specifically https://github.com/swagger-api/swagger-core/wiki/Coding-Standards#block-less-loops-and-if-statements? Referring specifically to the equals(*) implementation.\n. The logic of @ApiImplicitParam is very simple and it's pretty much as if you were writing that part of the definition yourself, so no, there's no functionality to produce that behavior. \n. The logic of @ApiImplicitParam is very simple and it's pretty much as if you were writing that part of the definition yourself, so no, there's no functionality to produce that behavior. \n. The basePath indeed needs to represent the context root of your application, there's no way around it. If you expect the context to be changed during deployment, then you'd have to set it programmatically and not via the web.xml.\n. The basePath indeed needs to represent the context root of your application, there's no way around it. If you expect the context to be changed during deployment, then you'd have to set it programmatically and not via the web.xml.\n. Closing due to inactivity. Please reopen as needed.\n. Closing due to inactivity. Please reopen as needed.\n. https://github.com/kongchen/swagger-maven-plugin/commit/941486344da66efb04e6557474b5c2dbd89c9708 should have resolved the issue and was done 19 hours ago. Please give it another try (the master version of the plugin).\n. https://github.com/kongchen/swagger-maven-plugin/commit/941486344da66efb04e6557474b5c2dbd89c9708 should have resolved the issue and was done 19 hours ago. Please give it another try (the master version of the plugin).\n. @wfuertes - have you tried the latest version of the maven plugin? 3.1.1-SNAPSHOT? Looks like it was published on Oct 3rd.\n. @wfuertes - have you tried the latest version of the maven plugin? 3.1.1-SNAPSHOT? Looks like it was published on Oct 3rd.\n. I'm afraid you can't add vendor extensions to $refs. By definition, any properties in the JSON Reference other than the $ref itself will be ignored. This is beyond our control.\n. I'm afraid you can't add vendor extensions to $refs. By definition, any properties in the JSON Reference other than the $ref itself will be ignored. This is beyond our control.\n. That's a valid structure in general, but I don't follow your intent :)\n. That's a valid structure in general, but I don't follow your intent :)\n. Well, strictly speaking of structure, your second example is valid.\n. Closing this as it cannot be merged (explained in comments).\n. Right, the basePath is only the context root of your application so the value should be /myapp. You should set the host to http://mycompany.com.\n. Closing this as fixed in 1.5.4 (release to come shortly). If that's not the case, please reopen.\n. Right now, there's the swagger-maven-plugin that you may be able to use. You'd have to read its docs to see how it works.\n. Never really used gradle. I'm sure a quick search would give you the answer.\n. It was deprecated, but there's an alternative solution. From https://github.com/swagger-api/swagger-core/wiki/1.3--1.5-Migration#setting-up-additional-information-authorization-info:\n\nOne addition is the Tag. As explained in a previous section, grouping is now done using tags. While tags are generated automatically as they are declared, you may wish to add more information on the tags. You can set a description (which in 1.3 was automatically derived from the code, but no more) and you can add additional information in a form of external documentation.\n. Right now, the only way to set it up is programmatically. \n. Hmpf, I've rushed into the answer, sorry about that. You can use the @SwaggerDefinition to set it up. Please have a look at https://github.com/swagger-api/swagger-core/wiki/Annotations-1.5.X#swaggerdefinition.\n\nAlso, it wasn't deprecated without an alternative way, it was given an alternative way that you may not like. The functionality wasn't just taken away. The reason it was deprecated is that the way APIs are grouped in Swagger 2.0 is significantly different than previous versions. Keeping it the way it was would have meant dealing with potential conflicts and that's something we wanted to avoid for the sake of our users.\n. @to-kra - sorry for the confusion, I'll try to be clearer.\nIn the previous version of swagger-core (that is, 1.3.X), it produced Swagger specs of version 1.2. In Swagger 1.2, operations were grouped under resources, and each resource had its own description. When it came to java code, a resource and a jax-rs endpoint had a 1:1 relation. When that was the case, @Api#description() was used as the description of that resource.\nswagger-core 1.5 exposes Swagger 2.0 which changed the operation organization slightly. Now, the operations are grouped under tags (which can be zero or more tags per operation). As it is now, there isn't necessarily a 1:1 relation between a jax-rs resource and a tag. In fact, multiple jax-rs resources can use the same tag. As such, we can no longer depend on the @Api#description() for it because if they'd represent the same tag, the values would clobber each other and we'd have no real way of choosing the 'right' description.\nThe end result was that we had to come up with another way to add the metadata for the tags. Right now there are two ways to do so - first, using the @ApiDefinition and the second is by directly manipulating the Swagger object.\n. It looks like in one case you're loading http://localhost/swagger/sample.json and in the other you're loading http://localhost/swagger/swagger.json. Is that really what's happening?\n. So you basically can't (at least not right now) and that's the expected behavior due to the change from 1.3 to 1.5. However, given the problem you're trying to solve, I think the solution should come from swagger-ui with the external docs and that's what should be fixed.\n. That's out of scope for swagger-core, the project does Swagger specification generation, not validation.\n. That's just regular code, again, not specific to swagger-core. You can check the source code for the pet store here - https://github.com/swagger-api/swagger-samples/tree/master/java/java-jersey-jaxrs.\n. You forgot the magic word ;)\n. Have you tried using the swagger-jersey2-jaxrs module? It will pull in jersey2, but it shouldn't affect your application.\n. Thanks for the update.\n. Thanks!\n. So yeah, it has changed and not documented yet (sorry about that).\nIn the meantime, you can have a look at the test - https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/test/java/io/swagger/model/override/CustomConverterTest.java - and we'll do our best to answer any follow up questions you may have.\n. Glad it worked out. Can we close this issue?\n. @Jerrrrrrry - you can add the code at any place in your code that runs when your application starts up. If you don't have such a code, you can create a simple bootstrap servlet to handle it.\n. This is the uri produced when doing what?\n. That sounds like more of an issue with APIM than it is with swagger-core.\n. Hi @roykachouh, this is something that's can't be done because it isn't supported by the spec itself.\nYou're welcome to look in swagger-spec for an existing issue, and if you don't fine one, please open a new one to be considered for the next version of the spec.\n. This is using which version?\n. @mohitmutha, @ssoltanid, @nooruddin - 1.5.9-SNAPSHOT has been pushed with the merged PRs that are meant to fix the issue. Can you give it a try and confirm it resolves the case?\n. Out of curiosity, in this case, why add the host at all?\n. Thanks, this is covered by #1103.\n. Which @Singleton are you referring to?\n. Fair point. My only concern (which is not saying we won't do it) is that it would require adding another dependency as that's not part of the jdk libraries (and correct me if I'm wrong).\nOf course an alternative is to set it as a Singleton in the jax-rs configuration, but that's up to the user (which we can also suggest in the documentation).\n. I believe the bug is that the field is used for path generation (if it's indeed used for that). Keeping the operationId/nickname unique is up to the user when it comes to servlets.\n. You mean a fallback for the operationId generation? When it comes to servlets, it has to be the user responsibility. That said, the fallback should be to leave the operationId empty if it's a servlet, as the operationId in 2.0 is not a mandatory field.\nBy the way, thank you for providing the feedback on this module. @iushankin has done intense work on it! However, any initial release would have bugs in it and so opening tickets would really help us push a more stable module in the future.\n. Okay, so we'll need to fix that point. The nickname should not be used for the path generation.\n. Not entirely sure what's your end goal here, but you should definitely add a test for it (which would also explain your case).\n. @frantuma can you review this please?\n. Time \ud83d\ude15 \n@frantuma since you reviewed it in the past, feel free to merge if you feel confident about it.\n. Please take a look at https://github.com/swagger-api/swagger-core/pull/1397 - there are also other issues here on the matter. I cannot tell you if or when that PR is going to be merged though.\n. Again, this looks like the wrong project.\n. This project is the language integration for java that allows producing Swagger specs from the Java code.\nYou're looking for swagger-codegen.\n. Thanks for moving the issue.\n. I believe you got the wrong project... Not sure which one you need, otherwise would refer you.\n. This relates to swagger-codegen then, not this project.\n. Closing as issue moved.\n. Closing as issue moved.\n. @raderio - you're using an old version of a project that's now called springfox. While springfox uses some parts of swagger-core, it does its own processing there. I'd suggest upgrading to the latest version and if the bean validation doesn't work as expected for you, open a ticket on that project.\n. Fixed in #1529.\n. @anilnandigam - as this is more of a generic question about Swagger and not directly related to swagger-core, can you please send the question to the google group?\n. That depends on how you configure the filter. It's been a while, but if you can't filter out resources from the filter in its declaration, you'd have to filter those out in the filter's code.\n. @fehguy - I believe @BigSocial is looking for the solution as described at https://github.com/swagger-api/swagger-spec/issues/50#issuecomment-112063782.\n. Not sure the spec should deal with how things are handled but rather what they are. To me, in your case, binary and blob are the same. If you want to have something that's implementation-specific, that's where the extensions come in. \n. You'd have to have different models for it. You can't control the visibility based on the http method.\n. I'm afraid right now there's no other way with swagger-core.\n. Closing for now. Please reopen if needed.\n. Thanks for the feedback. I believe what you mentioned here is covered by https://github.com/swagger-api/swagger-core/wiki/1.3--1.5-Migration#jax-rs-providers.\nAs for the versioning, that change was introduced in 1.5.0 not 1.5.4, a major version.\n. Not in our book ;) We don't really follow semver officially.\n. Thanks, @who.\n. @iushankin - can you please review the linked PR? Make sure it covers everything including tests. If all is well and the build was successful, feel free to merge.\n. Which URL do you use to open your swagger.json?\nWhich application server do you use to run your application? If it is tomcat or tomcat-based, what is the application context that you use?\n. swagger-core 1.5 doesn't support Grizzly at the moment. Please follow https://github.com/swagger-api/swagger-core/issues/1103.\n. It's not configured to scan the annotations every time. What makes you think it does?\n. There's no swagger 2.4.0.. @jagruti29 then you need to open a ticket on springfox.. Please open the issue on springfox.\n. If I follow your flow, it means you eventually want to differentiate between operations using query parameters. With the current version of Swagger, a unique identifier is a combination of the HTTP verb and the path - the query parameters cannot be used to uniquely identify an operation.\n. I'm afraid not.\n. Thanks, that's an interesting approach. Can you add another use case for your test that covers both an @ApiResponse annotation on the method and the custom exception? That would be more complete.\n. If you take out your Swagger integration do your API calls work? Right now, it seems like the problem you have is not directly related to the Swagger integration but rather the way you configure jersey+jetty together.\n. There are several guides in the wiki as to how to integrate swagger-core. While the way to do it may be slightly different when using embedded jetty, the concept is still the same.\nDo you have any resources that are hosted directly at the context root of your application (@Path(\"/\"))?\n. No, that's not a problem at all. Since it sounds like a sample project, any chance you can share the code itself?\n. Thanks for that. It looks like it's missing a pom file or any other build mechanism. That makes it difficult to run and test. Do you have the full structure of the project?\n. That may help. How do you manage your dependencies then? That could be the source of the problem.\n. There are definitely missing dependencies in that list, so you'd need to take care of that. Also, I'd suggest upgrading to the latest swagger-core, that is, 1.5.4.\n. @gustavolira - as with the previous issue, this seems like a Springfox integration and you should open the issue in their repo.\n. Any chance you're using Springfox and not swagger-core?\n. You have references that are no longer needed or models that are no longer referenced? Not sure how the first one is happening - if it does, would appreciate an example to understand better.\n. That sounds like a bug, I'm afraid as those should be filtered automatically. We try to filter out what's not needed (for example, tags are being filtered if they have no operations).\n. Resolved in master.\n. There's no support for @MatrixParam because it is not supported by the Swagger spec - see https://github.com/swagger-api/swagger-spec/issues/69.\nAs for @BeanParam support, that's currently provided only by swagger-jersey2-jaxrs which can be used for CXF as well. As it currently stands, that's the module that supports JAX-RS2. Yes, it pulls in Jersey as well, but that shouldn't affect the application. See https://github.com/swagger-api/swagger-core/issues/1244.\n. Nothing is wrong with having it, we just never got around to changing the structure of the project. That's exactly what's suggested in #1244. \n. Not really sure why it was created like that (long time ago), however changing that now would be a breaking change which is something we'd probably want to avoid.\n. @renannprado that's an issue with Springfox.. Do you have any setters/getters at all? Because if not, to me foo and bar appearing there is a bug, not the other way around.\n. Yeah, at the moment allowableValues would work for primitives or ranges. The workaround for this would be to use a list of enum instead and the allowableValues would be derived from it.\n. Thanks for the update @m-radzikowski.\n. Can you try not setting the scanner at all?\n. I think @elakito did something related to that? My memory could be playing tricks on me.\n. Apologies for the delayed reply. Have you managed to resolve the issue in the meantime or should we try and investigate it?\n. Is the context root of your app /api?\n. Sorry for the delay. https://localhost/api/v1/customers/1234 doesn't indicate that the context root is /api because it could be / as well. Do you see anything in your logs? Does the application return a 404 for the swagger.json url you try or something else?\n. Hmm, do you ever load the swagger-core JAX-RS resources? Can you share your web.xml or the code that configures your resource scanning?\n. That's the challenge with having so many implementations - there are so many different ways to initialize things. I'm not really seeing anywhere in the web.xml where you define the resource scanning. Do you do it elsewhere?\n. Yeah, looking for the RESTEasy resource scanning. Can you share your Application class (looks like ApiApp)?\nBut the way, even if the resource scanning is configured correctly, based on what you shared the URL you should be searching is https://localhost/api/v1/swagger.json and not what you posted above.\n. Thanks for the update. Happy to hear it worked out.\n. Thanks for the update. Happy to hear it worked out.\n. Never even heard of Undertow until a few days ago. But since it is the web server, I don't see why it would be any different than running it on Jetty or Tomcat.\n. We need to make sure that the functionality of setting swagger.api.basepath to a full URL still works for backwards compatibility.\nIt seems that if swagger.api.basepath is used to mention the basePath as defined in 2.0, we assume a scheme of HTTP which is wrong, so that needs to be fixed as well.\n. @titiu7 - did you get a chance to test 1.5.8 for that functionality? I know @frantuma has done some work in the field.\n. Since the issue is based on the usage of springfox, they may have an different solution as well. Please open the ticket on their repository and they may be able to provide more info.\n. Well, it makes sense that configuration takes precedence over code.\n. Based on your analysis I assume you're using the latest version. Would be great if you could submit a PR to fix the issue.\n. @henray nope, it sounds like a bug\n. For now you can use @ApiModelProperty(hidden=true) as a workaround.\n. Odd. Which version of swagger-core do you use?\n. Yeah, that's a known limitation. Please see https://github.com/swagger-api/swagger-core/issues/1214#issuecomment-129709818.\n. The spec itself doesn't support matrix params and swagger-core follows the spec. Please see https://github.com/OAI/OpenAPI-Specification/issues/69.\n. Nope. It would be implemented as part of the OAS3 implementation.. Can you share the output of curl -I <swagger.json url>?\n. Thanks. So this is not a CORS issue, it's just the swagger-client lying (it's a known issue). The ECONNRESET is a bit more indicative. A bit. Which version of swagger-core do you use?\n. Well, the problem is unlikely to be with the swagger-core resource as it works in numerous other examples. I can only assume this is related to something in your environment. So you're using jetty - is this embedded jetty or just a webapp deployed on a local jetty? Even if localhost, does the request go through any kind of proxy?\n. For curl -I? Yes, it's normal.\nI'm afraid I'm out of ideas. This doesn't seem to be related to swagger-core directly.\n. @frantuma - can you review this please?\n. Since it was a Jackson issue in the first place, I wonder if we should upgrade now or hold off on it.\n. While generally speaking I'd like to be able to not depend on the ServletContext, we probably can't remove the dependency altogether. Some existing implementation depend on the reading the Swagger object from the ServletContext and this would be a breaking change for such implementations.\n. Can you give more details? The question is unclear.\n. swagger-ui is just a set of static pages that you can either host on a different web server or pack it up with your application as you would any other web content. Simply clone the repository and copy the contents of the /dist dir to the wherever you'd like to host it and that's mostly it.\n. Sure thing. I'm closing the ticket for now since it's not really an issue with swagger-core. For general support, please send a note to the google group.\n. Should be checked with consumes as well.\n. Please open the ticket on Springfox.\n. As @fehguy mentioned, I assume this doesn't solve #1103. I think it's fine if it solves the other issues, and the solution to #1103 will be a separate one (there's a pending PR which may solve it, I think).\n. As long as you add the resources, it's fine. Using ResourceConfig.register() is a fine solution. You're not seeing it being populated, because you haven't completed the final step in guide - https://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup-1.5#3-configure-and-initialize-swagger.\n. host and schema are optional, yeah.\nWithout setResroucePackage, you'll get an empty output yeah, just as you can see ;)\n. Closed following @Helmsdown's request ;)\n. @Nogyara probably better to open a new ticket with details of what's missing. Thanks.\n. Yeah, it's a known issue.\nPersonally, I'm okay with solution 1. The support for the /swagger endpoint with the accept header was added a few releases ago per some user request (and PR). We probably shouldn't break that functionality, and if there's a workaround provided, it may be enough because I doubt many people rely on it. However, let's hear what @fehguy has to say as well.\n. We'd need to note in the release notes that it's a breaking change though.\n. It also maps /swagger, and if we remove that it's a breaking change for whoever depends on it.\n. Sounds good.\n. ApiListingResrource2 ;) Honestly, not too concerned with the name.\n. You got the wrong project. This looks like Springfox. Please open the issue there.\n. That's a dependency issue. You need to force it to load a newer version of reflections.org.\n. Hi Guy! Erev tov! \nHow do you set up the resource scanning of RESTEasy? web.xml configuration? spring configuration? An Application class? Other than the context-param, do you set a default path to your API? What does an example URL for a resource you have look like?\n. In that case, do you still want to pursue troubleshooting for this issue?\n. @ApiParam won't allow you to override the type but @ApiImplicitParam will (you'll be redefining the parameter from scratch). If you go with that path, you'd have to hide the original parameter manually (@ApiParam(hidden=true)).\n. Are you certain that error relates to swagger-core? Nothing in the stacktrace indicates it.\n. You can't attach images in mail in Github.\nI'm still not following. On one hand, you say the deployment fails with the exception in the original message, and on the second message you say it is being deployed just fine. \nPlease try to provide the exact steps you follow up to the point you get the exception.\n. Thanks for the details, it clarifies things.\nSo it does looks like a dependency conflict issue, which unfortunately seems to be common with WAS.\nTo be sure, which JAX-RS implementation do you use and which version of it?\n. Thanks for the feedback.\nI don't recall why, but officially swagger-core requires Java 7 so that's not good.\nBut! you mentioned that you made sure that JAX-RS 1.1 is excluded from the pom, however, WAS does come with e default JAX-RS implementation (I believe it's Wink in WAS8) and that may still pull in JAX-RS 1.1. In that case, you'd have to play with the classloader settings in WAS to make sure it uses the deployed app libraries first. Another thing you can check is the shared library folder in WAS as it may contain the dependency that causes the issue. I don't have access to WAS myself, so I can't check that directly.\n. Yeah, that's why I don't think it's a Java 6 issue, but at the same time, it's not a swagger-core issue because indeed it works on Tomcat. It just has to be a dependency issue, but I'm not sure how to investigate it further. You're using the latest swagger-core version (kudos) which resolves the issue there was with the Guava dependency on WAS, but other than that, I don't know. Can you perhaps share the list of libraries in the shared lib folder of WAS?\n. To further investigate it we'd need to get a sample project from you that reproduces the problem. We've had people report in the past they've been successful with WAS Liberty, so there may be some configuration issue that triggers it. With a sample project we can try to isolate the problem.\n. I don't have access to Websphere so no real way of testing it.\n. The data type of the parameter itself should be a Date or something similar. However, you mentioned @RequestParam which means you're not actually using swagger-core, but most likely springfox. Please open the ticket on their repo if you have an issue with it. They use our annotations, but the processing is done by them.\n. We literally depend on Jackson's processing, so we cannot depend on something else. YAML, being a first class citizen of the OpenAPI spec, will remain an output of the library and cannot become optional.\n. YAML support is as optional as JSON support is.\nAs for Jackson - check out https://github.com/swagger-api/swagger-core/tree/master/modules/swagger-core/src/main/java/io/swagger/jackson. Our code depends on Jackson.\nHowever, if you feel strongly about it and think it can be done, by all means, feel free to submit a PR. If it makes sense and is usable (with YAML support), then it could be great for everyone.\n. I have no idea, but I was serious about the PR. If you can make it smaller in a way that doesn't harm the functionality of the project, doesn't break backward compatibility and would benefit the users of the project, then by all means, it would be great.\n. Can you describe the use case for that?\n. Do you have a MessageBodyReader implemented or some sort of filter to that would convert the Account object to the JsonMergePatch prior to calling the method?\n. Okay. Currently we don't allow setting that explicitly and I'm not sure that we should. You can overcome it currently by hiding this parameter and adding one using @ApiImplicitParam.\n. If it doesn't work, please share your code so we can suggest a solution.\n. If it doesn't work, please share your code so we can suggest a solution.\n. Thank you for the PR, but please make sure you follow our Coding Standards.\n. This may be a bug. Looks like the code just looks for a PATCH class and doesn't look for a specific one, but it would compare against the first one it picks up, so it'd be a classloading issue. The alternative would be to try and match a string name and not an actual class.\n. It doesn't point to io.swagger.jaxrs.PATCH specifically, just a matter of which one is returned first. If you look after that check, you can see that it looks for HttpMethod as well, but since it picks up the PATCH first, it doesn't help...\n. Resolved by #1679.\n. Wouldn't that be the body parameter?\n. Wouldn't that be the body parameter?\n. @pankajvijay2008 you're using Springfox and not swagger-core, so the issue should be opened there and not here. However, the current version uniquely identifies an operation based on the HTTP method and the path - the parameters are not used to identify it. As such, you cannot describe that use case in general.\n. @pankajvijay2008 you're using Springfox and not swagger-core, so the issue should be opened there and not here. However, the current version uniquely identifies an operation based on the HTTP method and the path - the parameters are not used to identify it. As such, you cannot describe that use case in general.\n. @ndebeiss - swagger-core is intended to provide support for jax-rs based applications and pure servlet solutions. Other frameworks are out of scope for this project, and some have their own implementations to provide support. \n. @ndebeiss - swagger-core is intended to provide support for jax-rs based applications and pure servlet solutions. Other frameworks are out of scope for this project, and some have their own implementations to provide support. \n. @patrickjamesbarry - which URL do you try to use to access the swagger.json? Which URL do you use for any of your APIs, for example?\n. @patrickjamesbarry - which URL do you try to use to access the swagger.json? Which URL do you use for any of your APIs, for example?\n. The swagger.json doesn't generate a file on your file system. it's just a resource like any other jax-rs resource you expose via jersey. the basePath doesn't affect where the swagger.json is located, but it is the context root of your application (/test according to what you said?).\nBased on that info, you should find it at http://localhost:9000/test/swagger.json\n. The swagger.json doesn't generate a file on your file system. it's just a resource like any other jax-rs resource you expose via jersey. the basePath doesn't affect where the swagger.json is located, but it is the context root of your application (/test according to what you said?).\nBased on that info, you should find it at http://localhost:9000/test/swagger.json\n. @patrickjamesbarry are we good to close this ticket?\n. @patrickjamesbarry are we good to close this ticket?\n. The spec doesn't support file uploads with body parameters but rather formData parameters. See #1319 for more details.\n. The spec doesn't support file uploads with body parameters but rather formData parameters. See #1319 for more details.\n. Since required has a default value of false, it makes sense it overrides it.\n. Since required has a default value of false, it makes sense it overrides it.\n. We have no way of knowing whether you set the value or not, because the annotation has a default value set (false). Our annotations will take precedence if you use them, so either don't use them, or you have to override the value.\n. We have no way of knowing whether you set the value or not, because the annotation has a default value set (false). Our annotations will take precedence if you use them, so either don't use them, or you have to override the value.\n. Because by (our) definition, our annotations override JAXB/Jackson annotations to allow changing Swagger-related definitions as needed.\n. Because by (our) definition, our annotations override JAXB/Jackson annotations to allow changing Swagger-related definitions as needed.\n. @frantuma - is this PR okay now? Obviously needs to be rebased before merging.\n. @frantuma - is this PR okay now? Obviously needs to be rebased before merging.\n. @reta, @elakito - pushed 1.5.10-SNAPSHOT so you can test it.\n. @reta, @elakito - pushed 1.5.10-SNAPSHOT so you can test it.\n. We just released 1.5.9 a week ago, so there's no ETA for 1.5.10.\n. We just released 1.5.9 a week ago, so there's no ETA for 1.5.10.\n. No ETA, though we may try to get a release out in a couple of weeks. You can, of course, always use the SNAPSHOT.\n. No ETA, though we may try to get a release out in a couple of weeks. You can, of course, always use the SNAPSHOT.\n. From https://github.com/swagger-api/swagger-core/pull/1656#issuecomment-220480562:\n\npushed 1.5.10-SNAPSHOT so you can test it.\n. From https://github.com/swagger-api/swagger-core/pull/1656#issuecomment-220480562:\npushed 1.5.10-SNAPSHOT so you can test it.\n. Swagger2Feature is part of the CXF library and is not part of swagger-core. You'd need to ask them for support on it.\n. Swagger2Feature is part of the CXF library and is not part of swagger-core. You'd need to ask them for support on it.\n. We've been planning to push 1.5.10 for a while now, but you know how that goes. I'll see if we can push an official release within the next couple of weeks (no promises though).\n. We've been planning to push 1.5.10 for a while now, but you know how that goes. I'll see if we can push an official release within the next couple of weeks (no promises though).\n. Aiming for the end of next week. Been merging additional PRs and hoping to squeeze a few more in.\n. Aiming for the end of next week. Been merging additional PRs and hoping to squeeze a few more in.\n. Aiming for the end of next week. Been merging additional PRs and hoping to squeeze a few more in.\n. You'll see it under https://github.com/swagger-api/swagger-core/releases once it is (plus, the main README will reflect it).\n. You'll see it under https://github.com/swagger-api/swagger-core/releases once it is (plus, the main README will reflect it).\n. It's pushed now.\n. It's pushed now.\n. Can you share the REST code that references both SmartConfig?\n. Can you share the REST code that references both SmartConfig?\n. That's not a valid JSON Schema, but we could end up with something like:\n\n``` yaml\n  Account:\n    type: \"object\"\n    properties:\n      accountType:\n        $ref: \"#/definitions/AccountType\"\n...\nAccountType:\n    type: \"string\"\n    enum:\n        - \"paid_account\"\n        - \"free_account\"\n```\n. That's not a valid JSON Schema, but we could end up with something like:\n``` yaml\n  Account:\n    type: \"object\"\n    properties:\n      accountType:\n        $ref: \"#/definitions/AccountType\"\n...\nAccountType:\n    type: \"string\"\n    enum:\n        - \"paid_account\"\n        - \"free_account\"\n```\n. JAXB annotations are not parsed by default. #960 contains two methods to introduce the parsing. Keep in mind that in Springfox this may not work, and in that case you'd need to ask in their project.\n. This is still a duplicate of #1319 - the solution is there.\n. See #1103.\n. Looks like you're missing this step - https://github.com/swagger-api/swagger-core/wiki/Swagger-Core-RESTEasy-2.X-Project-Setup-1.5#using-a-custom-application-subclass.\n. Then you're missing a step still. Start from the beginning, follow the instructions. It's pretty straightforward.. @wing328 does it really make sense to handle it though? The spec is faulty. \nFrom:\nhttps://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameterDefault\n\nUnlike JSON Schema this value MUST conform to the defined type for this parameter.\n. Ugh, sorry for the late reply @wing328. By doing that though, you're not letting the spec author know that they have a problem, you silently fix it. If the person put a value of 6.4, would you still want to convert. Looking at the discussion in the leading issue in codegen, the user admits that it is not technically an integer (and, well, it really isn't). Makes much more sense to me to throw an exception in this case and force the user to fix their spec.\n. Can you add a test here?\n. Can't really help without more details. What does your configuration look like? What have you tried doing? What was the result?\n. This issue was moved to swagger-api/swagger-codegen#2304\n. Some details are missing. What's giving you that error? \n. @RobWin can't think of an issue with that. Feel free to submit a PR.\n. Sure thing, but in general I advise users to not rely on the order as it is technically not preserved. It's represented as a JSON object which by definition does not preserve order. I know some parsers try to preserve it, but in general users shouldn't assume that it's just going to work.\n. @frantuma - can this be closed?\n. Ah. I thought #1681 was meant to close it.\n. This issue was moved to swagger-api/swagger-editor#840\n. When you say \"parsing XML using Swagger\" - what do you mean exactly?\n. swagger-core generates a Swagger spec based on your code, which based on what you share here seems like it's doing the right thing. swagger-core does not parse XML at any point, so I'm not following what you're doing or expecting that you experience the issue that you do.\n. Are you talking about code generated by swagger-codegen?\n. Which framework(s) do you use? Which URL have you tried?\n. Well, the wiki doesn't really cover CXF so there isn't much to follow. I don't know CXF well enough to tell whether that configuration should work or not.\n\nAs a first step, I'd ask you to take a look at the CXF sample and see if you spot any major differences.\n. swagger-core just scans your code. If have an operation that accepts HttpServletRequest as an input, you'd need to explicitly tell it to ignore it using @ApiParam(hidden=true).\n. It's documented in the javadocs, but sure. Please reopen if needed.\n. This issue was moved to swagger-api/swagger-play#65\n. Kooujk\n. @jonelee05 I sincerely apologize, but it looks like I had a mishap with my phone, and that ended up closing the issue accidentally with that incoherent comment. I have absolutely no idea what Kooujk means. \nSince you opened a new ticket already, we gave you direction over there. \n. Yup, that's the intent in the next major version of swagger-core, which would be Java 8+ (unlike the current which is Java 7+).. swagger-springmvc is separate project that we do not maintain. It's been renamed to springfox a while back. It looks like you're using a fairly old version of it. I'd suggest you try to upgrade to the latest version and if there are still issues, please file a ticket on springfox directly.\n. @fehguy - iirc, we previously discussed getting rid of ApiListingResourceJSON. While not the ideal way, maybe this would be a good opportunity to just do so, but it will affect only 1.5.9.\n. @frantuma for 1.5.9, let's just remove the @Path from ApiListingResourceJSON but also mark is as @Deprecated. That should revert to the old behavior but notify users they shouldn't use it anymore.\n. Did you experience the same problems after upgrading to 1.5.8?\nYou mentioned the auto-deploy folder. Are you using hot-deployments (i.e. when the WebLogic is still running) or are you restarting the server between deployments?\nIf you're using hot deployments, what happens if you restart WebLogic (without redeployment) - does it get fixed or is it still broken?\n. The randomness and hot deployments make me think this is more of a WebLogic issue than swagger-core. I'd assume that if this was a real issue with swagger-core, users would have reported it a long time ago.\nWhen you get the broken spec, can you operate your API as it is represented by the 'fixed' Swagger or the broken one?\n. @asteriosm - thanks for the update.\n. Which swagger-core dependency do you use?\n. Not the version, which of the modules? swagger-jaxrs? swagger-jersey?\n. so jaxrs doesn't have support for @BeanParam. If you want support for it, you'll have to use swagger-jersey2-jaxrs, whether you use jersey2 or not.\n. It's a core capability of jax-rs2, not jax-rs. And for now, that's how the project is structured, and we won't be able to change it soon (we have a ticket on that). \nAt the moment, if you want support for BeanParam, you'd have to use that dependency.\n. Bringing in Jersey2 should have no effect on your application, other than making the dependency larger. You can try excluding the jersey2 dependency from our dependency and see if it works, but I cannot guarantee that.\n. There's no support in the spec for complex objects in formData parameters.\n. That's the expected behavior. @ApiOperation assumes a return code of 200 if a response is described in it. It will be automatically overridden by an @ApiResponse with the same status code. So use one or the other, but not both. If you need to override the return code at the @ApiOperation, you can use this.\n. Some context? Where do you see a different behavior?\n. It's behaving as expected. Swagger-core will automatically add JAX-RS parameters as parameters to the operation. You can add additional details to them using @ApiParam. \nswagger-core will also parse @ApiImplicitParam as-is and will not do additional processing, and so you can get duplicated parameters. The intent for this annotation in a JAX-RS environment is to add additional parameters that are preprocessed by other layers in the application.\nIf for some reason you require to use @ApiImplicitParam to add already-defined parameters, you'd have to hide those parameters explicitly using @ApiParam(hidden=true).\n. @jmdacruz - this is more of a question to the spec and not swagger-core, which is one of many implementations. The short answer is that it is not supported, and that's because JSON Schema doesn't really allow it.\nWe are considering ways to over come this in the next version of the spec (for example, https://github.com/OAI/OpenAPI-Specification/issues/555), and if you have any other input or suggestions, I'd urge you to either comment on existing tickets there or open new ones.\n. If the problem is with AWS API Gateway, why are you opening the ticket here?\n. Hi @roni-frantchi - the biggest reason is time :) We can possibly review this in about two weeks (definitely not this week), but I can't guarantee that. It looks like this PR needs to be resynced with the code before it can be merged.\n. Oh, and Shana Tova.\n. Thanks for reporting. Version of swagger-core?\n. This specific case may not be supported, will have to look into it.\nBut out of curiosity, if it's always true, why even send it?\n. The location of the swagger.json is not determined by the basePath configuration. The basePath points to the base path of your API.\nThe io.swagger.jaxrs.listing.ApiListingResource.class which you add as a resource is what exposes the swagger.json, and since it's loaded as part of your REST resources, it shares the same root as the other resources (in this case, as it seems \"/\"). \nIf you want to change that, simply extend the class, add your own @Path(\"...\") to it, and that should be hosted where you want.\n. @Hades32 doesn't support it how?\n. All I was asking is how this is seen in swagger-ui as some people expect it to be something other than a string. It definitely shouldn't appear as a multi-field object.\n. Closing as not supported by the spec. If it gets added in a future version, we'll add support to it.\n. Well, the spec doesn't allow it, so we can't support it.\nIf you'd like to see additional methods added in the future, file a ticket against the OpenAPI specification.. It takes a comma-separated string, not an array of strings. If you already annotate the method with @Consumes and @Produces you shouldn't need to declare it in the @ApiOperation as well.\n. It takes a comma-separated string, not an array of strings. If you already annotate the method with @Consumes and @Produces you shouldn't need to declare it in the @ApiOperation as well.\n. @cipresso thanks for validating it.\n. This will be covered by #469.\n. It wasn't fixed yet...\n. Because of https://github.com/swagger-api/swagger-core/issues/1769#issuecomment-214189309.\n. @GADNT Which version of swagger-core are you using?. @GADNT It's time to update to 1.5.12.. @elakito - can you have a look at this please?\n. @maggu2810 - can you rebase?\n. Well, no, I can't imagine adding support to it. Not sure why you'd need additional types too, considering you can use format to fine-tune type specification if needed.\n. But if you want an arbitrary JSON, why don't you set the type to be object? That's pretty much it.\n. So you're not looking to support additional types, you're wanting something that accepts any type?\n. FWIW, we're not going to copy the code and change the license. None of the maintainers if this project is a lawyer, and it is not our place to say whether you can or cannot use the license. Based on the disclaimer from reflections' maintainer, this should not be an issue but at the end of the day it is up to you whether to use the library or not.\n. Liberty uses Wink as the underlying implementation and so the jersey dependency won't help. You'd have to write your own extension to support file upload with Wink as we don't provide it out of the box.\n. This issue was moved to swagger-api/swagger-codegen#3157\n. Would be hard to debug without seeing the equivalent in Java. If you feel you can submit a PR to resolve the issue, please do so.\n. I don't get what you're doing here. You have an app that uses both Spring MVC and Jersey to expose the same thing? Why would you do that? And then which one do you use, swagger-core or Springfox? The details you provide are very confusing.\n. As said in the linked topic, it's going to be string because that's the right data type.\n. Please open the ticket on Springfox.\n. It's not really on our radar.. @thebeeber unfortunately this didn't make the cut for 1.5.10, but we'll try to push it to 1.5.11 (no ETA yet).\n. Just pushed 1.5.10-SNAPSHOT with the change, feel free to take it for a spin.\n. The UI is not part of swagger-core. It's a separate project that can be found at https://github.com/swagger-api/swagger-ui. You'd need to manually add it to your project for it to be deployed.\n. @frantuma - can you review this please?\n. You didn't mention which version of swagger-core you use, but yeah, it does seem like a bug. My guess is that it's because you're adding a @PathParam for a parameter that doesn't exist in the path {spaceId}/projects/deploy and that potentially drives the processing slightly insane. Since there can't be more than one body parameter... well, you get the idea.\n. How is this issue related to swagger-core?\nAlso, I think you're missing the point of the default value. The default value is one that's assumed by the receiving end (either the server or the client) if the sender does not provide a value for it - it's not what automatically should be filled.\n. There's nothing in this ticket to even suggest it's related to java, let alone swagger-core specifically.\nRegarding the general question - body parameters can have default values. The Schema Object has a default field in it.\n. @dilipkrish the BodyParameter has a default under the schema, as the spec describes - https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-models/src/main/java/io/swagger/models/ModelImpl.java#L31, it's not supposed to be directly under the parameter itself. Let me know if you think something is missing. Right now, it looks like potentially accessors are missing from Model.\n. @Alin-Barsan - thanks.\n@marcellodesales - I'm afraid I don't see the source of confusion. \n. Yeah, it's actually not technically impossible to have body payloads for such operations, so we can't just assume that and not produce it. Of course, you found the way to do it for your case, which is great.\n. @frojasg It makes sense, perhaps the documentation isn't clear enough.\nSince you can specify the response of the operation in the annotation, that ones is generally meant as the 'successful' response. It's assumed to be 200 by default, but in some cases users may choose a different code. This just affects that. It ends up being translated to the key value of the response at https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-models/src/main/java/io/swagger/models/Operation.java#L22.\n. I assume you have only one 'successful' response in general? In any case, you can describe all the responses using @ApiResponse. \n. In this case, you have 201 responses, and one will just clobber the other. Anything that's 2XX will be considered the successful response.\n. That's a spec issue, not swagger-core's. There's a standard way of interpreting 1XX, 2XX, 3XX, 4XX and 5XX responses, we're not looking to reinvent anything.\n. That's an issue for the spec, not for swagger-core. As far as I recall we decided to not support it (because those values have predefined meaning), but you're welcome to open a ticket about it and try to change that.\n. Using Object as a class name is allowed, it's pretty much a bug. I guess we didn't take into account someone may go that road, considering Java's Object.\n. Swagger wasn't written in mind of supporting one paradigm or another. Some things can be described, some can't - and that applies to JSON API as well.\n. There's a limit to what you can extend. You can use 'vendor extensions' at various parts in the spec but - a. the tools don't necessarily support it, and b. I still believe you won't be able to describe parts of JSON API with vendor extensions.\n. Right now, swagger-core has explicit support for file uploads for Jersey and Jersey 2 only. The good news is that you can easily add support for RESTEasy by adding your own extension. https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jersey2-jaxrs/src/main/java/io/swagger/jersey/SwaggerJersey2Jaxrs.java shows the Jersey 2 extension that does that logic.\n. It looks like a lot of people are looking for this feature. This is great. If anyone wants to try and submit a PR to add the functionality, that would be appreciated.. A lot of +1's, and rightfully so. Changing this at the moment may cause issues as it's potentially a breaking change.\nThat said, I'm not scared of breaking changes if they make sense. If anyone wants to try and work out a PR to add the functionality, we'd be happy to review. You can take a look at how this is supported in swagger-core 2.0.. Well, @NotEmpty is slightly more than just required, but would be great to support it.\n. Just exclude it from the dependency.\n. You need to add the annotations for it to pick up the resources.\n. The project structure you sent is somewhat odd and is difficult to follow. Can't really find any usage of the annotations in it.\nCheck out the many sample projects that are available at https://github.com/swagger-api/swagger-samples and pick up what's needed from there.\n. What's Swagger 2.2.0? There's swagger-codegen 2.2.0, but that's not swagger-core.\n. For now the only way to do it is by using different classes for the different cases.\n. So you want to expose partial fields of a model for some parameters? The code example you provided doesn't really translate to the JSON example you provided (not that it's supported, it just logically doesn't translate).\n. This should be opened on Springfox.\n. @frantuma - can you review?\n. Which version of swagger-core have you tested with? Can you try with Long?\n. Not really sure what you're trying to achieve. 3.0 is not finalized yet, there are no tools for it, and it contains many other structural changes. Are you planning on hacking your way around all the relevant tools in the chain? You can always write a filter that will manipulate the spec however you want but that alone will not help you much.\n. But even if you replace it, it won't help. No tool will be able to understand it, so what are you hoping to gain?\n. It's not valid, no. formdata parameters can't be objects in 2.0.\n. Okay, so it looks like you cross-posted. The underlying issue is with swagger-ui, but I gave you a potential solution using swagger-core over in the other ticket.\n. looks like you got an answer from @fehguy in SO.\n. You mean something like https://github.com/kongchen/swagger-maven-plugin?\n. Not OOTB. \n. Since in many cases 'like' is not 'exactly like', can you please share your configuration including your web.xml and any class you use to bootstrap swagger-core? Which version of Jersey do you use?\n. Which version of swagger-core do you use?\n. There's no contradiction. If by default jax-rs implementations treat these parameters as multi, then by default, we will describe those as multi and not csv. The spec says that if a collectionFormat is not declared, then it defaults to csv.\n. The spec is implementation agnostic. It simply says - if there's no collectionFormat mentioned, it will default to csv. It's there for convenience so you don't have to specify it over and over again.\nHowever, when it comes to jax-rs, it doesn't use csv by default. It uses multi. That's implementation specific. So when the spec is generated, it's supposed to document the actual API, not what the defaults in the spec are set to be. So... it is set to multi, not csv.\n. Okay, so yes, those details were important for the ticket. So the behavior of swagger-core for generating the spec is fine, and it has affected what you're describing in swagger-parser as a side effect. \nI would suggest opening a ticket on swagger-parser with the problem you stated, and linking to this issue from there. It's important for tracking.\nWhat needs to be changed is https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-models/src/main/java/io/swagger/models/parameters/QueryParameter.java#L11 and https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-models/src/main/java/io/swagger/models/parameters/FormParameter.java#L11, however the jax-rs parameter processor needs to be updated as well to set these by default to multi. Of course, there may be tests that would require fixing. PRs are welcome :)\n. You're looking for Springfox.\n. It really boils down to dependency management, classloaders and visibility. Since each application server has its own mechanism (which can also change between major versions), it's up to you to find the way to do it. I'm afraid we don't have the capacity to try and figure it out for every configuration out there.\n. We want to make this update soon, but obviously this requires extensive testing and that requires time, so difficult to give an ETA.. Please read the javadocs (and any of the other related tickets) - position is deprecated.\nAs for required - what JSON you shared is not a Swagger spec, I don't know what it is.\n. Can you share the full method signature?\n. Okay. @maneeshbhunwal - can't really help you if you don't provide the signature, so I'll be closing the ticket for now. Feel free to reopen if relevant.\n. The issue was closed as the OP did not provide the required details. If you still experience the issue, please file a new ticket.. swagger-mule does not work with Mule 3.6 and above - @BeanParam or no @BeanParam. If @DerEineDa is using @BeanParam, then they are using Mule >= 3.6.\n. What does that have to do with swagger-mule not working with Mule >= 3.6?\n. Yes, the logic of dealing with BeanParam was moved between the two classes, and thank you for pointing that out. However, considering the OP mentioned they use swagger-mule, that doesn't affect the core issue at all. They still can't use it. They won't be able to use it even if they don't use the swagger-mule module and try to use other swagger-core modules, including extending their own Reader, without making fundamental changes to the core code of swagger-core. \n. That's true, you cannot (and this is intentional).\nYou'd have to hide that parameter, and re-add it as an @ApiImplicitParam.\n. Actually, the spec doesn't allow defining multiple types (that is, only a single type and not an array of types), so I'm afraid we can't merge this. We appreciate the effort though.\n. If it helps, I wrote it, and made a mistake in the description of it. It really is not supported.\n. I can't dive into it right now, but https://github.com/swagger-api/swagger-samples/tree/master/java/java-jersey-jaxrs is the source of the demo, it may help you find the info.\n. I'm confused, how is this related to swagger-core?\n. The example is a bit confusing. I imagine it replaces query as the parameter name and not the parameter type?\nAlso, this would be equivalent to creating the @ApiImplicitParam and setting the @QueryParam as hidden=true? \n. Note that the minimum requirements for swagger-core is Java 7.\n. @elakito - if you have time, can you take a look?\n. I'm afraid the spec itself doesn't support $ref's there. If you'd like to see this changed, please check out the tickets on the spec.\n. We don't have an ETA for the release, but you can use the SNAPSHOT in the meantime.. No, you shouldn't be able to push something to central that depends on a SNAPSHOT. There's at least one change we're looking to make before making the release. It's a small change, but requires extensive testing. If we can't get it done soon, I'll try to push a release.. It is, thanks.. The spec itself doesn't allow interdependent requirements, so we can't really implement it. The next version of the spec should have some support for it, but until then it can't be done.. @andreaformica - the current version of the spec, 2.0, does not allow you to pass complex object as form data parameters. The best you can currently do is describe those as string. The next version of the spec will allow for more flexibility.. Yeah, pretty much.. what?. The question is about the swagger-ui version, not swagger-annotation.. This is an interesting case. IIRC, it would work if you set it either on the setter or the getter (don't recall which) - however, you're using Lombok so... annotating the setter/getter is a bit messy. \nAt least for testing, can you try adding the setter and getter explicitly and set the hidden on them?. Thanks for checking. Okay, so at least there's a workaround for now, but we'll keep this open as a bug. If you have time, consider submitting a PR.. The fix was in 1.3.X (older version).\nWhich exact version of swagger-core do you use?. You opened the ticket on the wrong project. It looks like you're using spring mvc, so I'm guessing you're using Springfox.. @pjfanning Sorry for the delay, and thanks for this. Would you consider submitting a similar PR to the 2.0 branch (our next-get core)?. Hmm, some bad news. Even though the PR built properly, master's build is failing after merge.. Any idea if the issue also exists with openjdk7? We can switch to that. Otherwise, we'll have to revert the PR for now.. Great, we're making progress.. What is swagger 2.6.1?. Any updates on what? The question isn't very clear.. I don't understand the question.. This is community cooperation at its best. \nIs there any other issue that needs to be followed up on?. This is a common issue that's brought up, but it's actually a wording issue in the spec. The spec does not support multi-types - i.e. type must always be a single type and cannot be an array. We'll improve the wording in the next version of the spec, but we cannot add support to it in swagger-core and subsequent projects.. It looks like swagger-akka-http is based on spray, which as far as I know is not a jax-rs implementation. I'm not really sure how it works, and whether it uses our jax-rs Reader or implements its own. Something in the annotations is off, because you specify the httpMethod which is not supported in jax-rs. The artifact of the generated 200 response doesn't seem to come from swagger-core, but from whatever Reader implementation is being used.. Please provide the relevant parts of the spec and not screenshots of swagger-ui.. swagger-core is written for specific technologies - jax-rs, jax-rs2, and plain servlets. You can use the annotations as is (and extend if needed), either by just building on the existing code and writing your custom Reader, or creating your own entire logic basing it off on swagger-annotations. However, without more details, it'd be difficult to suggest a different approach.. The spec doesn't support multi-types, and so Swagger Model does not as well.. That's because you can't add anything at the same level as a $ref.... There are ugly workarounds such as:\nyaml\n  otherObject:\n    allOf:\n      - $ref: '#/definitions/OtherObject'\n      - x-foo-extension: \"bar\"\nor\nyaml\n  otherObject:\n    allOf:\n      - $ref: '#/definitions/OtherObject'\n    x-foo-extension: \"bar\"\nI would avoid inlining objects.\n. A bit confused, that's what Response is. What do you expect there?. Sharp eyes! Fixed, thanks!. Read (the full) https://github.com/swagger-api/swagger-core/issues/960 ticket.. If you're not using swagger-core directly, then open the ticket on the project that generates your spec. Swagger-core does not work at compile time, and other tools utilize parts of it to do so, but it's their responsibility to make sure the processing is done correctly. If they think there's an issue with swagger-core, they will (and have) open a ticket here.. Try using the latest version first - 1.5.12.. You followed a ticket from over 3 years ago, instead of checking the wiki for actual documentation on how to integrate swagger-core with your code. You're using an ancient version of the project which is no longer supported. Try using the latest first, and if you still have issues, open a new ticket.. Take a look at https://github.com/swagger-api/swagger-samples/blob/master/java/java-jersey-jaxrs/src/main/java/io/swagger/sample/Bootstrap.java#L37-L47.\nAlternatively, you can also use https://github.com/swagger-api/swagger-core/wiki/Annotations-1.5.X#swaggerdefinition.. I don't believe we support that using annotations.. There is, but it's not going to be pretty. You can basically get access to the model that's holding spec, and manually manipulate it (the title can be set in them).. This is the wrong project. You're looking for Springfox.. Yes, but only because there's no change log for the library at all, so can't really tell what changed and if there are any breaking changes  (yeah, yeah, semver).\nIt looks like our tests pass though... so let's hope for the best and go with it.. Is the example wrong in the swagger.json or the UI you're using?. @bill-okara this looks like an issue with swagger-ui. Can you reopen the issue there?. Going to close this one though as the issue is unrelated to core.. This issue was moved to swagger-api/swagger-ui#2906. My Chinese level doesn't allow me to read that. Swagger-core is intended to be used with jax-rs based REST frameworks, and that's the only one that has some support for reading without annotations. If your framework is independent, you'd have to write your own generation mechanism which will have little to do with swagger-core.. That's where extensions come in. It doesn't make sense for the spec itself to describe it.. The new swagger-ui is extensible. You can write plugins to do pretty much anything you want.. I guess the only issue is with @Response and using a fully qualified name for that would make very ugly code because it'd be used commonly enough. Not a big fan of putting oas in the package as well. We can drop the OAS prefix and just keep that or Swagger or the old Api as a prefix for @Response.. @orientzc my guess is that it's the @JSONField(name = \"ACT_TAG\") annotation. Since the field's name is ACT_TAG I believe you shouldn't need that annotation. Can you revert the field name to ACT_TAG and remove that annotation to see if it helps?. I suggested removing the @JSONField(name = \"ACT_TAG\") annotation, not the @APIModelProperty.. What's wrong with the output? What's missing?. Which version of swagger-core do you use?. Sounds like using the ReaderListener.afterScan(...) would be a better approach.. null value is not really supported by the spec. It will be in the next version.. This is not an issue. You're describing a REST API, so HTTP codes are the codes that are being used. If you'd like to describe internal error codes, do that either as the response you're returning, or as part of the description of the error itself.. @rim-wood can you share the swagger.json you're getting?. Right. The current version of swagger-ui doesn't support the x-example/s extensions.  It should work if you provide the example through the model itself.. Yeah, I understand. However, when it comes to Swagger, there's no simple solution to it because of how JSON Schema works. Effectively you'd need to create two different classes where in one the field is required and in the other it is not. Those classes can of course inherit from each other.. I don't believe this is possible now, without programmatic manipulation. The next version (which we're currently working on) will support it.. Not sure yet, we're working on it. You can track the progress on here. It also depends on the release of the next version of the spec.. There's no ordering of operations in the spec. Any display ordering can/should be handled by the rendering tools.. This should be opened on Springfox.. If you're using Spring MVC, take a look at springfox.. Which version of swagger-core do you use? Which one of the dependencies?. Then you're using springfox, not swagger-core. Please file the ticket there.. Did you add the ReaderListener to your scanned files? I recall someone with a similar issue not too long ago, where this was the problem.\nCan you share your current configuration?. Do you mean https://github.com/federecio/dropwizard-swagger?. Can you share your code?. I don't believe we support that mechanism.. Resolved by #2290.. Which version of swagger-core do you use? Do you have an @ApiOperation annotation too?. Path parameters don't have schemas.. That snippet is not valid. You can't add additional properties alongside a $ref and the spec doesn't support referencing examples.\nRegardless, this is not the right repo, it should be opened on swagger-ui.. @arthurdm - One more thing - I reviewed mostly the annotations. Do the other changes simply cover the naming changes in the annotation or do they change any additional logic?. @aspich We appreciate the PR, it's just an issue of time to review it. Hopefully not too much longer.. Not familiar with @Stereotype but how is that different than what #1867 provides?. There's nothing we can do about it as the spec doesn't allow defining key values in a map. To do that, we'd need support for patternProperties which is not part of the spec.. Sure, I see what you're saying. The only thing is that this would be a one-way conversion. Converting API definitions like that to code would not result an an enum map. A PR to support this change would be welcome.. GraphQL is not supported by the OpenAPI Specification. When the spec supports it, so will we.. This is Springfox - please file the ticket with them.. We're a little bit backed up with work right now. We appreciate the PRs and they're not being ignored.. You mean not specify it as part of the annotation? Can you explain the use case?. That sounds like the issue is with the generated operationId's rather than with allowing users to dynamically set those at runtime.. But that's exactly what the nickname is for. Again, if the problem is that it generates conflicting operationId's, that's a different issue.. Of course, but a test case demonstrating the issue would help.. @frantuma - thoughts?. This is the repo for the Java implementation. Please open the ticket on the relevant project.. Which version of swagger-core?. Yup, it was never implemented that way. PRs are welcome.. @pjfanning - inviting you to review this PR as well.. In which version?. In version 2.0 of the spec, path parameters can only be primitives, so representing it as a string is almost the best you can get. The only thing you might be able to add is a regex pattern to limit it to the hex characters.. They are supported with OAS3, which is covered by the 2.0.0 version of swagger-core (now, 2.0.0-rc2). However, there's no support for OAS3 in the codegen yet, and that's going to take a couple more months.. Try using @ArraySchema instead of @Array.. This has nothing to do with swagger-core.. You're using a very old version. Try using the latest 1.5.x.. Generally speaking, the value in the Swagger annotations will be used over the JAX-RS ones. The rationale behind it is simple - if you don't need to change the value, you wouldn't specify it in the first place.. @wing328 sorry about that. Feel free to ping us on relevant PRs. We just had a release yesterday \ud83d\ude15 . swagger-core 1.5 (the version you point to) is for Swagger/OpenAPI 2.0 which does not support deprecated at the property level. That has changed in OAS3 and is supported in the 2.0 branch.. REST does not mean synchronous only. Asynchronous APIs are supported in OpenAPI 3.0 through webhooks and callbacks. Whether your API is designed that way is a different thing.\nAn event-driven API is something that's not directly supported by the spec. We're having discussions on it, but it's out of scope for this project.. Should this be migrated to the 2.0 branch too?. Can't work that way, because that's not a valid definition. You can't add additional properties alongside a $ref.. Did you define the example inside EntityId?. Great. Is there anything else or can we close the ticket?. Please file the ticket with springfox.. Update to the latest 1.5.X version first and test again.. Yes, then use a newer version.. OIDC is technically only supported in OAS3 which is covered by swagger-core 2.x (under development right now).. It sounds to me like the bug is that string is assumed. It should actually fail if no type is mentioned. The goal of the annotation is to let you describe parameters on top of the types defined in the method, which means that you are required to provide all details.. Yeah, that's understandable. Can definitely be improved.. Shading would also increase the size of the dependency \ud83d\ude15 . That's not a bug, it's the expected behavior.. Probably not in 1.5, but you'd be able to in 2.0.. What you're asking is not possible as JSON doesn't support comments. You can add individual descriptions to each one of the properties though, that's supported today.. Please file the ticket on swagger-editor and follow the issue template.. @gracekarina build is failing.... This should be opened on Springfox.. You're not able to see the new line where?. You're not using swagger-core, you're using springfox. Please file the ticket on that project.. This is not implemented in Swagger-UI 3.X. See https://github.com/swagger-api/swagger-ui/issues/2874.. You'd have to use version 1.5.X for it. There's no formal documentation, but you can follow the sample for guidance - https://github.com/swagger-api/swagger-samples/tree/master/java/java-servlet.. No, you can use 1.5 with Java 8.. @renannprado depending on swagger-core is depending on a library. Springfox provides a way to read those annotations in the context of Spring MVC which we don't provide in swagger-core. You can theoretically write your own Reader based on swagger-core, but you're better off using Sprintfox.. Same answer applies. swagger-core does not support Spring-based REST frameworks. You'll need to implement your own Reader to do that work, and that would prove very time consuming.. This ticket should be opened on the Springfox project.. Try updating to 1.5.18 first.. Which Java version do you use?. Hmm, that shouldn't be the case. 1.5.6 is fairly old though, can you try any of the newer versions first?. 1.6 has been EOL'ed years ago. So has 1.7. We don't officially support 1.6 anymore, and version 2.0 of swagger-core supports Java 1.8 and above only.. You're using an old version of swagger-ui, try updating that first.. Which version of swagger-core and swagger-ui do you use?. That's what 'date' is defined as. If you need it to be in a long format, you need to specify it using the annotations.. Which version of swagger-core do you use?. If you're using Springfox, the ticket should be opened there.. The swagger.json is exposed via a regular jax-rs endpoint. You can write and/or apply any security filter on top of that to control access.. @PeaceInColour - no, we monitor and review the PRs as we can.. @tpruthi - this is specific to Ready!API - please contact their support to get assistance with this issue.. You're using springfox, not swagger-core. Please file the ticket there.. It looks like you're using Springfox and not swagger-core. If that's the case, you'd need to file the ticket with them.. This is using which version of swagger-core?. Thanks. Obviously, it sounds like a bug. If you can provide us with a failing test (via a PR) or a sample class, it would greatly help us solve the issue.. :tada:. Where does the CSV come to play here? The use case is a bit unclear.. This is technically an issue that should be opened with Springfox. However, the specification itself doesn't support optional path parameters, so your API cannot be represented with the spec.. The exception you shared doesn't suggest any issue with swagger-core. If you take away the swagger annotations, you're likely to get the same error.. Yeah, just like any parameter type.. This is an issue for swagger-ui and not swagger-core. However, we currently don't support displaying multiple examples but it is on our roadmap.. Swagger-core does not perform validation, it simply describes your API. If you want to enforce a property to be mandatory, you need to enforce it in your code.. We have a SwaggerConfig interface (https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/main/java/com/wordnik/swagger/config/SwaggerConfig.java) so it's probably better to rename. If this is an interface, I'd just use the full name SwaggerConfiguration.\n. Based on our coding guidelines can you turn the ifstatement to a blocked one?\n. This makes me sad.\n. break statements in Java make me sad :) I have a couple of questions about the PR, but they'll wait for next week.\n. This is not used by the code.\n. Shouldn't be a single line.\n. Shouldn't be a single line.\n. In XmlDecoratedBean the items should be represented eventually as:\nyaml\nitems:\n  type: array\n  items:\n    type: string\n    xml:\n      name: item\n  xml:\n    name: items\n    wrapped: true\nTwo notes:\n1. the name: items is not required in this case, because it's already the name of the property in any case. We could add a check if the value of the @XmlElementWrapper is the same as the field name, then not add the name to the xml object.\n2. The example itself is confusing to a reader because it uses the name items for an array, which in JSON Schema uses the property items - just making it difficult to follow.. Will this quote actual numeric values? Like maxLength?. Parameter style doesn't depend on it being explodable or not.. Just like with explode, if no value is provided by the user, we can assume the default value, and in that case it doesn't need to be serialized.. The style value needs to be in lowercase - based on the tests, it is not.. Should this be an enum?. There's an exception here - the value will be ignored if the in value is path as this will always be true. @ralphdoe - verifying with you that this is the current behavior.. Should this be an enum? There's a risk by setting it as one as this may end up being an open-value field.. We should specify this, schema and content are mutually exclusive, and describe the behavior if more than one is specified. I'd suggest content > array > schema. @ralphdoe - what's the current behavior of the reader?. We should specify this, schema and array are mutually exclusive, and describe the behavior if more than one is specified. I'd suggest content > array > schema. @ralphdoe - what's the current behavior of the reader?. It's true that is has the examples field, however it's not an array of strings. It's a map of Example objects, which I'm not sure how to represent in the annotation.\nEven if we can represent it, this will seriously bloat the annotation usage.. It should also say this and example are mutually exclusive, and that this one will 'win' in case of a conflict.. Also, this field, and some others, should mention that they would be ignored in case a content is specified. @ralphdoe - can you confirm this is the behavior?. Should mention this and examples are mutually exclusive. I don't like this being a string, but not sure we have a better option.. @fehguy can you elaborate why you prefer this not be here?. I'd rather we didn't use the term webhook here.. We need to define which one is being used in case both are specified. Would recommend the operationId is the winner. @ralphdoe - can you verify what's the existing behavior?. Same as with other places. operationRef and operationId are mutually exclusive. I suggest operationId takes priority if both exist. The javadoc should mention that on both fields. @ralphdoe can you verify the behavior?. Same as above. externalValue and value are mutually exclusive. externalValue should take priority. @ralphdoe?. Need to clarify that this will replace any type information the target provides.. If the default value for anyOf and oneOf is changed to {}, shouldn't it be here as well?. This should be completely removed. The Schema Object no longer have examples in it.. hmm... this is a tricky one.. The type of this should actually be float/double.. I assume it's also ignored if it's not a number? @ralphdoe?. I assume it's also ignored if it's not a number? @ralphdoe?. Default should be zero which is ignored. Negative numbers should be ignored as well - @ralphdoe . Negative numbers should be ignored. Would suggest setting the value to a negative number instead - @ralphdoe . We don't mention anywhere else when a field is required - suggest removing it here (and anywhere else in the annotation).. Remove the 'Required.'.. Just like above, should this be an enum?. Can't add a comment as it's out of scope in the PR changes, but shouldn't type() be an enum as well?. This should be addExample (and should be changed in the Parameter as well).. This is going to be tricky.. By donating the code, the ownership is not going to be HPE's.. ",
    "peter-fu": "Additional to issue #71.\nUsing java, if I set responseClass=Foo, and define Foo as below\njava\npublic class Foo extends SuperFoo<Bar> {\n}\nI get this error\n[error] c.w.s.p.HelpApi - Unable to load model documentation for Foo\njava.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.TypeVariabl\neImpl cannot be cast to java.lang.Class\n        at com.wordnik.swagger.core.ApiPropertiesReader$.getDataType(SpecReader.\nscala:84) ~[swagger-core_2.9.1-1.2.0.jar:1.2.0]\n        at com.wordnik.swagger.core.ApiPropertiesReader$.getDataType(SpecReader.\nscala:70) ~[swagger-core_2.9.1-1.2.0.jar:1.2.0]\n        at com.wordnik.swagger.jsonschema.ApiModelParser.parsePropertyAnnotation\ns(SwaggerJsonSchemaProvider.scala:150) ~[swagger-core_2.9.1-1.2.0.jar:1.2.0]\n        at com.wordnik.swagger.jsonschema.ApiModelParser.com$wordnik$swagger$jso\nnschema$ApiModelParser$$parseMethod(SwaggerJsonSchemaProvider.scala:96) ~[swagge\nr-core_2.9.1-1.2.0.jar:1.2.0]\n        at com.wordnik.swagger.jsonschema.ApiModelParser$$anonfun$parseRecurrsiv\ne$1.apply(SwaggerJsonSchemaProvider.scala:79) ~[swagger-core_2.9.1-1.2.0.jar:1.2\n.0]\n        at com.wordnik.swagger.jsonschema.ApiModelParser$$anonfun$parseRecurrsiv\ne$1.apply(SwaggerJsonSchemaProvider.scala:77) ~[swagger-core_2.9.1-1.2.0.jar:1.2\n.0]\nI am using\n- Play 2.0.4 (java)\n- \"com.wordnik\" %% \"swagger-play2\" % \"1.2.0\",\n. +1\n. Is there a working snapshot for Play 2.1-RC1?\n. According to the sample in java-play2\nhttps://github.com/wordnik/swagger-core/blob/swagger-project_2.9.1-1.2.0/samples/java-play2/app/controllers/PetApiController.java#L36\nThe paramType needs to be \"body\".\nIf that doesn't fix your problem, could you post the method annotation and definition in the controller here and provide the version/module of swagger you're using?\n. ",
    "miketzian": "Hrm, seem to have done the pull request wrong. Issue #101 should have been created as a pull request to resolve this issue. \n-Mike\n. More a curiosity than anything else, but what's the use-case for this? Wasn't aware that you could define QueryParam variables in the class, though I suppose this could make sense for params common to many methods - things like paging comes immediately to mind. \n@webron isn't wrong though - that's the behavior as defined in the spec: ( in so far as fields are concerned) \nhttp://jsr311.java.net/nonav/releases/1.1/spec/spec3.html#x3-220003.2 \nI'm not sure how QueryParam at the method level is supposed to work though - for one thing where would the value go?\nThe work that I've started for sub resource locator methods #102 could potentially be further extended to handle this, though I suspect to take this into account we may need a more generic approach.\n. Do you have a code sample there @katiaSouza ? Hard to say without seeing it.\n. Looks like you're mixing JAX-RS and Spring annotations. I'm not a spring guy, but I think if you replace your @QueryParam(\"paramName\") annotations with @RequestParam / @RequestParam(\"paramName\") it should work. \nhttp://stackoverflow.com/questions/5000876/spring-mvc-referencing-params-variable-from-requestmapping\n. Hey all, what's the status on this ? \nInterestingly, the supportedContentTypes option is already supported by the swagger.js backbone library :260 : \njavascript\nop = new SwaggerOperation(o.nickname, resource_path, o.httpMethod, o.parameters, o.summary, o.notes, o.responseClass, o.errorResponses, this, o.supportedContentTypes);\nAnd seems to be implemented on the swagger-ui side as well. \nI suppose you're leaning away from using Produces/Consumes on the methods as the wordnik way seems to be to define those on resources which extend a base resource. Right? \nYou'd almost think that overall resource annotations should work as-is (certainly what I'd expected) though obviously the code just doesn't do it right now. \nIf this should pull from the class level and perhaps in the future from the method level, happy to do an implementation for same? Otherwise I think I'll end up forking the ui and imposing it but I don't think that's ideal by any stretch. \n-Mike\n. Suspect this is the same as or related to #85 \n. My take on the implementation - working well internally. \nhttps://github.com/mdekmetzian/swagger-core/compare/issue-102\n. FWIW @JoshP, we're using the fork as re-implementing everything multiple times just isn't worth it\n. There you go @fehguy, knocked together an extremely simple working sample ;)\nhttps://github.com/mdekmetzian/subresource_example\n. Great\n. Just came across this while looking for something else - you should be using subresource locators - that's what they're for. Support for this has been added semi-recently: https://github.com/wordnik/swagger-core/issues/102\nBasically @klausmyrseth your sub resources can be seperate classes which are returned from methods in your initial resource.\n. ",
    "ben-manes": "It would be nice if the schema generated included constraints by scanning for JSR-303 annotations. Alternatively registering a catalog of the model schema definitions and referencing them by a label. I'm using json-schema-2-pojo to generate the Java classes (Jackson + JSR-303) from the schema, so Swagger's generation is redundant work in this situation.\n. Yep, that's what I'm experimenting with right now.\n. I only got as far as a the basics working before switching off to other tasks. What I had found was,\n-  JerseyJaxrsConfig has to be replaced a ServletContextListener supplying a BeanConfig.\n- The DefaultJaxrsScanner isn't useful because there is no Application bounded, so a custom scanner is needed.\nThat custom scanner will either pull the classes from ResteasyProviderFactory or walking the Guice injector mimic'ing what ModuleProcessor does. I haven't tried writing it yet, so that's my next task.\nI integrated Guice + Jersey 1.x + Swagger 1.x a few years ago and there was a lot of quirks at the time, so I imagine there will be some unexpected issues this time around too.\n. It would be helpful if M2-SNAPSHOT was published as the BeanConfig in M1 does not support multiple resource packages.\n. Okay, here's a gist that performs the integration. Feel free to adapt as you see fit.\nIt was easier to scan the Guice bindings than determine how to extract the resource classes from RestEasy's registry. Most likely the DefaultJaxrsScanner will work in a non-Guice setup.\n. I found that there's 1.5.3-M1 on Maven Central, which has the changes needed to remove the ResourceConfig class. The pom on master would indicate that 1.5.1-M1 is the latest release, which is what I was using, so I'm not sure what the version history is.\n. The version history on Maven Central is confusing if going by dates:\nhttp://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22com.wordnik%22%20AND%20a%3A%22swagger-project%22\nIt indicates that 1.5.1-M2 was released after 1.5.3-M1.\nI had expected master to be a SNAPSHOT version so when looking at the code I had taken 1.5.1-M1 instead of looking at central, which caused me to pull an old BeanConfig class. I'm not sure what the release I should point to as the latest.\n. No, what additional information do you expect? \n. Sure, and I showed working code using a recent release. This works from my perspective. \n. I didn't use a web.xml file because I prefer running Jetty as an embedded library, so everything is configured in Guice. Here's a gist of how that's done.\n. ",
    "katiaSouza": "I made a application that use swagger-ui for create a documentation dynamically, but when I use annotation @QueryParam the parameters are not add in the url. Somebody know reason? \n. Thank you to reply.\nFollows code:\n@Controller\n@RequestMapping(value=\"/api/v1/zipCode\")\n@Api(value=\"Recover address\",listingClass=\"ZipCodeController\",basePath=\"/api/v1/zipCode\", description=\"All operation with zip code\")\npublic class ZipCodeController {\n    private ZipCodeData zipCodeData = new ZipCodeData();\n```\n@ApiOperation(value=\"Recover address\", notes=\"Find address\",httpMethod=\"GET\",responseClass=\"List[ZipCode]\",multiValueResponse=true)\n@ApiErrors(value={@ApiError(code=400,reason=\"Requisi\u00e7\u00e3o mal formatada\"),\n    @ApiError(code=404,reason=\"Recurso n\u00e3o encontrado\"),\n    @ApiError(code=500,reason=\"Erro na API\")})\n@RequestMapping(produces=\"application/json\",method=RequestMethod.GET)\npublic\n@ResponseBody\nList zipCode(@ApiParam(value=\"Number of the Zip Code\",required=false, name=\"number\") @QueryParam(\"number\") String number,\n        @ApiParam(value=\"Name of the street\",required=false, name=\"address\") @QueryParam(\"address\") String address,\n        @ApiParam(value=\"Name of the city\",required=false, name=\"city\") @QueryParam(\"city\") String city,\n        @ApiParam(value=\"Acronym of the States\",required=false, name=\"state\") @QueryParam(\"state\") String state,\n        @ApiParam(value=\"ID API\",name=\"apiKey\", required=true) @QueryParam(\"apiKey\") String apiKey)throws javassist.NotFoundException{\nreturn  zipCodeData.findZipCode(number,address,city,state);\n\n}\n```\n}\n. Yes @mdekmetzian. I've done this, but the swagger-ui doesn't respect this property @RequestParam's required=false, if I put this annotation with required=false, it not stays optional.\n. No @mdekmetzian, I'm not offence.\nThaks for your help.\n. ",
    "redlab": "No offence intended but, @katiaSouza your problem sounds a bit like a totally different issue then this one, I suggest you create another issue instead of polluting this one. \nAnd you are using swagger with spring, aren't you using something like https://github.com/martypitt/swagger-springmvc then? The issue would most likely be in that codebase then.\n. @fehguy thanks for the respone!\n. ",
    "shruthipodduturi": "I am using swagger @ApiParam annotation for query params. But in the swagger UI, params are listed as body params instead of queyr params.Can some one help in this.\n. ",
    "gatala": "Thanks for the reply.  I deployed a project to an OSGI container, and the project had swagger-core as a dependency. The container detects all possible dependencies, even when some of them are not strictly required.  In this case, something in swagger pointed to .  This is no longer an issue, I added configuration to the OSGI bundle to ignore such optional dependencies.  I can post more info if there's interest in OSGI deployment.\n. ",
    "domguinard": "Same thing here with the Java version, added a bootstrap (https://gist.github.com/3696987) as described in https://github.com/wordnik/swagger-core/wiki/java-jax-rs and updated my resources for them to be without the .format but the discovery does not work then, i.e., the bootstrap does not same to have any effect...\n. @fehguy thanks a lot, the Jax-RS version also finally worked for me, it was indeed that I wasn't firing the boostrap before the jersey servlet loaded... I added that to the tutorial as it wasn't there: https://github.com/wordnik/swagger-core/wiki/java-jax-rs\nCheers!\n. @pilhuhn would indeed be great to have access to this feature... we really miss the ability to annotate the beans, it would make the documentation even more useful.\n. ",
    "ericmittelhammer": "Having the exact same issue in Play2.  Setting PlayApiReader.setFormatString(\"\") does not remove {format} from the generated resources.json.\nCould it be related to this: https://github.com/wordnik/swagger-core/blob/master/modules/swagger-play2/app/play/modules/swagger/ApiHelpInventory.scala#L59 ?\nIs there a reason that swagger-Play2 can't discover urls directly from the routes file?  It's rather frustrating that we have to duplicate this configuration in a mixture of jax-rs and swagger annotations, and yet, still there is part of the url that is generated from another source.\n. ",
    "gregmac": "Moved to more relevant project https://github.com/wordnik/swagger-ui/issues/59\n. I think I may have used a bad example, I did not mean it has to be the root of the application. For Wordnik, I'd say to a developer that the \"root\" of the API is really https://api.wordnik.com/v4/ (or https://api.wordnik.com/v3), and so that is what I should be able to type into swagger-ui. From there, it should \"discover\" /resources.json.\nAnother way of saying this, as an end-user of the API, https://api.wordnik.com/v4/ has meaning to me, because it's the base of basically all API calls. In fact, my code probably has something like var baseUrl = \"https://api.wordnik.com/v4/\"; somewhere in it. Assuming I know nothing about what Swagger is, this /resources.json I have to stick on the end when I'm using this crazy interactive documentation thing is just some (to me) meaningless cruft the documentation tool needs or it complains. \nPer @casualjim's suggestion, maybe discovery can be multiple parts:\n- Check the URL entered for a ResourceListing\n- Check the returned response for <link type=\"application/swagger-spec\">\n- Check the URL entered + /resources.json for a ResourceListing\nHowever, I'd suggest adding the /resources.json (or something similar) is a good start, and pretty easy to implement.\n. ",
    "singalen": "@pilhuhn please do! We also would appreciate the feature. Is it in your fork now?\nActually, there's no need to annotate parameter classes themselves - swagger can analyze parameter list and pick all the parameter classes. What we REALLY like to have is an annotation for beans' fields documentation.\nMaybe it's not the feature you are thinking about?\n. ",
    "zackdjones": "Thanks a lot! I didn't know that was an available option.\n. ",
    "eyala": "Will this work in Jax-RS as well? I can extend ConfigReader (or JerseyConfigReader, for that matter) in Java but I must not be doing it right- I'm getting unimplemented method exceptions left and right.\n. Will this work in Jax-RS as well? I can extend ConfigReader (or JerseyConfigReader, for that matter) in Java but I must not be doing it right- I'm getting unimplemented method exceptions left and right.\n. Great, this worked for me. Actually, the real reason my original attempt didn't work was related to the Scala 2.10 incompatibility. Thanks!\n. Great, this worked for me. Actually, the real reason my original attempt didn't work was related to the Scala 2.10 incompatibility. Thanks!\n. Tony, can you update here when you've done that?\nIt turns out my problem (extending the ConfigReader) was related to this (we've partially introduced Scala in our project, version 2.10) and not to the actual extension.\n(what's described in issue #62 )\n. Tony, can you update here when you've done that?\nIt turns out my problem (extending the ConfigReader) was related to this (we've partially introduced Scala in our project, version 2.10) and not to the actual extension.\n(what's described in issue #62 )\n. ",
    "DiegoRam": "jejejeje. Its really worst if there is any answer at all!!! I will try this and gonna tell you.\n. You so right!!! my .ivy local repo has been corrupt by own pet nexus server.\nThanks a lot!!!\n. ",
    "jonarcher": "FWIW, just tried it and it works like a charm for me. Thanks!\nOn Tue, Oct 23, 2012 at 2:11 PM, fehguy notifications@github.com wrote:\n\ndeployed in 1.1.1-SNAPSHOT in sonatype snapshot repo\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/pull/64#issuecomment-9716297.\n. \n",
    "mmatula": "OK, glad to hear that! :)\n. On Oct 23, 2012, at 10:05 PM, fehguy notifications@github.com wrote:\n\nTests pass fine so I'm merging. What issue were you having running them?\n\nI don' remember what exactly. I was getting some XML-related errors (unrelated to my change). I did not have time to investigate - probably some setup issue on my end.\nThanks,\nMartin\n\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "marlandy": "The same error occurs. \ntxt\nGRAVE: Error waiting for multi-thread deployment of WAR files to complete\njava.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space\n    at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:222)\n    at java.util.concurrent.FutureTask.get(FutureTask.java:83)\n    at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:752)\n    at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:472)\n    at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1413)\n    at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:313)\n    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n    at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:401)\n    at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:346)\n    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1140)\n    at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:785)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n    at java.lang.Thread.run(Thread.java:680)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n    at java.util.zip.InflaterInputStream.<init>(InflaterInputStream.java:71)\n    at java.util.zip.ZipFile$1.<init>(ZipFile.java:224)\n    at java.util.zip.ZipFile.getInputStream(ZipFile.java:224)\n    at java.util.zip.ZipFile.getInputStream(ZipFile.java:192)\n    at java.util.jar.JarFile.getInputStream(JarFile.java:385)\n    at org.apache.tomcat.util.scan.FileUrlJar.getEntryInputStream(FileUrlJar.java:97)\n    at org.apache.catalina.startup.ContextConfig.processAnnotationsJar(ContextConfig.java:1941)\n    at org.apache.catalina.startup.ContextConfig.processAnnotationsUrl(ContextConfig.java:1908)\n    at org.apache.catalina.startup.ContextConfig.processAnnotations(ContextConfig.java:1893)\n    at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1296)\n    at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:855)\n    at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:346)\n    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5173)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:618)\n    at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:963)\n    at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1600)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n    ... 5 more\n. The same error occurs. \ntxt\nGRAVE: Error waiting for multi-thread deployment of WAR files to complete\njava.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space\n    at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:222)\n    at java.util.concurrent.FutureTask.get(FutureTask.java:83)\n    at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:752)\n    at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:472)\n    at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1413)\n    at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:313)\n    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n    at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:401)\n    at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:346)\n    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1140)\n    at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:785)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n    at java.lang.Thread.run(Thread.java:680)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n    at java.util.zip.InflaterInputStream.<init>(InflaterInputStream.java:71)\n    at java.util.zip.ZipFile$1.<init>(ZipFile.java:224)\n    at java.util.zip.ZipFile.getInputStream(ZipFile.java:224)\n    at java.util.zip.ZipFile.getInputStream(ZipFile.java:192)\n    at java.util.jar.JarFile.getInputStream(JarFile.java:385)\n    at org.apache.tomcat.util.scan.FileUrlJar.getEntryInputStream(FileUrlJar.java:97)\n    at org.apache.catalina.startup.ContextConfig.processAnnotationsJar(ContextConfig.java:1941)\n    at org.apache.catalina.startup.ContextConfig.processAnnotationsUrl(ContextConfig.java:1908)\n    at org.apache.catalina.startup.ContextConfig.processAnnotations(ContextConfig.java:1893)\n    at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1296)\n    at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:855)\n    at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:346)\n    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5173)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:618)\n    at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:963)\n    at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1600)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n    ... 5 more\n. These are my dependencies:\n``` xml\n\n\ncom.sun.jersey\njersey-server\n1.14\n\n\ncom.sun.jersey\njersey-servlet\n1.14\n\n\ncom.sun.jersey\njersey-json\n1.14\n\n\ncom.wordnik\nswagger-jaxrs_2.9.1\n1.1.0\ncompile\n\n    <dependency>\n        <groupId>junit</groupId>\n        <artifactId>junit</artifactId>\n        <version>4.8.2</version>\n        <scope>test</scope>\n    </dependency>\n</dependencies>\n\n```\n. These are my dependencies:\n``` xml\n\n\ncom.sun.jersey\njersey-server\n1.14\n\n\ncom.sun.jersey\njersey-servlet\n1.14\n\n\ncom.sun.jersey\njersey-json\n1.14\n\n\ncom.wordnik\nswagger-jaxrs_2.9.1\n1.1.0\ncompile\n\n    <dependency>\n        <groupId>junit</groupId>\n        <artifactId>junit</artifactId>\n        <version>4.8.2</version>\n        <scope>test</scope>\n    </dependency>\n</dependencies>\n\n```\n. I\u00b4ve got same error. Have you tried with Tomcat 7.0.29?\n. I\u00b4ve got same error. Have you tried with Tomcat 7.0.29?\n. ",
    "rocketraman": "Cool.\n. Thx! Will check it out.\n. @feyguy Looking for the source branch to apply some local modifications -- don't see it? Is the 2.10_rc1 branch pushed from your local repo?\n. ",
    "casualjim": "they should if you depend on them like this:\nscala\nlibraryDependencies += \"com.wordnik\" %% \"swagger_core\" %\"1.2.0-SNAPSHOT\" cross CrossVersion.full\n. they should if you depend on them like this:\nscala\nlibraryDependencies += \"com.wordnik\" %% \"swagger_core\" %\"1.2.0-SNAPSHOT\" cross CrossVersion.full\n. I'm all for a /api-docs/resources.json endpoint but not for /resources.json to live at the root of my app\n. I'm all for a /api-docs/resources.json endpoint but not for /resources.json to live at the root of my app\n. Perhaps we could have a link tag in the html pages that shows the discovery url\nhtml\n<link src=\"/v4/api-docs/resources.json\" type=\"application/swagger-discovery\" />\n. Perhaps we could have a link tag in the html pages that shows the discovery url\nhtml\n<link src=\"/v4/api-docs/resources.json\" type=\"application/swagger-discovery\" />\n. it's actually like this\nscala\n\"com.wordnik\" %% \"swagger-play2\" % \"1.1.1-SNAPSHOT\"\nif you're using a different scala version than 2.9.1 you have to use\nscala\n\"com.wordnik\" % \"swagger-play2_2.9.1\" % \"1.1.1-SNAPSHOT\"\n. it's actually like this\nscala\n\"com.wordnik\" %% \"swagger-play2\" % \"1.1.1-SNAPSHOT\"\nif you're using a different scala version than 2.9.1 you have to use\nscala\n\"com.wordnik\" % \"swagger-play2_2.9.1\" % \"1.1.1-SNAPSHOT\"\n. it seems that the generated json for an operation doesn't have the proper paths. In the json below  for the getPetById operation it doesn't pick up the path parameter annotation\njson\n{\n    \"apiVersion\": \"0.2\", \n    \"apis\": [\n        {\n            \"description\": \"Operations about pets\", \n            \"operations\": [                \n               {\n                    \"errorResponses\": [\n                        {\n                            \"code\": 400, \n                            \"reason\": \"Invalid ID supplied\"\n                        }, \n                        {\n                            \"code\": 404, \n                            \"reason\": \"Pet not found\"\n                        }\n                    ], \n                    \"httpMethod\": \"GET\", \n                    \"nickname\": \"getPetById\", \n                    \"notes\": \"Returns a pet when ID < 10. ID > 10 or nonintegers will simulate API error conditions\", \n                    \"parameters\": [\n                        {\n                            \"allowMultiple\": false, \n                            \"allowableValues\": {\n                                \"max\": 10.0, \n                                \"min\": 0.0, \n                                \"valueType\": \"RANGE\"\n                            }, \n                            \"dataType\": \"String\", \n                            \"description\": \"ID of pet that needs to be fetched\", \n                            \"name\": \"id\", \n                            \"paramType\": \"path\", \n                            \"required\": true\n                        }\n                    ], \n                    \"responseClass\": \"Pet\", \n                    \"summary\": \"Find pet by ID\"\n                }], \n            \"path\": \"/pet\"\n        }\n    ]\n}\n. it seems that the generated json for an operation doesn't have the proper paths. In the json below  for the getPetById operation it doesn't pick up the path parameter annotation\njson\n{\n    \"apiVersion\": \"0.2\", \n    \"apis\": [\n        {\n            \"description\": \"Operations about pets\", \n            \"operations\": [                \n               {\n                    \"errorResponses\": [\n                        {\n                            \"code\": 400, \n                            \"reason\": \"Invalid ID supplied\"\n                        }, \n                        {\n                            \"code\": 404, \n                            \"reason\": \"Pet not found\"\n                        }\n                    ], \n                    \"httpMethod\": \"GET\", \n                    \"nickname\": \"getPetById\", \n                    \"notes\": \"Returns a pet when ID < 10. ID > 10 or nonintegers will simulate API error conditions\", \n                    \"parameters\": [\n                        {\n                            \"allowMultiple\": false, \n                            \"allowableValues\": {\n                                \"max\": 10.0, \n                                \"min\": 0.0, \n                                \"valueType\": \"RANGE\"\n                            }, \n                            \"dataType\": \"String\", \n                            \"description\": \"ID of pet that needs to be fetched\", \n                            \"name\": \"id\", \n                            \"paramType\": \"path\", \n                            \"required\": true\n                        }\n                    ], \n                    \"responseClass\": \"Pet\", \n                    \"summary\": \"Find pet by ID\"\n                }], \n            \"path\": \"/pet\"\n        }\n    ]\n}\n. You can annotate them. Scalatra knows about those annotations. it's the sole reason for depending on the swagger-core jar in scalatra.\n. You can annotate them. Scalatra knows about those annotations. it's the sole reason for depending on the swagger-core jar in scalatra.\n. When you do \napiOperationModelA\nor you use registerModel[ModelA]\nit will pass through this method: \nhttps://github.com/scalatra/scalatra/blob/develop/swagger/src/main/scala/org/scalatra/swagger/Swagger.scala#L78\nwhich knows about the annotations\n. When you do \napiOperationModelA\nor you use registerModel[ModelA]\nit will pass through this method: \nhttps://github.com/scalatra/scalatra/blob/develop/swagger/src/main/scala/org/scalatra/swagger/Swagger.scala#L78\nwhich knows about the annotations\n. ",
    "predicador37": "Would it be possible to ignore regex in params as a workaround? \nI mean, given the following regex in a param: @Path('/{id : \\d+}')\nWhere id is an Integer, allow any input in swagger-ui and then launch the request with the given param\n/entity/1 instead of /entity/{id : \\d+}\n. OK, just edit the file swagger.js and locate the line:\nurl = url.replace(\"{\" + param.name + \"}\", encodeURIComponent(args[param.name]));\nBefore this line, replacing regexp in the url string by the parameter name should do the trick. Example:\nurl=url.replace(/{id.*/,'{id}');\nThis way, regex are ignored by swagger-ui and requests can be sent properly.\n. I submitted a PR with a more generic fix which should work for any param with an associated regex.\n. ",
    "bric3": "@predicador37 Thanks for the hot fix :)\n. ",
    "facultymatt": "I second some type of support for forms and posts. Here is an example use case. I have an api that allows users to create new accounts. \nThe endpoint is POST /users/signup. The API requires 3 parameters: email, name, password and accepts 1 optional parameter location.\nSure, as @ayush points out on the server side I might be accepting xml, json, etc. But on the swagger-ui side I want to have individual fields, that can be marked required, int, string, etc. for users to fill out. I don't want them to have to compose a json object or xml string... only to make a request and then have the server tell them they didn't fill out required fields. \n@ayush while you point out that swagger is meant to document API's, its hard to ignore the usefulness of testing GET requests. If the functionality of testing fully RESTful apis was baked in it would be more useful. See http://hurl.it/ for a great example.\nWith this in mind, I would propose the following: \n1. Add to @operation a field that allows users to specify which formats their server accepts. Maybe this is instead a global setting on the swagger-ui side, just as users can set supportedSubmitMethods.\n2. Set each parameter as (that would normally be grouping into one REQUEST_BODY or similar) as a type=\"form\" or even type=\"query\" \n3. When a method is POST, all params that are now type=\"path\" are sent as fromData. The proper content type is set, ie: x-www-form-urlencoded. In additon, the users specified \"auth_token\" is automatically added to either header or as additional post parameter. \nThoughts? \n. ",
    "jbeuckm": "+1 @facultymatt \n. ",
    "diaspar": "Hi I am experiencing the same problem. I am documenting an API that has methods that only accept POST params in the form: key=value.\nAny development on this? Can someone point out what to modify on swagger.js to accomplish this?\n. =) thanks, updated on my end. Also hoping to have an stable solution for this.\n. ",
    "CamiloMM": "Hi @diaspar, where did you put that? I'm having to document an API that also uses \"form POST\" so I don't want to have people format the query string by hand, and would love to have fields for each property too.\nI'm also using manually generated .json.\nTo the developers, this feature is sorely needed! Any news on this issue @fehguy?\nEdit: Figured the patch out, thank you very much!\nEdit 2: Just one note. Change that line:\nbodyParam += param.name + '=' + map[param.name];\nTo this:\nbodyParam += param.name + '=' + encodeURIComponent(map[param.name]);\nOtherwise parameters will mess up when there's input with characters such as & or = (to name a couple).\n. Hi @fehguy, I'm not sure I understood the current state of things.\nI modified Swagger-UI for personal use so that it supports HTML-<form>-like fields, that is, it sends a body with URL-encoded params and application/x-www-form-urlencoded in the header. Does Swagger-UI currently support this?\nI ask this because I'm using Swagger to document a website API with forms and such, so it is valuable to document what happens when forms are submitted.\n. Thanks for the quick response.\nI'm manually generating the json, and thankfully, my hacks use paramType:form, so it should be compliant already. I'm only wondering about:\n- Does multipart/form-data work the same as application/x-www-form-urlencoded in the sense of how web forms work? I'm sorry if it's a dumb question; I really don't know. In other words: can I expect a request like this to pass variables just like an html POST form passes them?\n- Will this also work with dataType:file,paramType:query so that I can upload a file in Swagger-UI just like I would in a regular web form (the mention of multipart/form-data makes me think that's the case...).\nI've made some extra hacks and fixes for Swagger-UI so that I'm only going to try these new things in my next project, but I'm curious. (Also, unfortunately the fixes I've made are directly at the compiled js so they're not very shareable here).\n. Ah, I see. I thought they were different things because of that restriction for files (pretty much everything I knew about multipart/form-data was that it was necessary for file uploads).\nI'm using PHP >= 5.3 in a LAMP setup, and I've made the JSON by hand (using the no-server sample as a start point). I suppose that example is Java-specific? I've never used JSP, Scala, Maven, or anything Java-related in the past.\n. Really, thanks for taking your time, but unfortunately I'm out of a Linux box at the moment (deployment is LAMP, development is WAMP), so I can't currently try that.\nHowever, file uploads work even without the back-end being in Java right? I mean, if I grab a current Swagger-UI, would it support form-like file uploads and POST parameters, as long as they're correctly annotated in the JSON?\n. This is shaping great, you guys are doing a marvellous job. I'm really thankful for all the effort put into this and I'm very happy this is being actively developed. If I knew CoffeeScript maybe I could contribute, but for the time being I can only say thanks! :D\n. ",
    "vsapram": "is there any way to change the json provider fromcom.fasterxml to com.codehaus in swagger configuration.\n. ",
    "btiernay": "It is possible as Ben points out.\n. Awesome, thanks for listening!\n. I agree, there really is no need to have Scala as a dependency in core. I understand the benefits of Scala, but swagger-core should really be independent. This has much to do with the \"physical design\" of the project.\n. Agreed, the former is more standard for web frameworks and web api design.\n. Yeah, this is highly desirable feature. Right now refactoring will invalidate all of these references. Class literals is certainly the way to go. As Ben points out, this is a popular idiom. Guice and Jackson both use this pattern.\n. Is there any chance the solution to this is applicable to 1.3? \n. java\nval config = new BeanConfig();\n    config.setTitle(API_TITLE);\n    config.setVersion(VersionUtils.getApiVersion());\n    config.setBasePath(API_BASE_PATH);\n    config.setResourcePackage(getResourcePackages());\n    config.addConverter(new MyConverter1());\n    config.addConverter(new MyConverter1());\n    config.setScan(true);\nAs an aside, it would be nice to have BeanConfig setters be chainable so you could do:\njava\nval config = new BeanConfig()\n   .setTitle(API_TITLE)\n   .setVersion(VersionUtils.getApiVersion())\n   .setBasePath(API_BASE_PATH)\n   .setResourcePackage(getResourcePackages())\n   .addConverter(new MyConverter1())\n   .addConverter(new MyConverter1())\n   .setScan(true);\nor the more traditional builder style:\n``` java\nval builder = BeanConfigBuilder.builder()\n   .title(API_TITLE);\n   .version(VersionUtils.getApiVersion());\n   .basePath(API_BASE_PATH)\n   .resourcePackage(getResourcePackages());\n   .resource(new MyResource1())\n   .resource(new MyResource2())\n   .resources(new MyResource3(), new MyResource4())\n   .resources(ImmutableList.of(new MyResource5()))\n   .converter(new MyConverter1())\n   .converter(new MyConverter1())\n   .converters(new MyConverter3(), new MyConverter4())\n   .converters(ImmutableList.of(new MyConverter5()))\n   .listener(new MyReaderListener1())\n   .listener(new MyReaderListener2())\n   .listeners(new MyReaderListener3(),new MyReaderListener4())\n   .listeners(ImmutableList.of(new MyReaderListener5()))\n   .scan(true);\nval config = builder.build() // Triggers scan, etc.\n```\n. ",
    "stianl": "Tried it and it seemed to have done the trick (actually rm  -rf ~/.ivy2/cache). Thank you, and antithanks to ivy.\n. I had to do one minor change to get this working after successfully running publish-local.\nInstead of dependency defined as:\n\"com.wordnik\" %% \"swagger-play2\" % \"1.1-SNAPSHOT\"\nI had to use:\n\"com.wordnik\" % \"swagger-play2_2.9.1\" % \"1.1-SNAPSHOT\"\n. This was great news on a early friday morning @fehguy! I just tried it out and it works like a charm! :)\nOne small caveat when using multipart/form-data instead of application/x-www-form-urlencoded with Play2 (and I'd assume there'd be similar issues with other frameworks) is that I cannot get the form data via request().body().asFormUrlEncoded(),  request().body().asMultipartFormData().asFormUrlEncoded() works fine though - as well as the regular form binding mechanism.\n. Cool!\nfredag 1. februar 2013 skrev Tony Tam f\u00f8lgende:\n\nYes, right now the apireader isn't picking up the annotations. Working on\nthat next so it's automatically supported by the framework integrations.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/124#issuecomment-12990884.\n\n\nMed vennlig hilsen,\nStian B. Lindhom\nhttp://stianlindhom.com/\n. Great!\n. ",
    "irishfan99ko": "This pull request looks to have overwritten the changes from pull request #64. Was that intentional? \n. Gotcha, thanks for the quick response.\n. ",
    "gcerquant": "Was meant to be posted in Swagger-UI.\n. ",
    "3miliano": "There are two different kind of content types. One for the body of the POST/PUT request, and one that is the actual response format of a GET request.\nFor POST/PUT the user should be able to select the Content-Type of the body just like it selects the actual content of the UI or any other parameter.\nIn the GET case, what needs to be sent is the Accept header which denotes which content the client is willing to accept. Ideally the API should format its response to that requested or reply with an error code is no format can be negotiated.\nIn any case this should be considered an alternative to those using \n/uri1/uri2.{format}\nRegarding the field name, \"content-type\" is not a good name. Better to follow the camel case notation of other fields.\n. ",
    "Reggino": "A byte is 8 bits. How you interpret them is up to you. \nBut indeed: should the spec. prescribe how to encode and transfer a byte...? Should 1000 0001 be:\n0x81\n129\n\u2212126\nIt's all possible....\n. It seems you are right... The question is a bit old and from the Swagger 1.0 era, i'm not sure whether the full JSON-schema was \"supported\" back then... Anyway, it looks nice! An example on the Wiki on how to use (something like) this would clearify a lot.\n. ",
    "psol": "Indeed all is possible, does that mean the service should be able to parse all these options?\nI think it would be more reasonnable to decide on one representation\u2026 I like signed bytes which, to me, seem more coherent with the other numeric types defined in Swagger.\n. ",
    "d1b1": "No problem. I used an early version of the project and really need to purge and rebuild the UI portions. \nI have noticed that I can not use a sub path for an API. I have had to modify the swagger.js on both the API site and on the UI side to allow for a nested API structure. Maybe this is not a standard approach? For example: \nhttp://composer-development.ci.publicbroadcasting.net/api\nThis will not read in the existing API. \n. ",
    "rvullriede": "Hi,\nI've also tried to get Swagger running with Spring/CXF in Tomcat but without much luck. What did I do:\n- Create a CXF sample app based on the java-swagger-sample-app.\n- Configured CXF to listen both the application resources and the API listing resources.\nTomcats start successfully and the application resources are working as well (checked by opening GET /context/api/v1.0/user.json/user1 which successfully return the sample user with username \"user1\".\n/context is the context of the deployed app within tomcat\n/api is the path of the CXF servlet in web.xml\n/v1.0 is the address of the jaxrs:server configured inside applicationContext.xml\nSo far everything works.\nWhen I now try to open the listing ressource at /context/api/v1.0/api-docs.json it returns the following exception:\njava\nSEVERE: Servlet.service() for servlet [CXFServiceServlet] in context with path [/context] threw exception\njava.lang.RuntimeException: org.apache.cxf.interceptor.Fault\n    at org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:117)\n    at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:331)\n    at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)\n    at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:239)\n    at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:218)\n    at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:163)\n    at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:137)\n    at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:158)\n    at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:243)\n    at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:168)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:621)\n    at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:219)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)\n    at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:123)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java)\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)\n    at org.apache.catalina.core.StandardHostValve.__invoke(StandardHostValve.java:171)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)\n    at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:936)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)\n    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)\n    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)\n    at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:722)\nCaused by: org.apache.cxf.interceptor.Fault\n    at org.apache.cxf.service.invoker.AbstractInvoker.createFault(AbstractInvoker.java:162)\n    at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:128)\n    at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:193)\n    at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:102)\n    at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)\n    at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:94)\n    at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:271)\n    ... 28 more\nCaused by: java.lang.NullPointerException\n    at com.wordnik.swagger.jaxrs.listing.ApiListingResource$.routes(ApiListing.scala:33)\n    at com.wordnik.swagger.jaxrs.listing.ApiListing.resourceListing(ApiListing.scala:69)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:601)\n    at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:180)\n    at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:96)\n    ... 33 more\nSince I don't have much experience with Scala I'm stuck here. Any help is much appreciated!\nYou can find my sample app here: https://github.com/rvullriede/swagger-core/tree/master/samples/swagger-java-sample-app-cxf\nThanks,\nRaphael\n. Hi,\nI don't really understand the naming of your maven artifacts but I'be get used to it ;-)\nIs there any special reason I don't see why you also have a version identifier as part of your artifactId?\nAnyway, I now upgraded the sample app to:\nxml\n<dependency>\n    <groupId>com.wordnik</groupId>\n    <artifactId>swagger-core_2.10.0</artifactId>\n    <version>1.2.1-SNAPSHOT</version>\n</dependency>\n<dependency>\n    <groupId>com.wordnik</groupId>\n    <artifactId>swagger-jaxrs_2.10.0</artifactId>\n    <version>1.2.1-SNAPSHOT</version>\n</dependency>\nfrom sonatype snapshot with exactly the same stacktrace (NullPointer in com.wordnik.swagger.jaxrs.listing.ApiListingResource$.routes(ApiListing.scala:33)), which is this line:\njava\nval resources = app.getClasses().asScala ++ app.getSingletons().asScala.map(ref => ref.getClass)\nFor me it doesn't look related to a null-ServletContext, but I don't know Scala much.\n. Yes, I can confirm it runs locally with the maven tomcat plugin. I've updated the pom.xml in my sample accordingly.\nAfter running mvn tomcat:run the application is available under the context name \"/swagger-cxf\" (based on artifactId).\nI can successfully access the following URLs:\n```\nGET http://localhost:8080/swagger-cxf/api                       => CXF Servlet Endpoint\nGET http://localhost:8080/swagger-cxf/api/v1.0?_wadl            => autogenerated WADL for CXF service /v1.0\nGET http://localhost:8080/swagger-cxf/api/v1.0/user.json/user1  => example request for user resource\nGET http://localhost:8080/swagger-cxf/api/v1.0/api-docs.json    => returns the mentioned exception\n```\n. Hi,\nif I look at the CXF documentation it seems injecting an javax.ws.rs.core.Application is currently not supported:\nhttp://cxf.apache.org/docs/jax-rs-basics.html#JAX-RSBasics-Contextannotations\njavax.servlet.ServletConfig should work though.\nI'll ask on the CXF mailing list if they know how to achieve this.\nThanks for looking into this,\nRaphael\n. I'll check if there is another way how to get these information.\nFor reference here is the posting to the CXF mailing list: http://mail-archives.apache.org/mod_mbox/cxf-users/201302.mbox/%3C20130228054709.Horde.bzNkFklCcOxRLuFNKsDXbqA%40webmail.df.eu%3E\n. Short update from my side: I wrote a basic Application that is injected into the CXF Service class and detects the ressources by annotation scanning, as suggested by @chadhahn.\nIt's kind of a hack but works for me.\nYou can find it in my sample application https://github.com/rvullriede/swagger-core/tree/master/samples/swagger-java-sample-app-cxf\n. Feel free to use my repository for the official samples and thanks for the great product!\n. ",
    "krasa": "Nice job, it works!\n. ",
    "JayachandraReddy": "Hi All,\nAm trying to integrate swagger with Apache CXF with out spring and maven, can anyone help me out in this.\nWaiting for your reply.\nThanks in advance.\n. ",
    "arindambiswas": "Would love if this got implemented along with the sample apps for java and scala.\n. It does look as if its working without the AuthorizationFilter, but there are some problems. Starting the sample app gives me errors like the following : \n[error] application - Cannot determine Path. Nothing defined in play routes file for api method public static play.mvc.Result controllers.StoreApiController.placeOrder()\n[error] application - Could not find route controllers.StoreApiController$.placeOrder\n[error] application - Cannot determine Path. Nothing defined in play routes file for api method public static play.mvc.Result controllers.StoreApiController.getOrderById(java.lang.String)\nHave done the following :\n1. swtiched to branch 'scala_2.10.0'\n2. Erased the IVY cache, both the local and cache directories\n3. Executed publish-local in modules/swagger-play2 and modules/swagger-play2-utils\n4. Performed play clean, play clean-all and play run.\nI still get the errors. And swagger-ui doesn't function since the end-points are incorrect. \nI might add that I am trying out the java-play2 sample.\n. ",
    "jpoittevin": "+1\n. \"Managed Controller classes instantiation\" syntax (routes starting with '@' character) introduced in 2.1 does not seem to be supported.\nhttps://github.com/playframework/Play20/blob/master/documentation/manual/Highlights.md#managed-controller-classes-instantiation\n. ",
    "rfranco": "it was fixed https://github.com/wordnik/swagger-core/pull/99\n. Fixing problem with route when use @\nNow will support controller as Object or Class\nand route could be with @\n. ",
    "cchacin": "This is referent to issue #82\n. This is referent to issue #82\n. I can inject context in this way:\n``` java\nprivate ServletContext servletContext;\npublic ServletContext getServletContext() {\n    return this.servletContext;\n}\n@Context\npublic void setServletContext(final ServletContext servletContext) {\n    this.servletContext = servletContext;\n}\n```\n. I can inject context in this way:\n``` java\nprivate ServletContext servletContext;\npublic ServletContext getServletContext() {\n    return this.servletContext;\n}\n@Context\npublic void setServletContext(final ServletContext servletContext) {\n    this.servletContext = servletContext;\n}\n```\n. And to scan certain packages or classes add WEB-INF/scan.xml:\nxml\n<scan> \n  <packages> \n    <package>p1.p11</package> \n    <package>p2.p22</package> \n  </package> \n  <classes> \n    <class>p.a.MyClass</class> \n    <class>p.b.MyClass2</class> \n  </classes> \n</scan>\n. And to scan certain packages or classes add WEB-INF/scan.xml:\nxml\n<scan> \n  <packages> \n    <package>p1.p11</package> \n    <package>p2.p22</package> \n  </package> \n  <classes> \n    <class>p.a.MyClass</class> \n    <class>p.b.MyClass2</class> \n  </classes> \n</scan>\n. ",
    "anand4sn": "Hi All,\nI'm not able to enable swagger ui  with /* mapping in CXFservlet mapping. otherwise its woring good.\nNOT WORKING - I WANT TO map the CXFServlet below.\n            \nCXFServiceServlet\n/*\n\nWORKING\n<servlet-mapping>\n<servlet-name>CXFServiceServlet</servlet-name>\n<url-pattern>/api/*</url-pattern>\n\nCould you please anyone help on this.last two day im trying different ways  but not able to fix. Thanks in Adavce.\n. Hi \nI need to generate date format (\"format\": \"date\") in swagger json doc for GET parameters. Im using spring rest @RequestParam with @ApiParam() but in @ApiParma we dont have property like dataType then how can i generate format property in json doc .   (\"format\": \"date\").if  someone help on this it will be great help to me. Thanks in advance.\n. ",
    "pragmasoft-ua": "Don't forget PATCH method which is used for example in OpenStack API\n. Don't forget PATCH method which is used for example in OpenStack API\n. ",
    "sgri": "Class com.wordnik.swagger.jaxrs.JaxrsApiReader\n....\noverride def getPath(method: Method): String = {\n    val wsPath = method.getAnnotation(classOf[javax.ws.rs.Path])\n    val path = apiEndpoint.value + JaxrsApiReader.FORMAT_STRING + (if (wsPath == null) \"\" else wsPath.value)\n    path\n  }\n\nLooks like the error is in the method above. The method builds URI for a service, it concatenates @Api and @Path,\nit is definitely an error, because resource URI is supposed to be taken from  jax-rs @Path \n. Hi @fehguy, even if both @Api and @Path are the same nested path, it doesn't work. \n. Still doesn't work,  I created another issue https://github.com/wordnik/swagger-core/issues/95 \n. I was wrong, Jersey 1.16 doesn't respect inherited from interface annotation as well, closing issue.\n. @fehguy \nThank you very much for your support, now it works.\n. Is there anybody out there ?\n. I think you misunderstood what I am trying to accomplish. First of all,  I didn't add  Jersey dependency to swagger-core, if you look at the root pom.xml file, the change is in dependencyManagement section, not dependency. The dependency is not resolved  by Maven until it appears somewhere in dependency section.\nThe example web application does depend on Jersey, look at its web.xml. The problem is that the example doesn't work at all without dependencies I have added. It is frustrating when a sample application doesn't work in Tomcat which is the most popular web server.\n. Thank you !\n. ",
    "whaley": "I think I'm experiencing this same problem.\nCurrently if my resource class looks like this:\n``` java\n@Path(\"api/connections\")\n@Api(value = \"/connections\", description = \"A Connection is an abstraction that provides a top level \" +\n        \"description of how Nodeable will connect to external providers on behalf of users.\"\n        )\npublic class ConnectionResource extends AbstractOwnableResource {\n@GET\n@Path(\"/types\")\n@ApiOperation(value = \"Returns all connection provider types available.\",\n        notes = \"A connector provider type is a top level type for distinguishing what the type of a connection \" +\n                \"(e.g. cloud, projecthosting). Every connection has a type.\",\n        responseClass = \"java.lang.String\")\npublic Response getProviderTypes() { /*stuff*/}\n\n```\nThen hitting the endpoints for swagger results in the following\n```\n% curl http://localhost:8080/api-docs | python -mjson.tool\n{\n    \"apis\": [\n        {\n            \"description\": \"\", \n            \"path\": \"/api-docs/connections\"\n        }\n    ], \n    \"swaggerVersion\": \"1.1\"\n}\n% curl http://localhost:8080/api-docs/connections | python -mjson.tool\n{\n    \"apis\": [\n        {\n            \"description\": \"A Connection is an abstraction that provides a top level description of how Nodeable will connect to external providers on behalf of users.\", \n            \"operations\": [\n                {\n                    \"deprecated\": null, \n                    \"httpMethod\": \"GET\", \n                    \"nickname\": \"getProviderTypes\", \n                    \"notes\": \"A connector provider type is a top level type for distinguishing what the type of a connection (e.g. cloud, projecthosting). Every connection has a type.\", \n                    \"responseClass\": \"string\", \n                    \"summary\": \"Returns all connection provider types available.\"\n                }\n            ], \n            \"path\": \"/connections/types\"\n        }\n    ], \n    \"resourcePath\": \"/connections\", \n    \"swaggerVersion\": \"1.1\"\n}\n```\nThis is great for getting swagger-ui to work with the annottations but as soon as I hit the \"Try it Out\" button for /connections/types to sample it, it tries to GET on http://localhost:8080/connections/types, which is incorrect (the real url is http://localhost:8080/api/connections/types)\nIn attempts to change it, I've tried making ConnectionResource have the following @Api annotation:\njava\n@Path(\"api/connections\")\n@Api(value = \"/api/connections\", description = \"A Connection is an abstraction that provides a top level \" +\n        \"description of how Nodeable will connect to external providers on behalf of users.\"\n        )\nHowever this results in what appears to be a correct call to the /api-docs endpoint, but following the path to where the connections resource docs get generated fails\n```\n% curl http://localhost:8080/api-docs | python -mjson.tool \n{\n    \"apis\": [\n        {\n            \"description\": \"\", \n            \"path\": \"/api-docs/api/connections\"\n        }\n    ], \n    \"swaggerVersion\": \"1.1\"\n}\n% curl http://localhost:8080/api-docs/api/connections\n\n\n\nError 404 Not Found\n\nHTTP ERROR 404\nProblem accessing /api-docs/api/connections. Reason:\n Powered by Jetty://\n\n\n```\n. Confirmed as fixed on my side:\njava\n@Path(\"api/connections\")\n@Api(value = \"/api/connections\"\nUsing the same value for @Path and @Api now works\n. ",
    "PabloEzequiel": "I have the same problem... did you find the the solution?\n. I have the same problem... did you find the the solution?\n. ",
    "zxchris": "We've hit this requirement recently. For example, where we're returning a \"201 Created\" responses, we need to document in the specification that we will return a Location and ETag header as response meta-data.\nWe have a documentation generator (soon to be github'ed) that takes a swagger specification, HTML templates and additional content, and produces a rich browsable documentation set (like Google's v3 API docs).\nSo we've temporarily created a \"responseHeaders\" block, based on the \"parameters\" block:\njavascript\n\"responseHeaders\" : [\n    {\n        \"name\" : \"Location\",\n        \"description\" : \"The full URI of the created resource\",\n        \"required\" : true,\n        \"value\" : \"URI\"\n    },\n    {\n    etc\n    }\n]\nEdit: \"dataType\" should have been \"value\".\nWe didn't feel this fit in the models section, particularly as our above example API has a \"void\" responseClass.\nfehguy: Can you share your thoughts on how you'll probably declare response headers in the specification, just in case we're miles away?\nCheers\n. Thanks fehguy. Been really busy to look at this and reply properly.\nThe 1.2 changes allowing a different response model for different status codes (and the rename of errorResponses to response responseMessage) make things a lot easier.\nI'll have a look at adding to the message field of the responseMessage in the short term, however, being more explicit and declaring what response headers will be returned, as per this issue, is far clearer and desirable.\nI'm off now to upgrade our documentation generator to be spec 1.2 compliant!\n. ",
    "akkie": "@fehguy Yes I'm running Java 7. Is this incompatible?\n. ",
    "agarbutt": "@fehguy i see the last time this issue was updated was about a month ago. Is there a chance that this has been resolved and not marked as so? \n. ",
    "dfeist": "Related discussion here: https://groups.google.com/forum/#!topic/swagger-swaggersocket/Xd5cWuTusVs\nIn summary, initially I was proposing a mediaType based approach for obtaining swagger metadata from resource uri's rather than needing to expose metadata via different (inconsistent uri's).  But after reviewing this issue, and taking a closer look at the HTTP Spec, I believe this is the way to go (using OPTIONS).\nIn my mind the body should be returning the swagger meta-data (ideally with a custom media-type, even if Accept header is vanilla json).  This approach can be used consistently for both baseUri (resource listing) and for specific resources).  To retrieve resource listing my interpretation is that the best approach is the use of OPTIONS on the baseUri \"/\" or \"/api\" or whatever it is, not \"OPTIONS *\" which is a server-level command.  It maybe that I'm exposing multiple api's on the same server http://www.shop.com/providerAPI, http://www.shop.com/customerAPI.\nThe only challenge in implementing this new approach is the need to update client support; both UI and code generators need to be able to:\ni) discover resource listing from a baseUri (using OPTIONS {baseUri} rather than GET  {baseUri}/resources.json\nii) obtain api declaration using resource uri in resource listing via OPTIONS method.\n(and work out a way to fallback to current approach)\n\nAnother somewhat related issue is that of nested resources.  Given the following resources\n{baseUri}/a/\n{baseUri}/a/b/\n{baseUri}/a/b/c/\n{baseUri}/z/\n- OPTIONS requests for all of these uri's should result in a api declaration document being returned as body.\n- OPTIONS request for {baseUri}/a currently returns api declaration that documents this resource and all nested resources.  Ideally meta-data for {baseUri}/a links to metadata of nested resources rather than nesting everything in the same json.\n. It is important, and very valuable, for ReST resources to be self-describing.  In order to do this either the resource needs to reference it's metadata (via a header maybe), OR the metadata needs to be accessible via a standard or documented mechanism (http method, header, mediaType or separate uri).\nURI\nThe use of a separate uri/path is not only not ReSTful because you are defining a new resource to document a resource, but unpractical due to possible conflicts etc.  Also because a different uri is needed it relies on a standard being defined and documented as to where to find this metadata.  Swagger hasn't defined this because it's not practical to as Tony said \"The reason there isn't a standard location is because it's hard to claim the path of resources.json or api-docs.json\"\nHeader/MediaType\nA special header could be used (X-Resource-MetaData) to request metadata or a metadata specific representation (application/swagger+json) requested.  The issue with this approach is that you are using 'GET' and therefore should really be returning a resource representation and not hijacking it for something else.  Also this approach can cause problems with things like API throttling because otherwise you'd need to throttle GET requests based on a header, not nice!\nOPTIONS method\nThis is the approach envisioned within the http spec where the OPTIONS method is used to obtain information about a resource without implying a resource action (this helps with things like throttling).  This approach while isn't widely adopted is generally accepted as the correct way to expose resource metadata.  I understand that CORS also uses OPTIONS, but I don't see that this conflicts in any way.  Both the CORS headers returned and the resource metadata describes the resource.  Optimisations can easily be made to not return the response body if it is clear from the \"Origen\" request header that it is a CORS pre-flight request.\n. ",
    "pose": "I don't think using OPTIONS is a wise idea. If using CORS for the preflight request, that request body will return the Swagger resource description? Wouldn't that make the implementation of CORS capabilities in a swagger enabled rest API problematic? \n. ",
    "glennblock": "One way to address this could be to use profiles (http://tools.ietf.org/html/rfc6906). You can return a Link header with a profile link relation type OR if you have a custom media type bake in profile as part of the definition. The href of the profile can then point to a document of any format really for describing the format. It's not violating any REST constraints as profile is discoverable.\n. @rgarcia for Options the spec states that \"*\" is only useful for a ping or no-op method.\n\"Since a server's communication options typically depend on the resource, the \"*\" request is only useful as a \"ping\" or \"no-op\" type of method;\"\nSeems like a stretch to use it for high level server-level metadata and not something expected.\n. I would vote much more toward embedding links in a response rather than requiring a user to know they do an Options. It's much more explicit and IMO in the spirit of hypermedia.\n. ",
    "boxfish": "@rfranco @fehguy Similar thing needs to be done in PlayApiReader.scala.\nline 101:\nfullMethod.substring(0, idx) + \"$.\" + fullMethod.substring(idx+1)\nshould be:\n(fullMethod.substring(0, idx) + \"$.\" + fullMethod.substring(idx+1)).replace(\"@\", \"\")\nOtherwise, getPath() and processOperation() in PlayApiSpecParser class will give errors.\n. ",
    "JoshP": "Any plans to use mdekmetzian's implemetation?\n. ",
    "konrade": "+1 to get in!\n. ",
    "iesen": "+1..really blocker to add our prod toolset\n. ",
    "lisbakke": "Hello -- Just here to +1 this, as well. My team will have to use this patched swagger in a local maven repository until this is merged.\nThanks!\n. Also, what kind of sample are you looking for?\n. Our use case is the same as what @mdekmetzian described (and has some pseudocode for).\nWe have resources such as:\nCustomersResource.java\nCustomerResource.java\nOrdersResource.java\nOrderResource.java\nThis would be a valid request:\n/customers/{id}/orders\nCustomersResource would handle /customers/{id} and return a CustomerResource for that customer. CustomerResource would handle /orders and return OrdersResource. OrdersResource would get the orders for that customer.\nIs code needed to clarify why or how this is done?\n. Thanks, Tony.\n. OK. So @ApiModel will be removed?\nThanks, Tony.\n. That was really fast. Thanks a lot.\n. Hey Tony --\nI'm updating to the new version and see that multiValueResponse was taken\nout in\nhttps://github.com/wordnik/swagger-core/commit/b93bc71c3f3bc65daaa0e53ff01a3b279f3445b0.\nWhat is it replaced with?\nThanks,\nBen\nOn Fri, Jun 14, 2013 at 2:00 PM, Tony Tam notifications@github.com wrote:\n\nok also done renaming annotations in 1.3.0-SNAPSHOT\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/215#issuecomment-19478424\n.\n. Great, thanks.\n\nOn Fri, Jun 14, 2013 at 2:44 PM, Tony Tam notifications@github.com wrote:\n\nyes, it's not needed anymore. To describe this:\nList[User]\nyou use this:\nresponse = User.class,\nresponseContainer = \"List\"\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/215#issuecomment-19480617\n.\n. \n",
    "jmarreroc": "Hello! \nI'm trying to adjust my resources hierarchy (who describes a tree morphology) as related on Subresource locators support for jax-rs 1.1 (as mdekmetzian mentioned) :\nhttp://jsr311.java.net/nonav/releases/1.1/spec/spec3.html#x3-310003.4.1\nSo, i have a Resource:\n``` javascript\n@Path(\"resource\")\n@Produces(\"application/json\")\n@Api(value=\"resource\")\npublic class Resource {\n@GET\n@ApiOperation( ... )\npublic Resource get() {\n    return this;\n}\n\n@Path(\"/{subresource}\")\npublic SubResource get(@PathParam(\"subresource\") String subresource) {      \n    return new SubResource(subresource);        \n}\n\n}\n```\nAnd a set of subresources describing a tree form (as showns this simple example), with no '@Path' class annotation defined as mentioned in http://jsr311.java.net/nonav/releases/1.1/spec/spec3.html#x3-310003.4.1 subresource specification (specifically in the WidgetResource definition):\n``` javascript\n@Produces(\"application/json\")\n//@Api <-- tried but doesn't work\npublic class SubResource {\n@GET\n@ApiOperation( ... ) //???\npublic SubResource get() {\n    return this;\n}\n\n@Path(\"/items\")\npublic OtherResource items(...) {       \n    return new OtherResource(...);      \n}\n\n}\n```\nI read all posts and see the examples attached but... finally i can say that i didn't understand how to document my resource hierarchy with swagger, (or if it's now supported) and nobody talks at this respect. All I see in the example provided (https://github.com/mdekmetzian/subresource_example) is that both resources '/pet' and '/owner' have their own @Path definition, so both are considered as resorurces who hang from root '/' and that isn't my scenario. So if I annotate all my resource classes whith @Path, i loose the resource exploration support dinamically provided by Jax-rs. What i'm doing wrong?! I just type directly in the browser the URIS and can navigate perfectly all resources hierarchy but cannot provide correctly the documentation to swagger.\nThank you for your time!\n. Also tried to include the @ApiOperation as mentioned fehguy over the subresource construction method but finally I get in the UI : \"SwaggerOperation \" + nickname + \" is missing method\"\n``` javascript\n@Path(\"resource\")\n@Produces(\"application/json\")\n@Api(value=\"resource\")\npublic class Resource {\n@GET\n@ApiOperation( ... )\npublic Resource get() {\n    return this;\n}\n\n@ApiOperation( ... )\n@Path(\"/{subresource}\")\npublic SubResource get(@PathParam(\"subresource\") String subresource) {      \n    return new SubResource(subresource);        \n}\n\n}\n```\n``` javascript\n@Produces(\"application/json\")\n@Api(value=\"subresource\") // tried but doesn't work\npublic class SubResource {\n@GET\n@ApiOperation( ... ) //???\npublic SubResource get() {\n    return this;\n}\n\n@Path(\"/items\")\npublic OtherResource items(...) {       \n    return new OtherResource(...);      \n}\n\n}\n```\nI'm using Swagger 2.11 : (bundle version 1.3.10)\n. Oh! Sure I will do. Let me try it, but i need to configure it properly because i'm using an OSGi-Swagger connector and maybe in the locally building of the p2 repository some version could be deprecated as you suggest.\nThanks!\n. Hi again,\nI'm facing some issues related with an OSGi environment + Swagger. So I'm using an existing swagger OSGi connector who uses a maven p2 plugin who delegates in tycho plugin for finally generate the OSGi bundles. There is a problem when the maven artifact version does'nt adjust completly with the bundles version convention (tycho report). In this case... I'm using the 1.5.2-M1 core swagger version, and getting: invalid version \"1.5.2-M1\": non-numeric \"2-M1\" I'm still researching all the tycho plugin contents for any way to configure the version mapping during the bundle construction, but: is there any other previous version wich implements support for Subresource Locators?\nThank you very much!\n. Alright! follow discusion on #942 \n. I feel that the first @ApiOperation :\n@Path(\"/somePath\")\n@ApiOperation(value = \"Returns Some service\", response = SomeResource.class)\npublic SomeResource getSomeService() {\n   return this.someService;\n}\nMaybe could be removed as you defined the @ApiOperation on the GET of the scanned @Path(\"/somePath\") resource, which define:\n@GET\n@Path(\"\")\n@CacheControl(maxAge = 3, maxAgeUnit = TimeUnit.SECONDS)\n@ApiOperation(value = \"get tenants\", notes = \"Sort Order Values can be 'ASC' or 'DESC'\", response = String.class)\npublic Response getStuff(@ApiParam(value = DATASOURCE_HEADER, required = true) { ... }\nSo... In this case, what documentation would shown? \"Returns Some service\", \"get tenants\" or both...\nI think that its the same path with two documentation definitions\n. Ok, so finally swagger shown only the documentation defined over the HTTP method. Thx!\n. ",
    "timidri": "I tried 1.1.5 and even 1.1.4. Although the model is not shown, the index page is still not rendered...\n. ",
    "istvano": "Hi,\nDid you manage to find the solution for this ? I am having the same problem and no matter what I tried it just keeps showing the ebean_intercept field everywhere.\nThanks a lot\n. Nothing at the moment. I tried filters, all kind of things and that entitybeen just keeps showing up.\nps: I am thinking about patching the JS ( swagger to support ignore elements )\n. ",
    "pavei": "Any solution?\n. ",
    "lcamilo15": "This is answered in the following http://stackoverflow.com/questions/24458575/swagger-is-showing-ebean-intercept-with-everymodel-in-my-play-application\nAdd the following class as explained in the following link swagger ebean\n```\nimport com.wordnik.swagger.converter.SwaggerSchemaConverter\nclass IgnoreConverter extends SwaggerSchemaConverter{\n  override def skippedClasses: Set[String] = Set(\"com.avaje.ebean.bean.EntityBeanIntercept\")\n  override def ignoredClasses: Set[String] = Set(\"com.avaje.ebean.bean.EntityBeanIntercept\")\n  override def ignoredPackages: Set[String] = Set(\"com.avaje.ebean\")\n}\n```\nYou can now follow the step explained by Luis, \npublic class Global  extends GlobalSettings {\n    @Override\n    public void beforeStart(Application app) {\n        Logger.info(\"Registering custom converter\");\n        ModelConverters.addConverter(new IgnoreConverter(), true);\n    }\n}\n. ",
    "perfetto": "I'm trying to use the latest swagger-ui with some form fields but am still not seeing them show up in the body. \nmy class annotations are below\n```\n[Route(\"/Networks/{Id}\", Summary = \"Networks Resource\", Notes = \"\", Verbs = \"Get,Put,Delete\")]\n[Route(\"/Networks\", Summary = \"Networks Resource\", Notes = \"\", Verbs = \"POST\")]\npublic class NetworkDto\n{\npublic NetworkDto()\n{\n}\n\n[ApiMember(Name = \"Id\", Description = \"\", ParameterType = \"path\", DataType = \"string\", IsRequired = true, Verb = \"Get\")]\n[ApiMember(Name = \"Id\", Description = \"\", ParameterType = \"path\", DataType = \"string\", IsRequired = true, Verb = \"Put\")]\n[ApiMember(Name = \"Id\", Description = \"\", ParameterType = \"path\", DataType = \"string\", IsRequired = true, Verb = \"Delete\")]\npublic Guid Id { get; set; }\n\n[ApiMember(Name = \"Name\", Description = \"\", ParameterType = \"form\", DataType = \"string\", IsRequired = false, Verb = \"Post\")]\n[ApiMember(Name = \"Name\", Description = \"\", ParameterType = \"form\", DataType = \"string\", IsRequired = false, Verb = \"Put\")]\npublic string Name { get; set; }\n\n[ApiMember(Name = \"OwnerId\", Description = \"The OwnerId field is a string GUID\", ParameterType = \"form\", DataType = \"string\", IsRequired = true, Verb = \"Post\")]\n[ApiMember(Name = \"OwnerId\", Description = \"The OwnerId field is a string GUID\", ParameterType = \"form\", DataType = \"string\", IsRequired = true, Verb = \"Put\")]\npublic Guid OwnerId { get; set; }\n\n```\n}\nWhen I get into the OperationView.prototype.submitOperation method in the swagger-ui.js file I still don't see path variables being added to the data. Am I missing something or defining my fields incorrectly?\n. the json metadata is\nPOST /json/reply/NetworkDto HTTP/1.1 \nHost: localhost \nContent-Type: application/json\nContent-Length: length\n{\"id\":\"00000000000000000000000000000000\",\"name\":\"String\",\"ownerId\":\"00000000000000000000000000000000\",\"members\"}\n. ",
    "ogg": "Thanks for addressing this so quickly, this seems to have fixed the problem!\n. ",
    "quasipedia": "@Reggino - JSON-schema (look at section 5.4.4.4) support regexes already, so my understanding is that you can achieve what you want by creating an ad-hoc model for the parameter in question... or am I missing your point?\n. :+1:  from me.  GitHub is our friend in this regards, as they recently introduced the rendered prose functionality, that would help a lot in keeping track of changes in the specification.\n. @fehguy - Sure, but I can't see a repo with an evocative name for the user \"wordnik\"... Where should we look at? :)\n. For those interested, I filed my feedback in form of issues in the repo of the specifications.  Unluckily an issue is not the best form to express appreciation, so let me do that here instead: it looks like the upcoming specifications are a big, nice step forward compared with what is available right now!\nWell done swagger team! :)\n. @fehguy @webron - No problem!  I'm a strong believer in free/open standards, so I'm only happy if I can share ideas (hopefully sometimes useful!) that will ultimately contribute to make swagger better \u2192 swagger more adopted \u2192 the API world more standardised \u2192 the world a better place! :)\nKeep up the excellent job!\n. @rage-shadowman - I'm not sure I understand why you don't see the usefulness for a required property to be set to null.  Having a property unset and having it set to null are not the same thing.\nAn example of why this could be useful: if you are loading a JSON object into a python dictionary (the standard conversion for the json module in the core library) you will obtain very different behaviours for the two cases:\n```\n\n\n\no = '{\"foo\": 42, \"bar\": null}'\nprint(loads(o)['bar'])\nNone\no = '{\"foo\": 42}'\nprint(loads(o)['bar'])\nTraceback (most recent call last):\n  File \"\", line 1, in \nKeyError: 'bar'\n```\n\n\n\n...or did I misunderstood the point you were trying to make?\n. @rage-shadowman \n\nessentially the same is not exactly the same\n\nWell, there you have it above.  Having a property set to null is not the same as not having a property altogether.  It seems to me that you are implicitly using the mental model of a relational DB (in which you cannot have records in a table that simply \"miss a column\").\nHowever this is an artificial constraint that should not be imposed onto an API specification.\nThe most obvious user case for which assuming a non-existent property is equal to null is plain wrong is when you are using duck typing or any other introspective technique relying on the behaviour/structure of data to infer business logic.\nA silly example: you might have a class Worker that subclasses to Translator adding Translator.books.  Now, if you are transferring data without metadata associated to it, you need the books attribute to distinguish  between the two models: a translator must have a books property even if she/he has only translated business documents (in which case it will be set to null.\nAs I said, the example above it a little silly, but especially when you have no control over the source of the data (as in the OP case, where (s)he uses a legacy DB), duck typing is a very useful technique.\nThe definitive reason not to go with the assumption you suggested is however not the user caes, but the fact the two are simply not just the same thing in terms of formal logic (and thus implementation in many languages).\n. Hi @webron, thank you for the quick reply.  Good to know that we are on the same page! :)\nAs for problem number 2, I still think that either the specifications or the example Pet API should be changed as in my understanding they are inconsistent.  Let me try to clarify by using the official material:\n{\n    \"code\": 200,\n    \"message\": \"Ok\",\n    \"responseModel\": \"Pet\"\n  },\nWhen querying the endpoint, the user will receive back a JSON object modelled after the model Pet \u2192 The message is informational in nature and is not part of the payload.\n{\n    \"code\": 404,\n    \"message\": \"The pet cannot be found\"\n  }\nFollowing the logic of the previous responseMessage, this second code, when triggered, should return an empty body.  In other words, the above should be equivalent to:\n{\n    \"code\": 404,\n    \"message\": \"The pet cannot be found\",\n    \"responseModel\": \"void\"\n  }\nHowever the actual response is a JSON object:\n{\n    \"code\": 404,\n    \"message\": \"The pet cannot be found\",\n  }\nWhich in turn, for consistency, should be described in the swagger API description as:\n{\n    \"code\": 404,\n    \"message\": \"The pet cannot be found\",\n    \"responseModel\": \"errorMessage\"  // Or whatever the model should be!\n  }\nSure, one could claim that the actual description without a responseModel is a shorthand for this last one I wrote, yet this is:\n1. counter-intuitive (omitting the explicit declaration of the return type of a function is typically understood as if said function will return null / None / void or another equivalent object.\n2. would still require to add the errorMessage model to the models section of the API description.\nAnyhow: the entire reason why I brought this up is that for me having a consistent way to describe the expected behaviour of the API is important, as this simplify the code that has to parse and process the swagger document (there is no if message has not type do this else do that).  But I acknowledge that changes to a format specification need careful thinking prior to introduction! :)\n. Thank you for joining in, @fehguy.  It seems that we have two different takes on this one.\nIMO, the description you give of the intended behaviour is the \"legacy\" one, when the specification had an errorResponses property, rather than a responseMessages one.  I'm not sure why that change was introduced, but whatever the reason was, it should either be rolled back, either honoured by including all possible response messages there.\nPersonally I am for the latter, for a number of reasons:\n1. Not all non-2xx messages are \"errors\".  There are informational ones and redirection ones, for example, but - most importantly - the interpretation of a code is up for definition in the API: for example, the use of 404 Not Found in the Pet store is not properly an error, but rather the result of an empty query.\n2. A success call may return the same object but different codes.  For example, submitting an item to a DB interface may return back a the hash of the operation with either a 201 Created or 202 Accepted code.\n3. There is no good reason for branching the code for processing 2xx codes or other ones, as the meaning we attribute to a response (my operation succeded, my operation failed, my operation is pending...) is something different than its structure (an HTTP response).\nSo, in relation to the points you raised:\n\nThe Operation has an implied 200 response code associated with the response type.\n\nI disagree, as there are more success codes than just 200 (the whole 2xx family, but also because you might still have an API endpoint that expect as \"correct\" result something else than a 2xx code).\n  For example: imagine an API where you submit shortened URLs to get back the extendend version: I would argue a valid way to implement it would be to return either 307 or 308, depending on whether the shortened URL will be removed from the system later on.\n\nThe ResponseMessages have an optional responseModel if and only if the message is intended for consumption\n\nOn this I would agree, but then the implementation of the API should be changed: a query that triggers 404 should return an empty body, not a repetition of the message  (in other words: not specifying the responseModel is like saying it is null).\n   Leaving the behaviour of the body undefined would be likely a source of major troubles.\n\nHaving a responseMessage with code 200 is redundant and would be bad practice.\n\nWe agree on the fact that presently there are redundancy, but the redundant bit IMO is the type property on the operation, which requires an extra branch in the code to be parsed, while it could be simply moved to the responseMessages, and makes the assumption that a valid response has a code 200.\nIndeed, I would suggest that in the next revision of the specifications you would rename responseMessages to responses.  In fact is kind of illogical to have under a responseMessage also a code and a responseModel.  What you are really doing is describing the three components of a response: it's code, it's meaning (informational, not for consumption) and it's body.\nHope this clarifies!  And BTW: I think the whole swagger initiative is very laudable, and this section of the specification is the only one that I find lacking in clarity and breadth of scope.  All the rest was pretty neat to implement! :)\n. Just curious: what is the rationale behind this?\nI implemented something similar in my own code since I did not want the api-docs.json to show up as part of the swagger description itself.  However I wonder what the more general user case that make this \"badly needed\" is...\n[ Full disclosure: I'm a fervent opposer to \"Security through obscurity\"... ] :)\n. ",
    "sibblegp": "Indeed.  This is very important for structure.\n. I'm actually not having this issue.  It does appear to respect the order of APIs and such presented.\n. ",
    "shawnlauzon": "+1 Really annoying that there isn't any order to this.\n. I just grabbed master; with my classes annotated with JAX-RS, the order of operations is somewhat random. However, it doesn't change when the page is reloaded.\n. Actually they look exactly the same. It's odd: there is some structure since all of the operations with the same path are grouped together, but the order of those groups are not according to any structure I can see.\n. +1\n. Thanks, now I see that I should be using that one. It seems to be working well, so I'll close this pull request.\n. BTW, I had this same problem and didn't have a web.xml. Sorry, but can't duplicate it easily, but if given some time I could probably duplicate it.\n. That's where they all are. I had a previous pull request that was in swagger-jaxrs; this one moves them to swagger-jersey-jaxrs.\n. Do you need more tests from me, or is that something you're planning on?\n. Hi @fehguy, Yes Help.scala contains the ConfigReaderFactory, which is used in ApiListing. ConfigReaderFactory needs to take a WebConfig instead of a ServletConfig.\nHowever, I don't need all of Help.scala; just the ConfigReaderFactory. I can create a new class com.wordnik.swagger.jersey.ConfigReaderFactory that just contains the ConfigReaderFactory part of Help.scala. Or I can put the entire ConfigReaderFactory object into ApiListing. I don't know what is better Scala, please advise.\n. Sounds good.\n. Great; I'll pull and try it out shortly.\n. Great! When do you expect it to be ready?\n. Wow, you read my mind :)\n. I haven't looked at it in detail, but it definitely looks like it's working! I'm going to grab some dinner, and will look through in detail and ensure everything looks good. Thanks!\n. Looks good to me, thanks again.\n. I've investigated this some more, and it looks like the two fields conflict: Swagger treats fields and methods both the same and doesn't read the @JsonAutoDetect annotation. In fact, the public field overrides the private field, which I suppose makes sense.\nSo one way of resolving this is to use the @XmlAccessType annotation, and I would set @XmlAccessType(value=XmlAccessType.FIELD), which would then turn off the getter/setter fields by default.\nAlternatively, we could support the @JsonAutoDetect property and if it's set as above I could ignore the appropriate fields.\nI haven't used this stuff as much as you, and there seems to be some conflict between the two. Do you have a preference of which way to go? I can get a Pull request up to you in the next day if either of these seem like a reasonable direction.\n. I'm closing this since it's a bad description of the problem. However I have Pull #152 open which would solve this problem for me.\n. This is a field in a class which is being returned from an operation. I do have a @JsonProperty on it, and the issue is still happening:\n@JsonProperty(INTERACTION_END_TIME)\n@JsonSerialize(using = Rfc3339DateTimeSerializer.class)\n@JsonDeserialize(using = Rfc3339DateTimeDeserializer.class)\n@XmlElement\nprivate DateTime interactionEndTime;\n. oops, the @XmlElement was something I was playing around with -- it doesn't seem to do anything\n. Oh I'm sorry @fehguy, I read your comment wrong. We don't have access to the other class and so can't add @JsonIgnore to the fields.\n. Yep, that would work for me.\n. Thanks I'll check that out in the next couple of days.\n. ",
    "engrun": "+1\nI would also like to see a feature where you configure the ordering/listing in blocks based on the path\nExample, we have two structures \n/internal/../onlyToBeUsedByTheMyCompany\nand\n/external/../openAndPartnerRelatedApis\nSo, here, preferable, I would like to have two listing/blocks, one for all starting with /internal and one for /external\n. Hmm. I now believe that the use of JRebel is causing the random ordering, i.e the ordering changing upon page refreshes.\nHowever, @sibblegp writes \" It does appear to respect the order of APIs and such presented.\"\nWhat exactly is the order of API's listed? What can I expect the ordering to be?\nIs clearly is neither alphabetically, the package/class hierachy, the path defined in @Api nor the order in which the methods are defined in the resource-classes.\n. If you can add a configurable sorting, that would be great!\nI have added some screenshots to illustrate the ordering-problem.\nHere you can see the very first request for the swagger UI\n\nThe listing looks like this\n\nAfter a page refresh in my browser\n\nSo, for me there a two problems\n1) The UI is not ordering properly on the first request and after server restarts. A page refresh seems to fix it\n2) The listing is always sorted in some way (although I can't seem to figure out the logic behind the sorting), and this sorting is always the same\n. In the screenshot, you can see that, under \"/herd\" , the methods are not ordered alphabetically, as \"youngstockdistribution\" is listed before \"taxHerdOverview\"\n\n. It is not closed, it is issue #165 that is closed, so this issue is not fixed\n. Any news on this issue?\n. Ok, I have tried to reproduce and create a testcase be removing everything in my app except for the related classes. However, when doing this, I am no longer able to reproduce the error. So something else in my app must be influencing this. I'm suspecting frameworks that modify or somehow change the behaviour of my code - Spring aop proxies, spring security, ehcache proxies, jpa/cglib. For now I'm suppressing the errors in my log, as the doc/listing seems to work ok\n. I have tested setting an explicit path. \nAnd if I change the apiVersion, that is reflected in the json. So the correct values are injected. \nSetup is\n```\n@Component\npublic class SwaggerConfiguration {\n@Value(\"${swagger.resourcePackage}\")\nprivate String resourcePackage;\n\n@Value(\"${swagger.basePath}\")\nprivate String basePath;\n\n@Value(\"${swagger.apiVersion}\")\nprivate String apiVersion;\n\n@PostConstruct\npublic void init() {\n\n    BeanConfig beanConfig = new BeanConfig();\n    beanConfig.setVersion(apiVersion);\n    beanConfig.setResourcePackage(resourcePackage);\n    beanConfig.setBasePath(basePath);\n    beanConfig.setDescription(\"EK resources\");\n    beanConfig.setTitle(\"EK API\");\n    beanConfig.setScan(true);\n\n    ScannerFactory.setScanner(beanConfig);\n}\n\n}\n```\nThis class is being component scanned by Spring.\nBackground info for this can be found here\nhttp://jakubstas.com/spring-jersey-swagger-configuration/\nThe reason for doing it this way is to set a different basePath for different environments. \nMy JerseyConfig looks like this\n```\npublic class RestConfig extends ResourceConfig {\n/**\n * Register JAX-RS application components.\n */\npublic RestConfig() {\n\n    //resources\n    register(AccountingResource.class);\n    register(ConcentrateReconciliationResource.class);\n    register(FeedingPeriodResource.class);\n    register(FeedStuffResource.class);\n    register(HerdGrowthResource.class);\n    register(RoughageReconciliationResource.class);\n    register(VersionResource.class);\n\n    //filters\n    register(ResponseCacheFilter.class);\n    register(ResponseCorsFilter.class);\n    register(CsrfProtectionFilter.class);\n    register(SecurityFilter.class);\n    register(new HttpMethodOverrideFilter(HttpMethodOverrideFilter.Source.HEADER));\n\n    //other\n    register(JsonFeature.class);\n\n//        //swagger\n        register(com.wordnik.swagger.jersey.listing.ApiListingResource.class);\n//        register(com.wordnik.swagger.jersey.listing.ApiDeclarationProvider.class);\n        register(com.wordnik.swagger.jersey.listing.ApiListingResourceJSON.class);\n//        register(com.wordnik.swagger.jersey.listing.ResourceListingProvider.class);\n        register(com.wordnik.swagger.jersey.listing.JerseyApiDeclarationProvider.class);\n        register(com.wordnik.swagger.jersey.listing.JerseyResourceListingProvider.class);\n}\n\n}\n```\nThe last block is the interesting one\nThat's it. No more config\n. I have removed ScannerFactory.setScanner(beanConfig); . Same as before\n. Commercial. version 7.0.0.19\nWhat's interesting is that to get Jersey to work on WAS7, we have to register each resource, as  packages('my.package.goes.here') does not work. That is, in the ResourceConfig class. \nSo might be a related problem with classloaders?\nThe development team has structured the code like this\n- module1\n- application\n- webapp\n- othermodule\nThe \"application\" module contains all resources classes and config, whereas the \"webapp\" module only contains files under src/main/webapp. \nSo the resourcesclasses are packaged inside a jar in the lib folder when wrapping up the war file\n. No, I'll move the beanconfig, and retest\n. Same result I am afraid. \n. Yes, Jax-RS resources, ResourceConfig and SwaggerConfiguration classes are now in the same module\n. Yes, I'll have a look at it tomorrow!\n. Where can I post the log?\n. Ok, this is my log config (taken from samples)\n<logger additivity=\"false\" name=\"com.wordnik\">\n        <level value=\"DEBUG\"/>\n        <appender-ref ref=\"swaggerLogger\"/>\n    </logger>\n    <logger additivity=\"false\" name=\"org.atmosphere\">\n        <level value=\"DEBUG\"/>\n        <appender-ref ref=\"swaggerLogger\"/>\n    </logger>\nthe only thing logged when running on websphere is this\n\ufeff2015-01-23 09:01:17,249 DEBUG com.wordnik.swagger.jersey.listing.ApiListingCache$ - loading cache\n2015-01-23 09:01:17,296 DEBUG com.wordnik.swagger.jersey.listing.ApiListingCache$ - cache has Set() keys\n2015-01-23 09:01:17,530 DEBUG com.wordnik.swagger.jersey.listing.ApiListingCache$ - cache has Set() keys\n2015-01-23 09:01:17,561 DEBUG com.wordnik.swagger.jersey.listing.ApiListingCache$ - cache has Set() keys\nAnd this is logged in my regular application log\n2015-01-23 09:01:17,264 WARN  org.reflections.Reflections - given scan urls are empty. set urls in the configuration\nwhich is logged before the swagger log statements\nWould it make sense to log org.reflections with level debug? \n. Ok, I have tried hardcoded the settings\nBeanConfig beanConfig = new BeanConfig();\n        beanConfig.setVersion(\"1.0\");\n        beanConfig.setResourcePackage(\"my.package.goes.here);\n        beanConfig.setBasePath(\"https://mywashost/ekapi/rest\");\n        beanConfig.setDescription(\"EK resources\");\n        beanConfig.setTitle(\"EK API\");\n        beanConfig.setScan(true);\nMakes no difference\n. Here is the web.xml https://gist.github.com/engrun/8c2b6f4fcb7a40372112\nThe applicationContext is split into several files, and mixing both javaconfig and xml. \nDo you really want to see it all? They are basically just wiring up beans and component-scanning packages. In addition, aspects, caching and security are configured in spring xmls.\n. Regarding the parameters, this is the json generated\n    {\"apiVersion\":\"1.0\",\"swaggerVersion\":\"1.2\",\"info\":{\"title\":\"EK API\",\"description\":\"EK resources\"}}\nSo the other parameters are definitely being picked up\n. Ok, there is no reference to com.wordnik or swagger in any spring context files. That is: No other config that what's listed above\n. Yes, we have. However, that is an Jersey 1.x application with an older swagger implementation. \n<artifactId>swagger-jaxrs_2.9.1</artifactId>\n            <version>1.2.5</version>\n. We don't have an isolated instance unfortunately. If so, I would have to contact operations to install a new clean instance. I'm afraid that's not doable/is out of scope at the moment. An easier path would probably be to request upgrading to the latest fixpack. I'm not sure what the timeframe for that would be though\n. I've set class loading to PARENT_LAST and modified startup order to ensure my new appliation loads before the existing jersey1 application. Still a problem\n. Found a workaround!\nhttps://code.google.com/p/reflections/issues/detail?id=158\nIt works now!\n. Yes. \nAnd thanks for assisting :)\n. I was a little bit too quick.\nAdding this property breaks the Jersey 1.x application, which now logs the following\ncom.sun.jersey.core.spi.scanning.ScannerException: The URI scheme wsjar of the URI wsjar:file:/E:/Server/WebSphere/AppServer/profiles/AppSrv01/installedApps/APP10061Cell01/QA-reku-api-impl_war.ear/api-impl.war/WEB-INF/lib/api-3.28.0.jar!/no/tine/api/internal is not supported. Package scanning deployment is not supported for such URIs.\nTry using a different deployment mechanism such as explicitly declaring root resource and provider classes using an extension of javax.ws.rs.core.Application\n    at com.sun.jersey.core.spi.scanning.PackageNamesScanner.scan(PackageNamesScanner.java:227)\n    at com.sun.jersey.core.spi.scanning.PackageNamesScanner.scan(PackageNamesScanner.java:141)\n    at com.sun.jersey.api.core.ScanningResourceConfig.init(ScanningResourceConfig.java:80)\n    at com.sun.jersey.api.core.PackagesResourceConfig.init(PackagesResourceConfig.java:104)\n    at com.sun.jersey.api.core.PackagesResourceConfig.<init>(PackagesResourceConfig.java:78)\n    at com.sun.jersey.api.core.PackagesResourceConfig.<init>(PackagesResourceConfig.java:89)\n    at com.sun.jersey.spi.container.servlet.WebComponent.createResourceConfig(WebComponent.java:696)\n    at com.sun.jersey.spi.container.servlet.WebComponent.createResourceConfig(WebComponent.java:674)\nI'll revert the com.ibm.ws.classloader.strictproperty, and check with operations if we can run the app on another instance. \n. The custom property is still a workaround, so I you feel that this issue is not longer a bug, you can of course close the issue again. \n. Yeah I know. We were hoping for the same\n. Apparently there is a setting in WAS8 (and also the Liberty profile) which looks promising.\nuseJarUrls  boolean     false   Whether to use jar: or wsjar: URLs for referencing files in archives\nwhich can be set as a global classloading property\nhttp://www-01.ibm.com/support/knowledgecenter/SSEQTP_8.5.5/com.ibm.websphere.wlp.doc/ae/rwlp_feature_servlet-3.0.html\nThis was introduced in fixpack explicitly mentioning Jersey and Hadoop\nhttp://www-01.ibm.com/support/docview.wss?uid=swg1PM99378\nHopefully others on WAS8 can benefit from this if encountering this problem\n. I'll try it. Do you have the url to the correct snapshot repo? Can't find it at https://repository.sonatype.org or https://oss.sonatype.org/content/repositories/snapshots/\n. I'll clone the repo and build it locally\n. Argh. \n0.10-SNAPSHOT requires java7, Websphere runs on jdk6 only. \nCaused by: java.lang.UnsupportedClassVersionError: JVMCFRE003 bad major version; class=org/reflections/Configuration, offset=6\nI'll have a last look at it on Monday. \n. Hmm there is a reason for target being set to 1.7\n[ERROR] /Users/tine/Development/git-repos/reflections/src/main/java/org/reflections/util/ClasspathHelper.java:[392,49] diamond operator is not supported in -source 1.6\n[ERROR] (use -source 7 or higher to enable diamond operator)\nThere is a profile called jdk1.5 in the pom.xml. However, building with that profile results in the exact same error.\nIt looks like we have to resort to one of two\n1) Deploy the application on an instance with the custom property set, and ensure that it does not break other applications\n2) Install a new instance\nAgain, thanks for assisting\n. Ok, let my know when you have any news. For now we will setup a new WAS instans as a workaround\n. ",
    "Zambiorix": "Why is this closed? What is the solution? How do I influence the sort order?\n. ",
    "filip26": "This is not good solution at all, imagine how hard is to keep the order in case that you have many resources. Each time when you add new one or change path of existing one you have to manually sort it and then manually change the order, again and again, what about to add an option (general configuration option) sortAlphabetically=true|false ?\n. thanks, is it on a plan or not?\n. ",
    "Filirom1": "Moreover in Swagger, the specification supports any complex type as long as it is declared in the models section.\nIn JsonSchema object type could be used to create nested complex types.\nJSON-Schema\n{\n  \"user\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"age\": {\n        \"type\": \"int\"\n      }\n    }\n  }\n}\nJSON\n```\n{\n  \"user\": {\n    \"name\": \"Romain\",\n    \"age\": 27\n  }\n}\n```\n. ",
    "vanthome": "+1 Please note, that the Draft v4 for JSON Schema core has been submitted. \nI would really appreciate if I could re-use existing Schemas with swagger.\n. ",
    "developmentMLPN": "Ok,thanks for the info ...i will be checking this issue...maybe you can update it when thinks happen ...\nThanks again.\n. This sound like a great idea...\n. ",
    "paulduran": "Hi Peter,\nI think i may have submitted the bug request to the wrong github project anyway. My API json description is a hand-coded json file and i'm trying to make sure it works through swagger-ui.\nI'll re-submit my request to the swagger-ui project.\nthanks for your assistance.\n. ",
    "rweng": "+1\n. Sure:\n```\n@Stateless\n@Api(value = \"users\")\n@Consumes(MediaType.APPLICATION_JSON)\n@Produces(MediaType.APPLICATION_JSON)\npublic class UserResource extends GenericResource {\n@GET\n@ApiOperation(value = \"list all users\")\npublic List<User> getUsers() {\n  // ...\n}\n\n}\n```\n. ",
    "marcgibbons": "+1\n. ",
    "antony-a1": "+1\n. ",
    "rage-shadowman": "Thank goodness!\n. If not for all the activity around swagger-ui I would assume this project must be dead since this is still broken 4 months later.\n. I'm just surprised that this issue is still present, even though there was a pull request to fix it 4 months ago.\n. PS - We do appreciate all the work you guys are doing, and I can clearly see a lot of activity and fast responses on the swagger-ui repo, so I know you guys are still working on this stuff. Thank you.\n. I just tested v1.3.2 and Swagger now reports the property name provided by JsonProperty:\nJava\n   @JsonProperty(value = \"specialValue\", required = false)\n   @Nullable\n   public String getValue ()\n   {\n      return m_value;\n   }\nShows the property name to be \"specialValue\" of type \"string\".\nFYI - I'm using com.fasterxml.jackson.annotation.JsonProperty (in case you are using something else).\n. @webron That's funny because when I built the swagger config files manually (as opposed to using swagger-core to generate them as I am doing now) it worked with the following:\nJSON\n            \"daysOfWeek\": {\n               \"type\": \"array\",\n               \"allowableValues\": {\n                  \"valueType\": \"LIST\",\n                  \"values\": [ \"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\", \"FRIDAY\", \"SATURDAY\", \"SUNDAY\" ]\n               }\n            },\ndisplaying in swagger-ui as:\ndaysOfWeek (array) = ['MONDAY' or 'TUESDAY' or 'WEDNESDAY' or 'THURSDAY' or 'FRIDAY' or 'SATURDAY' or 'SUNDAY'],\n. PS - I also tried initializing a BeanConfig instance in the Application constructor (the constructor of the class which extends javax.ws.rs.core.Application and has the javax.ws.rs.Application annotation on it), but that doesn't seem to work any better.\n. That gets me more information in api-docs, but still does not include any resources.\nJSON\n{\n   \"apiVersion\": \"1.0\",\n   \"swaggerVersion\": \"1.2\",\n   \"info\": {\n      \"title\": \"My RESTful API\",\n      \"description\": \"My RESTful resources\"\n   }\n}\nI added whitespace to the results.\n. Our web.xml is empty. All RESTful resources are determined by RESTEasy scanning packages for @Api annotation and the Application is also determined by scanning (not sure if it scans for implentations of Application or for the @ApplicationPath annotation, but our Application is an extremely simple class).\n``` Java\npackage my.restful.service;\nimport javax.ws.rs.ApplicationPath;\nimport javax.ws.rs.core.Application;\n@ApplicationPath( \"/api\" )\npublic class MyRestApplication\n   extends Application\n{\n}\n```\nWe can add a constructor to setup the BeanConfig if that's where it should happen.\n``` Java\nimport my.restful.service.resources.MyResource;\n...\npublic MyRestApplication ()\n   {\n      System.out.println( \"Initializing Swagger BeanConfig\" );\n      BeanConfig beanConfig = new BeanConfig();\n      beanConfig.setVersion( \"1.0\" );\n      beanConfig.setResourcePackage( MyResource.class.getPackage().getName() );\n      beanConfig.setBasePath( \"http://localhost:9080/api\" );\n      beanConfig.setDescription( \"My RESTful resources\" );\n      beanConfig.setTitle( \"My RESTful API\" );\n      beanConfig.setScan( true );\n   }\n```\n. Also, I am using the following dependencies in my pom (in case I'm using the wrong versions):\nXML\n      <dependency>\n         <groupId>com.wordnik</groupId>\n         <artifactId>swagger-annotations</artifactId>\n         <version>1.3.1</version>\n      </dependency>\n      <dependency>\n         <groupId>com.wordnik</groupId>\n         <artifactId>swagger-core_2.10</artifactId>\n         <version>1.3.1</version>\n      </dependency>\n      <dependency>\n         <groupId>com.wordnik</groupId>\n         <artifactId>swagger-jaxrs_2.10</artifactId>\n         <version>1.3.1</version>\n      </dependency>\n. Is that what you were asking for?\nI am able to use this to debug it in JBoss7 (technically EAP 6.1) but the api-docs is missing any references to the resources. By default JBoss7 uses port 8080, but I set mine up to use 9080 to make it play well with Tomcat so the base path might need to change once it is actually being used.\n. awesome, thanks for looking into it\n. I finally tracked this down to an issue in the org.reflections code.\nBeanConfig uses the result of ClasspathHelper.forPackage(resourcePackage) which in JBoss7 returns a URL in the form of \"vfs:/path/to/directory/WEB-INF/classes\". However, Reflections uses Vfs.fromUrl which (in version 0.9.8 -- the version swagger depends on) cannot handle \"vfs:\" URLs.\nI forced my application to depend on v0.9.9-RC1 (which recognizes the \"jboss_vfs\" URL type) and all is happy now.\nXML\n         <dependency>\n            <groupId>org.reflections</groupId>\n            <artifactId>reflections</artifactId>\n            <version>0.9.9-RC1</version>\n         </dependency>\n. I ran it through IntelliJ IDEA.\nHowever, you should also be able to just copy the target/exploded/jboss7-empty-web-xml_2.10-ear.ear directory into the jboss7 standalone/deployments directory and create a file called jboss7-empty-web-xml_2.10-ear.dodeploy (also inside standalone/deployments) to start it up.\n. PS - I found what was causing my problem. The 0.9.8 version of reflections library that swagger depends on can't handle the URL JBoss7 returns for the classpath of a class in a WAR's WEB-INF/classes directory (\"vfs:/...\"), but they added some more URL type handlers in 0.9.9-RC1 which fix the issue. So if you force a dependency on org.reflections:reflections:0.9.9-RC1 it will work. So rather than return an empty list of classes, the Scanner now finds all of my Api annotated resources.\n. Maybe this should be more generic: Document some use-cases of ApiModelProperty in the Wiki?\nThis documentation should probably go into the \"Overriding Models\" tutorial on the wiki.\n. PS - This converting of java.util.Date to a long by use of date.getTime() is default behavior for RESTEasy JSON conversion.\n. Awesome, thank you!\n. There is a hideous set of tools in the scala.collection.JavaConverters class. They can be used, but they are a major PITA to work with. If you look on stackoverflow, there are a lot of examples of how to turn java collection classes into scala equivalents. The scala.collection.JavaConversions class is much nicer to work with but unfortunately it only generates mutable objects.\n. Here is an example for java.util.Set to scala.collection.immutable.Set that isn't too much of a PITA:\njava.util.Set<String> javaUtilOverrides = new HashSet<String>(\n    Arrays.asList( new String[] {\n      \"java.lang\",\n      \"groovy.lang\",\n      \"java.util\"\n   } ) );\nscala.collection.immutable.Set<String> scalaIgnoredPackageOverrides = JavaConverters\n    .asScalaSetConverter( javaUtilOverrides )\n    .asScala()\n    .toSet();\n. Should this be moved to swagger-spec? Maybe to add a \"name\" attribute to the API model?\n. Well, wadya know, it works. Apparently my issue was that it wasn't working with the \" \" (space character) in the \"value\" attribute. I suppose I could camelCase it instead.\nThanks @webron \n. As far as a suggested feature, I guess allowing value to handle space characters would be good (maybe even slashes -- right now it throws everything up to the last slash away).\nBut I also think the API definition should rename the \"resourcePath\" attribute to \"name\" (or \"resourceName\") as it has nothing to do with a path and there is already \"basePath\" and the individual \"apis\" entry relative \"path\" attribute that actually have something to do with paths.\n. There appears to be one already: https://github.com/wordnik/swagger-ui/issues/289\n. I just think that a missing property is essentially the same as a null value. Even in javascript if you use if( !object.prop ){ doSomething(); } then you will run doSomething(); whether prop was missing or null.\nYou have found a reason why it makes a difference (essentially the same is not exactly the same). You could probably work around this by using a template that you extend with the json object if you wanted to. I don't know how that syntax would look in python though.\n. @HelenGao Yes, that is exactly what I would expect to see if the incorrect reflection jar was included. See #412\n. A validating regex format parameter would be a good addition for string query parameters. Then you could describe the query parameter: DateRange in string format [show format here]\n. ",
    "psinghsp": "I have a node/express server. Swagger-UI 2.0 always sets the Content-type header to \"application/json\" for DELETE operation. In my case, the body is empty - so Express body parser just chokes on it. I tried setting the \"consumes\" to \"text/html\" in the Swagger API specification - but Swagger-UI insists on sendting Content-type  as \"application/json\". Is it possible to get a fix for it?\n. That is right. Let me post it on swagger-ui. The bug is in swagger-ui - not swagger-core. Sorry about that.\n. ",
    "dotheygandalf": "thanks for the quick response.  I have another question relating to hiding a parameter.  \nI have the following code:\n(@ApiParam(access = \"internal\" , required = false)@InjectParam final DefectSearchBeanV1 searchBean\nIt works without the @ApiParam annotation but when I include it, my rest service breaks and the endpoint gives HTTP Status 415 - Unsupported Media Type. \n. Sorry. What do you mean by writing a test case.  Are you looking for a junit? Is there a sample that I can follow?\n. I came across this same issue.  It is sort of documented here.  What you need is to create a separate resource listing endpoint that will expose the v1/whatever path.\nhttps://github.com/wordnik/swagger-core/tree/master/samples/scala-alt-resource-listing \nThe result works for us but it does seem a bit flaky.  The resources exposed on the v1 path for us don't always show up.  We solved this by using a static root resource json which was needed anyways to keep track of separate versions.\n. ",
    "ayee": "2nd that.  This enhancement will be very useful\n. 2nd that.  This enhancement will be very useful\n. ",
    "Quaiks": "I can't get this working. I have a header param annotated with \njava\n@ApiParam(access=\"internal\", required=false) @HeaderParam(HeadersNames.API_ID) @Pattern(regexp = RegularExpressions.REGEXP_OBJECT_ID) String appId\nThe param is always present in the generated JSON.\njson\n{\n\"name\":\"Object-Id\",\n\"required\":false,\n\"allowMultiple\":false,\n\"type\":\"string\",\n\"paramType\":\"header\",\n\"paramAccess\":\"internal\"\n}\nAnd it is shown in swagger-ui\nIt's swagger-ui failing? Did I miss something?\nThanks in advance\n. OK I solved this.\nFirst we were implementing incorrectly the subresources. Now the methods are correctly implemented. BUT in the subresources you have to add @Api(\"\")\n. Everything is working properly with the correct implementation of the resources. Our fault. But the annotation @Api(\"\")is quite annoyed :)\n. ",
    "mithun-debnath": "@ApiIgnore\n @RequestParam(value= DEBUG_MODE,...)\nWorking for me.\n. ",
    "aquamatthias": "Sorry. Post it there.\n. ",
    "interpegasus": "Thanks again! : ) I enabled CORS headers on my Heroku App as well and it works fine :+1: \n. ",
    "gavioto": "Sorry. I forgotten completely about basepath:\n\nswagger.api.basepath=\"http://production.myapi.com\"${application.context}\n\nBut the problem here is that specification includes the context twice. One for the base path of swagger plugin and other from application.context when calculating inverse route.\nI searched the code and I think the solution may be in method   but I don't know scala very well. \nI've been researching and context could be retrieved in Scala using  \n. I think it isn't solved yet. \nA workaround is don't using \"application.context\" and add \"/context\" to all routes.\n. ",
    "emrekyv": "Any news on that? I have the exact same problem. \n. ",
    "chiappone": "Ok I did get that worked out and GET's and POST's seem to work fine.  The one thing I cannot get to work though is a PUT.  It appears the the ajax request sets the method to OPTIONS which does not map to a route therefore causing an a 404.  The following can be seen in the console of Chrome:\nOPTIONS http://localhost:9000/2/account?swaggerAuth=UN%3APW 404 (Not Found) jquery-1.8.0.min.js:2\nXMLHttpRequest cannot load http://localhost:9000/2/account?swaggerAuth=UN%3APW. Origin null is not allowed by Access-Control-Allow-Origin.\nI was hoping to see this work in the sample app but it appears not all the API examples in that play2 sample application are working including the PUT examples.\n. ",
    "eneko": "I have the same issue, NullPointerException, when accessing /api-docs.json/problems\n```\n--- (RELOAD) ---\n[debug] application - SwaggerPlugin.onStop\n[info] play - database [default] connected at jdbc:mysql://localhost/apigame\n[debug] application - SwaggerPlugin.onStart\n[debug] application - class controllers.Application is not the right type\n[debug] application - class controllers.Application is not the right type\n[debug] application - class controllers.ProblemController is not the right type\n[debug] application - class controllers.ProblemController is not the right type\n[debug] application - class controllers.ApiHelpController is not the right type\n[debug] application - class controllers.ApiHelpController is not the right type\n[debug] application - Found Resource /api/problems @ controllers.ProblemAPIController\n[debug] application - class controllers.Assets is not the right type\n[debug] application - loading resource /api-docs.{format}/problems\n[debug] application - Loading resource /api-docs.{format}/problems from class controllers.ProblemAPIController @ /api/problems, http://localhost\n[debug] application - /api/problems/{id}\n[debug] application - loaded resource /api-docs.{format}/problems\n[info] play - Application started (Dev)\n[error] application - \n! @6dclnlda0 - Internal server error, for (GET) [/api-docs.json/problems] ->\nplay.api.Application$$anon$1: Execution exception[[NullPointerException: null]]\n    at play.api.Application$class.handleError(Application.scala:289) ~[play_2.10.jar:2.1.0]\n    at play.api.DefaultApplication.handleError(Application.scala:383) [play_2.10.jar:2.1.0]\n    at play.core.server.netty.PlayDefaultUpstreamHandler$$anonfun$12$$anonfun$apply$24.apply(PlayDefaultUpstreamHandler.scala:314) [play_2.10.jar:2.1.0]\n    at play.core.server.netty.PlayDefaultUpstreamHandler$$anonfun$12$$anonfun$apply$24.apply(PlayDefaultUpstreamHandler.scala:312) [play_2.10.jar:2.1.0]\n    at play.api.libs.concurrent.PlayPromise$$anonfun$extend1$1.apply(Promise.scala:113) [play_2.10.jar:2.1.0]\n    at play.api.libs.concurrent.PlayPromise$$anonfun$extend1$1.apply(Promise.scala:113) [play_2.10.jar:2.1.0]\njava.lang.NullPointerException: null\n    at controllers.SwaggerBaseApiController.JsonResponse(ApiHelpController.scala:89) ~[swagger-play2_2.10-1.2.1-SNAPSHOT.jar:1.2.1-SNAPSHOT]\n    at controllers.SwaggerBaseApiController.returnValue(ApiHelpController.scala:82) ~[swagger-play2_2.10-1.2.1-SNAPSHOT.jar:1.2.1-SNAPSHOT]\n    at controllers.ApiHelpController$$anonfun$getResource$1.apply(ApiHelpController.scala:56) ~[swagger-play2_2.10-1.2.1-SNAPSHOT.jar:1.2.1-SNAPSHOT]\n    at controllers.ApiHelpController$$anonfun$getResource$1.apply(ApiHelpController.scala:49) ~[swagger-play2_2.10-1.2.1-SNAPSHOT.jar:1.2.1-SNAPSHOT]\n    at play.api.mvc.ActionBuilder$$anon$1.apply(Action.scala:217) ~[play_2.10.jar:2.1.0]\n    at play.api.mvc.Action$$anonfun$apply$1$$anonfun$apply$2$$anonfun$apply$5$$anonfun$apply$6.apply(Action.scala:109) ~[play_2.10.jar:2.1.0]\n```\nI have the httpMethod declared, pretty much followed all the code from the sample app, almost copy/paste from the PetApiController example.\n```\n@Api(value = \"/api/problems\", listingPath = \"/api-docs.{format}/problems\", description = \"Some Problems\")\nobject ProblemAPIController extends BaseApiController {\n@ApiOperation(value = \"Find problem by ID\", notes = \"Returns a problem\", responseClass = \"Problem\", httpMethod = \"GET\")\n  @ApiErrors(Array(\n    new ApiError(code = 400, reason = \"Invalid ID supplied\"),\n    new ApiError(code = 404, reason = \"Problem not found\")\n  ))\n  def problemById(@ApiParam(value = \"ID of the problem to fetch\")@PathParam(\"id\") id: String) = Action { implicit request =>\n    controllers.ProblemRepository.problem(id) match {\n      case Some(problem) => JsonResponse(problem)\n      case _ => JsonResponse(new value.ApiResponse(404, \"Problem not found\"), 404)\n    }\n  }\n}\n```\nThe code returns problems in Json properly, and errors out when the Id is not found, as expected. But I cannot get the api-docs to work for /api-docs.json/problems\nAny ideas?\n. Just did a play clean and run again.\nI've removed my other routes:\n```\nRoutes\nThis file defines all application routes (Higher priority routes first)\n~~~~\nWebsite\nGET     /                           controllers.Application.index\nJSON API\nGET     /api-docs.json              controllers.ApiHelpController.getResources\nGET     /api-docs.json/problems     controllers.ApiHelpController.getResource(path = \"/problems\")\n```\nAnd here is the simplified code, still fails:\n```\npackage controllers\nimport play.api.\nimport play.api.mvc.\nimport com.wordnik.swagger.core.\nimport com.wordnik.swagger.annotations.\n@Api(value = \"/problems\", listingPath = \"/api-docs.{format}/problems\", description = \"API Problems\")\nobject ProblemAPIController extends Controller {\n}\n```\nThe error I get now in the console is this:\n[error] application - api listing for path /problems not found\nThe API returns this JSON:\n{\"code\":500,\"message\":\"api listing for path /problems not found\",\"type\":\"unknown\"}\nLooks better, no exception, but still does not find the 'problems'.\nI assume the value passed to getResource() should match the @Api.value parameter, correct?\n. I see. Yeah! That worked :) Thank you very much! I'd like to help simplifying that, but I have no clue where to start. \nThanks again.\n. ",
    "MaggieLeber": "@fehguy: You might want to update the readme with that \"ApiHelpController.getResource(path = \"/api-docs.json/problems\")\" stuff...I spent a while doing that wrong.\n. ",
    "akbertram": "Yes, it's definitely a security restriction imposed by GAE, though you might encounter a problem in other locked down environments or in non-Sun JREs.\nWe're working on replacing the classes in our own working copy, just have to do some scala quick study first !\n. Yes, it's definitely a security restriction imposed by GAE, though you might encounter a problem in other locked down environments or in non-Sun JREs.\nWe're working on replacing the classes in our own working copy, just have to do some scala quick study first !\n. Wasn't able to get it working quickly - will take another look at it next week.\n. Wasn't able to get it working quickly - will take another look at it next week.\n. It's still on my todo list, as I would like to use it for our project, but\nSBT+Scala is formidable barrier to contribution. And in response to the\ncommentators above, this is not necessarily a limitation of GAE but rather\nan issue of using vendor-specific classes. Certainly the Sun/Oracle JRE is\nthe most common, but not the only JRE.\nOn Mon, Jun 3, 2013 at 5:09 PM, Rudi Grinberg notifications@github.comwrote:\n\nAny updates on this? Would be great to have swagger working on GAE\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/137#issuecomment-18847663\n.\n. It's still on my todo list, as I would like to use it for our project, but\nSBT+Scala is formidable barrier to contribution. And in response to the\ncommentators above, this is not necessarily a limitation of GAE but rather\nan issue of using vendor-specific classes. Certainly the Sun/Oracle JRE is\nthe most common, but not the only JRE.\n\nOn Mon, Jun 3, 2013 at 5:09 PM, Rudi Grinberg notifications@github.comwrote:\n\nAny updates on this? Would be great to have swagger working on GAE\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/137#issuecomment-18847663\n.\n. \n",
    "Antwnis": "Any update on this limitation around GAE ?\n. ",
    "sappenin": "I'm having this issue, too, on GAE using Swagger 2.9.1-1.2.3.  \njava.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect.generics.reflectiveObjects\")\nat java.security.AccessControlContext.checkPermission(AccessControlContext.java:366)\nat java.security.AccessController.checkPermission(AccessController.java:560)\nat java.lang.SecurityManager.checkPermission(SecurityManager.java:549)\nat com.google.appengine.tools.development.DevAppServerFactory$CustomSecurityManager.checkPermission(DevAppServerFactory.java:289)\nat java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1529)\nat java.lang.ClassLoader$1.run(ClassLoader.java:494)\nat java.lang.ClassLoader$1.run(ClassLoader.java:492)\nat java.security.AccessController.doPrivileged(Native Method)\nat java.lang.ClassLoader.checkPackageAccess(ClassLoader.java:492)\nat com.wordnik.swagger.core.ApiPropertiesReader$.getDataType(ApiPropertiesReader.scala:97)\nat com.wordnik.swagger.jsonschema.ApiModelParser.parsePropertyAnnotations(SwaggerJsonSchemaProvider.scala:151)\nat com.wordnik.swagger.jsonschema.ApiModelParser.com$wordnik$swagger$jsonschema$ApiModelParser$$parseMethod(SwaggerJsonSchemaProvider.scala:95)\nat com.wordnik.swagger.jsonschema.ApiModelParser$$anonfun$parseRecursive$1.apply(SwaggerJsonSchemaProvider.scala:78)\nat com.wordnik.swagger.jsonschema.ApiModelParser$$anonfun$parseRecursive$1.apply(SwaggerJsonSchemaProvider.scala:76)\nat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)\nat scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:38)\nat com.wordnik.swagger.jsonschema.ApiModelParser.parseRecursive(SwaggerJsonSchemaProvider.scala:76)\nat com.wordnik.swagger.jsonschema.ApiModelParser.parse(SwaggerJsonSchemaProvider.scala:67)\nat com.wordnik.swagger.jsonschema.SwaggerJsonSchemaProvider.read(SwaggerJsonSchemaProvider.scala:25)\nat com.wordnik.swagger.core.ApiPropertiesReader$$anonfun$read$1.apply(ApiPropertiesReader.scala:67)\nat com.wordnik.swagger.core.ApiPropertiesReader$$anonfun$read$1.apply(ApiPropertiesReader.scala:66)\nat scala.collection.MapLike$class.getOrElse(MapLike.scala:122)\nat scala.collection.mutable.HashMap.getOrElse(HashMap.scala:43)\nat com.wordnik.swagger.core.ApiPropertiesReader$.read(ApiPropertiesReader.scala:65)\nat com.wordnik.swagger.core.ApiPropertiesReader$.read(ApiPropertiesReader.scala:61)\nat com.wordnik.swagger.jaxrs.HelpApi$$anonfun$loadModel$1.apply(HelpApi.scala:86)\nat com.wordnik.swagger.jaxrs.HelpApi$$anonfun$loadModel$1.apply(HelpApi.scala:84)\nat scala.collection.immutable.Set$Set1.foreach(Set.scala:86)\nat com.wordnik.swagger.jaxrs.HelpApi.loadModel(HelpApi.scala:84)\nat com.wordnik.swagger.jaxrs.HelpApi.filterDocs(HelpApi.scala:77)\nat com.wordnik.swagger.jersey.listing.ApiListing.docForRoute(ApiListing.scala:125)\nat com.wordnik.swagger.jersey.listing.ApiListing.apiListing(ApiListing.scala:98)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:601)\nat com.google.appengine.tools.development.agent.runtime.Runtime.invoke(Runtime.java:115)\nat com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)\nat com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)\nat com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)\nat com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)\nat com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\nat com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)\nat com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\nat com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)\nat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1511)\nat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1442)\nat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1391)\nat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1381)\nat com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416)\nat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:538)\nat com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:910)\nat com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:858)\nat com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:812)\nat com.google.inject.servlet.FilterDefinition.doFilter(FilterDefinition.java:163)\nat com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:58)\nat com.googlecode.objectify.cache.AsyncCacheFilter.doFilter(AsyncCacheFilter.java:59)\nat com.googlecode.objectify.ObjectifyFilter.doFilter(ObjectifyFilter.java:49)\nat com.google.inject.servlet.FilterDefinition.doFilter(FilterDefinition.java:163)\nat com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:58)\nat com.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:118)\nat com.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:113)\nat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\nat com.google.appengine.api.socket.dev.DevSocketFilter.doFilter(DevSocketFilter.java:74)\nat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\nat com.google.appengine.tools.development.ResponseRewriterFilter.doFilter(ResponseRewriterFilter.java:123)\nat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\nat com.google.appengine.tools.development.HeaderVerificationFilter.doFilter(HeaderVerificationFilter.java:34)\nat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\nat com.google.appengine.api.blobstore.dev.ServeBlobFilter.doFilter(ServeBlobFilter.java:63)\nat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\nat com.google.apphosting.utils.servlet.TransactionCleanupFilter.doFilter(TransactionCleanupFilter.java:43)\nat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\nat com.google.appengine.tools.development.StaticFileFilter.doFilter(StaticFileFilter.java:125)\nat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\nat com.google.appengine.tools.development.DevAppServerServersFilter.doDirectRequest(DevAppServerServersFilter.java:369)\nat com.google.appengine.tools.development.DevAppServerServersFilter.doDirectServerRequest(DevAppServerServersFilter.java:352)\nat com.google.appengine.tools.development.DevAppServerServersFilter.doFilter(DevAppServerServersFilter.java:115)\nat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)\nat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)\nat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\nat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\nat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)\nat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)\nat com.google.appengine.tools.development.DevAppEngineWebAppContext.handle(DevAppEngineWebAppContext.java:94)\nat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\nat com.google.appengine.tools.development.JettyContainerService$ApiProxyHandler.handle(JettyContainerService.java:421)\nat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\nat org.mortbay.jetty.Server.handle(Server.java:326)\nat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\nat org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:923)\nat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:547)\nat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\nat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\nat org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)\nat org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\n. Sounds great - thanks!\n. ",
    "rgrinberg": "Any updates on this? Would be great to have swagger working on GAE\n. ",
    "kerbymart": "@yissachar Can you share the details with your workaround, I too am looking for ways to use swagger with GAE\n. ",
    "yissachar": "@kerbymart Have a look at the no-server guide.\nI used Jersey and annotated the methods with Swagger annotations. You shouldn't need any other Swagger module besides for annotations. I then ran the Maven plugin to scan my methods and generate the API docs. Finally, I host these files statically on AppEngine (since they are just static JSON files there are no issues).\nThis way all Swagger generation happens locally on my dev machine and AppEngine does need to know anything about Swagger other than to host the static JSON docs.\n. ",
    "mattburns": "Thanks @yissachar, lifesaver :)\nFor anyone else that doesn't use maven (like me) you can still include the plugin and invoke the code directly like this:\nApiSource apiSource = new ApiSource();\n        apiSource.setApiVersion(\"1.0.0\");\n        apiSource.setBasePath(\"/\");\n        apiSource.setLocations(\"com.example.package\");\n        apiSource.setSwaggerDirectory(\"outputdir\");\n        apiSource.setUseOutputFlatStructure(true);\n        AbstractDocumentSource documentSource = new MavenDocumentSource(apiSource, new SystemStreamLog());\n        documentSource.loadDocuments();\n        documentSource.toSwaggerDocuments(\"/\");\n. Ahh, my mistake. I didn't notice you were using TestNG and I didn't know the order was different from JUnit. Sorry for the time wasted...\n. ",
    "adcoolguy": "This is still happening for us. What is the solution again?\n. Slightly off topic, but how would one annotate the method for a purely Servlet project (for input which is a JSON body/model)? Thanks!\n. We see only paramType = \"query\" and GET. Is there any POST sample? Is this https://github.com/swagger-api/swagger-samples/blob/master/java/java-servlet/src/main/java/io/swagger/sample/servlet/SampleServlet.java the right sample?\n. Could you give some example? We don't quite get it and would not like to guess. Thanks!\n. We do not use Maven and (thus) we got these errors:\nprops.put(\"javax.ws.rs.Application\", Application.class.getName());\n    props.put(\"jersey.config.server.wadl.disableWadl\", \"true\");\n    serve(\"/api/*\").with(ServletContainer.class, props);\nWhich jar can we find Application.class and ServletContainer.class ?\nThanks for the prompt response!\n. Google App engine legacy project, they were never meant to used with Maven. Created dinosaur age back. But we fixed those two. Left with Bootstrap.class. Is it io.swagger.api.util.Bootstrap? Could you do a Ctrl + Shift + T in the great Eclipse, enter the class and let us know what jar file is it supposed to be from! :)\nWe owe you once. LOL\n. Alright. Same response even with BeanConfig. The following is the latest codes of the embedded Jetty. Still returning blank via http://127.0.0.1:8002/api-docs.\nimport io.swagger.jaxrs.config.BeanConfig;\nimport io.swagger.sample.util.ApiOriginFilter;\nimport io.swagger.servlet.config.DefaultServletConfig;\nimport io.swagger.servlet.listing.ApiDeclarationServlet;\nimport javax.ws.rs.core.Application;\nimport org.eclipse.jetty.server.Handler;\nimport org.eclipse.jetty.server.Server;\nimport org.eclipse.jetty.server.handler.DefaultHandler;\nimport org.eclipse.jetty.server.handler.HandlerList;\nimport org.eclipse.jetty.server.handler.ResourceHandler;\nimport org.eclipse.jetty.server.nio.SelectChannelConnector;\nimport org.eclipse.jetty.servlet.ServletContextHandler;\nimport org.eclipse.jetty.util.log.StdErrLog;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport app.controller.CrudService;\npublic class Starter {\n//  private static final Logger log = Logger.getLogger(Starter.class);\n    private static final Logger logger = LoggerFactory.getLogger(Starter.class);\npublic static void main(String[] args) throws Exception {\n    System.out.println( \"Initializing Swagger BeanConfig\" );\n    BeanConfig beanConfig = new BeanConfig();\n    beanConfig.setVersion(\"1.0.0\");\n//        beanConfig.setSchemes(new String[]{\"http\"});\n        beanConfig.setDescription(\"This is a app.\");\n        beanConfig.setTitle(\"Swagger Petstore\");\n//        beanConfig.setHost(\"127.0.0.1:8002/\");\n        beanConfig.setBasePath(\"http://127.0.0.1:8002/\");\n        beanConfig.setFilterClass(\"io.swagger.sample.util.ApiAuthorizationFilterImpl\");\n        beanConfig.setResourcePackage(\"io.swagger.sample.resource\");\n        beanConfig.setContact(\"apiteam@swagger.io\");\n        beanConfig.setLicense(\"Apache 2.0\");\n        beanConfig.setLicenseUrl(\"http://www.apache.org/licenses/LICENSE-2.0.html\");\n```\n    StdErrLog lg = new StdErrLog();\n    lg.setDebugEnabled(true);\n    org.eclipse.jetty.util.log.Log.setLog(lg);\n    Server server = new Server();\n    SelectChannelConnector connector = new SelectChannelConnector();\n    connector.setPort(8002);\n    server.addConnector(connector);\n// Setup web handler\nfinal ResourceHandler webResourceHandler = new ResourceHandler();\nwebResourceHandler.setDirectoriesListed(false);\nwebResourceHandler.setWelcomeFiles(new String[] { \"index.html\" });\n\n// Create servlet context\nfinal ServletContextHandler servletContext = new ServletContextHandler(ServletContextHandler.SESSIONS);\nservletContext.setContextPath(\"/\");\nservletContext.addServlet(CrudService.class, \"/ws/*\");\nservletContext.addFilter(ApiOriginFilter.class, \"/*\", EnumSet.of(DispatcherType.REQUEST,DispatcherType.ASYNC));\n\n// Setup Swagger handlers\n\n```\n//        servletContext.addServlet(new ServletHolder(), \"\");\n//      servletContext.addServlet(DefaultServletConfig.class, \"/\");\n//      servletContext.setInitParameter(\"swagger.resource.package\", \"io.swagger.sample.servlet\");\n//      servletContext.setInitParameter(\"swagger.resource.package\", \"app.controller\");\n//      servletContext.setInitParameter(\"swagger.api.basepath\", \"http://127.0.0.1:8002\");\n//      servletContext.setInitParameter(\"api.version\", \"1.0.0\");\n        servletContext.addServlet(ApiDeclarationServlet.class, \"/api-docs/\");\n        servletContext.setInitParameter(\"jersey.config.server.wadl.disableWadl\", \"true\");\n//      servletContext.setInitParameter(\"javax.ws.rs.Application\", MyServices.class.getName());\n        servletContext.setInitParameter(\"javax.ws.rs.Application\", Application.class.getName());\n//      servletContext.setInitParameter(\"javax.ws.rs.Application\", CrudService.class.getName());\n//        ServletContextHandler restContextHandler = new ServletContextHandler(ServletContextHandler.SESSIONS);\n//        restContextHandler.setContextPath(\"/ws/crud\");\n//        restContextHandler.addServlet(h, \"/\");\nfinal HandlerList handlers = new HandlerList();\n    handlers.setHandlers(new Handler[] {\n//              restContextHandler, // REST handler???\n                webResourceHandler, // Web handler\n                servletContext, // Servlet handler\n                new DefaultHandler() }); // Default handler returns 404 (NOT\n                                            // FOUND) for anything else        \nserver.setHandler(handlers);\n    server.start();\n    server.join();\n}\n}\nFull embedded Jetty logs:\n23:04:23,402 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]\n23:04:23,402 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback-test.xml] at [jar:file:/Users/tanj3/GoogleAppEngine/war/WEB-INF/lib/swagger-servlet-1.5.5-SNAPSHOT.jar!/logback-test.xml]\n23:04:23,423 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@2db36a91 - URL [jar:file:/Users/tanj3/GoogleAppEngine/war/WEB-INF/lib/swagger-servlet-1.5.5-SNAPSHOT.jar!/logback-test.xml] is not of type file\n23:04:23,463 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set\n23:04:23,465 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]\n23:04:23,468 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]\n23:04:23,530 |-WARN in ch.qos.logback.core.ConsoleAppender[STDOUT] - This appender no longer admits a layout as a sub-component, set an encoder instead.\n23:04:23,530 |-WARN in ch.qos.logback.core.ConsoleAppender[STDOUT] - To ensure compatibility, wrapping your layout in LayoutWrappingEncoder.\n23:04:23,530 |-WARN in ch.qos.logback.core.ConsoleAppender[STDOUT] - See also http://logback.qos.ch/codes.html#layoutInsteadOfEncoder for details\n23:04:23,531 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.swagger] to ERROR\n23:04:23,531 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to ERROR\n23:04:23,531 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]\n23:04:23,531 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.\n23:04:23,532 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@5e196d07 - Registering current configuration as safe fallback point\nInitializing Swagger BeanConfig\n2015-11-09 23:04:23.559:DBUG:oejuc.Container:Container org.eclipse.jetty.server.Server@3b6edaf6 + SelectChannelConnector@0.0.0.0:8002 as connector\n2015-11-09 23:04:23.595:DBUG:oejs.ServletHandler:filterNameMap={}\n2015-11-09 23:04:23.595:DBUG:oejs.ServletHandler:pathFilters=null\n2015-11-09 23:04:23.595:DBUG:oejs.ServletHandler:servletFilterMap=null\n2015-11-09 23:04:23.595:DBUG:oejs.ServletHandler:servletPathMap={/ws/=app.controller.CrudService-30163b85}\n2015-11-09 23:04:23.595:DBUG:oejs.ServletHandler:servletNameMap={app.controller.CrudService-30163b85=app.controller.CrudService-30163b85}\n2015-11-09 23:04:23.599:DBUG:oejs.ServletHandler:filterNameMap={io.swagger.sample.util.ApiOriginFilter-1690fb8a=io.swagger.sample.util.ApiOriginFilter-1690fb8a}\n2015-11-09 23:04:23.600:DBUG:oejs.ServletHandler:pathFilters=[[/]/[]==17=>io.swagger.sample.util.ApiOriginFilter-1690fb8a]\n2015-11-09 23:04:23.600:DBUG:oejs.ServletHandler:servletFilterMap={}\n2015-11-09 23:04:23.600:DBUG:oejs.ServletHandler:servletPathMap={/ws/=app.controller.CrudService-30163b85}\n2015-11-09 23:04:23.601:DBUG:oejs.ServletHandler:servletNameMap={app.controller.CrudService-30163b85=app.controller.CrudService-30163b85}\n2015-11-09 23:04:23.601:DBUG:oejs.ServletHandler:filterNameMap={io.swagger.sample.util.ApiOriginFilter-1690fb8a=io.swagger.sample.util.ApiOriginFilter-1690fb8a}\n2015-11-09 23:04:23.601:DBUG:oejs.ServletHandler:pathFilters=[[/]/[]==17=>io.swagger.sample.util.ApiOriginFilter-1690fb8a]\n2015-11-09 23:04:23.602:DBUG:oejs.ServletHandler:servletFilterMap={}\n2015-11-09 23:04:23.602:DBUG:oejs.ServletHandler:servletPathMap={/ws/=app.controller.CrudService-30163b85, /api-docs/=io.swagger.servlet.listing.ApiDeclarationServlet-484ac01}\n2015-11-09 23:04:23.602:DBUG:oejs.ServletHandler:servletNameMap={app.controller.CrudService-30163b85=app.controller.CrudService-30163b85, io.swagger.servlet.listing.ApiDeclarationServlet-484ac01=io.swagger.servlet.listing.ApiDeclarationServlet-484ac01}\n2015-11-09 23:04:23.609:DBUG:oejuc.Container:Container org.eclipse.jetty.server.handler.HandlerList@538ce197 + org.eclipse.jetty.server.handler.ResourceHandler@462eab5b as handler\n2015-11-09 23:04:23.609:DBUG:oejuc.Container:Container org.eclipse.jetty.server.handler.HandlerList@538ce197 + o.e.j.s.ServletContextHandler{/,null} as handler\n2015-11-09 23:04:23.609:DBUG:oejuc.Container:Container org.eclipse.jetty.server.handler.HandlerList@538ce197 + org.eclipse.jetty.server.handler.DefaultHandler@21f4075c as handler\n2015-11-09 23:04:23.609:DBUG:oejuc.Container:Container org.eclipse.jetty.server.Server@3b6edaf6 + org.eclipse.jetty.server.handler.HandlerList@538ce197 as handler\n2015-11-09 23:04:23.609:DBUG:oejuc.AbstractLifeCycle:starting org.eclipse.jetty.server.Server@3b6edaf6\n2015-11-09 23:04:23.610:INFO:oejs.Server:jetty-8.1.17.v20150415\n2015-11-09 23:04:23.617:DBUG:oejuc.Container:Container org.eclipse.jetty.server.Server@3b6edaf6 + qtp1826835713{8<=0<=0/254,-1} as threadpool\n2015-11-09 23:04:23.617:DBUG:oejuc.AbstractLifeCycle:starting org.eclipse.jetty.server.handler.HandlerList@538ce197\n2015-11-09 23:04:23.617:DBUG:oejuc.AbstractLifeCycle:starting org.eclipse.jetty.server.handler.ResourceHandler@462eab5b\n2015-11-09 23:04:23.617:DBUG:oejsh.AbstractHandler:starting org.eclipse.jetty.server.handler.ResourceHandler@462eab5b\n2015-11-09 23:04:23.617:DBUG:oejuc.AbstractLifeCycle:STARTED org.eclipse.jetty.server.handler.ResourceHandler@462eab5b\n2015-11-09 23:04:23.617:DBUG:oejuc.AbstractLifeCycle:starting o.e.j.s.ServletContextHandler{/,null}\n2015-11-09 23:04:23.624:DBUG:oejuc.Container:Container org.eclipse.jetty.servlet.ServletHandler@7bd94799 + io.swagger.sample.util.ApiOriginFilter-1690fb8a as filter\n2015-11-09 23:04:23.624:DBUG:oejuc.Container:Container org.eclipse.jetty.servlet.ServletHandler@7bd94799 + [/]/[]==17=>io.swagger.sample.util.ApiOriginFilter-1690fb8a as filterMapping\n2015-11-09 23:04:23.624:DBUG:oejuc.Container:Container org.eclipse.jetty.servlet.ServletHandler@7bd94799 + app.controller.CrudService-30163b85 as servlet\n2015-11-09 23:04:23.624:DBUG:oejuc.Container:Container org.eclipse.jetty.servlet.ServletHandler@7bd94799 + io.swagger.servlet.listing.ApiDeclarationServlet-484ac01 as servlet\n2015-11-09 23:04:23.624:DBUG:oejuc.Container:Container org.eclipse.jetty.servlet.ServletHandler@7bd94799 + [/ws/]=>app.controller.CrudService-30163b85 as servletMapping\n2015-11-09 23:04:23.624:DBUG:oejuc.Container:Container org.eclipse.jetty.servlet.ServletHandler@7bd94799 + [/api-docs/]=>io.swagger.servlet.listing.ApiDeclarationServlet-484ac01 as servletMapping\n2015-11-09 23:04:23.624:DBUG:oejuc.Container:Container org.eclipse.jetty.server.session.SessionHandler@75ebcd54 + org.eclipse.jetty.servlet.ServletHandler@7bd94799 as handler\n2015-11-09 23:04:23.624:DBUG:oejuc.Container:Container org.eclipse.jetty.server.session.SessionHandler@75ebcd54 + org.eclipse.jetty.server.session.HashSessionManager@4bf58247 as sessionManager\n2015-11-09 23:04:23.625:DBUG:oejuc.Container:Container o.e.j.s.ServletContextHandler{/,null} + org.eclipse.jetty.server.session.SessionHandler@75ebcd54 as handler\n2015-11-09 23:04:23.625:DBUG:oejuc.AbstractLifeCycle:starting org.eclipse.jetty.server.session.SessionHandler@75ebcd54\n2015-11-09 23:04:23.625:DBUG:oejuc.AbstractLifeCycle:starting org.eclipse.jetty.server.session.HashSessionManager@4bf58247\n2015-11-09 23:04:23.626:DBUG:oejuc.Container:Container org.eclipse.jetty.server.Server@3b6edaf6 + org.eclipse.jetty.server.session.HashSessionIdManager@a1193a9 as sessionIdManager\n2015-11-09 23:04:23.626:DBUG:oejuc.AbstractLifeCycle:starting org.eclipse.jetty.server.session.HashSessionIdManager@a1193a9\n2015-11-09 23:04:23.626:DBUG:oejuc.AbstractLifeCycle:STARTED org.eclipse.jetty.server.session.HashSessionIdManager@a1193a9\n2015-11-09 23:04:23.626:DBUG:oejuc.AbstractLifeCycle:STARTED org.eclipse.jetty.server.session.HashSessionManager@4bf58247\n2015-11-09 23:04:23.627:DBUG:oejuc.AbstractLifeCycle:starting org.eclipse.jetty.servlet.ServletHandler@7bd94799\n2015-11-09 23:04:23.627:DBUG:oejs.ServletHandler:filterNameMap={io.swagger.sample.util.ApiOriginFilter-1690fb8a=io.swagger.sample.util.ApiOriginFilter-1690fb8a}\n2015-11-09 23:04:23.627:DBUG:oejs.ServletHandler:pathFilters=[[/]/[]==17=>io.swagger.sample.util.ApiOriginFilter-1690fb8a]\n2015-11-09 23:04:23.627:DBUG:oejs.ServletHandler:servletFilterMap={}\n2015-11-09 23:04:23.627:DBUG:oejs.ServletHandler:servletPathMap={/ws/=app.controller.CrudService-30163b85, /api-docs/=io.swagger.servlet.listing.ApiDeclarationServlet-484ac01}\n2015-11-09 23:04:23.627:DBUG:oejs.ServletHandler:servletNameMap={app.controller.CrudService-30163b85=app.controller.CrudService-30163b85, io.swagger.servlet.listing.ApiDeclarationServlet-484ac01=io.swagger.servlet.listing.ApiDeclarationServlet-484ac01}\n2015-11-09 23:04:23.627:DBUG:oejsh.AbstractHandler:starting org.eclipse.jetty.servlet.ServletHandler@7bd94799\n2015-11-09 23:04:23.627:DBUG:oejuc.AbstractLifeCycle:STARTED org.eclipse.jetty.servlet.ServletHandler@7bd94799\n2015-11-09 23:04:23.627:DBUG:oejsh.AbstractHandler:starting org.eclipse.jetty.server.session.SessionHandler@75ebcd54\n2015-11-09 23:04:23.627:DBUG:oejuc.AbstractLifeCycle:STARTED org.eclipse.jetty.server.session.SessionHandler@75ebcd54\n2015-11-09 23:04:23.627:DBUG:oejsh.AbstractHandler:starting o.e.j.s.ServletContextHandler{/,null}\n2015-11-09 23:04:23.627:DBUG:oejuc.AbstractLifeCycle:starting io.swagger.sample.util.ApiOriginFilter-1690fb8a\n2015-11-09 23:04:23.628:DBUG:oejuc.AbstractLifeCycle:STARTED io.swagger.sample.util.ApiOriginFilter-1690fb8a\n2015-11-09 23:04:23.628:DBUG:oejuc.AbstractLifeCycle:starting app.controller.CrudService-30163b85\n2015-11-09 23:04:23.628:DBUG:oejs.Holder:Holding class app.controller.CrudService\n2015-11-09 23:04:23.629:DBUG:oejuc.AbstractLifeCycle:STARTED app.controller.CrudService-30163b85\n2015-11-09 23:04:23.629:DBUG:oejuc.AbstractLifeCycle:starting io.swagger.servlet.listing.ApiDeclarationServlet-484ac01\n2015-11-09 23:04:23.629:DBUG:oejs.Holder:Holding class io.swagger.servlet.listing.ApiDeclarationServlet\n2015-11-09 23:04:23.629:DBUG:oejuc.AbstractLifeCycle:STARTED io.swagger.servlet.listing.ApiDeclarationServlet-484ac01\n2015-11-09 23:04:23.629:DBUG:oejuc.AbstractLifeCycle:STARTED o.e.j.s.ServletContextHandler{/,null}\n2015-11-09 23:04:23.629:DBUG:oejuc.AbstractLifeCycle:starting org.eclipse.jetty.server.handler.DefaultHandler@21f4075c\n2015-11-09 23:04:23.629:DBUG:oejsh.AbstractHandler:starting org.eclipse.jetty.server.handler.DefaultHandler@21f4075c\n2015-11-09 23:04:23.629:DBUG:oejuc.AbstractLifeCycle:STARTED org.eclipse.jetty.server.handler.DefaultHandler@21f4075c\n2015-11-09 23:04:23.629:DBUG:oejsh.AbstractHandler:starting org.eclipse.jetty.server.handler.HandlerList@538ce197\n2015-11-09 23:04:23.629:DBUG:oejuc.AbstractLifeCycle:STARTED org.eclipse.jetty.server.handler.HandlerList@538ce197\n2015-11-09 23:04:23.629:DBUG:oejsh.AbstractHandler:starting org.eclipse.jetty.server.Server@3b6edaf6\n2015-11-09 23:04:23.629:DBUG:oejuc.AbstractLifeCycle:starting qtp1826835713{8<=0<=0/254,-1}\n2015-11-09 23:04:23.631:DBUG:oejuc.AbstractLifeCycle:STARTED qtp1826835713{8<=8<=8/254,0}\n2015-11-09 23:04:23.631:DBUG:oejuc.AbstractLifeCycle:starting SelectChannelConnector@0.0.0.0:8002\n2015-11-09 23:04:23.639:DBUG:oejuc.AbstractLifeCycle:starting null/null\n2015-11-09 23:04:23.640:DBUG:oejuc.AbstractLifeCycle:STARTED PooledBuffers [0/1024@6144,0/1024@16384,0/1024@-]/PooledBuffers [0/1024@6144,0/1024@32768,0/1024@-]\n2015-11-09 23:04:23.640:DBUG:oejuc.AbstractLifeCycle:starting org.eclipse.jetty.server.nio.SelectChannelConnector$ConnectorSelectorManager@56300388\n2015-11-09 23:04:23.644:DBUG:oejuc.AbstractLifeCycle:STARTED org.eclipse.jetty.server.nio.SelectChannelConnector$ConnectorSelectorManager@56300388\n2015-11-09 23:04:23.644:DBUG:oeji.nio:Starting Thread[qtp1826835713-11 Selector1,5,main] on org.eclipse.jetty.io.nio.SelectorManager$1@1008e065\n2015-11-09 23:04:23.644:DBUG:oeji.nio:Starting Thread[qtp1826835713-10 Selector0,5,main] on org.eclipse.jetty.io.nio.SelectorManager$1@36c40f1c\n2015-11-09 23:04:23.644:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8002\n2015-11-09 23:04:23.645:DBUG:oejuc.AbstractLifeCycle:STARTED SelectChannelConnector@0.0.0.0:8002\n2015-11-09 23:04:23.645:DBUG:oejuc.AbstractLifeCycle:STARTED org.eclipse.jetty.server.Server@3b6edaf6\n2015-11-09 23:04:27.498:DBUG:oeji.nio:created SCEP@7d22f244{l(/127.0.0.1:54459)<->r(/127.0.0.1:8002),s=0,open=true,ishut=false,oshut=false,rb=false,wb=false,w=true,i=0}-{AsyncHttpConnection@14f8e8b,g=HttpGenerator{s=0,h=-1,b=-1,c=-1},p=HttpParser{s=-14,l=0,c=0},r=0}\n2015-11-09 23:04:27.498:DBUG:oeji.nio:created SCEP@3b195903{l(/127.0.0.1:54460)<->r(/127.0.0.1:8002),s=0,open=true,ishut=false,oshut=false,rb=false,wb=false,w=true,i=0}-{AsyncHttpConnection@e174859,g=HttpGenerator{s=0,h=-1,b=-1,c=-1},p=HttpParser{s=-14,l=0,c=0},r=0}\n2015-11-09 23:04:27.500:DBUG:oeji.nio:created SCEP@46f82888{l(/127.0.0.1:54458)<->r(/127.0.0.1:8002),s=0,open=true,ishut=false,oshut=false,rb=false,wb=false,w=true,i=0}-{AsyncHttpConnection@76d53356,g=HttpGenerator{s=0,h=-1,b=-1,c=-1},p=HttpParser{s=-14,l=0,c=0},r=0}\n2015-11-09 23:04:27.502:DBUG:oejh.HttpParser:filled 0/0\n2015-11-09 23:04:27.502:DBUG:oejh.HttpParser:filled 416/416\n2015-11-09 23:04:27.502:DBUG:oejh.HttpParser:filled 0/0\n2015-11-09 23:04:27.506:DBUG:oejs.Server:REQUEST /api-docs on AsyncHttpConnection@76d53356,g=HttpGenerator{s=0,h=-1,b=-1,c=-1},p=HttpParser{s=-5,l=14,c=0},r=1\n2015-11-09 23:04:27.506:DBUG:oejsh.ContextHandler:scope null||/api-docs @ o.e.j.s.ServletContextHandler{/,null}\n2015-11-09 23:04:27.506:DBUG:oejsh.ContextHandler:context=||/api-docs @ o.e.j.s.ServletContextHandler{/,null}\n2015-11-09 23:04:27.507:DBUG:oejs.session:sessionManager=org.eclipse.jetty.server.session.HashSessionManager@4bf58247\n2015-11-09 23:04:27.507:DBUG:oejs.session:session=null\n2015-11-09 23:04:27.507:DBUG:oejs.ServletHandler:servlet |/api-docs|null -> io.swagger.servlet.listing.ApiDeclarationServlet-484ac01\n2015-11-09 23:04:27.508:DBUG:oejs.ServletHandler:chain=io.swagger.sample.util.ApiOriginFilter-1690fb8a->io.swagger.servlet.listing.ApiDeclarationServlet-484ac01\n2015-11-09 23:04:27.509:DBUG:oejs.ServletHandler:call filter io.swagger.sample.util.ApiOriginFilter-1690fb8a\n2015-11-09 23:04:27.509:DBUG:oejs.ServletHandler:call servlet io.swagger.servlet.listing.ApiDeclarationServlet-484ac01\n2015-11-09 23:04:27.524:DBUG:oejs.Server:RESPONSE /api-docs  404 handled=true\n2015-11-09 23:04:27.525:DBUG:oejs.AsyncHttpConnection:Enabled read interest SCEP@46f82888{l(/127.0.0.1:54458)<->r(/127.0.0.1:8002),s=1,open=true,ishut=false,oshut=false,rb=false,wb=false,w=true,i=0r}-{AsyncHttpConnection@76d53356,g=HttpGenerator{s=4,h=0,b=-1,c=-1},p=HttpParser{s=0,l=14,c=0},r=1}\n2015-11-09 23:04:27.529:DBUG:oejh.HttpParser:filled 0/0\n2015-11-09 23:04:27.656:DBUG:oejh.HttpParser:filled 376/376\n2015-11-09 23:04:27.656:DBUG:oejs.Server:REQUEST /favicon.ico on AsyncHttpConnection@76d53356,g=HttpGenerator{s=0,h=-1,b=-1,c=-1},p=HttpParser{s=-5,l=14,c=0},r=2\n2015-11-09 23:04:27.656:DBUG:oejsh.ContextHandler:scope null||/favicon.ico @ o.e.j.s.ServletContextHandler{/,null}\n2015-11-09 23:04:27.656:DBUG:oejsh.ContextHandler:context=||/favicon.ico @ o.e.j.s.ServletContextHandler{/,null}\n2015-11-09 23:04:27.656:DBUG:oejs.session:sessionManager=org.eclipse.jetty.server.session.HashSessionManager@4bf58247\n2015-11-09 23:04:27.656:DBUG:oejs.session:session=null\n2015-11-09 23:04:27.656:DBUG:oejs.ServletHandler:servlet ||/favicon.ico -> null\n2015-11-09 23:04:27.656:DBUG:oejs.ServletHandler:chain=null\n2015-11-09 23:04:27.656:DBUG:oejs.ServletHandler:Not Found /favicon.ico\n2015-11-09 23:04:27.658:DBUG:oejs.Server:RESPONSE /favicon.ico  200 handled=true\n2015-11-09 23:04:27.659:DBUG:oejs.AsyncHttpConnection:Enabled read interest SCEP@46f82888{l(/127.0.0.1:54458)<->r(/127.0.0.1:8002),s=1,open=true,ishut=false,oshut=false,rb=false,wb=false,w=true,i=1r}-{AsyncHttpConnection@76d53356,g=HttpGenerator{s=4,h=0,b=0,c=-1},p=HttpParser{s=0,l=14,c=0},r=2}\n2015-11-09 23:04:27.659:DBUG:oejh.HttpParser:filled 0/0\nDid we miss anything? :(\n. While waiting for your reply, bumped into this http://www.sep.com/sep-blog/2015/11/05/adventures-in-documentation/.\nIs the document valid? Do we need to do all those?\n. ",
    "johnnymongiat": "Thanks for the suggestions! However, I feel that the \"multi-segmented path\" should be supported out of the box...\nWhere can I download the proposed 1.2.1-SNAPSHOT from (I don't see it in maven central)? Is it hosted on another repository?\n. Thanks for the repository info. I can confirm that the 1.2.1-SNAPSHOT does indeed address the original issue!! I really appreciate the help, and the quick responses - well done...\n. ",
    "ericchile": "Is there are release schedule for this artifact? I would like to use this version but don't want to hold up my project from releasing because of this SNAPSHOT dependency.\n. Is this what you are looking for?\njson\n{\"apiVersion\":\"3.25-SNAPSHOT\",\"swaggerVersion\":\"1.0\",\"basePath\":\"http://host.company.com:19900/\",\"apis\":[{\"path\":\"/resources.json/health\",\"description\":\"\"},{\"path\":\"/resources.json/about\",\"description\":\"\"},{\"path\":\"/resources.json/customers/{customerId}\",\"description\":\"\"}]}\n. So I am actually implementing a ConfigReader instead. It looks like this\n``` java\npublic class SwaggerConfigReader extends ConfigReader {\n...\n@Override\n  public String modelPackages() {\n    return \"com.company.model;com.overstock.company.codes;com.wordnik.swagger.jaxrs.listing;\";\n  }\n...\n}\n```\nXML\n  <servlet>\n    <servlet-name>External Order Service Web Application - Rest</servlet-name>\n    <servlet-class>com.company.rest.jersey.JerseyServletContainer</servlet-class>\n    <init-param>\n      <param-name>javax.ws.rs.Application</param-name>\n      <param-value>com.company.MyApplication</param-value>\n    </init-param>\n    <init-param>\n      <param-name>swagger.config.reader</param-name>\n      <param-value>com.company.config.SwaggerConfigReader</param-value>\n    </init-param>\n    <load-on-startup>1</load-on-startup>\n  </servlet>\nWhere Id and CustomerId exist as such \ncom.company.model.Id and com.overstock.company.codes.CustomerId\nStill seems to hang on the swagger-ui generation. \nThanks for your help by the way!\n. Hmmm this what I have and it still doesn't seem to work.\n<dependency>\n  <groupId>com.wordnik</groupId>\n  <artifactId>swagger-jaxrs_2.9.1</artifactId>\n  <scope>compile</scope>\n  <version>1.2.2-SNAPSHOT</version>\n</dependency>\nI opened the MANIFEST file and it didn't have any timestamp with it however other jars in the SNAPSHOT folder have the timestamp 20130319\n. Nice call. \nFixing the javascript of acceptable methods and a hard refresh of the browser's cache fixed the issue.\nThanks\n. ",
    "shinijaQB": "My swaggervel integartion results in response body \n{\"result_code\":500,\"result_title\":\"Server Unreachable\",\"result_string\":\"The server didn't respond. Please try again.\"}\nwhy this happen? please give me a solution.\n. How to i write annotations. Now i written in controller apis. Is it a good\nway?\nOn Wed, Sep 9, 2015 at 4:42 PM, Ron notifications@github.com wrote:\n\n@shinijaQB https://github.com/shinijaQB - swaggervel has nothing to do\nwith this project. If you have an issue with it, please open a ticket on\nthe right repository.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/144#issuecomment-138878063\n.\n. My swaggervel parameters are like this,\n\n@SWG\\Parameter(\n     *             name=\"body\",\n     *             description=\"users details\",\n     *             paramType=\"body\",\n     *              required=true,\n     *              allowMultiple=false,\n     *              type=\"string\",\n     *          ),\nand i created a model schema for it. But when i click on scema datas are\nnot displaying in body. what to do for it?\nOn Wed, Sep 9, 2015 at 6:14 PM, Shinija Kmohandas \nshinijakmohandas804@gmail.com wrote:\n\nHow to i write annotations. Now i written in controller apis. Is it a good\nway?\nOn Wed, Sep 9, 2015 at 4:42 PM, Ron notifications@github.com wrote:\n\n@shinijaQB https://github.com/shinijaQB - swaggervel has nothing to do\nwith this project. If you have an issue with it, please open a ticket on\nthe right repository.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/144#issuecomment-138878063\n.\n. My swaggervel integration for my one controller function work as well.But\nwhen i add swagger resource in next controller it turns to page error What\nis the right method?\n\n\nOn Thu, Sep 10, 2015 at 12:09 PM, Shinija Kmohandas \nshinijakmohandas804@gmail.com wrote:\n\nMy swaggervel parameters are like this,\n@SWG\\Parameter(\n     *             name=\"body\",\n     *             description=\"users details\",\n     *             paramType=\"body\",\n     *              required=true,\n     *              allowMultiple=false,\n     *              type=\"string\",\n     *          ),\nand i created a model schema for it. But when i click on scema datas are\nnot displaying in body. what to do for it?\nOn Wed, Sep 9, 2015 at 6:14 PM, Shinija Kmohandas \nshinijakmohandas804@gmail.com wrote:\n\nHow to i write annotations. Now i written in controller apis. Is it a\ngood way?\nOn Wed, Sep 9, 2015 at 4:42 PM, Ron notifications@github.com wrote:\n\n@shinijaQB https://github.com/shinijaQB - swaggervel has nothing to\ndo with this project. If you have an issue with it, please open a ticket on\nthe right repository.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/144#issuecomment-138878063\n.\n. How can upload image in swaggervel?\n. \n\n\n",
    "etzlers": "I am having the same class cast exception issue but in a different class.\n\n15:27:32.212 [http-bio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Could not complete request\njava.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.TypeVariableImpl cannot be cast to java.lang.Class\n    at com.wordnik.swagger.core.ApiPropertiesReader$.getDataType(ApiPropertiesReader.scala:97) ~[swagger-core_2.9.1-1.2.2.jar:1.2.2]\n    at com.wordnik.swagger.core.ApiPropertiesReader$.getDataType(ApiPropertiesReader.scala:83) ~[swagger-core_2.9.1-1.2.2.jar:1.2.2]\n\nThis is specifically referencing the line below in the ApiPropertiesReader class.\n} else if (!returnType.getClass.isAssignableFrom(classOf[ParameterizedTypeImpl]) && returnType.asInstanceOf[Class[_]].isArray) {\nThis is an issue because generics are necessary for us, it would be great if this could be resolved quickly or if you could possibly offer some workaround as we are big fans of Swagger and would love to use it.\n. I still received the same exception\n16:56:37.600 [http-bio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Could not complete request\njava.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.TypeVariableImpl cannot be cast to java.lang.Class\n    at com.wordnik.swagger.core.ApiPropertiesReader$.getDataType(ApiPropertiesReader.scala:97) ~[swagger-core_2.9.1-1.2.3-SNAPSHOT.jar:1.2.3-SNAPSHOT]\n    at com.wordnik.swagger.core.ApiPropertiesReader$.getDataType(ApiPropertiesReader.scala:83) ~[swagger-core_2.9.1-1.2.3-SNAPSHOT.jar:1.2.3-SNAPSHOT]\n. It's pretty basic but here's what it looks like\n@JsonSerialize\n@JsonInclude(Include.NON_EMPTY)\npublic class PageDTO< T > implements Serializable\n{\n  private static final long serialVersionUID = 1L;\nprivate List< T > content;\n  private Long total;\npublic PageDTO()\n  {\n    content = new ArrayList< T >();\n  }\npublic PageDTO(T element)\n  {\n    content = new ArrayList< T >();\n    total = Long.valueOf(0);\n    if(element != null)\n    {\n      content.add(element);\n      total = Long.valueOf(1);\n    }\n  }\npublic PageDTO(List< T > content, Long total)\n  {\n    this.content = content;\n    this.total = total;\n  }\npublic List< T > getContent()\n  {\n    return content;\n  }\npublic Long getTotal()\n  {\n    return total;\n  }\npublic void setTotal(Long total)\n  {\n    this.total = total;\n  }\npublic void setContent(List< T > content)\n  {\n    this.content = content;\n  }\n}\nSorry for the lack of code tags, I'm still new to the site and I couldn't get the < T > to display when I was using them.\n. We're actually using Spring MVC and this is part of a return value of a GET.\n. Thank you so much!!\n. ",
    "neowulf": "+1\n. ",
    "wkennedy": "Hey there, here is a WAR of a small sample project recreating the issue being seen with the DTO object above.\nhttp://xosis.net/swagger/swagger4springweb-example-1.0.0-BUILD-SNAPSHOT.war\nHere is the source code for the sample project:\nhttp://xosis.net/swagger/swagger4spring-web-example.zip\nHere is the source to the Spring MVC integration being referred to:\nhttps://github.com/wkennedy/swagger4spring-web\nI noticed this error happening when parsing the return type, but that seemed to be resolved in version 1.2.2.  However, this issue appears to happen when I try parsing the model above using ApiModelParser.  I updated to 1.2.3-SNAPSHOT and still noticed this issue happening.  Here is the code from swagger4spring-web where the error occurs (ApiParserImpl.java line 162)\nprivate void createDocumentationSchemas(Documentation documentation) {\n    Reflections reflections = new Reflections(new ConfigurationBuilder()\n            .filterInputsBy(new FilterBuilder().include(FilterBuilder.prefix(baseModelPackage)))\n            .setUrls(ClasspathHelper.forPackage(baseModelPackage))\n            .setScanners(new SubTypesScanner(false), new ResourcesScanner()));\n    Set<Class<? extends Object>> allModelClasses = reflections.getSubTypesOf(Object.class);\n    for (Class<? extends Object> clazz : allModelClasses) {\n        ApiModelParser parser;\n        String schemaName;\n        if (clazz.isArray()) {\n            parser = new ApiModelParser(clazz.getComponentType());\n            schemaName = clazz.getComponentType().getSimpleName();\n        } else {\n            parser = new ApiModelParser(clazz);\n            schemaName = clazz.getSimpleName();\n        }\n        documentation.addModel(schemaName, parser.parse().toDocumentationSchema());\n    }\n}\nLet me know if I can help, thanks!\n. Awesome, Tony! I've confirmed your fix does work.  I'll update swagger4spring-web with version 1.2.3 as soon as it is released. \n. ",
    "doapp-jeremy": "This functionality is greatly needed.\n. ",
    "tomdz": "I have the exact same problem, Swagger generates a lot of extra models for DateTime and related classes, even though we have Jackson serialize it to/deserialize it from a string.\nI was hoping that using the dataType annotation parameter would be sufficient, e.g.\nscala\ncase class ObjectWithDateTime(\n  @BeanProperty val value: String,\n  @ApiProperty(dataType = \"string\")\n  @BeanProperty val created: DateTime\n)\nbut it doesn't seem to do much, I get this in the json:\n\"ObjectWithDateTime\": {\n  \"id\": \"ObjectWithDateTime\", \n  \"properties\": {\n    \"value\": {\n        \"type\": \"string\"\n    }, \n    \"created\": {\n        \"type\": \"DateTime\"\n    }\n  }\n},\nplus lots of model classes related to DateTime:\n\"Chronology\": {\n  \"id\": \"Chronology\", \n  \"properties\": {\n    \"zone\": {\n      \"type\": \"DateTimeZone\"\n    }\n  }\n}, \n\"DateMidnight\": {\n  ...\n},\n...\nDigging into the code a little bit, it seems as if HelpApi.loadModel asks TypeUtil to get all classes referenced by the class and then generates models for them, and TypeUtil is not aware of the annotation.\n. @shawnlauzon Fwiw, for now I've masked out JodaTime classes with this hack in my setup code:\nscala\nApiPropertiesReader.schemaProvider = new SwaggerJsonSchemaProvider {\n  override def read(hostClass: Class[_]): DocumentationObject = {\n    if (hostClass.getPackage.getName.startsWith(\"org.joda.time\")) null\n    else new ApiModelParser(hostClass).parse()\n  }\n}\n. ",
    "bbgara": "Scala IDE for Eclipse 2.0.2.v-2_09-201207120929-81d0972   org.scala-ide.sdt.feature.feature.group scala-ide.org\n. Thanks! that worked. I was running 1.2.0.\n. I was looking for something internal to swagger lib, like a callback (http://stackoverflow.com/questions/7202603/jquery-ajax-jsonp) or  CORS headers\n. ",
    "sharpnk": "Hi, thanks for the reply. Yes, we referenced the 2.10 version for another library.\n. ",
    "deardooley": "Super sweet. Thank you!\n\nRion\n----- Reply message -----\nFrom: \"Tony Tam\" notifications@github.com\nTo: \"wordnik/swagger-core\" swagger-core@noreply.github.com\nCc: \"deardooley\" deardooley@hotmail.com\nSubject: [swagger-core] Syntax for file downloads as data/model type (#162)\nDate: Tue, Jul 2, 2013 12:47 AM\nyou can now specify the the Accept type via @Produces annotation, or in the @ApiOperation(..., produces=\"application/octet-stream\" to tell the client to get a file download.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/wordnik/swagger-core/issues/162#issuecomment-20331410\n. Super sweet. Thank you!\n\nRion\n----- Reply message -----\nFrom: \"Tony Tam\" notifications@github.com\nTo: \"wordnik/swagger-core\" swagger-core@noreply.github.com\nCc: \"deardooley\" deardooley@hotmail.com\nSubject: [swagger-core] Syntax for file downloads as data/model type (#162)\nDate: Tue, Jul 2, 2013 12:47 AM\nyou can now specify the the Accept type via @Produces annotation, or in the @ApiOperation(..., produces=\"application/octet-stream\" to tell the client to get a file download.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/wordnik/swagger-core/issues/162#issuecomment-20331410\n. ",
    "tartakynov": "but that's not gonna work with POST, right?\n. ",
    "caoilte": "Thanks Tony,\nIs the fix easy? I'm doing a swagger integration for an internal demo on Wednesday and I'd love to show it off in the best possible light.\nAlso, your existing sample is more uptodate than\nhttp://www.scalatra.org/2.2/guides/swagger.html\nwhich throws all sorts of deprecated warnings and doesn't generate models correctly.\n. Apologies, I'm confused. In this code, the models aren't annotated at all. Eg,\nhttps://github.com/wordnik/swagger-codegen/blob/master/samples/server-generator/scalatra/output/src/main/scala/com/wordnik/client/model/Pet.scala\nDoesn't have an @ApiProperty. It's hard to see how the following documentation would be generated,\nclass Pet(tags: Array[Tag], id: long, category: Category, status: string = ['available' or 'pending' or 'sold'] {pet status in the store}, name: string, photoUrls: Array[string])\n. Hi,\nApologies for me confusing which project owns which part of this domain.\nAs far as I can tell, although Scalatra does know about the annotations, it only uses them to document parameter objects. It appears to be ignoring the annotations when describing model classes.\nIf that's not the case, then I'm failing to get the sample app (and my own app) working, because they are only documenting parameter objects for me.\n. Apologies,\nI don't think I'm doing a very good job of explaining the subtleties of the problem. It's not about whether or not Scalatra knows about the annotation, it's about whether it uses the annotation to generate model documentation.\nWhen I compile and run \nhttps://github.com/wordnik/swagger-core/tree/master/samples/scala-scalatra/\nand look at the API doc URI for Pet\nhttp://localhost:8080/api-docs/pet\nI don't see description and allowableValues for properties of a model. \nhttps://gist.github.com/caoilte/5241423 \n(sadly not JSON so won't prettify)\nhowever, when i look at the API for the petstore sample\nhttp://petstore.swagger.wordnik.com/api/api-docs.json/pet\nthe pet model has,\nstatus: {\nallowableValues: {\nvalueType: \"LIST\",\nvalues: [\n\"available\",\n\"pending\",\n\"sold\"\n]\n},\ndescription: \"pet status in the store\",\ntype: \"string\"\n},\nI can't get these attributes to generate using Scalatra. It's as if the @JsonProperty annotation is being ignored.\n. Hey Guys,\nI investigated this a little further and sort of got things to half work.\nSo, first of all, there appears to be an idiosyncrasy with case classes which means that annotations only get saved on the constructor. Since scalatra-core reads annotations on methods and fields a preference needs to be expressed when the annotation is declared like so,\n@(ApiProperty @field)\nFurthermore, it appears that scalatra-swagger doesn't read the annotation values that are configured in this sample project. Specifically it reads,\nModelField(field.name, field.notes, DataType(field.paramType))\nThe relevant line is,\nhttps://github.com/scalatra/scalatra/blob/develop/swagger/src/main/scala/org/scalatra/swagger/Swagger.scala#L83\nFrom there you can see that it is only reading the \"notes\" field from the \"documentation parameter\" (which is updated with annotation contents by swagger-core) and then binds that to \"description\". The example on this project assumes that \"value\" maps to description.\nFurthermore, scalatra-swagger doesn't seem to map anything to swagger \"allowed values\" or some other fields, this being the constructor of which only three are used,\ncase class ModelField(name: String,\n                      description: String,\n                      type: DataType.DataType,\n                      defaultValue: Option[String] = None,\n                      enum: List[String] = Nil,\n                      required: Boolean = true)\nTo conclude, I think there's room to improve scalatra-swagger's support for annotations, and once that's been done the sample project here could be updated to work with it.\nShall I raise a ticket on scalatra-swagger? I could have a go at doing a pull request too.\n. Thanks, @fehguy I created a pull request with the necessary scalatra changes here\nhttps://github.com/scalatra/scalatra/pull/267\nFor future reference, is there a good forum for general discussion of swagger? I can't find any mailing list, for example. \n. Hi,\nWe still need to make the annotation in the sample project work.\n@(ApiProperty @field)\nwould work, but in my scalatra pull request, Ivan advised me to create a new scala annotation which wraps that. If we can keep this ticket open until the next Scalatra release (it will be a while - 2.2.1 was this morning) then I'll do a pull request which uses the correct annotation.\n. ",
    "earaya": "@fehguy any interest on this? just wondering...\n. Great! When do you expect 1.3 will be in Maven Central?\n. Awesome! I really appreciate this. Can you post the maven coordinates? I wasn't able to find it in maven central.\nThanks again,\nEsteban\n. What about swagger-jaxrs? I don't see a 1.3.0 snapshot for that. In fact, it seems jaxrs support is back in version 2.8.1. Should I not be using swagger-jaxrs?\n. Man, I'm so sorry to keep bugging you. What happened to JaxrsApiReader.setFormatString()? I can't find anything on why it was removed.\n. Haha. Great! One less line of code for me. :)\n. Do you have an upgrade guide to 1.3.0? Once I switched, there's no data being returned from the documentation endpoint. It finds it, and it just returns {}.\n. ",
    "znbailey": "Would love this!\n. ",
    "tmazukna": "I have created a custom filter which implements SwaggerSpecFilter  to filter out apiParams injected by framework.\npublic class DwSwaggerInternalFilter implements SwaggerSpecFilter {\n```\n@Override\npublic boolean isOperationAllowed(Operation operation, ApiDescription apiDescription, Map> stringListMap, Map stringStringMap, Map> stringListMap2) {\n    return true;\n}\n@Override\npublic boolean isParamAllowed(Parameter parameter, Operation operation, ApiDescription apiDescription, Map> stringListMap, Map stringStringMap, Map> stringListMap2) {\n    if( parameter.paramAccess().isDefined() && parameter.paramAccess().get().equals(\"apiExclude\") )\n        return false;\n    return true;\n}\n```\n}\nMy code runs inside Dropwizard.\nHere is my bundle run:\n```\n@Override\npublic void run(T dwConfiguration, Environment environment) {\n// Set the swagger config options\nSwaggerConfig config = ConfigFactory.config();\nDwSwaggerConfig configuration = findSwaggerConf(dwConfiguration);\nif( configuration != null ) {\n    config.setApiVersion( configuration.getApiVersion() );\n    config.setBasePath( configuration.getBasePath() );\n}\n\n// CORS Support for api-docs\nenvironment.addFilter(CrossOriginFilter.class, \"/*\");\n\n// Swagger Resource\nenvironment.addResource(new ApiListingResourceJSON());\n\n// Swagger providers\nenvironment.addProvider(new ApiDeclarationProvider());\nenvironment.addProvider(new ResourceListingProvider());\n\n// Swagger Scanner, which finds all the resources for @Api Annotations\nScannerFactory.setScanner(new DefaultJaxrsScanner());\n\n// Add the reader, which scans the resources and extracts the resource information\nClassReaders.setReader(new DefaultJaxrsApiReader());\n\n}\n```\nHow do I add my filter into swagger infrastructure?\nThanks!\n. Yes,\nthis is how to do this:\nFilterFactory.filter_$eq( new DwSwaggerInternalFilter() );\nfilter is defined as a property in Scala, but in JAva you see this strange method signature for a setter ;)\nThis is in 2.10 version of swagger.\nI opened a change request with swagger team to fix the api, so later versions may have a proper setter and getter. \nTomas\n. ",
    "peterstrapp": "tmazukna, were you able to figure out how to register a SwaggerSpecFilter within a DropWizard project?\n. Great! Thanks Tomas, that works perfectly.\nPeter\n. ",
    "shalucsekaran": "Thanks Tomas. Your solution worked perfectly... Appreciate you shared the solution....\nShalini\n. ",
    "apemberton": "@fehguy just checking - but should the hidden=true flag also be added to @ApiParam? Or should we continue to write custom filters for those?\n. Tried this to no effect. Is there a certain version of swagger core and swagger ui you need to be on for this?\nSent from my iPhone\n\nOn Apr 21, 2014, at 12:19 AM, Tony Tam notifications@github.com wrote:\nHi, I believe you can now use hidden=true instead of the custom filter. Both should work\n\u2014\nReply to this email directly or view it on GitHub.\n. +1\n. +1 (sad that @emilesvt and I both found and +1'ed this... me on a Friday night, but hey... who's judging?)\n. This is awesome! Which milestone / release is this scheduled for? 1.3.5?\n\nAny target date to ship 1.3.5?\n. Hi Tony: not seeing where the BeanParam scanning is working yet with 1.3.5. When used on a resource method, I don't see the params added. \nWhat's the appropriate way to use this? Is there a sample project?\n. Odd... still seeing them come across as:\nparamType: \"body\"\nStill looking into it.\n. Got it; that was my issue. Given BeanParam isn't a Jersey feature but core to JAX-RS 2.0, was expecting to see it in swagger-jaxrs_2.10, but adding swagger-jersey2-jaxrs_2.10 does the trick.\nNext issue / question I have is with generics. Does the new BeanParam support work for generics?\nFor the following method :\njava\n@ApiOperation(value = \"Search\", response = CollectionResponse.class)\npublic CollectionResponse getMany(@BeanParam CollectionRequest<Search> search)\nI'm getting:\nUNKNOWN TYPE: com.someplace.model.CollectionRequest\njava.lang.ClassNotFoundException: class UNKNOWN[com.someplace.model.Search] not found\n. This is a really big topic, I think. There are many, many ways to version APIs and no clear \"winner\" in the industry.\nCommon ways are: custom media types, URI path parts, custom header values, or query string arguments. \n. :+1: \n. cc @emilesvt\n. ",
    "pofallon": "@fehguy Is hidden=true available in ApiParam now?  I'm on 1.3.10 and don't see it.  Having that option would be much preferred to standing up a servlet filter just for this one feature (especially in JAX-RS deployments that aren't already using servlets -- like those on Grizzly).  \nOr, if that's not an option, is there some guidance on how to deploy a SwaggerSpecFilter as a JAX-RS 2.0 ContainerResponseFilter?  (That would probably be good to know anyway for other uses of \"access\").  Thanks!\n. @fehguy Thanks for the reply!  I did see that mentioned in the thread, but it wasn't entirely obvious how to do this for a JAX-RS 2.0 app that's not using servlets.  I ended up implementing a ContainerResponseFilter (see gist) which appears to work.  However, is it expected that I would need to interact directly with SpecFilter.filter() this way?  Thanks again for your feedback!\n. DefaultJaxrsConfig seems to expect a servlet (which I don't have).  Is there a way to set the swagger.filter property in an environment without any servlets or web.xml?  \nI'm currently initializing Swagger with the following code in my Main.java class:\njava\n        SwaggerConfig swaggerConfig = new SwaggerConfig();\n        ConfigFactory.setConfig(swaggerConfig);\n        swaggerConfig.setSwaggerVersion(\"2.0\");\n        swaggerConfig.setBasePath(BASE_URI);\n        swaggerConfig.setApiVersion(\"1.0.0\");\n        ScannerFactory.setScanner(new DefaultJaxrsScanner());\n        ClassReaders.setReader(new DefaultJaxrsApiReader());\nThanks!\n. ",
    "federecio": "Thanks\n. ",
    "diegovar": "I'm getting the following error when running:\njava.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$com$wordnik$swagger$core$util$TypeUtil$$checkAndAddConcreteObjectType$1.apply(TypeUtil.scala:126)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$com$wordnik$swagger$core$util$TypeUtil$$checkAndAddConcreteObjectType$1.apply(TypeUtil.scala:125)\n      scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\n      scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:105)\n      com.wordnik.swagger.core.util.TypeUtil$.com$wordnik$swagger$core$util$TypeUtil$$checkAndAddConcreteObjectType(TypeUtil.scala:125)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$com$wordnik$swagger$core$util$TypeUtil$$getWordnikParameterTypes$1.apply(TypeUtil.scala:92)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$com$wordnik$swagger$core$util$TypeUtil$$getWordnikParameterTypes$1.apply(TypeUtil.scala:91)\n      scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\n      scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:105)\n      com.wordnik.swagger.core.util.TypeUtil$.com$wordnik$swagger$core$util$TypeUtil$$getWordnikParameterTypes(TypeUtil.scala:91)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$3.apply(TypeUtil.scala:201)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$3.apply(TypeUtil.scala:185)\n      scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\n      scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:105)\n      com.wordnik.swagger.core.util.TypeUtil$.getReferencedClasses(TypeUtil.scala:185)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:212)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:210)\n      scala.collection.Iterator$class.foreach(Iterator.scala:727)\n      scala.collection.AbstractIterator.foreach(Iterator.scala:1157)\n      scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n      scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n      com.wordnik.swagger.core.util.TypeUtil$.getReferencedClasses(TypeUtil.scala:210)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:212)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:210)\n      scala.collection.Iterator$class.foreach(Iterator.scala:727)\n      scala.collection.AbstractIterator.foreach(Iterator.scala:1157)\n      scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n      scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n      com.wordnik.swagger.core.util.TypeUtil$.getReferencedClasses(TypeUtil.scala:210)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:212)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:210)\n      scala.collection.Iterator$class.foreach(Iterator.scala:727)\n      scala.collection.AbstractIterator.foreach(Iterator.scala:1157)\n      scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n      scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n      com.wordnik.swagger.core.util.TypeUtil$.getReferencedClasses(TypeUtil.scala:210)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:212)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:210)\n      scala.collection.Iterator$class.foreach(Iterator.scala:727)\n      scala.collection.AbstractIterator.foreach(Iterator.scala:1157)\n      scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n      scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n      com.wordnik.swagger.core.util.TypeUtil$.getReferencedClasses(TypeUtil.scala:210)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$1.apply(TypeUtil.scala:143)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$1.apply(TypeUtil.scala:142)\n      scala.collection.Iterator$class.foreach(Iterator.scala:727)\n      scala.collection.AbstractIterator.foreach(Iterator.scala:1157)\n      scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n      scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n      com.wordnik.swagger.core.util.TypeUtil$.getReferencedClasses(TypeUtil.scala:142)\n      com.wordnik.swagger.play.HelpApi.loadModel(HelpApi.scala:80)\n      com.wordnik.swagger.play.HelpApi.filterDocs(HelpApi.scala:74)\n      play.modules.swagger.ApiHelpInventory$.play$modules$swagger$ApiHelpInventory$$getResource(ApiHelpInventory.scala:119)\n      play.modules.swagger.ApiHelpInventory$$anonfun$reload$1.apply(ApiHelpInventory.scala:169)\n      play.modules.swagger.ApiHelpInventory$$anonfun$reload$1.apply(ApiHelpInventory.scala:167)\n      scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:102)\n      scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:102)\n      scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)\n      scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)\n      scala.collection.mutable.HashMap$$anon$1.foreach(HashMap.scala:102)\n      play.modules.swagger.ApiHelpInventory$.reload(ApiHelpInventory.scala:167)\n      play.modules.swagger.ApiHelpInventory.reload(ApiHelpInventory.scala)\n      play.modules.swagger.SwaggerPlugin.onStart(SwaggerPlugin.java:30)\nI'm trying to debug to see what the problem is. \n. It appears that one of my models extends a trait that has an implicit val that is causing this error. I am using the Cake Pattern to inject a Json parser wherever needed (the Json4S parsers particularly in this case) and this trait includes a val formats of type org.json4s.Formats. This Formats trait has a companions def that returns List[(Class[_], AnyRef)]. I believe the problem happens when attempting to analyze that def.\nMy big question is: Why is this formats val being analyzed if I didn't mark it as an @BeanProperty? Why are defs even analyzed?\n. How do I run that before Swagger attempts to find the models?\n. I've tried both\nApiPropertiesReader.excludedFieldTypes += \"Formats\"\nand \nApiPropertiesReader.excludedFieldTypes += \"org.json4s.Formats\"\nand I get the same error.\n. After the change, I get this error:\njava.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.WildcardTypeImpl cannot be cast to java.lang.Class\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$com$wordnik$swagger$core$util$TypeUtil$$checkAndAddConcreteObjectType$1.apply(TypeUtil.scala:126)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$com$wordnik$swagger$core$util$TypeUtil$$checkAndAddConcreteObjectType$1.apply(TypeUtil.scala:125)\n      scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\n      scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:105)\n      com.wordnik.swagger.core.util.TypeUtil$.com$wordnik$swagger$core$util$TypeUtil$$checkAndAddConcreteObjectType(TypeUtil.scala:125)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$com$wordnik$swagger$core$util$TypeUtil$$getWordnikParameterTypes$1.apply(TypeUtil.scala:92)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$com$wordnik$swagger$core$util$TypeUtil$$getWordnikParameterTypes$1.apply(TypeUtil.scala:91)\n      scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\n      scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:105)\n      com.wordnik.swagger.core.util.TypeUtil$.com$wordnik$swagger$core$util$TypeUtil$$getWordnikParameterTypes(TypeUtil.scala:91)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$3.apply(TypeUtil.scala:201)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$3.apply(TypeUtil.scala:185)\n      scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\n      scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:105)\n      com.wordnik.swagger.core.util.TypeUtil$.getReferencedClasses(TypeUtil.scala:185)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:212)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:210)\n      scala.collection.Iterator$class.foreach(Iterator.scala:727)\n      scala.collection.AbstractIterator.foreach(Iterator.scala:1157)\n      scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n      scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n      com.wordnik.swagger.core.util.TypeUtil$.getReferencedClasses(TypeUtil.scala:210)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:212)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:210)\n      scala.collection.Iterator$class.foreach(Iterator.scala:727)\n      scala.collection.AbstractIterator.foreach(Iterator.scala:1157)\n      scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n      scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n      com.wordnik.swagger.core.util.TypeUtil$.getReferencedClasses(TypeUtil.scala:210)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:212)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:210)\n      scala.collection.Iterator$class.foreach(Iterator.scala:727)\n      scala.collection.AbstractIterator.foreach(Iterator.scala:1157)\n      scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n      scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n      com.wordnik.swagger.core.util.TypeUtil$.getReferencedClasses(TypeUtil.scala:210)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:212)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$4.apply(TypeUtil.scala:210)\n      scala.collection.Iterator$class.foreach(Iterator.scala:727)\n      scala.collection.AbstractIterator.foreach(Iterator.scala:1157)\n      scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n      scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n      com.wordnik.swagger.core.util.TypeUtil$.getReferencedClasses(TypeUtil.scala:210)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$1.apply(TypeUtil.scala:143)\n      com.wordnik.swagger.core.util.TypeUtil$$anonfun$getReferencedClasses$1.apply(TypeUtil.scala:142)\n      scala.collection.Iterator$class.foreach(Iterator.scala:727)\n      scala.collection.AbstractIterator.foreach(Iterator.scala:1157)\n      scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n      scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n      com.wordnik.swagger.core.util.TypeUtil$.getReferencedClasses(TypeUtil.scala:142)\n      com.wordnik.swagger.play.HelpApi.loadModel(HelpApi.scala:80)\n      com.wordnik.swagger.play.HelpApi.filterDocs(HelpApi.scala:74)\n      play.modules.swagger.ApiHelpInventory$.play$modules$swagger$ApiHelpInventory$$getResource(ApiHelpInventory.scala:119)\n      play.modules.swagger.ApiHelpInventory$$anonfun$reload$1.apply(ApiHelpInventory.scala:169)\n      play.modules.swagger.ApiHelpInventory$$anonfun$reload$1.apply(ApiHelpInventory.scala:167)\n      scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:102)\n      scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:102)\n      scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)\n      scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)\n      scala.collection.mutable.HashMap$$anon$1.foreach(HashMap.scala:102)\n      play.modules.swagger.ApiHelpInventory$.reload(ApiHelpInventory.scala:167)\n      play.modules.swagger.ApiHelpInventory.reload(ApiHelpInventory.scala)\n      play.modules.swagger.SwaggerPlugin.onStart(SwaggerPlugin.java:30)\nThe error now seems to happen on the customSerializers field of the Formats trait:\ndef customSerializers: List[Serializer[_]] = Nil\nSerializer:\ntrait Serializer[A] {\n   def deserialize(implicit format: Formats): PartialFunction[(TypeInfo, JValue), A]\n   def serialize(implicit format: Formats): PartialFunction[Any, JValue]\n }\nwhere\ntype JValue   = org.json4s.JsonAST.JValue\nand \ntype TypeInfo = org.json4s.reflect.TypeInfo\n. I know you said that all fields and defs are processed, but I can't see the actual reason for that, it would be best to just process the fields that are annotated as BeanProperty.\nI'm testing with your new version, will report ASAP.\n. Perhaps you forgot to update one of the jars? I get a NoClassMethodError:\njava.lang.NoSuchMethodError: com.wordnik.swagger.core.util.TypeUtil$.getReferencedClasses(Ljava/util/List;)Ljava/util/Collection;\n      com.wordnik.swagger.play.HelpApi.loadModel(HelpApi.scala:80)\n      com.wordnik.swagger.play.HelpApi.filterDocs(HelpApi.scala:74)\n      play.modules.swagger.ApiHelpInventory$.play$modules$swagger$ApiHelpInventory$$getResource(ApiHelpInventory.scala:119)\n      play.modules.swagger.ApiHelpInventory$$anonfun$reload$1.apply(ApiHelpInventory.scala:169)\n      play.modules.swagger.ApiHelpInventory$$anonfun$reload$1.apply(ApiHelpInventory.scala:167)\n      scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:102)\n      scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:102)\n      scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)\n      scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)\n      scala.collection.mutable.HashMap$$anon$1.foreach(HashMap.scala:102)\n      play.modules.swagger.ApiHelpInventory$.reload(ApiHelpInventory.scala:167)\n      play.modules.swagger.ApiHelpInventory.reload(ApiHelpInventory.scala)\n      play.modules.swagger.SwaggerPlugin.onStart(SwaggerPlugin.java:30)\n. I did that already, deleted the com.wordnik directory in .ivy2/cache (I use\nsbt, not play).\nOn Thu, Apr 18, 2013 at 12:33 PM, Tony Tam notifications@github.com wrote:\n\nCan you clear your play repository cache?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/170#issuecomment-16583732\n.\n. Ok this last push was a big step forward! Now I do get the dashboard and the models are explained correctly. Thanks!\n\nSome issues I see:\n1) One of the fields in one of my models is\nlimit: Option[Int] = None\nand in the Model Schema it appears as limit: Object. That's a bug right?\n2) I also get a large number of INFO and ERROR logs that are a bit annoying, they include:\nOne of these for each model that I have, is it really necessary to add that attribute to each model?:\nINFO c.w.s.j.ApiModelParser - Class com.mycompany.House is not annotated with a @XmlRootElement annotation, using SnapshotAsset\nOne of these for each class of a property in my models that don't have @BeanProperty attribute. Even for classes of fields that are marked as XmlTransitive:\n```\nERROR c.w.s.p.HelpApi - Skipping model org.json4s.reflect.package$ParameterNameReader. Did not find any public fields or bean-properties in this model. If its a scala class its fields might not have @BeanProperty annotation added to its fields.\nERROR c.w.s.p.HelpApi - Skipping model com.mycompany.ValidationResult. Did not find any public fields or bean-properties in this model. If its a scala class its fields might not have @BeanProperty annotation added to its fields.\n```\nI get these 2, no idea why:\nERROR c.w.s.p.HelpApi - Unable to resolve class double\nERROR c.w.s.p.HelpApi - Unable to resolve class float\n. Are you using a specific logger name for your classes? I'd like to only log Error statements from Swagger on my logs.\n. Yeah it works I guess, thanks for the explanation! Let me know when you have more news on the logging statements, I can't properly include swagger with all those log statements (I'd like to turn them off).\n. I'm not being able to restrict Swagger 1.2.3 from logging absolutely everything. Tried that logger.swagger line in the conf file, using a logback configuration xml file like so:\n<logger name=\"swagger\" level=\"ERROR\"></logger>\n, and nothing works. I really need to be able to restrict swagger's logs from polluting my app as swagger is a secondary metafeature and thus its log level should be easily configurable. I couldn't find the commit where you say the logger's scope was changed.\n. I forgot to mention I'm using version 1.2.4 of swaggee-play.\n. ",
    "hjz": "This does not work with swagger-play 1.2.5\n. Looks like there are multiple swagger loggers, perhaps not linked together. Here's a solution that goes in Global.scala:\nscala\noverride def onStart(app: Application) {\n    val lf = org.slf4j.LoggerFactory.getILoggerFactory.asInstanceOf[LoggerContext]\n    lf.getLoggerList.foreach { l =>\n      if (l.getName.contains(\"swagger\")) {\n        l.setLevel(Level.OFF)\n      }\n    }\n}\n\nList of loggers affected:\ncom.wordnik.swagger\ncom.wordnik.swagger.core\ncom.wordnik.swagger.core.ApiSpecParserTrait\ncom.wordnik.swagger.core.BaseApiParser\ncom.wordnik.swagger.core.SwaggerContext\ncom.wordnik.swagger.core.util\ncom.wordnik.swagger.core.util.TypeUtil\ncom.wordnik.swagger.core.util.TypeUtil$\ncom.wordnik.swagger.jsonschema\ncom.wordnik.swagger.jsonschema.ApiModelParser\ncom.wordnik.swagger.play\ncom.wordnik.swagger.play.HelpApi\nswagger\n. ",
    "sizovs": "Hi Fehguy\nThanks - the plugin works perfectly well.\n. ",
    "jansohn": "Any chance this will be supported in the future?\n@fehguy : Your answer on Stackoverflow suggested \n\n...it may be fairly easy to implement.\n. \n",
    "chrisinmtown": "I understand that Swagger cannot read my mind for the multi-value map.  But I'd be glad to add arguments to the annotation, whatever helps.  Is this simply a dead-end road?  Those of us with flexible search interfaces still would like to document them ... Please forgive my ignorance, what's OAS 3.0 and where would I file that new ticket?. @webron I followed your suggestion and opened #2721 . ",
    "hlassiege": "Hi,\nI'm using Swagger 2.9.1 with jersey :\n<dependency>\n        <groupId>com.wordnik</groupId>\n        <artifactId>swagger-jaxrs_2.9.1</artifactId>\n        <version>1.2.1</version>\n        <scope>compile</scope>\n    </dependency>\n. ",
    "klausmyrseth": "Scala is not an option for me at all.\nJust to illustrate the size of this thing. 1 of the 37 master systems alone got 16000 soap calls, were binding all the systems into a common api with a common domain.\nTo redo this Idd need a team of 20 for a year hehe.\n. {} are illegal on resource level but valid on operations level.\nThat is my only beef with core. Swagger ui I got working with full XML support by just detecting and misusing jquery XML2json :)\nMost back end systems run soap which we proxy and transform to a massive API based on rest hateos, just need a live documentation system we can limit doc nodes based on security to make it easy to use.\n. Tested with 1.2.3-SNAPSHOT\nSame result as 1.2.1 - Was too quick with my first comment.\nExample exceptions, I know why its happening. UriBuilder expects to get its path variables set, there is however a trix that might work using {customerId} and so on as the path param when getting the uri.\n2013-04-23 10:21:42.131:WARN::/api/api-docs/customer/{customerId}/agreement/{agreementId}/unlinked-software\njava.lang.IllegalArgumentException: Illegal character in path at index 44: http://localhost:8082/api/api-docs/customer/{customerId}/agreement/{agreementId}/unlinked-software\n    at java.net.URI.create(URI.java:859)\n    at javax.ws.rs.core.UriBuilder.fromUri(UriBuilder.java:95)\n2013-04-23 10:21:41.939:WARN::/api/api-docs/customer/{customerId}/agreement/{agreementId}/agreement-detail/{agreementDetailId}/software-per-agreement-detail\njava.lang.IllegalArgumentException: Illegal character in path at index 44: http://localhost:8082/api/api-docs/customer/{customerId}/agreement/{agreementId}/agreement-detail/{agreementDetailId}/software-per-agreement-detail\n    at java.net.URI.create(URI.java:859)\n    at javax.ws.rs.core.UriBuilder.fromUri(UriBuilder.java:95)\n2013-04-23 10:21:42.067:WARN::/api/api-docs/provisioning/config/device-model/{deviceModelId}\njava.lang.IllegalArgumentException: Illegal character in path at index 68: http://localhost:8082/api/api-docs/provisioning/config/device-model/{deviceModelId}\n    at java.net.URI.create(URI.java:859)\n    at javax.ws.rs.core.UriBuilder.fromUri(UriBuilder.java:95)\nI get the ApiDocumentation out but when trying to go to the operation link these exceptions come for some operations.\n. ",
    "ddragosd": "+1 on this one. I was looking over the bugs to see if we should do a pull request with this issue.\n. Thanks. Does this mean you have an ongoing work, or should I implement it and make a pull request afterwards into the master branch, and then transition that to 1.3 branch ? \n. I've tried creating a pull request only with bd1b2d1 commit but couldn't make it. I'll investigate more how to make it happen.  In the mean-while I'd also like to check that this works with scala 2.10.0 as well.\n. It is fixed, it is working, but it is not integrated back into the scala_2.10.0 branch as of now. \nFor Jersey2 you'd have to use swagger-jersey2-jaxrs module.\n. This can be achieved with maven-bundle-plugin:\n<plugin>\n                <groupId>org.apache.felix</groupId>\n                <artifactId>maven-bundle-plugin</artifactId>\n                <version>1.4.0</version>\n                <extensions>true</extensions>\n                <configuration>\n                    <instructions>\n                        <Bundle-SymbolicName>\n                            ${pom.artifactId}\n                        </Bundle-SymbolicName>\n                        <Export-Package>\n                            scala*, <!-- unless you have scala already exposed -->\n                            org.scalastuff.scalabeans.*,\n                            com.thoughtworks.paranamer,\n                            com.wordnik.swagger.*;version=1.2.1,\n                            com.sun.jersey.multipart.*;version=1.13,\n                            com.fasterxml.*,\n                            com.fasterxml.jackson.module.scala.*\n                        </Export-Package>\n                    </instructions>\n                </configuration>\n            </plugin>\nIt would be nice though to have it as part of swagger-core. \n. This is just an example using maven-bundle-plugin, and it works with Jersey. If you don't use Jersey you may only need to expose a subset of these packages. \n. +1 in making the swagger bundles OSGI compatible.\nBesides this, once you move into OSGI you also need to reset Swagger cache when you know you have deployed a new Resource.  This is something that's not OOTB and it depends on the particular implementation. For this reason I'd also add an integration-test with Apache Felix or Apache Karaf to show how to implement Swagger with OSGI.\nWDYT ?\n. In which branch should we contribute this ? 1.3-RC3 or master or another one ?\n. For now I've added OSGI support in the scala_2.10.0 branch from my fork, until we decide in which branch we should push the code. I've chosen scala_2.10.0 branch as scala 2.10 comes with OSGI support OOTB. ( using scala 2.9.1 involves some extra export packages and the solution is not that clean ).\n@fehguy how is the roadmap for scala support in the master branch ? Are there any plans to have 2.10 supported as default ? \n. \"...RC3 on 2.10 was just pushed to maven central last night...\" -> from scala_2.10 branch or from another one ?\n. Closing this pull request too as I think I had been working on a forked branch that was not up to date.\n. Closing it as \"master\" branch wasn't the target of this pull request.\n. I'm curious if you've tried adding a leading slash \"/\" to your path  and\nsee if you get the same results.\nOn Tue, Oct 22, 2013 at 12:21 PM, Eric Miles notifications@github.comwrote:\n\nWe are using Jersey 2.3.1 with Swagger 1.3.0 and the\ncom.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig servlet. We have\nResources that locate sub-resources by returning the Class<?> and these\nsubresources don't appear in the api-docs call nor in the root resource\ncall. For Instance:\n@Path(\"accounts\")@Api(value = \"accounts\")public class AccountsResource {...@Path(\"transactions\")public Class getTransactionResource() {return TransactionsResource.class;}}\n@Api(\"\")public class TransactionsResource {...}\nSwagger has nothing about the transactions path at all.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/358\n.\n. You know, in my code I use them in both places\n\nOn Tue, Oct 22, 2013 at 1:02 PM, Eric Miles notifications@github.comwrote:\n\nTo the @Api or the @Path https://github.com/Path?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/358#issuecomment-26839248\n.\n. It's the scala version (2.9.1) or (2.10.0) that swagger was compiled with.\n\nOn Wed, Oct 30, 2013 at 6:21 AM, filip26 notifications@github.com wrote:\n\nI'm confused, version is part of artifact id and also there is natural\nversion. What's the difference between swagger 2.10.0 and 2.9.1? Why there\nis version 1.3.0 for 2.9.1 but not for 2.10.0? Which artifact/version I\nshould choose and why? Thank you.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/365\n.\n. \n",
    "mayorbyrne": "I'm hand-coding the spec files, and using swagger-ui to view them.  I might have the syntax incorrect.\nIf I have a parameter, and add the line below, should it work?  Right now it is blank, and I must select \"false.\"\n\"defaultValue\": false\nI might add that for a string type, the \"defaultValue\" will set correctly.\n. ",
    "childnode": ":information_source: \n```\n # ...\n  properties:\n    propname:\n      type: boolean\n      default: true\n# ...\n```\nwill lead to Boolean propname = null in codegen 2.1.4\nwill lead to Boolean propname = true in codegen 2.2.1\nso, fixed anywhere between and not (only) a ui bug ... or did I missed/misunderstood anything in this old issue?! anyway .. ;)\n. oh, no, I'm talking about swagger codegen and the java code in question that has been generated faulty ... but yes: wrong project .. swagger-core is not swagger-codegen but I think: some way releated each other\n. ",
    "gaffa": "+1\n. +1\n. jax-rs it is. the rest of our application is spring but spring-swagger has no support for files at all...\ni can provide you with the complete example project if it helps...\n. jax-rs it is. the rest of our application is spring but spring-swagger has no support for files at all...\ni can provide you with the complete example project if it helps...\n. https://www.dropbox.com/s/zkt41oc7bg7yqqo/swagger-jaxrs.zip\n. https://www.dropbox.com/s/zkt41oc7bg7yqqo/swagger-jaxrs.zip\n. Wow. Thanks a lot! So it was not a bug but me. Thank you for your time!\nI have another problem now. Its the Translation-object. swagger-ui will not insert the model when I click \"click to set as parameter value\" and when I enter the value myself I will get \n``` exception\nHTTP Status 500 - com.sun.jersey.server.impl.model.parameter.multivalued.ExtractorContainerException: Error unmarshalling JAXB object of type \"class foo.Translation\"\n...\njavax.xml.bind.UnmarshalException\n             - with linked exception:\n            [org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content ist nicht zul\u00e4ssig in Prolog.]\n(\"Content not allowed in prolog.\").\n```\nAs you were already so nice and had a look at my code: would you mind having a look at that?\nMy Service at the moment looks like this:\n`` java\n@POST\n@Path(\"/test\")\n@Consumes(MediaType.MULTIPART_FORM_DATA)\n@Produces(MediaType.APPLICATION_JSON)\n@ApiOperation(\"test\")\npublic Response test(\n        @ApiParam(required = true) @FormDataParam(\"translation\") Translation translation){\n    return null;\n}\n\n@POST\n@Path(\"/translation\")\n@Consumes(MediaType.MULTIPART_FORM_DATA)\n@Produces(MediaType.APPLICATION_JSON)\n@ApiOperation(\"submit\")\npublic Response uploadTranslation(\n        @FormDataParam(\"comment\") String comment,\n        //@ApiParam(required = true) @FormDataParam(\"translation\") Translation translation,\n        @FormDataParam(\"sourceDocument\") InputStream sourceDocument,\n        @FormDataParam(\"sourceDocument\") FormDataContentDisposition sourceDocumentData,\n        @FormDataParam(\"additionalContent\") InputStream additionalContent,\n        @FormDataParam(\"additionalContent\") FormDataContentDisposition additionalContentData) {\n    return null;\n}\n\n```\nAs it is I can use the method submit (without translation object). By the way: I was so happy when I ran into the breakpoint :). But not the other method. \nI am not sure if you noticed but swagger-ui is included in my project and mapped under /. I modified the index to directly navigate to the service. So if you start the webapp on 8080 and open a browser on http://localhost:8080 you should see swagger-ui. So if you want to try it yourself you can just give it a go with hopefully no additional configuration needs.\nAgain I am very grateful for your support.\nRegards!\n. Wow. Thanks a lot! So it was not a bug but me. Thank you for your time!\nI have another problem now. Its the Translation-object. swagger-ui will not insert the model when I click \"click to set as parameter value\" and when I enter the value myself I will get \n``` exception\nHTTP Status 500 - com.sun.jersey.server.impl.model.parameter.multivalued.ExtractorContainerException: Error unmarshalling JAXB object of type \"class foo.Translation\"\n...\njavax.xml.bind.UnmarshalException\n             - with linked exception:\n            [org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content ist nicht zul\u00e4ssig in Prolog.]\n(\"Content not allowed in prolog.\").\n```\nAs you were already so nice and had a look at my code: would you mind having a look at that?\nMy Service at the moment looks like this:\n`` java\n@POST\n@Path(\"/test\")\n@Consumes(MediaType.MULTIPART_FORM_DATA)\n@Produces(MediaType.APPLICATION_JSON)\n@ApiOperation(\"test\")\npublic Response test(\n        @ApiParam(required = true) @FormDataParam(\"translation\") Translation translation){\n    return null;\n}\n\n@POST\n@Path(\"/translation\")\n@Consumes(MediaType.MULTIPART_FORM_DATA)\n@Produces(MediaType.APPLICATION_JSON)\n@ApiOperation(\"submit\")\npublic Response uploadTranslation(\n        @FormDataParam(\"comment\") String comment,\n        //@ApiParam(required = true) @FormDataParam(\"translation\") Translation translation,\n        @FormDataParam(\"sourceDocument\") InputStream sourceDocument,\n        @FormDataParam(\"sourceDocument\") FormDataContentDisposition sourceDocumentData,\n        @FormDataParam(\"additionalContent\") InputStream additionalContent,\n        @FormDataParam(\"additionalContent\") FormDataContentDisposition additionalContentData) {\n    return null;\n}\n\n```\nAs it is I can use the method submit (without translation object). By the way: I was so happy when I ran into the breakpoint :). But not the other method. \nI am not sure if you noticed but swagger-ui is included in my project and mapped under /. I modified the index to directly navigate to the service. So if you start the webapp on 8080 and open a browser on http://localhost:8080 you should see swagger-ui. So if you want to try it yourself you can just give it a go with hopefully no additional configuration needs.\nAgain I am very grateful for your support.\nRegards!\n. Hi again!\nFirst of all I mainly wanted to point at the fact that swagger-ui\u00b4s \"click to set as parameter value\" - Feature does not work in this case (tried with chrome and firefox). I have included a unit-test in the zip to illustrate a client that would consume my service. Also I have added a form under /form.html which does (pretty much) the same. As you can see everything is working fine. For the Form I needed to add a provider (TranslationDeserializer) which is pretty much what you pointed at.\nhttps://www.dropbox.com/s/zkt41oc7bg7yqqo/swagger-jaxrs.zip\nIt now works from swagger-ui as well. The only thing I need to fix at this point is that swagger-ui does not insert the model into the text field...\n. Hi again!\nFirst of all I mainly wanted to point at the fact that swagger-ui\u00b4s \"click to set as parameter value\" - Feature does not work in this case (tried with chrome and firefox). I have included a unit-test in the zip to illustrate a client that would consume my service. Also I have added a form under /form.html which does (pretty much) the same. As you can see everything is working fine. For the Form I needed to add a provider (TranslationDeserializer) which is pretty much what you pointed at.\nhttps://www.dropbox.com/s/zkt41oc7bg7yqqo/swagger-jaxrs.zip\nIt now works from swagger-ui as well. The only thing I need to fix at this point is that swagger-ui does not insert the model into the text field...\n. To illustrate it less complex:\nThese methods:\n``` java\n    @POST\n    @Path(\"/works\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    @ApiOperation(\"working\")\n    public String working(@ApiParam(\"translation\") Translation translation){\n        return new Gson().toJson(translation);\n    }\n@POST\n@Path(\"/oops\")\n@Consumes(MediaType.APPLICATION_JSON)\n@ApiOperation(\"oops\")\npublic String oops(@ApiParam(\"translation\") @FormParam(\"translation\") Translation translation){\n    return new Gson().toJson(translation);\n}\n\n```\nresult in swagger-ui:\n\nAs you can see in \"oops\" its single-line and also the model does not get copied into the input when i click the link that says so. Shall I open another issue in swagger-ui?\n. To illustrate it less complex:\nThese methods:\n``` java\n    @POST\n    @Path(\"/works\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    @ApiOperation(\"working\")\n    public String working(@ApiParam(\"translation\") Translation translation){\n        return new Gson().toJson(translation);\n    }\n@POST\n@Path(\"/oops\")\n@Consumes(MediaType.APPLICATION_JSON)\n@ApiOperation(\"oops\")\npublic String oops(@ApiParam(\"translation\") @FormParam(\"translation\") Translation translation){\n    return new Gson().toJson(translation);\n}\n\n```\nresult in swagger-ui:\n\nAs you can see in \"oops\" its single-line and also the model does not get copied into the input when i click the link that says so. Shall I open another issue in swagger-ui?\n. I will open a bug in swagger-ui and close this issue. Thanks again!\n. I will open a bug in swagger-ui and close this issue. Thanks again!\n. Hi David!\nOf course I can provide you with example code. I think something went wrong when I submitted the bug as I clearly entered more information...\n``` java\n@Path(\"/{translationId}/content\")\n@GET\n@Produces({ \"application/zip\", MediaType.APPLICATION_XML })\n@ApiOperation(notes = \"Gets the content of a translation (optionally zip compressed)\", value = \"getContent\", responseClass = \"byte[]\")\n@ApiErrors({ @ApiError(code = 404, reason = \"translation with given id is not known\"), @ApiError(code = 204, reason = \"corresponding translation request is not finished\") })\npublic Response getContent(\n        @ApiParam(value = \"id of translation\", required = true) @PathParam(\"translationId\") Integer translationId,\n        @ApiParam(required = false, value = \"contract id\") String contractId,\n        @Context HttpServletRequest request) {\n\n    String requestedMimeType = request.getHeader(\"accept\");\n    byte[] content = \"foo\".getBytes();\n\n    return Response.ok(content, requestedMimeType)\n\n```\nresults in: \n``` json\n{\n        \"path\": \"/translation/{translationId}/content\",\n        \"description\": \"RESTful API for translations\",\n        \"operations\": [\n            {\n                \"httpMethod\": \"GET\",\n                \"summary\": \"getContent\",\n                \"notes\": \"Gets the content of a translation (optionally zip compressed)\",\n                \"responseClass\": \"byte[]\",\n                \"nickname\": \"getContent\",\n                \"parameters\": [\n                    {\n                        \"name\": \"translationId\",\n                        \"description\": \"id of translation\",\n                        \"paramType\": \"path\",\n                        \"required\": true,\n                        \"allowMultiple\": false,\n                        \"dataType\": \"int\"\n                    },\n                    {\n                        \"description\": \"contract id\",\n                        \"paramType\": \"body\",\n                        \"required\": false,\n                        \"allowMultiple\": false,\n                        \"dataType\": \"string\"\n                    }\n                ],\n                \"errorResponses\": [\n                    {\n                        \"code\": 404,\n                        \"reason\": \"translation with given id is not known\"\n                    },\n                    {\n                        \"code\": 204,\n                        \"reason\": \"corresponding translation request is not finished\"\n                    }\n                ]\n            }\n        ]\n    }\n```\nwhich gives me this in swagger-ui:\n\n. Hi!\nThank you. For some reasons we had to migrate to spring anyway. So I cannot try this any more :(\nRegards!\n. i am sorry. i opened this here by mistake. it clearly has to go into swagger-ui.\n. Also: having the core-core scala-free would get you a lot more contributions, love and the branches would be more easy to maintain. I would even suggest moving the framework-adapters to separate projects. I really feel like its a bad idea having scala in a library! That also causes deployable artifacts to grow a lot. Scala version mismatches for scala consumers are not nice aso aso. \n. ",
    "leewin12": "Soooooo great!! Thanks alot!!\n. ",
    "raspacorp": "So, what happened to the responseContainer = \"List\" inside @ApiResponse I am using swagger-jersey2-jaxrs_2.10 version 1.3.5 and the annotation does not support it. I need to return a list of domain objects\n. Ah ok, I got confused as in this post they mention it. A question, then how do we set a list of objects as the response to an @ApiResponse annotation?\n. I was able to remove some dependencies and reduced almost 19MB of size, so far the api-docs is working fine, however I will keep testing. This is the dependency with the exclusions (scalap has transitive dependencies so when removed it also removes scala-compiler and scala-reflect):\n<dependency>\n        <groupId>com.wordnik</groupId>\n        <artifactId>swagger-jersey2-jaxrs_2.10</artifactId>\n        <version>${swagger-jersey.version}</version>\n        <exclusions>\n            <exclusion>\n                <artifactId>jackson-module-scala_2.10</artifactId>\n                <groupId>com.fasterxml.jackson.module</groupId>\n            </exclusion>\n            <exclusion>\n                <artifactId>scalap</artifactId>\n                <groupId>org.scala-lang</groupId>\n            </exclusion>\n        </exclusions>\n    </dependency>\n. Almost one month using it with removed dependencies and everything seems to work well, with a small API with 20 operations with GET, PUT, POST and DELETE methods. I will close the issue.\n. ",
    "zhouxuan323": "use extend Response?\n```java\npublic static class UserResponse extends Response {\n        @Override\n        public User getResult() {\n            return super.getResult();\n        }\n    @Override\n    public void setResult(User result) {\n        super.setResult(result);\n    }\n}\n\n```. ",
    "kmadel": "Swagger-ui doesn't appear to support @FormParam or @FormDataParam for anything besides InputStream or rather, does not support POJOs.\n. Just wondering why this was closed? Will there be support for generic types for responses?\n. ",
    "school-coder": "what is the status of this issue. any reference to the bug created ? I am using swagger-annotation 1.5.3. I am not able to use both FormParam and FormDataParam.\n. ",
    "annikulin": "Yes, separating jars from lib folder of the server to WEB-INF/lib of every application has helped. \nThanks a lot!\n. I use JAX-RS annotation and RESTeasy as a framework. My class looks like these:\n@Path(\"/strategies\")\n@Api(value = \"/strategies\", description = \"REST binding for Strategy Service, which helps to connect/disconnect to different strategies\")\npublic class StrategyServiceBean implements StrategyService {\n@GET\n@Path(\"/getBrokerServers\")\n@Produces(MediaType.APPLICATION_JSON)\n@ApiOperation(value = \"Returns names of all available broker servers\", responseClass = \"string\", multiValueResponse = true)\n@Override\npublic List getBrokerServers() {\n...\n}\n@GET\n@Path(\"/getAllSymbols\")\n@Produces(MediaType.APPLICATION_JSON)\n@ApiOperation(value = \"Returns all symbols which are available at this moment\", responseClass = \"string\", multiValueResponse = true)\n@ApiErrors(value = { @ApiError(code = 400, reason = \"Bad Request\") })\n@Override\npublic List getAllSymbols() {\n...\n}\n@GET\n@Path(\"/getAllSymbolsByUser/{username}\")\n@Produces(MediaType.APPLICATION_JSON)\n@ApiOperation(value = \"Returns all symbols which are used by specified user\", notes = \"It is necessary specified user to be connected to some broker server, otherwise method will return an empty list\", responseClass = \"String\", multiValueResponse = true)\n@Override\npublic List getAllSymbolsByUser(\n@ApiParam(value = \"Username\", required = true) @PathParam(\"username\") String username) {\n...\n}\n@POST\n@Path(\"/connectToStrategy\")\n@Produces(MediaType.APPLICATION_JSON)\n@ApiErrors(value = { @ApiError(code = 400, reason = \"Bad Request\") })\n@ApiOperation(value = \"Connects to MT4 terminal and initializes strategy based on EURUSD symbol\", responseClass = \"com.magick.metaConnector.model.param.ExecutionResult\")\n@Override\npublic ExecutionResult connectToStrategy(\n@ApiParam(value = \"Connection Parameters\", required = true) ConnectionParams params) {\n...\n}\n...\n}\nIt's some methods with annotations, they are located in such order in class, but in documentation i see such order:\n- connectToStrategy\n- getAllSymbols\n- getAllSymbolsByUser\n- getBrokerServers\nThanks, Anton\n. Ok, thanks a lot. \n. Thanks a lot!\n. Yes, i looked through it and used it recently. The problem is that when we define resource class as Application, RESTeasy creates new object of this class, but i do want to use already created. When i define my JAX-RS class in  resteasy.resources context parameter, it doesn't create new instance, but uses an existed one.\nIs there any way to separate Swagger interface with annotations in another class or interface or to configure it a little bit different?\nThanks, Anton\n. Yes, i looked through it and used it recently. The problem is that when we define resource class as Application, RESTeasy creates new object of this class, but i do want to use already created. When i define my JAX-RS class in  resteasy.resources context parameter, it doesn't create new instance, but uses an existed one.\nIs there any way to separate Swagger interface with annotations in another class or interface or to configure it a little bit different?\nThanks, Anton\n. ",
    "jduprey": "It didn't work for me. May I provide you with the smallest working example?  What I have now is pretty small, but I'll cut it down some more..\n. ",
    "rrjp": "That is still in the web.xml. Here is what I have:\n```\n\nJersey REST Service\ncom.sun.jersey.spi.container.servlet.ServletContainer\n\ncom.sun.jersey.config.property.packages\ncom.mycompany.myapi;com.wordnik.swagger.jaxrs.listing\n\n\nswagger.api.basepath\nhttps://localhost:8080\n\n\napi.version\n1.0\n\n1\n\n```\nINFO: Deploying web application archive /usr/local/apache-tomcat-7.0.37/webapps/MyApi.war\nJun 7, 2013 7:53:51 PM com.sun.jersey.api.core.PackagesResourceConfig init\nINFO: Scanning for root resource and provider classes in the packages:\n  com.mycompany.myapi\n  com.wordnik.swagger.jaxrs.listing\nJun 7, 2013 7:53:51 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses\nINFO: Root resource classes found:\n  class com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON\n  class com.mycompany.myapi.MyApi\nJun 7, 2013 7:53:51 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses\nINFO: Provider classes found:\n  class com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider\n  class com.wordnik.swagger.jaxrs.listing.ResourceListingProvider\nJun 7, 2013 7:53:51 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate\nINFO: Initiating Jersey application, version 'Jersey: 1.14 09/09/2012 05:39 PM'\n. Yeah, that's the bizarre part. The only thing I changed in the code was to change lines like\n@ApiOperation(value = \"Returns the server configuration details.\", responseClass = \"com.whatever.ArrayResponse\")\nto be like:\n@ApiOperation(value = \"Returns the server configuration details.\", response = ArrayResponse.class)\nso that it would compile without errors. So, now it looks like:\n@Path(\"/\")\n@Api(value = \"/MyApi\", description = \"Endpoint for MyApi\")\n@Produces({\"application/json\"})\npublic class MyApi {\n...\n    @GET\n    @Path(\"/configuration\") \n    @ApiOperation(value = \"Returns the server configuration details.\", response = ArrayResponse.class)\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getConfiguration() {\n        return new MyResponseBuilder(AdapterFactory.getConfiguration(), null).build();\n    }\n}\nI'm not sure what else to try. \n. Yup, that was it! Now I have the API returning correct JSON and Swagger returning correct JSON and Swagger UI also showing the correct docs for the API. \nThanks for all the help!\n. ",
    "arminbhy": "Awesome, switching to 1.2.4-SNAPSHOT fixed the issue! Thanks!\n. Great thanks!\n. I agree, that makes sense. \n. I was wondering if there is a plan to provide annotations and information in regards to deprecated methods, maybe something like @ApiDeprecated in addition to @ApiResponses?\n. Awesome! Thanks, didn't see anything in the documents so I figured I ask here.\n. Awesome, thanks!\n. ",
    "steowens": "Per the definitive work on Rest API design the application media types should be used in content type and accept headers.  For example: http://my.safaribooksonline.com/book/-/9781449317904/4dot-metadata-design/id2835424\nIn this case the content type and content format are supplied to the server via the aforementioned format.  The server will reject inappropriate content types with a 415.  Doesn't swagger support REST?\n. Having no particular desire for religious war about Rest I went back to the HTTP specification.  And per that spec, it would seem that accept-extensions which is what the \"; model=bla\"  would be considered to be seem to be properly supported by the version of swagger-ui I am using at least.  Now the spec makes no mention of extensions on the Content-type header in the section that describes this header (there are indirect references to media type etc) but nothing specifically calls out being able to supply content-extensions in the same way as one can call out accept-extensions.  So I suppose that it is in keeping with the spec.\nIt would be nice however if it were possible to control the content-type header to support extensions even if they are not called out explicitly in the spec.  It seems to me for the sake of symmetry they ought to be.\n. I am running up against the same thing.  Adding swagger breaks my perfectly good service thanks to it's dependencies on out dated JSR-311 implementations.\nCaused by: java.lang.NoSuchMethodError: javax.ws.rs.core.Response.hasEntity()Z\n    at org.apache.cxf.jaxrs.utils.ExceptionUtils.convertFaultToResponse(ExceptionUtils.java:67)\n    at org.apache.cxf.jaxrs.utils.JAXRSUtils.convertFaultToResponse(JAXRSUtils.java:1516)\n    at org.apache.cxf.jaxrs.JAXRSInvoker.handleFault(JAXRSInvoker.java:320)\n    at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:214)\n    at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:101)\n    at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:58)\n    at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:94)\n    at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272)\n    at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)\n    at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:241)\n    at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:248)\n    at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:222)\n    at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:153)\n    at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:171)\n    at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:286)\n    at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:206)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:647)\n    at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:262)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)\n. I managed to fix the problem.  In my case I am using JSR-339, and all of the features that it entails.  Swagger pulls in a compile time dependency on JSR-311.  By adding an exclude for the compile time dendency to the swagger dependency I was able to resolve my issue.\n. The issue was apparently one of not having the response to the request provide all of the needed CORS headers.\n. I use Apache CXF JaxRS.  I have tried http://localhost:9095/swagger.json   and I have tried http://localhost:9095/api/swagger.json.\nI have tried updating my config to:\n```\n     Swagger \n\n<bean id=\"beanConfig\" class=\"io.swagger.jaxrs.config.BeanConfig\">\n    <property name=\"title\" value=\"Key Management Service\"/>\n    <property name=\"version\" value=\"0.0.1\" />\n    <property name=\"schemes\" value=\"http\" />\n    <property name=\"host\" value=\"${env.kmsService.baseUrl:http://localhost:9095/api}\" />\n    <property name=\"basePath\" value=\"/api\"/>\n    <property name=\"resourcePackage\" value=\"com.foo.kms\"/>\n    <property name=\"scan\" value=\"true\"/>\n</bean> \n<!-- End Swager -->\n\n<bean id=\"KMSKeystore\" class=\"com.foo.kms.logic.KMSKeystore\"/>\n\n<bean id=\"kmsServiceBean\" class=\"com.foo.kms.api.KeysService\">\n    <constructor-arg index=\"0\" value=\"${env.authzClientId.attributeName:AUTHZ_CLIENT_ID}\"/>\n    <constructor-arg index=\"1\" ref=\"KMSKeystore\"/>\n</bean>\n<bean id=\"statusServiceBean\" class=\"com.foo.kms.api.StatusService\"/>\n\n<jaxrs:server id=\"kmsService\" address=\"/\">\n    <jaxrs:providers>\n        <bean class=\"com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider\"/>\n        <bean class=\"com.foo.kms.exceptions.JsonMappingExceptionMapper\"/>   \n        <bean class=\"io.swagger.jaxrs.listing.SwaggerSerializers\"/>\n    </jaxrs:providers>\n    <jaxrs:serviceBeans>\n        <ref bean=\"swaggerResource\"/>\n        <ref bean=\"statusServiceBean\"/>\n        <ref bean=\"kmsServiceBean\"/>\n    </jaxrs:serviceBeans>\n</jaxrs:server>\n\n```\nThe /api/swagger.json gives a no such method found 500 error and the /swagger.json gives 404 not found error.\nMy webxml contains:\n```\n    \ncontextConfigLocation\nWEB-INF/servletContext.xml\n\n other stuff -\n<servlet>\n    <servlet-name>CXFServlet</servlet-name>\n    <display-name>CXF Servlet</display-name>\n    <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>\n    <load-on-startup>1</load-on-startup>\n</servlet>\n\n<servlet-mapping>\n    <servlet-name>CXFServlet</servlet-name>\n    <url-pattern>/api/*</url-pattern>\n</servlet-mapping>\n\n  <servlet-mapping>\n    <servlet-name>default</servlet-name>\n    <url-pattern>/static/*</url-pattern>\n</servlet-mapping>\n\n```\n. Already looked at that.  The CXF sample doesn't really follow good idioms in that it does not use the schema appropriate to CXF but uses raw bean definitions instead.\nSo for example in the sample we have:\n```\n\n\n\n\n\n\n\n    <ref bean=\"swaggerResource\" />\n  </list>\n</property>\n<property name=\"providers\">\n  <list>\n    <ref bean=\"jsonProvider\" />\n    <ref bean=\"swaggerWriter\" />\n    <ref bean=\"exceptionMapper\" />\n\n    <!-- required for writing swagger classes -->\n    <!-- <ref bean=\"resourceWriter\" />\n    <ref bean=\"apiWriter\" /> -->\n  </list>\n</property>\n\n\n```\nMy spring config uses the jaxrs:server tag provided by the: http://cxf.apache.org/schemas/jaxrs.xsd schema.  That should not fundamentally change things however.  And as an additional data point all of this sort of worked when I was using the:  com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON in the jaxrs:serviceBeans section and: com.wordnik.swagger.jaxrs.listing.ResourceListingProvider, com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider in the jaxrs:providers section.\nMigrating to the stuff in this project doesn't seem to enable things to work correctly.\n. I figured it out the magic path is http://localhost:9095/api/swagger\nThat works.  By the way for some reason Swagger thinks that the HttpServeletRequest is something that it should be placing in the API documentation.  It shouldn't.\n. hidden does not seem to be well documented but sure enough, it works, thanks.\n. ",
    "manicmonkey": "I should add that the AnnotationResolver is copied from the RESTEasy project: https://github.com/resteasy/Resteasy/blob/master/jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/util/AnnotationResolver.java\n. Oh right cool, that's perfect. I didn't know about that reflections library, it certainly looks more robust than our simple hack :)\n. Oh right cool, that's perfect. I didn't know about that reflections library, it certainly looks more robust than our simple hack :)\n. ",
    "carlskii": "Basically I want to create a clickable link in the response somewhere that can be used to download a file. I don't really care if its in the header or payload.\n. ",
    "kongchen": "Great! When would the new package available in central repository? @fehguy \n. Hi, will the annotations remove the unused fields in 1.3.8?\n. Yes, I'm there.\n2014-9-3 \u4e0a\u534810:57\u4e8e \"Tony Tam\" notifications@github.com\u5199\u9053\uff1a\n\nHi, we don't plan on removing them as they are not harming anything--we\nwill make sure they're properly documented. @kongchen\nhttps://github.com/kongchen are you in the swagger 2.0 workgroup?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/508#issuecomment-54246375\n.\n. \n",
    "joschi": "Thanks a lot! :+1: \n. ",
    "vijaya89": "To add to my submission previously, My rest api's are in java.\n. To add to my submission previously, My rest api's are in java.\n. Thanks for the reply. I will try it. \nMy question is : without using swagger-core, can I just use swagger-ui for my already defined rest api's.\nMy rest api's are in java and I need to return xml instead of json\nis there any help document for me to do the above?\n. Thanks for the reply. I will try it. \nMy question is : without using swagger-core, can I just use swagger-ui for my already defined rest api's.\nMy rest api's are in java and I need to return xml instead of json\nis there any help document for me to do the above?\n. ",
    "atrauzzi": "Will this support oauth 1.0 and will it support optional access tokens?\n. Yeah, would be nice to have that as well as the optional access token & secret when doing it.\n. When is release planned for?\n. Awesome!  Yeah, we're really in desperate need of a consistent testing tool and Swagger is looking like the front-runner.  If the Oauth 1.0 support makes it in, we'll be set.\nIs there somewhere I can check in at to stay up to date with progress?\n. ",
    "cfournie": "Did OAuth 1.0a make it into the 1.3 release in any way?\n. Any chance that it's in your roadmap at all?\n. Done; thanks!\n. ",
    "ankorostelev": "Search for \"valueType\":\"LIST\" in http://petstore.swagger.wordnik.com/api/api-docs.json/pet\nor dig into elements:\nAPI (path=/pet.{format}/findByStatus) -> operation (nickname=findPetsByStatus) -> parameter (name=status) -> allowableValues -> valueType=LIST is duplicated.\n. Search for \"valueType\":\"LIST\" in http://petstore.swagger.wordnik.com/api/api-docs.json/pet\nor dig into elements:\nAPI (path=/pet.{format}/findByStatus) -> operation (nickname=findPetsByStatus) -> parameter (name=status) -> allowableValues -> valueType=LIST is duplicated.\n. piece of JSON:\n \"allowableValues\":{\n                        \"valueType\":\"LIST\",\n                        \"values\":[\n                           \"available\",\n                           \"pending\",\n                           \"sold\"\n                        ],\n                        \"valueType\":\"LIST\"\n                     },\n. Could you please also update official swagger pet store example : http://petstore.swagger.wordnik.com/api/pet.json\nit still has duplicate\"valueType\":\"LIST\" attributes.\n. ",
    "geoffreys": "Arrh sorry was ment to be raised against swagger-codegen repo!    Closed and will open it there instead..\n. ",
    "D-Roch": "great thanks\n. Great thank you !\n. +1\n. :+1: \n. ",
    "swarupe04": "we're using java jax-rs cxf api server and are model classes have such as:\n@XmlRootElement(name = \"review\")\npublic class MainReview \n. Hi fehguy,\nAlso i was looking for means to customize the json schema provider, but noticed that it's in scala: SwaggerJsonSchemaProvider.scala..I was curious if there's a java version of it, since I'm not much familiar with scala.\n. Oh forgot to mention..i'm trying to use the UI version of it integrated into our api server, that essentially provides the api doc viewer as well as actual api(s) calls.\n. I wasn't sure why model element names need to have uppercase first char? Is there any standard on it that i'm missing. I would think just going by whatever name in XmlRootElement should have been fine. I'm not sure why there was that strong dependency and assumption.\n. Hi Tony,\nI'll look into 1.3.0 and your suggestions.\nThanks again\n- Swarup\n  On 6/18/13 4:40 PM, Tony Tam wrote:\n\nNo, it's only in scala. however, it's trivial to override how the \nprovider builds the JSON (because it's in scala). I suggest the following:\n1) Use the new pluggable model processing feature in 1.3.0 to override \nthe way you read models. You can take this class:\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-core/src/main/scala/com/wordnik/swagger/converter/SwaggerSchemaConverter.scala\nand override the model name:\nclass  MySchemaConverter\n   extends  ModelConverter\n   with  BaseConverter  {\ndef  read(cls:  Class[_]):  Option[Model]  =  {\n     Option(cls).flatMap({\n       cls  =>  {\n         implicit  val  properties  =  new  LinkedHashMapString,ModelProperty\n         new  ModelPropertyParser(cls).parse\n     val  p  =  (for((key,  value)  <-  properties)  \n       yield  (value.position,  key,  value)\n     ).toList\n\n     val  sortedProperties  =  new  LinkedHashMap[String,ModelProperty]()\n     p.sortWith(_._1  <  _._1).foreach(e  =>  sortedProperties  +=  e._2  ->  e._3)\n     Some(Model(\n       capitalize(toName(cls)),\n       capitalize(toName(cls)),\n       cls.getName,\n       sortedProperties,\n       toDescriptionOpt(cls)\n     ))\n\n...\n// simple function to capitalize initial char in string\ndef  capitalize(s:  String)  =  {  s(0).toUpperCase  +  s.substring(1,  s.length).toLowerCase  }\n2) Add your new converter in a bootstrap:\n// the true param puts this converter first in the chain\nModelConverters.addConverter(new  MySchemaConverter(),  true);\n3) Your api declarations will now have initial-caps for the model \nnames. Alternatively you can edit the serializer, which turns the \nmodels into JSON, which is done in the SwaggerSerializers file.\nNote, you should be able to do the custom converter code in java.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/wordnik/swagger-core/issues/222#issuecomment-19640400.\n. Can u please let me know how I can bootstrap:\n  // the true param puts this converter first in the chain\nModelConverters.addConverter(new MySchemaConverter(), true);\n. Hi Tony,\nLooking at this example..where i want to ignore introspecting Date..how i can achieve it..\n\nhttps://github.com/wordnik/swagger-core/wiki/overriding-models\nimport com.wordnik.swagger.converter.{ ModelConverters, OverrideConverter }\nval jsonString = \"\"\"\n\"Date\": {\n  \"id\": \"Date\",\n  \"properties\": {\n    \"value\": {\n      \"required\": true,\n      \"description\": \"Date in ISO-8601 format\",\n      \"notes\": \"Add any notes you like here\",\n      \"type\": \"string\"\n    }\n  }\n}\n\"\"\"\nval converter = new OverrideConverter\nconverter.add(\"java.util.Date\", jsonString)\nModelConverters.addConverter(converter, true)\n. Hi Tony,\nI had exactly similar since i wanted to test override of joda's  LocalDateTime. But I'm having issues compiling it.\nIf I use 2.9.1 it fails with 'swaggerResourceJSON' while setting bean property 'serviceBeans' with key [2]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'swaggerResourceJSON' defined in ServletContext resource [/WEB-INF/classes/applicationContext.xml]: Instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: scala/collection/convert/DecorateAsJava:\njava.lang.ClassNotFoundException: scala.collection.convert.DecorateAsJava\nIf i use 2.10.0 I get this error:\nCaused by: java.lang.ClassNotFoundException: scala.reflect.Manifest$\npublic class Bootstrap extends HttpServlet {\n```\nprivate static final long serialVersionUID = 8616088381575066956L;\nprivate static final String jsonString = \"\\\"LocalDateTime\\\": {\" +\n                                \"\\\"id\\\": \\\"LocalDateTime\\\",\" +\n                                \"\\\"properties\\\": {\" +\n                                \"\\\"value\\\": {\" +\n                                \"\\\"required\\\": true,\" +\n                                \"\\\"description\\\": \\\"Date in ISO-8601 format\\\",\" +\n                                \"\\\"notes\\\": \\\"Add any notes you like here\\\",\" +\n                                \"\\\"type\\\": \\\"string\\\"\" +\n                                \"}\" +\n                                \"}\" + \"}\";\nstatic {\n    JaxrsApiReader.setFormatString(\"\");\n    OverrideConverter o = new OverrideConverter();\n    o.add(\"org.joda.time.LocalDateTime\", jsonString); \n    ModelConverters.addConverter(o, true);\n}\n```\n}\n. Yes, I'm using 1.3.0-SNAPSHOT and I've been referring to the samples/java-jaxrs-cxf/pom and also applicationContext.xml\nBut for some reason, it doesn't seem to start up my jetty server and fails with scala class not found exceptions with 2.9.1 \nBeanCreationException: Error creating bean with name 'swaggerResourceJSON' defined in ServletContext resource [/WEB-INF/classes/applicationContext.xml]: Instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: scala/collection/convert/DecorateAsJava:\njava.lang.ClassNotFoundException: scala.collection.convert.DecorateAsJava\n. When I use 2.10.0, this issue goes away, but facing other class not found exceptions..\n. i was exactly doing that now :)..one sec..will upload it\n. with only 2 dependencies...\n\ncom.wordnik\nswagger-core_2.9.1\n1.3.0-SNAPSHOT\ncompile\n\n\ncom.wordnik\nswagger-jaxrs_2.9.1\n1.3.0-SNAPSHOT\ncompile\n\n. https://gist.github.com/swarupe04/67ae114effeb13662158\n. Has anyone tried using Swagger Core 1.5.x and Swagger UI 2.0 using Jersey2 with no web.xml\nIt doesn't seem to recognize API annotations within BeanParam object and also the path param pattern doesn't get replaced such as /v1/report/{report_type:[aA-zZ]+} ..when executed on UI it uses the pattern as is\nOn 1.3.x didn't have any of these issues\n. Hi Tony,\nIt seems to be the UI side, that doesn't seem to support it. Since I can\nsee api documentation in the swagger.json.\nSince, by using swagger 2.0 forma, we're forced to move to the new UI.\nAlso,  I noticed that new UI 2.0 doesn't have the \"raw\" link anymore.\nIs master the latest for UI work, or do u think I should instead using\ndevelop_2.0 for swagger ui too, to get the latest UI modules.\nThanks\nOn Wed, Mar 18, 2015 at 6:15 PM, Tony Tam notifications@github.com wrote:\n\nHi @swarupe04 https://github.com/swarupe04 It is definitely supported.\nPlease take a look at this sample:\nhttps://github.com/swagger-api/swagger-core/tree/develop_2.0/samples/java-jaxrs-no-webxml\nIt is a jaxrs 1.x sample but the spirit is the same. All configuration for\nswagger is done in the Bootstrap.java.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/446#issuecomment-83205159\n.\n. Please can you provide the email id to send to.\n\nThanks,\nSwarup\nOn Wed, Mar 18, 2015 at 9:05 PM, Tony Tam notifications@github.com wrote:\n\nMaster should be fine. Can you share the bean property? Email is fine if\nits private\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/446#issuecomment-83242191\n.\n. sent to your gmail..please let me know if you need more info..\n\nalso wanted to mention about the swagger.json out too\nbase class to support all types of Report Requests:\n{\n- required:\n  [\n  - \"active_campaigns\",\n  - \"date_range\",\n  - \"report_type\",\n  - \"time_unit\",\n  - \"view_level\"\n    ],\nfor bean class\n@ApiModel(value = \"base class to support all types of Report Requests\")\npublic class ReportRequest {\nshouldn't it using the class name instead?\nOn Wed, Mar 18, 2015 at 9:30 PM, Swarup Eda swarup.eda@teamaol.com wrote:\n\nPlease can you provide the email id to send to.\nThanks,\nSwarup\nOn Wed, Mar 18, 2015 at 9:05 PM, Tony Tam notifications@github.com\nwrote:\n\nMaster should be fine. Can you share the bean property? Email is fine if\nits private\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/446#issuecomment-83242191\n.\n. Hi,\nJust noticed that in my pom,\ncom.wordnik:swagger-jersey2-jaxrs_2.10:jar:1.3.12 still has dependency to\nswagger core 1.3.\n\n\nIs there a newer version of swagger-jersey2 which I couldn't find in maven\nrepo? Or should I be explicitly excluding it in pom?\n[INFO] +- com.wordnik:swagger-jersey2-jaxrs_2.10:jar:1.3.12:compile\n[INFO] |  - com.wordnik:swagger-jaxrs_2.10:jar:1.3.12:compile\n[INFO] |     +- com.wordnik:swagger-core_2.10:jar:1.3.12:compile\n[INFO] |     |  +- org.json4s:json4s-ext_2.10:jar:3.2.11:compile\n[INFO] |     |  |  - org.joda:joda-convert:jar:1.6:compile\n[INFO] |     |  +- org.json4s:json4s-native_2.10:jar:3.2.11:compile\n[INFO] |     |  |  - org.json4s:json4s-core_2.10:jar:3.2.11:compile\n[INFO] |     |  |     +- org.json4s:json4s-ast_2.10:jar:3.2.11:compile\n[INFO] |     |  |     - org.scala-lang:scalap:jar:2.10.0:compile\n[INFO] |     |  |        - org.scala-lang:scala-compiler:jar:2.10.0:compile\n[INFO] |     |  |           -\norg.scala-lang:scala-reflect:jar:2.10.0:compile\n[INFO] |     |  - org.json4s:json4s-jackson_2.10:jar:3.2.11:compile\n[INFO] |     - org.reflections:reflections:jar:0.9.9:compile\n[INFO] |        - com.google.code.findbugs:annotations:jar:2.0.1:compile\nOn Tue, Mar 17, 2015 at 10:23 AM, Tony Tam notifications@github.com wrote:\n\nPlease look at the tests in the develop_2.0 branch. For instance:\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-core/src/test/scala/com/wordnik/swagger/model/override/SamplePropertyConverter.java\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-82380762\n.\n. Hi,\nAfter upgrading to 1.5, getting Http 400 error on /api-docs.\nand response msg as: {\"code\":404,\"message\":\"Not Found\",\"detail\":null}\n1. Request URL:\n   http://localhost:8080/reporting/api-docs\n2. Request Method:\n   GET\n3. Status Code:\n   400 Bad Request\n\nAppreciate any help, in debugging this issue\nHere's my info\nin my jersey2 application, had..\npublic class ReportingApplication extends ResourceConfig {\npublic ReportingApplication() {\n BeanConfig beanConfig = new BeanConfig();\n    beanConfig.setTitle(\"Reporting REST API(TM)\");\n    beanConfig.setDescription(\"A set of API's for the Reporting\nsubsystem\");\n        beanConfig.setLicenseUrl(\"http://corp.com/\");\n        beanConfig.setLicense(\"Contact For Licensing Terms\");\n        beanConfig.setVersion(\"1.0.2\");\nbeanConfig.setBasePath(ReportingConfig.config().getProperty(\"swagger.api.basepath\"));\n        beanConfig.setResourcePackage(\"com.reporting.resource\");\n        beanConfig.setScan(true);\nModelConverters.getInstance().addConverter(new SamplePropertyConverter());\nin pom\n\ncom.wordnik\nswagger-jersey2-jaxrs\n<version>1.5.3-M1-SNAPSHOT</version>\n1.5.2-M1\n\n\ncom.wordnik\nswagger-core\n1.5.2-M1\nThanks\nOn Tue, Mar 17, 2015 at 12:48 PM, Tony Tam notifications@github.com wrote:\n\nTake a look at the POM here:\nhttps://github.com/swagger-api/swagger-core/tree/develop_2.0/samples/java-jersey2\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-82471622\n.\n. Hmm..tried that..same error\n\nOn Tue, Mar 17, 2015 at 3:51 PM, Tony Tam notifications@github.com wrote:\n\nit should live on /swagger.json not /api-docs now\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-82567731\n.\n. Hi,\n\nI got it working after registering, register(ApiListingResource.class); in\nJersey2 Application. In docs, it didn't explicitly mention this step for\nBeanConfig option:\nhttps://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup#using-the-application-class\nNext, it looks I need to upgrade even the swagger ui to 2.0. Is my\nunderstanding correct. We're currently using swagger ui 1.0, and we seem to\nhaving issue with displaying the UI content.\nThanks,\nOn Tue, Mar 17, 2015 at 4:36 PM, Tony Tam notifications@github.com wrote:\n\nI strongly suggest walking through the samples in the develop_2.0 branch\nand seeing how the configuration works, and how it's different from your\napp.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-82586736\n.\n. Hi,\n\nAfter all the upgrade on ui side too, I'm noticing issue with parameters as\nnull from swagger.json which is causing the resolver.js to break for ui\n- /v1/report/{id:[0-9]+}/result:\n  {\n  - get: null,\n  - post:\n    {},\n  - put: null,\n  - delete: null,\n  - options: null,\n  - patch: null,\n  - parameters: null\n    },\nI've compared to petstore and don't see this type of rest verb\n(\"parameters\" at this level). Could it be issue with 1.5 swagger core?\nThanks,\nOn Tue, Mar 17, 2015 at 5:04 PM, Swarup Eda swarup.eda@teamaol.com wrote:\n\nHi,\nI got it working after registering, register(ApiListingResource.class); in\nJersey2 Application. In docs, it didn't explicitly mention this step for\nBeanConfig option:\nhttps://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup#using-the-application-class\nNext, it looks I need to upgrade even the swagger ui to 2.0. Is my\nunderstanding correct. We're currently using swagger ui 1.0, and we seem to\nhaving issue with displaying the UI content.\nThanks,\nOn Tue, Mar 17, 2015 at 4:36 PM, Tony Tam notifications@github.com\nwrote:\n\nI strongly suggest walking through the samples in the develop_2.0 branch\nand seeing how the configuration works, and how it's different from your\napp.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-82586736\n.\n. Hi,\nWe're not using web.xml, and yes we're using multiple @Provider registered\nin Application, but not @Providers.\n\n\nI can try suppressing fields with null values from response.\nThanks,\nOn Wed, Mar 18, 2015 at 12:36 AM, Tony Tam notifications@github.com wrote:\n\nHi, looks to me like there's a jackson issue. There should be no null\nvalues exposed in swagger.\nI am guessing that you have multiple @Providers trying to write the JSON.\nAre you using a web.xml? If so, can you look at the differences between\nyours and this?\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/samples/java-jersey2/src/main/webapp/WEB-INF/web.xml\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-82735895\n.\n. Works now after adding the SwaggerSerializers.\n\nAppreciate your quick responses.\nThanks,\nOn Wed, Mar 18, 2015 at 10:01 AM, Tony Tam notifications@github.com wrote:\n\nPlease make sure you add this provider directly:\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-jaxrs/src/main/java/com/wordnik/swagger/jaxrs/listing/SwaggerSerializers.java\nThen the swagger model should be serialized correctly.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-82986636\n.\n. Hi,\n\nI've noticed that when we've the @BeanParam parameter, the APIParam are not\ngetting considered with the newer version 1.5. This was fine when we were\non 1.3\nI'm not sure where to create the issue for this, but I feel this is a\ncritical issue for upgrade for us since we use BeanParam mostly on our apis.\nThanks\nOn Wed, Mar 18, 2015 at 10:40 AM, Swarup Eda swarup.eda@teamaol.com wrote:\n\nWorks now after adding the SwaggerSerializers.\nAppreciate your quick responses.\nThanks,\nOn Wed, Mar 18, 2015 at 10:01 AM, Tony Tam notifications@github.com\nwrote:\n\nPlease make sure you add this provider directly:\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-jaxrs/src/main/java/com/wordnik/swagger/jaxrs/listing/SwaggerSerializers.java\nThen the swagger model should be serialized correctly.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-82986636\n.\n. Hi,\nChecking the swagger module swagger-jersey2-jaxrs, looks like I'm probably\nmissing registering\npublic class SwaggerJersey2Jaxrs extends AbstractSwaggerExtension implements\nSwaggerExtension {\n\n\nCurrently I'm only registering\nregister(SwaggerSerializers.class); register(ApiListingResource.class);\nDo u think, I could simply register this class?\nOn Wed, Mar 18, 2015 at 11:43 AM, Tony Tam notifications@github.com wrote:\n\nAre you sure you are adding the jersey2 module? Bean params are supported\nand well tested.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-83026706\n.\n. swagger-annotations-1.5.2-M1.jar\nswagger-jaxrs-1.5.2-M1.jar\nswagger-models-1.5.2-M1.jar\nswagger-core-1.5.2-M1.jar\nswagger-jersey2-jaxrs-1.5.2-M1.jar\n\nOn Wed, Mar 18, 2015 at 12:01 PM, Tony Tam notifications@github.com wrote:\n\nIf it's included in your webapp's classpath, it should register\nautomatically. Can you please share the libraries that are pulled into your\napp? At least the swagger ones.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-83034670\n.\n. In your web.xml link\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/samples/java-jersey2/src/main/webapp/WEB-INF/web.xml\n\nnoticed that it's registering lot more..just wandering if we need those for\nnon-web.xml or is it implicit?\n..\ncom.wordnik.swagger.jersey.listing.JerseyApiDeclarationProvider,\ncom.wordnik.swagger.jersey.listing.JerseyResourceListingProvider\n..\nJersey2Config\ncom.wordnik.swagger.jersey.config.JerseyJaxrsConfig\nOn Wed, Mar 18, 2015 at 12:03 PM, Swarup Eda swarup.eda@teamaol.com wrote:\n\nswagger-annotations-1.5.2-M1.jar\nswagger-jaxrs-1.5.2-M1.jar\nswagger-models-1.5.2-M1.jar\nswagger-core-1.5.2-M1.jar\nswagger-jersey2-jaxrs-1.5.2-M1.jar\nOn Wed, Mar 18, 2015 at 12:01 PM, Tony Tam notifications@github.com\nwrote:\n\nIf it's included in your webapp's classpath, it should register\nautomatically. Can you please share the libraries that are pulled into your\napp? At least the swagger ones.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-83034670\n.\n. Something definitely seems to be missing. Even the path param is not\ngetting converted appropriately\n\n\nI had path with /v1/report/{report_type:[aA-zZ]+}:\nwhere report_type is path key\nwhen i execute the api call on swagger ui, it doesn't replace report_type\nto default value\nAll this was fine when we were on 1.3.x\nOn Wed, Mar 18, 2015 at 12:08 PM, Swarup Eda swarup.eda@teamaol.com wrote:\n\nIn your web.xml link\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/samples/java-jersey2/src/main/webapp/WEB-INF/web.xml\nnoticed that it's registering lot more..just wandering if we need those\nfor non-web.xml or is it implicit?\n..\ncom.wordnik.swagger.jersey.listing.JerseyApiDeclarationProvider,\ncom.wordnik.swagger.jersey.listing.JerseyResourceListingProvider\n..\nJersey2Config\ncom.wordnik.swagger.jersey.config.JerseyJaxrsConfig\nOn Wed, Mar 18, 2015 at 12:03 PM, Swarup Eda swarup.eda@teamaol.com\nwrote:\n\nswagger-annotations-1.5.2-M1.jar\nswagger-jaxrs-1.5.2-M1.jar\nswagger-models-1.5.2-M1.jar\nswagger-core-1.5.2-M1.jar\nswagger-jersey2-jaxrs-1.5.2-M1.jar\nOn Wed, Mar 18, 2015 at 12:01 PM, Tony Tam notifications@github.com\nwrote:\n\nIf it's included in your webapp's classpath, it should register\nautomatically. Can you please share the libraries that are pulled into your\napp? At least the swagger ones.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-83034670\n.\n. I have been on 1.5.1-M2 for a while now. I just tested the @defaultValue\ncase, and it does seem to consider the default value, but doesn't show the\nenum values for the Enum Type.\n\n\n\nAs a workaround, I've been setting the APIParam allowable values to get\nthat working, but as you know this is redundant maintenance in my case.\nOn Wed, Apr 29, 2015 at 5:20 AM, Ron notifications@github.com wrote:\n\n@swarupe04 https://github.com/swarupe04 - can you please upgrade to the\nlatest (1.5.1-M2) and see if the issue still exists?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-97366998\n.\n. It was pathParam...Let me try a query param, which was also an issue.\n\nOn Wed, Apr 29, 2015 at 9:16 AM, Ron notifications@github.com wrote:\n\nWhat type of parameter is the enum? It's possible it's solved in the\ndevelop_2.0 branch.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-97422409\n.\n. OK. Got it. It has same issue with queryParam with 1.5.1-M2. Only reason I\nconsider these as critical bugs since this feature was fine in 1.3.\n\nBut it's fine for now, since I've a workaround. I'll wait for the next\nrelease.\nOn Wed, Apr 29, 2015 at 9:19 AM, Ron notifications@github.com wrote:\n\nFor path params - #875\nhttps://github.com/swagger-api/swagger-core/issues/875.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-97422962\n.\n. Sounds good. thanks\n\nOn Wed, Apr 29, 2015 at 9:25 AM, Ron notifications@github.com wrote:\n\nIn that case, can we close this issue and open a new one for the enums?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#issuecomment-97424210\n.\n. https://github.com/swagger-api/swagger-core/issues/1019\n\nOn Wed, Apr 29, 2015 at 9:29 AM, Ron notifications@github.com wrote:\n\nClosed #917 https://github.com/swagger-api/swagger-core/issues/917.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/917#event-292988784.\n. Here's sample resource method that has DefaultValue set for a post json object. \nActually we added this defaultValue as workaround since swagger ui wasn't treating it correctly if empty post body. I had created an issue for this too on ui side: https://github.com/swagger-api/swagger-ui/issues/1131\n\n``` java\n@Path(\"/instant\")\n    @JsonView(ReportResultViews.AOPSummary.class)\n    @POST\n    @Valid\n    @ApiOperation(value = \"Get report data instantly\", notes = \"\", response = PaginatedResult.class, position = 2)\n    @ApiResponses(value = {\n            @ApiResponse(code = 404, message = \"Report type not found\"),\n            @ApiResponse(code = 403, message = \"No permission to access the report\") })\n    public PaginatedResult createInstantReport (\n            @BeanParam\n            ReportRequest qpRequest,\n        @ApiParam(value = \"report request json object\")\n        @DefaultValue(\"{}\")\n        ReportRequest request,\n\n        @ApiParam(value = \"report id for pagination\", defaultValue = \"0\")\n        @QueryParam(\"reportId\")\n        long reportId,\n\n        @ApiParam(value = \"page offset\")\n        @DefaultValue(\"0\")\n        @QueryParam(\"offset\")\n        long offset,\n\n        @ApiParam(value = \"max limit rows per page\")\n        @DefaultValue(\"100\")\n        @QueryParam(\"limit\")\n        @Max(10000)\n        long limit,\n\n        @Context\n        HttpServletRequest httpServletRequest)\n        throws ServiceException\n\n```\n. just to clarify.. is 1.5.1-M2 latest compare to 1.5.3-M1?\nwill try it  out..\nThanks\n. tried with 1.5.1-M2 ..same issue\n. trying it with adding defaultValue to ApiParam\n. tried it ..no luck\nOn Wed, Apr 8, 2015 at 3:48 PM, Ron notifications@github.com wrote:\n\noh, I missed your comment.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/970#issuecomment-91015925\n.\n. Actually when i moved to 1.5.1-M2, noticed that it didn't recognize\n@DefaultValue in @BeanParam object. 1.5.3-M1 was fine. I believe I had this\nissue earlier when 'fehguy' fixed it in 1.5.3-M1. Maybe it wasn't moved to\nM2\n\n\ncom.wordnik\nswagger-jersey2-jaxrs\n${swagger.version}\n\n\ncom.wordnik\nswagger-core\n${swagger.version}\n\nwith swagger.version as 1.5.3-M1 and then 1.5.1-M2\nOn Wed, Apr 8, 2015 at 3:50 PM, Ron notifications@github.com wrote:\n\nWhich of the swagger-core dependencies do you use?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/970#issuecomment-91016760\n.\n. Please see the conversation at the end of this issue that was related to\n@DefaultValue on @BeanParam:\nhttps://github.com/swagger-api/swagger-core/issues/917\n\nOn Wed, Apr 8, 2015 at 3:56 PM, Swarup Eda swarup.eda@teamaol.com wrote:\n\nActually when i moved to 1.5.1-M2, noticed that it didn't recognize\n@DefaultValue in @BeanParam object. 1.5.3-M1 was fine. I believe I had this\nissue earlier when 'fehguy' fixed it in 1.5.3-M1. Maybe it wasn't moved to\nM2\n\ncom.wordnik\nswagger-jersey2-jaxrs\n${swagger.version}\n\n\ncom.wordnik\nswagger-core\n${swagger.version}\n\nwith swagger.version as 1.5.3-M1 and then 1.5.1-M2\nOn Wed, Apr 8, 2015 at 3:50 PM, Ron notifications@github.com wrote:\n\nWhich of the swagger-core dependencies do you use?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/970#issuecomment-91016760\n.\n. fyi..I'm going to be on 1.5.3-M1 for now until we've both the fixes.\n\n\nOn Wed, Apr 8, 2015 at 3:59 PM, Swarup Eda swarup.eda@teamaol.com wrote:\n\nPlease see the conversation at the end of this issue that was related to\n@DefaultValue on @BeanParam:\nhttps://github.com/swagger-api/swagger-core/issues/917\nOn Wed, Apr 8, 2015 at 3:56 PM, Swarup Eda swarup.eda@teamaol.com wrote:\n\nActually when i moved to 1.5.1-M2, noticed that it didn't recognize\n@DefaultValue in @BeanParam object. 1.5.3-M1 was fine. I believe I had this\nissue earlier when 'fehguy' fixed it in 1.5.3-M1. Maybe it wasn't moved to\nM2\n\ncom.wordnik\nswagger-jersey2-jaxrs\n${swagger.version}\n\n\ncom.wordnik\nswagger-core\n${swagger.version}\n\nwith swagger.version as 1.5.3-M1 and then 1.5.1-M2\nOn Wed, Apr 8, 2015 at 3:50 PM, Ron notifications@github.com wrote:\n\nWhich of the swagger-core dependencies do you use?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/970#issuecomment-91016760\n.\n. If I'm on 1.5.1-M2, it has both the issues - DefaultValue within BeanParam,\nand DefaultValue on Post body json object param, not recognized\non 1.5.3-M1, only one issue: DefaultValue on Post body json object param,\nnot recognized\n\n\n\nOn Wed, Apr 8, 2015 at 4:03 PM, Ron notifications@github.com wrote:\n\nIs the issue with the default value only when used within a BeanParam?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/970#issuecomment-91019724\n.\n. This morning hitting strange issue. DefaultValue within BeanParam seems\nvery inconsistent. It works sometimes and other times not. I've tried\nswitching between M1 and M2, and I'm verifying only the json\nhttp://localhost:8080/reporting/swagger.json. I can see that sometimes it\nshows default field and other times not.\nAny idea, how this is possible?\n\nOn Wed, Apr 8, 2015 at 4:05 PM, Swarup Eda swarup.eda@teamaol.com wrote:\n\nIf I'm on 1.5.1-M2, it has both the issues - DefaultValue within\nBeanParam, and DefaultValue on Post body json object param, not recognized\non 1.5.3-M1, only one issue: DefaultValue on Post body json object param,\nnot recognized\nOn Wed, Apr 8, 2015 at 4:03 PM, Ron notifications@github.com wrote:\n\nIs the issue with the default value only when used within a BeanParam?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/970#issuecomment-91019724\n.\n. Any status on this issue. Also wanted to clarify that ApiParam defaultValue doesn't work for JSON object param. DefaultValue annotation worked in 1.3 version\n\n\nThanks\n. it's basically on body param on resource method:\npublic void resourceMethod() {\n  @ApiParam(value = \"report request json object\", defaultValue = \"{}\")\n            @DefaultValue(\"{}\")\n            SummaryReportRequest request\n}\nOn Tue, May 5, 2015 at 12:39 PM, Ron notifications@github.com wrote:\n\n@swarupe04 https://github.com/swarupe04 - we're working on this issue\nnow, but \"DefaultValue on Post body json\" is unclear. Can you supply a\nsample code for it to show us exactly what isn't working?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/970#issuecomment-99134776\n.\n. OK. This was actually a workaround we wanted to try..since swagger ui on\npost was not sending the content type as application/json when post body\nwas empty.\n\nOn Tue, May 5, 2015 at 3:00 PM, Ron notifications@github.com wrote:\n\n@swarupe04 https://github.com/swarupe04 - okay. We could probably\nprovide partial support for it. It may be translated to a string\ndefault value and not a JSON object, which will in effect create an invalid\nSwagger definition.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/970#issuecomment-99182551\n.\n. \n",
    "araghavaram": "hi, can someone help me in defining SLA for the REST operations in the swagger documents that we created. I am trying to open the links mentioned in this page but nothing opens. We are using swagger 2.0. Could you please help me defining this. ",
    "dhalperi": "Thanks, will do; I'm at conference so probably won't get to until Friday. Will update here then!\n. Hi @fehguy,\nI just cloned the branch and ran mvn compile, and I get these compile errors. This makes me think that the branch is not in a good state:\njava\n[ERROR] /Users/dhalperi/escience/swagger-dev/swagger-core/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/JaxrsApiReader.scala:267: error: type mismatch;\n[ERROR]  found   : com.wordnik.swagger.model.ApiListing\n[ERROR]  required: com.wordnik.swagger.jaxrs.ApiListing\n[ERROR]       Some(ApiListing (\n[ERROR]                       ^\n[ERROR] /Users/dhalperi/escience/swagger-dev/swagger-core/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/listing/ApiListing.scala:40: error: type mismatch;\n[ERROR]  found   : scala.collection.immutable.Map[String,com.wordnik.swagger.model.ApiListing]\n[ERROR]  required: Map[String,com.wordnik.swagger.jaxrs.listing.ApiListing]\n[ERROR]           _cache = Some((listings.map(m => (m.resourcePath, m))).toMap)\n[ERROR]                                                                  ^\n[ERROR] /Users/dhalperi/escience/swagger-dev/swagger-core/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/listing/ApiListing.scala:61: error: type mismatch;\n[ERROR]  found   : com.wordnik.swagger.jaxrs.listing.ApiListing\n[ERROR]  required: com.wordnik.swagger.model.ApiListing\n[ERROR]         yield f.filter(spec, FilterFactory.filter, paramsToMap(uriInfo.getQueryParameters), cookiesToMap(headers), headersToMap(headers))\n[ERROR]                        ^\n[ERROR] /Users/dhalperi/escience/swagger-dev/swagger-core/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/listing/ApiListing.scala:65: error: value resourcePath is not a member of Nothing\n[ERROR]       ApiListingReference(listing.resourcePath, listing.description)\n[ERROR]                                   ^\n[ERROR] /Users/dhalperi/escience/swagger-dev/swagger-core/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/listing/ApiListing.scala:97: error: type mismatch;\n[ERROR]  found   : com.wordnik.swagger.jaxrs.listing.ApiListing\n[ERROR]  required: com.wordnik.swagger.model.ApiListing\n[ERROR]         f.filter(spec, FilterFactory.filter, paramsToMap(uriInfo.getQueryParameters), cookiesToMap(headers), headersToMap(headers))\n[ERROR]                  ^\n[ERROR] 5 errors found\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] wordnik-swagger-project ........................... SUCCESS [1.970s]\n[INFO] swagger-annotations ............................... SUCCESS [1.409s]\n[INFO] swagger-core ...................................... SUCCESS [0.450s]\n[INFO] swagger-jaxrs ..................................... FAILURE [15.696s]\n[INFO] swagger-jersey-jaxrs .............................. SKIPPED\n[INFO] swagger-servlet ................................... SKIPPED\n[INFO] swagger-java-jaxrs-app ............................ SKIPPED\n[INFO] swagger-scala-sample-app .......................... SKIPPED\n[INFO] swagger-java-resteasy ............................. SKIPPED\n[INFO] swagger-scala-servlet-server ...................... SKIPPED\n[INFO] swagger-java-cxf-sample ........................... SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 20.330s\n[INFO] Finished at: Mon Jul 01 14:36:18 PDT 2013\n[INFO] Final Memory: 22M/222M\n[INFO] ------------------------------------------------------------------------\n. P.S. I don't think I can reopen.\n. yep, mvn clean install seemed to work. I tried again git reset --hard\nHEAD && mvn compile and that did not. Odd. Thanks, and I'll report back.\nOn Mon, Jul 1, 2013 at 2:56 PM, Tony Tam notifications@github.com wrote:\n\nCan you please run mvn clean install\nI doubt that is it, but Travis-ci seems to think the build is clean.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/226#issuecomment-20313501\n.\n. Just for the record, @fehguy and @4lejandrito , I was able to successfully compile and test out the code in develop-1.3 branch. Here's what I did, starting with a fully clean checkout.\n\nI'm using Mac OS 10.8.4, with the latest Java 7 (java version \"1.7.0_21\") and Maven version (Apache Maven 3.0.3 (r1075438; 2011-02-28 09:31:09-0800)).\ngit clone https://github.com/wordnik/swagger-core.git \ncd swagger-core\ngit checkout develop-1.3\nJAVA_HOME=`/usr/libexec/java_home` mvn clean install\ncd samples/java-jaxrs\nJAVA_HOME=`/usr/libexec/java_home` mvn package -Dlog4j.configuration=file:./conf/log4j.properties jetty:run\nwhere the last command comes from samples/java-jaxrs/README.md. After waiting a bit, the output shows that the jetty daemon has launched:\n[INFO] Webapp directory = /Users/dhalperi/escience/swagger-dev/swagger-core/samples/java-jaxrs/target/swagger-java-sample-app_2.9.1-1.3.0-SNAPSHOT\n2013-07-01 21:06:57.646:INFO:oejs.Server:jetty-8.1.11.v20130520\n2013-07-01 21:07:00.110:INFO:oejpw.PlusConfiguration:No Transaction manager found - if your webapp requires one, please configure one.\nJul 01, 2013 9:07:11 PM com.sun.jersey.api.core.PackagesResourceConfig init\nINFO: Scanning for root resource and provider classes in the packages:\n  com.wordnik.swagger.sample.resource\n  com.wordnik.swagger.sample.util\n  com.wordnik.swagger.jaxrs.listing\nJul 01, 2013 9:07:11 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses\nINFO: Root resource classes found:\n  class com.wordnik.swagger.sample.resource.PetStoreResource\n  class com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON\n  class com.wordnik.swagger.sample.resource.PetResource\n  class com.wordnik.swagger.sample.resource.UserResource\nJul 01, 2013 9:07:11 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses\nINFO: Provider classes found:\n  class com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider\n  class com.wordnik.swagger.jaxrs.listing.ResourceListingProvider\n  class com.wordnik.swagger.sample.resource.SampleExceptionMapper\n  class com.wordnik.swagger.sample.util.JacksonJsonProvider\nJul 01, 2013 9:07:11 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate\nINFO: Initiating Jersey application, version 'Jersey: 1.13 06/29/2012 05:14 PM'\nSLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\nSLF4J: Defaulting to no-operation (NOP) logger implementation\nSLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\n2013-07-01 21:07:13.828:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8002\n[INFO] Started Jetty Server\nThen (also as in README.md), I cloned the swagger-ui project, used dist/index.html, and it was able to display the UI.\n. Note: I am now working on integrating swagger-1.3.0 in my application. This is hard for me because I have, until now, only ever linked jars from Maven Central. Dependency management is hard now ;)\n. oh, very cool!\n. Hi @fehguy,\nI looked at the examples you supplied; they both appear to use com.wordnik.swagger.jaxrs.listing.ApiListing, which still indeed uses ServletConfig. See https://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/listing/ApiListing.scala#L20\nAm I missing something major here?\nThanks!\n. Yes, that makes good sense. Thanks!\nThe other wrench in my process is that I'm using Jersey in embedded mode---that is, I have no web.xml or applicationContext.xml files, and am instead configuring Jersey from Java as part of another application. So I need to figure out how to port your xml trickery over :). I don't think you have any embedded jax-rs examples. (When I get one working, I'll port it over!)\n. (Aside, even if ServletConfig isn't referenced, Jersey still throws an exception that I have no provider for it. So I have to set up a ServletConfig provider that just injects a null pointer?)\n. Once I get the embedded version working, I'll make a sample and submit a pull request into develop-1.3?\n. Hi @fehguy,\nI'm having trouble understanding how the BeanConfig object interacts with the Jersey code in the sample app. It's declared but never referenced in the applicationContext.xml file. Is this a Spring-specific mechanism that is being used? If so, do you have any ideas for Jersey-generic integration of Swagger?\nHere's my app so far. It serves the pet store resources fine, it just doesn't set up the /api resource. https://github.com/dhalperi/swagger-java-embedded-sample\nThanks,\nDan\n. Okay, sorry, the answer is actually in the README.  This example is indeed using a Tomcat-specific  (not Spring, that's the other example) mechanism to employ BeanConfig.  i'll keep digging :)\n. Finally, it looks like all the swagger-core JAX-RS code assumes that there is a Servlet lurking somewhere underneath the system (even if ServletConfig is not necessarily required to be available). For applications that embed Jersey Applications, however, it's much more difficult to use servlets than to simply use a web server. I think this means I'm screwed unless I really get into the Swagger JAX-RS code.\n(E.g., the DefaultJaxRsConfig object, which underlies both examples you point out above, extends HttpServlet.)\n. I use Eclipse; the project and classpath were created by mvn eclipse:eclipse. I will try and see how to get it to run from the command-line with mvn\n. This will do it: mvn exec:java -Dexec.mainClass=\"com.wordnik.swagger.sample.jersey.SampleJaxRsApplication\"\n. Whoa---I did that before; didn't do much that I could see! I just now realized that it did in fact partially-work; the ApiListing is now available at localhost:8002/api-docs.\nThere are some issues, which I am still working on:\n- How do I get it to mount at /api/api-docs instead of /api-docs?\nSee the response:\n```\ncurl -i -XGET -H\"Accept: application/json\" -H\"Content-type: application/json\" localhost:8002/api-docs\nHTTP/1.1 200 OK\nContent-Type: application/json\nDate: Wed, 03 Jul 2013 03:01:30 GMT\nContent-Length: 219\n{\"apiVersion\":\"1.3.5\",\"swaggerVersion\":null,\"apis\":[{\"path\":\"/pet\",\"description\":\"Operations about pets\"},{\"path\":\"/user\",\"description\":\"Operations about user\"},{\"path\":\"/store\",\"description\":\"Operations about store\"}]\n``\n- I set the API version to 1.3.5, it is indeed propagating into the JSON response.\n- Why isswaggerVersionnull?\n- The swagger-uidist/index.htmlcannot successfully process the swagger output, even if I fix the url tolocalhost:8002/api-docs`.\nStill working on these, but letting you know :).\nAlso, assuming this will be a useful sample to add to the main project, please throw in any suggested style/etc. fixes.\nThanks!\nDan\n. Conversely, if BeanConfig isn't there, I get this response at GET /api-docs\njson\n{\"apiVersion\":\"0.0\",\"swaggerVersion\":\"1.2\"}\n. Yes, but if I do that then the other resources are mounted at '/api/pet', for instance.\nI've tried about three different times over 3 weeks to get the HttpServlet version to work, but I never seem to get it to work right with the package scanning. (I tried again earlier to day; will try again tonight) :)\n. Oh, it probably is the CORS stuff. Okay good call. Thanks.\n. no, it's fine--it just seems different from the sample app. Maybe I just misinterpreted the sample app entirely, though!\n. Hey Tony,\nThanks for all your help! It sure looks like I have a complete working version now in my example repository. It was pretty easy to add the CORS filter.\nWould you like it as a sample application?\nI think it's ready to be copied directly into the develop-1.3 branch as a sample application, or I can fork swagger-core and submit a pull request instead.\nIf you have any changes to suggest I can implement those as well.\nThanks!\nDan\n. Awesome. Sounds like it will be easy; I will let you know when it works!\n. I'm going to have to context-switch off this for the next few days; go ahead and close if you like. Thanks again!\n. ",
    "4lejandrito": "Hi, I am having the same problem and mvn clean install does not work for me :(, any idea?\n. Sorry, it is not exactly the same problem. I get this:\n\nTests in error: \nshould honor a path param target at the class level(JavaPathParamTargetTest): 1 was not equal to 2`\n\nI even tried to remove my .m2 folder but it remains the same. Maybe I should open a new issue...\n. > rm -rf swagger-core\n\ngit clone https://github.com/wordnik/swagger-core.git\ncd swagger-core\ngit checkout develop-1.3\nmvn clean install\n\nStill the same error. It is a bit strange.\n. Hi, as you both suggest, it seems to be some weird problem in my local environment. I will leave it for now and use the sonatype snapshot. Thank you all.\n. Thank you very much, I will try it tomorrow.\n. Hello again :)\nI have tried to update to 1.3.0-SNAPSHOT as follows:\nxml\n<dependency>\n    <groupId>com.wordnik</groupId>\n    <artifactId>swagger-jaxrs_2.9.1</artifactId>\n    <version>1.3.0-SNAPSHOT</version>\n    <scope>compile</scope>\n</dependency>\nI have changed every annotation to its new name (ApiResponses, ApiModel, etc...) but I have the following problems:\n1. Some jersey dependencies have disappeared and now the application does not start. I can solve this by adding them myself I hope, but this is a problem that has happened right after updating you dependency. Maybe I am missing something...\n2. I saw you fixed issue #52 in commit https://github.com/wordnik/swagger-core/commit/21390159913251806922d422ef27a53169c9e3bb but I am having the same issue when trying to annotate a class member with ApiParam. Am I doing something wrong? I was using a fork of swagger made by me with a workaround for this issue until you solved it in the official release. I am afraid I cannot update to 1.3.0-SNAPSHOT so far.\nNevertheless, thank you for your help. I am looking forward to seeing a 1.3.0 official release with all my needs solved :) \n. Some weeks ago I posted #206 issue. It happened to be related to #52 so I suppose you solved it when solving #52. If you read #206 again, I believe you will understand my problems.\nThanks!!\nPS: What do you mean with:  jersey-specific version?\n. HI, I already knew about that test, but I do not see why it is passing.\nI have a field annotated with @ApiParam but it does not compile because of the annotation's target. \nIn the source file from ApiParam:\n\nhttps://github.com/wordnik/swagger-core/blob/develop-1.3/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiParam.java\n\nI can see that the annotation's target is still ElementType.PARAMETER. If you see the commit I made in my fork to workaround the problem (0f1501e307df219ab7bfa921400e178b6d89b87d) I had to change the annotation's target to {ElementType.PARAMETER, ElementType.METHOD, ElementType.FIELD} (maybe METHOD does not make much sense, but FIELD is the important value).\nI must be misunderstanding something.\nI would appreciate your help.\n. Yes, It works now!!, but...\nI would not say this issue is solved... You have completely solved #52 but I am afraid #227 is not. \nAs I said in the first message, when swagger-uing a resource like this:\n``` java\n@ApiModel( value = \"XDataAnswerRESTGetStatus\", description = \"This command allows to get different current status of the device\")\npublic class XDataAnswerRESTGetStatus extends XDataAnswerREST {\n@ApiModelProperty( required = true, value = \"List of statuses\", dataType = \"List[my.package.MyClass]\")\npublic List<MyClass> statuses = new ArrayList<MyClass>();\n\n...\n\n}\n```\nI can see something like this:\nXDataAnswerRESTGetStatus {\n    statuses (List[MyClass], optional):List of statuses\n}\nBut MyClass is not documented below as I expected.\n:(\n. This an example resource (note that the initialize method has a response of Data):\n``` java\npackage com.otarab.scope.rest;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.QueryParam;\nimport com.wordnik.swagger.annotations.Api;\nimport com.wordnik.swagger.annotations.ApiOperation;\nimport com.wordnik.swagger.annotations.ApiParam;\nimport com.wordnik.swagger.annotations.ApiResponse;\nimport com.wordnik.swagger.annotations.ApiResponses;\n@Path(\"/device\")\n@Api( value = \"/device\", description = \"apiscope test WS\")\n@Produces({\"application/json\"})\npublic class Resource {\n@ApiParam(value = \"The logical name\", required = true)\n@QueryParam (\"logicalName\")\npublic String logicalName;\n\n@GET\n@Path(\"/initialize\")\n@ApiOperation(value = \"Initializes the device\", notes = \"Yuju!!.\", response = Data.class)\n@ApiResponses(value = {\n        @ApiResponse(code = 400, message = \"Invalid logicalName supplied\"),\n        @ApiResponse(code = 404, message = \"Service not found\")\n})\npublic Data initialize(\n        @ApiParam(value = \"Enable traces\", required = true)\n        @QueryParam(\"traces\") boolean traces) throws ClassNotFoundException\n{\n    return new Data();\n}\n\n}\n```\nAnd this is the Data class (note that it contains a List of Data1):\n``` java\npackage com.otarab.scope.rest;\nimport java.util.ArrayList;\nimport java.util.List;\nimport com.wordnik.swagger.annotations.ApiModel;\nimport com.wordnik.swagger.annotations.ApiModelProperty;\n@ApiModel( value = \"DataModel\", description = \"The data model\")\npublic class Data {\n@ApiModelProperty( value = \"El numero\")\npublic int numero = 0;\n\n@ApiModelProperty( value = \"El texto\")\npublic String texto = \":)\";\n\n@ApiModelProperty( value = \"El array\")\npublic List<Data1> datos = new ArrayList<Data1>();\n\n}\n```\nWhich contains an array of Data1:\n``` java\npackage com.otarab.scope.rest;\nimport com.wordnik.swagger.annotations.ApiModel;\nimport com.wordnik.swagger.annotations.ApiModelProperty;\n@ApiModel( value = \"DataModel1\", description = \"The data model\")\npublic class Data1 {\n@ApiModelProperty( value = \"El numero\")\npublic double doble = 0;\n\n@ApiModelProperty( value = \"El texto\")\npublic String texto= \":)\";\n\n}\n```\nWhat is happening is that Data1 does not appear in the model section.\nRegards :)\n. This an example resource (note that the initialize method has a response of Data):\n``` java\npackage com.otarab.scope.rest;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.QueryParam;\nimport com.wordnik.swagger.annotations.Api;\nimport com.wordnik.swagger.annotations.ApiOperation;\nimport com.wordnik.swagger.annotations.ApiParam;\nimport com.wordnik.swagger.annotations.ApiResponse;\nimport com.wordnik.swagger.annotations.ApiResponses;\n@Path(\"/device\")\n@Api( value = \"/device\", description = \"apiscope test WS\")\n@Produces({\"application/json\"})\npublic class Resource {\n@ApiParam(value = \"The logical name\", required = true)\n@QueryParam (\"logicalName\")\npublic String logicalName;\n\n@GET\n@Path(\"/initialize\")\n@ApiOperation(value = \"Initializes the device\", notes = \"Yuju!!.\", response = Data.class)\n@ApiResponses(value = {\n        @ApiResponse(code = 400, message = \"Invalid logicalName supplied\"),\n        @ApiResponse(code = 404, message = \"Service not found\")\n})\npublic Data initialize(\n        @ApiParam(value = \"Enable traces\", required = true)\n        @QueryParam(\"traces\") boolean traces) throws ClassNotFoundException\n{\n    return new Data();\n}\n\n}\n```\nAnd this is the Data class (note that it contains a List of Data1):\n``` java\npackage com.otarab.scope.rest;\nimport java.util.ArrayList;\nimport java.util.List;\nimport com.wordnik.swagger.annotations.ApiModel;\nimport com.wordnik.swagger.annotations.ApiModelProperty;\n@ApiModel( value = \"DataModel\", description = \"The data model\")\npublic class Data {\n@ApiModelProperty( value = \"El numero\")\npublic int numero = 0;\n\n@ApiModelProperty( value = \"El texto\")\npublic String texto = \":)\";\n\n@ApiModelProperty( value = \"El array\")\npublic List<Data1> datos = new ArrayList<Data1>();\n\n}\n```\nWhich contains an array of Data1:\n``` java\npackage com.otarab.scope.rest;\nimport com.wordnik.swagger.annotations.ApiModel;\nimport com.wordnik.swagger.annotations.ApiModelProperty;\n@ApiModel( value = \"DataModel1\", description = \"The data model\")\npublic class Data1 {\n@ApiModelProperty( value = \"El numero\")\npublic double doble = 0;\n\n@ApiModelProperty( value = \"El texto\")\npublic String texto= \":)\";\n\n}\n```\nWhat is happening is that Data1 does not appear in the model section.\nRegards :)\n. Here you are:\nI have this parent abstract resource, which is only intended to host common REST methods for its children classes:\n``` java\n@Produces({\"application/json\"})\n@Consumes({\"application/json\"})\npublic class ParentAbstractResource {\n@ApiParam(value = \"parent annotated field\", required = true)\n@QueryParam(\"parentfield\")      \npublic String parentField;\n\n@GET\n@Path(\"/parentmethod\")\n@ApiOperation(value = \"Parent resource\", notes = \"Yuju!!.\") \npublic String parent(\n        @ApiParam(value = \";)\", required = true)\n        @QueryParam(\"examplequeryparam\") boolean param)\n{\n    return \"Swagger rules :)\";\n}\n\n}\n```\nAnd this child class, which is an actual REST resource:\n``` java\n@Path(\"/child\")\n@Api( value = \"/child\", description = \"issue test\")\npublic class ChildResource extends ParentAbstractResource {\n@ApiParam(value = \"child annotated field\", required = true)\n@QueryParam(\"childField\")       \npublic String childField;\n\n@GET\n@Path(\"/childmethod\")\n@ApiOperation(value = \"Child resource\", notes = \"Yuju!!.\")  \npublic String child(\n        @ApiParam(value = \";)\", required = true)\n        @QueryParam(\"examplequeryparam\") boolean param)\n{\n    return \"Swagger rules :)\";\n}\n\n}\n```\nWhat happens is that parentField is not present in the api-docs JSON. This is what I get:\n\nHope is clearer now.\n. Here you are:\nI have this parent abstract resource, which is only intended to host common REST methods for its children classes:\n``` java\n@Produces({\"application/json\"})\n@Consumes({\"application/json\"})\npublic class ParentAbstractResource {\n@ApiParam(value = \"parent annotated field\", required = true)\n@QueryParam(\"parentfield\")      \npublic String parentField;\n\n@GET\n@Path(\"/parentmethod\")\n@ApiOperation(value = \"Parent resource\", notes = \"Yuju!!.\") \npublic String parent(\n        @ApiParam(value = \";)\", required = true)\n        @QueryParam(\"examplequeryparam\") boolean param)\n{\n    return \"Swagger rules :)\";\n}\n\n}\n```\nAnd this child class, which is an actual REST resource:\n``` java\n@Path(\"/child\")\n@Api( value = \"/child\", description = \"issue test\")\npublic class ChildResource extends ParentAbstractResource {\n@ApiParam(value = \"child annotated field\", required = true)\n@QueryParam(\"childField\")       \npublic String childField;\n\n@GET\n@Path(\"/childmethod\")\n@ApiOperation(value = \"Child resource\", notes = \"Yuju!!.\")  \npublic String child(\n        @ApiParam(value = \";)\", required = true)\n        @QueryParam(\"examplequeryparam\") boolean param)\n{\n    return \"Swagger rules :)\";\n}\n\n}\n```\nWhat happens is that parentField is not present in the api-docs JSON. This is what I get:\n\nHope is clearer now.\n. Hi,\nYou can access the parent field following one of the two ways I mention in the first message of this issue, you can take a look at this:\nhttp://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html#getFields()\nand this:\nhttp://stackoverflow.com/questions/3567372/access-to-private-inherited-fields-via-reflection-in-java\n. Hi,\nYou can access the parent field following one of the two ways I mention in the first message of this issue, you can take a look at this:\nhttp://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Class.html#getFields()\nand this:\nhttp://stackoverflow.com/questions/3567372/access-to-private-inherited-fields-via-reflection-in-java\n. Hello,\nI would also suggest that this issue is reconsidered. Although it is not such an important problem, it could be useful for some usecases (like mine ;) ). As I told in the previous messages, it is actually possible to access inherited fields through java reflection. \nI have some workarounds in my app to avoid this issue so I do not really need it to be solved, but I think it is worth the hassle for you since it should not be hard.\n. Hello,\nI would also suggest that this issue is reconsidered. Although it is not such an important problem, it could be useful for some usecases (like mine ;) ). As I told in the previous messages, it is actually possible to access inherited fields through java reflection. \nI have some workarounds in my app to avoid this issue so I do not really need it to be solved, but I think it is worth the hassle for you since it should not be hard.\n. You'd better go to sleep! :) (assuming that you live at CA)\n. You'd better go to sleep! :) (assuming that you live at CA)\n. You are right saying that it should not be mandatory to use @ApiParam but I think that, at least, documented fields should be annotated with @QueryParam, @PathParam or @HeaderParam. If a class declares private fields for internal use, they should not appear in the documentation... \n. You are right saying that it should not be mandatory to use @ApiParam but I think that, at least, documented fields should be annotated with @QueryParam, @PathParam or @HeaderParam. If a class declares private fields for internal use, they should not appear in the documentation... \n. Maybe you could check for annotations only in class fields. I think that for the rest of elements (method parameters) it should behave as you say. This way should not be disruptive as it would only affect class fields which are documented since 1.3.0.\n. Maybe you could check for annotations only in class fields. I think that for the rest of elements (method parameters) it should behave as you say. This way should not be disruptive as it would only affect class fields which are documented since 1.3.0.\n. Hi, have you thought about this issue? If I am not wrong, it should not be forgotten since current developers who have included private internal fields in ther JAX-RS resources will have problems if they update to 1.3\n. Hi, have you thought about this issue? If I am not wrong, it should not be forgotten since current developers who have included private internal fields in ther JAX-RS resources will have problems if they update to 1.3\n. It seems to work! :)\n. It seems to work! :)\n. Hi @tyler8691, I had the same problem some days ago. Remove the .json from api-docs as it is no longer required. Do the same with your resources. Below you have the web.xml that is working for me:\n``` xml\n    \nREST\ncom.sun.jersey.spi.container.servlet.ServletContainer\n\ncom.sun.jersey.config.property.packages\ncom.wordnik.swagger.jaxrs.listing,foo.bar.rest.resources\n\n\ncom.sun.jersey.api.json.POJOMappingFeature\ntrue\n\n1\n\n<servlet>\n    <servlet-name>DefaultJaxrsConfig</servlet-name>\n    <servlet-class>com.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig</servlet-class>\n    <init-param>\n        <param-name>api.version</param-name>\n        <param-value>0.4.1</param-value>\n    </init-param>\n\n     <init-param>\n        <param-name>swagger.api.basepath</param-name>\n        <param-value>/myapp/api</param-value>\n    </init-param>\n\n    <load-on-startup>2</load-on-startup>\n</servlet>\n\n```\nHope it helps! :)\n. Hi @tyler8691, I had the same problem some days ago. Remove the .json from api-docs as it is no longer required. Do the same with your resources. Below you have the web.xml that is working for me:\n``` xml\n    \nREST\ncom.sun.jersey.spi.container.servlet.ServletContainer\n\ncom.sun.jersey.config.property.packages\ncom.wordnik.swagger.jaxrs.listing,foo.bar.rest.resources\n\n\ncom.sun.jersey.api.json.POJOMappingFeature\ntrue\n\n1\n\n<servlet>\n    <servlet-name>DefaultJaxrsConfig</servlet-name>\n    <servlet-class>com.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig</servlet-class>\n    <init-param>\n        <param-name>api.version</param-name>\n        <param-value>0.4.1</param-value>\n    </init-param>\n\n     <init-param>\n        <param-name>swagger.api.basepath</param-name>\n        <param-value>/myapp/api</param-value>\n    </init-param>\n\n    <load-on-startup>2</load-on-startup>\n</servlet>\n\n```\nHope it helps! :)\n. Here you have the whole console trace including a fresh clone of the project:\n\nhttps://www.dropbox.com/s/adm4qokai4a9wv7/maven.txt\n. Here you have the whole console trace including a fresh clone of the project:\nhttps://www.dropbox.com/s/adm4qokai4a9wv7/maven.txt\n. Hi, I have tried again with a completely clean Windows machine and everything has worked this time. I am not sure why I am getting those errors in the other machines, something must be cached. I have tried to remove all my .m2 folder but remains the same. \n\nCould you suggest any folder I can remove? I am not an expert with maven so I must be missing something.\nAnyway, I will close this issue.\n. It has changed to @ApiResponses and @ApiResponse\n. It has changed to @ApiResponses and @ApiResponse\n. ",
    "blackumbrella": "Hi, thanks for your remind. You are correct and I have solve it.\n. ",
    "jlopezr": "Thanks! I will try to compile this one and let you know.\n2013/6/29 Tony Tam notifications@github.com\n\nHi, we stopped supporting play 1.x some time ago. I believe you'd need to\ncheck out this tag:\nhttps://github.com/wordnik/swagger-core/tree/swagger-project_2.9.1-1.1.0\nto build it. I think others would like it as well if you can help get it\nup to sync with swagger 1.2.5, but it has rotted some.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/238#issuecomment-20239035\n.\n. Hi aruld,\n\nI have compiled this swagger version and I solved these errors that you comment (see the attached gist https://gist.github.com/jlopezr/5937807). Basically the patch adds the annotations import and one function that have changed one parameter. However I get some strange scala errors\u2026 that seems to be in some posterior phase of compiling.\n\njuan@duo:~/Downloads/swagger-core/modules/swagger-play$ play build-module\n~        _            _\n~  _ __ | | __ _ _  _| |\n~ | '_ \\| |/ _' | || |_|\n~ |  __/|_|\\____|\\__ (_)\n~ |_|            |__/\n~\n~ play! 1.2.5, http://www.playframework.org\n~\n~ What are the playframework versions required? 1.2.5\n~\n~ Building...\n~\nBuildfile: /Users/juan/Downloads/swagger-core/modules/swagger-play/build.xml\ncheck:\ncompile:\n   [scalac] Compiling 4 scala and 3 java source files to /Users/juan/Downloads/swagger-core/modules/swagger-play/tmp/classes\n   [scalac] error: error while loading JsonSerialize$Inclusion, class file '/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jackson-databind-2.1.2.jar(com/fasterxml/jackson/databind/annotation/JsonSerialize$Inclusion.class)' is broken\n   [scalac] (class java.lang.UnsupportedOperationException/addChild inapplicable for )\n   [scalac] error: uncaught exception during compilation: java.lang.AssertionError\n   [scalac] java.lang.AssertionError: assertion failed:\n   [scalac]      while compiling: /Users/juan/Downloads/swagger-core/modules/swagger-play/src/play/modules/swagger/ApiHelpInventory.scala\n   [scalac]         during phase: global=typer, atPhase=namer\n   [scalac]      library version: version 2.10.2\n   [scalac]     compiler version: version 2.10.2\n   [scalac]   reconstructed args: -sourcepath /Users/juan/Downloads/swagger-core/modules/swagger-play/src -d /Users/juan/Downloads/swagger-core/modules/swagger-play/tmp/classes -classpath /Users/juan/Downloads/swagger-core/modules/swagger-play/lib/asm-3.1.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/common-utils_2.9.1-1.1.1.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/commons-lang-2.4.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/guava-13.0.1.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jackson-annotations-2.1.4.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jackson-core-2.1.2.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jackson-core-asl-1.9.11.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jackson-databind-2.1.2.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jackson-jaxrs-json-provider-2.0.0.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jackson-mapper-asl-1.9.11.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jackson-module-jaxb-annotations-2.0.0.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jackson-module-scala_2.9.1-2.1.3.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jersey-client-1.13.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jersey-core-1.13.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jersey-multipart-1.13.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jersey-server-1.13.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jersey-servlet-1.13.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/joda-convert-1.2.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/joda-time-2.2.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/json4s-ast_2.9.1-1-3.1.0.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/json4s-core_2.9.1-1-3.1.0.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/json4s-ext_2.9.1-1-3.1.0.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/json4s-jackson_2.9.1-1-3.1.0.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/jsr311-api-1.1.1.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/junit-4.8.1.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/mimepull-1.6.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/paranamer-2.3.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/servlet-api-2.5.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/slf4j-api-1.6.3.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/swagger-annotations_2.9.1-1.2.5.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/swagger-core_2.9.1-1.2.5.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/swagger-jaxrs-utils_2.9.1-1.2.5.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/swagger-jaxrs_2.9.1-1.2.5.jar:/Users/juan/Downloads/swagger-core/modules/swagger-play/lib/swagger-jersey-jaxrs_2.9.1-1.2.5.jar:/opt/local/share/scala-2.10/lib/scala-actors-migration.jar:/opt/local/share/scala-2.10/lib/scala-actors.jar:/opt/local/share/scala-2.10/lib/scala-compiler.jar:/opt/local/share/scala-2.10/lib/scala-library.jar:/opt/local/share/scala-2.10/lib/scala-partest.jar:/opt/local/share/scala-2.10/lib/scala-reflect.jar:/opt/local/share/scala-2.10/lib/scala-swing.jar:/opt/local/share/scala-2.10/lib/scalap.jar:/opt/local/share/java/play-1.2.5/framework/classes:/opt/local/share/java/play-1.2.5/framework/lib/activation-1.1.1.jar:/opt/local/share/java/play-1.2.5/framework/lib/antlr-2.7.7.jar:/opt/local/share/java/play-1.2.5/framework/lib/asm-all-3.3.1.jar:/opt/local/share/java/play-1.2.5/framework/lib/async-http-client-1.7.4.jar:/opt/local/share/java/play-1.2.5/framework/lib/bcprov-jdk15-1.45.jar:/opt/local/share/java/play-1.2.5/framework/lib/c3p0-0.9.1.2.jar:/opt/local/share/java/play-1.2.5/framework/lib/cglib-nodep-2.2.jar:/opt/local/share/java/play-1.2.5/framework/lib/commons-beanutils-1.8.3.jar:/opt/local/share/java/play-1.2.5/framework/lib/commons-codec-1.4.jar:/opt/local/share/java/play-1.2.5/framework/lib/commons-collections-3.1.jar:/opt/local/share/java/play-1.2.5/framework/lib/commons-email-1.2.jar:/opt/local/share/java/play-1.2.5/framework/lib/commons-fileupload-1.2.2.jar:/opt/local/share/java/play-1.2.5/framework/lib/commons-io-2.0.1.jar:/opt/local/share/java/play-1.2.5/framework/lib/commons-javaflow-1209105.jar:/opt/local/share/java/play-1.2.5/framework/lib/commons-lang-2.6.jar:/opt/local/share/java/play-1.2.5/framework/lib/commons-logging-1.1.1.jar:/opt/local/share/java/play-1.2.5/framework/lib/dom4j-1.6.1.jar:/opt/local/share/java/play-1.2.5/framework/lib/ehcache-core-2.4.3.jar:/opt/local/share/java/play-1.2.5/framework/lib/ezmorph-1.0.3.jar:/opt/local/share/java/play-1.2.5/framework/lib/geronimo-servlet_2.5_spec-1.2.jar:/opt/local/share/java/play-1.2.5/framework/lib/groovy-all-1.8.6.jar:/opt/local/share/java/play-1.2.5/framework/lib/gson-2.2.jar:/opt/local/share/java/play-1.2.5/framework/lib/h2-1.3.166.jar:/opt/local/share/java/play-1.2.5/framework/lib/hibernate-commons-annotations-3.2.0.Final.jar:/opt/local/share/java/play-1.2.5/framework/lib/hibernate-core-3.6.10.Final.jar:/opt/local/share/java/play-1.2.5/framework/lib/hibernate-entitymanager-3.6.10.Final.jar:/opt/local/share/java/play-1.2.5/framework/lib/hibernate-jpa-2.0-api-1.0.1.Final.jar:/opt/local/share/java/play-1.2.5/framework/lib/hibernate-validator-4.1.0.Final.jar:/opt/local/share/java/play-1.2.5/framework/lib/ivy-2.2.0.jar:/opt/local/share/java/play-1.2.5/framework/lib/jamon-2.7.jar:/opt/local/share/java/play-1.2.5/framework/lib/javassist-3.9.0.GA.jar:/opt/local/share/java/play-1.2.5/framework/lib/javax.inject-1.0.jar:/opt/local/share/java/play-1.2.5/framework/lib/jaxb-api-2.2.jar:/opt/local/share/java/play-1.2.5/framework/lib/jaxb-impl-2.1.12.jar:/opt/local/share/java/play-1.2.5/framework/lib/jaxen-1.1.jar:/opt/local/share/java/play-1.2.5/framework/lib/jboss-transaction-api_1.1_spec-1.0.0.Final.jar:/opt/local/share/java/play-1.2.5/framework/lib/jj-imaging.jar:/opt/local/share/java/play-1.2.5/framework/lib/jj-simplecaptcha.jar:/opt/local/share/java/play-1.2.5/framework/lib/jj-textile.jar:/opt/local/share/java/play-1.2.5/framework/lib/jj-wikitext.jar:/opt/local/share/java/play-1.2.5/framework/lib/joda-time-2.1.jar:/opt/local/share/java/play-1.2.5/framework/lib/jregex-1.2_01.jar:/opt/local/share/java/play-1.2.5/framework/lib/jsr107cache-1.0.jar:/opt/local/share/java/play-1.2.5/framework/lib/junit-4.10.jar:/opt/local/share/java/play-1.2.5/framework/lib/log4j-1.2.16.jar:/opt/local/share/java/play-1.2.5/framework/lib/mail-1.4.3.jar:/opt/local/share/java/play-1.2.5/framework/lib/memcached-2.6.jar:/opt/local/share/java/play-1.2.5/framework/lib/mysql-connector-java-5.1.20.jar:/opt/local/share/java/play-1.2.5/framework/lib/netty-3.4.2.Final.jar:/opt/local/share/java/play-1.2.5/framework/lib/org.eclipse.jdt.core-3.7.1.v_B76_R37x.jar:/opt/local/share/java/play-1.2.5/framework/lib/oval-1.50.jar:/opt/local/share/java/play-1.2.5/framework/lib/postgresql-9.0.jar:/opt/local/share/java/play-1.2.5/framework/lib/signpost-core-1.2.jar:/opt/local/share/java/play-1.2.5/framework/lib/slf4j-api-1.6.1.jar:/opt/local/share/java/play-1.2.5/framework/lib/slf4j-log4j12-1.6.1.jar:/opt/local/share/java/play-1.2.5/framework/lib/snakeyaml-1.7.jar:/opt/local/share/java/play-1.2.5/framework/lib/validation-api-1.0.0.GA.jar:/opt/local/share/java/play-1.2.5/framework/lib/xmlpull-1.1.3.1.jar:/opt/local/share/java/play-1.2.5/framework/lib/xstream-1.4.2.jar:/opt/local/share/java/play-1.2.5/framework/play-1.2.5.jar -dependencyfile /Users/juan/Downloads/swagger-core/modules/swagger-play/.scala_dependencies\n   [scalac] ...\n\nI don't really know scala and I am not really confident on my scala installation. Perhaps you can try to apply the same patch and see if you are more lucky. \nIf any has suggestion or hint about the scala error it will be great to hear about it.\nBR,\nJuan\n. Hi!\nI am using version 2.9.3. Do you think this can be a problem?\nWhat are the contents of your\n.../swagger-core/modules/swagger-play/lib directory? I have copied the\ncompiled .jars from the maven compilation.\nBR,\nJuan\n2013/7/5 Arul Dhesiaseelan notifications@github.com\n\nHi Juan,\nI applied the patch and it did not resolve the compile issues. Did you try\nbuilding with Scala version 2.9.1-1?\nThanks!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/238#issuecomment-20548014\n.\n. Yeah! I was also able to compile it with both scala 2.9.1-1 and also 2.9.3.\nI will test this with our monday and I will let you know.\n\n2013/7/6 Tony Tam notifications@github.com\n\ncool! Please post back if it works with your app when you can\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/238#issuecomment-20549628\n.\n. I couldn't resist to make a small test... but I get some error:\n\njuan@duo:~/Dropbox/Proyectos/swagger-play-sample-app$ play run\n~        _            \n~  _  | |  _  | |\n~ | ' | |/ ' | || ||\n~ |  /|_|__| ()\n~ ||            |/\n~\n~ play! 1.2.5, http://www.playframework.org\n~\n~ Ctrl+C to stop\n~\nCompilerOracle: exclude jregex/Pretokenizer.next\n11:22:38,027 INFO  ~ Starting\n/Users/juan/Dropbox/Proyectos/swagger-play-sample-app\n11:22:38,034 INFO  ~ Module scala is available\n(/Users/juan/Dropbox/Proyectos/swagger-play-sample-app/modules/scala-0.9.1)\n11:22:38,035 INFO  ~ Module swagger is available\n(/Users/juan/Dropbox/Proyectos/swagger-play-sample-app/modules/swagger-play)\n11:22:41,656 INFO  ~ Scala support is active\n11:22:41,656 INFO  ~ Precompiling ...\nCompiling:\n...\n...\n11:22:48,321 ERROR ~ Cannot start in PROD mode with errors\njava.lang.AssertionError: assertion failed: List(object Byte, object Byte)\nat scala.tools.nsc.symtab.Symbols$Symbol.suchThat(Symbols.scala:1056)\n at\nscala.tools.nsc.symtab.Symbols$Symbol.companionModule0(Symbols.scala:1271)\nat scala.tools.nsc.symtab.Symbols$Symbol.companionModule(Symbols.scala:1281)\n at\nscala.tools.nsc.symtab.Symbols$Symbol.linkedClassOfClass(Symbols.scala:1302)\nat\nscala.tools.nsc.symtab.Definitions$definitions$.addModuleMethod$1(Definitions.scala:711)\n at\nscala.tools.nsc.symtab.Definitions$definitions$.initValueClasses(Definitions.scala:714)\nat\nscala.tools.nsc.symtab.Definitions$definitions$.init(Definitions.scala:791)\n at scala.tools.nsc.Global$Run.(Global.scala:604)\nat xsbt.CompilerInterface.run(CompilerInterface.scala:85)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\n at sbt.compiler.AnalyzingCompiler.call(AnalyzingCompiler.scala:57)\nat sbt.compiler.AnalyzingCompiler.compile(AnalyzingCompiler.scala:29)\n at sbt.compiler.AnalyzingCompiler.compile(AnalyzingCompiler.scala:25)\nat\nsbt.AggressiveCompile$$anonfun$5.compileScala$1(AggressiveCompile.scala:66)\n at sbt.AggressiveCompile$$anonfun$5.apply(AggressiveCompile.scala:78)\nat sbt.AggressiveCompile$$anonfun$5.apply(AggressiveCompile.scala:56)\n at sbt.inc.IncrementalCompile$$anonfun$doCompile$1.apply(Compile.scala:21)\nat sbt.inc.IncrementalCompile$$anonfun$doCompile$1.apply(Compile.scala:19)\n at sbt.inc.Incremental$.cycle(Incremental.scala:34)\nat sbt.inc.Incremental$.compile(Incremental.scala:21)\n at sbt.inc.IncrementalCompile$.apply(Compile.scala:17)\nat sbt.AggressiveCompile.compile2(AggressiveCompile.scala:86)\n at sbt.AggressiveCompile.compile1(AggressiveCompile.scala:37)\nat sbt.AggressiveCompile.apply(AggressiveCompile.scala:27)\n at sbt.Compiler$.apply(Compiler.scala:101)\nat\nplay.scalasupport.compiler.PlayScalaCompiler.update(ScalaCompiler.scala:55)\n at play.scalasupport.ScalaPlugin.update(ScalaPlugin.scala:199)\nat play.scalasupport.ScalaPlugin.compileSources(ScalaPlugin.scala:98)\n at play.plugins.PluginCollection.compileSources(PluginCollection.java:449)\nat\nplay.classloading.ApplicationClassloader.getAllClasses(ApplicationClassloader.java:411)\n at play.Play.preCompile(Play.java:593)\nat play.Play.init(Play.java:299)\nat play.server.Server.main(Server.java:159)\nIt sounds to me to a scala version problem, but I have tried with 2.9.1-1\nand 2.9.3 and I get the same :|\nJuan\n2013/7/6 Juan L\u00f3pez j.lopez.r@gmail.com\n\nYeah! I was also able to compile it with both scala 2.9.1-1 and also\n2.9.3. I will test this with our monday and I will let you know.\n2013/7/6 Tony Tam notifications@github.com\n\ncool! Please post back if it works with your app when you can\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/238#issuecomment-20549628\n.\n. Mmm... I have deleted other scala installations other than 2.9.1-1, maven\nand ivy directories and started again. I get the same results :(\n\n\nThe only thing I noticed is that inside maven directory there are\nscala-compiler both 2.9.1-1 and 2.9.2 versions, seems that some library is\ncompiled with it... Any suggestion?\nArul, did your application worked?\nThanks,\nJuan\n2013/7/6 Tony Tam notifications@github.com\n\nIt is definitely a scala version problem. Maybe the ivy cache needs be\ncleaned?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/238#issuecomment-20556124\n.\n. Hi Arul,\n\nI have used this one as example for my code:\nhttps://github.com/wordnik/swagger-play-sample-app\nI modified very few things, basically importing some packages. I sent you\nattached the patch. I have some problems with the dependencies and play, so\nI finally copied the swagger-play module directory to the modules folder.\nBut in any case, when I start play, there is some scala version conflict.\nPerhaps, you are luckier and we are able to track the problem.\nBR,\nJuan\n2013/7/10 Arul Dhesiaseelan notifications@github.com\n\nI am still researching how to integrate Swagger in my project. All I have\nnow is the hand made Swagger JSON. Can you point to a Swagger sample that\nworks with Play 1.2.x?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/238#issuecomment-20722277\n.\n. \n",
    "aruld": "I have a similar requirement to use swagger in a play 1.2.5 project. I checked out the branch swagger-project_2.9.1-1.1.0\narul:swagger-play arul$ scala -version\nScala code runner version 2.9.1-1 -- Copyright 2002-2011, LAMP/EPFL\narul:swagger-play arul$ play build-module\n~        _            _ \n~  _  | |  _  | |\n~ | ' | |/ ' | || |_|\n~ |  /|_|__| ()\n~ ||            |/\n~\n~ play! 1.2.5, http://www.playframework.org\n~\n~ What are the playframework versions required? 1.2.5\n~\n~ Building...\n~\nBuildfile: /Users/arul/github/swagger-core/modules/swagger-play/build.xml\ncheck:\ncompile:\n   [scalac] Compiling 4 scala and 3 java source files to /Users/arul/github/swagger-core/modules/swagger-play/tmp/classes\n   [scalac] Element '/Users/arul/play-1.2.5/framework/classes' does not exist.\n   [scalac] /Users/arul/github/swagger-core/modules/swagger-play/src/play/modules/swagger/ApiHelpInventory.scala:19: error: object jackson is not a member of package org.codehaus\n   [scalac] import org.codehaus.jackson.map.ObjectMapper\n   [scalac]                     ^\n   [scalac] /Users/arul/github/swagger-core/modules/swagger-play/src/play/modules/swagger/ApiHelpInventory.scala:23: error: object core is not a member of package com.wordnik.swagger\n   [scalac] import com.wordnik.swagger.core.\n   [scalac]                            ^\n   [scalac] /Users/arul/github/swagger-core/modules/swagger-play/src/play/modules/swagger/ApiHelpInventory.scala:151: error: value toList is not a member of java.util.List[play.classloading.ApplicationClasses.ApplicationClass]\n   [scalac]       val classes = Play.classes.all().toList\n   [scalac]                                        ^\n   [scalac] /Users/arul/github/swagger-core/modules/swagger-play/src/play/modules/swagger/ApiHelpInventory.scala:162: error: value getAnnotation is not a member of type parameter A\n   [scalac]           val apiAnnotation = clazz.getAnnotation(classOf[Api])\n   [scalac]                                     ^\n   [scalac] /Users/arul/github/swagger-core/modules/swagger-play/src/play/modules/swagger/ApiHelpInventory.scala:80: error: value getAnnotation is not a member of type parameter A\n   [scalac]       val apiAnnotation = clazz.getAnnotation(classOf[Api])\n   [scalac]                                 ^\n   [scalac] /Users/arul/github/swagger-core/modules/swagger-play/src/play/modules/swagger/HelpApi.scala:19: error: object core is not a member of package com.wordnik.swagger\n   [scalac] import com.wordnik.swagger.core.\n   [scalac]                            ^\n   [scalac] /Users/arul/github/swagger-core/modules/swagger-play/src/play/modules/swagger/PlayApiReader.scala:19: error: object core is not a member of package com.wordnik.swagger\n   [scalac] import com.wordnik.swagger.core._\n   [scalac]                            ^\n   [scalac] /Users/arul/github/swagger-core/modules/swagger-play/src/play/modules/swagger/PlayApiReader.scala:35: error: value parse is not a member of play.modules.swagger.PlayApiSpecParser\n   [scalac]       case None => val doc = new PlayApiSpecParser(hostClass, apiVersion, swaggerVersion, basePath, apiPath).parse; endpointsCache += hostClass -> doc.clone.asInstanceOf[Documentation]; doc\n   [scalac]                                                                                                              ^\n   [scalac] 8 errors found\nBUILD FAILED\n. Hi Juan,\nI applied the patch and it did not resolve the compile issues. Did you try building with Scala version 2.9.1-1?\nThanks!\n. Scala version 2.9.1-1 is specified in the Maven pom for this project. So, I would not take chances with newer versions of Scala. Here are the jars I have in lib dir.\ncommons-lang-2.4.jar\njackson-jaxrs-json-provider-2.0.0.jar\nlog4j-1.2.16.jar\nslf4j-api-1.6.3.jar\nguava-r09.jar\njackson-module-jaxb-annotations-2.0.0.jar\nparanamer-2.3.jar\nslf4j-log4j12-1.6.3.jar\njackson-annotations-2.0.4.jar\njackson-module-scala-2.0.0.jar\nscala-library-2.9.1-1.jar\nswagger-annotations_2.9.1-1.1.0.jar\njackson-core-2.0.0.jar\njsr311-api-1.1.1.jar\nscalabeans-0.2.jar\njackson-databind-2.0.0.jar\njunit-4.8.1.jar\nscalatest_2.9.1-1.6.1.jar\n. Awesome, I am able to build now from the master. Thanks!\n. I am still researching how to integrate Swagger in my project. All I have now is the hand made Swagger JSON. Can you point to a Swagger sample that works with Play 1.2.x?\n. ",
    "estelle-peterson": "https://gist.github.com/dopeymac/5904302\n. Sorry about that, I've updated the repository, please try now and let me know if you are still having issues. Thanks!\n. Here's a link to the newly created repository: https://github.com/dopeymac/swagger-250\n. ",
    "PedroAlvarado": "@fehguy Let me know if you need anything else. We have a number of services we can't document due to this problem. Thanks for looking into this. \n. Its unfortunate you can't reproduce with the DTO provided. Potentially, there is another factor at play here. Best thing we can do is to provide a project based on the jaxrs-cxf(java-based) example that reproduces the issue we are seeing. We'll get back to you some time Tomorrow. Also, yes, dopeymac and myself are teammates. \nFYI, our dependencies look like:\n<dependency>\n        <groupId>com.wordnik</groupId>\n        <artifactId>swagger-core_2.9.1</artifactId>\n        <version>1.3.0-SNAPSHOT</version>\n        <scope>compile</scope>\n    </dependency>\n    <dependency>\n        <groupId>com.wordnik</groupId>\n        <artifactId>swagger-jaxrs_2.9.1</artifactId>\n        <version>1.3.0-SNAPSHOT</version>\n        <scope>compile</scope>\n    </dependency>\n. Our code looks something along the line of:\n@GET\n   @Produces(\"application/json\")\n   @Path(\"/school/{id}\")\n   @ApiOperation(value=\"Return a list of schools\",\n                notes=\"Input parameter takes a school Id\",\n                response=School.class,\n                responseContainer = \"List\")\n   List<School> getSimilarSchools(\n      @ApiParam(value=\"School ID\", required=true)\n      @PathParam(\"id\")\n      String id);\n. @fehguy here is a quick project that reproduces the problem we see. https://github.com/PedroAlvarado/swagger-239. Its based on a modified version of https://github.com/wordnik/swagger-core/tree/1.3-RC1/samples/java-jaxrs-cxf.\nLet me know if you need more information or help. Thanks,\n. @fehguy Is there an example on how to override the model schemas?\n. ",
    "brunoroussel": "Great !! \nCan I get the fixed jar on a maven repository ?\n. Thanks, I'll try it tomorrow.\n. That's right, I don't find it as a top-level model. \nI do not return the enum class directly.\nEverything works fine for the enum.\nThe wierd behavior is the String class that i found as a top-level model.\nI had to hack the swagger ui to ignore the string class, otherwise I had some strange behaviors in the ui.\n. Great but I'll wait the RC3 to be packaged and published on maven repo.\n. ",
    "lawtya": "For us to be able to use swagger - we need this.  If anyone has any workarounds in the meantime that would be great as we have come to a halt without this capability.  Is there an eta for swagger-core 1.3.1?\n. Understood - its the viewing of the model schema that's needed so that who ever is viewing the documentation knows the structure of what to enter for example for a particular api call - i.e.:\n{\n\"password\" : \"mypassword\"\n}\nCan you recommend any workaround in the meantime until we wait for the official fix - i.e. what should we be looking to modify to get us over this hurdle.\n. thank you - sometimes a simple workaround until a fix comes along is the best :).  One further question, I guess im asking too much to assume you can format anything that goes into the notes for the Api?  I.e. if I wanted to see the details as\n{\n\"password\" : \"mypassword\"\n}\nI guess the best we can hope for is {password:mypassword}  ??\nThanks again :)\n. ",
    "agentgonzo": "I have the same issue. The best workaround that I have come up with is to put the details of the map parametrisations in the 'notes' for the API. It's not ideal by any means, but does provide the info to the user.\n. the 'notes' is just a string. You can put whatever you like in there but I don't know how it formats it. You may be able to trick it by stuffing html tags for newlines in there, or \\n characters. But even if you can't, having in on one line isn't too unreadable: {\"password\" : \"mypassword\"}\n. ",
    "ashwinifly": "I am facing problems with \"maps\" in my model. Will this be fixed ? If yes what's the target version ?\n. I am facing problems with \"maps\" in my model. Will this be fixed ? If yes what's the target version ?\n. ",
    "vaelen": "I tried to fix this myself a while back and gave up after a day or so of working on it.  The changes that are needed are pretty extensive.  To get around this we either have well defined objects to pass around in cases where the set of possible keys is well known, or we pass a JSON encoded string if we need to support a truly unknown set of keys.\n. ",
    "lloydmeta": ":+1: \n. @suxonoff any progress ? :)\n. Ok sounds good. Closing this one.\n. NVM, actually this has been resolved in the develop branch.\n. ",
    "PredatorVI": "We are using SpringMVC 3.2.3-RELEASE with swagger-core 0.5.1 because we cant get the newer versions to work.\nSent via the Samsung GALAXY S\u21224, an AT&T 4G LTE smartphone\n-------- Original message --------\nFrom: Tony Tam notifications@github.com\nDate: 07/08/2013 7:29 PM (GMT-07:00)\nTo: wordnik/swagger-core swagger-core@noreply.github.com\nCc: Jeff Vincent JVincent@ancestry.com\nSubject: Re: [swagger-core] Use full @RequestMapping path in section headers and/or allow custom grouping of elements... (#247)\nhi, what version of swagger core are you using? and are you using spring mvc or jaxrs directly?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/247#issuecomment-20648088.\n. Yes...that's correct...sorry.\nSent via the Samsung GALAXY S\u21224, an AT&T 4G LTE smartphone\n-------- Original message --------\nFrom: Tony Tam notifications@github.com\nDate: 07/08/2013 11:09 PM (GMT-07:00)\nTo: wordnik/swagger-core swagger-core@noreply.github.com\nCc: Jeff Vincent JVincent@ancestry.com\nSubject: Re: [swagger-core] Use full @RequestMapping path in section headers and/or allow custom grouping of elements... (#247)\nHi, I think you mean swagger-springmvchttps://github.com/martypitt/swagger-springmvc? If so, I think we need to post in that project to get some more information.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/247#issuecomment-20653751.\n. ",
    "timur-han": "Hi, \nI use jersey version 1.17 and it's on my build path. Do u have any other idea for the cause of the problem? \nRegards,\nTimur \n. Hi,\nMy web.xml: \n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\nRepository\n\nResources\ncom.sun.jersey.spi.container.servlet.ServletContainer\n\ncom.sun.jersey.config.property.packages\norg.opentosca.winery.repository.resources;com.wordnik.swagger.jaxrs.listing\n\n\ncom.sun.jersey.config.feature.FilterForwardOn404\nfalse\n\n\ncom.sun.jersey.config.feature.CanonicalizeURIPath\ntrue\n\n\ncom.sun.jersey.config.feature.NormalizeURI\ntrue\n\n\ncom.sun.jersey.config.feature.Redirect\ntrue\n\n    <!-- enables @Consumes(MediaType.APPLICATION_JSON) and @Produces(MediaType.APPLICATION_JSON) -->\n    <init-param>\n        <param-name>com.sun.jersey.api.json.POJOMAppingFeature</param-name>\n        <param-value>true</param-value>\n    </init-param>\n\n    <init-param>\n      <param-name>swagger.api.basepath</param-name>\n      <param-value>http://localhost:8080/winery</param-value>\n    </init-param>\n    <init-param>\n        <param-name>api.version</param-name>\n        <param-value>1.0.0</param-value>\n    </init-param>\n\n</filter>\n<filter-mapping>\n    <filter-name>Resources</filter-name>\n\n    <url-pattern>/path1/*</url-pattern>\n    <url-pattern>/path2/*</url-pattern>\n    <url-pattern>/path3/*</url-pattern>\n\n\n    <!--  additional resources -->\n    <url-pattern>/</url-pattern>\n    <url-pattern>/test1/*</url-pattern>\n    <url-pattern>/test2/*</url-pattern>\n\n</filter-mapping>\n<listener>\n    <listener-class>org.opentosca.winery.repository.Listener</listener-class>\n</listener>\n\n\n```\nI use swagger-jaxrs_2.9.1-1.3.0-RC1.jar.\nRegards,\nTimur\n. Hi,\nThe application uses filter and later on we have decided on adding swagger as well and the filter there cannot be replaced with a servlet.\nFrom the examples, I understood that I need to add com.wordnik.swagger.jaxrs.listing to the init-param, define basepath and api-version in my main resource similarly. \nI also added something like (carried out the contents of the filter): \nxml\n<servlet>\n    <servlet-name>DefaultJaxrsConfig</servlet-name>\n    <servlet-class>com.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig</servlet-class>\n    <init-param>\n      <param-name>api.version</param-name>\n      <param-value>1.0.0</param-value>\n    </init-param>\n    <init-param>\n      <param-name>swagger.api.basepath</param-name>\n      <param-value>http://localhost:8080/winery</param-value>\n    </init-param>\n    <load-on-startup>2</load-on-startup>\n  </servlet>\nwhich did not make any change.\nIs there any other way of making the configuration? \n. Okay, thanks a lot, I was using http://localhost:8080/api-docs.json as under testing section of https://github.com/wordnik/swagger-core/wiki/java-jax-rs and in the README.md files of the corresponding projects have been stated. \nNow it works :) \n. ",
    "kevinosullivan": "@fehguy @timur87 - I know this issues is closed, but can you advise what the actual fix is? Is it changes to the pom.xml to correct dependencies, or is there a code change that is pending a future release of swagger-jaxrs_2.9.1 ?\n. ",
    "tyler8691": "Here is my response:\n{\"apiVersion\":\"1.0\",\"apis\":{\"description\":\"\",\"path\":\"/api-docs.{format}/test\"},\"basePath\":\"http://localhost:8080\",\"swaggerVersion\":\"1.1\"}\nOne thing to note is the description field is blank. I'm wondering if this is part of the issue. Here is my class:\nimport com.wordnik.swagger.annotations.*;\nimport com.wordnik.swagger.jaxrs.JavaApiListing;\nimport javax.ws.rs.*;\n@Path(\"/test.json\")\n@Api(value = \"/test\", description = \"Test operations\")\n@Produces({\"application/json\"})\npublic class Test {\n@GET \n@Path(\"/sayhello\")\n@ApiOperation(value = \"Say Hello\")\npublic String sayhello() {\n    return \"{'message' : 'Hi'}\";\n}\n}\n. And the description DOES show up on the test api url\nhttp://localhost:8080/myapp/api-docs.json/test\nResponse:\n{\"apiVersion\":\"1.0\",\"apis\":{\"description\":\"Test operations\",\"operations\":{\"httpMethod\":\"GET\",\"nickname\":\"sayhello\",\"responseClass\":\"void\",\"summary\":\"Say Hello\"},\"path\":\"/test.{format}/sayhello\"},\"basePath\":\"http://localhost:8080\",\"resourcePath\":\"/test\",\"swaggerVersion\":\"1.1\"}\n. Thanks for the quick response. Unfortunately that is not the problem, I've tried that already and it doesn't fix it.\nNote that I get the \"unable to load class\" error whenever I hit the server for the json file, whether from swagger-ui or directly from the browser.\n. I updated my web.xml as you suggested before to fix the url path issue.\nI tried pulling 1.3.0-RC1 but now I'm not even getting an api-docs.json. Note that on compiling with the newer version it couldn't find the class com.wordnik.swagger.jaxrs.JavaApiListing...I replaced it with an asterisk to grab everything but there could be a problem here.\nI'm going to checkout the sample app and see if it works on my machine. Although I don't see any reason why my current setup isn't working, I followed the https://github.com/wordnik/swagger-core/wiki/java-jax-rs tutorial completely on an empty web project.\nLet me know if you have any other ideas, and thanks for all the help!\n. Ok, now I get a response:\n{\"apiVersion\":\"0.0\",\"swaggerVersion\":\"1.2\"}\nBut it doesn't seem to be scraping my resources. Is there a difference in API declaration in the new version?\n``` java\npackage com.tyler.testing;\nimport com.wordnik.swagger.annotations.;\nimport com.wordnik.swagger.jaxrs.;\nimport javax.ws.rs.*;\n@Path(\"/test.json\")\n@Api(value = \"/test\", description = \"Test operations\")\n@Produces({\"application/json\"})\npublic class Test {\n@GET \n@Path(\"/sayhello\")\n@ApiOperation(value = \"Say Hello\")\npublic String sayhello() {\n    return \"{'message' : 'Hi'}\";\n}\n\n}\n```\nI've tried with only /test in the @Path as well. Here's my web.xml:\nxml\n<servlet>\n        <servlet-name>Jersey Web Application</servlet-name>\n        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>\n        <init-param>\n            <param-name>com.sun.jersey.config.property.packages</param-name>\n            <param-value>com.tyler.testing;com.wordnik.swagger.jaxrs.listing</param-value>\n        </init-param>\n        <init-param>\n            <param-name>api.version</param-name>\n            <param-value>1.0.0</param-value>\n        </init-param>\n        <init-param>\n            <param-name>swagger.api.basepath</param-name>\n            <param-value>/myapp</param-value>\n        </init-param>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>Jersey Web Application</servlet-name>\n        <url-pattern>/*</url-pattern>\n    </servlet-mapping>\n    <filter>\n        <filter-name>ApiOriginFilter</filter-name>\n        <filter-class>com.tyler.testing.ApiOriginFilter</filter-class>\n    </filter>\n    <filter-mapping>\n        <filter-name>ApiOriginFilter</filter-name>\n        <url-pattern>/*</url-pattern>\n    </filter-mapping>\n. Works perfectly. Thanks!\n. I noticed that in branch 1.3.0-RC1 there is no APIErrors annotation. Is this intentional?\n. Never mind, I had it in front of a @QueryParam by accident. Please close this.\n. Just noticed this is a TODO in the source code in 1.3-RC1. Is there a timeline for when this might be added?\n. Great! :)\n. This is the jaxrs module on 1.3-RC3\n. I fixed this issue in my codebase with the following:\nscala\nParameter(\n              param.name,\n              Option(readString(param.value)),\n              Option(param.defaultValue).filter(_.trim.nonEmpty),\n              param.required,\n              param.allowMultiple,\n              param.dataType,\n              allowableValues,\n              param.paramType,\n              Option(param.access).filter(_.trim.nonEmpty))\n          }\nand it works fine. Let me know if this is incorrect!\n. I currently have limited access to github (corporate proxy) so you'll have\nto just make the change\nOn Jul 23, 2013 12:50 PM, \"Tony Tam\" notifications@github.com wrote:\n\nthat looks right, want to send a PR?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/268#issuecomment-21428335\n.\n. \n",
    "hcrocker": "Tony,\nI enabled debugging in the swagger-maven plugin (1.1.0) as well as the\nmaven compiler.  I did not see any interesting output.  Is that how you\nwant debugging enabled?  I also added a logger (log4j) to my annotated\nresource class but no output was generated.\nI have attached my schema, the generated class, the annotated resource, and\nthe JSON output for your review.  If I use 1.2.5 and ApiProperty (vs\nApiModelProperty) this works.\nWe are looking to use the product but since the annotations are changing in\nthe next release we are trying to use 1.3 to avoid rework later.\nThanks.\nHenry.\nOn Fri, Jul 12, 2013 at 12:07 AM, Tony Tam notifications@github.com wrote:\n\nOK that's not right. If you can, set com.wordnik=DEBUG in your logger and\npost what you see? What does com.servicemesh.model.Employee look like?\nMaybe that class is failing to introspect?\nI don't believe the reader is smart enough to link the response (void) to\nthe produces field. I'm guessing something else is going on.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/252#issuecomment-20858712\n.\n. Sorry...new to Git.\n\nI do not see a way to attach files so I will include them inline.  My apologies if this is wrong.\n- model.xsd\n- Employee.java\n- Person.java\n- Staff.java\n- service.json\n- staff.json\nmodel.xsd\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n\n\n\n\nEmployee\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPerson\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\nEmployee.java\n``` java\n//\n// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 \n// See http://java.sun.com/xml/jaxb \n// Any modifications to this file will be lost upon recompilation of the source schema. \n// Generated on: 2013.07.12 at 07:01:29 AM CDT \n//\npackage com.servicemesh.model;\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlElement;\nimport javax.xml.bind.annotation.XmlRootElement;\nimport javax.xml.bind.annotation.XmlType;\nimport com.wordnik.swagger.annotations.ApiModel;\nimport com.wordnik.swagger.annotations.ApiModelProperty;\nimport org.jvnet.jaxb2_commons.lang.Equals;\nimport org.jvnet.jaxb2_commons.lang.EqualsStrategy;\nimport org.jvnet.jaxb2_commons.lang.HashCode;\nimport org.jvnet.jaxb2_commons.lang.HashCodeStrategy;\nimport org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;\nimport org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;\nimport org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;\nimport org.jvnet.jaxb2_commons.lang.ToString;\nimport org.jvnet.jaxb2_commons.lang.ToStringStrategy;\nimport org.jvnet.jaxb2_commons.locator.ObjectLocator;\nimport org.jvnet.jaxb2_commons.locator.util.LocatorUtils;\n/*\n * Java class for employee complex type.\n * \n * The following schema fragment specifies the expected content contained within this class.\n * \n * \n * <complexType name=\"employee\">\n *   <complexContent>\n *     <extension base=\"{http://www.servicemesh.com/model}person\">\n *       <sequence>\n *         <element name=\"companyId\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n *         <element name=\"managerId\" type=\"{http://www.w3.org/2001/XMLSchema}string\" minOccurs=\"0\"/>\n *         <element name=\"age\" type=\"{http://www.servicemesh.com/model}ageRange\"/>\n *         <element name=\"classification\" type=\"{http://www.servicemesh.com/model}employeeClassification\"/>\n *       </sequence>\n *     </extension>\n *   </complexContent>\n * </complexType>\n * \n * \n * \n /\n@XmlAccessorType(XmlAccessType.FIELD)\n@XmlType(name = \"employee\", propOrder = {\n    \"companyId\",\n    \"managerId\",\n    \"age\",\n    \"classification\"\n})\n@XmlRootElement(name = \"Employee\")\n@ApiModel(description = \"More on the Employee class.\", discriminator = \"employee\", value = \"Employee class.\")\npublic class Employee\n    extends Person\n    implements Equals, HashCode, ToString\n{\n@XmlElement(required = true)\n@ApiModelProperty(dataType = \"string\", value = \"Company issued identification number.\", notes = \"This value is found on the front of the employee badge.\", required = true, access = \"POST: required; PUT: ignored;\")\nprotected String companyId;\n@ApiModelProperty(dataType = \"string\", value = \"Identification number of employee manager.\", notes = \"This value is found on the front of the manager badge.\", required = false, access = \"POST: optional; PUT: optional;\")\nprotected String managerId;\n@ApiModelProperty(dataType = \"string\", allowableValues = \"[25-68]\", value = \"Age of employee.\", notes = \"This value is found on the front of the employee badge.\", required = true, access = \"POST: optional; PUT: optional;\")\nprotected int age;\n@XmlElement(required = true, defaultValue = \"Regular\")\n@ApiModelProperty(dataType = \"string\", allowableValues = \"[25-68]\", value = \"Employee classification type.\", notes = \"Employment type.\", required = true, access = \"POST: optional; PUT: optional;\")\nprotected EmployeeClassification classification;\n\n/**\n * Gets the value of the companyId property.\n * \n * @return\n *     possible object is\n *     {@link String }\n *     \n */\npublic String getCompanyId() {\n    return companyId;\n}\n\n/**\n * Sets the value of the companyId property.\n * \n * @param value\n *     allowed object is\n *     {@link String }\n *     \n */\npublic void setCompanyId(String value) {\n    this.companyId = value;\n}\n\n/**\n * Gets the value of the managerId property.\n * \n * @return\n *     possible object is\n *     {@link String }\n *     \n */\npublic String getManagerId() {\n    return managerId;\n}\n\n/**\n * Sets the value of the managerId property.\n * \n * @param value\n *     allowed object is\n *     {@link String }\n *     \n */\npublic void setManagerId(String value) {\n    this.managerId = value;\n}\n\n/**\n * Gets the value of the age property.\n * \n */\npublic int getAge() {\n    return age;\n}\n\n/**\n * Sets the value of the age property.\n * \n */\npublic void setAge(int value) {\n    this.age = value;\n}\n\n/**\n * Gets the value of the classification property.\n * \n * @return\n *     possible object is\n *     {@link EmployeeClassification }\n *     \n */\npublic EmployeeClassification getClassification() {\n    return classification;\n}\n\n/**\n * Sets the value of the classification property.\n * \n * @param value\n *     allowed object is\n *     {@link EmployeeClassification }\n *     \n */\npublic void setClassification(EmployeeClassification value) {\n    this.classification = value;\n}\n\npublic String toString() {\n    final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;\n    final StringBuilder buffer = new StringBuilder();\n    append(null, buffer, strategy);\n    return buffer.toString();\n}\n\npublic StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {\n    strategy.appendStart(locator, this, buffer);\n    appendFields(locator, buffer, strategy);\n    strategy.appendEnd(locator, this, buffer);\n    return buffer;\n}\n\npublic StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {\n    super.appendFields(locator, buffer, strategy);\n    {\n        String theCompanyId;\n        theCompanyId = this.getCompanyId();\n        strategy.appendField(locator, this, \"companyId\", buffer, theCompanyId);\n    }\n    {\n        String theManagerId;\n        theManagerId = this.getManagerId();\n        strategy.appendField(locator, this, \"managerId\", buffer, theManagerId);\n    }\n    {\n        int theAge;\n        theAge = (true?this.getAge(): 0);\n        strategy.appendField(locator, this, \"age\", buffer, theAge);\n    }\n    {\n        EmployeeClassification theClassification;\n        theClassification = this.getClassification();\n        strategy.appendField(locator, this, \"classification\", buffer, theClassification);\n    }\n    return buffer;\n}\n\npublic boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {\n    if (!(object instanceof Employee)) {\n        return false;\n    }\n    if (this == object) {\n        return true;\n    }\n    if (!super.equals(thisLocator, thatLocator, object, strategy)) {\n        return false;\n    }\n    final Employee that = ((Employee) object);\n    {\n        String lhsCompanyId;\n        lhsCompanyId = this.getCompanyId();\n        String rhsCompanyId;\n        rhsCompanyId = that.getCompanyId();\n        if (!strategy.equals(LocatorUtils.property(thisLocator, \"companyId\", lhsCompanyId), LocatorUtils.property(thatLocator, \"companyId\", rhsCompanyId), lhsCompanyId, rhsCompanyId)) {\n            return false;\n        }\n    }\n    {\n        String lhsManagerId;\n        lhsManagerId = this.getManagerId();\n        String rhsManagerId;\n        rhsManagerId = that.getManagerId();\n        if (!strategy.equals(LocatorUtils.property(thisLocator, \"managerId\", lhsManagerId), LocatorUtils.property(thatLocator, \"managerId\", rhsManagerId), lhsManagerId, rhsManagerId)) {\n            return false;\n        }\n    }\n    {\n        int lhsAge;\n        lhsAge = (true?this.getAge(): 0);\n        int rhsAge;\n        rhsAge = (true?that.getAge(): 0);\n        if (!strategy.equals(LocatorUtils.property(thisLocator, \"age\", lhsAge), LocatorUtils.property(thatLocator, \"age\", rhsAge), lhsAge, rhsAge)) {\n            return false;\n        }\n    }\n    {\n        EmployeeClassification lhsClassification;\n        lhsClassification = this.getClassification();\n        EmployeeClassification rhsClassification;\n        rhsClassification = that.getClassification();\n        if (!strategy.equals(LocatorUtils.property(thisLocator, \"classification\", lhsClassification), LocatorUtils.property(thatLocator, \"classification\", rhsClassification), lhsClassification, rhsClassification)) {\n            return false;\n        }\n    }\n    return true;\n}\n\npublic boolean equals(Object object) {\n    final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;\n    return equals(null, null, object, strategy);\n}\n\npublic int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {\n    int currentHashCode = super.hashCode(locator, strategy);\n    {\n        String theCompanyId;\n        theCompanyId = this.getCompanyId();\n        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, \"companyId\", theCompanyId), currentHashCode, theCompanyId);\n    }\n    {\n        String theManagerId;\n        theManagerId = this.getManagerId();\n        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, \"managerId\", theManagerId), currentHashCode, theManagerId);\n    }\n    {\n        int theAge;\n        theAge = (true?this.getAge(): 0);\n        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, \"age\", theAge), currentHashCode, theAge);\n    }\n    {\n        EmployeeClassification theClassification;\n        theClassification = this.getClassification();\n        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, \"classification\", theClassification), currentHashCode, theClassification);\n    }\n    return currentHashCode;\n}\n\npublic int hashCode() {\n    final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;\n    return this.hashCode(null, strategy);\n}\n\n}\n```\nPerson.java\n``` java\n//\n// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 \n// See http://java.sun.com/xml/jaxb \n// Any modifications to this file will be lost upon recompilation of the source schema. \n// Generated on: 2013.07.12 at 07:01:29 AM CDT \n//\npackage com.servicemesh.model;\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlElement;\nimport javax.xml.bind.annotation.XmlRootElement;\nimport javax.xml.bind.annotation.XmlSeeAlso;\nimport javax.xml.bind.annotation.XmlType;\nimport com.wordnik.swagger.annotations.ApiModel;\nimport com.wordnik.swagger.annotations.ApiModelProperty;\nimport org.jvnet.jaxb2_commons.lang.Equals;\nimport org.jvnet.jaxb2_commons.lang.EqualsStrategy;\nimport org.jvnet.jaxb2_commons.lang.HashCode;\nimport org.jvnet.jaxb2_commons.lang.HashCodeStrategy;\nimport org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;\nimport org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;\nimport org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;\nimport org.jvnet.jaxb2_commons.lang.ToString;\nimport org.jvnet.jaxb2_commons.lang.ToStringStrategy;\nimport org.jvnet.jaxb2_commons.locator.ObjectLocator;\nimport org.jvnet.jaxb2_commons.locator.util.LocatorUtils;\n/*\n * Java class for person complex type.\n * \n * The following schema fragment specifies the expected content contained within this class.\n * \n * \n * <complexType name=\"person\">\n *   <complexContent>\n *     <restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">\n *       <sequence>\n *         <element name=\"firstName\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n *         <element name=\"lastName\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n *         <element name=\"email\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n *         <element name=\"phone\" type=\"{http://www.w3.org/2001/XMLSchema}string\" minOccurs=\"0\"/>\n *       </sequence>\n *     </restriction>\n *   </complexContent>\n * </complexType>\n * \n * \n * \n /\n@XmlAccessorType(XmlAccessType.FIELD)\n@XmlType(name = \"person\", propOrder = {\n    \"firstName\",\n    \"lastName\",\n    \"email\",\n    \"phone\"\n})\n@XmlSeeAlso({\n    Employee.class\n})\n@XmlRootElement(name = \"Person\")\n@ApiModel(description = \"More on the Person class.\", discriminator = \"person\", value = \"Person class.\")\npublic class Person\n    implements Equals, HashCode, ToString\n{\n@XmlElement(required = true)\n@ApiModelProperty(dataType = \"string\", allowableValues = \"[a-zA-Z]\", value = \"First name of person.\", notes = \"The first name would represent the actual first name and not what they are called by.\", required = true, access = \"POST: required; PUT: required;\")\nprotected String firstName;\n@XmlElement(required = true)\n@ApiModelProperty(dataType = \"string\", allowableValues = \"[a-zA-Z]\", value = \"Last name of person.\", notes = \"The is also know as the sir name.\", required = true, access = \"POST: required; PUT: required;\")\nprotected String lastName;\n@XmlElement(required = true)\n@ApiModelProperty(dataType = \"string\", allowableValues = \"[a-zA-Z@_-]\", value = \"Primary email address.\", notes = \"This should be the company email address.\", required = true, access = \"POST: required; PUT: required;\")\nprotected String email;\n@ApiModelProperty(dataType = \"string\", allowableValues = \"[0-9()-]\", value = \"Company phone number.\", required = false, access = \"POST: optiona; PUT: optional;\")\nprotected String phone;\n\n/**\n * Gets the value of the firstName property.\n * \n * @return\n *     possible object is\n *     {@link String }\n *     \n */\npublic String getFirstName() {\n    return firstName;\n}\n\n/**\n * Sets the value of the firstName property.\n * \n * @param value\n *     allowed object is\n *     {@link String }\n *     \n */\npublic void setFirstName(String value) {\n    this.firstName = value;\n}\n\n/**\n * Gets the value of the lastName property.\n * \n * @return\n *     possible object is\n *     {@link String }\n *     \n */\npublic String getLastName() {\n    return lastName;\n}\n\n/**\n * Sets the value of the lastName property.\n * \n * @param value\n *     allowed object is\n *     {@link String }\n *     \n */\npublic void setLastName(String value) {\n    this.lastName = value;\n}\n\n/**\n * Gets the value of the email property.\n * \n * @return\n *     possible object is\n *     {@link String }\n *     \n */\npublic String getEmail() {\n    return email;\n}\n\n/**\n * Sets the value of the email property.\n * \n * @param value\n *     allowed object is\n *     {@link String }\n *     \n */\npublic void setEmail(String value) {\n    this.email = value;\n}\n\n/**\n * Gets the value of the phone property.\n * \n * @return\n *     possible object is\n *     {@link String }\n *     \n */\npublic String getPhone() {\n    return phone;\n}\n\n/**\n * Sets the value of the phone property.\n * \n * @param value\n *     allowed object is\n *     {@link String }\n *     \n */\npublic void setPhone(String value) {\n    this.phone = value;\n}\n\npublic String toString() {\n    final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;\n    final StringBuilder buffer = new StringBuilder();\n    append(null, buffer, strategy);\n    return buffer.toString();\n}\n\npublic StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {\n    strategy.appendStart(locator, this, buffer);\n    appendFields(locator, buffer, strategy);\n    strategy.appendEnd(locator, this, buffer);\n    return buffer;\n}\n\npublic StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {\n    {\n        String theFirstName;\n        theFirstName = this.getFirstName();\n        strategy.appendField(locator, this, \"firstName\", buffer, theFirstName);\n    }\n    {\n        String theLastName;\n        theLastName = this.getLastName();\n        strategy.appendField(locator, this, \"lastName\", buffer, theLastName);\n    }\n    {\n        String theEmail;\n        theEmail = this.getEmail();\n        strategy.appendField(locator, this, \"email\", buffer, theEmail);\n    }\n    {\n        String thePhone;\n        thePhone = this.getPhone();\n        strategy.appendField(locator, this, \"phone\", buffer, thePhone);\n    }\n    return buffer;\n}\n\npublic boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {\n    if (!(object instanceof Person)) {\n        return false;\n    }\n    if (this == object) {\n        return true;\n    }\n    final Person that = ((Person) object);\n    {\n        String lhsFirstName;\n        lhsFirstName = this.getFirstName();\n        String rhsFirstName;\n        rhsFirstName = that.getFirstName();\n        if (!strategy.equals(LocatorUtils.property(thisLocator, \"firstName\", lhsFirstName), LocatorUtils.property(thatLocator, \"firstName\", rhsFirstName), lhsFirstName, rhsFirstName)) {\n            return false;\n        }\n    }\n    {\n        String lhsLastName;\n        lhsLastName = this.getLastName();\n        String rhsLastName;\n        rhsLastName = that.getLastName();\n        if (!strategy.equals(LocatorUtils.property(thisLocator, \"lastName\", lhsLastName), LocatorUtils.property(thatLocator, \"lastName\", rhsLastName), lhsLastName, rhsLastName)) {\n            return false;\n        }\n    }\n    {\n        String lhsEmail;\n        lhsEmail = this.getEmail();\n        String rhsEmail;\n        rhsEmail = that.getEmail();\n        if (!strategy.equals(LocatorUtils.property(thisLocator, \"email\", lhsEmail), LocatorUtils.property(thatLocator, \"email\", rhsEmail), lhsEmail, rhsEmail)) {\n            return false;\n        }\n    }\n    {\n        String lhsPhone;\n        lhsPhone = this.getPhone();\n        String rhsPhone;\n        rhsPhone = that.getPhone();\n        if (!strategy.equals(LocatorUtils.property(thisLocator, \"phone\", lhsPhone), LocatorUtils.property(thatLocator, \"phone\", rhsPhone), lhsPhone, rhsPhone)) {\n            return false;\n        }\n    }\n    return true;\n}\n\npublic boolean equals(Object object) {\n    final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;\n    return equals(null, null, object, strategy);\n}\n\npublic int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {\n    int currentHashCode = 1;\n    {\n        String theFirstName;\n        theFirstName = this.getFirstName();\n        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, \"firstName\", theFirstName), currentHashCode, theFirstName);\n    }\n    {\n        String theLastName;\n        theLastName = this.getLastName();\n        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, \"lastName\", theLastName), currentHashCode, theLastName);\n    }\n    {\n        String theEmail;\n        theEmail = this.getEmail();\n        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, \"email\", theEmail), currentHashCode, theEmail);\n    }\n    {\n        String thePhone;\n        thePhone = this.getPhone();\n        currentHashCode = strategy.hashCode(LocatorUtils.property(locator, \"phone\", thePhone), currentHashCode, thePhone);\n    }\n    return currentHashCode;\n}\n\npublic int hashCode() {\n    final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;\n    return this.hashCode(null, strategy);\n}\n\n}\n```\nStaff.java (my annotated resource)\n``` java\npackage com.servicemesh.poc.resources;\nimport javax.ws.rs.*;\nimport javax.ws.rs.core.Context;\nimport javax.ws.rs.core.MediaType;\nimport javax.ws.rs.core.Request;\nimport javax.ws.rs.core.Response;\nimport javax.ws.rs.core.UriInfo;\nimport org.apache.log4j.Logger;\nimport com.servicemesh.model.Employee;\nimport com.servicemesh.storage.EmployeeTable;\nimport com.servicemesh.storage.RecordDoesNotExistException;\nimport com.wordnik.swagger.annotations.Api;\nimport com.wordnik.swagger.annotations.ApiOperation;\nimport com.wordnik.swagger.annotations.ApiParam;\nimport com.wordnik.swagger.annotations.ApiResponse;\nimport com.wordnik.swagger.annotations.ApiResponses;\n@Path(\"/staff/\")\n@Produces({MediaType.APPLICATION_XML})\n@Consumes({MediaType.APPLICATION_XML})\n@Api(value = \"/staff\", description = \"Sample Swagger annotated API\")\npublic class Staff {\n    private static Logger logger = Logger.getLogger(Staff.class);\n@Context UriInfo uriInfo;\n   @Context Request request;\n@Path(\"/size\")\n   @GET\n   @Produces(MediaType.TEXT_HTML)\n   @ApiOperation(httpMethod = \"GET\",\n                 produces = \"text/html\",\n                 value = \"Show current records in database\", \n                 notes = \"The database starts with four records\", \n                 response = java.lang.String.class)\n   public Response getRowCount() {\n      return (Response.ok(\"There are \" + EmployeeTable.rowCount() + \" employees currently defined in the database.\").build());\n   }\n@Path(\"/{id}\")\n   @GET\n   @ApiOperation(httpMethod = \"GET\",\n                 produces = MediaType.APPLICATION_XML,\n                 value = \"Get employee using company ID value\", \n                 notes = \"The ID value is on the badge\", \n                 response = com.servicemesh.model.Employee.class)\n   @ApiResponses(value = {@ApiResponse(code = 404, \n                                       message = \"Employee was not found in the database.\",\n                                       response = java.lang.String.class),\n                          @ApiResponse(code = 200,\n                                       message = \"Employee record found.\", \n                                       response = com.servicemesh.model.Employee.class)})\n   public Response getEmployee(@ApiParam(value = \"Company ID of the employee.\", \n                                         allowableValues = \"Character String\", \n                                         required = true) @PathParam(\"id\") String id) {\n      Response resp = null;\n  try {\n    Employee e = EmployeeTable.get(id);\n\n    if (e != null) {\n        resp = Response.ok(e).build();\n     }\n     else {\n        resp = Response.ok(new Employee()).build();\n     }\n  }\n  catch (RecordDoesNotExistException e) {\n     resp = Response.ok(new Employee()).build();\n  }\n  catch (Throwable t) {\n     resp = Response.noContent().build();\n\n     resp = Response.status(500).build();\n  }\n\n  return resp;\n\n}\n@GET\n   @ApiOperation(httpMethod = \"GET\",\n                 produces = MediaType.APPLICATION_XML,\n                 value = \"Get a list of employees given a name\", \n                 notes = \"The first and last names are searched for a match.  The complete name must match.\", \n                 response = com.servicemesh.model.Employee.class)\n   public Employee[] getEmployeeByName(@ApiParam(value = \"First or last name of employee.\", \n                                                 allowableValues = \"Character String\", \n                                                 required = true) @QueryParam(\"name\") String name) {\n      return (EmployeeTable.findByName(name));\n   }\n@Path(\"/{id}\")\n   @POST\n   @ApiOperation(httpMethod = \"POST\",\n                 consumes = MediaType.APPLICATION_XML,\n                 value = \"Add a new employee to the database\", \n                 notes = \"The ID is provided so the proper URL can be returned.\")\n   @ApiResponses(value = {@ApiResponse(code = 404, \n                                       message = \"Failure because the employee already exists.\",\n                                       response = java.lang.String.class),\n                          @ApiResponse(code = 201,\n                                       message = \"Employee successfully added.\",\n                                       response = java.lang.String.class)})\n   public Response addEmployee(Employee e) {\n      Response resp;\n  try {\n     if (EmployeeTable.add(e)) {\n        resp = Response.created(uriInfo.getAbsolutePath()).build();\n        resp = Response.status(201).build();\n     }\n     else {\n        resp = Response.noContent().build();\n        resp = Response.status(404).build();\n     }\n  }\n  catch (Throwable t) {\n     resp = Response.status(404).build();\n  }\n\n  return resp;\n\n}\n@Path(\"/{id}\")\n   @DELETE\n   @ApiOperation(httpMethod = \"DELETE\",\n                 consumes = MediaType.APPLICATION_XML,\n                 value = \"Remove an employee from the database.\", \n                 notes = \"If the employee does not exist it will not cause a problem.  The deleted employee record is returned.\", \n                 response = com.servicemesh.model.Employee.class)\n   @ApiResponses(value = {@ApiResponse(code = 404, \n                                       message = \"The employee failed to be removed from the database.\",\n                                       response = java.lang.String.class),\n                          @ApiResponse(code = 200, \n                                       message = \"The employee was successfully removed.\",\n                                       response = com.servicemesh.model.Employee.class)})\n   public Response deleteEmployee(@ApiParam(value = \"Company ID of the employee.\", \n                                            allowableValues = \"Character String\", \n                                            required = true) @PathParam(\"id\") String id) {\n      Response resp;\n  try {\n     Employee deletedEmp = EmployeeTable.delete(id);\n\n     if (deletedEmp != null) {\n        resp = Response.ok(deletedEmp, MediaType.APPLICATION_XML).build();\n        resp = Response.status(200).build();\n     }\n     else {\n        resp = Response.noContent().build();\n        resp = Response.status(404).build();\n     }\n  }\n  catch (Throwable t) {\n     resp = Response.status(404).build();\n  }\n\n  return resp;\n\n}\n}\n```\nservice.json (the description should not be empty)\n``` json\n{\n  \"apiVersion\" : \"v1\",\n  \"swaggerVersion\" : \"1.1\",\n  \"basePath\" : \"http://localhost:8080/smapidocs\",\n  \"apis\" : [ {\n    \"path\" : \"/staff\",\n    \"description\" : \"\"\n  } ]\n}\n```\nstaff.json (responseClass should not be void; there should be a models section)\njson\n{\n  \"apiVersion\" : \"v1\",\n  \"swaggerVersion\" : \"1.1\",\n  \"basePath\" : \"http://localhost:8080/smapidocs\",\n  \"resourcePath\" : \"/staff\",\n  \"apis\" : [ {\n    \"path\" : \"/staff/size\",\n    \"description\" : \"Sample Swagger annotated API\",\n    \"operations\" : [ {\n      \"httpMethod\" : \"GET\",\n      \"summary\" : \"Show current records in database\",\n      \"notes\" : \"The database starts with four records\",\n      \"responseClass\" : \"void\",\n      \"nickname\" : \"getRowCount\"\n    } ]\n  }, {\n    \"path\" : \"/staff/{id}\",\n    \"description\" : \"Sample Swagger annotated API\",\n    \"operations\" : [ {\n      \"httpMethod\" : \"GET\",\n      \"summary\" : \"Get employee using company ID value\",\n      \"notes\" : \"The ID value is on the badge\",\n      \"responseClass\" : \"void\",\n      \"nickname\" : \"getEmployee\",\n      \"parameters\" : [ {\n        \"name\" : \"id\",\n        \"description\" : \"Company ID of the employee.\",\n        \"paramType\" : \"path\",\n        \"allowableValues\" : {\n          \"valueType\" : \"LIST\",\n          \"values\" : [ \"Character String\" ],\n          \"valueType\" : \"LIST\"\n        },\n        \"required\" : true,\n        \"allowMultiple\" : false,\n        \"dataType\" : \"string\"\n      } ]\n    }, {\n      \"httpMethod\" : \"POST\",\n      \"summary\" : \"Add a new employee to the database\",\n      \"notes\" : \"The ID is provided so the proper URL can be returned.\",\n      \"responseClass\" : \"void\",\n      \"nickname\" : \"addEmployee\"\n    }, {\n      \"httpMethod\" : \"DELETE\",\n      \"summary\" : \"Remove an employee from the database.\",\n      \"notes\" : \"If the employee does not exist it will not cause a problem.  The deleted employee record is returned.\",\n      \"responseClass\" : \"void\",\n      \"nickname\" : \"deleteEmployee\",\n      \"parameters\" : [ {\n        \"name\" : \"id\",\n        \"description\" : \"Company ID of the employee.\",\n        \"paramType\" : \"path\",\n        \"allowableValues\" : {\n          \"valueType\" : \"LIST\",\n          \"values\" : [ \"Character String\" ],\n          \"valueType\" : \"LIST\"\n        },\n        \"required\" : true,\n        \"allowMultiple\" : false,\n        \"dataType\" : \"string\"\n      } ]\n    } ]\n  }, {\n    \"path\" : \"/staff\",\n    \"description\" : \"Sample Swagger annotated API\",\n    \"operations\" : [ {\n      \"httpMethod\" : \"GET\",\n      \"summary\" : \"Get a list of employees given a name\",\n      \"notes\" : \"The first and last names are searched for a match.  The complete name must match.\",\n      \"responseClass\" : \"void\",\n      \"nickname\" : \"getEmployeeByName\",\n      \"parameters\" : [ {\n        \"name\" : \"name\",\n        \"description\" : \"First or last name of employee.\",\n        \"paramType\" : \"query\",\n        \"allowableValues\" : {\n          \"valueType\" : \"LIST\",\n          \"values\" : [ \"Character String\" ],\n          \"valueType\" : \"LIST\"\n        },\n        \"required\" : true,\n        \"allowMultiple\" : false,\n        \"dataType\" : \"string\"\n      } ]\n    } ]\n  } ]\n}\n. Clue:\nI switched back to 1.2.5 and added the ApiParamImplicit annotation and the build completed.  The JSON file was created but the responseClass was \"void\" and there was no models section.  I removed the annotation and it worked fine.  This implies that some annotation I am using in 1.3.0 is causing a problem but not throwing an exception.\nDoes the api version need to be changed in the web.xml file?  It is set to 1.0.0.\n. Hello Tony,\nWe backed off of 1.3.0 and went back to 1.2.5 for our PoC project.\nThanks.\nHenry.\nOn Thu, Jul 18, 2013 at 10:31 PM, Tony Tam notifications@github.com wrote:\n\nHi, checking in, are we clear on this issue?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/252#issuecomment-21229684\n.\n. Hello Tony,\n\nWe backed off of 1.3.0 and went back to 1.2.5 for our PoC project.\nThanks.\nHenry.\nOn Thu, Jul 18, 2013 at 10:31 PM, Tony Tam notifications@github.com wrote:\n\nHi, checking in, are we clear on this issue?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/252#issuecomment-21229684\n.\n. Tony,\n\nI may not have explained it well.  What we need is a requestClass which\nneeds to be decorated according to the HTTP method and a responseClass\nwhich is what Swagger currently has.  The same class may be used as input\nto multiple operations but the required fields may be different.  The\ncurrent version of Swagger decorates the responseClass with requirements\nfrom the @XmlElement.  It may be that no fields are marked as required in\nthe schema and the requirements will be managed by operation validation.\n In that case, the requirements would need to be communicated to the\nconsumer via the requestClass view.  In many cases, what is returned in the\nresponse payload is different than what came in the request payload.\nWe discussed your suggestion, which is interesting, but it would cause an\nexplosion in the size of our schema.  We talked about maybe supporting it\nwith interfaces but, at the moment, I'm not sure how to implement that in a\nschema.  It would also cause a lot of code churn down stream.\nHenry.\nOn Fri, Jul 12, 2013 at 1:44 PM, Tony Tam notifications@github.com wrote:\n\nHi, I think I understand what you're after but want to propose a different\nsolution. If the model response is different, it should probably be a\ndifferent model itself. A new (and not fully supported in the UI) way to do\nthis is to have a model extend a base class.\nBut having the model schema in different states, depending on the http\noperation isn't consistent in the way that swagger is striving to be. Does\nthat make sense?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/255#issuecomment-20896061\n.\n. \n",
    "lexspoon": "I'm seeing this test failure on one machine, but not on another. The only difference is that I get \"2 was not equal to 3\" instead of \"1 was not equal to 2\", but I presume the test has simply been updated since this issue was filed.\nBoth machines are Linux. The succeeding one is Ubuntu 13.04. The failing one is Debian Wheezy (7.0). Unfortunately for me, the one that is failing is a continuous builder, so it's hard for me to do experiments on it.\nBoth appear to be using Java 7, but they both have several JDKs installed, so maybe one of the others is sneaking into the build somehow.\nBoth are using Maven 3.0.4.\nThe issue must be due to some sort of environmental dependency, but I'm not sure what to try to investigate further.\nLooking at the test, it would clarify matters if the test were to print out the value of \"apis\" when it fails. Then we could see what the whole list is, rather than just its size. An easy way to do this would be to convert it to a List and then compare it against a List(...) literal with the expected value. Perhaps the maintainers would see fit to commit such a change just for the sake of getting data about this sporadic problem.\n. ",
    "thekrishnavamsi": "I am on 2.9.1-1.3.0, Still I am seeing the same issue. \nJust my observation...\nThis doesn't work.\n@Api(value = \"/cats\", description = \"Operations about cats\", position = 0)\n@Api(value = \"/snakes\", description = \"Operations about snakes\", position = 2)\n@Api(value = \"/dogs\", description = \"Operations about dogs\", position = 1)\nBut this works:\n@Api(value = \"/cats\", description = \"Operations about cats\", position = 1)\n@Api(value = \"/snakes\", description = \"Operations about snakes\", position = 2)\n@Api(value = \"/dogs\", description = \"Operations about dogs\", position = 3)\n. I am on 2.9.1-1.3.0, Still I am seeing the same issue. \nJust my observation...\nThis doesn't work.\n@Api(value = \"/cats\", description = \"Operations about cats\", position = 0)\n@Api(value = \"/snakes\", description = \"Operations about snakes\", position = 2)\n@Api(value = \"/dogs\", description = \"Operations about dogs\", position = 1)\nBut this works:\n@Api(value = \"/cats\", description = \"Operations about cats\", position = 1)\n@Api(value = \"/snakes\", description = \"Operations about snakes\", position = 2)\n@Api(value = \"/dogs\", description = \"Operations about dogs\", position = 3)\n. I am running CXF + JAXRS with 2.9.1-1.3.0. \nCan you please let me know what further information you need.\n. I am running CXF + JAXRS with 2.9.1-1.3.0. \nCan you please let me know what further information you need.\n. Please find attached file. There are 5 methods which are having positions\nset to them. I am using 2.9.1-1.3.0 release build.\nOn Thu, Aug 22, 2013 at 6:54 PM, Tony Tam notifications@github.com wrote:\n\nI will need more info then. This test:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-jaxrs/src/test/scala/JaxrsApiReaderTest.scala#L160\nand this one:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/test/scala/filter/SpecFilterTest.scala#L67\nare there to ensure it's ordered correctly.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/265#issuecomment-23138903\n.\n. Please find attached file. There are 5 methods which are having positions\nset to them. I am using 2.9.1-1.3.0 release build.\n\nOn Thu, Aug 22, 2013 at 6:54 PM, Tony Tam notifications@github.com wrote:\n\nI will need more info then. This test:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-jaxrs/src/test/scala/JaxrsApiReaderTest.scala#L160\nand this one:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/test/scala/filter/SpecFilterTest.scala#L67\nare there to ensure it's ordered correctly.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/265#issuecomment-23138903\n.\n. Sorry for the confusion :-) I was talking about APIOperations and you were talking about API's\n\nFinally I nailed down the problem and found out the exact behavior. \nWhen you have multiple @ApiOperation defined in @Api, then it is first grouping all the operations with the similar PATH and then using @ApiOperation -> position to sort them.\nEx: for an @API(value=\"/cats/\") there are 5 operations defined as below\nGET       @Path(\"/{name}\")  @ApiOperation(position = 5)\nDELETE @Path(\"/{name}\")  @ApiOperation(position = 3)\nGET       @Path(\"/\")  @ApiOperation(position = 4)\nPOST     @Path(\"/\")  @ApiOperation(position = 2)\nPUT       @Path(\"/\")  @ApiOperation(position = 1)\nThen the output is:\nDELETE @Path(\"/{name}\")  @ApiOperation(position = 3)\nGET       @Path(\"/{name}\")  @ApiOperation(position = 5)\nPUT       @Path(\"/\")  @ApiOperation(position = 1)\nPOST     @Path(\"/\")  @ApiOperation(position = 2)\nGET       @Path(\"/\")  @ApiOperation(position = 4)\nExpected output is:\nPUT       @Path(\"/\")  @ApiOperation(position = 1)\nPOST     @Path(\"/\")  @ApiOperation(position = 2)\nDELETE @Path(\"/{name}\")  @ApiOperation(position = 3)\nGET       @Path(\"/\")  @ApiOperation(position = 4)\nGET       @Path(\"/{name}\")  @ApiOperation(position = 5)\n. Sorry for the confusion :-) I was talking about APIOperations and you were talking about API's\nFinally I nailed down the problem and found out the exact behavior. \nWhen you have multiple @ApiOperation defined in @Api, then it is first grouping all the operations with the similar PATH and then using @ApiOperation -> position to sort them.\nEx: for an @API(value=\"/cats/\") there are 5 operations defined as below\nGET       @Path(\"/{name}\")  @ApiOperation(position = 5)\nDELETE @Path(\"/{name}\")  @ApiOperation(position = 3)\nGET       @Path(\"/\")  @ApiOperation(position = 4)\nPOST     @Path(\"/\")  @ApiOperation(position = 2)\nPUT       @Path(\"/\")  @ApiOperation(position = 1)\nThen the output is:\nDELETE @Path(\"/{name}\")  @ApiOperation(position = 3)\nGET       @Path(\"/{name}\")  @ApiOperation(position = 5)\nPUT       @Path(\"/\")  @ApiOperation(position = 1)\nPOST     @Path(\"/\")  @ApiOperation(position = 2)\nGET       @Path(\"/\")  @ApiOperation(position = 4)\nExpected output is:\nPUT       @Path(\"/\")  @ApiOperation(position = 1)\nPOST     @Path(\"/\")  @ApiOperation(position = 2)\nDELETE @Path(\"/{name}\")  @ApiOperation(position = 3)\nGET       @Path(\"/\")  @ApiOperation(position = 4)\nGET       @Path(\"/{name}\")  @ApiOperation(position = 5)\n. Created a new issue https://github.com/wordnik/swagger-core/issues/297 to track this.\n. Created a new issue https://github.com/wordnik/swagger-core/issues/297 to track this.\n. Hi Tony,\nYes I got it working. The problem here is I was running older version of Jackson.\nNote: The older version of Jackson is working fine till swagger 1.2 version. I would appreciate it if you could document the same like you did for scala-2.9.1 -> scala-2.9.1-1\nThat's a side, I really appreciate the prompt responses you are giving to all the customer requests. Your component rocks.\nThanks\n. Hi Tony,\nYes I got it working. The problem here is I was running older version of Jackson.\nNote: The older version of Jackson is working fine till swagger 1.2 version. I would appreciate it if you could document the same like you did for scala-2.9.1 -> scala-2.9.1-1\nThat's a side, I really appreciate the prompt responses you are giving to all the customer requests. Your component rocks.\nThanks\n. ",
    "emgsilva": "I know of that \"cache behaviors\" too (in other situations)... But that is not the problem I am afraid. Have just cleared the Chrome cache, and also tried in Safari... the same results: \"Can't read swagger JSON from http://localhost:8080/rest/api-docs.json\"...\nIt is very strange: I simply change the ApiListingResourceJSON from \"@Path(\"/api-docs\")\" to \"@Path(\"/api-docs.json\")\" and I get a working Swagger... Just tried it again... I basically have the same setup on server and local machines... so no idea why this happens.\n. I use java 6 in both environments...\nI did that experiemnts, if I \"curl -i .../api-docs\" I get everything nice:\n```\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nContent-Type: application/json\nTransfer-Encoding: chunked\nDate: Tue, 23 Jul 2013 20:15:50 GMT\n{\"swaggerVersion\":\"1.1\",\"apis\":[{ ...\n```\nI understand it is not easy to debug this... I find also myself a bit confused given that both systems were working some weeks ago. \nI will keep on trying to see if I can figure this out (the actual important Swagger - the server version - is working, but I would like to have the local version also working). If something pops up I will report it!\nThank you for the quick response and great tool!\n. Well... just a quick update. I did some tests\n- test 1: local machine (the one giving the problem)... If I curl \"/api-docs\" I do get documentation... however it comes different from the server version:\n{\n    \"swaggerVersion\": \"1.1\",\n    \"apis\": [{\n        \"path\": \"/api-docs.{format}/basicsupport\",\n        \"description\": \"\"\n    }\n...\n- test 2: on the server version: I use the endpoint as \".../api-docs\" or \".../api-docs.json\"... it works on both cases, and the documentation looks like this:\n{\n    \"apiVersion\": \"0.0.2\",\n    \"swaggerVersion\": \"1.1\",\n    \"basePath\": \"http://.....:8088/rest\",\n    \"apis\": [{\n        \"path\": \"/api-docs/basicsupport\",\n        \"description\": \"\"\n...\nI am observing the Chrome Console, the network messages... in the local version the UI adds a \".json\" to get the resources documentation, e.g.: \"...rest/api-docs.json/basicsupport\", which is generating a \"404\" error...  while on the server, no matter how I call the UI always calls without the \".json\" part...\n- test 3: I did another experiment on my local machine, which was to enter (on the UI) an endpoint of a specific resource: \".../rest/api-docs/basicsupport\"... and that provided me with the endpoint documentation... however it fails to show the \"complex objects\" (classes describing my request/response messages, simply shows their names, while on the server I can see their fields) - but they are retrieved since I can see them in the JSON.\nDoes this can give you some other clues on the issue?\n. Hi,\nThat \"your web.xml isn't being picked up\" help a lot... I solve the problem... and also found why it used to work and now it was not. \nI use Eclipse with Tomcat embedded on my developments... Furthermore I use Maven to generate the \"dev\" and \"prod\" \"wars\" for server deployments... and somehow the local Tomcat uses a \"web.xml\" that seats in \"target/m2e-wtp/web-resources/WEB-INF\" automatically generated by maven from one of the \"web.xml\" (which I do not define Swagger configuration - this is going to be a production version... previously I had also there defined Swagger configurations, and that is why before I had Swagger working and now it stopped working). I do not know why Tomcat pics this web.xml up... but I will investigate.\nThis web.xml never shows up when I use the \"open resource\" shortcut of eclipse so I did not see that it before... But when you referred the \"web.xml\" I remembered I have had this problem before... and went to search for all \"web.xml\", and voila there it was the web.xml...\nThis was the problem... so I will close the issue. Thanks a lot for the help and for this amazing tool, we find it very good!\n. ",
    "lennartkoopmann": "Any news on this? We are eagerly waiting for Jersey 2.x support. :) Do you think it is ready for a SNAPSHOT release?\nPlease let us know if we can help with something.\n. Thanks! :)\n. We invested a few hours into writing our own annotation parser. All you need to to is generate that JSON API description somewhere and that is reasonably simple usually. :)\n. ",
    "sujeet100": "Hi .. I tried to integrate swagger with jersey2.2 and spring using swagger-jersey2-jaxrs.\nIt has started creating problems in injection of spring beans. Most probably this is because of the conflicting version of reflections jar. Spring(3.4/3.3) uses 0.9.5 while swagger uses 0.9.8.\nCan you please create a sample application with Spring MVC + jersey 2.2 + swagger-jersey2-jaxrs\n. ",
    "MiloHub": "Thanks for the post. Mentioned export package need to converted to OSGI bundle? \n. Thanks for the post. Mentioned export package need to converted to OSGI bundle? \n. I tried adding at the parent pom(swagger-core).but the manifest is created with no import and export packages. Am i missing anything\n. I tried adding at the parent pom(swagger-core).but the manifest is created with no import and export packages. Am i missing anything\n. I added at swagger-jaxrs below is the manifest got generated \nManifest-Version: 1.0\nExport-Package: com.wordnik.swagger.jaxrs.listing;uses:=\"scala.collect\n ion,scala.collection.immutable,javax.ws.rs,com.wordnik.swagger.annota\n tions,scala.collection.mutable,scala.runtime,com.wordnik.swagger.core\n ,scala,javax.servlet,scala.reflect,com.wordnik.swagger.jaxrs,scala.co\n llection.generic,javax.ws.rs.core\";version=\"1.2.1\",com.wordnik.swagge\n r.jaxrs;uses:=\"scala.collection.immutable,scala.collection,com.faster\n xml.jackson.databind,javax.ws.rs,com.wordnik.swagger.annotations,scal\n a.util.matching,scala.collection.mutable,com.wordnik.swagger.core,sca\n la.runtime,javax.ws.rs.ext,scala,org.slf4j,org.apache.commons.lang,ja\n vax.servlet,scala.reflect,com.wordnik.swagger.core.util,scala.collect\n ion.generic,javax.ws.rs.core\";version=\"1.2.1\"\nBundle-Version: 1.2.5\nTool: Bnd-0.0.238\nBundle-Name: swagger-jaxrs\nBnd-LastModified: 1375391584032\nCreated-By: 1.6.0_26 (Sun Microsystems Inc.)\nBundle-ManifestVersion: 2\nBundle-Description: Sonatype helps open source projects to set up Mave\n n repositories on https://oss.sonatype.org/\nBundle-License: http://www.apache.org/licenses/LICENSE-2.0.html\nBundle-SymbolicName: swagger-jaxrs_2.9.1\nImport-Package: com.fasterxml.jackson.databind;version=\"2.1\",com.wordn\n ik.swagger.annotations,com.wordnik.swagger.core,com.wordnik.swagger.c\n ore.util,com.wordnik.swagger.jaxrs;version=\"1.2.1\",com.wordnik.swagge\n r.jaxrs.listing;version=\"1.2.1\",javax.servlet,javax.ws.rs;version=\"1.\n 1\",javax.ws.rs.core;version=\"1.1\",javax.ws.rs.ext;version=\"1.1\",org.a\n pache.commons.lang;version=\"2.4\",org.slf4j;version=\"1.6\",scala,scala.\n collection,scala.collection.generic,scala.collection.immutable,scala.\n collection.mutable,scala.reflect,scala.runtime,scala.util.matching\n. I added at swagger-jaxrs below is the manifest got generated \nManifest-Version: 1.0\nExport-Package: com.wordnik.swagger.jaxrs.listing;uses:=\"scala.collect\n ion,scala.collection.immutable,javax.ws.rs,com.wordnik.swagger.annota\n tions,scala.collection.mutable,scala.runtime,com.wordnik.swagger.core\n ,scala,javax.servlet,scala.reflect,com.wordnik.swagger.jaxrs,scala.co\n llection.generic,javax.ws.rs.core\";version=\"1.2.1\",com.wordnik.swagge\n r.jaxrs;uses:=\"scala.collection.immutable,scala.collection,com.faster\n xml.jackson.databind,javax.ws.rs,com.wordnik.swagger.annotations,scal\n a.util.matching,scala.collection.mutable,com.wordnik.swagger.core,sca\n la.runtime,javax.ws.rs.ext,scala,org.slf4j,org.apache.commons.lang,ja\n vax.servlet,scala.reflect,com.wordnik.swagger.core.util,scala.collect\n ion.generic,javax.ws.rs.core\";version=\"1.2.1\"\nBundle-Version: 1.2.5\nTool: Bnd-0.0.238\nBundle-Name: swagger-jaxrs\nBnd-LastModified: 1375391584032\nCreated-By: 1.6.0_26 (Sun Microsystems Inc.)\nBundle-ManifestVersion: 2\nBundle-Description: Sonatype helps open source projects to set up Mave\n n repositories on https://oss.sonatype.org/\nBundle-License: http://www.apache.org/licenses/LICENSE-2.0.html\nBundle-SymbolicName: swagger-jaxrs_2.9.1\nImport-Package: com.fasterxml.jackson.databind;version=\"2.1\",com.wordn\n ik.swagger.annotations,com.wordnik.swagger.core,com.wordnik.swagger.c\n ore.util,com.wordnik.swagger.jaxrs;version=\"1.2.1\",com.wordnik.swagge\n r.jaxrs.listing;version=\"1.2.1\",javax.servlet,javax.ws.rs;version=\"1.\n 1\",javax.ws.rs.core;version=\"1.1\",javax.ws.rs.ext;version=\"1.1\",org.a\n pache.commons.lang;version=\"2.4\",org.slf4j;version=\"1.6\",scala,scala.\n collection,scala.collection.generic,scala.collection.immutable,scala.\n collection.mutable,scala.reflect,scala.runtime,scala.util.matching\n. I got error for other dependent bundle in the deployment, scala . Also i converted swagger-annotation to osgi which was another dependent package\n. I got error for other dependent bundle in the deployment, scala . Also i converted swagger-annotation to osgi which was another dependent package\n. Is there any plan for making \ncom.wordnik\nswagger-jaxrs_2.9.1\n        as OSGI bundle version?\n. Is there any plan for making \ncom.wordnik\nswagger-jaxrs_2.9.1\n        as OSGI bundle version?\n. ",
    "andyshinn": "Wow, fastest fix ever :+1:  - also, my apologies for posting in the wrong repo... I've got way too many GitHub tabs open at the moment.\n. ",
    "terhechte": "Sure, will do, thanks.\n. ",
    "blueketchup": "I don't know. I haven't worked with this code in almost two years. Sorry.\n\nOn Mar 9, 2015, at 2:38 PM, Ron notifications@github.com wrote:\nIs this also relevant to 1.5?\n\u2014\nReply to this email directly or view it on GitHub.\n. Ah that's weird. The email made it look like it was a message to me.\nOn Mar 9, 2015, at 2:50 PM, Ron notifications@github.com wrote:\nNo problem, I was actually asking @fehguy ;)\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "dilipkrish": "@fehguy Isnt it kind of redefining the runtime serialization relationships, just for documentation. Meaning if we're using jackson to serialize to json, the Animal class will have similar annotations\njava\n@JsonTypeInfo( use=JsonTypeInfo.Id.NAME, include=JsonTypeInfo.As.PROPERTY, property=\"type\" )\n@JsonSubTypes( { @Type( value = WildAnimal.class, name = \"wild\" ), \n                             @Type( value = DomesticAnimal.class, name = \"domestic\" ) } )\nabstract class Animal {\n//...\n        public String name;\n}\nNow we end up with a problem to keep them in sync. Since you're still in the midst of implementing this, any way to avoid this?\n. Will do... closing this and will reopen another PR\n. @fehguy any idea when 1.3.11 is going to go out?\n. @fehguy I'm a little concerned with this fix. This means that these models need to be immutable, once they are added to a list/map etc. \n. from this stack overflow answer emphasis mine\n\nWhen using a hash-based Collection or Map such as HashSet, LinkedHashSet, HashMap, Hashtable, or WeakHashMap, make sure that the hashCode() of the key objects that you put into the collection never changes while the object is in the collection. The bulletproof way to ensure this is to make your keys immutable, which has also other benefits.\n\nHere is an example that demonstrates the problem.\nFor the most part this change should be fine, but it assumes that we don't modify items after its been added to a list/map etc. as there is a chance that the hashcode of the mutated object will not match any item in the collection.\n. I believe for methods you need to walk up the object class hierarchy. Which might be alright for methods. But I know that in springfox Weve refrained from supporting annotated method parameters. We've left that as an extensitibility option. \n. My 2 :dollar:s\nThe @ApiIgnore annotation we use are for hiding api operations or a collection of operations (Controller)\nPersonally I prefer to use annotations only as an aid to the api description and not as the source of truth. For e.g. if we need additional descriptive messages or if we need to infer something thats not immediately available via introspection. Having said that, it sometimes makes sense to have redundancy, where we want the annotation to be a tiebreaker or override a value like when the api developer needs to signal that they know what they are doing.  \nComing to this specific question, it seems weird to me to have @ApiModel(hidden). Like @webron  said, there might be problems with this. For one we often conflate requests and response models, so the model itself ends up being a superset of the properties. Secondly, if you change the model you have to keep the annotation in sync. Given a sufficiently large codebase this can get quite hard to reason about and untenable to find and adjust model visibilities. \n. Springfox has a different way of acheiving this. You need to use the Docket.directmodelSubstitute(Time.class, String.class) to define an equivalent converter. However it doesn't support examples etc. \n. @webron I think the problem is that BodyParameter doesn't support setting the default value.\n. Whats motivating the rename? I quite like the existing annoations. . ",
    "Martin-Wegner": "It seems not to be working if the property 'type' (for the example property=\"type\") is not a bean property (only used by Jackson for transportation).\n. It seems not to be working if the property 'type' (for the example property=\"type\") is not a bean property (only used by Jackson for transportation).\n. One problem is, that Swagger does not evaluate the @JsonTypeInfo annotation like mentioned here: https://github.com/swagger-api/swagger-core/issues/280#issuecomment-194393431 The type property is not a bean property and therefore Swagger does not recognize it :(. One problem is, that Swagger does not evaluate the @JsonTypeInfo annotation like mentioned here: https://github.com/swagger-api/swagger-core/issues/280#issuecomment-194393431 The type property is not a bean property and therefore Swagger does not recognize it :(. ",
    "mukulb90": "@fehguy Has this been fixed ? Does it work if type is not a bean property?\nOn 1.5.21 branch, It isn't working for me.\n@JsonIgnoreProperties(ignoreUnknown = true)\n@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXTERNAL_PROPERTY, property = \"type\", visible = true)\n@JsonSubTypes({\n  @JsonSubTypes.Type(value = A.class, name = \"a\"),\n  @JsonSubTypes.Type(value = B.class, name = \"b\"),\n})\npublic interface C {\n  String getId();\n}\nGenerated swagger.json:- \n\"C\" : {\n      \"type\" : \"object\",\n      \"discriminator\" : \"type\",\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\"\n        }\n      }\n    }\nproperty \"type\" is missing in properties as well as required(since it is discriminator) which is leading to wrong code generation. Any thoughts on this ?\n. I am also facing  the same issue. Was it ever fixed?. ",
    "ayalaio": "ok, all orders are filtered in\nsrc/main/java/com/wordnik/swagger/sample/util/ApiAuthorizationFilterImpl.java\nthanks\n. ",
    "riteshmodi": "I have added commit https://github.com/riteshmodi/swagger-core/commit/5ed77148ca36cea815d6a6dbd6e663ab8c303444\n. closed\n. ",
    "chanaranga": "Is there any way to add swagger to my eclipse-weblogic project without using maven?\n. Hi,\nI did as you've suggested and now I'm getting the following exception. Any idea?\n<2013-08-16 02:04:16 PM SGT>    (ResourceHttpMethod.java:92)\n    at com.sun.jersey.server.impl.model.method.ResourceHttpMethod.(ResourceHttpMethod.java:69)\n    at com.sun.jersey.server.impl.model.ResourceClass.processSubResourceMethods(ResourceClass.java:286)\n    at com.sun.jersey.server.impl.model.ResourceClass.(ResourceClass.java:130)\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.newResourceClass(WebApplicationImpl.java:554)\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.getResourceClass(WebApplicationImpl.java:517)\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.processRootResources(WebApplicationImpl.java:1147)\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.initiate(WebApplicationImpl.java:912)\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.initiate(WebApplicationImpl.java:589)\n.........................\nI had a look in https://github.com/wordnik/swagger-core/issues/248 but could not found any help.\nI'm using jersey.\nThank you in advance.\n. ",
    "sajeetharan": "when i run the command it gives me this error\n[ERROR] Failed to execute goal net.alchim31.maven:scala-maven-plugin:3.1.5:testC\nompile (default) on project swagger-java-sample-app_2.10: wrap: org.apache.commo\nns.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1) -> [He\nlp 1]\n[ERROR]\n. Thanks for the quick response,\ni am running this sample java-jaxrs project in windows8.1 through the maven build.\ncd samples/java-jaxrs\nmvn package \n. This is the log i get when i run mvn -X package\nApache Maven 3.2.3 (33f8c3e1027c3ddde99d3cdebad2656a31e8fdf4; 2014-08-12T02:28:10+05:30)\nMaven home: C:\\apache-maven\nJava version: 1.7.0_55, vendor: Oracle Corporation\nJava home: C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\nDefault locale: en_US, platform encoding: Cp1252\nOS name: \"windows 8.1\", version: \"6.3\", arch: \"x86\", family: \"windows\"\n[INFO] Error stacktraces are turned on.\n[DEBUG] Reading global settings from C:\\apache-maven\\conf\\settings.xml\n[DEBUG] Reading user settings from C:\\Users\\sajeetharan.DUOSL.000.m2\\settings.xml\n[DEBUG] Using local repository at C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\n[DEBUG] Using manager EnhancedLocalRepositoryManager with priority 10.0 for C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\n[INFO] Scanning for projects...\n[DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=1, ConflictMarker.markTime=0, ConflictMarker.nodeCount=6, ConflictIdSorter.graphTime=1, ConflictIdSorter.topsortTime=1, ConflictIdSorter.conflictIdCount=5, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=5, ConflictResolver.conflictItemCount=6, DefaultDependencyCollector.collectTime=78, DefaultDependencyCollector.transformTime=10}\n[DEBUG] org.jvnet.wagon-svn:wagon-svn:jar:1.8:\n[DEBUG]    org.jvnet.hudson.svnkit:svnkit:jar:1.1.4-hudson-4:compile\n[DEBUG]       ch.ethz.ganymed:ganymed-ssh2:jar:build210:compile\n[DEBUG]    org.codehaus.plexus:plexus-utils:jar:1.4.1:compile\n[DEBUG]    org.apache.maven.wagon:wagon-provider-api:jar:1.0-beta-2:compile\n[DEBUG] Created new class realm maven.api\n[DEBUG] Importing foreign packages into class realm maven.api\n[DEBUG]   Imported: org.apache.maven.wagon.events < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.impl < plexus.core\n[DEBUG]   Imported: org.apache.maven.exception < plexus.core\n[DEBUG]   Imported: org.codehaus.plexus.util.xml.Xpp3Dom < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.version < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.metadata < plexus.core\n[DEBUG]   Imported: javax.enterprise.util.* < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.collection < plexus.core\n[DEBUG]   Imported: org.apache.maven.monitor < plexus.core\n[DEBUG]   Imported: org.apache.maven.wagon.repository < plexus.core\n[DEBUG]   Imported: org.apache.maven.repository < plexus.core\n[DEBUG]   Imported: org.apache.maven.wagon.resource < plexus.core\n[DEBUG]   Imported: org.codehaus.plexus.logging < plexus.core\n[DEBUG]   Imported: org.apache.maven.profiles < plexus.core\n[DEBUG]   Imported: org.apache.maven.classrealm < plexus.core\n[DEBUG]   Imported: org.apache.maven.execution.scope < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.artifact < plexus.core\n[DEBUG]   Imported: org.apache.maven.execution < plexus.core\n[DEBUG]   Imported: org.apache.maven.reporting < plexus.core\n[DEBUG]   Imported: org.apache.maven.usability < plexus.core\n[DEBUG]   Imported: org.codehaus.plexus.container < plexus.core\n[DEBUG]   Imported: org.codehaus.plexus.component < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.transfer < plexus.core\n[DEBUG]   Imported: org.apache.maven.wagon.authentication < plexus.core\n[DEBUG]   Imported: org.codehaus.plexus.util.xml.pull.XmlSerializer < plexus.core\n[DEBUG]   Imported: org.apache.maven.lifecycle < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.* < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.graph < plexus.core\n[DEBUG]   Imported: org.codehaus.plexus.classworlds < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.internal.impl < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.repository < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.resolution < plexus.core\n[DEBUG]   Imported: javax.inject.* < plexus.core\n[DEBUG]   Imported: org.apache.maven.settings < plexus.core\n[DEBUG]   Imported: org.codehaus.classworlds < plexus.core\n[DEBUG]   Imported: org.apache.maven.wagon.* < plexus.core\n[DEBUG]   Imported: org.apache.maven.toolchain < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.spi < plexus.core\n[DEBUG]   Imported: org.apache.maven.wagon.observers < plexus.core\n[DEBUG]   Imported: org.codehaus.plexus.util.xml.pull.XmlPullParserException < plexus.core\n[DEBUG]   Imported: org.codehaus.plexus.util.xml.pull.XmlPullParser < plexus.core\n[DEBUG]   Imported: org.apache.maven.configuration < plexus.core\n[DEBUG]   Imported: org.apache.maven.cli < plexus.core\n[DEBUG]   Imported: org.codehaus.plexus.context < plexus.core\n[DEBUG]   Imported: org.apache.maven.wagon.authorization < plexus.core\n[DEBUG]   Imported: org.apache.maven.project < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.installation < plexus.core\n[DEBUG]   Imported: org.eclipse.aether.deployment < plexus.core\n[DEBUG]   Imported: org.codehaus.plexus.lifecycle < plexus.core\n[DEBUG]   Imported: org.apache.maven.rtinfo < plexus.core\n[DEBUG]   Imported: org.codehaus.plexus.configuration < plexus.core\n[DEBUG]   Imported: org.apache.maven.artifact < plexus.core\n[DEBUG]   Imported: org.apache.maven.model < plexus.core\n[DEBUG]   Imported: org.slf4j.* < plexus.core\n[DEBUG]   Imported: javax.enterprise.inject.* < plexus.core\n[DEBUG]   Imported: org.apache.maven.* < plexus.core\n[DEBUG]   Imported: org.apache.maven.wagon.proxy < plexus.core\n[DEBUG]   Imported: org.codehaus.plexus.* < plexus.core\n[DEBUG]   Imported: org.apache.maven.plugin < plexus.core\n[DEBUG]   Imported: org.codehaus.plexus.personality < plexus.core\n[DEBUG] Populating class realm maven.api\n[DEBUG] Created new class realm extension>org.jvnet.wagon-svn:wagon-svn:1.8\n[DEBUG] Importing foreign packages into class realm extension>org.jvnet.wagon-svn:wagon-svn:1.8\n[DEBUG]   Imported:  < maven.api\n[DEBUG] Populating class realm extension>org.jvnet.wagon-svn:wagon-svn:1.8\n[DEBUG]   Included: org.jvnet.wagon-svn:wagon-svn:jar:1.8\n[DEBUG]   Included: org.jvnet.hudson.svnkit:svnkit:jar:1.1.4-hudson-4\n[DEBUG]   Included: ch.ethz.ganymed:ganymed-ssh2:jar:build210\n[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:1.4.1\n[DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=0, ConflictMarker.markTime=1, ConflictMarker.nodeCount=4, ConflictIdSorter.graphTime=0, ConflictIdSorter.topsortTime=0, ConflictIdSorter.conflictIdCount=3, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=0, ConflictResolver.conflictItemCount=4, DefaultDependencyCollector.collectTime=14, DefaultDependencyCollector.transformTime=1}\n[DEBUG] org.apache.maven.wagon:wagon-ssh-external:jar:1.0-alpha-6:\n[DEBUG]    org.codehaus.plexus:plexus-utils:jar:1.0.4:compile\n[DEBUG]    org.apache.maven.wagon:wagon-provider-api:jar:1.0-alpha-6:compile\n[DEBUG] Created new class realm extension>org.apache.maven.wagon:wagon-ssh-external:1.0-alpha-6\n[DEBUG] Importing foreign packages into class realm extension>org.apache.maven.wagon:wagon-ssh-external:1.0-alpha-6\n[DEBUG]   Imported:  < maven.api\n[DEBUG] Populating class realm extension>org.apache.maven.wagon:wagon-ssh-external:1.0-alpha-6\n[DEBUG]   Included: org.apache.maven.wagon:wagon-ssh-external:jar:1.0-alpha-6\n[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:1.0.4\n[DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=0, ConflictMarker.markTime=0, ConflictMarker.nodeCount=8, ConflictIdSorter.graphTime=0, ConflictIdSorter.topsortTime=0, ConflictIdSorter.conflictIdCount=8, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=1, ConflictResolver.conflictItemCount=8, DefaultDependencyCollector.collectTime=34, DefaultDependencyCollector.transformTime=1}\n[DEBUG] org.apache.maven.wagon:wagon-webdav:jar:1.0-beta-1:\n[DEBUG]    slide:slide-webdavlib:jar:2.1:compile\n[DEBUG]       commons-httpclient:commons-httpclient:jar:2.0.2:compile\n[DEBUG]          commons-logging:commons-logging:jar:1.0.3:compile\n[DEBUG]       jdom:jdom:jar:1.0:compile\n[DEBUG]       de.zeigermann.xml:xml-im-exporter:jar:1.1:compile\n[DEBUG]    org.apache.maven.wagon:wagon-provider-api:jar:1.0-beta-1:compile\n[DEBUG]       org.codehaus.plexus:plexus-utils:jar:1.0.4:compile\n[DEBUG] Created new class realm extension>org.apache.maven.wagon:wagon-webdav:1.0-beta-1\n[DEBUG] Importing foreign packages into class realm extension>org.apache.maven.wagon:wagon-webdav:1.0-beta-1\n[DEBUG]   Imported:  < maven.api\n[DEBUG] Populating class realm extension>org.apache.maven.wagon:wagon-webdav:1.0-beta-1\n[DEBUG]   Included: org.apache.maven.wagon:wagon-webdav:jar:1.0-beta-1\n[DEBUG]   Included: slide:slide-webdavlib:jar:2.1\n[DEBUG]   Included: commons-httpclient:commons-httpclient:jar:2.0.2\n[DEBUG]   Included: commons-logging:commons-logging:jar:1.0.3\n[DEBUG]   Included: jdom:jdom:jar:1.0\n[DEBUG]   Included: de.zeigermann.xml:xml-im-exporter:jar:1.1\n[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:1.0.4\n[DEBUG] Extension realms for project com.wordnik:swagger-java-sample-app_2.10:war:1.3.10: [ClassRealm[extension>org.jvnet.wagon-svn:wagon-svn:1.8, parent: sun.misc.Launcher$AppClassLoader@19134f4], ClassRealm[extension>org.apache.maven.wagon:wagon-ssh-external:1.0-alpha-6, parent: sun.misc.Launcher$AppClassLoader@19134f4], ClassRealm[extension>org.apache.maven.wagon:wagon-webdav:1.0-beta-1, parent: sun.misc.Launcher$AppClassLoader@19134f4]]\n[DEBUG] Created new class realm project>com.wordnik:swagger-java-sample-app_2.10:1.3.10\n[DEBUG] Populating class realm project>com.wordnik:swagger-java-sample-app_2.10:1.3.10\n[DEBUG]   Included: org.apache.maven.wagon:wagon-ssh-external:jar:1.0-alpha-6\n[DEBUG] Looking up lifecyle mappings for packaging war from ClassRealm[project>com.wordnik:swagger-java-sample-app_2.10:1.3.10, parent: ClassRealm[maven.api, parent: null]]\n[DEBUG] Extension realms for project com.wordnik:swagger-project_2.10:pom:1.3.10: [ClassRealm[extension>org.jvnet.wagon-svn:wagon-svn:1.8, parent: sun.misc.Launcher$AppClassLoader@19134f4], ClassRealm[extension>org.apache.maven.wagon:wagon-ssh-external:1.0-alpha-6, parent: sun.misc.Launcher$AppClassLoader@19134f4], ClassRealm[extension>org.apache.maven.wagon:wagon-webdav:1.0-beta-1, parent: sun.misc.Launcher$AppClassLoader@19134f4]]\n[DEBUG] Looking up lifecyle mappings for packaging pom from ClassRealm[project>com.wordnik:swagger-java-sample-app_2.10:1.3.10, parent: ClassRealm[maven.api, parent: null]]\n[DEBUG] Extension realms for project org.sonatype.oss:oss-parent:pom:5: (none)\n[DEBUG] Looking up lifecyle mappings for packaging pom from ClassRealm[plexus.core, parent: null]\n[DEBUG] === REACTOR BUILD PLAN ================================================\n[DEBUG] Project: com.wordnik:swagger-java-sample-app_2.10:war:1.3.10\n[DEBUG] Tasks:   [package]\n[DEBUG] Style:   Regular\n[DEBUG] =======================================================================\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Building swagger-java-jaxrs-app 1.3.10\n[INFO] ------------------------------------------------------------------------\n[DEBUG] Resolving plugin version for org.apache.maven.plugins:maven-gpg-plugin\n[DEBUG] Could not find metadata org.apache.maven.plugins:maven-gpg-plugin/maven-metadata.xml in local (C:\\Users\\sajeetharan.DUOSL.000.m2\\repository)\n[DEBUG] Skipped remote update check for org.apache.maven.plugins:maven-gpg-plugin/maven-metadata.xml, locally cached metadata up-to-date.\n[DEBUG] Resolved plugin version for org.apache.maven.plugins:maven-gpg-plugin to 1.5 from repository central (https://repo.maven.apache.org/maven2, releases)\n[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]\n[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]\n[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]\n[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]\n[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]\n[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]\n[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]\n[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]\n[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]\n[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]\n[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]\n[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]\n[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]\n[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]\n[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]\n[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]\n[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]\n[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]\n[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]\n[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]\n[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]\n[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]\n[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]\n[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]\n[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]\n[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]\n[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]\n[DEBUG] === PROJECT BUILD PLAN ================================================\n[DEBUG] Project:       com.wordnik:swagger-java-sample-app_2.10:1.3.10\n[DEBUG] Dependencies (collect): []\n[DEBUG] Dependencies (resolve): [compile, runtime, test]\n[DEBUG] Repositories (dependencies): [sonatype-nexus-snapshots (https://oss.sonatype.org/content/repositories/snapshots, snapshots), central (https://repo.maven.apache.org/maven2, releases)]\n[DEBUG] Repositories (plugins)     : [central (https://repo.maven.apache.org/maven2, releases)]\n[DEBUG] -----------------------------------------------------------------------\n[DEBUG] Goal:          org.apache.maven.plugins:maven-enforcer-plugin:1.0-beta-1:enforce (enforce-maven)\n[DEBUG] Style:         Regular\n[DEBUG] Configuration: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n${enforcer.fail}\n${enforcer.failFast}\n${enforcer.ignoreCache}\n${project}\n\n\n(,2.1.0),(2.1.0,2.2.0),(2.2.0,)\nMaven 2.1.0 and 2.2.0 produce incorrect GPG signatures and checksums respectively.\n\n\n${session}\n${enforcer.skip}\n\n[DEBUG] -----------------------------------------------------------------------\n[DEBUG] Goal:          net.alchim31.maven:scala-maven-plugin:3.1.5:add-source (default)\n[DEBUG] Style:         Regular\n[DEBUG] Configuration: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n${project}\n${project.build.sourceDirectory}/../scala\n${project.build.testSourceDirectory}/../scala\n${maven.scala.useCanonicalPath}\n\n[DEBUG] -----------------------------------------------------------------------\n[DEBUG] Goal:          org.apache.maven.plugins:maven-resources-plugin:2.6:resources (default-resources)\n[DEBUG] Style:         Regular\n[DEBUG] Configuration: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n${encoding}\n${maven.resources.escapeString}\n${maven.resources.escapeWindowsPaths}\n${maven.resources.includeEmptyDirs}\n\n${maven.resources.overwrite}\n\n\n\n${maven.resources.supportMultiLineFiltering}\n\n\n\n[DEBUG] -----------------------------------------------------------------------\n[DEBUG] Goal:          org.apache.maven.plugins:maven-compiler-plugin:3.0:compile (default-compile)\n[DEBUG] Style:         Regular\n[DEBUG] Configuration: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n\n\n\n${maven.compiler.compilerId}\n${maven.compiler.compilerReuseStrategy}\n${maven.compiler.compilerVersion}\n${maven.compiler.debug}\n${maven.compiler.debuglevel}\n${encoding}\n${maven.compiler.executable}\n${maven.compiler.failOnError}\n${maven.compiler.forceJavacCompilerUse}\n${maven.compiler.fork}\n\n${maven.compiler.maxmem}\n${maven.compiler.meminitial}\n${mojoExecution}\n${maven.compiler.optimize}\n\n\n${maven.compiler.showDeprecation}\n${maven.compiler.showWarnings}\n${maven.compiler.skipMultiThreadWarning}\n1.6\n  ${lastModGranularityMs}\n1.6\n${maven.compiler.verbose}\n\n\n\n[DEBUG] -----------------------------------------------------------------------\n[DEBUG] Goal:          net.alchim31.maven:scala-maven-plugin:3.1.5:compile (default)\n[DEBUG] Style:         Regular\n[DEBUG] Configuration: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n${addJavacArgs}\n${addScalacArgs}\n${addZincArgs}\n${analysisCacheFile}\n\n-target:jvm-1.6\n-deprecation\n\n${maven.scala.checkConsistency}\n${compileOrder}\n${displayCmd}\n${project.build.sourceEncoding}\n\n\n\n${javacArgs}\n${javacGenerateDebugSymbols}\n\n-Xmx384m\n\n${localRepository}\n${localRepository}\n${notifyCompilation}\n${project.build.outputDirectory}\n\n${project}\n\n${recompileMode}\n${project.remoteArtifactRepositories}\n${maven.scala.className}\n${scala.home}\n${scala.version}\n\n${session}\n${maven.compiler.source}\n  ${project.build.sourceDirectory}/../scala\n${maven.compiler.target}\n${maven.scala.useCanonicalPath}\n${useZincServer}\n${zincPort}\n\n[DEBUG] -----------------------------------------------------------------------\n[DEBUG] Goal:          org.apache.maven.plugins:maven-resources-plugin:2.6:testResources (default-testResources)\n[DEBUG] Style:         Regular\n[DEBUG] Configuration: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n${encoding}\n${maven.resources.escapeString}\n${maven.resources.escapeWindowsPaths}\n${maven.resources.includeEmptyDirs}\n\n${maven.resources.overwrite}\n\n\n\n${maven.test.skip}\n${maven.resources.supportMultiLineFiltering}\n\n\n\n[DEBUG] -----------------------------------------------------------------------\n[DEBUG] Goal:          org.apache.maven.plugins:maven-compiler-plugin:3.0:testCompile (default-testCompile)\n[DEBUG] Style:         Regular\n[DEBUG] Configuration: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n\n\n\n${maven.compiler.compilerId}\n${maven.compiler.compilerReuseStrategy}\n${maven.compiler.compilerVersion}\n${maven.compiler.debug}\n${maven.compiler.debuglevel}\n${encoding}\n${maven.compiler.executable}\n${maven.compiler.failOnError}\n${maven.compiler.forceJavacCompilerUse}\n${maven.compiler.fork}\n\n${maven.compiler.maxmem}\n${maven.compiler.meminitial}\n${mojoExecution}\n${maven.compiler.optimize}\n\n${maven.compiler.showDeprecation}\n${maven.compiler.showWarnings}\n${maven.test.skip}\n${maven.compiler.skipMultiThreadWarning}\n1.6\n  ${lastModGranularityMs}\n1.6\n${maven.compiler.testSource}\n${maven.compiler.testTarget}\n${maven.compiler.verbose}\n\n\n\n[DEBUG] -----------------------------------------------------------------------\n[DEBUG] Goal:          net.alchim31.maven:scala-maven-plugin:3.1.5:testCompile (default)\n[DEBUG] Style:         Regular\n[DEBUG] Configuration: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n${addJavacArgs}\n${addScalacArgs}\n${addZincArgs}\n\n-target:jvm-1.6\n-deprecation\n\n${maven.scala.checkConsistency}\n${compileOrder}\n${displayCmd}\n${project.build.sourceEncoding}\n\n\n\n${javacArgs}\n${javacGenerateDebugSymbols}\n\n-Xmx384m\n\n${localRepository}\n${localRepository}\n${notifyCompilation}\n\n${project}\n\n${recompileMode}\n${project.remoteArtifactRepositories}\n${maven.scala.className}\n${scala.home}\n${scala.version}\n\n${session}\n${maven.test.skip}\n${maven.compiler.source}\n  ${maven.compiler.target}\n${testAnalysisCacheFile}\n${project.build.testOutputDirectory}\n${project.build.testSourceDirectory}/../scala\n${maven.scala.useCanonicalPath}\n${useZincServer}\n${zincPort}\n\n[DEBUG] -----------------------------------------------------------------------\n[DEBUG] Goal:          org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test (default-test)\n[DEBUG] Style:         Regular\n[DEBUG] Configuration: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n${argLine}\n\n${childDelegation}\n\n${maven.surefire.debug}\n${disableXmlReport}\n${enableAssertions}\n${excludedGroups}\n${surefire.failIfNoSpecifiedTests}\n${failIfNoTests}\n${forkMode}\n${surefire.timeout}\n${groups}\n${junitArtifactName}\n${jvm}\n\n${objectFactory}\n${parallel}\n\n${perCoreThreadCount}\n${plugin.artifactMap}\n\n${surefire.printSummary}\n${project.artifactMap}\n${maven.test.redirectTestOutputToFile}\n\n${surefire.reportFormat}\n${surefire.reportNameSuffix}\n\n\n${maven.test.skip}\n${maven.test.skip.exec}\n${skipTests}\n${test}\n\n${maven.test.failure.ignore}\n${testNGArtifactName}\n\n${threadCount}\n${trimStackTrace}\n${surefire.useFile}\n${surefire.useManifestOnlyJar}\n${surefire.useSystemClassLoader}\n${useUnlimitedThreads}\n${basedir}\n\n\n\n[DEBUG] -----------------------------------------------------------------------\n[DEBUG] Goal:          org.apache.maven.plugins:maven-war-plugin:2.1.1:war (default-war)\n[DEBUG] Style:         Regular\n[DEBUG] Configuration: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n${archiveClasses}\n\n\n\n\n${maven.war.containerConfigXML}\n${maven.war.escapeString}\n${maven.war.escapedBackslashesInFilePath}\n${failOnMissingWebXml}\n${maven.war.filteringDeploymentDescriptors}\n\n${primaryArtifact}\n\n\n${useCache}\n\n\n\n${maven.war.webxml}\n\n\n\n[DEBUG] -----------------------------------------------------------------------\n[DEBUG] Goal:          org.apache.maven.plugins:maven-dependency-plugin:2.8:copy-dependencies (default)\n[DEBUG] Style:         Regular\n[DEBUG] Configuration: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n${classifier}\n${mdep.copyPom}\n${excludeArtifactIds}\n${excludeClassifiers}\n${excludeGroupIds}\n${excludeScope}\n${excludeTransitive}\n${excludeTypes}\n${mdep.failOnMissingClassifierArtifact}\n${includeArtifactIds}\n${includeClassifiers}\n${includeGroupIds}\n${includeScope}\n${includeTypes}\n\n${markersDirectory}\n${outputAbsoluteArtifactFilename}\nC:\\swagger\\swagger\\samples\\java-jaxrs\\target/lib\n${overWriteIfNewer}\n${overWriteReleases}\n${overWriteSnapshots}\n${mdep.prependGroupId}\n\n\n${silent}\n${mdep.skip}\n${mdep.stripClassifier}\n${mdep.stripVersion}\n${type}\n${mdep.useBaseVersion}\n${mdep.useRepositoryLayout}\n${mdep.useSubDirectoryPerArtifact}\n${mdep.useSubDirectoryPerScope}\n${mdep.useSubDirectoryPerType}\n\n\n[DEBUG] =======================================================================\n[DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=1, ConflictMarker.markTime=0, ConflictMarker.nodeCount=96, ConflictIdSorter.graphTime=0, ConflictIdSorter.topsortTime=0, ConflictIdSorter.conflictIdCount=51, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=10, ConflictResolver.conflictItemCount=87, DefaultDependencyCollector.collectTime=296, DefaultDependencyCollector.transformTime=11}\n[DEBUG] com.wordnik:swagger-java-sample-app_2.10:war:1.3.10\n[DEBUG]    com.wordnik:swagger-jaxrs_2.10:jar:1.3.10:compile\n[DEBUG]       org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]       com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]          commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]          com.fasterxml.jackson.module:jackson-module-scala_2.10:jar:2.4.1:compile\n[DEBUG]             com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]             com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]             com.thoughtworks.paranamer:paranamer:jar:2.6:compile\n[DEBUG]             com.google.code.findbugs:jsr305:jar:2.0.1:compile\n[DEBUG]          com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]          com.fasterxml.jackson.module:jackson-module-jsonSchema:jar:2.1.0:compile\n[DEBUG]          com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:jar:2.0.0:compile\n[DEBUG]             com.fasterxml.jackson.module:jackson-module-jaxb-annotations:jar:2.0.0:compile\n[DEBUG]          com.wordnik:swagger-annotations:jar:1.3.10:compile\n[DEBUG]          org.json4s:json4s-ext_2.10:jar:3.2.9:compile\n[DEBUG]             joda-time:joda-time:jar:2.3:compile\n[DEBUG]             org.joda:joda-convert:jar:1.6:compile\n[DEBUG]          org.json4s:json4s-native_2.10:jar:3.2.9:compile\n[DEBUG]             org.json4s:json4s-core_2.10:jar:3.2.9:compile\n[DEBUG]                org.json4s:json4s-ast_2.10:jar:3.2.9:compile\n[DEBUG]                org.scala-lang:scalap:jar:2.10.0:compile\n[DEBUG]                   org.scala-lang:scala-compiler:jar:2.10.0:compile\n[DEBUG]          org.json4s:json4s-jackson_2.10:jar:3.2.9:compile\n[DEBUG]       javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]       org.reflections:reflections:jar:0.9.9-RC1:compile\n[DEBUG]          com.google.guava:guava:jar:11.0.2:compile\n[DEBUG]          org.javassist:javassist:jar:3.16.1-GA:compile\n[DEBUG]          dom4j:dom4j:jar:1.6.1:compile\n[DEBUG]             xml-apis:xml-apis:jar:1.0.b2:compile\n[DEBUG]    ch.qos.logback:logback-classic:jar:1.0.1:compile\n[DEBUG]       org.slf4j:slf4j-api:jar:1.6.3:compile (version managed from 1.6.4 by com.wordnik:swagger-project_2.10:1.3.10)\n[DEBUG]    ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]    org.scalatest:scalatest_2.10:jar:2.1.3:test\n[DEBUG]       org.scala-lang:scala-reflect:jar:2.10.3:compile\n[DEBUG]    junit:junit:jar:4.8.1:test\n[DEBUG]    javax.servlet:servlet-api:jar:2.5:provided\n[DEBUG]    com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]    com.sun.jersey:jersey-json:jar:1.13:compile\n[DEBUG]       org.codehaus.jettison:jettison:jar:1.1:compile\n[DEBUG]          stax:stax-api:jar:1.0.1:compile\n[DEBUG]       com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:compile\n[DEBUG]          javax.xml.bind:jaxb-api:jar:2.2.2:compile\n[DEBUG]             javax.xml.stream:stax-api:jar:1.0-2:compile\n[DEBUG]             javax.activation:activation:jar:1.1:compile\n[DEBUG]       org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]       org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]       org.codehaus.jackson:jackson-jaxrs:jar:1.9.2:compile\n[DEBUG]       org.codehaus.jackson:jackson-xc:jar:1.9.2:compile\n[DEBUG]    com.sun.jersey:jersey-servlet:jar:1.13:compile\n[DEBUG]       com.sun.jersey:jersey-server:jar:1.13:compile\n[DEBUG]          asm:asm:jar:3.1:compile\n[INFO] \n[INFO] --- maven-enforcer-plugin:1.0-beta-1:enforce (enforce-maven) @ swagger-java-sample-app_2.10 ---\n[DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=0, ConflictMarker.markTime=1, ConflictMarker.nodeCount=74, ConflictIdSorter.graphTime=0, ConflictIdSorter.topsortTime=0, ConflictIdSorter.conflictIdCount=27, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=2, ConflictResolver.conflictItemCount=71, DefaultDependencyCollector.collectTime=134, DefaultDependencyCollector.transformTime=3}\n[DEBUG] org.apache.maven.plugins:maven-enforcer-plugin:jar:1.0-beta-1:\n[DEBUG]    org.apache.maven:maven-artifact:jar:2.0.9:compile\n[DEBUG]    org.apache.maven:maven-plugin-api:jar:2.0.9:compile\n[DEBUG]    org.apache.maven:maven-project:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-settings:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-profile:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-model:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-artifact-manager:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-plugin-registry:jar:2.0.9:compile\n[DEBUG]       org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1:compile\n[DEBUG]          junit:junit:jar:3.8.2:test\n[DEBUG]    org.apache.maven:maven-core:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-plugin-parameter-documenter:jar:2.0.9:compile\n[DEBUG]       org.apache.maven.reporting:maven-reporting-api:jar:2.0.9:compile\n[DEBUG]          org.apache.maven.doxia:doxia-sink-api:jar:1.0-alpha-10:compile\n[DEBUG]       org.apache.maven:maven-repository-metadata:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-error-diagnostics:jar:2.0.9:compile\n[DEBUG]       commons-cli:commons-cli:jar:1.0:compile\n[DEBUG]       org.apache.maven:maven-plugin-descriptor:jar:2.0.9:compile\n[DEBUG]       org.codehaus.plexus:plexus-interactivity-api:jar:1.0-alpha-4:compile\n[DEBUG]       org.apache.maven:maven-monitor:jar:2.0.9:compile\n[DEBUG]       classworlds:classworlds:jar:1.1:compile\n[DEBUG]    org.codehaus.plexus:plexus-utils:jar:1.5.8:compile\n[DEBUG]    commons-lang:commons-lang:jar:2.3:compile\n[DEBUG]    org.apache.maven.enforcer:enforcer-api:jar:1.0-beta-1:compile\n[DEBUG]    org.apache.maven.enforcer:enforcer-rules:jar:1.0-beta-1:compile\n[DEBUG]       org.beanshell:bsh:jar:2.0b4:compile\n[DEBUG] Created new class realm plugin>org.apache.maven.plugins:maven-enforcer-plugin:1.0-beta-1\n[DEBUG] Importing foreign packages into class realm plugin>org.apache.maven.plugins:maven-enforcer-plugin:1.0-beta-1\n[DEBUG]   Imported:  < project>com.wordnik:swagger-java-sample-app_2.10:1.3.10\n[DEBUG] Populating class realm plugin>org.apache.maven.plugins:maven-enforcer-plugin:1.0-beta-1\n[DEBUG]   Included: org.apache.maven.plugins:maven-enforcer-plugin:jar:1.0-beta-1\n[DEBUG]   Included: org.apache.maven.reporting:maven-reporting-api:jar:2.0.9\n[DEBUG]   Included: org.apache.maven.doxia:doxia-sink-api:jar:1.0-alpha-10\n[DEBUG]   Included: commons-cli:commons-cli:jar:1.0\n[DEBUG]   Included: org.codehaus.plexus:plexus-interactivity-api:jar:1.0-alpha-4\n[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:1.5.8\n[DEBUG]   Included: commons-lang:commons-lang:jar:2.3\n[DEBUG]   Included: org.apache.maven.enforcer:enforcer-api:jar:1.0-beta-1\n[DEBUG]   Included: org.apache.maven.enforcer:enforcer-rules:jar:1.0-beta-1\n[DEBUG]   Included: org.beanshell:bsh:jar:2.0b4\n[DEBUG]   Excluded: org.apache.maven:maven-artifact:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-api:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-project:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-settings:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-profile:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-model:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-artifact-manager:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-registry:jar:2.0.9\n[DEBUG]   Excluded: org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1\n[DEBUG]   Excluded: junit:junit:jar:3.8.2\n[DEBUG]   Excluded: org.apache.maven:maven-core:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-parameter-documenter:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-repository-metadata:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-error-diagnostics:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-descriptor:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-monitor:jar:2.0.9\n[DEBUG]   Excluded: classworlds:classworlds:jar:1.1\n[DEBUG] Configuring mojo org.apache.maven.plugins:maven-enforcer-plugin:1.0-beta-1:enforce from plugin realm ClassRealm[plugin>org.apache.maven.plugins:maven-enforcer-plugin:1.0-beta-1, parent: sun.misc.Launcher$AppClassLoader@19134f4]\n[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-enforcer-plugin:1.0-beta-1:enforce' with basic configurator -->\nDEBUG fail = true\nDEBUG failFast = false\nDEBUG ignoreCache = false\nDEBUG project = MavenProject: com.wordnik:swagger-java-sample-app_2.10:1.3.10 @ C:\\swagger\\swagger\\samples\\java-jaxrs\\pom.xml\nDEBUG version = (,2.1.0),(2.1.0,2.2.0),(2.2.0,)\nDEBUG message = Maven 2.1.0 and 2.2.0 produce incorrect GPG signatures and checksums respectively.\nDEBUG rules = [org.apache.maven.plugins.enforcer.RequireMavenVersion@1dc598b]\nDEBUG session = org.apache.maven.execution.MavenSession@17ab7ae\nDEBUG skip = false\n[DEBUG] -- end configuration --\n[DEBUG] Executing rule: org.apache.maven.plugins.enforcer.RequireMavenVersion\n[DEBUG] Rule org.apache.maven.plugins.enforcer.RequireMavenVersion is cacheable.\n[DEBUG] Detected Maven Version: 3.2.3\n[DEBUG] Detected Maven Version: 3.2.3 is allowed in the range (,2.1.0),(2.1.0,2.2.0),(2.2.0,).\n[INFO] \n[INFO] --- scala-maven-plugin:3.1.5:add-source (default) @ swagger-java-sample-app_2.10 ---\n[DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=1, ConflictMarker.markTime=1, ConflictMarker.nodeCount=186, ConflictIdSorter.graphTime=0, ConflictIdSorter.topsortTime=0, ConflictIdSorter.conflictIdCount=52, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=3, ConflictResolver.conflictItemCount=115, DefaultDependencyCollector.collectTime=404, DefaultDependencyCollector.transformTime=5}\n[DEBUG] net.alchim31.maven:scala-maven-plugin:jar:3.1.5:\n[DEBUG]    org.apache.maven.reporting:maven-reporting-api:jar:3.0:compile\n[DEBUG]    org.apache.maven:maven-core:jar:3.0.4:compile\n[DEBUG]       org.apache.maven:maven-settings:jar:3.0.4:compile\n[DEBUG]       org.apache.maven:maven-settings-builder:jar:3.0.4:compile\n[DEBUG]       org.apache.maven:maven-repository-metadata:jar:3.0.4:compile\n[DEBUG]       org.apache.maven:maven-plugin-api:jar:3.0.4:compile\n[DEBUG]       org.apache.maven:maven-model-builder:jar:3.0.4:compile\n[DEBUG]       org.apache.maven:maven-aether-provider:jar:3.0.4:compile\n[DEBUG]          org.sonatype.aether:aether-spi:jar:1.13.1:compile\n[DEBUG]       org.sonatype.aether:aether-impl:jar:1.13.1:compile\n[DEBUG]       org.sonatype.aether:aether-api:jar:1.13.1:compile\n[DEBUG]       org.sonatype.aether:aether-util:jar:1.13.1:compile\n[DEBUG]       org.sonatype.sisu:sisu-inject-plexus:jar:2.3.0:compile\n[DEBUG]          org.sonatype.sisu:sisu-inject-bean:jar:2.3.0:compile\n[DEBUG]             org.sonatype.sisu:sisu-guice:jar:no_aop:3.1.0:compile\n[DEBUG]                org.sonatype.sisu:sisu-guava:jar:0.9.9:compile\n[DEBUG]       org.codehaus.plexus:plexus-interpolation:jar:1.14:compile\n[DEBUG]       org.codehaus.plexus:plexus-component-annotations:jar:1.5.5:compile\n[DEBUG]       org.sonatype.plexus:plexus-sec-dispatcher:jar:1.3:compile\n[DEBUG]          org.sonatype.plexus:plexus-cipher:jar:1.4:compile\n[DEBUG]    org.apache.maven.shared:maven-dependency-tree:jar:1.2:compile\n[DEBUG]    org.apache.commons:commons-exec:jar:1.1:compile\n[DEBUG]    org.apache.maven:maven-artifact:jar:2.2.1:compile\n[DEBUG]    org.codehaus.plexus:plexus-utils:jar:3.0:compile\n[DEBUG]    org.codehaus.plexus:plexus-archiver:jar:2.1:compile\n[DEBUG]       org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1:compile\n[DEBUG]          junit:junit:jar:3.8.1:compile\n[DEBUG]          classworlds:classworlds:jar:1.1-alpha-2:compile\n[DEBUG]       org.codehaus.plexus:plexus-io:jar:2.0.2:compile\n[DEBUG]    org.codehaus.plexus:plexus-classworlds:jar:2.4:compile\n[DEBUG]    org.apache.maven:maven-project:jar:2.0.8:compile\n[DEBUG]       org.apache.maven:maven-profile:jar:2.0.8:compile\n[DEBUG]       org.apache.maven:maven-artifact-manager:jar:2.0.8:compile\n[DEBUG]       org.apache.maven:maven-plugin-registry:jar:2.0.8:compile\n[DEBUG]    org.apache.maven:maven-archiver:jar:2.5:compile\n[DEBUG]    org.apache.maven.doxia:doxia-sink-api:jar:1.1.2:compile\n[DEBUG]       org.apache.maven.doxia:doxia-logging-api:jar:1.1.2:compile\n[DEBUG]    org.apache.maven:maven-model:jar:3.0.4:compile\n[DEBUG]    org.apache.maven.shared:maven-invoker:jar:2.0.11:compile\n[DEBUG]    com.typesafe.zinc:zinc:jar:0.2.0:compile\n[DEBUG]       org.scala-lang:scala-library:jar:2.9.2:compile\n[DEBUG]       com.typesafe.sbt:compiler-interface:jar:sources:0.12.1:compile\n[DEBUG]    com.typesafe.sbt:incremental-compiler:jar:0.12.1:compile\n[DEBUG]       com.typesafe.sbt:sbt-interface:jar:0.12.1:compile\n[DEBUG]       org.scala-lang:scala-compiler:jar:2.9.2:compile\n[DEBUG] Created new class realm plugin>net.alchim31.maven:scala-maven-plugin:3.1.5\n[DEBUG] Importing foreign packages into class realm plugin>net.alchim31.maven:scala-maven-plugin:3.1.5\n[DEBUG]   Imported:  < project>com.wordnik:swagger-java-sample-app_2.10:1.3.10\n[DEBUG] Populating class realm plugin>net.alchim31.maven:scala-maven-plugin:3.1.5\n[DEBUG]   Included: net.alchim31.maven:scala-maven-plugin:jar:3.1.5\n[DEBUG]   Included: org.apache.maven.reporting:maven-reporting-api:jar:3.0\n[DEBUG]   Included: org.sonatype.aether:aether-util:jar:1.13.1\n[DEBUG]   Included: org.sonatype.sisu:sisu-inject-bean:jar:2.3.0\n[DEBUG]   Included: org.sonatype.sisu:sisu-guice:jar:no_aop:3.1.0\n[DEBUG]   Included: org.sonatype.sisu:sisu-guava:jar:0.9.9\n[DEBUG]   Included: org.codehaus.plexus:plexus-interpolation:jar:1.14\n[DEBUG]   Included: org.codehaus.plexus:plexus-component-annotations:jar:1.5.5\n[DEBUG]   Included: org.sonatype.plexus:plexus-sec-dispatcher:jar:1.3\n[DEBUG]   Included: org.sonatype.plexus:plexus-cipher:jar:1.4\n[DEBUG]   Included: org.apache.maven.shared:maven-dependency-tree:jar:1.2\n[DEBUG]   Included: org.apache.commons:commons-exec:jar:1.1\n[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:3.0\n[DEBUG]   Included: org.codehaus.plexus:plexus-archiver:jar:2.1\n[DEBUG]   Included: junit:junit:jar:3.8.1\n[DEBUG]   Included: org.codehaus.plexus:plexus-io:jar:2.0.2\n[DEBUG]   Included: org.apache.maven:maven-archiver:jar:2.5\n[DEBUG]   Included: org.apache.maven.doxia:doxia-sink-api:jar:1.1.2\n[DEBUG]   Included: org.apache.maven.doxia:doxia-logging-api:jar:1.1.2\n[DEBUG]   Included: org.apache.maven.shared:maven-invoker:jar:2.0.11\n[DEBUG]   Included: com.typesafe.zinc:zinc:jar:0.2.0\n[DEBUG]   Included: org.scala-lang:scala-library:jar:2.9.2\n[DEBUG]   Included: com.typesafe.sbt:compiler-interface:jar:sources:0.12.1\n[DEBUG]   Included: com.typesafe.sbt:incremental-compiler:jar:0.12.1\n[DEBUG]   Included: com.typesafe.sbt:sbt-interface:jar:0.12.1\n[DEBUG]   Included: org.scala-lang:scala-compiler:jar:2.9.2\n[DEBUG]   Excluded: org.apache.maven:maven-core:jar:3.0.4\n[DEBUG]   Excluded: org.apache.maven:maven-settings:jar:3.0.4\n[DEBUG]   Excluded: org.apache.maven:maven-settings-builder:jar:3.0.4\n[DEBUG]   Excluded: org.apache.maven:maven-repository-metadata:jar:3.0.4\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-api:jar:3.0.4\n[DEBUG]   Excluded: org.apache.maven:maven-model-builder:jar:3.0.4\n[DEBUG]   Excluded: org.apache.maven:maven-aether-provider:jar:3.0.4\n[DEBUG]   Excluded: org.sonatype.aether:aether-spi:jar:1.13.1\n[DEBUG]   Excluded: org.sonatype.aether:aether-impl:jar:1.13.1\n[DEBUG]   Excluded: org.sonatype.aether:aether-api:jar:1.13.1\n[DEBUG]   Excluded: org.sonatype.sisu:sisu-inject-plexus:jar:2.3.0\n[DEBUG]   Excluded: org.apache.maven:maven-artifact:jar:2.2.1\n[DEBUG]   Excluded: org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1\n[DEBUG]   Excluded: classworlds:classworlds:jar:1.1-alpha-2\n[DEBUG]   Excluded: org.codehaus.plexus:plexus-classworlds:jar:2.4\n[DEBUG]   Excluded: org.apache.maven:maven-project:jar:2.0.8\n[DEBUG]   Excluded: org.apache.maven:maven-profile:jar:2.0.8\n[DEBUG]   Excluded: org.apache.maven:maven-artifact-manager:jar:2.0.8\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-registry:jar:2.0.8\n[DEBUG]   Excluded: org.apache.maven:maven-model:jar:3.0.4\n[DEBUG] Configuring mojo net.alchim31.maven:scala-maven-plugin:3.1.5:add-source from plugin realm ClassRealm[plugin>net.alchim31.maven:scala-maven-plugin:3.1.5, parent: sun.misc.Launcher$AppClassLoader@19134f4]\n[DEBUG] Configuring mojo 'net.alchim31.maven:scala-maven-plugin:3.1.5:add-source' with basic configurator -->\nDEBUG project = MavenProject: com.wordnik:swagger-java-sample-app_2.10:1.3.10 @ C:\\swagger\\swagger\\samples\\java-jaxrs\\pom.xml\nDEBUG sourceDir = C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\main\\java..\\scala\nDEBUG testSourceDir = C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\scala..\\scala\nDEBUG useCanonicalPath = true\n[DEBUG] -- end configuration --\n[INFO] Add Source directory: C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\main\\scala\n[INFO] \n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ swagger-java-sample-app_2.10 ---\n[DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=0, ConflictMarker.markTime=0, ConflictMarker.nodeCount=77, ConflictIdSorter.graphTime=1, ConflictIdSorter.topsortTime=0, ConflictIdSorter.conflictIdCount=26, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=1, ConflictResolver.conflictItemCount=74, DefaultDependencyCollector.collectTime=47, DefaultDependencyCollector.transformTime=2}\n[DEBUG] org.apache.maven.plugins:maven-resources-plugin:jar:2.6:\n[DEBUG]    org.apache.maven:maven-plugin-api:jar:2.0.6:compile\n[DEBUG]    org.apache.maven:maven-project:jar:2.0.6:compile\n[DEBUG]       org.apache.maven:maven-profile:jar:2.0.6:compile\n[DEBUG]       org.apache.maven:maven-artifact-manager:jar:2.0.6:compile\n[DEBUG]       org.apache.maven:maven-plugin-registry:jar:2.0.6:compile\n[DEBUG]    org.apache.maven:maven-core:jar:2.0.6:compile\n[DEBUG]       org.apache.maven:maven-plugin-parameter-documenter:jar:2.0.6:compile\n[DEBUG]       org.apache.maven.reporting:maven-reporting-api:jar:2.0.6:compile\n[DEBUG]          org.apache.maven.doxia:doxia-sink-api:jar:1.0-alpha-7:compile\n[DEBUG]       org.apache.maven:maven-repository-metadata:jar:2.0.6:compile\n[DEBUG]       org.apache.maven:maven-error-diagnostics:jar:2.0.6:compile\n[DEBUG]       commons-cli:commons-cli:jar:1.0:compile\n[DEBUG]       org.apache.maven:maven-plugin-descriptor:jar:2.0.6:compile\n[DEBUG]       org.codehaus.plexus:plexus-interactivity-api:jar:1.0-alpha-4:compile\n[DEBUG]       classworlds:classworlds:jar:1.1:compile\n[DEBUG]    org.apache.maven:maven-artifact:jar:2.0.6:compile\n[DEBUG]    org.apache.maven:maven-settings:jar:2.0.6:compile\n[DEBUG]    org.apache.maven:maven-model:jar:2.0.6:compile\n[DEBUG]    org.apache.maven:maven-monitor:jar:2.0.6:compile\n[DEBUG]    org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1:compile\n[DEBUG]       junit:junit:jar:3.8.1:compile\n[DEBUG]    org.codehaus.plexus:plexus-utils:jar:2.0.5:compile\n[DEBUG]    org.apache.maven.shared:maven-filtering:jar:1.1:compile\n[DEBUG]       org.sonatype.plexus:plexus-build-api:jar:0.0.4:compile\n[DEBUG]    org.codehaus.plexus:plexus-interpolation:jar:1.13:compile\n[DEBUG] Created new class realm plugin>org.apache.maven.plugins:maven-resources-plugin:2.6\n[DEBUG] Importing foreign packages into class realm plugin>org.apache.maven.plugins:maven-resources-plugin:2.6\n[DEBUG]   Imported:  < project>com.wordnik:swagger-java-sample-app_2.10:1.3.10\n[DEBUG] Populating class realm plugin>org.apache.maven.plugins:maven-resources-plugin:2.6\n[DEBUG]   Included: org.apache.maven.plugins:maven-resources-plugin:jar:2.6\n[DEBUG]   Included: org.apache.maven.reporting:maven-reporting-api:jar:2.0.6\n[DEBUG]   Included: org.apache.maven.doxia:doxia-sink-api:jar:1.0-alpha-7\n[DEBUG]   Included: commons-cli:commons-cli:jar:1.0\n[DEBUG]   Included: org.codehaus.plexus:plexus-interactivity-api:jar:1.0-alpha-4\n[DEBUG]   Included: junit:junit:jar:3.8.1\n[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:2.0.5\n[DEBUG]   Included: org.apache.maven.shared:maven-filtering:jar:1.1\n[DEBUG]   Included: org.sonatype.plexus:plexus-build-api:jar:0.0.4\n[DEBUG]   Included: org.codehaus.plexus:plexus-interpolation:jar:1.13\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-api:jar:2.0.6\n[DEBUG]   Excluded: org.apache.maven:maven-project:jar:2.0.6\n[DEBUG]   Excluded: org.apache.maven:maven-profile:jar:2.0.6\n[DEBUG]   Excluded: org.apache.maven:maven-artifact-manager:jar:2.0.6\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-registry:jar:2.0.6\n[DEBUG]   Excluded: org.apache.maven:maven-core:jar:2.0.6\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-parameter-documenter:jar:2.0.6\n[DEBUG]   Excluded: org.apache.maven:maven-repository-metadata:jar:2.0.6\n[DEBUG]   Excluded: org.apache.maven:maven-error-diagnostics:jar:2.0.6\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-descriptor:jar:2.0.6\n[DEBUG]   Excluded: classworlds:classworlds:jar:1.1\n[DEBUG]   Excluded: org.apache.maven:maven-artifact:jar:2.0.6\n[DEBUG]   Excluded: org.apache.maven:maven-settings:jar:2.0.6\n[DEBUG]   Excluded: org.apache.maven:maven-model:jar:2.0.6\n[DEBUG]   Excluded: org.apache.maven:maven-monitor:jar:2.0.6\n[DEBUG]   Excluded: org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1\n[DEBUG] Configuring mojo org.apache.maven.plugins:maven-resources-plugin:2.6:resources from plugin realm ClassRealm[plugin>org.apache.maven.plugins:maven-resources-plugin:2.6, parent: sun.misc.Launcher$AppClassLoader@19134f4]\n[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-resources-plugin:2.6:resources' with basic configurator -->\nDEBUG buildFilters = []\nDEBUG encoding = UTF-8\nDEBUG escapeWindowsPaths = true\nDEBUG includeEmptyDirs = false\nDEBUG outputDirectory = C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\classes\nDEBUG overwrite = false\nDEBUG project = MavenProject: com.wordnik:swagger-java-sample-app_2.10:1.3.10 @ C:\\swagger\\swagger\\samples\\java-jaxrs\\pom.xml\nDEBUG resources = [Resource {targetPath: null, filtering: false, FileSet {directory: C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\main\\resources, PatternSet [includes: {}, excludes: {}]}}]\nDEBUG session = org.apache.maven.execution.MavenSession@17ab7ae\nDEBUG supportMultiLineFiltering = false\nDEBUG useBuildFilters = true\nDEBUG useDefaultDelimiters = true\n[DEBUG] -- end configuration --\n[DEBUG] properties used {java.vendor=Oracle Corporation, env.SYSTEMROOT=C:\\WINDOWS, env.USERDOMAIN_ROAMINGPROFILE=DUOSL, sun.java.launcher=SUN_STANDARD, sun.management.compiler=HotSpot Client Compiler, env.PROMPT=$P$G, env.UD_INSTALL_DIR=C:\\Program Files\\UltraDefrag, os.name=Windows 8.1, env.FP_NO_HOST_CHECK=NO, sun.boot.class.path=C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\resources.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\rt.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\sunrsasign.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\jsse.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\jce.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\charsets.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\jfr.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\classes, env.COMPUTERNAME=SAJEETHARAN-LAP, env.ALLUSERSPROFILE=C:\\ProgramData, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_55-b13, jersey-version=1.13, felix-version=2.3.4, env.HOMEPATH=\\Users\\sajeetharan.DUOSL.000, slf4j-version=1.6.3, project.build.sourceEncoding=UTF-8, user.name=sajeetharan, scala-maven-plugin-version=3.1.5, maven.build.version=Apache Maven 3.2.3 (33f8c3e1027c3ddde99d3cdebad2656a31e8fdf4; 2014-08-12T02:28:10+05:30), jetty-version=8.1.11.v20130520, env.NPM=;C:\\Program Files (x86)\\nodejs\\, env.PATH=C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x86;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x64;C:\\Program Files\\Microsoft\\Web Platform Installer\\;D:\\ndk;C:\\ant\\;C:\\Program Files\\Java\\jdk1.7.0_07\\bin;D:\\Softwares\\Ecclipse\\Ecclipse\\sdk\\build-tools\\18.1.0;C:\\Program Files (x86)\\Windows Kits\\8.0\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\Windows Kits\\8.1\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\MySQL\\MySQL Server 5.6\\bin;C:\\Program Files (x86)\\GtkSharp\\2.12\\bin;C:\\Takipi\\lib;C:\\Takipi\\lib32;C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.0\\;C:\\Program Files (x86)\\nodejs\\;JAVA_HOME%\\bin;C:\\apache-maven\\bin;C:\\apache-ant-1.9.4\\bin;C:\\adt-bundle\\sdk\\platform-tools;C:\\adt-bundle\\sdk\\tools;;C:\\Program Files (x86)\\Java\\jdk1.6.0_39\\bin;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\tools;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\platform-tools;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x86;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x64;C:\\Program Files\\Microsoft\\Web Platform Installer\\;D:\\ndk;C:\\ant\\;C:\\Program Files\\Java\\jdk1.7.0_07\\bin;D:\\Softwares\\Ecclipse\\Ecclipse\\sdk\\build-tools\\18.1.0;C:\\Program Files (x86)\\Windows Kits\\8.0\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\Windows Kits\\8.1\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\MySQL\\MySQL Server 5.6\\bin;C:\\Program Files (x86)\\GtkSharp\\2.12\\bin;C:\\Takipi\\lib;C:\\Takipi\\lib32;C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.0\\;C:\\Program Files (x86)\\nodejs\\;JAVA_HOME%\\bin;C:\\apache-maven\\bin;C:\\apache-ant-1.9.4\\bin;C:\\adt-bundle\\sdk\\platform-tools;C:\\adt-bundle\\sdk\\tools;;C:\\Program Files (x86)\\Java\\jdk1.6.0_39\\bin;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\tools;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\platform-tools;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;\\tools;C:\\apache-ant-1.9.4\\bin;C:\\adt-bundle\\sdk\\tools;C:\\adt-bundle\\sdk\\platform-tools;c:\\users\\sajeetharan.DUOSL.000\\AppData\\Roaming\\npm\\, user.language=en, env.NODEJS=C:\\Program Files (x86)\\nodejs, env.WINDIR=C:\\WINDOWS, sun.boot.library.path=C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\bin, classworlds.conf=C:\\apache-maven\\bin\\m2.conf, java.version=1.7.0_55, env.PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 58 Stepping 9, GenuineIntel, user.timezone=Asia/Calcutta, env.TEMP=C:\\Users\\SAJEET~1.000\\AppData\\Local\\Temp, sun.arch.data.model=32, java.endorsed.dirs=C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\endorsed, env.PROCESSOR_ARCHITEW6432=AMD64, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, env.HOMEDRIVE=C:, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, env.VS110COMNTOOLS=C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\Common7\\Tools\\, env.SYSTEMDRIVE=C:, file.separator=\\, java.specification.name=Java Platform API Specification, java.class.version=51.0, org.slf4j.simpleLogger.defaultLogLevel=debug, servlet-api-version=2.5, user.country=US, java.home=C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre, env.ANDROID_HOME=C:\\adt-bundle\\sdk, env.APPDATA=C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Roaming, env.PUBLIC=C:\\Users\\Public, java.vm.info=mixed mode, sharing, env.OS=Windows_NT, os.version=6.3, scala-version=2.10.0, env.=::=::\\, path.separator=;, java.vm.version=24.55-b03, json4s-version=3.2.9, env.TAKIPI_HOME=C:\\Takipi\\, jackson-version=2.4.1, env.ASL.LOG=Destination=file, env.USERPROFILE=C:\\Users\\sajeetharan.DUOSL.000, user.variant=, env.JAVA_HOME=C:\\Program Files (x86)\\Java\\jdk1.7.0_55, env.ADT_HOME=C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk, java.awt.printerjob=sun.awt.windows.WPrinterJob, env.TMP=C:\\Users\\SAJEET~1.000\\AppData\\Local\\Temp, env.PROGRAMFILES=C:\\Program Files (x86), sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, junit-version=4.8.1, user.script=, user.home=C:\\Users\\sajeetharan.DUOSL.000, env.COMMONPROGRAMFILES=C:\\Program Files (x86)\\Common Files, env.=EXITCODE=00000001, env.SESSIONNAME=Console, java.specification.vendor=Oracle Corporation, env.M2_HOME=C:\\apache-maven, jersey2-version=2.1, java.library.path=C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\bin;C:\\WINDOWS\\Sun\\Java\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x86;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x64;C:\\Program Files\\Microsoft\\Web Platform Installer\\;D:\\ndk;C:\\ant\\;C:\\Program Files\\Java\\jdk1.7.0_07\\bin;D:\\Softwares\\Ecclipse\\Ecclipse\\sdk\\build-tools\\18.1.0;C:\\Program Files (x86)\\Windows Kits\\8.0\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\Windows Kits\\8.1\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\MySQL\\MySQL Server 5.6\\bin;C:\\Program Files (x86)\\GtkSharp\\2.12\\bin;C:\\Takipi\\lib;C:\\Takipi\\lib32;C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.0\\;C:\\Program Files (x86)\\nodejs\\;JAVA_HOME%\\bin;C:\\apache-maven\\bin;C:\\apache-ant-1.9.4\\bin;C:\\adt-bundle\\sdk\\platform-tools;C:\\adt-bundle\\sdk\\tools;;C:\\Program Files (x86)\\Java\\jdk1.6.0_39\\bin;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\tools;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\platform-tools;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x86;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x64;C:\\Program Files\\Microsoft\\Web Platform Installer\\;D:\\ndk;C:\\ant\\;C:\\Program Files\\Java\\jdk1.7.0_07\\bin;D:\\Softwares\\Ecclipse\\Ecclipse\\sdk\\build-tools\\18.1.0;C:\\Program Files (x86)\\Windows Kits\\8.0\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\Windows Kits\\8.1\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\MySQL\\MySQL Server 5.6\\bin;C:\\Program Files (x86)\\GtkSharp\\2.12\\bin;C:\\Takipi\\lib;C:\\Takipi\\lib32;C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.0\\;C:\\Program Files (x86)\\nodejs\\;JAVA_HOME%\\bin;C:\\apache-maven\\bin;C:\\apache-ant-1.9.4\\bin;C:\\adt-bundle\\sdk\\platform-tools;C:\\adt-bundle\\sdk\\tools;;C:\\Program Files (x86)\\Java\\jdk1.6.0_39\\bin;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\tools;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\platform-tools;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;\\tools;C:\\apache-ant-1.9.4\\bin;C:\\adt-bundle\\sdk\\tools;C:\\adt-bundle\\sdk\\platform-tools;c:\\users\\sajeetharan.DUOSL.000\\AppData\\Roaming\\npm\\;., env.NUMBER_OF_PROCESSORS=4, java.vendor.url=http://java.oracle.com/, env.PHONEGAPP=C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Roaming\\npm, env.COMMONPROGRAMFILES(X86)=C:\\Program Files (x86)\\Common Files, env.USERDNSDOMAIN=DUOSL.DUOSOFTWARE.COM, env.PSMODULEPATH=C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\, env.CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher, env.MAVEN_CMD_LINE_ARGS=-X package, env.XNAGSSHARED=C:\\Program Files (x86)\\Common Files\\Microsoft Shared\\XNA\\, java.vm.vendor=Oracle Corporation, maven.home=C:\\apache-maven, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher -X package, java.class.path=C:\\apache-maven\\boot\\plexus-classworlds-2.5.1.jar, sonatypeOssDistMgmtSnapshotsUrl=https://oss.sonatype.org/content/repositories/snapshots/, env.PROGRAMW6432=C:\\Program Files, maven.version=3.2.3, env.PROGRAMFILES(X86)=C:\\Program Files (x86), env.MAVEN_JAVA_EXE=\"C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\bin\\java.exe\", java.vm.specification.name=Java Virtual Machine Specification, env.LOGONSERVER=\\PDC2012, java.vm.specification.version=1.7, env.PROCESSOR_ARCHITECTURE=x86, env.CORDOVA=C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Roaming\\npm, env.COMMONPROGRAMW6432=C:\\Program Files\\Common Files, sun.cpu.endian=little, sun.os.patch.level=, logback-version=1.0.1, env.ANDROID_NDK_PATH=C:\\Users\\Sajeetharan.DUOSL\\Documents\\Android\\ndk\\android-ndk-r8d, env.HOME=C:\\Users\\sajeetharan.DUOSL.000, env.ANT_HOME=C:\\apache-ant-1.9.4, scala-test-version=2.1.3, java.io.tmpdir=C:\\Users\\SAJEET~1.000\\AppData\\Local\\Temp\\, env.PROCESSOR_REVISION=3a09, env.VBOX_INSTALL_PATH=C:\\Program Files\\Oracle\\VirtualBox\\, env.VS120COMNTOOLS=C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7\\Tools\\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, maven-plugin-version=1.0.0, env.PROGRAMDATA=C:\\ProgramData, env.COMSPEC=C:\\WINDOWS\\system32\\cmd.exe, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\ext;C:\\WINDOWS\\Sun\\Java\\lib\\ext, user.dir=C:\\swagger\\swagger\\samples\\java-jaxrs, env.LOCALAPPDATA=C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local, line.separator=\n, java.vm.name=Java HotSpot(TM) Client VM, env.CLASSWORLDS_JAR=\"C:\\apache-maven\\boot\\plexus-classworlds-2.5.1.jar\", env.PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, commons-lang-version=2.4, jackson-scala-version=2.4.1, env.ERROR_CODE=0, env.USERNAME=sajeetharan, file.encoding=Cp1252, env.VS100COMNTOOLS=c:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\Common7\\Tools\\, env.USERDOMAIN=DUOSL, java.specification.version=1.7, env.=C:=C:\\swagger\\swagger\\samples\\java-jaxrs, env.PROCESSOR_LEVEL=6}\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[DEBUG] resource with targetPath null\ndirectory C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\main\\resources\nexcludes []\nincludes []\n[DEBUG] ignoreDelta true\n[INFO] Copying 1 resource\n[DEBUG] file logback.xml has a filtered file extension\n[DEBUG] copy C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\main\\resources\\logback.xml to C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\classes\\logback.xml\n[DEBUG] no use filter components\n[INFO] \n[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ swagger-java-sample-app_2.10 ---\n[DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=1, ConflictMarker.markTime=0, ConflictMarker.nodeCount=160, ConflictIdSorter.graphTime=1, ConflictIdSorter.topsortTime=0, ConflictIdSorter.conflictIdCount=43, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=1, ConflictResolver.conflictItemCount=63, DefaultDependencyCollector.collectTime=150, DefaultDependencyCollector.transformTime=3}\n[DEBUG] org.apache.maven.plugins:maven-compiler-plugin:jar:3.0:\n[DEBUG]    org.apache.maven:maven-plugin-api:jar:2.0.9:compile\n[DEBUG]    org.apache.maven:maven-artifact:jar:2.0.9:compile\n[DEBUG]       org.codehaus.plexus:plexus-utils:jar:1.5.1:compile\n[DEBUG]    org.apache.maven:maven-core:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-settings:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-plugin-parameter-documenter:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-profile:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-model:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-repository-metadata:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-error-diagnostics:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-project:jar:2.0.9:compile\n[DEBUG]          org.apache.maven:maven-plugin-registry:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-plugin-descriptor:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-artifact-manager:jar:2.0.9:compile\n[DEBUG]       org.apache.maven:maven-monitor:jar:2.0.9:compile\n[DEBUG]    org.apache.maven:maven-toolchain:jar:1.0:compile\n[DEBUG]    org.apache.maven.shared:maven-shared-utils:jar:0.1:compile\n[DEBUG]       com.google.code.findbugs:jsr305:jar:2.0.1:compile\n[DEBUG]    org.apache.maven.shared:maven-shared-incremental:jar:1.0:compile\n[DEBUG]       org.codehaus.plexus:plexus-component-annotations:jar:1.5.5:compile\n[DEBUG]    org.codehaus.plexus:plexus-compiler-api:jar:2.0:compile\n[DEBUG]    org.codehaus.plexus:plexus-compiler-manager:jar:2.0:compile\n[DEBUG]    org.codehaus.plexus:plexus-compiler-javac:jar:2.0:runtime\n[DEBUG]    org.codehaus.plexus:plexus-container-default:jar:1.5.5:compile\n[DEBUG]       org.codehaus.plexus:plexus-classworlds:jar:2.2.2:compile\n[DEBUG]       org.apache.xbean:xbean-reflect:jar:3.4:compile\n[DEBUG]          log4j:log4j:jar:1.2.12:compile\n[DEBUG]          commons-logging:commons-logging-api:jar:1.1:compile\n[DEBUG]       com.google.collections:google-collections:jar:1.0:compile\n[DEBUG]       junit:junit:jar:3.8.2:compile\n[DEBUG] Created new class realm plugin>org.apache.maven.plugins:maven-compiler-plugin:3.0\n[DEBUG] Importing foreign packages into class realm plugin>org.apache.maven.plugins:maven-compiler-plugin:3.0\n[DEBUG]   Imported:  < project>com.wordnik:swagger-java-sample-app_2.10:1.3.10\n[DEBUG] Populating class realm plugin>org.apache.maven.plugins:maven-compiler-plugin:3.0\n[DEBUG]   Included: org.apache.maven.plugins:maven-compiler-plugin:jar:3.0\n[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:1.5.1\n[DEBUG]   Included: org.apache.maven.shared:maven-shared-utils:jar:0.1\n[DEBUG]   Included: com.google.code.findbugs:jsr305:jar:2.0.1\n[DEBUG]   Included: org.apache.maven.shared:maven-shared-incremental:jar:1.0\n[DEBUG]   Included: org.codehaus.plexus:plexus-component-annotations:jar:1.5.5\n[DEBUG]   Included: org.codehaus.plexus:plexus-compiler-api:jar:2.0\n[DEBUG]   Included: org.codehaus.plexus:plexus-compiler-manager:jar:2.0\n[DEBUG]   Included: org.codehaus.plexus:plexus-compiler-javac:jar:2.0\n[DEBUG]   Included: org.apache.xbean:xbean-reflect:jar:3.4\n[DEBUG]   Included: log4j:log4j:jar:1.2.12\n[DEBUG]   Included: commons-logging:commons-logging-api:jar:1.1\n[DEBUG]   Included: com.google.collections:google-collections:jar:1.0\n[DEBUG]   Included: junit:junit:jar:3.8.2\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-api:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-artifact:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-core:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-settings:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-parameter-documenter:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-profile:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-model:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-repository-metadata:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-error-diagnostics:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-project:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-registry:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-plugin-descriptor:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-artifact-manager:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-monitor:jar:2.0.9\n[DEBUG]   Excluded: org.apache.maven:maven-toolchain:jar:1.0\n[DEBUG]   Excluded: org.codehaus.plexus:plexus-container-default:jar:1.5.5\n[DEBUG]   Excluded: org.codehaus.plexus:plexus-classworlds:jar:2.2.2\n[DEBUG] Configuring mojo org.apache.maven.plugins:maven-compiler-plugin:3.0:compile from plugin realm ClassRealm[plugin>org.apache.maven.plugins:maven-compiler-plugin:3.0, parent: sun.misc.Launcher$AppClassLoader@19134f4]\n[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-compiler-plugin:3.0:compile' with basic configurator -->\nDEBUG basedir = C:\\swagger\\swagger\\samples\\java-jaxrs\nDEBUG buildDirectory = C:\\swagger\\swagger\\samples\\java-jaxrs\\target\nDEBUG classpathElements = [C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\classes, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\wordnik\\swagger-jaxrs_2.10\\1.3.10\\swagger-jaxrs_2.10-1.3.10.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-library\\2.10.0\\scala-library-2.10.0.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\wordnik\\swagger-core_2.10\\1.3.10\\swagger-core_2.10-1.3.10.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\commons-lang\\commons-lang\\2.4\\commons-lang-2.4.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-scala_2.10\\2.4.1\\jackson-module-scala_2.10-2.4.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-core\\2.4.1\\jackson-core-2.4.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-databind\\2.4.1.1\\jackson-databind-2.4.1.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\thoughtworks\\paranamer\\paranamer\\2.6\\paranamer-2.6.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\google\\code\\findbugs\\jsr305\\2.0.1\\jsr305-2.0.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-annotations\\2.4.1\\jackson-annotations-2.4.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-jsonSchema\\2.1.0\\jackson-module-jsonSchema-2.1.0.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\jaxrs\\jackson-jaxrs-json-provider\\2.0.0\\jackson-jaxrs-json-provider-2.0.0.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-jaxb-annotations\\2.0.0\\jackson-module-jaxb-annotations-2.0.0.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\wordnik\\swagger-annotations\\1.3.10\\swagger-annotations-1.3.10.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-ext_2.10\\3.2.9\\json4s-ext_2.10-3.2.9.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\joda-time\\joda-time\\2.3\\joda-time-2.3.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\joda\\joda-convert\\1.6\\joda-convert-1.6.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-native_2.10\\3.2.9\\json4s-native_2.10-3.2.9.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-core_2.10\\3.2.9\\json4s-core_2.10-3.2.9.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-ast_2.10\\3.2.9\\json4s-ast_2.10-3.2.9.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scalap\\2.10.0\\scalap-2.10.0.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-compiler\\2.10.0\\scala-compiler-2.10.0.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-jackson_2.10\\3.2.9\\json4s-jackson_2.10-3.2.9.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\ws\\rs\\jsr311-api\\1.1.1\\jsr311-api-1.1.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\reflections\\reflections\\0.9.9-RC1\\reflections-0.9.9-RC1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\google\\guava\\guava\\11.0.2\\guava-11.0.2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\javassist\\javassist\\3.16.1-GA\\javassist-3.16.1-GA.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\dom4j\\dom4j\\1.6.1\\dom4j-1.6.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\xml-apis\\xml-apis\\1.0.b2\\xml-apis-1.0.b2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\ch\\qos\\logback\\logback-classic\\1.0.1\\logback-classic-1.0.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\slf4j\\slf4j-api\\1.6.3\\slf4j-api-1.6.3.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\ch\\qos\\logback\\logback-core\\1.0.1\\logback-core-1.0.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-reflect\\2.10.3\\scala-reflect-2.10.3.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\servlet\\servlet-api\\2.5\\servlet-api-2.5.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-core\\1.13\\jersey-core-1.13.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-json\\1.13\\jersey-json-1.13.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jettison\\jettison\\1.1\\jettison-1.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\stax\\stax-api\\1.0.1\\stax-api-1.0.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\xml\\bind\\jaxb-impl\\2.2.3-1\\jaxb-impl-2.2.3-1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\xml\\bind\\jaxb-api\\2.2.2\\jaxb-api-2.2.2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\xml\\stream\\stax-api\\1.0-2\\stax-api-1.0-2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\activation\\activation\\1.1\\activation-1.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-core-asl\\1.9.2\\jackson-core-asl-1.9.2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-mapper-asl\\1.9.2\\jackson-mapper-asl-1.9.2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-jaxrs\\1.9.2\\jackson-jaxrs-1.9.2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-xc\\1.9.2\\jackson-xc-1.9.2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-servlet\\1.13\\jersey-servlet-1.13.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-server\\1.13\\jersey-server-1.13.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\asm\\asm\\3.1\\asm-3.1.jar]\nDEBUG compileSourceRoots = [C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\main\\java, C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\main\\scala]\nDEBUG compilerId = javac\nDEBUG debug = true\nDEBUG encoding = UTF-8\nDEBUG failOnError = true\nDEBUG forceJavacCompilerUse = false\nDEBUG fork = false\nDEBUG generatedSourcesDirectory = C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\generated-sources\\annotations\nDEBUG mojoExecution = org.apache.maven.plugins:maven-compiler-plugin:3.0:compile {execution: default-compile}\nDEBUG optimize = false\nDEBUG outputDirectory = C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\classes\nDEBUG projectArtifact = com.wordnik:swagger-java-sample-app_2.10:war:1.3.10\nDEBUG showDeprecation = false\nDEBUG showWarnings = false\nDEBUG skipMultiThreadWarning = false\nDEBUG source = 1.6\nDEBUG staleMillis = 0\nDEBUG target = 1.6\nDEBUG verbose = false\nDEBUG mavenSession = org.apache.maven.execution.MavenSession@17ab7ae\nDEBUG session = org.apache.maven.execution.MavenSession@17ab7ae\n[DEBUG] -- end configuration --\n[DEBUG] Using compiler 'javac'.\n[DEBUG] Source directories: [C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\main\\java]\n[DEBUG] Classpath: [C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\classes\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\wordnik\\swagger-jaxrs_2.10\\1.3.10\\swagger-jaxrs_2.10-1.3.10.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-library\\2.10.0\\scala-library-2.10.0.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\wordnik\\swagger-core_2.10\\1.3.10\\swagger-core_2.10-1.3.10.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\commons-lang\\commons-lang\\2.4\\commons-lang-2.4.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-scala_2.10\\2.4.1\\jackson-module-scala_2.10-2.4.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-core\\2.4.1\\jackson-core-2.4.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-databind\\2.4.1.1\\jackson-databind-2.4.1.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\thoughtworks\\paranamer\\paranamer\\2.6\\paranamer-2.6.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\google\\code\\findbugs\\jsr305\\2.0.1\\jsr305-2.0.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-annotations\\2.4.1\\jackson-annotations-2.4.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-jsonSchema\\2.1.0\\jackson-module-jsonSchema-2.1.0.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\jaxrs\\jackson-jaxrs-json-provider\\2.0.0\\jackson-jaxrs-json-provider-2.0.0.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-jaxb-annotations\\2.0.0\\jackson-module-jaxb-annotations-2.0.0.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\wordnik\\swagger-annotations\\1.3.10\\swagger-annotations-1.3.10.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-ext_2.10\\3.2.9\\json4s-ext_2.10-3.2.9.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\joda-time\\joda-time\\2.3\\joda-time-2.3.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\joda\\joda-convert\\1.6\\joda-convert-1.6.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-native_2.10\\3.2.9\\json4s-native_2.10-3.2.9.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-core_2.10\\3.2.9\\json4s-core_2.10-3.2.9.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-ast_2.10\\3.2.9\\json4s-ast_2.10-3.2.9.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scalap\\2.10.0\\scalap-2.10.0.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-compiler\\2.10.0\\scala-compiler-2.10.0.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-jackson_2.10\\3.2.9\\json4s-jackson_2.10-3.2.9.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\ws\\rs\\jsr311-api\\1.1.1\\jsr311-api-1.1.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\reflections\\reflections\\0.9.9-RC1\\reflections-0.9.9-RC1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\google\\guava\\guava\\11.0.2\\guava-11.0.2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\javassist\\javassist\\3.16.1-GA\\javassist-3.16.1-GA.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\dom4j\\dom4j\\1.6.1\\dom4j-1.6.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\xml-apis\\xml-apis\\1.0.b2\\xml-apis-1.0.b2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\ch\\qos\\logback\\logback-classic\\1.0.1\\logback-classic-1.0.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\slf4j\\slf4j-api\\1.6.3\\slf4j-api-1.6.3.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\ch\\qos\\logback\\logback-core\\1.0.1\\logback-core-1.0.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-reflect\\2.10.3\\scala-reflect-2.10.3.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\servlet\\servlet-api\\2.5\\servlet-api-2.5.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-core\\1.13\\jersey-core-1.13.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-json\\1.13\\jersey-json-1.13.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jettison\\jettison\\1.1\\jettison-1.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\stax\\stax-api\\1.0.1\\stax-api-1.0.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\xml\\bind\\jaxb-impl\\2.2.3-1\\jaxb-impl-2.2.3-1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\xml\\bind\\jaxb-api\\2.2.2\\jaxb-api-2.2.2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\xml\\stream\\stax-api\\1.0-2\\stax-api-1.0-2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\activation\\activation\\1.1\\activation-1.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-core-asl\\1.9.2\\jackson-core-asl-1.9.2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-mapper-asl\\1.9.2\\jackson-mapper-asl-1.9.2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-jaxrs\\1.9.2\\jackson-jaxrs-1.9.2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-xc\\1.9.2\\jackson-xc-1.9.2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-servlet\\1.13\\jersey-servlet-1.13.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-server\\1.13\\jersey-server-1.13.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\asm\\asm\\3.1\\asm-3.1.jar]\n[DEBUG] Output directory: C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\classes\n[DEBUG] CompilerReuseStrategy: reuseCreated\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- scala-maven-plugin:3.1.5:compile (default) @ swagger-java-sample-app_2.10 ---\n[DEBUG] Configuring mojo net.alchim31.maven:scala-maven-plugin:3.1.5:compile from plugin realm ClassRealm[plugin>net.alchim31.maven:scala-maven-plugin:3.1.5, parent: sun.misc.Launcher$AppClassLoader@19134f4]\n[DEBUG] Configuring mojo 'net.alchim31.maven:scala-maven-plugin:3.1.5:compile' with basic configurator -->\nDEBUG analysisCacheFile = C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\analysis\\compile\nDEBUG args = [-target:jvm-1.6, -deprecation]\nDEBUG checkMultipleScalaVersions = true\nDEBUG compileOrder = mixed\nDEBUG displayCmd = false\nDEBUG encoding = UTF-8\nDEBUG failOnMultipleScalaVersions = false\nDEBUG forceUseArgFile = false\nDEBUG fork = true\nDEBUG javacArgs = []\nDEBUG javacGenerateDebugSymbols = true\nDEBUG jvmArgs = [-Xmx384m]\nDEBUG localRepo =       id: local\n      url: file:///C:/Users/sajeetharan.DUOSL.000/.m2/repository/\n   layout: default\nsnapshots: [enabled => true, update => always]\n releases: [enabled => true, update => always]\nDEBUG localRepository =       id: local\n      url: file:///C:/Users/sajeetharan.DUOSL.000/.m2/repository/\n   layout: default\nsnapshots: [enabled => true, update => always]\n releases: [enabled => true, update => always]\nDEBUG notifyCompilation = true\nDEBUG outputDir = C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\classes\nDEBUG pluginArtifacts = [net.alchim31.maven:scala-maven-plugin:maven-plugin:3.1.5:, org.apache.maven.reporting:maven-reporting-api:jar:3.0:compile, org.sonatype.aether:aether-util:jar:1.13.1:compile, org.sonatype.sisu:sisu-inject-bean:jar:2.3.0:compile, org.sonatype.sisu:sisu-guice:jar:no_aop:3.1.0:compile, org.sonatype.sisu:sisu-guava:jar:0.9.9:compile, org.codehaus.plexus:plexus-interpolation:jar:1.14:compile, org.codehaus.plexus:plexus-component-annotations:jar:1.5.5:compile, org.sonatype.plexus:plexus-sec-dispatcher:jar:1.3:compile, org.sonatype.plexus:plexus-cipher:jar:1.4:compile, org.apache.maven.shared:maven-dependency-tree:jar:1.2:compile, org.apache.commons:commons-exec:jar:1.1:compile, org.codehaus.plexus:plexus-utils:jar:3.0:compile, org.codehaus.plexus:plexus-archiver:jar:2.1:compile, junit:junit:jar:3.8.1:compile, org.codehaus.plexus:plexus-io:jar:2.0.2:compile, org.apache.maven:maven-archiver:jar:2.5:compile, org.apache.maven.doxia:doxia-sink-api:jar:1.1.2:compile, org.apache.maven.doxia:doxia-logging-api:jar:1.1.2:compile, org.apache.maven.shared:maven-invoker:jar:2.0.11:compile, com.typesafe.zinc:zinc:jar:0.2.0:compile, org.scala-lang:scala-library:jar:2.9.2:compile, com.typesafe.sbt:compiler-interface:jar:sources:0.12.1:compile, com.typesafe.sbt:incremental-compiler:jar:0.12.1:compile, com.typesafe.sbt:sbt-interface:jar:0.12.1:compile, org.scala-lang:scala-compiler:jar:2.9.2:compile]\nDEBUG project = MavenProject: com.wordnik:swagger-java-sample-app_2.10:1.3.10 @ C:\\swagger\\swagger\\samples\\java-jaxrs\\pom.xml\nDEBUG reactorProjects = [MavenProject: com.wordnik:swagger-java-sample-app_2.10:1.3.10 @ C:\\swagger\\swagger\\samples\\java-jaxrs\\pom.xml]\nDEBUG recompileMode = all\nDEBUG remoteRepos = [      id: sonatype-nexus-snapshots\n      url: https://oss.sonatype.org/content/repositories/snapshots\n   layout: default\nsnapshots: [enabled => true, update => daily]\n releases: [enabled => false, update => daily]\n,       id: central\n      url: https://repo.maven.apache.org/maven2\n   layout: default\nsnapshots: [enabled => false, update => daily]\n releases: [enabled => true, update => daily]\n]\nDEBUG scalaClassName = scala.tools.nsc.Main\nDEBUG sendJavaToScalac = true\nDEBUG session = org.apache.maven.execution.MavenSession@17ab7ae\nDEBUG sourceDir = C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\main\\java..\\scala\nDEBUG useCanonicalPath = true\nDEBUG useZincServer = false\nDEBUG zincPort = 3030\n[DEBUG] -- end configuration --\n[DEBUG] Checking for multiple versions of scala\n[DEBUG] Dependency tree resolution listener events:\n[DEBUG] testArtifact: artifact=com.wordnik:swagger-java-sample-app_2.10:war:1.3.10\n[DEBUG] includeArtifact: artifact=com.wordnik:swagger-java-sample-app_2.10:war:1.3.10\n[DEBUG] startProcessChildren: artifact=com.wordnik:swagger-java-sample-app_2.10:war:1.3.10\n[DEBUG]   testArtifact: artifact=com.wordnik:swagger-jaxrs_2.10:jar:1.3.10:compile\n[DEBUG]   includeArtifact: artifact=com.wordnik:swagger-jaxrs_2.10:jar:1.3.10:compile\n[DEBUG]   startProcessChildren: artifact=com.wordnik:swagger-jaxrs_2.10:jar:1.3.10:compile\n[DEBUG]     manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     includeArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     startProcessChildren: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     endProcessChildren: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactVersion: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile, replacement=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     manageArtifactScope: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile, replacement=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     testArtifact: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     manageArtifactVersion: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile, replacement=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     manageArtifactScope: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile, replacement=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     includeArtifact: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     startProcessChildren: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]       manageArtifactVersion: artifact=commons-lang:commons-lang:jar:2.4:compile, replacement=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       manageArtifactScope: artifact=commons-lang:commons-lang:jar:2.4:compile, replacement=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       testArtifact: artifact=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       manageArtifactVersion: artifact=commons-lang:commons-lang:jar:2.4:compile, replacement=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       manageArtifactScope: artifact=commons-lang:commons-lang:jar:2.4:compile, replacement=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       includeArtifact: artifact=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       startProcessChildren: artifact=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       endProcessChildren: artifact=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       manageArtifactVersion: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       manageArtifactScope: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       testArtifact: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       manageArtifactVersion: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       manageArtifactScope: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       includeArtifact: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       startProcessChildren: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       endProcessChildren: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       testArtifact: artifact=com.fasterxml.jackson.module:jackson-module-scala_2.10:jar:2.4.1:compile\n[DEBUG]       includeArtifact: artifact=com.fasterxml.jackson.module:jackson-module-scala_2.10:jar:2.4.1:compile\n[DEBUG]       startProcessChildren: artifact=com.fasterxml.jackson.module:jackson-module-scala_2.10:jar:2.4.1:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.4:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.scala-lang:scala-reflect:jar:2.10.4:compile\n[DEBUG]         includeArtifact: artifact=org.scala-lang:scala-reflect:jar:2.10.4:compile\n[DEBUG]         startProcessChildren: artifact=org.scala-lang:scala-reflect:jar:2.10.4:compile\n[DEBUG]           manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.4:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         endProcessChildren: artifact=org.scala-lang:scala-reflect:jar:2.10.4:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         includeArtifact: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         startProcessChildren: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         endProcessChildren: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]         includeArtifact: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]         startProcessChildren: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]         endProcessChildren: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]         includeArtifact: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]         startProcessChildren: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]           testArtifact: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.0:compile\n[DEBUG]           omitForNearer: omitted=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.0:compile kept=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]           testArtifact: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]           omitForNearer: omitted=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile kept=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         endProcessChildren: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]         testArtifact: artifact=com.thoughtworks.paranamer:paranamer:jar:2.6:compile\n[DEBUG]         includeArtifact: artifact=com.thoughtworks.paranamer:paranamer:jar:2.6:compile\n[DEBUG]         startProcessChildren: artifact=com.thoughtworks.paranamer:paranamer:jar:2.6:compile\n[DEBUG]         endProcessChildren: artifact=com.thoughtworks.paranamer:paranamer:jar:2.6:compile\n[DEBUG]         testArtifact: artifact=com.google.code.findbugs:jsr305:jar:2.0.1:compile\n[DEBUG]         includeArtifact: artifact=com.google.code.findbugs:jsr305:jar:2.0.1:compile\n[DEBUG]         startProcessChildren: artifact=com.google.code.findbugs:jsr305:jar:2.0.1:compile\n[DEBUG]         endProcessChildren: artifact=com.google.code.findbugs:jsr305:jar:2.0.1:compile\n[DEBUG]         testArtifact: artifact=com.google.guava:guava:jar:15.0:compile\n[DEBUG]         includeArtifact: artifact=com.google.guava:guava:jar:15.0:compile\n[DEBUG]         startProcessChildren: artifact=com.google.guava:guava:jar:15.0:compile\n[DEBUG]         endProcessChildren: artifact=com.google.guava:guava:jar:15.0:compile\n[DEBUG]       endProcessChildren: artifact=com.fasterxml.jackson.module:jackson-module-scala_2.10:jar:2.4.1:compile\n[DEBUG]       testArtifact: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]       omitForNearer: omitted=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile kept=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]       includeArtifact: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]       startProcessChildren: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]       endProcessChildren: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]       testArtifact: artifact=com.fasterxml.jackson.module:jackson-module-jsonSchema:jar:2.1.0:compile\n[DEBUG]       includeArtifact: artifact=com.fasterxml.jackson.module:jackson-module-jsonSchema:jar:2.1.0:compile\n[DEBUG]       startProcessChildren: artifact=com.fasterxml.jackson.module:jackson-module-jsonSchema:jar:2.1.0:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.1.0:compile\n[DEBUG]         omitForNearer: omitted=com.fasterxml.jackson.core:jackson-databind:jar:2.1.0:compile kept=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.1.0:compile\n[DEBUG]         omitForNearer: omitted=com.fasterxml.jackson.core:jackson-core:jar:2.1.0:compile kept=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.1.0:compile\n[DEBUG]         omitForNearer: omitted=com.fasterxml.jackson.core:jackson-annotations:jar:2.1.0:compile kept=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]       endProcessChildren: artifact=com.fasterxml.jackson.module:jackson-module-jsonSchema:jar:2.1.0:compile\n[DEBUG]       testArtifact: artifact=com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:jar:2.0.0:compile\n[DEBUG]       includeArtifact: artifact=com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:jar:2.0.0:compile\n[DEBUG]       startProcessChildren: artifact=com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:jar:2.0.0:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.0.0:compile\n[DEBUG]         omitForNearer: omitted=com.fasterxml.jackson.core:jackson-core:jar:2.0.0:compile kept=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.0.0:compile\n[DEBUG]         omitForNearer: omitted=com.fasterxml.jackson.core:jackson-databind:jar:2.0.0:compile kept=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.module:jackson-module-jaxb-annotations:jar:2.0.0:compile\n[DEBUG]         includeArtifact: artifact=com.fasterxml.jackson.module:jackson-module-jaxb-annotations:jar:2.0.0:compile\n[DEBUG]         startProcessChildren: artifact=com.fasterxml.jackson.module:jackson-module-jaxb-annotations:jar:2.0.0:compile\n[DEBUG]           testArtifact: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.0.0:compile\n[DEBUG]           omitForNearer: omitted=com.fasterxml.jackson.core:jackson-core:jar:2.0.0:compile kept=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]           testArtifact: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.0.0:compile\n[DEBUG]           omitForNearer: omitted=com.fasterxml.jackson.core:jackson-databind:jar:2.0.0:compile kept=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]         endProcessChildren: artifact=com.fasterxml.jackson.module:jackson-module-jaxb-annotations:jar:2.0.0:compile\n[DEBUG]         testArtifact: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]         includeArtifact: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]         startProcessChildren: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]         endProcessChildren: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]       endProcessChildren: artifact=com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:jar:2.0.0:compile\n[DEBUG]       testArtifact: artifact=com.wordnik:swagger-annotations:jar:1.3.10:compile\n[DEBUG]       includeArtifact: artifact=com.wordnik:swagger-annotations:jar:1.3.10:compile\n[DEBUG]       startProcessChildren: artifact=com.wordnik:swagger-annotations:jar:1.3.10:compile\n[DEBUG]       endProcessChildren: artifact=com.wordnik:swagger-annotations:jar:1.3.10:compile\n[DEBUG]       testArtifact: artifact=org.json4s:json4s-ext_2.10:jar:3.2.9:compile\n[DEBUG]       includeArtifact: artifact=org.json4s:json4s-ext_2.10:jar:3.2.9:compile\n[DEBUG]       startProcessChildren: artifact=org.json4s:json4s-ext_2.10:jar:3.2.9:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=joda-time:joda-time:jar:2.3:compile\n[DEBUG]         includeArtifact: artifact=joda-time:joda-time:jar:2.3:compile\n[DEBUG]         startProcessChildren: artifact=joda-time:joda-time:jar:2.3:compile\n[DEBUG]         endProcessChildren: artifact=joda-time:joda-time:jar:2.3:compile\n[DEBUG]         testArtifact: artifact=org.joda:joda-convert:jar:1.6:compile\n[DEBUG]         includeArtifact: artifact=org.joda:joda-convert:jar:1.6:compile\n[DEBUG]         startProcessChildren: artifact=org.joda:joda-convert:jar:1.6:compile\n[DEBUG]         endProcessChildren: artifact=org.joda:joda-convert:jar:1.6:compile\n[DEBUG]       endProcessChildren: artifact=org.json4s:json4s-ext_2.10:jar:3.2.9:compile\n[DEBUG]       testArtifact: artifact=org.json4s:json4s-native_2.10:jar:3.2.9:compile\n[DEBUG]       includeArtifact: artifact=org.json4s:json4s-native_2.10:jar:3.2.9:compile\n[DEBUG]       startProcessChildren: artifact=org.json4s:json4s-native_2.10:jar:3.2.9:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.json4s:json4s-core_2.10:jar:3.2.9:compile\n[DEBUG]         includeArtifact: artifact=org.json4s:json4s-core_2.10:jar:3.2.9:compile\n[DEBUG]         startProcessChildren: artifact=org.json4s:json4s-core_2.10:jar:3.2.9:compile\n[DEBUG]           manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           testArtifact: artifact=org.json4s:json4s-ast_2.10:jar:3.2.9:compile\n[DEBUG]           includeArtifact: artifact=org.json4s:json4s-ast_2.10:jar:3.2.9:compile\n[DEBUG]           startProcessChildren: artifact=org.json4s:json4s-ast_2.10:jar:3.2.9:compile\n[DEBUG]             manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]             manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]             testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]             manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]             manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]             omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           endProcessChildren: artifact=org.json4s:json4s-ast_2.10:jar:3.2.9:compile\n[DEBUG]           testArtifact: artifact=com.thoughtworks.paranamer:paranamer:jar:2.6:compile\n[DEBUG]           omitForNearer: omitted=com.thoughtworks.paranamer:paranamer:jar:2.6:compile kept=com.thoughtworks.paranamer:paranamer:jar:2.6:compile\n[DEBUG]           testArtifact: artifact=org.scala-lang:scalap:jar:2.10.0:compile\n[DEBUG]           includeArtifact: artifact=org.scala-lang:scalap:jar:2.10.0:compile\n[DEBUG]           startProcessChildren: artifact=org.scala-lang:scalap:jar:2.10.0:compile\n[DEBUG]             testArtifact: artifact=org.scala-lang:scala-compiler:jar:2.10.0:compile\n[DEBUG]             includeArtifact: artifact=org.scala-lang:scala-compiler:jar:2.10.0:compile\n[DEBUG]             startProcessChildren: artifact=org.scala-lang:scala-compiler:jar:2.10.0:compile\n[DEBUG]               manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]               manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]               testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]               manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]               manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]               omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]               testArtifact: artifact=org.scala-lang:scala-reflect:jar:2.10.0:compile\n[DEBUG]               omitForNearer: omitted=org.scala-lang:scala-reflect:jar:2.10.0:compile kept=org.scala-lang:scala-reflect:jar:2.10.4:compile\n[DEBUG]             endProcessChildren: artifact=org.scala-lang:scala-compiler:jar:2.10.0:compile\n[DEBUG]           endProcessChildren: artifact=org.scala-lang:scalap:jar:2.10.0:compile\n[DEBUG]         endProcessChildren: artifact=org.json4s:json4s-core_2.10:jar:3.2.9:compile\n[DEBUG]       endProcessChildren: artifact=org.json4s:json4s-native_2.10:jar:3.2.9:compile\n[DEBUG]       testArtifact: artifact=org.json4s:json4s-jackson_2.10:jar:3.2.9:compile\n[DEBUG]       includeArtifact: artifact=org.json4s:json4s-jackson_2.10:jar:3.2.9:compile\n[DEBUG]       startProcessChildren: artifact=org.json4s:json4s-jackson_2.10:jar:3.2.9:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.json4s:json4s-core_2.10:jar:3.2.9:compile\n[DEBUG]         omitForNearer: omitted=org.json4s:json4s-core_2.10:jar:3.2.9:compile kept=org.json4s:json4s-core_2.10:jar:3.2.9:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.3.1:compile\n[DEBUG]         omitForNearer: omitted=com.fasterxml.jackson.core:jackson-databind:jar:2.3.1:compile kept=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]       endProcessChildren: artifact=org.json4s:json4s-jackson_2.10:jar:3.2.9:compile\n[DEBUG]     endProcessChildren: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     testArtifact: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]     omitForNearer: omitted=javax.ws.rs:jsr311-api:jar:1.1.1:compile kept=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]     includeArtifact: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]     startProcessChildren: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]     endProcessChildren: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]     testArtifact: artifact=org.reflections:reflections:jar:0.9.9-RC1:compile\n[DEBUG]     includeArtifact: artifact=org.reflections:reflections:jar:0.9.9-RC1:compile\n[DEBUG]     startProcessChildren: artifact=org.reflections:reflections:jar:0.9.9-RC1:compile\n[DEBUG]       testArtifact: artifact=com.google.guava:guava:jar:11.0.2:compile\n[DEBUG]       omitForNearer: omitted=com.google.guava:guava:jar:15.0:compile kept=com.google.guava:guava:jar:11.0.2:compile\n[DEBUG]       includeArtifact: artifact=com.google.guava:guava:jar:11.0.2:compile\n[DEBUG]       startProcessChildren: artifact=com.google.guava:guava:jar:11.0.2:compile\n[DEBUG]         testArtifact: artifact=com.google.code.findbugs:jsr305:jar:1.3.9:compile\n[DEBUG]         omitForNearer: omitted=com.google.code.findbugs:jsr305:jar:1.3.9:compile kept=com.google.code.findbugs:jsr305:jar:2.0.1:compile\n[DEBUG]       endProcessChildren: artifact=com.google.guava:guava:jar:11.0.2:compile\n[DEBUG]       testArtifact: artifact=org.javassist:javassist:jar:3.16.1-GA:compile\n[DEBUG]       includeArtifact: artifact=org.javassist:javassist:jar:3.16.1-GA:compile\n[DEBUG]       startProcessChildren: artifact=org.javassist:javassist:jar:3.16.1-GA:compile\n[DEBUG]       endProcessChildren: artifact=org.javassist:javassist:jar:3.16.1-GA:compile\n[DEBUG]       testArtifact: artifact=dom4j:dom4j:jar:1.6.1:compile\n[DEBUG]       includeArtifact: artifact=dom4j:dom4j:jar:1.6.1:compile\n[DEBUG]       startProcessChildren: artifact=dom4j:dom4j:jar:1.6.1:compile\n[DEBUG]         testArtifact: artifact=xml-apis:xml-apis:jar:1.0.b2:compile\n[DEBUG]         includeArtifact: artifact=xml-apis:xml-apis:jar:1.0.b2:compile\n[DEBUG]         startProcessChildren: artifact=xml-apis:xml-apis:jar:1.0.b2:compile\n[DEBUG]         endProcessChildren: artifact=xml-apis:xml-apis:jar:1.0.b2:compile\n[DEBUG]       endProcessChildren: artifact=dom4j:dom4j:jar:1.6.1:compile\n[DEBUG]     endProcessChildren: artifact=org.reflections:reflections:jar:0.9.9-RC1:compile\n[DEBUG]   endProcessChildren: artifact=com.wordnik:swagger-jaxrs_2.10:jar:1.3.10:compile\n[DEBUG]   testArtifact: artifact=ch.qos.logback:logback-classic:jar:1.0.1:compile\n[DEBUG]   includeArtifact: artifact=ch.qos.logback:logback-classic:jar:1.0.1:compile\n[DEBUG]   startProcessChildren: artifact=ch.qos.logback:logback-classic:jar:1.0.1:compile\n[DEBUG]     testArtifact: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]     includeArtifact: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]     startProcessChildren: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]     endProcessChildren: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]     manageArtifactVersion: artifact=org.slf4j:slf4j-api:jar:1.6.4:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     manageArtifactScope: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     testArtifact: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     manageArtifactVersion: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     manageArtifactScope: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     omitForNearer: omitted=org.slf4j:slf4j-api:jar:1.6.3:compile kept=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     includeArtifact: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     startProcessChildren: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     endProcessChildren: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]   endProcessChildren: artifact=ch.qos.logback:logback-classic:jar:1.0.1:compile\n[DEBUG]   testArtifact: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]   omitForNearer: omitted=ch.qos.logback:logback-core:jar:1.0.1:compile kept=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]   includeArtifact: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]   startProcessChildren: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]   endProcessChildren: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]   testArtifact: artifact=org.scalatest:scalatest_2.10:jar:2.1.3:test\n[DEBUG]   includeArtifact: artifact=org.scalatest:scalatest_2.10:jar:2.1.3:test\n[DEBUG]   startProcessChildren: artifact=org.scalatest:scalatest_2.10:jar:2.1.3:test\n[DEBUG]     manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.3:test, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:test, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     testArtifact: artifact=org.scala-lang:scala-reflect:jar:2.10.3:test\n[DEBUG]     updateScope: artifact=org.scala-lang:scala-reflect:jar:2.10.3:test, scope=compile\n[DEBUG]     omitForNearer: omitted=org.scala-lang:scala-reflect:jar:2.10.3:compile kept=org.scala-lang:scala-reflect:jar:2.10.3:compile\n[DEBUG]   endProcessChildren: artifact=org.scalatest:scalatest_2.10:jar:2.1.3:test\n[DEBUG]   testArtifact: artifact=junit:junit:jar:4.8.1:test\n[DEBUG]   includeArtifact: artifact=junit:junit:jar:4.8.1:test\n[DEBUG]   startProcessChildren: artifact=junit:junit:jar:4.8.1:test\n[DEBUG]   endProcessChildren: artifact=junit:junit:jar:4.8.1:test\n[DEBUG]   testArtifact: artifact=javax.servlet:servlet-api:jar:2.5:provided\n[DEBUG]   includeArtifact: artifact=javax.servlet:servlet-api:jar:2.5:provided\n[DEBUG]   startProcessChildren: artifact=javax.servlet:servlet-api:jar:2.5:provided\n[DEBUG]   endProcessChildren: artifact=javax.servlet:servlet-api:jar:2.5:provided\n[DEBUG]   testArtifact: artifact=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]   includeArtifact: artifact=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]   startProcessChildren: artifact=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]   endProcessChildren: artifact=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]   testArtifact: artifact=com.sun.jersey:jersey-json:jar:1.13:compile\n[DEBUG]   includeArtifact: artifact=com.sun.jersey:jersey-json:jar:1.13:compile\n[DEBUG]   startProcessChildren: artifact=com.sun.jersey:jersey-json:jar:1.13:compile\n[DEBUG]     testArtifact: artifact=org.codehaus.jettison:jettison:jar:1.1:compile\n[DEBUG]     includeArtifact: artifact=org.codehaus.jettison:jettison:jar:1.1:compile\n[DEBUG]     startProcessChildren: artifact=org.codehaus.jettison:jettison:jar:1.1:compile\n[DEBUG]       testArtifact: artifact=stax:stax-api:jar:1.0.1:compile\n[DEBUG]       includeArtifact: artifact=stax:stax-api:jar:1.0.1:compile\n[DEBUG]       startProcessChildren: artifact=stax:stax-api:jar:1.0.1:compile\n[DEBUG]       endProcessChildren: artifact=stax:stax-api:jar:1.0.1:compile\n[DEBUG]     endProcessChildren: artifact=org.codehaus.jettison:jettison:jar:1.1:compile\n[DEBUG]     testArtifact: artifact=com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:compile\n[DEBUG]     includeArtifact: artifact=com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:compile\n[DEBUG]     startProcessChildren: artifact=com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:compile\n[DEBUG]       testArtifact: artifact=javax.xml.bind:jaxb-api:jar:2.2.2:compile\n[DEBUG]       includeArtifact: artifact=javax.xml.bind:jaxb-api:jar:2.2.2:compile\n[DEBUG]       startProcessChildren: artifact=javax.xml.bind:jaxb-api:jar:2.2.2:compile\n[DEBUG]         testArtifact: artifact=javax.xml.stream:stax-api:jar:1.0-2:compile\n[DEBUG]         includeArtifact: artifact=javax.xml.stream:stax-api:jar:1.0-2:compile\n[DEBUG]         startProcessChildren: artifact=javax.xml.stream:stax-api:jar:1.0-2:compile\n[DEBUG]         endProcessChildren: artifact=javax.xml.stream:stax-api:jar:1.0-2:compile\n[DEBUG]         testArtifact: artifact=javax.activation:activation:jar:1.1:compile\n[DEBUG]         includeArtifact: artifact=javax.activation:activation:jar:1.1:compile\n[DEBUG]         startProcessChildren: artifact=javax.activation:activation:jar:1.1:compile\n[DEBUG]         endProcessChildren: artifact=javax.activation:activation:jar:1.1:compile\n[DEBUG]       endProcessChildren: artifact=javax.xml.bind:jaxb-api:jar:2.2.2:compile\n[DEBUG]     endProcessChildren: artifact=com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:compile\n[DEBUG]     testArtifact: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]     includeArtifact: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]     startProcessChildren: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]     endProcessChildren: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]     testArtifact: artifact=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]     includeArtifact: artifact=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]     startProcessChildren: artifact=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]       testArtifact: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]       omitForNearer: omitted=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile kept=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]     endProcessChildren: artifact=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]     testArtifact: artifact=org.codehaus.jackson:jackson-jaxrs:jar:1.9.2:compile\n[DEBUG]     includeArtifact: artifact=org.codehaus.jackson:jackson-jaxrs:jar:1.9.2:compile\n[DEBUG]     startProcessChildren: artifact=org.codehaus.jackson:jackson-jaxrs:jar:1.9.2:compile\n[DEBUG]       testArtifact: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]       omitForNearer: omitted=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile kept=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]       testArtifact: artifact=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]       omitForNearer: omitted=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile kept=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]     endProcessChildren: artifact=org.codehaus.jackson:jackson-jaxrs:jar:1.9.2:compile\n[DEBUG]     testArtifact: artifact=org.codehaus.jackson:jackson-xc:jar:1.9.2:compile\n[DEBUG]     includeArtifact: artifact=org.codehaus.jackson:jackson-xc:jar:1.9.2:compile\n[DEBUG]     startProcessChildren: artifact=org.codehaus.jackson:jackson-xc:jar:1.9.2:compile\n[DEBUG]       testArtifact: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]       omitForNearer: omitted=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile kept=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]       testArtifact: artifact=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]       omitForNearer: omitted=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile kept=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]     endProcessChildren: artifact=org.codehaus.jackson:jackson-xc:jar:1.9.2:compile\n[DEBUG]     manageArtifactVersion: artifact=com.sun.jersey:jersey-core:jar:1.13:compile, replacement=com.sun.jersey:jersey-core:jar:1.13\n[DEBUG]     testArtifact: artifact=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]     manageArtifactVersion: artifact=com.sun.jersey:jersey-core:jar:1.13:compile, replacement=com.sun.jersey:jersey-core:jar:1.13\n[DEBUG]     omitForNearer: omitted=com.sun.jersey:jersey-core:jar:1.13:compile kept=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]   endProcessChildren: artifact=com.sun.jersey:jersey-json:jar:1.13:compile\n[DEBUG]   testArtifact: artifact=com.sun.jersey:jersey-servlet:jar:1.13:compile\n[DEBUG]   includeArtifact: artifact=com.sun.jersey:jersey-servlet:jar:1.13:compile\n[DEBUG]   startProcessChildren: artifact=com.sun.jersey:jersey-servlet:jar:1.13:compile\n[DEBUG]     testArtifact: artifact=com.sun.jersey:jersey-server:jar:1.13:compile\n[DEBUG]     includeArtifact: artifact=com.sun.jersey:jersey-server:jar:1.13:compile\n[DEBUG]     startProcessChildren: artifact=com.sun.jersey:jersey-server:jar:1.13:compile\n[DEBUG]       testArtifact: artifact=asm:asm:jar:3.1:compile\n[DEBUG]       includeArtifact: artifact=asm:asm:jar:3.1:compile\n[DEBUG]       startProcessChildren: artifact=asm:asm:jar:3.1:compile\n[DEBUG]       endProcessChildren: artifact=asm:asm:jar:3.1:compile\n[DEBUG]       manageArtifactVersion: artifact=com.sun.jersey:jersey-core:jar:1.13:compile, replacement=com.sun.jersey:jersey-core:jar:1.13\n[DEBUG]       testArtifact: artifact=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]       manageArtifactVersion: artifact=com.sun.jersey:jersey-core:jar:1.13:compile, replacement=com.sun.jersey:jersey-core:jar:1.13\n[DEBUG]       omitForNearer: omitted=com.sun.jersey:jersey-core:jar:1.13:compile kept=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]     endProcessChildren: artifact=com.sun.jersey:jersey-server:jar:1.13:compile\n[DEBUG]   endProcessChildren: artifact=com.sun.jersey:jersey-servlet:jar:1.13:compile\n[DEBUG] endProcessChildren: artifact=com.wordnik:swagger-java-sample-app_2.10:war:1.3.10\n[DEBUG] checking [com.wordnik:swagger-java-sample-app_2.10:war:1.3.10] for scala version\n[DEBUG] checking [com.wordnik:swagger-jaxrs_2.10:jar:1.3.10:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [com.wordnik:swagger-core_2.10:jar:1.3.10:compile] for scala version\n[DEBUG] checking [com.fasterxml.jackson.module:jackson-module-scala_2.10:jar:2.4.1:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-reflect:jar:2.10.3:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.json4s:json4s-ext_2.10:jar:3.2.9:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.json4s:json4s-native_2.10:jar:3.2.9:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.json4s:json4s-core_2.10:jar:3.2.9:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.json4s:json4s-ast_2.10:jar:3.2.9:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.scala-lang:scalap:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-compiler:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.json4s:json4s-jackson_2.10:jar:3.2.9:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.scalatest:scalatest_2.10:jar:2.1.3:test] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\main\\java\n[DEBUG] includes = [/*.scala,/*.java,]\n[DEBUG] excludes = []\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ swagger-java-sample-app_2.10 ---\n[DEBUG] Configuring mojo org.apache.maven.plugins:maven-resources-plugin:2.6:testResources from plugin realm ClassRealm[plugin>org.apache.maven.plugins:maven-resources-plugin:2.6, parent: sun.misc.Launcher$AppClassLoader@19134f4]\n[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-resources-plugin:2.6:testResources' with basic configurator -->\nDEBUG buildFilters = []\nDEBUG encoding = UTF-8\nDEBUG escapeWindowsPaths = true\nDEBUG includeEmptyDirs = false\nDEBUG outputDirectory = C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\test-classes\nDEBUG overwrite = false\nDEBUG project = MavenProject: com.wordnik:swagger-java-sample-app_2.10:1.3.10 @ C:\\swagger\\swagger\\samples\\java-jaxrs\\pom.xml\nDEBUG resources = [Resource {targetPath: null, filtering: false, FileSet {directory: C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\resources, PatternSet [includes: {}, excludes: {}]}}]\nDEBUG session = org.apache.maven.execution.MavenSession@17ab7ae\nDEBUG supportMultiLineFiltering = false\nDEBUG useBuildFilters = true\nDEBUG useDefaultDelimiters = true\n[DEBUG] -- end configuration --\n[DEBUG] properties used {java.vendor=Oracle Corporation, env.SYSTEMROOT=C:\\WINDOWS, env.USERDOMAIN_ROAMINGPROFILE=DUOSL, sun.java.launcher=SUN_STANDARD, sun.management.compiler=HotSpot Client Compiler, env.PROMPT=$P$G, env.UD_INSTALL_DIR=C:\\Program Files\\UltraDefrag, os.name=Windows 8.1, env.FP_NO_HOST_CHECK=NO, sun.boot.class.path=C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\resources.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\rt.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\sunrsasign.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\jsse.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\jce.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\charsets.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\jfr.jar;C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\classes, env.COMPUTERNAME=SAJEETHARAN-LAP, env.ALLUSERSPROFILE=C:\\ProgramData, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_55-b13, jersey-version=1.13, felix-version=2.3.4, env.HOMEPATH=\\Users\\sajeetharan.DUOSL.000, slf4j-version=1.6.3, project.build.sourceEncoding=UTF-8, user.name=sajeetharan, scala-maven-plugin-version=3.1.5, maven.build.version=Apache Maven 3.2.3 (33f8c3e1027c3ddde99d3cdebad2656a31e8fdf4; 2014-08-12T02:28:10+05:30), jetty-version=8.1.11.v20130520, env.NPM=;C:\\Program Files (x86)\\nodejs\\, env.PATH=C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x86;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x64;C:\\Program Files\\Microsoft\\Web Platform Installer\\;D:\\ndk;C:\\ant\\;C:\\Program Files\\Java\\jdk1.7.0_07\\bin;D:\\Softwares\\Ecclipse\\Ecclipse\\sdk\\build-tools\\18.1.0;C:\\Program Files (x86)\\Windows Kits\\8.0\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\Windows Kits\\8.1\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\MySQL\\MySQL Server 5.6\\bin;C:\\Program Files (x86)\\GtkSharp\\2.12\\bin;C:\\Takipi\\lib;C:\\Takipi\\lib32;C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.0\\;C:\\Program Files (x86)\\nodejs\\;JAVA_HOME%\\bin;C:\\apache-maven\\bin;C:\\apache-ant-1.9.4\\bin;C:\\adt-bundle\\sdk\\platform-tools;C:\\adt-bundle\\sdk\\tools;;C:\\Program Files (x86)\\Java\\jdk1.6.0_39\\bin;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\tools;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\platform-tools;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x86;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x64;C:\\Program Files\\Microsoft\\Web Platform Installer\\;D:\\ndk;C:\\ant\\;C:\\Program Files\\Java\\jdk1.7.0_07\\bin;D:\\Softwares\\Ecclipse\\Ecclipse\\sdk\\build-tools\\18.1.0;C:\\Program Files (x86)\\Windows Kits\\8.0\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\Windows Kits\\8.1\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\MySQL\\MySQL Server 5.6\\bin;C:\\Program Files (x86)\\GtkSharp\\2.12\\bin;C:\\Takipi\\lib;C:\\Takipi\\lib32;C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.0\\;C:\\Program Files (x86)\\nodejs\\;JAVA_HOME%\\bin;C:\\apache-maven\\bin;C:\\apache-ant-1.9.4\\bin;C:\\adt-bundle\\sdk\\platform-tools;C:\\adt-bundle\\sdk\\tools;;C:\\Program Files (x86)\\Java\\jdk1.6.0_39\\bin;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\tools;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\platform-tools;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;\\tools;C:\\apache-ant-1.9.4\\bin;C:\\adt-bundle\\sdk\\tools;C:\\adt-bundle\\sdk\\platform-tools;c:\\users\\sajeetharan.DUOSL.000\\AppData\\Roaming\\npm\\, user.language=en, env.NODEJS=C:\\Program Files (x86)\\nodejs, env.WINDIR=C:\\WINDOWS, sun.boot.library.path=C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\bin, classworlds.conf=C:\\apache-maven\\bin\\m2.conf, java.version=1.7.0_55, env.PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 58 Stepping 9, GenuineIntel, user.timezone=Asia/Calcutta, env.TEMP=C:\\Users\\SAJEET~1.000\\AppData\\Local\\Temp, sun.arch.data.model=32, java.endorsed.dirs=C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\endorsed, env.PROCESSOR_ARCHITEW6432=AMD64, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, env.HOMEDRIVE=C:, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, env.VS110COMNTOOLS=C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\Common7\\Tools\\, env.SYSTEMDRIVE=C:, file.separator=\\, java.specification.name=Java Platform API Specification, java.class.version=51.0, org.slf4j.simpleLogger.defaultLogLevel=debug, servlet-api-version=2.5, user.country=US, java.home=C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre, env.ANDROID_HOME=C:\\adt-bundle\\sdk, env.APPDATA=C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Roaming, env.PUBLIC=C:\\Users\\Public, java.vm.info=mixed mode, sharing, env.OS=Windows_NT, os.version=6.3, scala-version=2.10.0, env.=::=::\\, path.separator=;, java.vm.version=24.55-b03, json4s-version=3.2.9, env.TAKIPI_HOME=C:\\Takipi\\, jackson-version=2.4.1, env.ASL.LOG=Destination=file, env.USERPROFILE=C:\\Users\\sajeetharan.DUOSL.000, user.variant=, env.JAVA_HOME=C:\\Program Files (x86)\\Java\\jdk1.7.0_55, env.ADT_HOME=C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk, java.awt.printerjob=sun.awt.windows.WPrinterJob, env.TMP=C:\\Users\\SAJEET~1.000\\AppData\\Local\\Temp, env.PROGRAMFILES=C:\\Program Files (x86), sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, junit-version=4.8.1, user.script=, user.home=C:\\Users\\sajeetharan.DUOSL.000, env.COMMONPROGRAMFILES=C:\\Program Files (x86)\\Common Files, env.=EXITCODE=00000001, env.SESSIONNAME=Console, java.specification.vendor=Oracle Corporation, env.M2_HOME=C:\\apache-maven, jersey2-version=2.1, java.library.path=C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\bin;C:\\WINDOWS\\Sun\\Java\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x86;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x64;C:\\Program Files\\Microsoft\\Web Platform Installer\\;D:\\ndk;C:\\ant\\;C:\\Program Files\\Java\\jdk1.7.0_07\\bin;D:\\Softwares\\Ecclipse\\Ecclipse\\sdk\\build-tools\\18.1.0;C:\\Program Files (x86)\\Windows Kits\\8.0\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\Windows Kits\\8.1\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\MySQL\\MySQL Server 5.6\\bin;C:\\Program Files (x86)\\GtkSharp\\2.12\\bin;C:\\Takipi\\lib;C:\\Takipi\\lib32;C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.0\\;C:\\Program Files (x86)\\nodejs\\;JAVA_HOME%\\bin;C:\\apache-maven\\bin;C:\\apache-ant-1.9.4\\bin;C:\\adt-bundle\\sdk\\platform-tools;C:\\adt-bundle\\sdk\\tools;;C:\\Program Files (x86)\\Java\\jdk1.6.0_39\\bin;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\tools;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\platform-tools;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x86;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x64;C:\\Program Files\\Microsoft\\Web Platform Installer\\;D:\\ndk;C:\\ant\\;C:\\Program Files\\Java\\jdk1.7.0_07\\bin;D:\\Softwares\\Ecclipse\\Ecclipse\\sdk\\build-tools\\18.1.0;C:\\Program Files (x86)\\Windows Kits\\8.0\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\Windows Kits\\8.1\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\MySQL\\MySQL Server 5.6\\bin;C:\\Program Files (x86)\\GtkSharp\\2.12\\bin;C:\\Takipi\\lib;C:\\Takipi\\lib32;C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.0\\;C:\\Program Files (x86)\\nodejs\\;JAVA_HOME%\\bin;C:\\apache-maven\\bin;C:\\apache-ant-1.9.4\\bin;C:\\adt-bundle\\sdk\\platform-tools;C:\\adt-bundle\\sdk\\tools;;C:\\Program Files (x86)\\Java\\jdk1.6.0_39\\bin;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\tools;C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Android\\android-sdk\\platform-tools;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;\\tools;C:\\apache-ant-1.9.4\\bin;C:\\adt-bundle\\sdk\\tools;C:\\adt-bundle\\sdk\\platform-tools;c:\\users\\sajeetharan.DUOSL.000\\AppData\\Roaming\\npm\\;., env.NUMBER_OF_PROCESSORS=4, java.vendor.url=http://java.oracle.com/, env.PHONEGAPP=C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Roaming\\npm, env.COMMONPROGRAMFILES(X86)=C:\\Program Files (x86)\\Common Files, env.USERDNSDOMAIN=DUOSL.DUOSOFTWARE.COM, env.PSMODULEPATH=C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\, env.CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher, env.MAVEN_CMD_LINE_ARGS=-X package, env.XNAGSSHARED=C:\\Program Files (x86)\\Common Files\\Microsoft Shared\\XNA\\, java.vm.vendor=Oracle Corporation, maven.home=C:\\apache-maven, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher -X package, java.class.path=C:\\apache-maven\\boot\\plexus-classworlds-2.5.1.jar, sonatypeOssDistMgmtSnapshotsUrl=https://oss.sonatype.org/content/repositories/snapshots/, env.PROGRAMW6432=C:\\Program Files, maven.version=3.2.3, env.PROGRAMFILES(X86)=C:\\Program Files (x86), env.MAVEN_JAVA_EXE=\"C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\bin\\java.exe\", java.vm.specification.name=Java Virtual Machine Specification, env.LOGONSERVER=\\PDC2012, java.vm.specification.version=1.7, env.PROCESSOR_ARCHITECTURE=x86, env.CORDOVA=C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Roaming\\npm, env.COMMONPROGRAMW6432=C:\\Program Files\\Common Files, sun.cpu.endian=little, sun.os.patch.level=, logback-version=1.0.1, env.ANDROID_NDK_PATH=C:\\Users\\Sajeetharan.DUOSL\\Documents\\Android\\ndk\\android-ndk-r8d, env.HOME=C:\\Users\\sajeetharan.DUOSL.000, env.ANT_HOME=C:\\apache-ant-1.9.4, scala-test-version=2.1.3, java.io.tmpdir=C:\\Users\\SAJEET~1.000\\AppData\\Local\\Temp\\, env.PROCESSOR_REVISION=3a09, env.VBOX_INSTALL_PATH=C:\\Program Files\\Oracle\\VirtualBox\\, env.VS120COMNTOOLS=C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7\\Tools\\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, maven-plugin-version=1.0.0, env.PROGRAMDATA=C:\\ProgramData, env.COMSPEC=C:\\WINDOWS\\system32\\cmd.exe, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\lib\\ext;C:\\WINDOWS\\Sun\\Java\\lib\\ext, user.dir=C:\\swagger\\swagger\\samples\\java-jaxrs, env.LOCALAPPDATA=C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local, line.separator=\n, java.vm.name=Java HotSpot(TM) Client VM, env.CLASSWORLDS_JAR=\"C:\\apache-maven\\boot\\plexus-classworlds-2.5.1.jar\", env.PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC, commons-lang-version=2.4, jackson-scala-version=2.4.1, env.ERROR_CODE=0, env.USERNAME=sajeetharan, file.encoding=Cp1252, env.VS100COMNTOOLS=c:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\Common7\\Tools\\, env.USERDOMAIN=DUOSL, java.specification.version=1.7, env.=C:=C:\\swagger\\swagger\\samples\\java-jaxrs, env.PROCESSOR_LEVEL=6}\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[DEBUG] resource with targetPath null\ndirectory C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\resources\nexcludes []\nincludes []\n[INFO] skip non existing resourceDirectory C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\resources\n[DEBUG] no use filter components\n[INFO] \n[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ swagger-java-sample-app_2.10 ---\n[DEBUG] Configuring mojo org.apache.maven.plugins:maven-compiler-plugin:3.0:testCompile from plugin realm ClassRealm[plugin>org.apache.maven.plugins:maven-compiler-plugin:3.0, parent: sun.misc.Launcher$AppClassLoader@19134f4]\n[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-compiler-plugin:3.0:testCompile' with basic configurator -->\nDEBUG basedir = C:\\swagger\\swagger\\samples\\java-jaxrs\nDEBUG buildDirectory = C:\\swagger\\swagger\\samples\\java-jaxrs\\target\nDEBUG classpathElements = [C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\test-classes, C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\classes, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\wordnik\\swagger-jaxrs_2.10\\1.3.10\\swagger-jaxrs_2.10-1.3.10.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-library\\2.10.0\\scala-library-2.10.0.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\wordnik\\swagger-core_2.10\\1.3.10\\swagger-core_2.10-1.3.10.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\commons-lang\\commons-lang\\2.4\\commons-lang-2.4.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-scala_2.10\\2.4.1\\jackson-module-scala_2.10-2.4.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-core\\2.4.1\\jackson-core-2.4.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-databind\\2.4.1.1\\jackson-databind-2.4.1.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\thoughtworks\\paranamer\\paranamer\\2.6\\paranamer-2.6.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\google\\code\\findbugs\\jsr305\\2.0.1\\jsr305-2.0.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-annotations\\2.4.1\\jackson-annotations-2.4.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-jsonSchema\\2.1.0\\jackson-module-jsonSchema-2.1.0.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\jaxrs\\jackson-jaxrs-json-provider\\2.0.0\\jackson-jaxrs-json-provider-2.0.0.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-jaxb-annotations\\2.0.0\\jackson-module-jaxb-annotations-2.0.0.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\wordnik\\swagger-annotations\\1.3.10\\swagger-annotations-1.3.10.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-ext_2.10\\3.2.9\\json4s-ext_2.10-3.2.9.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\joda-time\\joda-time\\2.3\\joda-time-2.3.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\joda\\joda-convert\\1.6\\joda-convert-1.6.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-native_2.10\\3.2.9\\json4s-native_2.10-3.2.9.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-core_2.10\\3.2.9\\json4s-core_2.10-3.2.9.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-ast_2.10\\3.2.9\\json4s-ast_2.10-3.2.9.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scalap\\2.10.0\\scalap-2.10.0.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-compiler\\2.10.0\\scala-compiler-2.10.0.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-jackson_2.10\\3.2.9\\json4s-jackson_2.10-3.2.9.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\ws\\rs\\jsr311-api\\1.1.1\\jsr311-api-1.1.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\reflections\\reflections\\0.9.9-RC1\\reflections-0.9.9-RC1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\google\\guava\\guava\\11.0.2\\guava-11.0.2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\javassist\\javassist\\3.16.1-GA\\javassist-3.16.1-GA.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\dom4j\\dom4j\\1.6.1\\dom4j-1.6.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\xml-apis\\xml-apis\\1.0.b2\\xml-apis-1.0.b2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\ch\\qos\\logback\\logback-classic\\1.0.1\\logback-classic-1.0.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\slf4j\\slf4j-api\\1.6.3\\slf4j-api-1.6.3.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\ch\\qos\\logback\\logback-core\\1.0.1\\logback-core-1.0.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scalatest\\scalatest_2.10\\2.1.3\\scalatest_2.10-2.1.3.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-reflect\\2.10.3\\scala-reflect-2.10.3.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\junit\\junit\\4.8.1\\junit-4.8.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\servlet\\servlet-api\\2.5\\servlet-api-2.5.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-core\\1.13\\jersey-core-1.13.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-json\\1.13\\jersey-json-1.13.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jettison\\jettison\\1.1\\jettison-1.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\stax\\stax-api\\1.0.1\\stax-api-1.0.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\xml\\bind\\jaxb-impl\\2.2.3-1\\jaxb-impl-2.2.3-1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\xml\\bind\\jaxb-api\\2.2.2\\jaxb-api-2.2.2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\xml\\stream\\stax-api\\1.0-2\\stax-api-1.0-2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\activation\\activation\\1.1\\activation-1.1.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-core-asl\\1.9.2\\jackson-core-asl-1.9.2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-mapper-asl\\1.9.2\\jackson-mapper-asl-1.9.2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-jaxrs\\1.9.2\\jackson-jaxrs-1.9.2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-xc\\1.9.2\\jackson-xc-1.9.2.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-servlet\\1.13\\jersey-servlet-1.13.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-server\\1.13\\jersey-server-1.13.jar, C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\asm\\asm\\3.1\\asm-3.1.jar]\nDEBUG compileSourceRoots = [C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\scala]\nDEBUG compilerId = javac\nDEBUG debug = true\nDEBUG encoding = UTF-8\nDEBUG failOnError = true\nDEBUG forceJavacCompilerUse = false\nDEBUG fork = false\nDEBUG generatedTestSourcesDirectory = C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\generated-test-sources\\test-annotations\nDEBUG mojoExecution = org.apache.maven.plugins:maven-compiler-plugin:3.0:testCompile {execution: default-testCompile}\nDEBUG optimize = false\nDEBUG outputDirectory = C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\test-classes\nDEBUG showDeprecation = false\nDEBUG showWarnings = false\nDEBUG skipMultiThreadWarning = false\nDEBUG source = 1.6\nDEBUG staleMillis = 0\nDEBUG target = 1.6\nDEBUG verbose = false\nDEBUG mavenSession = org.apache.maven.execution.MavenSession@17ab7ae\nDEBUG session = org.apache.maven.execution.MavenSession@17ab7ae\n[DEBUG] -- end configuration --\n[DEBUG] Using compiler 'javac'.\n[DEBUG] Source directories: [C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\scala]\n[DEBUG] Classpath: [C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\test-classes\n C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\classes\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\wordnik\\swagger-jaxrs_2.10\\1.3.10\\swagger-jaxrs_2.10-1.3.10.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-library\\2.10.0\\scala-library-2.10.0.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\wordnik\\swagger-core_2.10\\1.3.10\\swagger-core_2.10-1.3.10.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\commons-lang\\commons-lang\\2.4\\commons-lang-2.4.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-scala_2.10\\2.4.1\\jackson-module-scala_2.10-2.4.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-core\\2.4.1\\jackson-core-2.4.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-databind\\2.4.1.1\\jackson-databind-2.4.1.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\thoughtworks\\paranamer\\paranamer\\2.6\\paranamer-2.6.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\google\\code\\findbugs\\jsr305\\2.0.1\\jsr305-2.0.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-annotations\\2.4.1\\jackson-annotations-2.4.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-jsonSchema\\2.1.0\\jackson-module-jsonSchema-2.1.0.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\jaxrs\\jackson-jaxrs-json-provider\\2.0.0\\jackson-jaxrs-json-provider-2.0.0.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-jaxb-annotations\\2.0.0\\jackson-module-jaxb-annotations-2.0.0.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\wordnik\\swagger-annotations\\1.3.10\\swagger-annotations-1.3.10.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-ext_2.10\\3.2.9\\json4s-ext_2.10-3.2.9.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\joda-time\\joda-time\\2.3\\joda-time-2.3.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\joda\\joda-convert\\1.6\\joda-convert-1.6.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-native_2.10\\3.2.9\\json4s-native_2.10-3.2.9.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-core_2.10\\3.2.9\\json4s-core_2.10-3.2.9.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-ast_2.10\\3.2.9\\json4s-ast_2.10-3.2.9.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scalap\\2.10.0\\scalap-2.10.0.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-compiler\\2.10.0\\scala-compiler-2.10.0.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\json4s\\json4s-jackson_2.10\\3.2.9\\json4s-jackson_2.10-3.2.9.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\ws\\rs\\jsr311-api\\1.1.1\\jsr311-api-1.1.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\reflections\\reflections\\0.9.9-RC1\\reflections-0.9.9-RC1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\google\\guava\\guava\\11.0.2\\guava-11.0.2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\javassist\\javassist\\3.16.1-GA\\javassist-3.16.1-GA.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\dom4j\\dom4j\\1.6.1\\dom4j-1.6.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\xml-apis\\xml-apis\\1.0.b2\\xml-apis-1.0.b2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\ch\\qos\\logback\\logback-classic\\1.0.1\\logback-classic-1.0.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\slf4j\\slf4j-api\\1.6.3\\slf4j-api-1.6.3.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\ch\\qos\\logback\\logback-core\\1.0.1\\logback-core-1.0.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scalatest\\scalatest_2.10\\2.1.3\\scalatest_2.10-2.1.3.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-reflect\\2.10.3\\scala-reflect-2.10.3.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\junit\\junit\\4.8.1\\junit-4.8.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\servlet\\servlet-api\\2.5\\servlet-api-2.5.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-core\\1.13\\jersey-core-1.13.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-json\\1.13\\jersey-json-1.13.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jettison\\jettison\\1.1\\jettison-1.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\stax\\stax-api\\1.0.1\\stax-api-1.0.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\xml\\bind\\jaxb-impl\\2.2.3-1\\jaxb-impl-2.2.3-1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\xml\\bind\\jaxb-api\\2.2.2\\jaxb-api-2.2.2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\xml\\stream\\stax-api\\1.0-2\\stax-api-1.0-2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\javax\\activation\\activation\\1.1\\activation-1.1.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-core-asl\\1.9.2\\jackson-core-asl-1.9.2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-mapper-asl\\1.9.2\\jackson-mapper-asl-1.9.2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-jaxrs\\1.9.2\\jackson-jaxrs-1.9.2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\codehaus\\jackson\\jackson-xc\\1.9.2\\jackson-xc-1.9.2.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-servlet\\1.13\\jersey-servlet-1.13.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\com\\sun\\jersey\\jersey-server\\1.13\\jersey-server-1.13.jar\n C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\asm\\asm\\3.1\\asm-3.1.jar]\n[DEBUG] Output directory: C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\test-classes\n[DEBUG] CompilerReuseStrategy: reuseCreated\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] --- scala-maven-plugin:3.1.5:testCompile (default) @ swagger-java-sample-app_2.10 ---\n[DEBUG] Configuring mojo net.alchim31.maven:scala-maven-plugin:3.1.5:testCompile from plugin realm ClassRealm[plugin>net.alchim31.maven:scala-maven-plugin:3.1.5, parent: sun.misc.Launcher$AppClassLoader@19134f4]\n[DEBUG] Configuring mojo 'net.alchim31.maven:scala-maven-plugin:3.1.5:testCompile' with basic configurator -->\nDEBUG args = [-target:jvm-1.6, -deprecation]\nDEBUG checkMultipleScalaVersions = true\nDEBUG compileOrder = mixed\nDEBUG displayCmd = false\nDEBUG encoding = UTF-8\nDEBUG failOnMultipleScalaVersions = false\nDEBUG forceUseArgFile = false\nDEBUG fork = true\nDEBUG javacArgs = []\nDEBUG javacGenerateDebugSymbols = true\nDEBUG jvmArgs = [-Xmx384m]\nDEBUG localRepo =       id: local\n      url: file:///C:/Users/sajeetharan.DUOSL.000/.m2/repository/\n   layout: default\nsnapshots: [enabled => true, update => always]\n releases: [enabled => true, update => always]\nDEBUG localRepository =       id: local\n      url: file:///C:/Users/sajeetharan.DUOSL.000/.m2/repository/\n   layout: default\nsnapshots: [enabled => true, update => always]\n releases: [enabled => true, update => always]\nDEBUG notifyCompilation = true\nDEBUG pluginArtifacts = [net.alchim31.maven:scala-maven-plugin:maven-plugin:3.1.5:, org.apache.maven.reporting:maven-reporting-api:jar:3.0:compile, org.sonatype.aether:aether-util:jar:1.13.1:compile, org.sonatype.sisu:sisu-inject-bean:jar:2.3.0:compile, org.sonatype.sisu:sisu-guice:jar:no_aop:3.1.0:compile, org.sonatype.sisu:sisu-guava:jar:0.9.9:compile, org.codehaus.plexus:plexus-interpolation:jar:1.14:compile, org.codehaus.plexus:plexus-component-annotations:jar:1.5.5:compile, org.sonatype.plexus:plexus-sec-dispatcher:jar:1.3:compile, org.sonatype.plexus:plexus-cipher:jar:1.4:compile, org.apache.maven.shared:maven-dependency-tree:jar:1.2:compile, org.apache.commons:commons-exec:jar:1.1:compile, org.codehaus.plexus:plexus-utils:jar:3.0:compile, org.codehaus.plexus:plexus-archiver:jar:2.1:compile, junit:junit:jar:3.8.1:compile, org.codehaus.plexus:plexus-io:jar:2.0.2:compile, org.apache.maven:maven-archiver:jar:2.5:compile, org.apache.maven.doxia:doxia-sink-api:jar:1.1.2:compile, org.apache.maven.doxia:doxia-logging-api:jar:1.1.2:compile, org.apache.maven.shared:maven-invoker:jar:2.0.11:compile, com.typesafe.zinc:zinc:jar:0.2.0:compile, org.scala-lang:scala-library:jar:2.9.2:compile, com.typesafe.sbt:compiler-interface:jar:sources:0.12.1:compile, com.typesafe.sbt:incremental-compiler:jar:0.12.1:compile, com.typesafe.sbt:sbt-interface:jar:0.12.1:compile, org.scala-lang:scala-compiler:jar:2.9.2:compile]\nDEBUG project = MavenProject: com.wordnik:swagger-java-sample-app_2.10:1.3.10 @ C:\\swagger\\swagger\\samples\\java-jaxrs\\pom.xml\nDEBUG reactorProjects = [MavenProject: com.wordnik:swagger-java-sample-app_2.10:1.3.10 @ C:\\swagger\\swagger\\samples\\java-jaxrs\\pom.xml]\nDEBUG recompileMode = all\nDEBUG remoteRepos = [      id: sonatype-nexus-snapshots\n      url: https://oss.sonatype.org/content/repositories/snapshots\n   layout: default\nsnapshots: [enabled => true, update => daily]\n releases: [enabled => false, update => daily]\n,       id: central\n      url: https://repo.maven.apache.org/maven2\n   layout: default\nsnapshots: [enabled => false, update => daily]\n releases: [enabled => true, update => daily]\n]\nDEBUG scalaClassName = scala.tools.nsc.Main\nDEBUG sendJavaToScalac = true\nDEBUG session = org.apache.maven.execution.MavenSession@17ab7ae\nDEBUG testAnalysisCacheFile = C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\analysis\\test-compile\nDEBUG testOutputDir = C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\test-classes\nDEBUG testSourceDir = C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\scala..\\scala\nDEBUG useCanonicalPath = true\nDEBUG useZincServer = false\nDEBUG zincPort = 3030\n[DEBUG] -- end configuration --\n[DEBUG] Checking for multiple versions of scala\n[DEBUG] Dependency tree resolution listener events:\n[DEBUG] testArtifact: artifact=com.wordnik:swagger-java-sample-app_2.10:war:1.3.10\n[DEBUG] includeArtifact: artifact=com.wordnik:swagger-java-sample-app_2.10:war:1.3.10\n[DEBUG] startProcessChildren: artifact=com.wordnik:swagger-java-sample-app_2.10:war:1.3.10\n[DEBUG]   testArtifact: artifact=com.wordnik:swagger-jaxrs_2.10:jar:1.3.10:compile\n[DEBUG]   includeArtifact: artifact=com.wordnik:swagger-jaxrs_2.10:jar:1.3.10:compile\n[DEBUG]   startProcessChildren: artifact=com.wordnik:swagger-jaxrs_2.10:jar:1.3.10:compile\n[DEBUG]     manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     includeArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     startProcessChildren: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     endProcessChildren: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactVersion: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile, replacement=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     manageArtifactScope: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile, replacement=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     testArtifact: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     manageArtifactVersion: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile, replacement=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     manageArtifactScope: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile, replacement=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     includeArtifact: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     startProcessChildren: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]       manageArtifactVersion: artifact=commons-lang:commons-lang:jar:2.4:compile, replacement=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       manageArtifactScope: artifact=commons-lang:commons-lang:jar:2.4:compile, replacement=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       testArtifact: artifact=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       manageArtifactVersion: artifact=commons-lang:commons-lang:jar:2.4:compile, replacement=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       manageArtifactScope: artifact=commons-lang:commons-lang:jar:2.4:compile, replacement=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       includeArtifact: artifact=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       startProcessChildren: artifact=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       endProcessChildren: artifact=commons-lang:commons-lang:jar:2.4:compile\n[DEBUG]       manageArtifactVersion: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       manageArtifactScope: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       testArtifact: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       manageArtifactVersion: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       manageArtifactScope: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       includeArtifact: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       startProcessChildren: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       endProcessChildren: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]       testArtifact: artifact=com.fasterxml.jackson.module:jackson-module-scala_2.10:jar:2.4.1:compile\n[DEBUG]       includeArtifact: artifact=com.fasterxml.jackson.module:jackson-module-scala_2.10:jar:2.4.1:compile\n[DEBUG]       startProcessChildren: artifact=com.fasterxml.jackson.module:jackson-module-scala_2.10:jar:2.4.1:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.4:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.scala-lang:scala-reflect:jar:2.10.4:compile\n[DEBUG]         includeArtifact: artifact=org.scala-lang:scala-reflect:jar:2.10.4:compile\n[DEBUG]         startProcessChildren: artifact=org.scala-lang:scala-reflect:jar:2.10.4:compile\n[DEBUG]           manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.4:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         endProcessChildren: artifact=org.scala-lang:scala-reflect:jar:2.10.4:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         includeArtifact: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         startProcessChildren: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         endProcessChildren: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]         includeArtifact: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]         startProcessChildren: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]         endProcessChildren: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]         includeArtifact: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]         startProcessChildren: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]           testArtifact: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.0:compile\n[DEBUG]           omitForNearer: omitted=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.0:compile kept=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]           testArtifact: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]           omitForNearer: omitted=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile kept=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         endProcessChildren: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]         testArtifact: artifact=com.thoughtworks.paranamer:paranamer:jar:2.6:compile\n[DEBUG]         includeArtifact: artifact=com.thoughtworks.paranamer:paranamer:jar:2.6:compile\n[DEBUG]         startProcessChildren: artifact=com.thoughtworks.paranamer:paranamer:jar:2.6:compile\n[DEBUG]         endProcessChildren: artifact=com.thoughtworks.paranamer:paranamer:jar:2.6:compile\n[DEBUG]         testArtifact: artifact=com.google.code.findbugs:jsr305:jar:2.0.1:compile\n[DEBUG]         includeArtifact: artifact=com.google.code.findbugs:jsr305:jar:2.0.1:compile\n[DEBUG]         startProcessChildren: artifact=com.google.code.findbugs:jsr305:jar:2.0.1:compile\n[DEBUG]         endProcessChildren: artifact=com.google.code.findbugs:jsr305:jar:2.0.1:compile\n[DEBUG]         testArtifact: artifact=com.google.guava:guava:jar:15.0:compile\n[DEBUG]         includeArtifact: artifact=com.google.guava:guava:jar:15.0:compile\n[DEBUG]         startProcessChildren: artifact=com.google.guava:guava:jar:15.0:compile\n[DEBUG]         endProcessChildren: artifact=com.google.guava:guava:jar:15.0:compile\n[DEBUG]       endProcessChildren: artifact=com.fasterxml.jackson.module:jackson-module-scala_2.10:jar:2.4.1:compile\n[DEBUG]       testArtifact: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]       omitForNearer: omitted=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile kept=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]       includeArtifact: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]       startProcessChildren: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]       endProcessChildren: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]       testArtifact: artifact=com.fasterxml.jackson.module:jackson-module-jsonSchema:jar:2.1.0:compile\n[DEBUG]       includeArtifact: artifact=com.fasterxml.jackson.module:jackson-module-jsonSchema:jar:2.1.0:compile\n[DEBUG]       startProcessChildren: artifact=com.fasterxml.jackson.module:jackson-module-jsonSchema:jar:2.1.0:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.1.0:compile\n[DEBUG]         omitForNearer: omitted=com.fasterxml.jackson.core:jackson-databind:jar:2.1.0:compile kept=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.1.0:compile\n[DEBUG]         omitForNearer: omitted=com.fasterxml.jackson.core:jackson-core:jar:2.1.0:compile kept=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-annotations:jar:2.1.0:compile\n[DEBUG]         omitForNearer: omitted=com.fasterxml.jackson.core:jackson-annotations:jar:2.1.0:compile kept=com.fasterxml.jackson.core:jackson-annotations:jar:2.4.1:compile\n[DEBUG]       endProcessChildren: artifact=com.fasterxml.jackson.module:jackson-module-jsonSchema:jar:2.1.0:compile\n[DEBUG]       testArtifact: artifact=com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:jar:2.0.0:compile\n[DEBUG]       includeArtifact: artifact=com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:jar:2.0.0:compile\n[DEBUG]       startProcessChildren: artifact=com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:jar:2.0.0:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.0.0:compile\n[DEBUG]         omitForNearer: omitted=com.fasterxml.jackson.core:jackson-core:jar:2.0.0:compile kept=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.0.0:compile\n[DEBUG]         omitForNearer: omitted=com.fasterxml.jackson.core:jackson-databind:jar:2.0.0:compile kept=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.module:jackson-module-jaxb-annotations:jar:2.0.0:compile\n[DEBUG]         includeArtifact: artifact=com.fasterxml.jackson.module:jackson-module-jaxb-annotations:jar:2.0.0:compile\n[DEBUG]         startProcessChildren: artifact=com.fasterxml.jackson.module:jackson-module-jaxb-annotations:jar:2.0.0:compile\n[DEBUG]           testArtifact: artifact=com.fasterxml.jackson.core:jackson-core:jar:2.0.0:compile\n[DEBUG]           omitForNearer: omitted=com.fasterxml.jackson.core:jackson-core:jar:2.0.0:compile kept=com.fasterxml.jackson.core:jackson-core:jar:2.4.1:compile\n[DEBUG]           testArtifact: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.0.0:compile\n[DEBUG]           omitForNearer: omitted=com.fasterxml.jackson.core:jackson-databind:jar:2.0.0:compile kept=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]         endProcessChildren: artifact=com.fasterxml.jackson.module:jackson-module-jaxb-annotations:jar:2.0.0:compile\n[DEBUG]         testArtifact: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]         includeArtifact: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]         startProcessChildren: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]         endProcessChildren: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]       endProcessChildren: artifact=com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:jar:2.0.0:compile\n[DEBUG]       testArtifact: artifact=com.wordnik:swagger-annotations:jar:1.3.10:compile\n[DEBUG]       includeArtifact: artifact=com.wordnik:swagger-annotations:jar:1.3.10:compile\n[DEBUG]       startProcessChildren: artifact=com.wordnik:swagger-annotations:jar:1.3.10:compile\n[DEBUG]       endProcessChildren: artifact=com.wordnik:swagger-annotations:jar:1.3.10:compile\n[DEBUG]       testArtifact: artifact=org.json4s:json4s-ext_2.10:jar:3.2.9:compile\n[DEBUG]       includeArtifact: artifact=org.json4s:json4s-ext_2.10:jar:3.2.9:compile\n[DEBUG]       startProcessChildren: artifact=org.json4s:json4s-ext_2.10:jar:3.2.9:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=joda-time:joda-time:jar:2.3:compile\n[DEBUG]         includeArtifact: artifact=joda-time:joda-time:jar:2.3:compile\n[DEBUG]         startProcessChildren: artifact=joda-time:joda-time:jar:2.3:compile\n[DEBUG]         endProcessChildren: artifact=joda-time:joda-time:jar:2.3:compile\n[DEBUG]         testArtifact: artifact=org.joda:joda-convert:jar:1.6:compile\n[DEBUG]         includeArtifact: artifact=org.joda:joda-convert:jar:1.6:compile\n[DEBUG]         startProcessChildren: artifact=org.joda:joda-convert:jar:1.6:compile\n[DEBUG]         endProcessChildren: artifact=org.joda:joda-convert:jar:1.6:compile\n[DEBUG]       endProcessChildren: artifact=org.json4s:json4s-ext_2.10:jar:3.2.9:compile\n[DEBUG]       testArtifact: artifact=org.json4s:json4s-native_2.10:jar:3.2.9:compile\n[DEBUG]       includeArtifact: artifact=org.json4s:json4s-native_2.10:jar:3.2.9:compile\n[DEBUG]       startProcessChildren: artifact=org.json4s:json4s-native_2.10:jar:3.2.9:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.json4s:json4s-core_2.10:jar:3.2.9:compile\n[DEBUG]         includeArtifact: artifact=org.json4s:json4s-core_2.10:jar:3.2.9:compile\n[DEBUG]         startProcessChildren: artifact=org.json4s:json4s-core_2.10:jar:3.2.9:compile\n[DEBUG]           manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           testArtifact: artifact=org.json4s:json4s-ast_2.10:jar:3.2.9:compile\n[DEBUG]           includeArtifact: artifact=org.json4s:json4s-ast_2.10:jar:3.2.9:compile\n[DEBUG]           startProcessChildren: artifact=org.json4s:json4s-ast_2.10:jar:3.2.9:compile\n[DEBUG]             manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]             manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]             testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]             manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]             manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]             omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]           endProcessChildren: artifact=org.json4s:json4s-ast_2.10:jar:3.2.9:compile\n[DEBUG]           testArtifact: artifact=com.thoughtworks.paranamer:paranamer:jar:2.6:compile\n[DEBUG]           omitForNearer: omitted=com.thoughtworks.paranamer:paranamer:jar:2.6:compile kept=com.thoughtworks.paranamer:paranamer:jar:2.6:compile\n[DEBUG]           testArtifact: artifact=org.scala-lang:scalap:jar:2.10.0:compile\n[DEBUG]           includeArtifact: artifact=org.scala-lang:scalap:jar:2.10.0:compile\n[DEBUG]           startProcessChildren: artifact=org.scala-lang:scalap:jar:2.10.0:compile\n[DEBUG]             testArtifact: artifact=org.scala-lang:scala-compiler:jar:2.10.0:compile\n[DEBUG]             includeArtifact: artifact=org.scala-lang:scala-compiler:jar:2.10.0:compile\n[DEBUG]             startProcessChildren: artifact=org.scala-lang:scala-compiler:jar:2.10.0:compile\n[DEBUG]               manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]               manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]               testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]               manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]               manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]               omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]               testArtifact: artifact=org.scala-lang:scala-reflect:jar:2.10.0:compile\n[DEBUG]               omitForNearer: omitted=org.scala-lang:scala-reflect:jar:2.10.0:compile kept=org.scala-lang:scala-reflect:jar:2.10.4:compile\n[DEBUG]             endProcessChildren: artifact=org.scala-lang:scala-compiler:jar:2.10.0:compile\n[DEBUG]           endProcessChildren: artifact=org.scala-lang:scalap:jar:2.10.0:compile\n[DEBUG]         endProcessChildren: artifact=org.json4s:json4s-core_2.10:jar:3.2.9:compile\n[DEBUG]       endProcessChildren: artifact=org.json4s:json4s-native_2.10:jar:3.2.9:compile\n[DEBUG]       testArtifact: artifact=org.json4s:json4s-jackson_2.10:jar:3.2.9:compile\n[DEBUG]       includeArtifact: artifact=org.json4s:json4s-jackson_2.10:jar:3.2.9:compile\n[DEBUG]       startProcessChildren: artifact=org.json4s:json4s-jackson_2.10:jar:3.2.9:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]         testArtifact: artifact=org.json4s:json4s-core_2.10:jar:3.2.9:compile\n[DEBUG]         omitForNearer: omitted=org.json4s:json4s-core_2.10:jar:3.2.9:compile kept=org.json4s:json4s-core_2.10:jar:3.2.9:compile\n[DEBUG]         testArtifact: artifact=com.fasterxml.jackson.core:jackson-databind:jar:2.3.1:compile\n[DEBUG]         omitForNearer: omitted=com.fasterxml.jackson.core:jackson-databind:jar:2.3.1:compile kept=com.fasterxml.jackson.core:jackson-databind:jar:2.4.1.1:compile\n[DEBUG]       endProcessChildren: artifact=org.json4s:json4s-jackson_2.10:jar:3.2.9:compile\n[DEBUG]     endProcessChildren: artifact=com.wordnik:swagger-core_2.10:jar:1.3.10:compile\n[DEBUG]     testArtifact: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]     omitForNearer: omitted=javax.ws.rs:jsr311-api:jar:1.1.1:compile kept=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]     includeArtifact: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]     startProcessChildren: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]     endProcessChildren: artifact=javax.ws.rs:jsr311-api:jar:1.1.1:compile\n[DEBUG]     testArtifact: artifact=org.reflections:reflections:jar:0.9.9-RC1:compile\n[DEBUG]     includeArtifact: artifact=org.reflections:reflections:jar:0.9.9-RC1:compile\n[DEBUG]     startProcessChildren: artifact=org.reflections:reflections:jar:0.9.9-RC1:compile\n[DEBUG]       testArtifact: artifact=com.google.guava:guava:jar:11.0.2:compile\n[DEBUG]       omitForNearer: omitted=com.google.guava:guava:jar:15.0:compile kept=com.google.guava:guava:jar:11.0.2:compile\n[DEBUG]       includeArtifact: artifact=com.google.guava:guava:jar:11.0.2:compile\n[DEBUG]       startProcessChildren: artifact=com.google.guava:guava:jar:11.0.2:compile\n[DEBUG]         testArtifact: artifact=com.google.code.findbugs:jsr305:jar:1.3.9:compile\n[DEBUG]         omitForNearer: omitted=com.google.code.findbugs:jsr305:jar:1.3.9:compile kept=com.google.code.findbugs:jsr305:jar:2.0.1:compile\n[DEBUG]       endProcessChildren: artifact=com.google.guava:guava:jar:11.0.2:compile\n[DEBUG]       testArtifact: artifact=org.javassist:javassist:jar:3.16.1-GA:compile\n[DEBUG]       includeArtifact: artifact=org.javassist:javassist:jar:3.16.1-GA:compile\n[DEBUG]       startProcessChildren: artifact=org.javassist:javassist:jar:3.16.1-GA:compile\n[DEBUG]       endProcessChildren: artifact=org.javassist:javassist:jar:3.16.1-GA:compile\n[DEBUG]       testArtifact: artifact=dom4j:dom4j:jar:1.6.1:compile\n[DEBUG]       includeArtifact: artifact=dom4j:dom4j:jar:1.6.1:compile\n[DEBUG]       startProcessChildren: artifact=dom4j:dom4j:jar:1.6.1:compile\n[DEBUG]         testArtifact: artifact=xml-apis:xml-apis:jar:1.0.b2:compile\n[DEBUG]         includeArtifact: artifact=xml-apis:xml-apis:jar:1.0.b2:compile\n[DEBUG]         startProcessChildren: artifact=xml-apis:xml-apis:jar:1.0.b2:compile\n[DEBUG]         endProcessChildren: artifact=xml-apis:xml-apis:jar:1.0.b2:compile\n[DEBUG]       endProcessChildren: artifact=dom4j:dom4j:jar:1.6.1:compile\n[DEBUG]     endProcessChildren: artifact=org.reflections:reflections:jar:0.9.9-RC1:compile\n[DEBUG]   endProcessChildren: artifact=com.wordnik:swagger-jaxrs_2.10:jar:1.3.10:compile\n[DEBUG]   testArtifact: artifact=ch.qos.logback:logback-classic:jar:1.0.1:compile\n[DEBUG]   includeArtifact: artifact=ch.qos.logback:logback-classic:jar:1.0.1:compile\n[DEBUG]   startProcessChildren: artifact=ch.qos.logback:logback-classic:jar:1.0.1:compile\n[DEBUG]     testArtifact: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]     includeArtifact: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]     startProcessChildren: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]     endProcessChildren: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]     manageArtifactVersion: artifact=org.slf4j:slf4j-api:jar:1.6.4:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     manageArtifactScope: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     testArtifact: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     manageArtifactVersion: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     manageArtifactScope: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile, replacement=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     omitForNearer: omitted=org.slf4j:slf4j-api:jar:1.6.3:compile kept=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     includeArtifact: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     startProcessChildren: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]     endProcessChildren: artifact=org.slf4j:slf4j-api:jar:1.6.3:compile\n[DEBUG]   endProcessChildren: artifact=ch.qos.logback:logback-classic:jar:1.0.1:compile\n[DEBUG]   testArtifact: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]   omitForNearer: omitted=ch.qos.logback:logback-core:jar:1.0.1:compile kept=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]   includeArtifact: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]   startProcessChildren: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]   endProcessChildren: artifact=ch.qos.logback:logback-core:jar:1.0.1:compile\n[DEBUG]   testArtifact: artifact=org.scalatest:scalatest_2.10:jar:2.1.3:test\n[DEBUG]   includeArtifact: artifact=org.scalatest:scalatest_2.10:jar:2.1.3:test\n[DEBUG]   startProcessChildren: artifact=org.scalatest:scalatest_2.10:jar:2.1.3:test\n[DEBUG]     manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.3:test, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:test, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     testArtifact: artifact=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactVersion: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     manageArtifactScope: artifact=org.scala-lang:scala-library:jar:2.10.0:compile, replacement=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     omitForNearer: omitted=org.scala-lang:scala-library:jar:2.10.0:compile kept=org.scala-lang:scala-library:jar:2.10.0:compile\n[DEBUG]     testArtifact: artifact=org.scala-lang:scala-reflect:jar:2.10.3:test\n[DEBUG]     updateScope: artifact=org.scala-lang:scala-reflect:jar:2.10.3:test, scope=compile\n[DEBUG]     omitForNearer: omitted=org.scala-lang:scala-reflect:jar:2.10.3:compile kept=org.scala-lang:scala-reflect:jar:2.10.3:compile\n[DEBUG]   endProcessChildren: artifact=org.scalatest:scalatest_2.10:jar:2.1.3:test\n[DEBUG]   testArtifact: artifact=junit:junit:jar:4.8.1:test\n[DEBUG]   includeArtifact: artifact=junit:junit:jar:4.8.1:test\n[DEBUG]   startProcessChildren: artifact=junit:junit:jar:4.8.1:test\n[DEBUG]   endProcessChildren: artifact=junit:junit:jar:4.8.1:test\n[DEBUG]   testArtifact: artifact=javax.servlet:servlet-api:jar:2.5:provided\n[DEBUG]   includeArtifact: artifact=javax.servlet:servlet-api:jar:2.5:provided\n[DEBUG]   startProcessChildren: artifact=javax.servlet:servlet-api:jar:2.5:provided\n[DEBUG]   endProcessChildren: artifact=javax.servlet:servlet-api:jar:2.5:provided\n[DEBUG]   testArtifact: artifact=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]   includeArtifact: artifact=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]   startProcessChildren: artifact=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]   endProcessChildren: artifact=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]   testArtifact: artifact=com.sun.jersey:jersey-json:jar:1.13:compile\n[DEBUG]   includeArtifact: artifact=com.sun.jersey:jersey-json:jar:1.13:compile\n[DEBUG]   startProcessChildren: artifact=com.sun.jersey:jersey-json:jar:1.13:compile\n[DEBUG]     testArtifact: artifact=org.codehaus.jettison:jettison:jar:1.1:compile\n[DEBUG]     includeArtifact: artifact=org.codehaus.jettison:jettison:jar:1.1:compile\n[DEBUG]     startProcessChildren: artifact=org.codehaus.jettison:jettison:jar:1.1:compile\n[DEBUG]       testArtifact: artifact=stax:stax-api:jar:1.0.1:compile\n[DEBUG]       includeArtifact: artifact=stax:stax-api:jar:1.0.1:compile\n[DEBUG]       startProcessChildren: artifact=stax:stax-api:jar:1.0.1:compile\n[DEBUG]       endProcessChildren: artifact=stax:stax-api:jar:1.0.1:compile\n[DEBUG]     endProcessChildren: artifact=org.codehaus.jettison:jettison:jar:1.1:compile\n[DEBUG]     testArtifact: artifact=com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:compile\n[DEBUG]     includeArtifact: artifact=com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:compile\n[DEBUG]     startProcessChildren: artifact=com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:compile\n[DEBUG]       testArtifact: artifact=javax.xml.bind:jaxb-api:jar:2.2.2:compile\n[DEBUG]       includeArtifact: artifact=javax.xml.bind:jaxb-api:jar:2.2.2:compile\n[DEBUG]       startProcessChildren: artifact=javax.xml.bind:jaxb-api:jar:2.2.2:compile\n[DEBUG]         testArtifact: artifact=javax.xml.stream:stax-api:jar:1.0-2:compile\n[DEBUG]         includeArtifact: artifact=javax.xml.stream:stax-api:jar:1.0-2:compile\n[DEBUG]         startProcessChildren: artifact=javax.xml.stream:stax-api:jar:1.0-2:compile\n[DEBUG]         endProcessChildren: artifact=javax.xml.stream:stax-api:jar:1.0-2:compile\n[DEBUG]         testArtifact: artifact=javax.activation:activation:jar:1.1:compile\n[DEBUG]         includeArtifact: artifact=javax.activation:activation:jar:1.1:compile\n[DEBUG]         startProcessChildren: artifact=javax.activation:activation:jar:1.1:compile\n[DEBUG]         endProcessChildren: artifact=javax.activation:activation:jar:1.1:compile\n[DEBUG]       endProcessChildren: artifact=javax.xml.bind:jaxb-api:jar:2.2.2:compile\n[DEBUG]     endProcessChildren: artifact=com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:compile\n[DEBUG]     testArtifact: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]     includeArtifact: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]     startProcessChildren: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]     endProcessChildren: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]     testArtifact: artifact=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]     includeArtifact: artifact=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]     startProcessChildren: artifact=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]       testArtifact: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]       omitForNearer: omitted=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile kept=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]     endProcessChildren: artifact=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]     testArtifact: artifact=org.codehaus.jackson:jackson-jaxrs:jar:1.9.2:compile\n[DEBUG]     includeArtifact: artifact=org.codehaus.jackson:jackson-jaxrs:jar:1.9.2:compile\n[DEBUG]     startProcessChildren: artifact=org.codehaus.jackson:jackson-jaxrs:jar:1.9.2:compile\n[DEBUG]       testArtifact: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]       omitForNearer: omitted=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile kept=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]       testArtifact: artifact=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]       omitForNearer: omitted=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile kept=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]     endProcessChildren: artifact=org.codehaus.jackson:jackson-jaxrs:jar:1.9.2:compile\n[DEBUG]     testArtifact: artifact=org.codehaus.jackson:jackson-xc:jar:1.9.2:compile\n[DEBUG]     includeArtifact: artifact=org.codehaus.jackson:jackson-xc:jar:1.9.2:compile\n[DEBUG]     startProcessChildren: artifact=org.codehaus.jackson:jackson-xc:jar:1.9.2:compile\n[DEBUG]       testArtifact: artifact=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]       omitForNearer: omitted=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile kept=org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile\n[DEBUG]       testArtifact: artifact=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]       omitForNearer: omitted=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile kept=org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile\n[DEBUG]     endProcessChildren: artifact=org.codehaus.jackson:jackson-xc:jar:1.9.2:compile\n[DEBUG]     manageArtifactVersion: artifact=com.sun.jersey:jersey-core:jar:1.13:compile, replacement=com.sun.jersey:jersey-core:jar:1.13\n[DEBUG]     testArtifact: artifact=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]     manageArtifactVersion: artifact=com.sun.jersey:jersey-core:jar:1.13:compile, replacement=com.sun.jersey:jersey-core:jar:1.13\n[DEBUG]     omitForNearer: omitted=com.sun.jersey:jersey-core:jar:1.13:compile kept=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]   endProcessChildren: artifact=com.sun.jersey:jersey-json:jar:1.13:compile\n[DEBUG]   testArtifact: artifact=com.sun.jersey:jersey-servlet:jar:1.13:compile\n[DEBUG]   includeArtifact: artifact=com.sun.jersey:jersey-servlet:jar:1.13:compile\n[DEBUG]   startProcessChildren: artifact=com.sun.jersey:jersey-servlet:jar:1.13:compile\n[DEBUG]     testArtifact: artifact=com.sun.jersey:jersey-server:jar:1.13:compile\n[DEBUG]     includeArtifact: artifact=com.sun.jersey:jersey-server:jar:1.13:compile\n[DEBUG]     startProcessChildren: artifact=com.sun.jersey:jersey-server:jar:1.13:compile\n[DEBUG]       testArtifact: artifact=asm:asm:jar:3.1:compile\n[DEBUG]       includeArtifact: artifact=asm:asm:jar:3.1:compile\n[DEBUG]       startProcessChildren: artifact=asm:asm:jar:3.1:compile\n[DEBUG]       endProcessChildren: artifact=asm:asm:jar:3.1:compile\n[DEBUG]       manageArtifactVersion: artifact=com.sun.jersey:jersey-core:jar:1.13:compile, replacement=com.sun.jersey:jersey-core:jar:1.13\n[DEBUG]       testArtifact: artifact=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]       manageArtifactVersion: artifact=com.sun.jersey:jersey-core:jar:1.13:compile, replacement=com.sun.jersey:jersey-core:jar:1.13\n[DEBUG]       omitForNearer: omitted=com.sun.jersey:jersey-core:jar:1.13:compile kept=com.sun.jersey:jersey-core:jar:1.13:compile\n[DEBUG]     endProcessChildren: artifact=com.sun.jersey:jersey-server:jar:1.13:compile\n[DEBUG]   endProcessChildren: artifact=com.sun.jersey:jersey-servlet:jar:1.13:compile\n[DEBUG] endProcessChildren: artifact=com.wordnik:swagger-java-sample-app_2.10:war:1.3.10\n[DEBUG] checking [com.wordnik:swagger-java-sample-app_2.10:war:1.3.10] for scala version\n[DEBUG] checking [com.wordnik:swagger-jaxrs_2.10:jar:1.3.10:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [com.wordnik:swagger-core_2.10:jar:1.3.10:compile] for scala version\n[DEBUG] checking [com.fasterxml.jackson.module:jackson-module-scala_2.10:jar:2.4.1:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-reflect:jar:2.10.3:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.json4s:json4s-ext_2.10:jar:3.2.9:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.json4s:json4s-native_2.10:jar:3.2.9:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.json4s:json4s-core_2.10:jar:3.2.9:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.json4s:json4s-ast_2.10:jar:3.2.9:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.scala-lang:scalap:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-compiler:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.json4s:json4s-jackson_2.10:jar:3.2.9:compile] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] checking [org.scalatest:scalatest_2.10:jar:2.1.3:test] for scala version\n[DEBUG] checking [org.scala-lang:scala-library:jar:2.10.0:compile] for scala version\n[DEBUG] C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\scala\n[DEBUG] includes = [/*.scala,/*.java,]\n[DEBUG] excludes = []\n[INFO] C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\scala:-1: info: compiling\n[INFO] Compiling 1 source files to C:\\swagger\\swagger\\samples\\java-jaxrs\\target\\test-classes at 1411625597756\n[DEBUG] use java command with args in file forced : false\n[DEBUG] plugin jar to add :C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\net\\alchim31\\maven\\scala-maven-plugin\\3.1.5\\scala-maven-plugin-3.1.5.jar\n[DEBUG] cmd:  C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\jre\\bin\\java -Xbootclasspath/a:C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-library\\2.10.0\\scala-library-2.10.0.jar;C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-compiler\\2.10.0\\scala-compiler-2.10.0.jar;C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\org\\scala-lang\\scala-reflect\\2.10.0\\scala-reflect-2.10.0.jar -Xmx384m -classpath C:\\Users\\sajeetharan.DUOSL.000.m2\\repository\\net\\alchim31\\maven\\scala-maven-plugin\\3.1.5\\scala-maven-plugin-3.1.5.jar scala_maven_executions.MainWithArgsInFile scala.tools.nsc.Main C:\\Users\\sajeetharan.DUOSL.000\\AppData\\Local\\Temp\\scala-maven-804267080396450670.args\n[ERROR] C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\scala\\ResourceListingIT.scala:40: error: exception during macro expansion: \n[ERROR] java.lang.NoSuchMethodError: org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.change(Lscala/reflect/internal/Symbols$Symbol;)V\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:92)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:87)\n[ERROR]     at scala.reflect.api.Trees$Traverser.traverseTrees(Trees.scala:2765)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itraverse$7.apply$mcV$sp(Trees.scala:1122)\n[ERROR]     at scala.reflect.api.Trees$Traverser.atOwner(Trees.scala:2785)\n[ERROR]     at scala.reflect.internal.Trees$class.itraverse(Trees.scala:1121)\n[ERROR]     at scala.reflect.internal.SymbolTable.itraverse(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itraverse(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Traverser.traverse(Trees.scala:2761)\n[ERROR]     at scala.reflect.internal.Trees$ChangeOwnerTraverser.traverse(Trees.scala:1335)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:95)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:87)\n[ERROR]     at scala.reflect.api.Trees$Traverser.apply(Trees.scala:2791)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:104)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:2836)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:2836)\n[ERROR]     at scala.collection.immutable.List.loop$1(List.scala:164)\n[ERROR]     at scala.collection.immutable.List.mapConserve(List.scala:180)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transformTrees(Trees.scala:2836)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1215)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itransform$1.apply(Trees.scala:1200)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itransform$1.apply(Trees.scala:1199)\n[ERROR]     at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2872)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1198)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2863)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2861)\n[ERROR]     at scala.collection.immutable.List.loop$1(List.scala:164)\n[ERROR]     at scala.collection.immutable.List.mapConserve(List.scala:180)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transformStats(Trees.scala:2861)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1209)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$$anonfun$repairOwners$1.apply(AssertionsMacro.scala:111)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$$anonfun$repairOwners$1.apply(AssertionsMacro.scala:111)\n[ERROR]     at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2872)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils.repairOwners(AssertionsMacro.scala:110)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair.repairOwners(AssertionsMacro.scala:80)\n[ERROR]     at org.scalatest.AssertionsMacro.genExpression(AssertionsMacro.scala:212)\n[ERROR]     at org.scalatest.AssertionsMacro.genMacroCode(AssertionsMacro.scala:235)\n[ERROR]     at org.scalatest.AssertionsMacro$.assert(AssertionsMacro.scala:292)\n[ERROR] \n[ERROR]     assert((doc.apis.map(api => api.path).toSet & Set(\"/pet\", \"/user\")).size == 2)\n[ERROR]           ^\n[ERROR] C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\scala\\ResourceListingIT.scala:46: error: exception during macro expansion: \n[ERROR] java.lang.NoSuchMethodError: org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.change(Lscala/reflect/internal/Symbols$Symbol;)V\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:92)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:87)\n[ERROR]     at scala.reflect.api.Trees$Traverser.traverseTrees(Trees.scala:2765)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itraverse$7.apply$mcV$sp(Trees.scala:1122)\n[ERROR]     at scala.reflect.api.Trees$Traverser.atOwner(Trees.scala:2785)\n[ERROR]     at scala.reflect.internal.Trees$class.itraverse(Trees.scala:1121)\n[ERROR]     at scala.reflect.internal.SymbolTable.itraverse(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itraverse(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Traverser.traverse(Trees.scala:2761)\n[ERROR]     at scala.reflect.internal.Trees$ChangeOwnerTraverser.traverse(Trees.scala:1335)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:95)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:87)\n[ERROR]     at scala.reflect.api.Trees$Traverser.apply(Trees.scala:2791)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:104)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:2836)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:2836)\n[ERROR]     at scala.collection.immutable.List.loop$1(List.scala:164)\n[ERROR]     at scala.collection.immutable.List.mapConserve(List.scala:180)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transformTrees(Trees.scala:2836)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1215)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itransform$1.apply(Trees.scala:1200)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itransform$1.apply(Trees.scala:1199)\n[ERROR]     at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2872)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1198)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2863)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2861)\n[ERROR]     at scala.collection.immutable.List.loop$1(List.scala:164)\n[ERROR]     at scala.collection.immutable.List.mapConserve(List.scala:180)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transformStats(Trees.scala:2861)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1209)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$$anonfun$repairOwners$1.apply(AssertionsMacro.scala:111)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$$anonfun$repairOwners$1.apply(AssertionsMacro.scala:111)\n[ERROR]     at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2872)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils.repairOwners(AssertionsMacro.scala:110)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair.repairOwners(AssertionsMacro.scala:80)\n[ERROR]     at org.scalatest.AssertionsMacro.genExpression(AssertionsMacro.scala:212)\n[ERROR]     at org.scalatest.AssertionsMacro.genMacroCode(AssertionsMacro.scala:235)\n[ERROR]     at org.scalatest.AssertionsMacro$.assert(AssertionsMacro.scala:292)\n[ERROR] \n[ERROR]     assert(((xml \\ \"apis\").map(api => (api \\ \"path\").text).toSet & Set(\"/pet\", \"/user\")).size == 2)\n[ERROR]           ^\n[ERROR] C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\scala\\ResourceListingIT.scala:53: error: exception during macro expansion: \n[ERROR] java.lang.NoSuchMethodError: org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.change(Lscala/reflect/internal/Symbols$Symbol;)V\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:92)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:87)\n[ERROR]     at scala.reflect.api.Trees$Traverser.traverseTrees(Trees.scala:2765)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itraverse$7.apply$mcV$sp(Trees.scala:1122)\n[ERROR]     at scala.reflect.api.Trees$Traverser.atOwner(Trees.scala:2785)\n[ERROR]     at scala.reflect.internal.Trees$class.itraverse(Trees.scala:1121)\n[ERROR]     at scala.reflect.internal.SymbolTable.itraverse(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itraverse(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Traverser.traverse(Trees.scala:2761)\n[ERROR]     at scala.reflect.internal.Trees$ChangeOwnerTraverser.traverse(Trees.scala:1335)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:95)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:87)\n[ERROR]     at scala.reflect.api.Trees$Traverser.apply(Trees.scala:2791)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:104)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:2836)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:2836)\n[ERROR]     at scala.collection.immutable.List.loop$1(List.scala:164)\n[ERROR]     at scala.collection.immutable.List.mapConserve(List.scala:180)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transformTrees(Trees.scala:2836)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1215)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itransform$1.apply(Trees.scala:1200)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itransform$1.apply(Trees.scala:1199)\n[ERROR]     at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2872)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1198)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2863)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2861)\n[ERROR]     at scala.collection.immutable.List.loop$1(List.scala:164)\n[ERROR]     at scala.collection.immutable.List.mapConserve(List.scala:180)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transformStats(Trees.scala:2861)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1209)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$$anonfun$repairOwners$1.apply(AssertionsMacro.scala:111)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$$anonfun$repairOwners$1.apply(AssertionsMacro.scala:111)\n[ERROR]     at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2872)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils.repairOwners(AssertionsMacro.scala:110)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair.repairOwners(AssertionsMacro.scala:80)\n[ERROR]     at org.scalatest.AssertionsMacro.genExpression(AssertionsMacro.scala:212)\n[ERROR]     at org.scalatest.AssertionsMacro.genMacroCode(AssertionsMacro.scala:235)\n[ERROR]     at org.scalatest.AssertionsMacro$.assert(AssertionsMacro.scala:292)\n[ERROR] \n[ERROR]     assert((doc.apis.map(api => api.path).toSet &\n[ERROR]           ^\n[ERROR] C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\scala\\ResourceListingIT.scala:63: error: exception during macro expansion: \n[ERROR] java.lang.NoSuchMethodError: org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.change(Lscala/reflect/internal/Symbols$Symbol;)V\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:92)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:87)\n[ERROR]     at scala.reflect.api.Trees$Traverser.traverseTrees(Trees.scala:2765)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itraverse$7.apply$mcV$sp(Trees.scala:1122)\n[ERROR]     at scala.reflect.api.Trees$Traverser.atOwner(Trees.scala:2785)\n[ERROR]     at scala.reflect.internal.Trees$class.itraverse(Trees.scala:1121)\n[ERROR]     at scala.reflect.internal.SymbolTable.itraverse(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itraverse(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Traverser.traverse(Trees.scala:2761)\n[ERROR]     at scala.reflect.internal.Trees$ChangeOwnerTraverser.traverse(Trees.scala:1335)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:95)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:87)\n[ERROR]     at scala.reflect.api.Trees$Traverser.apply(Trees.scala:2791)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:104)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:2836)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:2836)\n[ERROR]     at scala.collection.immutable.List.loop$1(List.scala:164)\n[ERROR]     at scala.collection.immutable.List.mapConserve(List.scala:180)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transformTrees(Trees.scala:2836)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1215)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itransform$1.apply(Trees.scala:1200)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itransform$1.apply(Trees.scala:1199)\n[ERROR]     at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2872)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1198)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2863)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2861)\n[ERROR]     at scala.collection.immutable.List.loop$1(List.scala:164)\n[ERROR]     at scala.collection.immutable.List.mapConserve(List.scala:180)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transformStats(Trees.scala:2861)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1209)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$$anonfun$repairOwners$1.apply(AssertionsMacro.scala:111)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$$anonfun$repairOwners$1.apply(AssertionsMacro.scala:111)\n[ERROR]     at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2872)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils.repairOwners(AssertionsMacro.scala:110)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair.repairOwners(AssertionsMacro.scala:80)\n[ERROR]     at org.scalatest.AssertionsMacro.genExpression(AssertionsMacro.scala:212)\n[ERROR]     at org.scalatest.AssertionsMacro.genMacroCode(AssertionsMacro.scala:235)\n[ERROR]     at org.scalatest.AssertionsMacro$.assert(AssertionsMacro.scala:292)\n[ERROR] \n[ERROR]     assert((doc.apis.map(api => api.path).toSet &\n[ERROR]           ^\n[ERROR] C:\\swagger\\swagger\\samples\\java-jaxrs\\src\\test\\scala\\ResourceListingIT.scala:76: error: exception during macro expansion: \n[ERROR] java.lang.NoSuchMethodError: org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.change(Lscala/reflect/internal/Symbols$Symbol;)V\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:92)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:87)\n[ERROR]     at scala.reflect.api.Trees$Traverser.traverseTrees(Trees.scala:2765)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itraverse$7.apply$mcV$sp(Trees.scala:1122)\n[ERROR]     at scala.reflect.api.Trees$Traverser.atOwner(Trees.scala:2785)\n[ERROR]     at scala.reflect.internal.Trees$class.itraverse(Trees.scala:1121)\n[ERROR]     at scala.reflect.internal.SymbolTable.itraverse(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itraverse(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Traverser.traverse(Trees.scala:2761)\n[ERROR]     at scala.reflect.internal.Trees$ChangeOwnerTraverser.traverse(Trees.scala:1335)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:95)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$ChangeOwnerAndModuleClassTraverser.traverse(AssertionsMacro.scala:87)\n[ERROR]     at scala.reflect.api.Trees$Traverser.apply(Trees.scala:2791)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:104)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:2836)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:2836)\n[ERROR]     at scala.collection.immutable.List.loop$1(List.scala:164)\n[ERROR]     at scala.collection.immutable.List.mapConserve(List.scala:180)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transformTrees(Trees.scala:2836)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1215)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1190)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1188)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itransform$1.apply(Trees.scala:1200)\n[ERROR]     at scala.reflect.internal.Trees$$anonfun$itransform$1.apply(Trees.scala:1199)\n[ERROR]     at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2872)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1198)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:100)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2863)\n[ERROR]     at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2861)\n[ERROR]     at scala.collection.immutable.List.loop$1(List.scala:164)\n[ERROR]     at scala.collection.immutable.List.mapConserve(List.scala:180)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transformStats(Trees.scala:2861)\n[ERROR]     at scala.reflect.internal.Trees$class.itransform(Trees.scala:1209)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:12)\n[ERROR]     at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2833)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$repairer$2$.transform(AssertionsMacro.scala:106)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$$anonfun$repairOwners$1.apply(AssertionsMacro.scala:111)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils$$anonfun$repairOwners$1.apply(AssertionsMacro.scala:111)\n[ERROR]     at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2872)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair$Utils.repairOwners(AssertionsMacro.scala:110)\n[ERROR]     at org.scalatest.AssertionsMacro$OwnerRepair.repairOwners(AssertionsMacro.scala:80)\n[ERROR]     at org.scalatest.AssertionsMacro.genExpression(AssertionsMacro.scala:212)\n[ERROR]     at org.scalatest.AssertionsMacro.genMacroCode(AssertionsMacro.scala:235)\n[ERROR]     at org.scalatest.AssertionsMacro$.assert(AssertionsMacro.scala:292)\n[ERROR] \n[ERROR]     assert(((xml \\ \"apis\").map(api => (api \\ \"path\").text).toSet &\n[ERROR]           ^\n[ERROR] 5 errors found\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 7.315 s\n[INFO] Finished at: 2014-09-25T11:43:21+05:30\n[INFO] Final Memory: 10M/25M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal net.alchim31.maven:scala-maven-plugin:3.1.5:testCompile (default) on project swagger-java-sample-app_2.10: wrap: org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1) -> [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal net.alchim31.maven:scala-maven-plugin:3.1.5:testCompile (default) on project swagger-java-sample-app_2.10: wrap: org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:216)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:120)\n    at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:347)\n    at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:154)\n    at org.apache.maven.cli.MavenCli.execute(MavenCli.java:582)\n    at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\n    at org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\nCaused by: org.apache.maven.plugin.MojoExecutionException: wrap: org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1)\n    at scala_maven.ScalaMojoSupport.execute(ScalaMojoSupport.java:468)\n    at scala_maven.ScalaTestCompileMojo.execute(ScalaTestCompileMojo.java:48)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:132)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\n    ... 19 more\nCaused by: org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1)\n    at org.apache.commons.exec.DefaultExecutor.executeInternal(DefaultExecutor.java:377)\n    at org.apache.commons.exec.DefaultExecutor.execute(DefaultExecutor.java:160)\n    at org.apache.commons.exec.DefaultExecutor.execute(DefaultExecutor.java:147)\n    at scala_maven_executions.JavaMainCallerByFork.run(JavaMainCallerByFork.java:100)\n    at scala_maven.ScalaCompilerSupport.compile(ScalaCompilerSupport.java:154)\n    at scala_maven.ScalaCompilerSupport.doExecute(ScalaCompilerSupport.java:104)\n    at scala_maven.ScalaMojoSupport.execute(ScalaMojoSupport.java:460)\n    ... 22 more\n[ERROR] \n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException\n. ",
    "varunmehra03": "Hi, Is this issue addressed ? I am facing the same issue and didn't find a solution yet [using 1.3.6 version]\n. This is a snippet from the Sample resource class with swagger annotations.\n@Component\n@Scope(\"request\")\n@Produces({ MediaType.APPLICATION_JSON, HalMediaType.APPLICATION_HAL_JSON })\n@Path(\"/rules\")\n@Api(value = \"/rules\", description = \"Rules resource\")\npublic class TestResource {\n@POST\n@Consumes(\"multipart/form-data\")\n@Path(\"/file\")\n@ApiOperation(value = \"Upload file \", notes = \"file can be uploaded using this api.\", response = RuleSet.class)\npublic RuleSet uploadFile(@FormDataParam(\"name\") String name, \n                              @FormDataParam(\"comment\") String description, \n                              @FormDataParam(\"file\") InputStream stream,\n                              @FormDataParam(\"file\") FormDataContentDisposition disposition) {\n......\n}\n}\nThis is the JSON generated. \n{\n   \"apiVersion\": \"1.0.0\",\n   \"swaggerVersion\": \"1.2\",\n   \"basePath\": \"/sample-app/api\",\n   \"resourcePath\": \"/rules\",\n   \"produces\":\n   [\n       \"application/json\",\n       \"application/hal+json\"\n   ],\n   \"apis\":\n   [\n       {\n           \"path\": \"/rules/file\",\n           \"operations\":\n           [\n               {\n                   \"method\": \"POST\",\n                   \"summary\": \"Upload a file \",\n                   \"notes\": \"file can be uploaded using this api.\",\n                   \"type\": \"RuleSet\",\n                   \"nickname\": \"uploadFile\",\n                   \"consumes\":\n                   [\n                       \"multipart/form-data\"\n                   ],\n                   \"authorizations\":\n                   {\n                   },\n                   \"parameters\":\n                   [\n                       {\n                           \"name\": \"body\",\n                           \"required\": false,\n                           \"type\": \"string\",\n                           \"paramType\": \"body\",\n                           \"allowMultiple\": false\n                       },\n                       {\n                           \"name\": \"body\",\n                           \"required\": false,\n                           \"type\": \"string\",\n                           \"paramType\": \"body\",\n                           \"allowMultiple\": false\n                       },\n                       {\n                           \"name\": \"body\",\n                           \"required\": false,\n                           \"type\": \"java.io.InputStream\",\n                           \"paramType\": \"body\",\n                           \"allowMultiple\": false\n                       },\n                       {\n                           \"name\": \"body\",\n                           \"required\": false,\n                           \"type\": \"FormDataContentDisposition\",\n                           \"paramType\": \"body\",\n                           \"allowMultiple\": false\n                       }\n                   ]\n               }\n           ]\n       }\n}\nHere, for the  \"type\": \"java.io.InputStream\", the  param type is \"body\". Instead, it should be a file browse. What exactly am i missing? I have searched through the groups and it seems people have reported this issue - https://groups.google.com/forum/#!msg/swagger-swaggersocket/wIp5CdNyWqs/c0BosfyG78gJ \n Not sure whether it has been fixed. \nI am using maven dependency for swagger-jersey-jaxrs_2.10 - version 1.3.6. And swagger-ui\n. ",
    "archie": "My mistake, works with master! Would be useful to have the version printed at the top of swagger-ui.js or as part of the filename. \nKeep the good job up! \n. ",
    "rcrooks": "Bob, I believe the documentation is getting updated this week.\nRobert Crooks | Director of Learning Services | Brightcove, Inc. || P: 617.245-5090 | M: 617.584.6128 | Twitter: http://twitter.com/BrightcoveLearn/ \nOn Aug 21, 2013, at 5:15 AM, Bob Fanger notifications@github.com wrote:\n\nThe changelog states \"Released swagger-spec 1.2\" but the Swagger Structure pages don't describe the new properties that are mentioned (briefly) in the Swagger Specification 1.2 Transition.\nThis makes it hard to upgrade swagger-php\nI'd like to use this github issue to track documentation progress of:\nResource listing\ninfo\nAPI Declaration\nproduces\nconsumes\nprotocols\nDataTypes\ndiscriminator\nextends\nSomething I missed?\nPS.\nA Wiki always show the latest version of a document. This can be problematic if you need to see an old version. Maybe adding a changelog footnote like php\", or duplicate the page and adding a \"v1.2\" suffix?\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "TrentBrown": "Darn. That's unfortunate. I wanted to organize my operations that way, too... \n. ",
    "SylvainJuge": "and it seems that values are not consistent between the two annotations, jersey allows to avoid the first '/' whereas swagger does not (and produces invalid path URLs).\nsee #576 \n. and it seems that values are not consistent between the two annotations, jersey allows to avoid the first '/' whereas swagger does not (and produces invalid path URLs).\nsee #576 \n. Is there any example available that shows when to choose a different path between Jersey resource path and Swagger specification ?\nMaybe that's probably confusing only while integrating with Jersey, and does not happen when using other frameworks, and thus making the path optional would not be the best choice.\n. Is there any example available that shows when to choose a different path between Jersey resource path and Swagger specification ?\nMaybe that's probably confusing only while integrating with Jersey, and does not happen when using other frameworks, and thus making the path optional would not be the best choice.\n. A use-case is enough, but having an example in the jersey2 sample could be\neven better :\nhttps://github.com/wordnik/swagger-core/tree/master/samples/java-jersey2\nOn Sun, May 25, 2014 at 2:10 PM, webron notifications@github.com wrote:\n\nYou're looking for an explicit example to see how the @Api can be\ndifferent\nthan the @Path or a use case for it?\nPersonally, I find that using consts in the @Path can help both for this\nand other use uses.\nOn Sun, May 25, 2014 at 12:41 PM, SylvainJuge notifications@github.comwrote:\n\nIs there any example available that shows when to choose a different\npath\nbetween Jersey resource path and Swagger specification ?\nMaybe that's probably confusing only while integrating with Jersey, and\ndoes not happen when using other frameworks, and thus making the path\noptional would not be the best choice.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/wordnik/swagger-core/issues/304#issuecomment-44126984>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/304#issuecomment-44129455\n.\n. A use-case is enough, but having an example in the jersey2 sample could be\neven better :\nhttps://github.com/wordnik/swagger-core/tree/master/samples/java-jersey2\n\nOn Sun, May 25, 2014 at 2:10 PM, webron notifications@github.com wrote:\n\nYou're looking for an explicit example to see how the @Api can be\ndifferent\nthan the @Path or a use case for it?\nPersonally, I find that using consts in the @Path can help both for this\nand other use uses.\nOn Sun, May 25, 2014 at 12:41 PM, SylvainJuge notifications@github.comwrote:\n\nIs there any example available that shows when to choose a different\npath\nbetween Jersey resource path and Swagger specification ?\nMaybe that's probably confusing only while integrating with Jersey, and\ndoes not happen when using other frameworks, and thus making the path\noptional would not be the best choice.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/wordnik/swagger-core/issues/304#issuecomment-44126984>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/304#issuecomment-44129455\n.\n. \n",
    "rgsage": "Thanks for your quick attention!\nI was able to get this working. I removed from my pom.xml:\n<dependency>\n        <groupId>com.wordnik</groupId>\n        <artifactId>swagger-servlet_2.10</artifactId>\n        <version>1.3.0</version>\n    </dependency>\nAnd replaced the following in my web.xml:\n```\n\nDefaultServletReaderConfig\ncom.wordnik.swagger.servlet.config.DefaultServletReaderConfig\n\napi.version\n2.0.0\n\n2\n\n\nApiDeclarationServlet\ncom.wordnik.swagger.servlet.listing.ApiDeclarationServlet\n\n\nApiDeclarationServlet\n/api-docs/*\n\n```\nWith this:\n<servlet>\n    <servlet-name>DefaultJaxrsConfig</servlet-name>\n    <servlet-class>com.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig</servlet-class>\n    <init-param>\n        <param-name>api.version</param-name>\n        <param-value>2.0.0</param-value>\n    </init-param>\n    <load-on-startup>2</load-on-startup>\n</servlet>\nNow I see (as expected):\n{ \n  \"apiVersion\" : \"2.0.0\",\n  \"swaggerVersion\" : \"1.2\"\n  \"apis\" : [ \n      { \n        \"path\" : \"/v2/entities\",\n        \"description\" : \"Operations on entities\"\n      },\n      { \n        \"path\" : \"/v2/relationships\",\n        \"description\" : \"Operations on relationships\"\n      }\n    ],\n}\n. Hmm. I just did fresh git pull on https://github.com/wordnik/swagger-core.git\nThen \n\nmvn clean install\nSuccess\n\nThen I changed ModelWithEnumProperty.java as above, and:\n\ncd modules/swagger-core\nmvn test -Dtest=-Dtest=EnumConversionTest\n\nBut I get:\nTests in error: \n  should read a model with an enum property(converter.EnumConversionTest): key not found: enumValue\nAm I missing a tweak to EnumConversionTest.scala? Thanks for your attention!\n. ",
    "SimonKaluza": "What official Play2 version and manually compiled swagger-core branch/tag combination can one use in the meantime to correctly build and a working java-play2 or scala-play2 sample?  I've tried a variety of different combinations and though some can compile, various issues have cropped up at run-time.\n. ",
    "phdoerfler": "I'm very interested in the answer to this question, too. What's the most up-to-date combination that actually compiles?\n. ",
    "andyoll": "Check this merge request:\n- https://github.com/wordnik/swagger-core/pull/327\n- Update swagger_play2 to use play-2.2.0 and swagger_core-1.2.5\n- this works nicely for me on a project\nSteps:\n- checkout master branch\n- copy change from https://github.com/andyoll/swagger-core/commit/5ca8acd0e66ea4943a901a3efa1d19f7710f2df8 to fix appName to being SBT compliant.\n- using Play 2.2.0, run 'play publish-local' in 'swagger-core/modules/swagger-play2'\n- in your play 2.2.0 app, update your dependencies in ./build.sbt to include:\n  -- \"com.wordnik\" %% \"swagger-play2\" % \"1.2.5-2\",\n. The reference above is about swagger-core-1.2.5 integrated with Play 2.2.0\nFor swagger-core-1.3 integrated with Play 2.2.0, please see my fork here:\n- https://github.com/andyoll/swagger-core/tree/play_2.2.0-swagger_1.3\n- I am not quite ready to make a pull request for this yet, I want to add\n  some more tests, but it does seem to work so far..\n. Pls give me a simple example to add to test/testdata/DogController, or one\nof the other test controllers in there.\nI'll create a bunch of test cases for existing functionality tomorrow (if\ntime allows), and then perhaps you can help me get the details right for\nsome more test-cases that need to be implemented next.\nthnx.\nOn 25 September 2013 15:51, tjslone notifications@github.com wrote:\n\nThanks for the work on your fork, I have been using it and it appears to\nbe working, except I can only get implicit parameters working, the regular\nparameters appear to be ignored. Have you had any trouble with these?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/307#issuecomment-25092425\n.\n. @OliverKK \n- there is no published version of:   \"com.wordnik\" %% \"swagger-play2\" % \"1.2.5-2\"\n- the code for it is waiting in this merge request:  https://github.com/wordnik/swagger-core/pull/327\n- in order to use it you must build from this version  (https://github.com/andyoll/swagger-core/tree/play_2.2.0)\n  -- checkout code and run:  'play publish-local'  (using play 2.2.0)\n  -- then your project will pick it up from your local repo.\n. @tjslone \nI have just pushed a bunch of changes to my fork (https://github.com/andyoll/swagger-core/tree/play_2.2.0-swagger_1.3) - parameter annotations are now supported, and the test coverage is increasing.\nI'm sure there will be some more to do, so I'd really appreciate any further feedback or failing test-cases you can give..\nStuff that I know of as work-in-progress:\n- building up thorough test coverage\n- updating the sample app to use this version and making sure it still works ok.\n- experimenting with more complex routes - I have only played with the most simple ones so far.\n- considering some of the other JAX-RS Param annotation types - thinking about how they might be used with Play - not got many ideas in this area for now\n- considering Auth, and how to best integrate it.\n- any other gaps to close in order to make it at least as functional as the previous versions - need to identify them..\n. Hi\n\nIn branch 'develop' there exist test cases showing it works nice for\n@ApiOperation( responseClass=\n[info]   + returns 'void' for 'responseClass' when not defined\n[info]   + adds 'responseClass' when defined\n[info]   + adds 'responseClass' correctly when defined as list\nfrom PlayAPIReaderSpec.\nThe API reader only gets into action for a class or method if it is\nreferenced in the routes file, so perhaps this is an issue?\nPerhaps post both routes file and controller code.\nRegarding @ApiErrors - this is not supported, but there is support\nfor: @ApiResponses\n   --  I wonder if I was right in assuming this was the right way to do\nthings with Swagger-core 1.3 ?  I may have got this wrong..\nThe example play2 app may be helpful to you in demonstrating what works.\nregards\nAndy\nOn 17 October 2013 10:23, OliverKK notifications@github.com wrote:\n\n@fehguy https://github.com/fehguy Updated right now.\nIt seems like some annotations are not recognized anymore.\n@ApiErrors\nand\n@ApiOperation(\nresponseClass=\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/307#issuecomment-26489901\n.\n. Does your routes file define routes to the User controller? - without this\nthe annotations are not read, cos the API is not available.\n\nOn 17 October 2013 17:28, OliverKK notifications@github.com wrote:\n\n@andyoll https://github.com/andyoll Thank you for the quick answer.\nFollowing the routes and controller code:\nroutes\nSwagger - Root Resources Listing\nGET /api-docs controllers.ApiHelpController.getResources\nGET /api-docs/user controllers.ApiHelpController.getResource(path =\n\"/api-docs/user\")\nindex path\nGET / controllers.Index.view\nController: User.scala\n@Path https://github.com/Path(\"/user\")\n@Api(value = \"/api-docs/user\", description = \"Manages requests for the\nuser part of the api.\")\n@Produces(Array(\"application/json\"))\nclass User @Inject https://github.com/Inject() (userService:\nUserService) extends Controller {\n@POST https://github.com/POST\n@Path https://github.com/Path(\"/user/{register}\")\n@ApiOperation(\nvalue = \"value\",\nnotes = \"notes\",\nresponse = classOf[Reg]\n)\n@ApiResponses(Array(\nnew ApiResponse(code = 110, message = \"Bad JSON format.\"),\n))\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/307#issuecomment-26524024\n.\n. So I made a guess that using the @controllers syntax in order to use a\nclass as a controller might be an issue, since I hadn't tried this. But\nI've added a bunch of test cases for this scenario, and they all pass so\nfar.\nNext Step - I'll add a class as controller to the play2 test app, and\nconfirm this works (or fix it if not). Hopefully I can get on to this this\nw/e, and let you know.\n\nIf you are in a hurry, I suggest you download the play2 test app, run it up\nto satisfy yourself it does what you'd expect, add a similar controller and\nroutes to what you are playing with, and see what happens. If this doesn't\nwork you should send me your additions to the test app that recreate this\nissue.\nOn 18 October 2013 07:42, OliverKK notifications@github.com wrote:\n\nYes it does:\nUser registration\nPOST /user/register @controllers.User.register()\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/307#issuecomment-26575077\n.\n. @OliverKK\nthe play2 module in branch 'develop' is 100% compatible with '@controllers\nsyntax in order to use a class as a controller'.\nthis pull request is full of test cases, and also an update to the\nscala-plauy2 sample app demonstrating this behaviour:\n- https://github.com/wordnik/swagger-core/pull/353\n\nI suggest you get the sample app working (from this pull request branch),\nand then consider what you are doing differently in your app.\nOn 19 October 2013 10:45, Andy Olliver andy@slyfrog.com wrote:\n\nSo I made a guess that using the @controllers syntax in order to use a\nclass as a controller might be an issue, since I hadn't tried this. But\nI've added a bunch of test cases for this scenario, and they all pass so\nfar.\nNext Step - I'll add a class as controller to the play2 test app, and\nconfirm this works (or fix it if not). Hopefully I can get on to this this\nw/e, and let you know.\nIf you are in a hurry, I suggest you download the play2 test app, run it\nup to satisfy yourself it does what you'd expect, add a similar controller\nand routes to what you are playing with, and see what happens. If this\ndoesn't work you should send me your additions to the test app that\nrecreate this issue.\nOn 18 October 2013 07:42, OliverKK notifications@github.com wrote:\n\nYes it does:\nUser registration\nPOST /user/register @controllers.User.register()\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/307#issuecomment-26575077\n.\n. Hi - I have working code against both rc1 and rc2. Let me know what you\nneed and I'll see if I can help.\nAndy\n\n\nsent from mobile device\nOn Sep 18, 2013 6:58 PM, \"Daniel Miranda\" notifications@github.com wrote:\n\nI don't know if I expressed myself badly. I need a snapshot of the current\nmaster repository so I can get the play 2.2 fixes: the stable version won't\nwork due to wrong dependencies.\nI found out there aren't any actual recent snapshots published, and I\nbelieve the version tag in the master branch should be updated, and if not\nan inconvenience, pushing a current snapshot would really help anyone\ntrying to work with play 2.2.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/323#issuecomment-24685609\n.\n. The code I worked on has:\n- swagger-core_2.10.0  1.2.3\n  I picked up code in master and did what was required to make it work.\n  I'll have a go tomorrow with 1.3.0\n\nsent from mobile device\nOn Sep 18, 2013 10:50 PM, \"Tony Tam\" notifications@github.com wrote:\n\n@andyoll https://github.com/andyoll you've migrated the play2 module to\nswagger-core 1.3?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/pull/323#issuecomment-24702397\n.\n. Just had a quick look at updating the play2 module to swagger-core 1.3.\nThere are a few core API changes that I don't yet understand enough, so it\ndid not give way immediately..\nThe main changes I see, that I need to learn more about are:\ncom.wordnik.swagger.core.AuthorizationFilter  -  this has disappeared in 1.3\ncom.wordnik.swagger.core.Documentation - this has disappeared in 1.3\ncom.wordnik.swagger.core.DocumentationOperation - this has disappeared in\n1.3\ncom.wordnik.swagger.core.DocumentationEndPoint - this has disappeared in 1.3\ncom.wordnik.swagger.core.utilJsonUtil.getJsonMapper() - this method has\ngone in 1.3\ncom.wordnik.swagger.core.ApiSpecParserTrait  - this has disappeared in 1.3\ncom.wordnik.swagger.core.ApiMethodType - this has disappeared in 1.3\n\nany hints on what to use instead?\nOn 18 September 2013 23:11, Andy Olliver andy@slyfrog.com wrote:\n\nThe code I worked on has:\n- swagger-core_2.10.0  1.2.3\n  I picked up code in master and did what was required to make it work.\n  I'll have a go tomorrow with 1.3.0\nsent from mobile device\nOn Sep 18, 2013 10:50 PM, \"Tony Tam\" notifications@github.com wrote:\n\n@andyoll https://github.com/andyoll you've migrated the play2 module\nto swagger-core 1.3?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/pull/323#issuecomment-24702397\n.\n. Thanks Tony\n- I do now have working code for Play-2.2.0 using Swagger 1.3\n- For now without any integration to authentication\n- I'm now thinking about test cases\n- Will check code in to my fork v.soon to get some review.\n\n\nOn 20 September 2013 17:06, Tony Tam notifications@github.com wrote:\n\nHi, the models are now all in scala, and are case classes here:\nhttps://github.com/wordnik/swagger-core/blob/master/modules/swagger-core/src/main/scala/com/wordnik/swagger/model/SwaggerModels.scala\nThe initialization process is much simpler now, take a look at the java\nquickstart and it explains it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/pull/323#issuecomment-24821251\n.\n. I've got swagger-play2 working nicely with Play 2.2.0\nChanges in this pull request:  https://github.com/wordnik/swagger-core/pull/327\n. hi noboomu\nYes - my bad - I used a diff value for appName that SBT was not happy with.\nPls see initial note on merge request - we do need to think about correct appName / version for this merge. Current master still uses same name / version of the last public release. I've now reverted to previous appName, but done something nasty with the version - not sure what is best..\n. this is the commit that got rid of it:\nhttps://github.com/wordnik/swagger-core/commit/a9a9adef8e92f741b07bc21143f61c142415b568\n\nany deployed builds of this branch before that commit will have the problem.\nI added it - so apologies to all who have suffered pain as a result..\nOn 27 November 2013 17:52, Dragisa Krsmanovic notifications@github.comwrote:\n\nCan you figure where mockito-all comes from ?\nIt's definitely not in swagger-play2 or swagger-play2-utils 1.3.1. You can\nsee pom file in Maven repo.\nTo get dependency report, you can try sbt-dependency-graph plugin.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/348#issuecomment-29405260\n.\n. \n",
    "tjslone": "Thanks for the work on your fork, I have been using it and it appears to be working, except I can only get implicit parameters working, the regular parameters appear to be ignored. Have you had any trouble with these?\n. No problem - here is an example of what I was using:\n. This example caused there to be no parameters returned\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  // Delete a user\n  @ApiOperation(value = \"Delete\", notes = \"Deletes a user\", httpMethod = \"DELETE\")\n  def delete(\n    @ApiParam(name = \"userId\", value = \"userId\")@PathParam(\"userId\") userId: String)\n    = Action.async { implicit request =>\n    val FutureDeleteUserResult = UserModel.delete(userId)\n    FutureDeleteUserResult.map{\n      case result: Boolean => { if(result) Ok(\"User Deleted\") else BadRequest(\"Delete failed\") }\n    } recover {\n      case iu: InvalidUserException => Unauthorized(iu.getMessage())\n      case ex: QueryErrorException => ServiceUnavailable(ex.getMessage())\n      case se: ServerNotAvailable => ServiceUnavailable(se.getMessage())\n      case _ : Exception => BadRequest(\"Unknown error\")\n    }\n  }\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n. Sorry - I forgot to simplify it!!\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Delete a user\n@ApiOperation(value = \"Delete\", notes = \"Deletes a user\", httpMethod = \"DELETE\")\ndef delete(\n@ApiParam(name = \"userId\", value = \"userId\")@PathParam(\"userId\") userId: String)\n= Action.async { implicit request =>\n  Ok\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n. Please could we get this published onto the maven repository? Thanks\n. @fehguy Thanks very much for the fast response! Much appreciated.\n. ",
    "OliverKK": "I included:  \"com.wordnik\" %% \"swagger-play2\" % \"1.2.5-2\"\n[trace] Stack trace suppressed: run last *:update for the full output.\nerror sbt.ResolveException: unresolved dependency: com.wordnik#swagger-play2_2.10;1.2.5-2: not found\n[error] Total time: 6 s, completed 26.09.2013 13:50:18\nIt seems like this dependency con't be found.\nThis is my workaround to get my project compiled.\n\"com.wordnik\" %% \"swagger-play2\" % \"1.2.5\" exclude(\"org.scala-stm\", \"scala-stm_2.10.0\"),\n. @andyoll \nThank your for the bunch of changes. Just updated today.\nI'm testing the 1.2.6-SNAPSHOT (\"com.wordnik\" %% \"swagger-play2\" % \"1.2.6-SNAPSHOT\",) \nin my Play2.2 / Scala project.\nFirst thing i saw was following messages. \n[error] c.w.s.c.u.TypeUtil$ - Unable to load class double\n[error] c.w.s.p.HelpApi - Skipping model play.api.libs.json.JsValue. Did not find any public fields or bean-properties in this model. If its a scala class its fields might not have @BeanProperty annotation added to its fields.\n. @fehguy @andyoll  Updated right now to 1.3.1-SNAPSHOT\nThe [error] messages turned obviously to [info] which is very good :)\nSwagger returns currently:\n\"Unable to read api 'user' from path http://localhost:9000/api-docs/api-docs/user (server returned Not Found)\"\nThe path \"...api-docs/api-docs...\" seems to be wrong...\n. @andyoll Thank you for the quick answer.\nFollowing the routes and controller code:\nroutes\nSwagger - Root Resources Listing\nGET        /api-docs                          controllers.ApiHelpController.getResources\nGET        /api-docs/user                   controllers.ApiHelpController.getResource(path = \"/api-docs/user\")\nindex path\nGET        /                                  controllers.Index.view\nController: User.scala\n@Path(\"/user\")\n@Api(value = \"/api-docs/user\", description = \"Manages requests for the user part of the api.\")\n@Produces(Array(\"application/json\"))\nclass User @Inject() (userService: UserService) extends Controller {\n@POST\n  @Path(\"/user/{register}\")\n  @ApiOperation(\n    value = \"value\",\n    notes = \"notes\",\n    response = classOf[Reg]\n)\n@ApiResponses(Array(\n    new ApiResponse(code = 110, message = \"Bad JSON format.\"),\n  ))\n. @andyoll Yes i define a route to my user controller.\nUser registration\nPOST        /user/register                    @controllers.User.register()\nThe url's  \"http://localhost:9000/api-docs\" and \"http://localhost:9000/api-docs/user\" deliver valid json. \n. @fehguy @andyoll \nThank you for caring about this issue and pushing to maven central.\nSwagger 1.3.1 works very very fine with play 2.2.\n. ",
    "seanadkinson": "Subresource classes aren't annotated with @Path at the class level, only the method level.  Is this bug related to the issue of appending api.value to the path for a sub-resource?\nFor this resource:\n```\n@Path(\"/items\")\n@Api(\"/items\")\npublic class ItemsResource {\n@GET\n@ApiOperation(...)\npublic List<Item> getItems();\n\n@Path(\"/{id}\")\npublic ItemSubResource getItem(Integer id);\n\n}\n```\nAnd this sub-resource:\n```\npublic class ItemSubResource {\n@GET\n@ApiOperation\npublic Item getItem();\n\n@PUT\n@ApiOperation\npublic void updateItem();\n\n}\n```\nI would expect these paths:\nGET /items\nGET /items/{id}\nPUT /items/{id}\nCurrently, I have to annotate the ItemSubResource with @Api(\"\"), or else it doesn't get picked up.  If I annotate it with @Api(\"/\"), an extra slash gets added to each api operation, like this:\nGET /items/\nGET /items//{id}\nPUT /items//{id}\n. For the resource method that returns the subresource, is the subresource declared as the return value in the method signature?  Swagger uses the method's return value and checks if it is annotated with @Api before visiting it.\n. Yeah, I wish the implementation was different for this reason.  It is also nice to be able to return a Response object on the method, and specify the sub-resource class as the entity.  This lets us return error responses or continue to the sub-resource (think permissions to a certain sub-resource).\nAnyway, I was able to get around the injection aspect doing this:\n@Path(\"/{id}\")\npublic ItemSubResource getItem(@PathParam(\"id\") final Integer id,\n                               @Context @InjectParam(\"itemSubResource\") ItemSubResource itemSubResource) {\n    itemSubResource.setId(id);\n    return itemSubResource;\n}\nThis will allow Jersey to manage the lifecycle of the sub-resource and inject the things it needs.\n. Issues with the sub-resource spec generation can be seen in the samples in my clone at https://github.com/seanadkinson/swagger-core/tree/master/samples/java-jaxrs-subresource\n. ",
    "emilesvt": "Is this really working for you?  I'm working with jersey 2.3.1, swagger 1.3.0, and using the com.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig servlet and this does NOT work.  Sub-resources are not showing up at all even with the @Api(\"\") or the @Api(\"/\").\nMatter of fact, sub-resources don't show up at ALL unless I provide a @Path on them.\n. No, parameterized Class is the return type and this is required (for us) to allow Jersey to manage the lifecycle of the sub-resource (and perform injection, etc).\n. @seanadkinson Thanks for the tip, when I'm in the office today I'll take a look at the suggestion you provide for allowing Jersey to manage the sub-resource lifecycle. \n. @seanadkinson Thanks for the tip, that works great and is an acceptable solution for us.\n. No it didn't do anything...\n. I've taken a look at the scala code and reproduced the same issue in Java (I'm not a Scala guy).  I'm not sure if it's a true \"defect\" or a requirements miss but it is a problem.  Line 272 of JaxrsApiReader.scala is the offending line.\n. +1\nWe're using implicit parameters to get this support now, but would be nice to not have to copy and paste boilerplate all over the place.\n. @webron Thanks for the thorough and very fast response.  I'll answer your last question, but first want to give some background information.\nWe're following the paradigm that uses mime type for versioning of our resources.  I'm sure you're aware of this paradigm, but if not, you can find the RESTful holy war of how versioning of web services can be done (url, mime type, http header, etc) by a simple google search.  The organization I'm currently working for decided on mime type and our JAX-RS implementation, Jersey 2.7, supports this well (it uses http method + path + mime type to uniquely identify a resource).\nSo with that basic information, you can see that application/vnd.com.mycompany+v1+json and application/vnd.com.mycompany+v2+json actually return 2 different representations of the resource (entity).  The resource itself may have similar logic and code, but the entity that is returned/used in v2 could be significantly different than what is returned in v1 (ie, the removal of or the rename of attribute), so we version them to prevent breaking existing clients.  In an organization as large as my current client, getting clients for their APIs to move to the \"latest version\" is a bit of a challenge so we'll need to support several versions simultaneously.\n. > First thing's first though - do you agree there should be two different endpoints to describe the different api versions?\nThat's part of the holy war and with the mime type versioning paradigm, the answer is \"no\".  Here are some supporting links:\nhttp://codebetter.com/howarddierking/2012/11/09/versioning-restful-services/\nhttp://martinfowler.com/articles/enterpriseREST.html\nParticularly (in regards to content negotation):\n\nThis appeals to purist RESTafarians, and is immune to the flaw mentioned above with URL versioning, as the ultimate consumer gets to decide which version to request.\n\nhttp://stackoverflow.com/questions/278686/versioning-restful-services\nAll sorts of stuff there...\nAlso, some clarification on something you mentioned:\n\nNow, theoretically, you can create two separate resource listings and api declarations (swagger terms) to include the relevant pieces and you'd be done. What concerns me is that if they're included in the same resource file in your code, it may be more difficult to separate.\n\nWe actually have the resources defined in two separate java classes, in different packages (the names just happened to be the same).  I can provide the example in the original post but change the class names:\njava\n@Path(\"bankThings\")\n@Api(value = \"/bankThings\", description = \"Bank Thing Operations\")\n@Produces({\"application/vnd.mycompany+v1+json\"})\n@Consumes({\"application/vnd.mycompany+v1+json\"})\npublic class BankThingResourceV1  {\nand\njava\n@Path(\"bankThings\")\n@Api(value = \"/bankThings\", description = \"Bank Thing Operations\")\n@Produces({\"application/vnd.mycompany+v2+json\"})\n@Consumes({\"application/vnd.mycompany+v2+json\"})\npublic class BankThingResourceV2  {\nWith what you state regarding the Swagger spec (method + path uniquely identifies), we'd still have the same issue.\nWe actually found we can get around this issue if we use a single resource file and add @Consumes/@Produces on each individual method (I've tried this and it works).  However, having a single monolithic Resource (java class) that defines all our different versions of path+method is less than desirable.\n. My client would be okay with multiple documentation endpoints for the API (1:1 with versions available), how do I accomplish that when the resources are deployed together int he same deployable unit?\n. ",
    "onaimad": "Any news on this?\nI have a similar issue as @seanadkinson but in my case annotating the subresource with @Api(\"\") is not an option as I need to access directly also the subresource. Meaning my subresource already has an annotation like @Api(\"/item\") but it's referred as /{id} from the parent resource \n. ",
    "SimonHGR": "This is affecting me too. I find that given:\nGET /users\nA subresource responding to /users/{id} and returning a subresource that offers details of single users\nmy GET /users is shown as taking a (required!) id path param. The client actually seems to work (other parameters are handled correctly, and the request is submitted OK. However, and I have no clue if this is related, it also shows the request URI as null in the UI (clearly that's not true, since the UI sent the request correctly and got a meaningful response).\n. ",
    "jtsimikas": "It seems that header fields are being sent like QueryParams.  So they are included in the URL instead of of being part of HTTP HEADER.  \nSo they show up like this..\nhttp://www.domain.com?HeaderParam1=xx&HeaderParam2=xx\nI am using Jersey REST services to annotate the parameters.\n. Before I do that, can you tell me is the supportHeaderParams below supposed to be set to true?\nI tried setting this to true, but it didn't seem like it made a difference?\n$(function () {\n        window.swaggerUi = new SwaggerUi({\n            discoveryUrl: \"/rest/v1/api-docs\",\n            apiKey: \"special-key\",\n            dom_id: \"swagger-ui-container\",\n            supportHeaderParams: false,\n            supportedSubmitMethods: ['get', 'post', 'put'],\n            onComplete: function (swaggerApi, swaggerUi) {\n                if (console) {\n. Hi again.  Sorry about the previous post.  Actually It seems that changing supportHeaderParams to true did in fact fix the problem.\n. ",
    "cjioh": "Nope. Please check swagger.js, function on line 824. \n. Its pretty weird) \nMy result is: \n\nAnd here is request details: \n\nI've try it on different machines. Same result.\n. Now in petstore everything is fine. I'll try to update my swagger-ui later. Thanks in advance.\n. ",
    "mojidabckuu": "I also faced with this issue even now if you go to petstore. Swagger code users 2 places of url building. If you put string inside url prompt without http it will add extra. In second case it adds self.sheme in 4096 line inside swagger-ui.js.\n\n\n. ",
    "st411ar": "I faced with this issue again at the Swagger Hub in a formData string parameter of the content-type \"application/x-www-form-urlencoded\". String \"% @\" are encoded to \"%2525%2520%2540\" instead of \"%25%20%40\".\n\n\n. ",
    "mikemil": "If I want to try option 2 - which file are we talking about and which path?  I copied the samples/no-server as a starting point, so are we talking about the 'path' in the resources.json file?   The reason I ask is that the sample has an array of 1 in the resources.json yet on the index page I believe there were 3 api.\n. Thanks, I was able to use that to get it working.\n. Awesome response time - thanks.  Looks like I have it correct - mostly.  Next question is how to control the 'parameter type content' dropdown.   Looks like by default you get the application/json but our api supports the body as either json or xml - so I need to get 'application/xml' added to the dropdown?\nThanks for the help!\n. I added the below but still only seeing application/json in the dropdown?   Is this the correct placement?\n\"parameters\": [\n            {\n              \"name\": \"body\",\n              \"description\": \"Customer object\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"Customer\",\n              \"paramType\": \"body\",\n              \"consumes\" : [\n                 \"application/json\",\n                 \"application/xml\"\n              ]\n            }\n. Awesome, will move that block out and that should do it!\nSent from my iPhone\n\nOn Dec 3, 2013, at 5:38 PM, \"Tony Tam\" notifications@github.com wrote:\nalmost. The spec says that consumes, produces belong to the operation, not the parameters. So for petstore:\n\"operations\": [\n  {\n    \"method\": \"POST\",\n    \"summary\": \"Add a new pet to the store\",\n    \"notes\": \"\",\n    \"type\": \"void\",\n    \"nickname\": \"addPet\",\n    \"consumes\": [\n      \"application/json\",\n      \"application/xml\"\n    ],\n    \"parameters\": [\n      {\n        \"name\": \"body\",\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"required\": true,\n        \"type\": \"Pet\",\n        \"paramType\": \"body\"\n      }\n    ],\n    \"responseMessages\": [\n      {\n        \"code\": 405,\n        \"message\": \"Invalid input\"\n      }\n    ]\n  }\n\u2014\nReply to this email directly or view it on GitHub.\n. Perfect - thanks for all the help - love the tool.  \n\nCan't wait to get the code base automated so I can stop hand-typing the json.  :-)\n. We are running in Java, using JBoss 4.2.3 with RestEasy 2.3.5.\n. ",
    "getjatin2010": "Hi, Any Solution we got on this ? . Hi, Any Solution we got on this ? . ",
    "jknova": "I added a fix to my own repo:\njknova/swagger-core@85ee010ced2d18a030b4f9f6f58e36cd8198c50b\nSeems to be working...\n. I wrote a fix in my own repo in the meantime:\njknova/swagger-core@85ee010ced2d18a030b4f9f6f58e36cd8198c50b\n. Hello,\nFeel free to correct me if I'm wrong, but I think this might still be an issue. ApiModel.discriminator has an empty string as a default value, so it will still choose ApiModel's discriminator over JsonTypeInfo.property.\nAnd I think ApiModel.subTypes suffers from the same problem as well.\nI made the following change in my repo: 9ebafcb977c5d29fb35ee865dd9a77bae2e5f0c1\nPlease let me know if I've missed anything. Thanks\n. I'm using 1.3.0. I see the enum array for other properties that are an enum type, just not when they are of type List<SomeEnum>\n. ",
    "thepont": "I am having the same issue with @XmlElement annotations, swagger seems to be ignoring and still using the old name, Looking at your changes it appears to be the same bug.\n. ",
    "rohit321": "link1  based resources\njson\n{\n  \"apiVersion\": \"1.0.0\",\n  \"swaggerVersion\": \"1.2\",\n  \"apis\": [\n    {\n      \"path\": \"/agent.json\",\n      \"description\": \"BusinessWorks Agent API\"\n    },\n    {\n      \"path\": \"/machine.json\",\n      \"description\": \"Information about machines in the enterprise\"\n    },\n    {\n      \"path\": \"/domains.json\",\n      \"description\": \"List Domains as resource links.\"\n    },\n    {\n      \"path\": \"/appspace.json\",\n      \"description\": \"AppSpace operations\"\n    },\n    {\n      \"path\": \"/domain.json\",\n      \"description\": \"Domain operations\"\n    }\n  ]\n}\njson\n{\n  \"apiVersion\": \"1.0.0\",\n  \"swaggerVersion\": \"1.2\",\n  \"basePath\": \"\",\n  \"resourcePath\": \"/agent.json\",\n  \"produces\": [\n    \"application/json\"\n  ],\n  \"apis\": [\n    {\n      \"path\": \"/agent.json/info\",\n      \"operations\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"Get information about the BusinessWorks Agent\",\n          \"notes\": \"Provide information about the bwagent that is receiving the request.\",\n          \"responseClass\": \"AgentInfo\",\n          \"nickname\": \"getInfo\",\n          \"parameters\": [],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Server Error\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"/agent.json/infos\",\n      \"operations\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"Get information about BusinessWorks Agents matching a given pattern\",\n          \"notes\": \"The name argument is an optional query parameter. The response is a Collection of AgentInfo objects.\",\n          \"responseClass\": \"List[AgentInfo]\",\n          \"nickname\": \"getInfos\",\n          \"parameters\": [\n            {\n              \"name\": \"name\",\n              \"description\": \"Query parameter. Name pattern.\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"query\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Server Error\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"models\": {\n    \"AgentInfo\": {\n      \"id\": \"AgentInfo\",\n      \"name\": \"AgentInfo\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"adminMode\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"machineName\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"state\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"tibcoHome\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"version\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"pid\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"internalPort\": {\n          \"type\": \"Integer\",\n          \"required\": false\n        },\n        \"httpPort\": {\n          \"type\": \"Integer\",\n          \"required\": false\n        },\n        \"configState\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"uptime\": {\n          \"type\": \"long\",\n          \"required\": false\n        },\n        \"httpHost\": {\n          \"type\": \"string\",\n          \"required\": false\n        }\n      }\n    }\n  }\n}\njson\n{\n  \"apiVersion\": \"1.0.0\",\n  \"swaggerVersion\": \"1.2\",\n  \"basePath\": \"\",\n  \"resourcePath\": \"/machine.json\",\n  \"produces\": [\n    \"application/json\"\n  ],\n  \"apis\": [\n    {\n      \"path\": \"/machine.json/{name}\",\n      \"operations\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"Find a machine by name\",\n          \"notes\": \"\",\n          \"responseClass\": \"Machine\",\n          \"nickname\": \"getMachine\",\n          \"parameters\": [\n            {\n              \"name\": \"name\",\n              \"description\": \"Name of the machine\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            },\n            {\n              \"name\": \"status\",\n              \"description\": \"Query parameter: Flag to indicate whether to include the status or not\",\n              \"defaultValue\": \"false\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"boolean\",\n              \"paramType\": \"query\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 400,\n              \"message\": \"Name was not supplied\"\n            },\n            {\n              \"code\": 404,\n              \"message\": \"Machine not found\"\n            },\n            {\n              \"code\": 500,\n              \"message\": \"Internal Server Error\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"/machine.json\",\n      \"operations\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"List all machines matching a filter\",\n          \"notes\": \"Use to list all discovered machines\",\n          \"responseClass\": \"List[Machine]\",\n          \"nickname\": \"getMachines\",\n          \"parameters\": [\n            {\n              \"name\": \"filter\",\n              \"description\": \"Query parameter: Filter for machine names\",\n              \"defaultValue\": \"*\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            },\n            {\n              \"name\": \"status\",\n              \"description\": \"Query parameter: Flag to indicate whether to include the status or not\",\n              \"defaultValue\": \"false\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"boolean\",\n              \"paramType\": \"query\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Server Error\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"models\": {\n    \"Machine\": {\n      \"id\": \"Machine\",\n      \"name\": \"Machine\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"oS\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"oSPatchLevel\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"agents\": {\n          \"type\": \"java.util.Collection<com.tibco.bw.thor.management.model.domain.AgentInfo>\",\n          \"required\": false\n        },\n        \"installations\": {\n          \"type\": \"java.util.Collection<com.tibco.bw.thor.management.model.domain.Installation>\",\n          \"required\": false\n        },\n        \"ipAddress\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"appNodes\": {\n          \"type\": \"java.util.Collection<com.tibco.bw.thor.management.model.domain.ApplicationNode>\",\n          \"required\": false\n        }\n      }\n    }\n  }\n}\nlink2 based  resources\njson\n{\n  \"apiVersion\": \"1.0.0\",\n  \"swaggerVersion\": \"1.2\",\n  \"apis\": [\n    {\n      \"path\": \"/app.json\",\n      \"description\": \"Operations on Applications\"\n    },\n    {\n      \"path\": \"/bundle.json\",\n      \"description\": \"Bundle level operations on a AppNode\"\n    },\n    {\n      \"path\": \"/version.json\",\n      \"description\": \"Provide the version of the AppNode\"\n    },\n    {\n      \"path\": \"/framework.json\",\n      \"description\": \"AppNode operations\"\n    },\n    {\n      \"path\": \"/lib.json\",\n      \"description\": \"Operations on Libraries\"\n    }\n  ]\n}\njson\n{\n  \"apiVersion\": \"1.0.0\",\n  \"swaggerVersion\": \"1.2\",\n  \"basePath\": \"\",\n  \"resourcePath\": \"/app.json\",\n  \"produces\": [\n    \"application/json\"\n  ],\n  \"apis\": [\n    {\n      \"path\": \"/app.json/{name}/{version}/start\",\n      \"operations\": [\n        {\n          \"method\": \"POST\",\n          \"summary\": \"Starts an application identified by name and version\",\n          \"notes\": \"\",\n          \"responseClass\": \"void\",\n          \"nickname\": \"start\",\n          \"consumes\": [\n            \"application/json\"\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"login\",\n              \"description\": \"Header Parameter; Login used by the AppNode when started\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"header\"\n            },\n            {\n              \"name\": \"name\",\n              \"description\": \"Path Parameter; Name of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            },\n            {\n              \"name\": \"version\",\n              \"description\": \"Path Parameter; Version of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Error\"\n            },\n            {\n              \"code\": 401,\n              \"message\": \"The login does not match the login of the AppNode\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"/app.json/state\",\n      \"operations\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"Returns the runtime state of an application\",\n          \"notes\": \"\",\n          \"responseClass\": \"ApplicationRuntimeStateList\",\n          \"nickname\": \"getState\",\n          \"parameters\": [\n            {\n              \"name\": \"name\",\n              \"description\": \"Query Parameter; Name of the application\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"query\"\n            },\n            {\n              \"name\": \"version\",\n              \"description\": \"Query Parameter; Version of the application\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"query\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Error\"\n            },\n            {\n              \"code\": 404,\n              \"message\": \"The given application was not found\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"/app.json/{name}/{version}/resume\",\n      \"operations\": [\n        {\n          \"method\": \"POST\",\n          \"summary\": \"Resumes job processing of a previously paused application identified by name and version\",\n          \"notes\": \"\",\n          \"responseClass\": \"void\",\n          \"nickname\": \"resume\",\n          \"consumes\": [\n            \"application/json\"\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"login\",\n              \"description\": \"Header Parameter; Login used by the AppNode when started\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"header\"\n            },\n            {\n              \"name\": \"name\",\n              \"description\": \"Path Parameter; Name of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            },\n            {\n              \"name\": \"version\",\n              \"description\": \"Path Parameter; Version of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Error\"\n            },\n            {\n              \"code\": 401,\n              \"message\": \"The login does not match the login of the AppNode\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"/app.json/{name}/{version}/stop\",\n      \"operations\": [\n        {\n          \"method\": \"POST\",\n          \"summary\": \"Stops an application identified by name and version\",\n          \"notes\": \"\",\n          \"responseClass\": \"void\",\n          \"nickname\": \"stop\",\n          \"consumes\": [\n            \"application/json\"\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"login\",\n              \"description\": \"Header Parameter; Login used by the AppNode when started\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"header\"\n            },\n            {\n              \"name\": \"name\",\n              \"description\": \"Path Parameter; Name of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            },\n            {\n              \"name\": \"version\",\n              \"description\": \"Path Parameter; Version of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Error\"\n            },\n            {\n              \"code\": 401,\n              \"message\": \"The login does not match the login of the AppNode\"\n            },\n            {\n              \"code\": 404,\n              \"message\": \"The application was not found\"\n            }\n          ]\n        },\n        {\n          \"method\": \"GET\",\n          \"summary\": \"Previews the stop of an application identified by name and version.\",\n          \"notes\": \"\",\n          \"responseClass\": \"List[string]\",\n          \"nickname\": \"stop\",\n          \"parameters\": [\n            {\n              \"name\": \"name\",\n              \"description\": \"Path Parameter; Name of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            },\n            {\n              \"name\": \"version\",\n              \"description\": \"Path Parameter; Version of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Error\"\n            },\n            {\n              \"code\": 404,\n              \"message\": \"The application was not found\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"/app.json/{name}/{version}\",\n      \"operations\": [\n        {\n          \"method\": \"POST\",\n          \"summary\": \"Installs an application identified by name and version\",\n          \"notes\": \"\",\n          \"responseClass\": \"ApplicationRuntimeState\",\n          \"nickname\": \"install\",\n          \"consumes\": [\n            \"application/json\"\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"login\",\n              \"description\": \"Header Parameter; Login used by the AppNode when started\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"header\"\n            },\n            {\n              \"name\": \"name\",\n              \"description\": \"Path Parameter; Name of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            },\n            {\n              \"name\": \"version\",\n              \"description\": \"Path Parameter; Version of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Error\"\n            },\n            {\n              \"code\": 401,\n              \"message\": \"The login does not match the login of the AppNode\"\n            }\n          ]\n        },\n        {\n          \"method\": \"DELETE\",\n          \"summary\": \"Uninstalls an application identified by name and version\",\n          \"notes\": \"\",\n          \"responseClass\": \"void\",\n          \"nickname\": \"uninstall\",\n          \"parameters\": [\n            {\n              \"name\": \"login\",\n              \"description\": \"Header Parameter; Login used by the AppNode when started\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"header\"\n            },\n            {\n              \"name\": \"name\",\n              \"description\": \"Path Parameter; Name of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            },\n            {\n              \"name\": \"version\",\n              \"description\": \"Path Parameter; Version of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Error\"\n            },\n            {\n              \"code\": 401,\n              \"message\": \"The login does not match the login of the AppNode\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"/app.json/{name}/{version}/pause\",\n      \"operations\": [\n        {\n          \"method\": \"POST\",\n          \"summary\": \"Pauses all jobs of an application identified by name and version\",\n          \"notes\": \"\",\n          \"responseClass\": \"void\",\n          \"nickname\": \"pause\",\n          \"consumes\": [\n            \"application/json\"\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"login\",\n              \"description\": \"Header Parameter; Login used by the AppNode when started\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"header\"\n            },\n            {\n              \"name\": \"name\",\n              \"description\": \"Path Parameter; Name of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            },\n            {\n              \"name\": \"version\",\n              \"description\": \"Path Parameter; Version of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Error\"\n            },\n            {\n              \"code\": 401,\n              \"message\": \"The login does not match the login of the AppNode\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"/app.json/{name}/{version}/acceptnew\",\n      \"operations\": [\n        {\n          \"method\": \"POST\",\n          \"summary\": \"Resume to accept new jobs for an application identified by name and version\",\n          \"notes\": \"\",\n          \"responseClass\": \"void\",\n          \"nickname\": \"acceptnew\",\n          \"consumes\": [\n            \"application/json\"\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"login\",\n              \"description\": \"Header Parameter; Login used by the AppNode when started\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"header\"\n            },\n            {\n              \"name\": \"name\",\n              \"description\": \"Path Parameter; Name of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            },\n            {\n              \"name\": \"version\",\n              \"description\": \"Path Parameter; Version of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Error\"\n            },\n            {\n              \"code\": 401,\n              \"message\": \"The login does not match the login of the AppNode\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"/app.json/{name}/{version}/rejectnew\",\n      \"operations\": [\n        {\n          \"method\": \"POST\",\n          \"summary\": \"Reject new jobs for an application identified by name and version\",\n          \"notes\": \"\",\n          \"responseClass\": \"void\",\n          \"nickname\": \"rejectnew\",\n          \"consumes\": [\n            \"application/json\"\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"login\",\n              \"description\": \"Header Parameter; Login used by the AppNode when started\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"header\"\n            },\n            {\n              \"name\": \"name\",\n              \"description\": \"Path Parameter; Name of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            },\n            {\n              \"name\": \"version\",\n              \"description\": \"Path Parameter; Version of the application\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"path\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Error\"\n            },\n            {\n              \"code\": 401,\n              \"message\": \"The login does not match the login of the AppNode\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"models\": {\n    \"ApplicationRuntimeState\": {\n      \"id\": \"ApplicationRuntimeState\",\n      \"name\": \"ApplicationRuntimeState\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"state\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"components\": {\n          \"type\": \"Array\",\n          \"required\": false,\n          \"items\": {\n            \"$ref\": \"ComponentRuntimeState\"\n          }\n        },\n        \"version\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"modules\": {\n          \"type\": \"Array\",\n          \"required\": false,\n          \"items\": {\n            \"$ref\": \"ModuleInfo\"\n          }\n        },\n        \"details\": {\n          \"type\": \"Array\",\n          \"required\": false,\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"ComponentRuntimeState\": {\n      \"id\": \"ComponentRuntimeState\",\n      \"name\": \"ComponentRuntimeState\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"state\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"unresolvedDependencies\": {\n          \"type\": \"Array\",\n          \"required\": false,\n          \"items\": {\n            \"$ref\": \"Dependency\"\n          }\n        }\n      }\n    },\n    \"ModuleInfo\": {\n      \"id\": \"ModuleInfo\",\n      \"name\": \"ModuleInfo\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"state\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"version\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"details\": {\n          \"type\": \"Array\",\n          \"required\": false,\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"ApplicationRuntimeStateList\": {\n      \"id\": \"ApplicationRuntimeStateList\",\n      \"name\": \"ApplicationRuntimeStateList\",\n      \"properties\": {\n        \"states\": {\n          \"type\": \"Array\",\n          \"required\": false,\n          \"items\": {\n            \"$ref\": \"ApplicationRuntimeState\"\n          }\n        }\n      }\n    },\n    \"Dependency\": {\n      \"id\": \"Dependency\",\n      \"name\": \"Dependency\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"state\": {\n          \"type\": \"string\",\n          \"required\": false\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"required\": false\n        }\n      }\n    }\n  }\n}\njson\n{\n  \"apiVersion\": \"1.0.0\",\n  \"swaggerVersion\": \"1.2\",\n  \"basePath\": \"\",\n  \"resourcePath\": \"/bundle.json\",\n  \"produces\": [\n    \"application/json\"\n  ],\n  \"apis\": [\n    {\n      \"path\": \"/bundle.json/{bundleid}/update\",\n      \"operations\": [\n        {\n          \"method\": \"POST\",\n          \"summary\": \"Returns the state of a Bundle identified by its id\",\n          \"notes\": \"\",\n          \"responseClass\": \"void\",\n          \"nickname\": \"update\",\n          \"consumes\": [\n            \"application/json\"\n          ],\n          \"parameters\": [\n            {\n              \"name\": \"login\",\n              \"description\": \"Header Parameter; Login used by the AppNode when started\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"header\"\n            },\n            {\n              \"name\": \"bundleid\",\n              \"description\": \"Path Parameter;ID of the bundle\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"long\",\n              \"paramType\": \"path\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Error\"\n            },\n            {\n              \"code\": 404,\n              \"message\": \"No Bundle found with the given id\"\n            },\n            {\n              \"code\": 400,\n              \"message\": \"Invalid value for bundleid argument\"\n            },\n            {\n              \"code\": 401,\n              \"message\": \"The login does not match the login of the AppNode\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"/bundle.json/info\",\n      \"operations\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"Returns the unique ID of a Bundle identified by name and version\",\n          \"notes\": \"\",\n          \"responseClass\": \"BundleID\",\n          \"nickname\": \"getBundleId\",\n          \"parameters\": [\n            {\n              \"name\": \"name\",\n              \"description\": \"Query Parameter; Name of the bundle\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"query\"\n            },\n            {\n              \"name\": \"version\",\n              \"description\": \"Query Parameter; Version of the bundle\",\n              \"required\": false,\n              \"allowMultiple\": false,\n              \"dataType\": \"string\",\n              \"paramType\": \"query\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Error\"\n            },\n            {\n              \"code\": 404,\n              \"message\": \"No Bundle found with the given name and version\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"/bundle.json/state/{bundleid}\",\n      \"operations\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"Returns the state of a Bundle identified by its id\",\n          \"notes\": \"\",\n          \"responseClass\": \"BundleState\",\n          \"nickname\": \"getBundleState\",\n          \"parameters\": [\n            {\n              \"name\": \"bundleid\",\n              \"description\": \"Path Parameter; ID of the Bundle\",\n              \"required\": true,\n              \"allowMultiple\": false,\n              \"dataType\": \"long\",\n              \"paramType\": \"path\"\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 500,\n              \"message\": \"Internal Error\"\n            },\n            {\n              \"code\": 404,\n              \"message\": \"No Bundle found with the given id\"\n            },\n            {\n              \"code\": 400,\n              \"message\": \"Invalid value for bundleid argument\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"models\": {\n    \"BundleState\": {\n      \"id\": \"BundleState\",\n      \"name\": \"BundleState\",\n      \"properties\": {\n        \"state\": {\n          \"type\": \"string\",\n          \"required\": false\n        }\n      }\n    },\n    \"BundleID\": {\n      \"id\": \"BundleID\",\n      \"name\": \"BundleID\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"long\",\n          \"required\": false\n        }\n      }\n    }\n  }\n}\nCan you make something out of this?\nRegards\n.\n. Yes these are 2 different applications in one VM.\nCan I do this?\nIf not Is there any way I can group the resources in UI?\n. Hi,\n     I could resolve the issue by mapping the 2 servlets to 1 application.\nBut now here is the problem\nthere are 5 rest resource api listings belonging to 1 module and another 4 rest resources belonging to another module.  Is there any way swagger supports to group rest api listings.\nI should be in a position to do the following\n--application1link\n  ----apilisting1\n  --------restend1\n  --------restend2\n  ----apilisting2\n  --------restend3\n  --------restend4\n  --------restend5\n--application2link\n  ----apilisting1\n  --------restend1\n  --------restend2\n  ----apilisting2\n  --------restend3\n  --------restend4\n  --------restend5\nCan you suggest any ways/examples of how  this can be achieved in swagger\nThanks a lot\n. ",
    "danielkza": "I don't know if I expressed myself badly. I need a snapshot of the current master repository so I can get the play 2.2 fixes: the stable version won't work due to wrong dependencies.\nI found out there aren't any actual recent snapshots published, and I believe the version tag in the master branch should be updated, and if not an inconvenience, pushing a current snapshot would really help anyone trying to work with play 2.2.\n. I don't know if I expressed myself badly. I need a snapshot of the current master repository so I can get the play 2.2 fixes: the stable version won't work due to wrong dependencies.\nI found out there aren't any actual recent snapshots published, and I believe the version tag in the master branch should be updated, and if not an inconvenience, pushing a current snapshot would really help anyone trying to work with play 2.2.\n. I believed master was the up-to-date scala 2.10 branch. I'll see if I can get the fixes into the other branch and report back. Thanks.\n. I believed master was the up-to-date scala 2.10 branch. I'll see if I can get the fixes into the other branch and report back. Thanks.\n. Wow I really don't know what happened, I just tried to use hub to add a pull request. Can you delete all of this mess or should I create new issue? So sorry T_T\n. Wow I really don't know what happened, I just tried to use hub to add a pull request. Can you delete all of this mess or should I create new issue? So sorry T_T\n. ",
    "luolong": "I do not accept this as a resolution.\nPutting an extra annotation on a class is not acceptable, because the classes are being generated during a build and such annotations would simply be lost on each build.\nBesides, this violates the DRY principle, as the information that I would get by adding @ApiModelProperty annotation, is already present in @XmlType, @XmlRootElement and @XmlElement annotations.\nMoreover, adding the @ApiModelProperty annotation to a protected field will not have the desired effect in any case, as the model reader implementation only considers public and nonstatic fields, as the following snippet form the existing code base clearly demonstrates:\nscala\n  def parseRecursive(hostClass: Class[_]): Unit = {\n    if(!hostClass.isEnum) {\n      LOGGER.debug(\"processing class \" + hostClass)\n      for (method <- hostClass.getDeclaredMethods) {\n        if (Modifier.isPublic(method.getModifiers()) && !Modifier.isStatic(method.getModifiers()))\n          parseMethod(method)\n      }\n      for (field <- hostClass.getDeclaredFields) {\n        if (Modifier.isPublic(field.getModifiers()) && !Modifier.isStatic(field.getModifiers()))\n          parseField(field)\n      }\n      Option(hostClass.getSuperclass).map(parseRecursive(_))\n    }\n    else {\n      LOGGER.debug(\"Not processing enum class \" + hostClass)\n    }\n  }\n. I did a partial Java port (I can't use Scala in this project) of\nSwaggerModelConverter concentrating only on parsing Jaxb annotations as a\nworkaround and had some success with this approach.\nAmong other things I used the information available in XmlSchemaType\nannotation to make XmlGregorianCalendar type go away without relying on too\nmuch trickery.\nAs a result of this exercise I believe that the model conversion can be\nmuch improved out of the box.\nRoland\n23.09.2013 22:10 kirjutas kuup\u00e4eval \"Tony Tam\" notifications@github.com:\n\nI suggest you put @ApiModelProperty annotations on the fields that you\nwant to appear, and map them appropriately in the dataType annotation field.\nFor types such as XMLGregorianCalendar, you can manually define what\nthose look like, by using the override converter:\nhttps://github.com/wordnik/swagger-core/wiki/overriding-models\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/325#issuecomment-24945396\n.\n. \n",
    "Jerrrrrrry": "Json.mapper().registerModule(new JaxbAnnotationModule());\nYaml.mapper().registerModule(new JaxbAnnotationModule());  \nit should solve the related issues.\n. Where I can add those code ? the swagger support are all configured. or how to implemented the mapper setting to use jaxb annotation by adding configuration instead of adding code?\n```\n\njersey.config.server.provider.packages\nio.swagger.jaxrs.listing\n\n\nJersey2Config\nio.swagger.jersey.config.JerseyJaxrsConfig\n\napi.version\n1.0.0\n\n3\n\n```\n. ",
    "mdzhigarov": "Same problem here.\nI'm using kongchen/swagger-maven-plugin to generate the swagger json for my model classes.\nWhere do I have to put this code in order for this to work?\n. I am struggling with the same issue.\nThe ApiModel workaround doesn't work for me because I am using the swagger-maven-plugin with UseJAXBAnnotationProcessor option:\nhttps://github.com/kongchen/swagger-maven-plugin/commit/dbe98e507c756c806431d8c80df06832617f27bd\n(objectMapper.registerModule(new JaxbAnnotationModule());)\nAny suggestions?. ",
    "noboomu": "Still trying to get my head around the 2.2 migration... pretty brutal... not sure about anything regarding naming etc at the moment :(\n. ",
    "joscarsson": "Thank you, I got something up and running using the snapshot. However, it still does not show my annotated resources when accessing /api-docs/, but that might be another problem. Do I need to do something in order to get Swagger to scan the resources?\n. You are absolutely right, thank you.\n. It works for me, I just provide @Api(value = \"\", description = \"Some desc\") for the subresource.\n. Ok, but that's not the problem here. If you compare my two snippets of example code, the first one is actually working (even though it has regexp in path), but the other one is not. It is related to the SomeSubResource vs Class<SomeSubResource>, not the regexp.\nI created an issue for the regexp, which seems to work fine in swagger-core but not in swagger-ui (see here https://github.com/wordnik/swagger-ui/issues/356). Perhaps the solution to that issue is to simply cut the regexp from the path in swagger-core instead of trying to support in in swagger-ui? Please advise if I should create a new issue for the regexp part in swagger-core and close the issue I created in swagger-ui.\n. ",
    "Floresj4": "I'm getting a missing artifact error with the dependency\n        \ncom.wordnik\nswagger-jersey2-jaxrs_2.10\n1.3.1-SNAPSHOT\n\nWhat's up?\n. Problem solved.  Great, thanks!!  When will swagger start to support Jersey 2+\n. ",
    "widarlein": "Hi! I am trying to get swagger to work with jersey 2.4 with spring extension. I followed these instructions https://github.com/wordnik/swagger-core/wiki/Java-JAXRS-Quickstart but with the swagger-jersey2-jaxrs_2.10 1.3.1-SNAPSHOT instead. I have tried to use the sonata-snapshots repository as well as cloning the develop branch and installing the swagger-jersey2-jaxrs module in my local repo. \nAlso I noticed that a java-jersey2 sample was added a few days ago, but if I'm not missing something, it's using Jersey 1.3 as well since the web.xml uses \"com.sun.jersey.spi.container.servlet.ServletContainer\" as servlet-class instead of \"org.glassfish.jersey.servlet.ServletContainer\"\nSo, any idea why swagger just does not seem to engage? \n. ",
    "cfergus": "@widarlein - to augment your comment: I am doing the same. I tried checking out the module, and following : https://github.com/wordnik/swagger-core/tree/master/samples/java-jersey2 . I had to walk the version up to 1.3.1 for the dependencies and parent, but the build fails with an error in ResourceListingIT. \nAdditionally, http://localhost:8002/api/api-docs.json  responds with\nxml\n<apiResponse>\n  <message>\n  null for uri: http://localhost:8002/api/api-docs.json\n  </message>\n  <type>unknown</type>\n</apiResponse>\nUltimately, I was able to get things working, but the major hangup for me was that package scanning for the wordnik resources in my app didn't work; I had to explicitly register the individual resources\n    register( ApiListingResourceJSON.class );\n    register( JerseyApiDeclarationProvider.class );\n    register( JerseyResourceListingProvider.class );\n. ",
    "stnever": "Thanks for the quick response! My bad, I was only seeing the \"GET\" methods on petstore, took me a while to figure out I had to use the special-key to enable the other methods.\nI will update my version and try again.\nThanks a lot!\n. Checked and confirmed it works (though the fix as of today is not yet on an official release). Thanks again.\n. ",
    "MadMartian": "Issued a pull request instead.\n. ",
    "mcarrierastonish": "This is affecting me as well.  Although you are absolutely correct, \"They do not need to match\", this leads to an inconsistent view of path parameters through the API.  I looked and couldn't find a way to change the method (java method) path via annotations (please let me know if I missed something).  Therefore there is no way to change the braces as the characters to indicate a path parameter for java methods.  Since you can never use braces in the API annotation this will lead to two different views of path parameters in an API method. For example\n``` java\n@Path(\"/resource/{name}\")\n@Api(value = \"/resource/name\")\npublic class SomeResource\n{\n   @Path(\"/{id}\")\n   @ApiOperation(...)\n   public Object someResource(@PathParam(\"name\") String type, @PathParam(\"id\") final long id) {\n}\n   ...\n}\n```\nThis would lead to /resource/name/{id} completely omitting the fact that name is a path parameter. Or you could change it to some other valid character that is not a brace leading to two different ways to represent a path parameter. Neither method is consistent or acceptable in my opinion.\n. ",
    "hansenc": "For posterity, the way to handle the example given is as follows:\njava\n@Path(\"/resource/{name}\")\n@Api(\"/resource\")\npublic class SomeResource\n{\n   @PathParam(\"name\") private String name;\n   ...\n}\n. For posterity, the way to handle the example given is as follows:\njava\n@Path(\"/resource/{name}\")\n@Api(\"/resource\")\npublic class SomeResource\n{\n   @PathParam(\"name\") private String name;\n   ...\n}\n. ",
    "jayree05": "There seems to be similar problem with the \"notes\" field in the same annotation. \n. Thank you very much!  I used that example along with this: https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/test/java/io/swagger/model/override/SamplePropertyConverter.java to figure out how to create a property (that example you linked me to just returns null).\nI think I have everything set up.  But now I'm wondering, where do I put this code. The old way was to put it in the constructor of a servlet class.  Newer documentation puts a lot of startup type code in the the init function of a servlet class, which is what I did.  But it doesn't appear to be working.  I'm wondering if it's because you have to create a local instance of the ModelConverters class instead of using it statically.  I hope that question makes sense...\n. Never mind!  I figured it out.  I needed to use the ModelConverters.getInstance() method.  Thanks again for your help! \n. ",
    "jorgenbraseth": "This is still an issue with 1.3.2, as stated above. \nIts a big concern with my project, as it breaks the documentation if you use java.util.Collection as a return value. \n. I will try to make a PR for the patch I made, just need to verify it som more...\nIn the mean time:\nHow would I go about using the OverrideConverter to do this?\nI tried doing \njava\nOverrideConverter converter = new OverrideConverter();\nconverter.add(\"java.util.Collection\", \"java.util.List\");\nBut that doesn't work as the second argument needs to be JSON.\n. Added a pull request for this: https://github.com/wordnik/swagger-core/pull/506\n. This bug is still present in 1.3.10 it seems, event though the change request was merged. Has it been removed again?\n. This change does not seem to be in 1.3.10? The bug is still there.\n. ",
    "damienbiggs": "I just ran into what rage-shadowman  described above in java as well.\nI can't set dataType=\"string\" for uuid field types.\nThis leads to invalid model schema data.\nAre there any updates on this issue?\nThanks\n. ",
    "Lorkster": "Same thing here. dataType=\"x\" doesn't seem to have any effect at all in Java. Any updates?\n. ",
    "sigarev": "Thank you a lot. \nThe problem was that now we should register custom MessageBodyWriter's from Swagger. Due we have used more advanced and low level integration Jersy + JAX-RS + Jackson + Spring this is expected behavior.\nJust now we have registered within Spring:\n<bean class=\"com.wordnik.swagger.jaxrs.listing.ResourceListingProvider\"/>\n<bean class=\"com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider\"/>\nOur Application returns those singletons to JAX-RS impl (Jersey) and  all works fine.\nThank you again.\n. ",
    "theigl": "I was struggling with this myself. Thanks sigarev, that was exactly what I was missing.\n. ",
    "aruizca": "I am using the JAX-RS implementation and this is the bean declaration in my applicationContext.xml:\nxml\n    <bean id=\"swaggerConfig\" class=\"com.wordnik.swagger.jaxrs.config.BeanConfig\">\n        <property name=\"resourcePackage\" value=\"...\"/>\n        <property name=\"version\" value=\"0.1\"/>\n        <property name=\"basePath\" value=\"...\"/>\n        <property name=\"title\" value=\"...\"/>\n        <property name=\"description\" value=\"...\"/>\n        <property name=\"contact\" value=\"aruiz@nerderg.com\"/>\n        <property name=\"license\" value=\"Apache 2.0 License\"/>\n        <property name=\"licenseUrl\" value=\"http://www.apache.org/licenses/LICENSE-2.0.html\"/>\n        <property name=\"scan\" value=\"true\"/>\n    </bean>\nand this is the same bean in my resources.groovy file, which does not work:\n``` groovy\nimport com.wordnik.swagger.jaxrs.config.BeanConfig\n// Place your Spring DSL code here\nbeans = {\nswaggerConfig(BeanConfig) { bean ->\n    resourcePackage = \"...\"\n    version = \"0.1\"\n    title = \"You are using the default SwaggerConfiguration\"\n    description = \"...\"\n    license = \"Apache 2.0 License\"\n    licenseUrl = \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    contact = \"aruiz@nerderg.com\"\n    basePath = \"...\"\n    scan \"true\"\n}\n\n}\n```\n. ",
    "utamas": "Hi Tony, is there any changes in this front? Also it would be nice to know if you plan to implement it in near future. Thanks in advance.\n. ",
    "edmondchui": "Hi,\nHas this been implemented in the master branch yet?\nThanks,\nEdmond\n. ",
    "shifu": "+1 this feature for 1.5 release\n. We are using one layer on top of JAX-RS layer called  YQL to define the REST endpoints.  So we can't just use swagger maven plugin or doclet to generate all specs.  For now before we come up with YQL swagger plugin, we are manually writing the Swagger specs for our APIs.  We are using the doclet maven plugin to generate the model specs, then copy and paste the model to our hand written API specs.   There are a lot of duplicate specs in the process.  If swagger supports external $ref, we can get rid of the duplicate specs and last step of copy and paste.\n. ",
    "wbpmrck": "what i need is a complete demo can run,not code piece,thanks\n. ",
    "dragisak": "It's not a problem with mockito-all. Possibly a problem with sbt.\nI opened this issue here because I don't think swagger project should include \"mockito-all\" together with sources and javadoc. How does swagger depend on documentation or source in mockito-all ?\n. Can you figure where mockito-all comes from ? \nIt's definitely not in swagger-play2 or swagger-play2-utils 1.3.1. You can see pom file in Maven repo.\nTo get dependency report,  you can try sbt-dependency-graph plugin.\n. See https://github.com/wordnik/swagger-core/issues/348\nThis fixed in release 1.3.1\n. ",
    "jamhall": "When will a snapshot be updated for this fix? thanks!\n. Ah, excellent! Thanks for the quick reply. \n. I'm on play 2.2.1. Here's my deps:\n(\"com.wordnik\" % \"swagger-play2_2.10\" % \"1.3.1\"),\n        (\"com.wordnik\" % \"swagger-play2-utils_2.10\" % \"1.3.1\").excludeAll(ExclusionRule(organization = \"org.slf4j\"))\nNote: I made the exclusion rule because of multiple SLF4J bindings.\n. My apologies. I had swagger.filter=\"security.AuthorisationFilter\" set inapplication.conf. Forgot to remove it. It can be closed. Thanks for your reply.\n. ",
    "d00mko": "I'm sorry but it still fails under Play 2.2.1\nsbt.ResolveException: download failed: org.mockito#mockito-all;1.9.0!mockito-all.src\nI've used JDK 1.7\n. I'm pretty sure someone messed up, and pushed without running any tests. It's so common nowadays.\n. ",
    "trycatchblock": "Are generics still not being supported properly? \nI have a method returning Iterable and it's being expressed in json as \"Iterable\u00c2\u00abRandomClass\u00c2\u00bb\" where the model looks like \"Iterable\u00c2\u00abRandomClass\u00c2\u00bb\": {\n\"properties\": {},\n\"type\": \"Iterable\u00c2\u00abRandomClass\u00c2\u00bb\"\n},\nObviously, it's not a representative documentation of what the response should be. Also getting the same issue for requests as well.\n. ",
    "mfirry": "I might've fixed it by changing\n\"Local Maven Repository\" at \"file://\"+Path.userHome.absolutePath+\"/.m2/repository\"\ninto\n\"Local Ivy Repository\" at \"file://\"+Path.userHome.absolutePath+\"/.ivy2/cache\"\non Build.scala\n. ",
    "tlvince": "We're tied to Node in this case (specifically wordline/swagger-jack's implementation) and so will probably have to stick with a repetitive JSON file for now, but thanks anyway.\n. ",
    "rartavia": "So basically, a \"java.util.Date\" property will be shown as \"string\".\nCan you confirm that?  I was looking at that page and I was under the impression of getting a \"date\" as the type and not \"string\".\n. Sounds good,\nThanks\n. ",
    "neilyoung": "Maybe I should address this to swagger-ui...\n. ",
    "patelm5": "I've also reproduced this bug in \n            com.wordnik\nswagger-servlet_2.10\n1.3.5\n. ",
    "piotrdytkowski": "Issue should be solved in pull request #605\n. It should solve the issue #357\n. ",
    "sameerarora": "@fehguy I am using Swagger on Spring MVC , where do I need to add a custom converter to the Model Converters , I mean where in SwaggerConfig class??\n. thanks @webron, I have opened an issue at swagger-springmvc , one small question though\nwhich Swagger component sets and makes use of the Model Converters?\n. ",
    "pradeepg-telsiz": "I am passing javax.json.JsonObject as a parameter. But each one has different schema. How can I handle this? In UI, I can just see DataType as javax.json.JsonObject but I want to show proper schema. Can any  one please guide me? \n. @webron Created issue. Issue number is 896. \n. ",
    "mfarhans": "The post was helpful and pointed me to the right direction...\nAlthough, a quick question relating to Convertors, if someone can comment. When I define my convertor for \"ZonedDateTime\" for the properties \"lastLogin\" and \"createdOn\" properties (to String) using exactly the same pattern (as shown above for java.util.Calendar), the Swagger-UI response-model json schema-representation shows up like below:\n{\n  \"id\": \"\",\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"lastLogin\": {\n    \"value\": \"date-time\"\n  },\n  \"createdOn\": {\n    \"value\": \"date-time\"\n  }\n}\nThe question I have is -- How can I avoid having the \"value\" sub-property in this json representation for the two ZonedDateTime fields. I am expecting the representation to be like below, is there something I am missing ?\n{\n  \"id\": \"\",\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"lastLogin\": \"\",\n  \"createdOn\": \"\"\n}\n. ",
    "nikhilingole": "@mfarhans How did you solve this. Could you post a sample. \nI am facing a similar issue - https://groups.google.com/forum/#!topic/swagger-swaggersocket/Csa5lxcSg6w\n. ",
    "rvinjamu": "It is working fine with a simple REST application. But in ours where we use eclipse link MOXY as the JAXB Provider, it does not seem to be working. Not sure if we are missing anything here.\n. Our requirement is as follows: \nWe are using Moxy because as an internal standard, we decided to use Snake Case for all the JSON representations in Request and Response. We use the MoxyFeature and Moxy as the JAXBContext with a XMLNameTransformer to do this (We cannot put @XmlElement(name=) everywhere in our models as we use the same data model for JAXWS as well where camel case makes sense). How do we make Swagger generate documentation using Snake Case. The default reflection that it does generates field names as is.  Even using @ApiModelProperty does not help as we can supply only the description here - not the field name as it should appear in JSON. Please advise.\nregards\n. Let us say we have a Resource that gives out details of an employee. Let us say that the Employee class has the following fields:  empId, empName, empSalary, deptNo etc. Let us say we use the Eclipse Link MOXY as the JAXB Provider with a name transformation that changes the fields names from camel case to snake case. So if we  request for any employee details by the emp Id, the JSON response would show the fields as emp_id, emp_name, emp_salary and dept_no. Now we want swagger to generate the documentation in the same vein. It should list out the fields in snake case instead of camel case. \n. ",
    "huangsam": "In light of oligot's accepted PR, I figured I could help with the removal of .json for java-play2. Let me know if my patches work for you guys!\n. One thing I immediately realize is the reduction of controllers. I'm assuming that JAXBContext is how you make the play2 get updates from JAX-RS, but I'm not sure. Is that how the play2 sample will work from now on? My concern is how future developers will learn making swagger-core annotations for play2 applications that are free of a JAX-RS implementation.\n. Good to know. I'll close this PR.\n. If you look at the Parameters wiki, required is always true for path. I was given the reasoning behind this in IRC from @fehguy:\n\nhi samhuang91, path params are required\nit's hard-coded in swagger-ui.  the reason is,\nif path elements disappear, there's no reliable way to know what the method will return\nit's obviously easy to undo this in swagger-ui, but it does cause other issues.\n. Thanks for attending this issue. Waiting for your update.\n. \n",
    "mikenikles": "Thanks! I just looked at that wiki page and also at the Play example again. That's when I realized there's a QueryParam besides the PathParam. In my case, I actually need a QueryParam, so that works perfectly fine now. Also, it makes sense to have PathParam default to required = true.\nAppreciate your help.\n. Thanks! I just looked at that wiki page and also at the Play example again. That's when I realized there's a QueryParam besides the PathParam. In my case, I actually need a QueryParam, so that works perfectly fine now. Also, it makes sense to have PathParam default to required = true.\nAppreciate your help.\n. ",
    "infyravi": "Hi fehguy,\nthe converter approach looks good.can you plz let us know  where to add that piece of code in playframework ( in swagger classes o anywhere else) .we are using swagger 1.2.5\n. ",
    "Chitra1986": "Hi,\nBy adding the below code in swagger.js, we can avoid unnecessary key-values and JSON nodes.\n//Add below code in getMockSignature function to avoid unnecessary occurrence of model properties.\nvar str=returnVal.search(\"<span class=\\\"strong\\\">EntityBeanIntercept {\");\n  if(str==0){\n    return \"\";\n  }\n  else{\n     returnVal=returnVal.replace(\"<div><span class=\\\"propName propOpt\\\">_ebean_intercept</span> (<span class=\\\"propType\\\">EntityBeanIntercept</span>, <span class=\\\"propOptKey\\\">optional</span>),</div>\",\"\");\n    return returnVal;\n   }\n//Add below code in createJSONSample function to avoid unnecessary occurrence of JSON node \nfor (_i = 0, _len = _ref.length; _i < _len; _i++) {\n    prop = _ref[_i];\n       if(prop.name!=\"_ebean_intercept\"){\n        result[prop.name] = prop.getSampleValue(modelsToIgnore);\n    }\n  }\n. ",
    "TimSoethout": "I'm experiencing the same. I have a list of enum values and it would really help me if this is incorporated into swagger-core.\n. @webron How does this deal with possible multiple values?\nMy interface actually expects a json value like this:\n{\n...\n  \"daysOfWeek\"  : [ \"SUNDAY\",\"TUESDAY\" ],\n...\n}\nMy corresponding java code would be List<DayOfWeek> daysOfWeek.\n. ",
    "shankar96": "I have following enum  for generation of enum i like to display  successValue and okValue instead of just OK and SUCCESS. Any help would be appreciated\n`package com.main;\nimport com.fasterxml.jackson.databind.annotation.JsonSerialize;\n@JsonSerialize(using = SerialiazerEnum.class)\npublic enum ActionType {\n    SUCCESS(\"successValue\"),\n    OK(\"okValue\");\n    private final String value;\n    ActionType(String value) {\n        this.value = value;\n    }\n    @Override\n    public String toString() {\n        return value;\n    }\n}`. @Kiolali could you paste your pom.xml?. I just annotated Path with  @ApiModelProperty(hidden = true)\nit started working i am not sure its wrong or right?. ",
    "andycbriggs": "Resubmitting to Develop branch\n. ",
    "ronnross": "I change the line to read: \n\"com.wordnik\" %% \"swagger-play2\" % \"1.3.1-SNAPSHOT\"\nunfortunately, still getting the same error. Is there something else I'm missing?\n. I took off the -SNAPSHOT and was able to get it to run. Thanks\n. ",
    "vlcinsky": "@fehguy As author of this ticket I am also very interested. Would you give me a share?\n. Excellent work!!! I am now going to write this great news to my colleagues at SUPERHUB  project, where we are trying to use it for our specifications.\n. ",
    "silas": "@fehguy I'd love to check this out as well if possible.\n. ",
    "fabn": "Hi, yes that would be an option, but it will enlarge the ear size a lot.\nI have shared jars in the ear archive to avoid duplication in war files and while debugging code I've found out that the static instance is the same.\nI'm also exploring the possibility to include only the swagger jax-rs artifact in the WARs, this should create the sandboxing you're talking about. I'll try some maven jujitsu...\nIn any case static config is almost always bad ;-)\n. Here is what I did in maven ear pom.xml to solve the issue\n``` xml\n\n${project.groupId}\nshared-controllers\n\n\ncom.wordnik\nswagger-jaxrs_2.10\n\n\n\n Excluded swagger from dependencies to avoid static issues, other dependencies of swagger listed here \n\ncom.fasterxml.jackson.jaxrs\njackson-jaxrs-json-provider\n\n\ncom.fasterxml.jackson.module\njackson-module-scala_2.10\n\n\ncom.fasterxml.jackson.module\njackson-module-jsonSchema\n\n\norg.json4s\njson4s-ext_2.10\n\n\norg.json4s\njson4s-jackson_2.10\n\n\norg.json4s\njson4s-native_2.10\n\n\norg.reflections\nreflections\n\n\ncommons-lang\ncommons-lang\n\n\norg.scala-lang\nscala-library\n\n```\nPretty ugly, but it works\n. ",
    "biolinh": "i get the same problem which @d00mko got. How to solve it ? \n. Prerequisites\n- Java 1.6 or greater \n  $java -version\n  java version \"1.6.0_45\"\n- Apache maven 3.0.3 or greater \n  $ mvn -version\n  Apache Maven 3.0.4\ni do as follow there steps:\n1. git clone https://github.com/wordnik/swagger-core.git\n2. cd swagger-core\n3. mvn -N\n4. mvn install\nthen i got the error:\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec\nResults :\nTests in error:\n  should format a date(converter.FormatTest): \"...time\"},\"intValue\":{\"[$ref\":\"Int\"},\"longValue\":{\"type\":\"integer\",\"format\":\"int64\"},\"floatValue\":{\"$ref\":\"Float\"},\"doubleValue\":{\"$ref\":\"D]ouble\"}}}\" was not equal to \"...time\"},\"intValue\":{\"[type\":\"integer\",\"format\":\"int32\"},\"longValue\":{\"type\":\"integer\",\"format\":\"int64\"},\"floatValue\":{\"type\":\"number\",\"format\":\"float\"},\"doubleValue\":{\"type\":\"number\",\"format\":\"d]ouble\"}}}\"\nTests run: 55, Failures: 0, Errors: 1, Skipped: 5\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO]\n[INFO] wordnik-swagger-project ........................... SUCCESS [5.077s]\n[INFO] swagger-annotations ............................... SUCCESS [14.361s]\n[INFO] swagger-core ...................................... FAILURE [8.541s]\n[INFO] swagger-jaxrs ..................................... SKIPPED\n[INFO] swagger-jersey-jaxrs .............................. SKIPPED\n[INFO] swagger-jersey2-jaxrs (Jersey 2.x support) ........ SKIPPED\n[INFO] swagger-servlet ................................... SKIPPED\n[INFO] swagger-oauth2-server ............................. SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 29.452s\n[INFO] Finished at: Tue Mar 18 18:52:40 ICT 2014\n[INFO] Final Memory: 26M/205M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.10:test (default-test) on project swagger-core_2.10: There are test failures.\n[ERROR]\n[ERROR] Please refer to  ../swagger-core/modules/swagger-core/target/surefire-reports for the individual test results.\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR]\n. @webron: i tried it. it didn't work.\nwhen i scroll  back, i got error\n[ERROR] Error fetching link: ../swagger-core/modules/swagger-core/target/apidocs/page-list. Ignored it.\n[ERROR] Error fetching link: ../swagger-core/modules/swagger-jaxrs/target/apidocs/page-list. Ignored it.\n[ERROR] Error fetching link: ../swagger-core/modules/swagger-jersey-jaxrs/target/apcs/package-list. Ignored it.\n[ERROR] Error fetching link:../swagger-core/modules/swagger-jersey2-jaxrs/target/aocs/package-list. Ignored it.\n[ERROR] Error fetching link: ../swagger-core/modules/swagger-servlet/target/apidocsckage-list. Ignored it.\n[ERROR] Error fetching link:../swagger-core/modules/swagger-oauth2-auth-server/tar/apidocs/package-list. Ignored it.\n[INFO]\nLoading source files for package com.wordnik.swagger.annotations...\nConstructing Javadoc information...\nStandard Doclet version 1.7.0_51\nBuilding tree for all the packages and classes...\n. @fehguy: My OS is Ubuntu 13.04\n I don't have lib folder under  modules/swagger-core/target/\nIt is missing. \n. here is the output: mvn clean install\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] wordnik-swagger-project\n[INFO] swagger-annotations\n[INFO] swagger-core\n[INFO] swagger-jaxrs\n[INFO] swagger-jersey-jaxrs\n[INFO] swagger-jersey2-jaxrs (Jersey 2.x support)\n[INFO] swagger-servlet\n[INFO] swagger-oauth2-server\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Building wordnik-swagger-project 1.3.2\n[INFO] ------------------------------------------------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.3:clean (default-clean) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0-beta-1:enforce (enforce-maven) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:add-source (default) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:compile (default) @ swagger-project_2.10 ---\n[WARNING] No source files found.\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:testCompile (default) @ swagger-project_2.10 ---\n[WARNING] No source files found.\n[INFO]\n[INFO] --- maven-dependency-plugin:2.1:copy-dependencies (default) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- maven-source-plugin:2.1.2:jar-no-fork (attach-sources) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- maven-javadoc-plugin:2.7:jar (attach-javadocs) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- maven-javadoc-plugin:2.7:jar (attach-javadocs) @ swagger-project_2.10 ---\n[INFO] Not executing Javadoc as the project is not a Java classpath-capable package\n[INFO]\n[INFO] --- maven-install-plugin:2.3:install (default-install) @ swagger-project_2.10 ---\n[INFO] Installing swagger-core/pom.xml to .m2/repository/com/wordnik/swagger-pro\\\nject_2.10/1.3.2/swagger-project_2.10-1.3.2.pom\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Building swagger-annotations 1.3.2\n[INFO] ------------------------------------------------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.3:clean (default-clean) @ swagger-annotations ---\n[INFO] Deleting file set: swagger-core/modules/swagger-annotations/target (included: [**], ex\\\ncluded: [])\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO]\n[INFO] wordnik-swagger-project ........................... SUCCESS [4.947s]\n[INFO] swagger-annotations ............................... FAILURE [0.153s]\n[INFO] swagger-core ...................................... SKIPPED\n[INFO] swagger-jaxrs ..................................... SKIPPED\n[INFO] swagger-jersey-jaxrs .............................. SKIPPED\n[INFO] swagger-jersey2-jaxrs (Jersey 2.x support) ........ SKIPPED\n[INFO] swagger-servlet ................................... SKIPPED\n[INFO] swagger-oauth2-server ............................. SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 6.121s\n[INFO] Finished at: Tue Mar 18 23:17:23 ICT 2014\n[INFO] Final Memory: 16M/169M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-clean-plugin:2.3:clean (default-clean) on projec\\\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-clean-plugin:2.3:clean (default-clean) on projec\\\nt swagger-annotations: Failed to delete directory: swagger-core/modules/swagger-annotations/t\\\narget. Reason: Failed to delete file swagger-core/modules/swagger-annotations/target/apidocs/\\\ncom/wordnik/swagger/annotations/Api.html. Reason is unknown. -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException\n[ERROR]\n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn  -rf :swagger-annotations\n. i found that why. Because i used sudo in previous command. \ni cloned another swagger-core and do again. it  is 193mb  so i can show full log   \nINFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] wordnik-swagger-project\n[INFO] swagger-annotations\n[INFO] swagger-core\n[INFO] swagger-jaxrs\n[INFO] swagger-jersey-jaxrs\n[INFO] swagger-jersey2-jaxrs (Jersey 2.x support)\n[INFO] swagger-servlet\n[INFO] swagger-oauth2-server\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Building wordnik-swagger-project 1.3.2\n[INFO] ------------------------------------------------------------------------\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0-beta-1:enforce (enforce-maven) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:add-source (default) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:compile (default) @ swagger-project_2.10 ---\n[WARNING] No source files found.\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:testCompile (default) @ swagger-project_2.10 ---\n[WARNING] No source files found.\n[INFO]\n[INFO] --- maven-dependency-plugin:2.1:copy-dependencies (default) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- maven-source-plugin:2.1.2:jar-no-fork (attach-sources) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- maven-javadoc-plugin:2.7:jar (attach-javadocs) @ swagger-project_2.10 ---\n[INFO] Not executing Javadoc as the project is not a Java classpath-capable package\n[INFO] Not executing Javadoc as the project is not a Java classpath-capable package\n[INFO]\n[INFO] --- maven-install-plugin:2.3:install (default-install) @ swagger-project_2.10 ---\n[INFO] Installing ~/swagger-core/pom.xml to /home/jmango/.m2/repository/com/wordnik/swagger-pro\\\nject_2.10/1.3.2/swagger-project_2.10-1.3.2.pom\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Building swagger-annotations 1.3.2\n[INFO] ------------------------------------------------------------------------\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0-beta-1:enforce (enforce-maven) @ swagger-annotations ---\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:add-source (default) @ swagger-annotations ---\n[INFO] Add Source directory: ~/swagger-core/modules/swagger-annotations/src/main/scala\n[INFO]\n[INFO] --- maven-resources-plugin:2.3:resources (default-resources) @ swagger-annotations ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory ~/swagger-core/modules/swagger-annotations/src/main/\\\nresources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ swagger-annotations ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 11 source files to ~/swagger-core/modules/swagger-annotations/target/classes\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:compile (default) @ swagger-annotations ---\n[INFO] ~/swagger-core/modules/swagger-annotations/src/main/java:-1: info: compiling\n[INFO] Compiling 11 source files to ~/swagger-core/modules/swagger-annotations/target/classes a\\\nt 1395160699430\n[INFO] prepare-compile in 0 s\n[INFO] compile in 3 s\n[INFO]\n[INFO] --- maven-resources-plugin:2.3:testResources (default-testResources) @ swagger-annotations ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory ~/swagger-core/modules/swagger-annotations/src/test/\\\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory ~/swagger-core/modules/swagger-annotations/src/test/\\\nresources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ swagger-annotations ---\n[INFO] No sources to compile\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:testCompile (default) @ swagger-annotations ---\n[WARNING] No source files found.\n[INFO]\n[INFO] --- maven-surefire-plugin:2.10:test (default-test) @ swagger-annotations ---\n[INFO] No tests to run.\n[INFO] Surefire report directory: ~/swagger-core/modules/swagger-annotations/target/surefire-re\\\nports\n\nT E S T S\nResults :\nTests run: 0, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ swagger-annotations ---\n[INFO] Building jar: ~/swagger-core/modules/swagger-annotations/target/swagger-annotations-1.3.\\\n2.jar\n[INFO]\n[INFO] --- maven-dependency-plugin:2.1:copy-dependencies (default) @ swagger-annotations ---\n[INFO]\n[INFO] --- maven-source-plugin:2.1.2:jar-no-fork (attach-sources) @ swagger-annotations ---\n[INFO] Building jar: ~/swagger-core/modules/swagger-annotations/target/swagger-annotations-1.3.\\\n2-sources.jar\n[INFO]\n [INFO]\n[INFO] --- maven-javadoc-plugin:2.7:jar (attach-javadocs) @ swagger-annotations ---\n[INFO] The goal 'org.apache.maven.plugins:maven-javadoc-plugin:2.7:javadoc' has not be previously called for t\\\nhe project: 'com.wordnik:swagger-core_2.10:jar:1.3.2'. Trying to invoke it...\n[INFO] The goal 'org.apache.maven.plugins:maven-javadoc-plugin:2.7:javadoc' has not be previously called for t\\\nhe project: 'com.wordnik:swagger-jaxrs_2.10:jar:1.3.2'. Trying to invoke it...\n[INFO] The goal 'org.apache.maven.plugins:maven-javadoc-plugin:2.7:javadoc' has not be previously called for t\\\nhe project: 'com.wordnik:swagger-jersey-jaxrs_2.10:jar:1.3.2'. Trying to invoke it...\n[INFO] The goal 'org.apache.maven.plugins:maven-javadoc-plugin:2.7:javadoc' has not be previously called for t\\\nhe project: 'com.wordnik:swagger-jersey2-jaxrs_2.10:jar:1.3.2'. Trying to invoke it...\n[INFO] The goal 'org.apache.maven.plugins:maven-javadoc-plugin:2.7:javadoc' has not be previously called for t\\\nhe project: 'com.wordnik:swagger-servlet_2.10:jar:1.3.2'. Trying to invoke it...\n[INFO] The goal 'org.apache.maven.plugins:maven-javadoc-plugin:2.7:javadoc' has not be previously called for t\\\nhe project: 'com.wordnik:swagger-oauth2-server_2.10:jar:1.3.2'. Trying to invoke it...\n[ERROR] Error fetching link: ~/swagger-core/modules/swagger-core/target/apidocs/package-list. I\\\ngnored it.\n[ERROR] Error fetching link: ~/swagger-core/modules/swagger-jaxrs/target/apidocs/package-list. \\\nIgnored it.\n[ERROR] Error fetching link: ~/swagger-core/modules/swagger-jersey-jaxrs/target/apidocs/package\\\n-list. Ignored it.\n[ERROR] Error fetching link: ~/swagger-core/modules/swagger-jersey2-jaxrs/target/apidocs/packag\\\ne-list. Ignored it.\n[ERROR] Error fetching link: ~/swagger-core/modules/swagger-servlet/target/apidocs/package-list\\\n. Ignored it.\n[ERROR] Error fetching link: ~/swagger-core/modules/swagger-oauth2-auth-server/target/apidocs/p\\\nackage-list. Ignored it.\n[INFO]\nLoading source files for package com.wordnik.swagger.annotations...\nConstructing Javadoc information...\nStandard Doclet version 1.7.0_51\nBuilding tree for all the packages and classes...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/Api.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/Api.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiImplicitParam.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiImplicitParams.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiModel.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiModelProperty.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiOperation.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiParam.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiResponse.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiResponses.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/Authorization.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/AuthorizationScope.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/package-frame.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/package-summary.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/package-tree.html...\nINFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] wordnik-swagger-project\n[INFO] swagger-annotations\n[INFO] swagger-core\n[INFO] swagger-jaxrs\n[INFO] swagger-jersey-jaxrs\n[INFO] swagger-jersey2-jaxrs (Jersey 2.x support)\n[INFO] swagger-servlet\n[INFO] swagger-oauth2-server\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Building wordnik-swagger-project 1.3.2\n[INFO] ------------------------------------------------------------------------\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0-beta-1:enforce (enforce-maven) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:add-source (default) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:compile (default) @ swagger-project_2.10 ---\n[WARNING] No source files found.\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:testCompile (default) @ swagger-project_2.10 ---\n[WARNING] No source files found.\n[INFO]\n[INFO] --- maven-dependency-plugin:2.1:copy-dependencies (default) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- maven-source-plugin:2.1.2:jar-no-fork (attach-sources) @ swagger-project_2.10 ---\n[INFO]\n[INFO] --- maven-javadoc-plugin:2.7:jar (attach-javadocs) @ swagger-project_2.10 ---\n[INFO] Not executing Javadoc as the project is not a Java classpath-capable package\n[INFO] Not executing Javadoc as the project is not a Java classpath-capable package\n[INFO]\n[INFO] --- maven-install-plugin:2.3:install (default-install) @ swagger-project_2.10 ---\n[INFO] Installing ~/swagger-core/pom.xml to /home/jmango/.m2/repository/com/wordnik/swagger-pro\\\nject_2.10/1.3.2/swagger-project_2.10-1.3.2.pom\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Building swagger-annotations 1.3.2\n[INFO] ------------------------------------------------------------------------\n[INFO]\n[INFO] --- maven-enforcer-plugin:1.0-beta-1:enforce (enforce-maven) @ swagger-annotations ---\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:add-source (default) @ swagger-annotations ---\n[INFO] Add Source directory: ~/swagger-core/modules/swagger-annotations/src/main/scala\n[INFO]\n[INFO] --- maven-resources-plugin:2.3:resources (default-resources) @ swagger-annotations ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory ~/swagger-core/modules/swagger-annotations/src/main/\\\nresources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.0:compile (default-compile) @ swagger-annotations ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 11 source files to ~/swagger-core/modules/swagger-annotations/target/classes\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:compile (default) @ swagger-annotations ---\n[INFO] ~/swagger-core/modules/swagger-annotations/src/main/java:-1: info: compiling\n[INFO] Compiling 11 source files to ~/swagger-core/modules/swagger-annotations/target/classes a\\\nt 1395160699430\n[INFO] prepare-compile in 0 s\n[INFO] compile in 3 s\n[INFO]\n[INFO] --- maven-resources-plugin:2.3:testResources (default-testResources) @ swagger-annotations ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory ~/swagger-core/modules/swagger-annotations/src/test/\\\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory ~/swagger-core/modules/swagger-annotations/src/test/\\\nresources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.0:testCompile (default-testCompile) @ swagger-annotations ---\n[INFO] No sources to compile\n[INFO]\n[INFO] --- scala-maven-plugin:3.1.0:testCompile (default) @ swagger-annotations ---\n[WARNING] No source files found.\n[INFO]\n[INFO] --- maven-surefire-plugin:2.10:test (default-test) @ swagger-annotations ---\n[INFO] No tests to run.\n[INFO] Surefire report directory: ~/swagger-core/modules/swagger-annotations/target/surefire-re\\\nports\n\nT E S T S\nResults :\nTests run: 0, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ swagger-annotations ---\n[INFO] Building jar: ~/swagger-core/modules/swagger-annotations/target/swagger-annotations-1.3.\\\n2.jar\n[INFO]\n[INFO] --- maven-dependency-plugin:2.1:copy-dependencies (default) @ swagger-annotations ---\n[INFO]\n[INFO] --- maven-source-plugin:2.1.2:jar-no-fork (attach-sources) @ swagger-annotations ---\n[INFO] Building jar: ~/swagger-core/modules/swagger-annotations/target/swagger-annotations-1.3.\\\n2-sources.jar\n[INFO]\n [INFO]\n[INFO] --- maven-javadoc-plugin:2.7:jar (attach-javadocs) @ swagger-annotations ---\n[INFO] The goal 'org.apache.maven.plugins:maven-javadoc-plugin:2.7:javadoc' has not be previously called for t\\\nhe project: 'com.wordnik:swagger-core_2.10:jar:1.3.2'. Trying to invoke it...\n[INFO] The goal 'org.apache.maven.plugins:maven-javadoc-plugin:2.7:javadoc' has not be previously called for t\\\nhe project: 'com.wordnik:swagger-jaxrs_2.10:jar:1.3.2'. Trying to invoke it...\n[INFO] The goal 'org.apache.maven.plugins:maven-javadoc-plugin:2.7:javadoc' has not be previously called for t\\\nhe project: 'com.wordnik:swagger-jersey-jaxrs_2.10:jar:1.3.2'. Trying to invoke it...\n[INFO] The goal 'org.apache.maven.plugins:maven-javadoc-plugin:2.7:javadoc' has not be previously called for t\\\nhe project: 'com.wordnik:swagger-jersey2-jaxrs_2.10:jar:1.3.2'. Trying to invoke it...\n[INFO] The goal 'org.apache.maven.plugins:maven-javadoc-plugin:2.7:javadoc' has not be previously called for t\\\nhe project: 'com.wordnik:swagger-servlet_2.10:jar:1.3.2'. Trying to invoke it...\n[INFO] The goal 'org.apache.maven.plugins:maven-javadoc-plugin:2.7:javadoc' has not be previously called for t\\\nhe project: 'com.wordnik:swagger-oauth2-server_2.10:jar:1.3.2'. Trying to invoke it...\n[ERROR] Error fetching link: ~/swagger-core/modules/swagger-core/target/apidocs/package-list. I\\\ngnored it.\n[ERROR] Error fetching link: ~/swagger-core/modules/swagger-jaxrs/target/apidocs/package-list. \\\nIgnored it.\n[ERROR] Error fetching link: ~/swagger-core/modules/swagger-jersey-jaxrs/target/apidocs/package\\\n-list. Ignored it.\n[ERROR] Error fetching link: ~/swagger-core/modules/swagger-jersey2-jaxrs/target/apidocs/packag\\\ne-list. Ignored it.\n[ERROR] Error fetching link: ~/swagger-core/modules/swagger-servlet/target/apidocs/package-list\\\n. Ignored it.\n[ERROR] Error fetching link: ~/swagger-core/modules/swagger-oauth2-auth-server/target/apidocs/p\\\nackage-list. Ignored it.\n[INFO]\nLoading source files for package com.wordnik.swagger.annotations...\nConstructing Javadoc information...\nStandard Doclet version 1.7.0_51\nBuilding tree for all the packages and classes...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/Api.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/Api.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiImplicitParam.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiImplicitParams.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiModel.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiModelProperty.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiOperation.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiParam.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiResponse.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/ApiResponses.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/Authorization.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/AuthorizationScope.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/package-frame.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/package-summary.html...\nGenerating ~/swagger-core/modules/swagger-annotations/target/apidocs/com/wordnik/swagger/annota\\\ntions/package-tree.html..\ner.models.WildAnimal.copy$default$3()\n23:40:34.152 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String conv\\\nerter.models.WildAnimal.productPrefix()\n23:40:34.153 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public int converter.models.\\\nWildAnimal.productArity()\n23:40:34.153 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public scala.collection.Iter\\\nator converter.models.WildAnimal.productIterator()\n23:40:34.153 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String conv\\\nerter.models.WildAnimal.foundInLocation()\n23:40:34.154 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype java.lang.String against 1\\\n1 keys, got java.lang.String\n23:40:34.154 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting java.lang.String\n23:40:34.154 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype String against 11 keys, go\\\nt string\n23:40:34.155 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype string against 11 keys, go\\\n-UU-:----F1  log.install    15% L298   (Fundamental)-----------------------------------------------------------\nstring\n23:40:34.155 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype string against 11 keys, go\\\nt string\n23:40:34.155 [main] DEBUG c.w.s.converter.ModelPropertyParser - added param type java.lang.String for field fo\\\nundInLocation\n23:40:34.155 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String conv\\\nerter.models.WildAnimal.name()\n23:40:34.156 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype java.lang.String against 1\\\n1 keys, got java.lang.String\n23:40:34.156 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting java.lang.String\n23:40:34.157 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype String against 11 keys, go\\\nt string\n23:40:34.157 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype string against 11 keys, go\\\nt string\n23:40:34.157 [main] DEBUG c.w.s.converter.ModelPropertyParser - added param type java.lang.String for field na\\\nme\n23:40:34.157 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String conv\\\nerter.models.WildAnimal.toString()\n23:40:34.158 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public int converter.models.\\\nWildAnimal.hashCode()\n23:40:34.158 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing class class java.lang.Object\n23:40:34.158 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final void java.lang.\\\nObject.wait() throws java.lang.InterruptedException\n23:40:34.159 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String java\\\n.lang.Object.toString()\n23:40:34.159 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public native int java.lang.\\\nObject.hashCode()\n23:40:34.160 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final native java.lan\\\ng.Class java.lang.Object.getClass()\n23:40:34.160 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting null\n23:40:34.160 [main] DEBUG c.w.s.converter.ModelPropertyParser - skipping class\n23:40:34.160 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final native void jav\\\na.lang.Object.notify()\n23:40:34.161 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final native void jav\\a.lang.Object.notify()\n23:40:34.161 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final native void jav\\\na.lang.Object.notifyAll()\n23:40:34.169 [main] DEBUG c.w.swagger.core.filter.SpecFilter - requiredModels: ListBuffer(Animal)\n23:40:34.169 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing class class converter.models.Domest\\\nicAnimal\n23:40:34.169 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.util.Date conver\\\nter.models.DomesticAnimal.date()\n23:40:34.170 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype java.util.Date against 11 \\\nkeys, got java.util.Date\n23:40:34.170 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting java.util.Date\n23:40:34.170 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype Date against 11 keys, got \\\nDate\n23:40:34.170 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype Date against 11 keys, got \\\nDate\n23:40:34.170 [main] DEBUG c.w.s.converter.ModelPropertyParser - added param type java.util.Date for field date\n23:40:34.171 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String conv\\\nerter.models.DomesticAnimal.copy$default$1()\n23:40:34.171 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public boolean converter.mod\\\nels.DomesticAnimal.copy$default$2()\n23:40:34.171 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.util.Date conver\\\nter.models.DomesticAnimal.copy$default$3()\n23:40:34.171 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String conv\\\nerter.models.DomesticAnimal.productPrefix()\n23:40:34.172 [main] DEBUG c.w.s.converter.ModelPropertyPars\ner.models.WildAnimal.copy$default$3()\n23:40:34.152 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String conv\\\nerter.models.WildAnimal.productPrefix()\n23:40:34.153 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public int converter.models.\\\nWildAnimal.productArity()\n23:40:34.153 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public scala.collection.Iter\\\nator converter.models.WildAnimal.productIterator()\n23:40:34.153 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String conv\\\nerter.models.WildAnimal.foundInLocation()\n23:40:34.154 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype java.lang.String against 1\\\n1 keys, got java.lang.String\n23:40:34.154 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting java.lang.String\n23:40:34.154 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype String against 11 keys, go\\\nt string\n23:40:34.155 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype string against 11 keys, go\\\n-UU-:----F1  log.install    15% L298   (Fundamental)-----------------------------------------------------------\nstring\n23:40:34.155 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype string against 11 keys, go\\\nt string\n23:40:34.155 [main] DEBUG c.w.s.converter.ModelPropertyParser - added param type java.lang.String for field fo\\\nundInLocation\n23:40:34.155 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String conv\\\nerter.models.WildAnimal.name()\n23:40:34.156 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype java.lang.String against 1\\\n1 keys, got java.lang.String\n23:40:34.156 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting java.lang.String\n23:40:34.157 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype String against 11 keys, go\\\nt string\n23:40:34.157 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype string against 11 keys, go\\\nt string\n23:40:34.157 [main] DEBUG c.w.s.converter.ModelPropertyParser - added param type java.lang.String for field na\\\nme\n23:40:34.157 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String conv\\\nerter.models.WildAnimal.toString()\n23:40:34.158 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public int converter.models.\\\nWildAnimal.hashCode()\n23:40:34.158 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing class class java.lang.Object\n23:40:34.158 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final void java.lang.\\\nObject.wait() throws java.lang.InterruptedException\n23:40:34.159 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String java\\\n.lang.Object.toString()\n23:40:34.159 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public native int java.lang.\\\nObject.hashCode()\n23:40:34.160 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final native java.lan\\\ng.Class java.lang.Object.getClass()\n23:40:34.160 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting null\n23:40:34.160 [main] DEBUG c.w.s.converter.ModelPropertyParser - skipping class\n23:40:34.160 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final native void jav\\\na.lang.Object.notify()\n23:40:34.161 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final native void jav\\a.lang.Object.notify()\n23:40:34.161 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final native void jav\\\na.lang.Object.notifyAll()\n23:40:34.169 [main] DEBUG c.w.swagger.core.filter.SpecFilter - requiredModels: ListBuffer(Animal)\n23:40:34.169 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing class class converter.models.Domest\\\nicAnimal\n23:40:34.169 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.util.Date conver\\\nter.models.DomesticAnimal.date()\n23:40:34.170 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype java.util.Date against 11 \\\nkeys, got java.util.Date\n23:40:34.170 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting java.util.Date\n23:40:34.170 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype Date against 11 keys, got \\\nDate\n23:40:34.170 [main] DEBUG c.w.s.converter.ModelPropertyParser - validating datatype Date against 11 keys, got \\\nDate\n23:40:34.170 [main] DEBUG c.w.s.converter.ModelPropertyParser - added param type java.util.Date for field date\n23:40:34.171 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String conv\\\nerter.models.DomesticAnimal.copy$default$1()\n23:40:34.171 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public boolean converter.mod\\\nels.DomesticAnimal.copy$default$2()\n23:40:34.171 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.util.Date conver\\\nter.models.DomesticAnimal.copy$default$3()\n23:40:34.171 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String conv\\\nerter.models.DomesticAnimal.productPrefix()\n23:40:34.172 [main] DEBUG c.w.s.converter.ModelPropertyPars\n23:40:35.590 [main] DEBUG c.w.s.converter.ModelPropertyParser - added param type long for field id\n23:40:35.590 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing class class java.lang.Object\n23:40:35.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final void java.lang.\\\nObject.wait() throws java.lang.InterruptedException\n23:40:35.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public java.lang.String java\\\n.lang.Object.toString()\n23:40:35.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public native int java.lang.\\\nObject.hashCode()\n23:40:35.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final native java.lan\\\ng.Class java.lang.Object.getClass()\n23:40:35.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - inspecting null\n23:40:35.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - skipping class\n23:40:35.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final native void jav\\\na.lang.Object.notify()\n23:40:35.591 [main] DEBUG c.w.s.converter.ModelPropertyParser - processing method public final native void jav\\\na.lang.Object.notifyAll()\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.041 sec\nRunning model.JsonSchemaModelRefSerializationTest\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec\nResults :\nTests in error:\n  should format a date(converter.FormatTest): \"...time\"},\"intValue\":{\"[$ref\":\"Int\"},\"longValue\":{\"type\":\"integ\\\ner\",\"format\":\"int64\"},\"floatValue\":{\"$ref\":\"Float\"},\"doubleValue\":{\"$ref\":\"D]ouble\"}}}\" was not equal to \"...t\\\nime\"},\"intValue\":{\"[type\":\"integer\",\"format\":\"int32\"},\"longValue\":{\"type\":\"integer\",\"format\":\"int64\"},\"floatVa\\\nlue\":{\"type\":\"number\",\"format\":\"float\"},\"doubleValue\":{\"type\":\"number\",\"format\":\"d]ouble\"}}}\"\nTests run: 55, Failures: 0, Errors: 1, Skipped: 5\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO]\n[INFO] wordnik-swagger-project ........................... SUCCESS [3.395s]\n[INFO] swagger-annotations ............................... SUCCESS [56.824s]\n[INFO] swagger-core ...................................... FAILURE [1:20.748s]\n[INFO] swagger-jaxrs ..................................... SKIPPED\n[INFO] swagger-jersey-jaxrs .............................. SKIPPED\n[INFO] swagger-jersey2-jaxrs (Jersey 2.x support) ........ SKIPPED\n[INFO] swagger-servlet ................................... SKIPPED\n[INFO] swagger-oauth2-server ............................. SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 2:21.785s\n[INFO] Finished at: Tue Mar 18 23:40:35 ICT 2014\n[INFO] Final Memory: 29M/299M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.10:test (default-test) on proj\\\nect swagger-core_2.10: There are test failures.\n[ERROR]\n[ERROR] Please refer to ~/swagger-core/modules/swagger-core/target/surefire-reports for the ind\\\nividual test results.\n[ERROR] -> [Help 1]\nividual test results.\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR]\n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn  -rf :swagger-core_2.10\n. ",
    "leslie-cli": "I have the same question.    Also wondering, as was suggested by someone else trying to get this to work with jersey2, whether the example will need to  register  the classes since jersey doesn't seem to scan for classes:\nregister( ApiListingResourceJSON.class );\n    register( JerseyApiDeclarationProvider.class );\n    register( JerseyResourceListingProvider.class );\n. Thank you !!!\n. ",
    "donovanmuller": "I also noticed that Jersey 2 did not seem to scan and find the Swagger resources, even though the Swagger packages were explicitly added.\nIf I extended ApiListingResource/ApiListingResourceJSON (as was the case when using Jersey 1) with my own resource and included it in:\n<servlet>\n        <servlet-name>jersey-servlet</servlet-name>\n        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>\n        <init-param>\n            <param-name>jersey.config.server.provider.packages</param-name>\n            <param-value>my.warm.jersey.resources;com.wordnik.swagger.jersey.listing</param-value>\n        </init-param>\n        ...\n        <load-on-startup>1</load-on-startup>\n    </servlet>\nit would find my resource that extended the Swagger resource.\nHowever, when invoking /api-docs, it would return an empty JSON object {} (despite the fact that DEBUG logging for Swagger indicated that it did indeed parse my resources and find the @Api, @ApiParam annotations.\n23:35:33.037 [http-bio-8080-exec-6] DEBUG c.w.s.jaxrs.config.WebXMLReader - set api.version to 1.0.0-SNAPSHOT\n23:35:33.038 [http-bio-8080-exec-6] DEBUG c.w.s.jaxrs.config.WebXMLReader - set swagger.api.basepath to http://localhost:8080/new-swagger-test\n23:35:36.038 [http-bio-8080-exec-8] DEBUG c.w.s.j.listing.ApiListingCache$ - loading cache\n23:35:36.105 [http-bio-8080-exec-8] DEBUG c.w.swagger.jaxrs.JaxrsApiReader - checking for implicits\n23:35:36.150 [http-bio-8080-exec-8] DEBUG c.w.s.j.listing.ApiListingCache$ - added /Health Check Resource to cache\n23:35:36.150 [http-bio-8080-exec-8] DEBUG c.w.s.j.listing.ApiListingCache$ - added /api-docs to cache\n23:35:36.152 [http-bio-8080-exec-8] DEBUG c.w.s.j.listing.ApiListingCache$ - cache has Set(/Health Check Resource, /api-docs) keys\n23:35:36.171 [http-bio-8080-exec-8] DEBUG c.w.swagger.core.filter.SpecFilter - requiredModels: ListBuffer(void)\n23:35:36.174 [http-bio-8080-exec-8] DEBUG c.w.swagger.core.filter.SpecFilter - existingModels: List(void)\n23:35:36.177 [http-bio-8080-exec-8] DEBUG c.w.swagger.core.filter.SpecFilter - requiredModels: ListBuffer()\n23:35:36.177 [http-bio-8080-exec-8] DEBUG c.w.swagger.core.filter.SpecFilter - existingModels: List()\nI will try explicitly registering the Swagger resources and see what happens...\n. Registering the Swagger resources as per https://github.com/wordnik/swagger-core/issues/388#issuecomment-29740215 fixes the issue I explained above.\n. I'm working on a pull request at this very moment...\n. Sent PR: https://github.com/wordnik/swagger-core/pull/392\n. For anybody else with this issue, here is a quick reference (Play 2.2.3 + swagger-play2 1.3.6)\nbuild.sbt\n...\nlibraryDependencies ++= Seq(\n  ...\n  \"com.wordnik\" %% \"swagger-play2\" % \"1.3.6\" exclude(\"org.reflections\", \"reflections\"),\n  \"org.reflections\" % \"reflections\" % \"0.9.8\" notTransitive ()\n)\n...\n. ",
    "sivamrkumar": "This is still not working.\n. ",
    "gbisaga": "Thank you for your comment, Tony - I forgot to respond.\n. We could really use this. We're having to hack the JSON with maven post-processing. And it's more painful the more we use swagger.\n. ",
    "SirWellington": "I'm facing this same issue too. Any updates? Is there something that can be done for sub resources created in this way?\n. Update: Actually after chaging my code from\njava\npublic Resource getSubResource()\n{\nreturn Resource.from(SubResource.class);\n}\nto\njava\npublic Class<SubResource> getSubResource()\n{\nreturn SubResource.class;\n}\nWorks well with HK2 and Jersey's lifecycle management.\n. ",
    "mrksdck": "I am using Jersey 1.18, but maybe the issue is related.\nIn my example app several @Path annotations are used to describe an endpoint, also illustrated in the following snippets.\njerseys servlet url-pattern is /rest/* and with the StringResource, the path goes on with /string/static/\n``` java\n@Path(\"/string\")\npublic class StringResource {\n@Path(\"static\")\npublic Class<StaticStringResource> getStaticStringResource() {\n    return StaticStringResource.class;\n}\n\n}\n```\nClass StaticStringResource is the subresource and is preceeded by the path : /string/static/ as also annotated in @Api\nThe method paths (with base path) are /rest/string/static/hello and /rest/string/static/{string}\n``` java\nApi(value =\"/string/static\")\npublic class StaticStringResource {\n@ApiOperation( value =\"hello world\")\n@GET\n@Path(\"/hello\")\npublic String getStaticHelloWorld(){\n    return \"Hello World\";\n}\n\n\n@ApiOperation( value =\"identity function\")\n@GET\n@Path(\"{string}\")\npublic String getStatic(@PathParam(\"string\") String string){\n    return string;\n}\n\n}\n```\nThe json output of /rest/string/static/ is as follows:\n``` json\n{\n  \"apiVersion\": \"0.1\",\n  \"swaggerVersion\": \"1.2\",\n  \"basePath\": \"http://localhost:8080/rest\",\n  \"resourcePath\": \"/string/static\",\n  \"apis\": [\n    {\n      \"path\": \"/{string}\",\n      \"operations\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"identity function\",\n          \"notes\": \"\",\n          \"type\": \"string\",\n          \"nickname\": \"getStatic\",\n          \"parameters\": [\n            {\n              \"name\": \"string\",\n              \"required\": true,\n              \"type\": \"string\",\n              \"paramType\": \"path\",\n              \"allowMultiple\": false\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"/hello\",\n      \"operations\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"hello world\",\n          \"notes\": \"\",\n          \"type\": \"string\",\n          \"nickname\": \"getStaticHelloWorld\",\n          \"parameters\": []\n        }\n      ]\n    }\n  ]\n}\n```\nSince the resourcePath is not feeded by the jerseys @Path annotation the method paths are somewhat partial.\nIf i click the \"Try it out!\" button on hello the url is http://localhost:8080/rest/hello\nIt seems the @Path annotations in StringResource are not used.\n. @webron and @fehguy : I think my issue is not relly related with the original issue.\nIs the @Path annotation only used in class/method of the endpoint?\n. as in the example, the path to the endpoint si composed of several @Path usages in different classes. \nThis usage of these annotations (e.g. StringResource), doesnt seem to work well with swagger\n. ",
    "querua": "Hi I am still experiencing problem with \"class-based\" subresources which was described here and subsequently fixed in https://github.com/swagger-api/swagger-core/pull/994\nso when I am using following approach subresources  are not getting detected at all\npublic Class<SomeSubResource> continueInSubResource() {\n  return SomeSubResource.class;\n}\nhowever when I tried following, subresources are detected\n```\n@Context\nResourceContext resourceContext;\npublic SomeSubResource continueInSubResource() {\n  return resourceContext.getResource(SomeSubResource.class);\n}\n```\nWe are using Jersey v2.25.1, swagger-annotations v1.5.13 and  swagger-maven-plugin v3.1.2\nCould somebody please reopen this issue? Are provided information sufficient?. ",
    "knutwalker": "I figured, since the jersey/jax-rs annotations worked on subclasses without repetition, the same might apply to swagger\u2019s annotations.\nI\u2019m quite unfamiliar in the field of implementing annotations, but maybe the inherited annotation could help me here?\nOn Dec 11, 2013, at 5:59 PM, Tony Tam notifications@github.com wrote:\n\nI believe the annotations cannot be read by swagger when they are on a superclass.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "katoquro": "If i right understood, ReflectiveJaxrsScanner gets only classes annotated with @API. It doesn't solve issue with http methods annotations and return types.\nI'm afraid that @Inherited doesn't make sense in this case, you cannot change public signature (f.e. javax.ws.rs.POST). There is an issue with scanning of parents for @ApiOperation I think. e.g if there are no @GET, @POST etc... on @ApiOperation then look through parents inclusive interfaces\n. P.S.  it seams like org.reflections allows you to get all annotations for the method link\n. ",
    "uzokis": "Hi, thanks for the reply.\nFor clarity, i have now renamed http://localhost/servlet/SWAGGER-API to http://localhost/servlet/api-docs which was the intented use of that path.\nSo as you explained i indeed expect the listing at http://localhost/servlet/api-docs, which - in my case - should contain an api reference to http://localhost/servlet/api-docs/consumers\nI checked the scala-servlet example and i already have an api annotation which looks right to me\n@Api(value = \"/consumers\", description = \"Operations on consumers\")\npublic class ConsumerResource extends AbstractRestResource\nBut this still returns the following on http://localhost/servlet/api-docs\n{\"apiVersion\":\"1.0.0\",\"swaggerVersion\":\"1.2\",\"apis\":[{\"path\":\"/\"}]}\nWhile http://localhost/servlet/api-docs/ returns a json array with the api description \n[{\"apiVersion\":\"1.0.0\",\"swaggerVersion\":\"1.2\",\"basePath\":\"http://localhost:10054/rest\",\"resourcePath\":\"/\",\"apis\":[{\"path\":\"/consumers\",\"description\":\"description\",\"operations\":[{\"method\":\"GET\",\"summary\":\".........}}}]\nAnd http://localhost/servlet/api-docs/consumers returns an empty array but shows the following:\nDEBUG - requiredModels: ListBuffer(ConsumerRO)\nDEBUG - existingModels: List(ConsumerRO, string, Address, string)\nDEBUG - expanding ConsumerRO\nDEBUG - expanding Address\nI suspect this is still empty because i haven't annotated any of these classes yet.\nBut as you say it seems there's still something wrong with the basic configuration.\nCan i somehow configure what swagger should take as root resource of the resource listing? Or what may still be configured wrong?\nAdditionally, these are the 2 swagger servlets i have configured\ncom.wordnik.swagger.servlet.config.DefaultServletReaderConfig\napi.version=1.0.0\nswagger.api.basepath=http://localhost:10054/rest\nswagger.resource.package=my.application.resource\ncom.wordnik.swagger.servlet.listing.ApiDeclarationServlet\nmapped to /servlet/api-docs/*\nkind regards\n. ",
    "bigmouse111": "is there anyone can fix it?\n. chinese content can display normal when annotate methods but abnormal when annotate resources \njava\n@GET\n@Path(\"/test/{username}\")\n@Produces(MediaType.APPLICATION_JSON)\n@ApiOperation(value = \"this is a test function \u6d4b\u8bd5\", response = JSONObject.class)\n@ApiResponses(value = { @ApiResponse(code = 9999, message = \"failed\")})\nwhen i annotate my methods like above, what i can get from swagger is normal which display like below\njson\napis: [\n{\npath: \"/test/test/{username}\",\noperations: [\n{\nmethod: \"GET\",\nsummary: \"this is a test function \u6d4b\u8bd5\",\nnotes: \"\",\ntype: \"org.json.JSONObject\",\nnickname: \"newreaddel\",\nproduces: [\n\"application/json\"\n],\n......\nbut when i annotate my resources like:\njava\n@Api(value = \"/test\", description = \"rest test\u6d4b\u8bd5\")\nwhat i get from swagger is abnormal which like below:\njson\napis: [\n{\npath: \"/test\",\ndescription: \"rest test\ufffd\ufffd\ufffd\ufffd\"\n}\n],\n. well done\uff01monster kill!\n. my master~~ could u give me more detail? i don't understand~~~\n. what i mean is when i follow java-jaxrs-cxf sample to confiure the swagger.filter, the filter didn't works, i can get all the rest list with any api_key.\nso could u give me a correct way to do it? thanks a lot~~~~\n. well done\uff01monster kill!\n. ",
    "sverhagen": "Hope that this is the right place to ask/report this, been a little lost in Swagger-land.\n. > If you're using the ReflectiveJaxrsScanner, I think it should work.\nConfirmed in Dropwizard as follows:\n```\npublic class SwaggerBundle extends AssetsBundle {\n...\n\n@Override\npublic void run(Environment environment) {\n    ...\n\n    // Swagger Scanner, which finds all the resources for @Api Annotations\n    // ScannerFactory.setScanner(new DefaultJaxrsScanner());\n    ReflectiveJaxrsScanner reflectiveJaxrsScanner = new ReflectiveJaxrsScanner();\n    reflectiveJaxrsScanner.setResourcePackage(\"com.mycompany.project\");\n    ScannerFactory.setScanner(reflectiveJaxrsScanner);\n\n...\n```\nThank you for your assistance.\n. I'm sorry, but upon further inspection I believe that this is still not working.\nChild class:\n@GET\n@UnitOfWork(readOnly = true)\n@Override\npublic List<SomeDto> query(@Context UriInfo uriInfo) {\n    return super.query(uriInfo);\n}\nBase class:\npublic List<TDto> query(@Context UriInfo uriInfo) {\n    ...\n}\nInterface:\n@GET\n@Timed\n@ApiOperation( ... )\n@ApiImplicitParams( ... )\nList<SomeDto> query(@Context UriInfo uriInfo);\nThis does not show up in the API documentation, yet the GET itself works fine.\n. Sorry for the confusion. I don't know what I did wrong, I must have had snot in my head (I did indeed suffer a cold), but the previous reported solution did in fact work. It worked for a child class with an parameterized abstract base class.\n\nwhat you're trying to do? I'm not quite following your hierarchy w/Child + Base + Interface\n\nI like the following set-up, and have had that previously working in Swagger Spring MVC (and will possibly be working towards that in Swagger JAX/RS as well):\n- Abstract base class implements common CRUD operations: create one, get one by its ID, update and delete\n- Specific interface defines non-common operations: get one by some business-specific field, and so on\n- Child class extends the abstract base class for the common CRUD operations; implements the additional non-common operations from the specific interface\nThanks for your assistance.\n. It appears that @XmlRootElement overrides @ApiModel. If you do the following it seems to work (for me), YMMV:\n@XmlRootElement(name = \"Item\")\n@ApiModel(value = \"Item\")\npublic class ItemV1 {}\nThat is not to say that it is confusing that ApiModel.value is not picked up.\n. To make matters 'worse' it seems that you need to set both for it to work.\n. ",
    "okigan": "@fehguy @sverhagen dont think this works, @Api attribute now marked as @Inherited, but @ApiOperation, @ApiResponses are not, so methods do not show up\n. @webron opened  #1072\n. this seems utterly weird, why description of API endpoint is now forced to be placed in bootstrap code? \nis it not the whole point of @Api annotation (or any other annotation) to place relevant information near the class/interface?\n. Looks like swagger already creates a default tag by @Api annotation, then consider following behavior: if only default tag is present show the default description, if custom tag is provided do not show default tag/description and display according to custom tag with tag's description.\nMuch easier transition path, and no ambiguity which description is applied. \n```\ndefault_tagA defaultA_description\n   method A1\n   method A2\ndefault_tagB defaultB_description\n   method B1\n   method B2\ncustom_tag custom_description\n   method A1\n   method A2\n   method B1\n   method B2\n```\n. Particularly painful as cannot define interfaces separately and reuse that with automatic client generation (ex. using https://github.com/Netflix/feign)\n. @olensmar hmm, good point, the issue still remains: methods from base class/interface annotated with ApiOperation do not show up in the documentation....\n. @webron @olensmar I think then this part is relevant: I think the javax.ws.rs.GET annotation is not picked up when a method is derived overridden, so extractOperationMethod needs to traverse up to the base base method while looking for javax.ws.rs.* annotations, or there is another way ?  \npublic String extractOperationMethod(ApiOperation apiOperation, Method method, Iterator<SwaggerExtension> chain) {\n    if(apiOperation.httpMethod() != null && !\"\".equals(apiOperation.httpMethod()))\n      return apiOperation.httpMethod().toLowerCase();\n    else if(method.getAnnotation(javax.ws.rs.GET.class) != null)\n      return \"get\";\n    else .....\n    }\n    else if(chain.hasNext())\n      return chain.next().extractOperationMethod(apiOperation, method, chain);\n    else\n      return null;\n}\n. @webron i'll try to modify java-jersey-jaxrs sample\n. Here is a branch with modification: https://github.com/okigan/swagger-core/tree/base-resource-swagger\nbefore modification: \n\nafter, Note, pet interface does not show up anymore, but it is detected (see next image): \n\nswagger.json file after modification, note interface detected, but no methods (btw, would be nice if swagger.js would still show it): \n\n. @fehguy as we still in discussion, would you re-open this issue?\nAlso any more info needed from my side?\n. Oh I see\nSent from my iPhone\n\nOn May 16, 2015, at 11:13 AM, Ron notifications@github.com wrote:\n@okigan - since this is a PR, I'd suggest opening an issue rather than reopen the PR.\n\u2014\nReply to this email directly or view it on GitHub.\n. @webron hmm, yeah seems to work, odd i'll see what's the difference between this sample and my actual project\n. @webron ok, forgot the key change -- to actually override the method, and now it does not work (i am sure of it)\n\nbranch: https://github.com/okigan/swagger-core/tree/base-resource-swagger\nbefore and after snapshot (note the GET method is gone):\n\n\n. @webron bump ;)\n. hmm, odd, github did not notify about above changes -- but awesome to see this, i'll check it out shortly \n. looks like samples got removed in develop_2.0 branch, so i'd need to\nre-bootstrap my test\nOn Fri, Jun 5, 2015 at 2:39 PM, Ron notifications@github.com wrote:\n\n@okigan https://github.com/okigan - any update? We're very close to\nmaking a release so any input would be useful.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1091#issuecomment-109447275\n.\n. So i went back to original fix commit that still has samples in same code base (https://github.com/swagger-api/swagger-core/commit/f9ce1e36f0886af5e847566013c7b137570025dc) and modified that, looks good: \n\n\n. green light from me\n. +1 also see the same issue, any workaround to specify return type on ApiOperation? \n. ",
    "shouze": "It's a call to implement LINK/UNLINK http methods as described here:\nhttp://tools.ietf.org/id/draft-snell-link-method-01.html\n. ",
    "jperl": "Never mind I get an exception when I try to do this.\n. ",
    "ghchinoy": "The handlebars templates in no-server needs to be recompiled, too. rakefiles aren't included, so I'm not clear on how I'd do this to contribute a pr. I'd be happy to contribute, not sure how to recompile. Workaround is to re-reference 1.0.rc.1.min.js since the included lib\\handlebars-1.0.0.js will not work.\nUncaught Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (>= 1.0.0) or downgrade your runtime to an older version (<= 1.0.rc.2).\n. Thank you! That definitely works - would it be reasonable to remove samples/no-server and replace with a README that points to the swagger-ui project in the future?\n. ",
    "helgoboss": "Didn't realize there's a separate dev branch. Thanks!\n. Thank you, that should do it. Hard-coded UTF-8 is ok for me.\n. ",
    "kieranbenton": "Ah ha! Thank you - that works, and I can understand why that would be the\ncase now.\nCandidate to add to the example application though? Its not immediately\nobvious.\nOn 5 January 2014 16:12, Tony Tam notifications@github.com wrote:\n\nfor case classes, you need to add @field https://github.com/fieldannotations like such:\nscala\n@(ApiModelProperty @field (position=1)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/409#issuecomment-31607759\n.\n. To be honest - various ones and a fair bit of experimentation. This one\nmainly though:\n\nhttps://github.com/wordnik/swagger-core/tree/master/modules/swagger-play2\nhttps://github.com/wordnik/swagger-core/tree/master/samples/scala-play2\nWhilst I'm at it - I don't suppose you know if there is a related issue\nwith the application level info (@ApiInfo?) do you? Struggling to get that\nto work. Plus I've got an issue with a property called \"is_persistent\" on\none of my models that gets truncated to \"_persistent\" in the api docs but\npretty sure thats a bug! :)\nOn 5 January 2014 16:53, Tony Tam notifications@github.com wrote:\n\nYes, that seems to get me every time. Which example did you follow?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/409#issuecomment-31608863\n.\n. Sure thing.\n\nOn 5 January 2014 17:09, Tony Tam notifications@github.com wrote:\n\nThe application level info should be set in a Global.scala like such:\nimport play.api.\nimport com.wordnik.swagger.config._import com.wordnik.swagger.model.\nobject Global extends GlobalSettings {\n  val info = ApiInfo(\n    title = \"Swagger Sample App\",\n    description = \"\"\"This is a sample server Petstore server.  You can find out more about Swagger     at http://swagger.wordnik.com or on irc.freenode.net, #swagger.  For this sample,    you can use the api key \"special-key\" to test the authorization filters\"\"\",\n    termsOfServiceUrl = \"http://helloreverb.com/terms/\",\n    contact = \"apiteam@wordnik.com\",\n    license = \"Apache 2.0\",\n    licenseUrl = \"http://www.apache.org/licenses/LICENSE-2.0.html\")\nConfigFactory.config.info = Some(info)}\nhowever, I don't see it being picked up. Can you open a new issue for\nthat? Should be a trivial fix.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/409#issuecomment-31609250\n.\n. Issue #410 opened and I'll close this one.\n\nOn 5 January 2014 17:11, Kieran Benton me@kieranbenton.com wrote:\n\nSure thing.\nOn 5 January 2014 17:09, Tony Tam notifications@github.com wrote:\n\nThe application level info should be set in a Global.scala like such:\nimport play.api.\nimport com.wordnik.swagger.config._import com.wordnik.swagger.model.\nobject Global extends GlobalSettings {\n  val info = ApiInfo(\n    title = \"Swagger Sample App\",\n    description = \"\"\"This is a sample server Petstore server.  You can find out more about Swagger     at http://swagger.wordnik.com or on irc.freenode.net, #swagger.  For this sample,    you can use the api key \"special-key\" to test the authorization filters\"\"\",\n    termsOfServiceUrl = \"http://helloreverb.com/terms/\",\n    contact = \"apiteam@wordnik.com\",\n    license = \"Apache 2.0\",\n    licenseUrl = \"http://www.apache.org/licenses/LICENSE-2.0.html\")\nConfigFactory.config.info = Some(info)}\nhowever, I don't see it being picked up. Can you open a new issue for\nthat? Should be a trivial fix.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/409#issuecomment-31609250\n.\n. Or rather you'll have to as I can't :)\n\n\nOn 5 January 2014 17:15, Kieran Benton me@kieranbenton.com wrote:\n\nIssue #410 opened and I'll close this one.\nOn 5 January 2014 17:11, Kieran Benton me@kieranbenton.com wrote:\n\nSure thing.\nOn 5 January 2014 17:09, Tony Tam notifications@github.com wrote:\n\nThe application level info should be set in a Global.scala like such:\nimport play.api.\nimport com.wordnik.swagger.config._import com.wordnik.swagger.model.\nobject Global extends GlobalSettings {\n  val info = ApiInfo(\n    title = \"Swagger Sample App\",\n    description = \"\"\"This is a sample server Petstore server.  You can find out more about Swagger     at http://swagger.wordnik.com or on irc.freenode.net, #swagger.  For this sample,    you can use the api key \"special-key\" to test the authorization filters\"\"\",\n    termsOfServiceUrl = \"http://helloreverb.com/terms/\",\n    contact = \"apiteam@wordnik.com\",\n    license = \"Apache 2.0\",\n    licenseUrl = \"http://www.apache.org/licenses/LICENSE-2.0.html\")\nConfigFactory.config.info = Some(info)}\nhowever, I don't see it being picked up. Can you open a new issue for\nthat? Should be a trivial fix.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/409#issuecomment-31609250\n.\n. \n\n\n",
    "danielflower": "I spent ages trying to bypass BeanConfig, classpath scanning, reflection, Spring, XML and anything that wasn't plain java specifying what to configure. The result is here in case anyone else is interested.\n. ",
    "mkantor": "We just got bit by this today. Our application didn't know that it needed to convert \"is*\" parameters in order to be consistent with the generated spec.\nIs this documented somewhere? Any other automatic conversions that we should be aware of besides \"is_\" and \"get_\"?\n. The way it's written, even properties with names like \"isometric\" get mangled. This definitely isn't desirable behavior.\n. :clap: \n. ",
    "cowtowncoder": "Right: isXxx methods are auto-detected if enabled by visibility (separately controlled as \"is-getters\", distinct from \"regular\" getters) AND return type is boolean or Boolean.\nIf detected, name mangling is identical to get methods.\nJackson 2.5 has a new MapperFeature, USE_STD_BEAN_NAMING: http://fasterxml.github.io/jackson-databind/javadoc/2.5/com/fasterxml/jackson/databind/MapperFeature.html#USE_STD_BEAN_NAMING\nwhich can be enabled to change it slightly (earlier getURL results in Url; with STD_BEAN_NAMING_ENABLED, remains URL), but I don't think it'd have effect here.\nIf the goal is NOT to detect these methods, it is easy enough to change by changing visibility levels.\nOne way is with @JsonAutoDetect; another with ObjectMapper.setVisibility(), which can either:\n- Change level for specific kind of accessor (setter, getter, field, is-getter, constructor), or\n- Use a fully custom VisibilityChecker\nThere is no simple overridability wrt name mangling (to perhaps avoid \"is_persistent\", when naming scheme would expect camel-case), although it might be possible to find overrides that work there.\nSo the question is just what is the desired behavior.\n. @pjfanning unless there's a self-contained test, it's highly unlikely anyone has time on short term. Or even just a code snippet to show what the suspected problem is. At this point there are no known type-resolution issues with 2.7.8 (but a few have been fixed since 2.7.0), so typically remaining issues are with usage of TypeFactory.\n. @pjfanning What I meant was a unit test to point out exact discrepancy. Printing out things isn't the same as it requires more knowledge of what the problem is.\nHowever...\nLooking at code itself from driver class I can see that expected usage will not work. You can not simply pass an arbitrary java.lang.reflect.Type without context to get generics reliably resolved (unfortunate!) -- actual generic type bindings are only available from enclosing (declaring) class, or in many cases, in sub-class definitions. Things may have worked different earlier (2.4), but functioning if any was more accidental than intentional. For what it's worth, change occurred between 2.6 and 2.7, so latest 2.6 should work similar to 2.4 for short term.\nAnyway: usage may or may not work for individual cases, but there are known cases where it does not.\nIn this case the proper resolution must use a longer route. There are 2 main approaches:\n\nConstructing BeanDescription: high-level, constructs logical properties, all annotation handling\nConstructing AnnotatedClass: low-level, but does resolve all types.\n\nIn either case, declaring class (UserApiRoute) needs to be resolved into JavaType first, and then either:\n\nmapper.getSerializationConfig().introspect(javaType); // or DeserializationConfig, slightly different rules\nAnnotatedClass.construct(javaType, mapper.getSerializationConfig());\n\nto get object you want. And after that can find methods with fully resolved types.\nChoice of approach depends on whether it's just for Bean type access (BeanDescription), or if you need to access all kinds of methods, fields (AnnotatedClass).\nI hope this helps: I can provide more information as necessary.\n. ",
    "dmn1899": "Hi guys\nyour decision is not clear correct\nthere are correct getters and setters with lower case after 'get', for example for property 'aName' getter will be named 'getaName'. intellij idea generates it and considers it is valid\nyour check\n!Character.isUpperCase(altName.charAt(offset)\nshould replace with\n!Character.isUpperCase(offset) && !Character.isLowerCase(offset)\nspecial simbols ('_' for example) is not upper or lower case\nbest regards, hope you will fix it. ",
    "mauhiz": "@kieranbenton with the latest Swagger (1.3.9-SNAPSHOT), I have managed to override using required=false. Still, requires a lot of manual work.\n. How slower does Swagger make things, exactly? Is scanning the annotations the slow part?\n. Will someone please review this?\n. @fehguy Thanks! Will do.\nWhat about the scala 2.11 support branch, would my changes be merged into it later?\n. ",
    "ilesm": "Still exists in 1.3.10.\nAlso note SO question: http://stackoverflow.com/questions/21854217/optional-params-with-play-2-and-swagger\n. ",
    "ChristoRibeiro": "@ApiParam doesn't interpret Option also. There is a work in progress with that? 'im using swagger-play2 1.3.10 and this issue is still there \n. it works !  :+1: \n. it works !  :+1: \n. ",
    "ctoomey": "Found this issue after running into the problem with 1.3.12. I found that for parameters of type Option[T], @ApiModelProperty requires using dataType=\"T\", i.e., it doesn't automatically extract the type parameter for Options. Reading through above I didn't realize I'd still need to manually specify dataType so thought I'd document it for others.\n. +1\n. Is this likely to get done any time soon, and if not, how could those of us watching potentially help get it done?\n. From a quick look at the repo it looks like it's the Swagger 1.2 Play module, i.e., nothing's been started yet on the migration to Swagger 2 using the swagger-scala module. Is this accurate?\nI think what's needed to get folks to start helping out is an outline of the work that needs to be done, an updated build setup (Build.scala or whatever), and perhaps a stab at stubbing out the envisioned traits and classes.\n. ",
    "damnhandy": "This looks like an issue with the Maven plug and not the Jersey 2 Swagger module. I'm running Swagger and Jersey 2 on Mac OS X 10.9 with Java 1.7u45 and I don't have this issue.\n. ",
    "terwey": "http://stackoverflow.com/a/19324816 I had roughly the same problem with swagger-codegen. This fixed it for me ;)\n. ",
    "seratch": "I just tried and it works fine! Would you release 1.3.2?\n. ",
    "ron190": "I had the same scala.MatchError while using an old version of the library :\n<dependency>\n    <groupId>com.wordnik</groupId>\n    <artifactId>swagger-jaxrs_2.10</artifactId>\n    <version>1.3.1</version>\n</dependency>\nChanging to a new version has resolved the error :\n<dependency>\n    <groupId>com.wordnik</groupId>\n    <artifactId>swagger-jaxrs_2.11</artifactId>\n    <version>1.3.12</version>\n</dependency>\n. I had the same scala.MatchError while using an old version of the library :\n<dependency>\n    <groupId>com.wordnik</groupId>\n    <artifactId>swagger-jaxrs_2.10</artifactId>\n    <version>1.3.1</version>\n</dependency>\nChanging to a new version has resolved the error :\n<dependency>\n    <groupId>com.wordnik</groupId>\n    <artifactId>swagger-jaxrs_2.11</artifactId>\n    <version>1.3.12</version>\n</dependency>\n. ",
    "bkowalik": "I'm sorry. I was building with flag skipTests to speedup whole process... I'll fix that.\n. Now test are green.\n. ",
    "luchesar": "Closing this pull request as replaced by\nhttps://github.com/wordnik/swagger-core/pull/434 to the develop branch\n. Closing this pull request as replaced by\nhttps://github.com/wordnik/swagger-core/pull/434 to the develop branch\n. I created this example because I was struggling to setup my own project.\nThe main problem I faced was I was not able to get Swagger to do anything which was very confusing. There were no logs or exceptions or any other feedback.\nThe problem is pretty obvious as the Swagger documentation endpoint api-docs is exposed trough a Jersey endpoint in ApiListingResourceJSON. Among all other configuration adding this class to be scanned by Jersey for restful annotations is the first thing anybody should do.\nI did everything else but not the most important one. In the example this is done in com.wordnik.swagger.sample.Application\n. I created this example because I was struggling to setup my own project.\nThe main problem I faced was I was not able to get Swagger to do anything which was very confusing. There were no logs or exceptions or any other feedback.\nThe problem is pretty obvious as the Swagger documentation endpoint api-docs is exposed trough a Jersey endpoint in ApiListingResourceJSON. Among all other configuration adding this class to be scanned by Jersey for restful annotations is the first thing anybody should do.\nI did everything else but not the most important one. In the example this is done in com.wordnik.swagger.sample.Application\n. ",
    "giovannibotta": "I think there was an IntelliJ + Maven + Scala problem. I switched to Gradle (which is the tool we use here) and now I'm getting:\nException in thread \"main\" java.lang.NoSuchMethodError: com.wordnik.swagger.model.ResourceListing$.apply$default$5()Lscala/Option;\n  at com.wordnik.swagger.servlet.listing.ApiDeclarationServlet.renderResourceListing(ApiDeclarationServlet.scala:41)\nwhenever I try to call the renderResourceListing method programmatically (without the servlet running).\nIt still looks like a Scala version mismatch. I'm using 2.10.3 and I tried with 2.10.1 with no luck. Ideas?\n. These are all my dependencies:\ncompile 'org.scala-lang:scala-library:2.10.3'\ncompile 'javax.ws.rs:jsr311-api:1.1.1'\ncompile 'javax.servlet:javax.servlet-api:3.1.0'\ncompile 'com.wordnik:swagger-jaxrs_2.10:1.3.1'\ncompile 'com.wordnik:swagger-servlet_2.10:1.3.1'\ncompile 'com.wordnik:swagger-codegen_2.10:2.0.11'\ncompile 'com.google.code.findbugs:jsr305:2.0.0'\ncompile 'org.mockito:mockito-core:1.9.5'\n. I did and it works fine now. How can I use the codegen library?\n. Sorry, yes I mean how can I now include the codegen library in my project? Code generation is the main goal I want to achieve. Thanks again!\n. Gotcha. I'll keep the two modules separate.\n. I don't see any Maven plugin at that page, am I missing something?\n. @fehguy Actually the Jersey docs clearly states that the annotations can be on the bean fields or properties. Would that be a big change to make?\n. By the way, in JerseyApiReader in the readRecursive method, I was looking at this line:\n// look for method-level annotated properties\nval parentParams: List[Parameter] = getAllParamsFromFields(cls)\nHere the parameters are extracted from resource fields that might be annotated with one of QueryParam, etc. However, the docs state that a QueryParam annotation is legal in a \"resource class bean property\". Similarly for PathParam and HeaderParam. \nSo this should be supported by Swagger as well. I see an easy way of doing it by modifying (and possibly renaming) the getAllParamsFromFields to go off annotations on fields and bean properties.\n. Here's a working implementation:\n```\noverride def getAllParamsFromFields(cls: Class[_]): List[Parameter] = {\n  (cls.getDeclaredMethods map {\n    method =>\n      if (method.getAnnotation(classOf[QueryParam]) != null ||\n        method.getAnnotation(classOf[HeaderParam]) != null ||\n        method.getAnnotation(classOf[PathParam]) != null ||\n        method.getAnnotation(classOf[ApiParam]) != null) {\n        createParameterFromGetterOrSetter(method).toList\n      } else Nil\n  }).flatten.toList ++\n    (for (field <- getAllFields(cls)) yield {    \n      if (field.getAnnotation(classOf[QueryParam]) != null ||\n        field.getAnnotation(classOf[HeaderParam]) != null ||\n        field.getAnnotation(classOf[PathParam]) != null ||\n        field.getAnnotation(classOf[ApiParam]) != null) {\n        val param = new MutableParameter\n        param.dataType = processDataType(field.getType, field.getGenericType)\n        Option(field.getAnnotation(classOf[ApiParam])) match {\n          case Some(annotation) => toAllowableValues(annotation.allowableValues)\n          case _ =>\n        }\n        val annotations = field.getAnnotations\n        processParamAnnotations(param, annotations)\n      }\n      else List.empty\n    }).flatten.toList\n}\nval getterPattern = \"\"\"get(.+)\"\"\".r\nval setterPattern = \"\"\"set(.+)\"\"\".r\ndef createParameterFromGetterOrSetter(method: Method): List[Parameter] = {\n  (method.getName match {\n    case getterPattern(propertyName) =>\n      val param = new MutableParameter\n      param.dataType = processDataType(method.getReturnType, method.getGenericReturnType)\n      Some(param)\n    case setterPattern(propertyName) =>\n      val param = new MutableParameter\n      param.dataType = processDataType(method.getParameterTypes()(0), method.getGenericParameterTypes()(0))\n      Some(param)\n    case _ => None\n  }).toList.map {\n    param =>\n      Option(method.getAnnotation(classOf[ApiParam])) match {\n        case Some(annotation) => toAllowableValues(annotation.allowableValues)\n        case _ =>\n      }\n      val annotations = method.getAnnotations\n      processParamAnnotations(param, annotations)\n  }.flatten\n}\n``\n. Added pull request for this.\n. Added pull request for this.\n. Just a follow up, the methodSwaggerSerializers.toJsonSchemaContainerseems to be a good candidate to handle any type of container. However, right now it belongs to an object so it can't be overloaded in any easy way. Unless there's another hook somewhere else, I suggest moving the logic to a trait and then mix it in theSwaggerSerializersor even better theJsonSerializerclass so that the user can extend the trait for easy modification. Or a completely different hook into custom container specification could be provided in the form of some user provided map.\n. Well, it's common practice to return paged results from a search. The result is indeed a list, but it also contains information on the page number and total number of pages, e.g., like you see when you do a google search. The object that encapsulates this behavior is called aPageList` in our project and it basically has this interface:\ninterface PageList<E> extends List<E> {\n  public int pageNumber();\n  public int totalPages();\n}\nHowever, if a REST method returns a PageList, the only container that's close enough to it that we can specify in the ApiOperation annotation is \"List\", which is not good enough, because all information about page number and total number of pages is lost. Using PageList as the response class doesn't cut it either because then the type of the list is lost. \nI guess one elegant way to handle this would be to support generic models, not just collections, i.e., the response type can be class X which can be optionally parameterized with type Y:\n@ApiOperation(value = \"list stuff\", \n  response = PageList.class, \n  typeParameter = MyEntity.class)\npublic void PageList<MyEntity> list(...){...}\nor something along those lines. The work around we have now is that at code generation time we assume all lists are PageLists and generate client code accordingly. This puts a little bit of maintenance burden on our hands and less flexibility because we lost the simple list type.\n. I don't think there's a subtyping issue here, just a generics issue.\n. The ClasspathHelper.forPackage() method will find all the classes in the classpath where the given package lives.\n. Passing the package to the Reflections constructor makes it the only package being scanned which seems to be the intended behavior here.\n. ",
    "goose2460": "I haven't been able to test that one because, after testing on 2 servers, it sends it as multipart/form-data instead of application/x-www-form-urlencoded and I get a status code 415.\nI'll even give you the url to my server so you can confirm the issue, this is the unaltered swagger ui sample.  http://54.197.228.161/iso/\n. I'm running the latest version of the sample, could it be something with my server configuration?\nhttp://54.197.228.161/iso/#!/pet/updatePetWithForm_post_2\n. Sorry, not sure if I understand.  I just copied the /dist directory onto my own server.  The base url still points to petstore.swagger...\n. Confirmed as a non-issue on the 'oauth2' branch.\n. ",
    "sohailehmad": "I am also facing this issue. Is there any temporary solution for issue in java?\n. @XmlElementon works fine on getter function. So make your field private and access it through getters and setters\n. ",
    "DavidPerezIngeniero": "+1 for Spray support and sample.\nI've found this simple sample: \nhttps://github.com/lloydmeta/spray-servlet-scratchpad\n. ",
    "poornerd": "DOH - I was not using \"special-key\" as the API Key.  I ended up just commenting out the Key Check.\n. ",
    "davidecavestro": "In the meantime how can I redefine i.e. ignoredPackages using only Java or Groovy? I 've found no way to populate a scala.collection.immutable.Set<String> from those languages.\nUPDATE: the following hack works\n``` MyModelConverter.groovy\n...\n        @Override\n        public Set ignoredPackages() {\n            scala.collection.mutable.LinkedHashSet set = new scala.collection.mutable.LinkedHashSet()\n            def pkgs = [\n                'java.lang',\n                'groovy.lang',\n                'java.util'\n            ] as LinkedHashSet\n            pkgs << delegateConverter.ignoredPackages()\n            pkgs.each {set.add (it)}\n            set.toSet()\n        }\n...\n``\n. In the meantime how can I redefine i.e.ignoredPackagesusing only Java or Groovy? I 've found no way to populate ascala.collection.immutable.Set` from those languages.\nUPDATE: the following hack works\n``` MyModelConverter.groovy\n...\n        @Override\n        public Set ignoredPackages() {\n            scala.collection.mutable.LinkedHashSet set = new scala.collection.mutable.LinkedHashSet()\n            def pkgs = [\n                'java.lang',\n                'groovy.lang',\n                'java.util'\n            ] as LinkedHashSet\n            pkgs << delegateConverter.ignoredPackages()\n            pkgs.each {set.add (it)}\n            set.toSet()\n        }\n...\n```\n. Cool. Many thanks!\nInviato da Samsung Mobile\nShadow Man notifications@github.com ha scritto:\nHere is an example for java.util.Set to scala.collection.immutable.Set that isn't too much of a PITA:\njava.util.Set javaUtilOverrides = new HashSet(\n    Arrays.asList( new String[] {\n      \"java.lang\",\n      \"groovy.lang\",\n      \"java.util\"\n   } ) );\nscala.collection.immutable.Set scalaIgnoredPackageOverrides = JavaConverters\n    .asScalaSetConverter( javaUtilOverrides )\n    .asScala()\n    .toSet();\n\u2014\nReply to this email directly or view it on GitHub.\n. Cool. Many thanks!\nInviato da Samsung Mobile\nShadow Man notifications@github.com ha scritto:\nHere is an example for java.util.Set to scala.collection.immutable.Set that isn't too much of a PITA:\njava.util.Set javaUtilOverrides = new HashSet(\n    Arrays.asList( new String[] {\n      \"java.lang\",\n      \"groovy.lang\",\n      \"java.util\"\n   } ) );\nscala.collection.immutable.Set scalaIgnoredPackageOverrides = JavaConverters\n    .asScalaSetConverter( javaUtilOverrides )\n    .asScala()\n    .toSet();\n\u2014\nReply to this email directly or view it on GitHub.\n. @webron \nI was already using a snapshot built some days ago from reflections master branch (0.9.9-RC1).\n@fehguy \nThis is not blocking me anymore, cause in the meantime I've found a quick and clean workaround: forcing the URLClassloader parent to be a classloader that have already access to the annotation class (hence relaying on the default parent-first delegation strategy).\nTo be honest it should be also said that when you load the same class in more than a ClassLoader it's quite easy getting other side effects, like static state duplication and so on.\nThat's why I think the developers using swagger in exotic scenarios - like build systems integration - should be warned about the fact that the library uses reflection for code analysis, hence the classloader matters.\nUnfortunately the only alternatives I'm aware of for a code scanning that bypasses multiple classloaders issues are the ones that avoid loading the scanned code as classes, hence working at bytecode level (ASM, BCEL and so on).\n. @webron \nI was already using a snapshot built some days ago from reflections master branch (0.9.9-RC1).\n@fehguy \nThis is not blocking me anymore, cause in the meantime I've found a quick and clean workaround: forcing the URLClassloader parent to be a classloader that have already access to the annotation class (hence relaying on the default parent-first delegation strategy).\nTo be honest it should be also said that when you load the same class in more than a ClassLoader it's quite easy getting other side effects, like static state duplication and so on.\nThat's why I think the developers using swagger in exotic scenarios - like build systems integration - should be warned about the fact that the library uses reflection for code analysis, hence the classloader matters.\nUnfortunately the only alternatives I'm aware of for a code scanning that bypasses multiple classloaders issues are the ones that avoid loading the scanned code as classes, hence working at bytecode level (ASM, BCEL and so on).\n. ",
    "dirwin517": "+1\n. ",
    "avengerpenguin": "+1 for me. We're making a lot of use of @BeanParam now.\n. ",
    "gschmutz": "+1 would be nice as it would help to cleanup the signature of the API, having the annotations in the bean parameter class instead of in the parameter list .... Thanks!\n. ",
    "brianheineman": "+1 this is a feature our group needs as well\n. ",
    "mwwickline": "+1 we're trying to incorporate swagger for a new project and would like to make use of @BeanParam but still have the benefit of swagger docs and the super-nice \"try it now\" testability for query params.\n. ",
    "ncolomer": "+1 would be nice to have\n. That's just great! Thanks a lot :+1: \n. ",
    "Paave": "+1\n. perabello: clone the repo and build it by setting the version in the pom.xml under swagger-core module.\n. Hi guys,\nTried with 1.3.3-SNAPSHOT no luck yet... Also added some debug logs to the \"match case\":\nHere's the difference, first the model in web war, works fine (the logs are generated when calling the path api-docs/):\nprocessing method public java.lang.Integer com.model.TestClass.getI()\n@javax.xml.bind.annotation.XmlElement(nillable=false...\n(default task-10) XMLELEMENT PROPERTY CASE MATCHED\nma :@com.wordnik.swagger.annotations.ApiModelProperty(positio...\n(default task-10) API MODEL PROPERTY CASE MATCHED\nThen the EJB module case:\n(default task-10) processing method public java.lang.Integer model.EjbModel.getIntegterInEjb()\nma :@com.wordnik.swagger.annotations.ApiModelProperty(positio...\nma :@javax.xml.bind.annotation.XmlElement(nillable=fal...\n(default task-10) XMLELEMENT PROPERTY CASE MATCHED\nSo, for some reason the match case skips the ApiModelProperty paramater alltogether!? It's good to note that the XMLelement parameter works just fine, which is also weird to me. \nHere's again simple sample project that can reproduce the case on Wildfly 8 server. https://groups.google.com/group/swagger-swaggersocket/attach/101b8b58a6843084/mockproject.zip?part=4&authuser=0\n. To make it 100% clear: The match case I modified is in processAnnotations method.\n. Hi guys,\nWe got the issue solved by changing the project configuration. The EJB module scope in web module POM needs to be \"compile\". Otherwise while Checking the annotations Swagger will receive a proxy instead of the annotated interface and it fails to do the match case for getting the values. Working project https://groups.google.com/group/swagger-swaggersocket/attach/1d5184c961dcb6dc/mockproject%202.zip?part=4&authuser=0. \nThis issue can be closed IMO. Thanks for the activity! \n. Hi @webron, a while since I was working on this, but from https://groups.google.com/forum/#!topic/swagger-swaggersocket/xVvQekBHLxo you can find complete mock projects to reproduce the issue on Wildfly.\n. ",
    "shuz": "I made a simple fix but it's based on my own modified branch. You can refer to the commit here.\nhttps://github.com/shuz/swagger-core/commit/5213b4f11d417dbfc04822b7fb724541993ff1ae\nhttps://github.com/shuz/swagger-core/commit/ee6758072a124b57be6b9b30e3b8478cdc636896\n. @apemberton Would you also help double check that you are referencing swagger-jersey2-jaxrs? BeanParam is not available in swagger-jersey-jaxrs, so I only added in swagger-jersey2-jaxrs.\n. @apemberton To make generics work it require non-trivial code change. I made it work for models, but not for BeanParam yet. To make it display correctly, you also need changes in swagger-ui. I just hacked my copy of swagger UI and didn't have that uploaded to github. \nSince there is interface changes, there is no unit test yet, and it's not fully polished, it requires more time to reach the quality for a pull request. Maybe this will happen after I finish this very tight project.\nIf you are interested, the repo is in: https://github.com/shuz/swagger-core/ and in the \"junbo\" branch.\nAnd I opened another issue to track it. https://github.com/wordnik/swagger-core/issues/498\nIt's possible there are official effort on this already, I'm not sure.\n. The work around:\ndiff --git a/modules/swagger-core/src/main/scala/com/wordnik/swagger/converter/ModelPropertyParser.scala b/modules/swagger-core/src/main/scala/com/wordnik/swagger/converter/ModelPropertyParser.scala\nindex 30b7bab..9d183ec 100644\n--- a/modules/swagger-core/src/main/scala/com/wordnik/swagger/converter/ModelPropertyParser.scala\n+++ b/modules/swagger-core/src/main/scala/com/wordnik/swagger/converter/ModelPropertyParser.scala\n@@ -92 +91,0 @@ class ModelPropertyParser(cls: Class[_], t: Map[String, String] = Map.empty) (im\n-    if (name == null) name = originalName\n@@ -113,2 +112,3 @@ class ModelPropertyParser(cls: Class[_], t: Map[String, String] = Map.empty) (im\n-      val fieldAnnotations = getDeclaredField(this.cls, name).getAnnotations()\n-      var propAnnoOutput = processAnnotations(name, fieldAnnotations)\n+      val fieldAnnotations = getDeclaredField(this.cls, originalName).getAnnotations()\n+\n+      var propAnnoOutput = processAnnotations(originalName, fieldAnnotations)\n@@ -116,0 +117,3 @@ class ModelPropertyParser(cls: Class[_], t: Map[String, String] = Map.empty) (im\n+      if (name == null || name.equals(originalName)) {\n+        name = propAnnoOutput(\"name\").asInstanceOf[String]\n+      }\n@@ -133,0 +137,2 @@ class ModelPropertyParser(cls: Class[_], t: Map[String, String] = Map.empty) (im\n+    if (name == null) name = originalName\n+\n. I know there is no guarantee, but it's still better if they can be ordered as they scanned through reflection. Now the output order is different from the reflection order. I did some investigation, LinkedHashMap does preserve the order, but the items are still assigned a different order if their position are all zero. \n. I find the order is different if I don't assign the position in the ModelPropertyParser. However the order in the LinkedHashMap is correct. I'll investigate more.\n. Thank you very much. I understand there is no guarantee in the field order. However, if you remove the @JsonProperty(\"self\") from the model, the order would be correct. I also tried some scala model, the scala model field order is more \nThe simple POJO model:\n```\npublic class User {\n    @JsonProperty(\"self\")\n    private Long id;\n    private String userName;\n    private String status;\n    private String password;\npublic Long getId() { return id; }\npublic void setId(Long id) { this.id = id; }\npublic String getUserName() { return userName; }\npublic void setUserName(String userName) { this.userName = userName; }\npublic String getStatus() { return status; }\npublic void setStatus(String status) { this.status = status; }\npublic String getPassword() { return password; }\npublic void setPassword(String password) { this.password = password; }\n\n}\n```\nI find the code: the field is renamed, so it won't appear in the getDeclaredFields, and the position is then changed in com/wordnik/swagger/converter/SwaggerSchemaConverter.scala\n```\n        implicit val properties = new LinkedHashMapString, ModelProperty\n        new ModelPropertyParser(cls, typeMap).parse\n    val newProperties = mutable.Buffer.empty[(String, ModelProperty)]\n    cls.getDeclaredFields.filter(field => Modifier.isPrivate(field.getModifiers)).map(_.getName).flatMap { field =>\n      properties.get(field).map { value =>\n        properties -= field\n        newProperties += field -> value\n      }\n    }\n    newProperties ++= properties\n    val p = (for((key, value) <- newProperties.reverse)\n      yield (value.position, key, value)\n    ).toList\n\n    val sortedProperties = new LinkedHashMap[String, ModelProperty]()\n    p.sortWith(_._1 <= _._1).foreach(e => sortedProperties += e._2 -> e._3)\n\n```\nSome of the lines confused me, like the \"reverse\" and the sortWith with <=. If the order doesn't matter, why does these lines tries to re-order with something other than the position? I'm not familiar the background of this code, but here are some guess on its intention:\nThe code tries to keep the fields ordered in scala. I tried to write a test case in Scala, and find the declaredFields are in the order I wrote them, but the declaredMethods are not (maybe because they are generated). In java, both declaredFields and declaredMethods are also in the order I wrote them. ModelPropertyParse scans by methods. So this piece of code seems trying to align the order with the field declaration again. However due to the renaming, it's not working as expected.\nBesides, I find the reverse + sortWith(._1 <= ._1) also doesn't always work. In my java example, array p is in reversed order, and after sortWith() it's back to normal again in sortedProperties. However in scala, the same array size, same elements produced different result. The sortedProperties are still reversed... I really can't tell why, but it should be in the detail of how sortWith is implemented. \nHere is my change:\n```\n        implicit val properties = new LinkedHashMapString, ModelProperty\n        new ModelPropertyParser(cls, typeMap).parse\n    val p = (for((key, value) <- properties)\n      yield (value.position, key, value)\n    ).toList\n\n    val sortedProperties = new LinkedHashMap[String, ModelProperty]()\n    p.sortWith(_._1 < _._1).foreach(e => sortedProperties += e._2 -> e._3)\n\n```\nThe change completely takes out the sort logic. If that is desired, the ModelProperty needs to be extended to keep both name and originalName. It feels ugly... If that logic should be kept, it might be better to merge that into the ModelPropertyParse. For example, instead of using the declaredMethods order, use the some order mixing the declaredMethods and the declaredFields (private fields), or make some hack to properly order for scala classes... Or as you said, scala users should add position to all fields.\nTo add a proper unit test while not making the assumption on reflection order, I guess maybe it can be done by comparing the order between a class with JsonProperty annotation and a class without it. They should remain the same.\n. Sure. Thank you very much!\nFrom: Tony Tam notifications@github.com<mailto:notifications@github.com>\nReply-To: wordnik/swagger-core reply@reply.github.com<mailto:reply@reply.github.com>\nDate: Thursday, March 20, 2014 at 12:22 PM\nTo: wordnik/swagger-core swagger-core@noreply.github.com<mailto:swagger-core@noreply.github.com>\nCc: \"Zhang, Shu\" shuz@serviceCommerce.com<mailto:shuz@serviceCommerce.com>\nSubject: Re: [swagger-core] Property order not kept if position is not specified (#487)\nok so can i close this?\n\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/487#issuecomment-38134145.\n. Just FYI, I made some changes to enable this. The change might be too big to merge into your development. There are basically two changes:\n1. I added a ClassWrapper to help parse generic types and load generic types from string.\n2. I changed the swagger model and api parsers to use the ClassWrapper to handle types.\nThe change pass all unit tests. I added unit tests for ClassWrapper I didn't add a model test case to verify, but it worked well in my project. Now the APIs can return generic types:\nclass OfferService {\n    public ResultWrapper<Offer> getAllOffers();\n}\nHere are the commits. \nhttps://github.com/shuz/swagger-core/commit/a4b6cd03f8de9e41c07edc8cbf2abe737b4eaac0\nhttps://github.com/shuz/swagger-core/commit/207307d4366d73233959bb76ab2e1325cd27276f\n. Does mvn clean install include the tests?\n. The proposed fix.\nhttps://github.com/shuz/swagger-core/commit/a56e9acf84689f0cbe7213ad3e76144f6abd6746\n. One thing to add, I tried to create a unit test, but it couldn't repro because Java compiler placed the generated Object getId() after the UserId getId() and everything worked fine. The order of methods are not guaranteed so I want to just put the fix without a unit test.\n. The error is: org.scalatest.exceptions.TestFailedException: \"...ties\":{\"theCount\":{\"[$ref\":\"Int]\"}}}]\" was not equal to \"...ties\":{\"theCount\":{\"[type\":\"integer\",\"format\":\"int32]\"}}}]\"\nSeems Int is not recognized as a primitive. Tried to run the test case locally and it could pass.\n. After investigation, the issue is related to a unit test bug. I can reproduce the behavior by adding:\nModelConverters.addConverter(new SnakeCaseConverter, true)\nTo PropertyAnnotationTest.\n. The build log: https://travis-ci.org/wordnik/swagger-core/builds/23364034\n. The second commit https://github.com/junbo/swagger-core/commit/ee1ed29f145f39529de68644e7d197982c796d9c is added to fix intermittent issue in https://github.com/wordnik/swagger-core/pull/536\n. ",
    "pikazlou": "This doesn't work for me when adding swagger through spring (com.wordnik.swagger.jaxrs.config.BeanConfig). Is it expected? Will the support be added in later release?\n. This is the log for the case when PrepareBookRQ is described for /basket/{basketKey} but is not described for /prepareBook.\nhttps://gist.github.com/pikazlou/8e2d16b290a855af3e70\nCorresponding JSON responses:\napi/api-docs/Booking (/prepareBook): https://gist.github.com/pikazlou/7bc5e2a80c1838fe6d28\napi/api-docs/Basket (/basket/{basketKey}): https://gist.github.com/pikazlou/01f193c65be248ea34c8\n. If you need - I can try to spot the case when PrepareBookRQ is described for both resources and paste logs for that case. So far I'm not sure whether it is possible to get the case when PrepareBookRQ will be described for neither resource.\n. Yes, this is definitely my case: for Booking there are several classes. For /Basket there is only one class.\nIs there any way to solve the problem while keeping separate classes merged into one @Api?\n. Fixing this issue is important for me. Can you give some thoughts about the class responsible for it. I can then try to fix it.\n. I fixed and checked this issue in my fork of master (1.3.5) branch.\nHere is the patch: https://gist.github.com/pikazlou/4d75f0a9aefbd3151011\ngenerated with 'git format-patch -1 ...'\nPlease note, I have zero experience with scala, so my patch can be improved.\n. ",
    "avanathan": "I too have the same problem as described by @pikazlou. With Spring BeanParam annotation renders it as \"body\" and model. I have opened a bug to track this issue - https://github.com/wordnik/swagger-core/issues/618\n. We use Spring as well. Here is the BeanConfig\n<bean id=\"swaggerConfig\" class=\"com.wordnik.swagger.jaxrs.config.BeanConfig\">\n    <property name=\"resourcePackage\" value=\"com.intuit.ems\"/>\n    <property name=\"version\" value=\"${swagger.api.version}\"/>\n    <property name=\"basePath\" value=\"${swagger.basepath.url}\"/>\n    <property name=\"description\" value=\"Company Employee Paycheck Services\"/>\n    <property name=\"scan\" value=\"true\"/>\n</bean>\nWe haven't configured Swagger through web.xml. We use Jersey auto scanning with @Provider annotation. In Jersey ResourceConfig here is the package used for scanning : \npackages(\"com.wordnik.swagger.jersey.listing\");\n. Awesome!!! That fixed the problem. Thank you very much!\n. ",
    "netzwerch": "@enriquedelpino - I had the same problem, here is how I solved it\nI have a Jersey project, only use swagger-jersey2-jaxrs_2.11 and do the configuration with a RessourceConfig by a combination of these two files:\nApplication.java\nSwaggerExampleGuiceContextListener.java\nIt worked when I changed\njava\nClassReaders.setReader(new DefaultJaxrsApiReader());\nto\njava\nClassReaders.setReader(new JerseyApiReader());\n. ",
    "pathikrit": "You can reproduce the bug on a clean machine - see - http://stackoverflow.com/questions/21361621/scala-play-project-fails-build-after-adding-swagger-play2-dependency-sbt-canno\n. ",
    "robmoore": "+1\n. ",
    "allan-d-c": "Since OData is rest-based, it should be possible. I assume that swagger has some kind of adapter or plug-in to manage the differences in protocols. OData would be just another one, since it is a widely used open standard.\n. There are a few minor things that are particular to OData. For example, there is a /$metadata URL that gives all the possible collections that can be reached.\n. ",
    "mkrouwer": "This would be wonderful to include if anyone has the bandwidth! I'd also be willing to do some work as a contributor\n. ",
    "arnos": "How could this be best done? OData has a $metadata file that presents all the entities + relations and the api all have standardized URI to do operations. Can this be used to generate the APIS?\n. ",
    "adina270898": "Hi, on the http://petstore.swagger.wordnik.com/ I didn't find any example of oauth2, only an authorization with api_key. Do you have any other samples? Thank you.\n. The deletePet doesn't help me...I need to test Oauth2 authorization integrated with Swagger, like it was described on: https://github.com/wordnik/swagger-core/wiki/authorizations with grant types implicit and authorization code. Could you help me with a Swagger compliance server to support these? Thank you.\n. Yes, but in the deletePet I can see only these:\n \"authorizations\":{\"oauth2\":[{\"scope\":\"email\",\"description\":\"Access to your email address\"},{\"scope\":\"pets\",\"description\":\"Access to your pets\"}]}\nBut I need to test a resource that contains this piece of json described here: https://github.com/wordnik/swagger-core/wiki/authorizations.\nIn fact, the 2 jsons are very different.\n. Yes, it's a good sample for me that link. But this is only for the implicit grant. Could you help me with a sample for auth code grant? (Because it could take me some time to buildlocally the swagger core and to run the Scala sample that implements the 2 grant types). Thank you again Webron!\n. Ok, great help, thank you!\n. Thank you Tony.\nI've already downloaded the Scala oAuth2 sample with and i run with both grants and I saw what's going on.\nMy only problem is that if I emulate a HTTP request from Dev HTTP client to a endpoint that's described in the json, I supposed that on HTTP Response I have somehow the code, but in fact I receive the html page that prompt for username/password. So, I figured that the endpoint described in the json is the final endpoint (where the username and password are sent). \nHave a nice day!\nOn Thursday, March 20, 2014 6:31 AM, Tony Tam notifications@github.com wrote:\nhi @adina270898 authorization code grant will be added to a future sample.\n\u2014\nReply to this email directly or view it on GitHub.\n. Hello Tony,\nI want to ask you if you know a web application that uses Swagger 1.0 version and where I could find some docs/specifications about Swagger 1.0.\nThank you,\nAdina\nOn Thursday, March 20, 2014 9:37 AM, Adina Tusa adina270898@yahoo.com wrote:\nThank you Tony.\nI've already downloaded the Scala oAuth2 sample with and i run with both grants and I saw what's going on.\nMy only problem is that if I emulate a HTTP request from Dev HTTP client to a endpoint that's described in the json, I supposed that on HTTP Response I have somehow the code, but in fact I receive the html page that prompt for username/password. So, I figured that the endpoint described in the json is the final endpoint (where the username and password are sent). \nHave a nice day!\nOn Thursday, March 20, 2014 6:31 AM, Tony Tam notifications@github.com wrote:\nhi @adina270898 authorization code grant will be added to a future sample.\n\u2014\nReply to this email directly or view it on GitHub.\n. I have to test an application with Swagger 1.0, and this is not related to the authentication. I just want to see if the json format is different from 1.0 to 2.0.\n. Ah, sorry, I messed up the versions. \nI mean Swagger 1.2. At link, http://petstore.swagger.wordnik.com/api/api-docs/pet the swaggerVersion is 1.2.\nI need a Swagger 1.1 specifications/docs in order to see the differences between the json formats.\n. Ok, thank you Tony.\n. Where could I find a complete example of json for swagger 1.1 and another one for swagger 1.2?\n. I discovered an application that has integrated Swagger 1.1 and in json file, the operations element, has \"httpMethod\". An other application that has 1.2 version, use \"method\". \nThese changes are related to the Swagger version? And if you do know other json changes from 1.1 to 1.2?\nThank you.\n. ",
    "dinoboff": "Support for null value is also import to support array items type. You need to be able to define the type of an array that may contain null values.\n. ",
    "kbreidenbach": "@chadhahn \nWe've tried using the reflections scanner, it doesn't appear to work at\nall. Here is our resource config class:\npublic class MyServices extends org.glassfish.jersey.server.ResourceConfig {\n```\npublic MyServices() {\n    // Providers - JSON.\n    register(FasterXmlJacksonFeature.class);\n//Filter - CORS\nregister(CrossDomainFilter.class);\n\n//Jackson formatting\nregister(JacksonConfigurator.class);\n\n// Validation.\n        register(ValidationConfigurationContextResolver.class);\n\n// Providers - Swagger.\nregister(ApiListingResourceJSON.class);\nregister(ReflectiveJaxrsScanner.class);\nregister(JerseyApiDeclarationProvider.class);\nregister(JerseyResourceListingProvider.class);\n\nproperty(ServerProperties.BV_SEND_ERROR_IN_RESPONSE, true);\n\n}\n```\n}\nOn Sun, Feb 16, 2014 at 4:14 PM, chadhahn notifications@github.com wrote:\n\nThis is wrong. You don't have to annotate the implementation if you use\nthe reflections scanner, which was the whole purpose of using that.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/460#issuecomment-35217876\n.\n. I tried that, but still got the same result (the fully qualified class name being displayed). I even tried excluding the artifact from the swagger dependency just to see if that worked:\n\n<dependency>\n            <groupId>com.wordnik</groupId>\n            <artifactId>swagger-jersey2-jaxrs_2.10</artifactId>\n            <version>1.3.2</version>\n            <exclusions>\n                <exclusion>\n                    <artifactId>jsr311-api</artifactId>\n                    <groupId>javax.ws.rs</groupId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.reflections</groupId>\n                    <artifactId>reflections</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>org.reflections</groupId>\n            <artifactId>reflections</artifactId>\n            <version>0.9.9-RC1</version>\n        </dependency>\n. ",
    "adrianbk": "Thanks. I was able to use JsonSerializer to serialize the AuthorizationTypes. \n. Attempting to fix those test in #735 \n. Makes sense that it matches the spec.\n. The ModelConverterTest appears to be flakey - it passes locally but fails on CI. It depends on the order of the serialized model properties.\nThis stuff is a pain to test with java or scala! We went with testing in groovy on swagger-springmvc which gives a lot of flexibility testing raw json. You can do something like:\ngroovy\ndef json = new JsonSlurper().parseText(Json.pretty(schemas))\njson['Cat'].properties.clawCount.type == 'integer'\njson['Cat'].properties.clawCount.format == 'int32'\nsee here for an example\n. @fehguy ?\n. @fehguy \nWill have to use JsonProperty as default is a keyword in java. \n``` java\n@JsonProperty(\"default\")\n  String defaultValue;\n```\nRegarding groovy's JsonSlurper - it returns a data structure with lists and/or maps depending on the json in question. If the order of json objects (backed by a map) is important you can do the following: \n``` groovy\ndef map = ['a': 'A', 'b': 'B', 'c' : 'C']\nassert valueAt(map, 0) == 'A'\nassert valueAt(map, 1) == 'B'\nassert valueAt(map, 2) == 'C'\ndef valueAt(map, index){\n  map[map.keySet()[index]]\n}\n```\nIf the intention is to maintain order, the bug is probably coming form\ncom.fasterxml.jackson.module.swagger.ModelResolver\nWe should use a LinkedHashMap for innerTypes to preserve order. Opened PR https://github.com/FasterXML/jackson-module-swagger/pull/12\n. Closing because much of this PR changed tests to ignore the order of generated properties (which is not correct). Suspect that ordering should be fixed with this pr. Will open a new PR for defaultValues on non-body parameters.\n. Have you guys considered spock? It's an awesome testing framework. \nhttps://github.com/martypitt/swagger-springmvc/blob/master/swagger-models/src/test/groovy/com/mangofactory/swagger/models/dto/ApiInfoSpec.groovy\n. ",
    "HelenGao": "Hi Shodow Man,\u00a0\nThanks. A Reflection jar has been deployed. There is no error when I built my project or when Tomcat ran. Just Swagger is not showing my APIs.\nOn Thursday, February 13, 2014 6:28 PM, Shadow Man notifications@github.com wrote:\nIf you are using the reflection scanner, you might need to add a dependency on the reflections api v0.9.9-RC1.\nFor maven:\n org.reflections reflections 0.9.9-RC1  \nThe version before this (included with swagger-core) is broken and cannot handle the vfs urls that are returned by JBoss. Perhaps Tomcat returns the same vfs style urls when Swagger tries to get the package to scan.\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi Shadow man and webon,  \nThanks a lot for your help. But I still can't get Swagger + Servlet to work. My APIs are still not listed. https://localhost:8443/MyServer/api-docs only displays {\"apiVersion\":\"1.0.0\",\"swaggerVersion\":\"1.2\"}.  I am not sure if the conflict of jar files below is the reason.\nI downloaded and built scala-servlet, then copied all jars from scala-servlet\\target\\lib to my Tomcat webapps\\MyServer\\WEB-INF\\lib. One of the files I copied was servlet-api-2.5.jar. But Tomcat couldn't load this jar because a similar file already exist.  The existing jar is servelt-api.jar from Tomcat 7.  The error message is below.\ncatalina log - INFO: validateJarFile(C:\\Eclipse\\Slingshot Trunk\\server\\webapps\\vault\\WEB-INF\\lib\\servlet-api-2.5.jar) - jar not loaded. See Servlet Spec 2.3, section 9.7.2. Offending class: javax/servlet/Servlet.class \nYour input would be much appreciated.\nHelen\n. Sure. Thanks.\nOn Sunday, March 23, 2014 4:51 AM, webron notifications@github.com wrote:\n@HelenGao - I believe Tony is helping you work this out in the mailing list. Can I close the issue here?\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "poonkothai408425": "I am facing the same issue.\nI used java jersey swagger.API is not listing.\ncan any one provide solution for java jaxrs swagger?\n. It would be more helpful if any one helped me ASAP.\n. In my project there are 26 rest services are there.\nI have to implementswagger for all rest services.\nI followed the JAXRS tutorial.\ni ran the swagger in chrome using the below link\nhttp://localhost:8080/rest/api-docs.\nI am getting below output\n{\"apiVersion\":\"0.0\",\"swaggerVersion\":\"1.2\"}\ni couldnt able to get the API List.\nweb.xml configured as per below tutorial.\nhttps://github.com/wordnik/swagger-core/wiki/Java-JAXRS-Quickstart\nThanks in advance\n. Please find my web.xml\nOn Fri, Feb 21, 2014 at 8:12 PM, webron notifications@github.com wrote:\n\nIt would really help if you can attach your web.xml.\nOn Fri, Feb 21, 2014 at 4:35 PM, poonkothai408425\nnotifications@github.comwrote:\n\nIn my project there are 26 rest services are there.\nI have to implementswagger for all rest services.\nI followed the JAXRS tutorial.\ni ran the swagger in chrome using the below link\nhttp://localhost:8080/rest/api-docs.\nI am getting below output\n{\"apiVersion\":\"0.0\",\"swaggerVersion\":\"1.2\"}\ni couldnt able to get the API List.\nweb.xml configured as per below tutorial.\nhttps://github.com/wordnik/swagger-core/wiki/Java-JAXRS-Quickstart\nThanks in advance\n\nReply to this email directly or view it on GitHub<\nhttps://github.com/wordnik/swagger-core/issues/470#issuecomment-35734983>\n.\n\n\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/470#issuecomment-35735626\n.\n. please ignore the previous mail.\n\nThis the latest web.xml\nOn Fri, Feb 21, 2014 at 8:24 PM, Poonkothai Bala Krishnan \npoonkothai.krr@gmail.com wrote:\n\nPlease find my web.xml\nOn Fri, Feb 21, 2014 at 8:12 PM, webron notifications@github.com wrote:\n\nIt would really help if you can attach your web.xml.\nOn Fri, Feb 21, 2014 at 4:35 PM, poonkothai408425\nnotifications@github.comwrote:\n\nIn my project there are 26 rest services are there.\nI have to implementswagger for all rest services.\nI followed the JAXRS tutorial.\ni ran the swagger in chrome using the below link\nhttp://localhost:8080/rest/api-docs.\nI am getting below output\n{\"apiVersion\":\"0.0\",\"swaggerVersion\":\"1.2\"}\ni couldnt able to get the API List.\nweb.xml configured as per below tutorial.\nhttps://github.com/wordnik/swagger-core/wiki/Java-JAXRS-Quickstart\nThanks in advance\n\nReply to this email directly or view it on GitHub<\nhttps://github.com/wordnik/swagger-core/issues/470#issuecomment-35734983>\n.\n\n\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/470#issuecomment-35735626\n.\n. <?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n\n\n\n\njersey\ncom.sun.jersey.spi.container.servlet.ServletContainer\n\ncom.sun.jersey.config.property.packages\ncom.usaa.myservice.mysql;com.wordnik.swagger.jersey.listing\n\n\n\njersey\n/rest*\n\n\nmyFilter\ncom.examples.RestSecurityFilter\n\n\nmyFilter\n/rest/*\n\n\nJerseyJaxrsConfig\ncom.wordnik.swagger.jersey.config.JerseyJaxrsConfig\n\napi.version\n1.0.0\n\n\nswagger.api.basepath\nhttp://localhost:8080/rest/api\n\n2\n\n\nJerseyJaxrsConfig\n/rest*\n\n \n. <?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n\n\njersey\ncom.sun.jersey.spi.container.servlet.ServletContainer\n\ncom.sun.jersey.config.property.packages\ncom.usaa.myservice.mysql;com.wordnik.swagger.jersey.listing\n\n\n\njersey\n/rest*\n\n\nmyFilter\ncom.examples.RestSecurityFilter\n\n\nmyFilter\n/rest/*\n\n\nJerseyJaxrsConfig\ncom.wordnik.swagger.jersey.config.JerseyJaxrsConfig\n\napi.version\n1.0.0\n\n\nswagger.api.basepath\nhttp://localhost:8080/rest/api\n\n2\n\n\nJerseyJaxrsConfig\n/rest*\n\n \n. hope u get my deployment descriptor.\nPlease revert back\n. ",
    "tokra": "Hello I have issue using reflections ClasspathHelper.forPackage for scan -> on local WLP it works fine but deployed on WAS it returns zero results... Anyone help ?\n. Hello I have issue using reflections ClasspathHelper.forPackage for scan -> on local WLP it works fine but deployed on WAS it returns zero results... Anyone help ?\n. @webron I found a problem in BeanConfig, which scans classes by package. Reflections ClassHelper.forPackage(..) does not count with possibility that classes can be inside of jars like in WEB-INF/lib, as our deployed app has modules compiled into jars placed into WEB-INF/lib. I extended BeanConfig and changed method classes() where i do also fallback to ClasspathHelper.forWebInfLib(..) which can find such jar-ed classes. Now everything works fine !\n. @webron I found a problem in BeanConfig, which scans classes by package. Reflections ClassHelper.forPackage(..) does not count with possibility that classes can be inside of jars like in WEB-INF/lib, as our deployed app has modules compiled into jars placed into WEB-INF/lib. I extended BeanConfig and changed method classes() where i do also fallback to ClasspathHelper.forWebInfLib(..) which can find such jar-ed classes. Now everything works fine !\n. Hello, any update on this one ? thx\n. Hello, any update on this one ? thx\n. @fehguy how can i now use this hidden password in my Java APIs ?. @fehguy is it okay if i update only swagger-annotations JAR? because seems that lots of changed in core, jaxrs & modules since 1.5.3. Do i also need to update swagger UI ? thx. @fehguy We cannot update swagger, because lots of changes were made since 1.5.3, and our multiple swagger instance approach is not working anymore.. @fehguy We cannot update swagger, because lots of changes were made since 1.5.3, and our multiple swagger instance approach is not working anymore.. I already fixed this to setting up different attribute in ServletContext, and handling it in my own ApiListingResource (to get that specific attribute -> instance of specific swagger)\n. I already fixed this to setting up different attribute in ServletContext, and handling it in my own ApiListingResource (to get that specific attribute -> instance of specific swagger)\n. @dherik I did registering multiple instances of swagger in our app, using swagger 1.5.3. If i have a time i can push it to my github. However my approach is not working anymore with current swagger version, as they had changed it a lot. I might refactor code also to work with current version. I will inform you. Thx. @dherik I did registering multiple instances of swagger in our app, using swagger 1.5.3. If i have a time i can push it to my github. However my approach is not working anymore with current swagger version, as they had changed it a lot. I might refactor code also to work with current version. I will inform you. Thx. @webron From your code there is see that tags are the setup programatically, but for portability we are trying to avoid programatical approach on one place if possible, so better using annotation -> do you have some example to setup tags by annotation ? thanks\n. @webron From your code there is see that tags are the setup programatically, but for portability we are trying to avoid programatical approach on one place if possible, so better using annotation -> do you have some example to setup tags by annotation ? thanks\n. @webron well this is the thing which makes it useless :( I think it wouldnt be big problem to implement new annotation @ApiTags or something... \nPardon me but: Deprecating stuff and not implementing new way is contra-productive (maybe not for you but for companies & guys using your swagger and depending on you)\nHope you understand my thoughts \n. @webron well this is the thing which makes it useless :( I think it wouldnt be big problem to implement new annotation @ApiTags or something... \nPardon me but: Deprecating stuff and not implementing new way is contra-productive (maybe not for you but for companies & guys using your swagger and depending on you)\nHope you understand my thoughts \n. @SwaggerDefinition & @Api are different things. If i use @SwaggerDefinition on API Resource, it produces completely different things !\n. @SwaggerDefinition & @Api are different things. If i use @SwaggerDefinition on API Resource, it produces completely different things !\n. I wanted to add description next to API as it was in previous version of swagger, but if i use your mentioned @SwaggerDefinition it produces some text added on TOP before all apis listing. Please how to achieve same description as was before ? I am expecting normal answer or some example, until now i did not get that. thank you in advance\n. I wanted to add description next to API as it was in previous version of swagger, but if i use your mentioned @SwaggerDefinition it produces some text added on TOP before all apis listing. Please how to achieve same description as was before ? I am expecting normal answer or some example, until now i did not get that. thank you in advance\n. What if you rather add @Info also into @Api annotation to make it clear ?\n. What if you rather add @Info also into @Api annotation to make it clear ?\n. how can i get that correction ? just checkout latest swagger-ui code ? or was it / will be part of some release ? thx\n. @webron then why it was closed ?\n. ",
    "JathinSanghvi": "Facing similar issue as @HelenGao. Can you share what was the solution for it. or atleast a link to mailing thread.\n. ",
    "sandipmangale": "@to-kra\nI am  facing same issue.\nCould you please explain me your solution in details or share code.\n. I am facing same issue but one of project module needs reflections.0.9.8 jar,by which if i use this jar i am getting error for \"ropertyAccessExceptions (1) are:\nPropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'scan' threw exception; nested exception is java.lang.NoSuchMethodError: org.reflections.util.ClasspathHelper.forPackage(Ljava/lang/String;[Ljava/lang/ClassLoader;)Ljava/util/Collection;\"\n. I am facing something same issue.I have two servlet configure as folloeing:\nhttp://localhost:8080/mywebapp/rest/swagger.json for this Rest service call URL is \n            http://localhost:8080/mywebapp/rest/for/firmName/getMessage\nhttp://localhost:8080/mywebapp/restservice/swagger.json  for this Rest service call URL is \n       http://localhost:8080/mywebapp/restservice/firmName/getMessage2\nI have configured this by declaring two beanconfing.But facing same issue as stated in orginal issue.\nCould you please help me in this issue.\n. Hi @webron \nI followed all the steps mentioned in u suggested URL but still getting same error as mentioned by @amreladawy \n. ",
    "andersha": "0.9.9-RC1 breaks compatibility with play 2.2.2: https://code.google.com/p/reflections/issues/detail?id=150\n. ",
    "arthurdm": "in the APIParam annotation, should we use dataType=\"password\"?\n. in the APIParam annotation, should we use dataType=\"password\"?\n. @OpenApiResponse? =) . @OpenApiResponse? =) . They're functional, but it's redundant to have to type OAS for every annotation.   When you have a method with 5+ of them it becomes kindda awkward to see so many OAS. . They're functional, but it's redundant to have to type OAS for every annotation.   When you have a method with 5+ of them it becomes kindda awkward to see so many OAS. . I agree with that suggestion.. I agree with that suggestion.. Update:  \ninterface OpenAPIController\n        OpenAPIConfig bootstrap(Map environment);\ninterface OpenAPIConfig\n     getOpenAPI()\n    setOpenAPI(OpenAPI)\n    getClasses()\n    setClasses(Set>)\n    isScan()\n   setScan(boolean)\n   getFilterClass()\n   setFilterClass(String)\n   getUserDefinedOptions()\n   setUserDefinedOptions(Map\ninterface OpenAPIFilter\n  -> OAS version of https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/main/java/io/swagger/core/filter/SwaggerSpecFilter.java\n. Update:  \ninterface OpenAPIController\n        OpenAPIConfig bootstrap(Map environment);\ninterface OpenAPIConfig\n     getOpenAPI()\n    setOpenAPI(OpenAPI)\n    getClasses()\n    setClasses(Set>)\n    isScan()\n   setScan(boolean)\n   getFilterClass()\n   setFilterClass(String)\n   getUserDefinedOptions()\n   setUserDefinedOptions(Map\ninterface OpenAPIFilter\n  -> OAS version of https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/main/java/io/swagger/core/filter/SwaggerSpecFilter.java\n. Models and annotations in the v3 branch have been renamed.  Anything else needs to be renamed?. Models and annotations in the v3 branch have been renamed.  Anything else needs to be renamed?. Fixed. Fixed. This was fixed by PR #2229, closing.. This was fixed by PR #2229, closing.. Recently added. Closed as dup of #2317 . Closing as fixed.. Thanks a lot for the feedback @frantuma \nHere are my thoughts:\n\n\nThat's an interesting point - can you provide an example scenario where we would use the OpenAPIController and OpenAPIConfig in a non-web environment?   Given that these interfaces are controlling the building of documentation for REST APIs, I am having a hard time imagining a non-web environment.  By the way, the choice of \"web\" was on purpose to keep it general from jaxrs or servlet, so to mean any web module that is exposing REST APIs.\n\n\nGood point.  I like OpenApiConfigBuilder + build method.  \n\n\nWe definitely don't want more than 1 Filter version in the repo, so if you could please share the current work that would be great.  We could always pass that in through the general user-defined map too.  \n\n\nThat's true.  We'll revisit that.  Perhaps we could have both the classes and the package variations, so the user can have choices (they are optional)\n\n\nThat's a tricky area.  I can see a point in providing access to the Reader to control the reading behaviour - but then again, if users have a nice Filter that controls what goes in, would someone really want to implement a full Reader, since transforming a set of Classes into OpenAPI models is what most people would use the library for.     For the Scanner, I really think that taken care of from OpenAPIConfig (ie: using the getClasses method, and user defined Map).  \n\n\nWe were hoping to push these in as the \"spec\", so we can work in parallel in the plumbing from different implementations (ie: OSS, WebSphere, or vendors, etc).  We will definitely contribute a JAXRS sample for OpenAPI v3, but using the OpenAPIConfig to configure the Reader (beyond its current default) is something that could be done in a separate issue/PR.  . Thanks @frantuma \n\n\nI can see your points about Reader and Scanner.  How about this revised set of interfaces:\npublic interface OASConfigBuilder {\n     OASConfig build(Map environment);\n} \npublic interface OASConfig {\n     OpenAPI getOpenAPI();\n boolean isScanDisabled();\n\n Class<?> getFilterClass();\n\n Set<String> getResourcePackages();\n\n Set<String> getIgnoredClasses();\n\n Map<String, Object> getOptions();\n\n}\npublic interface OASScanner {\n    Set> classes();\n    Map resources()\n }\npublic interface OASReader {\n     OpenAPI read(OASConfig configuration, OASScanner scanner)\n }\nSo basically, the application developer would choose which services they want to provide to the framework (OSS Swagger, WebSphere, etc):\ncustom config:   META-INF/services/io.swagger.oas.web.OASConfigBuilder \ncustom scanner:  META-INF/services/io.swagger.oas.web.OASScanner\ncustom reader:  META-INF/services/io.swagger.oas.web.OASReader\nFor each of those, the framework would have default services impl if they aren't specified by the app dev.\nThoughts?. I had a chat  with @frantuma today and the latest proposal that we're discussing is:\nIntroduce these 4 interfaces:\n`public interface OpenAPIConfigBuilder {\nOpenAPIConfig build(Map environment);\n}\npublic interface OpenAPIConfig {\n  OpenAPI getOpenAPI();\nString getFilterClass();\n\nString getReaderClass();\n\nString getScannerClass();\n\nSet<String> getIgnoredClasses();\n\nMap<String, Object> getOptions();\n\nSet<String> getResourceClasses();\n\nSet<String> getResourcePackages();\n\nboolean isScanDisabled();\n\n}\npublic interface OpenAPIScanner {\nSet> classes();\nMap resources()\n}\npublic interface OpenAPIReader {\nOpenAPI read(OpenAPIConfig configuration, OpenAPIScanner scanner)\n}\n`\nSo the flow is that an application developer provides (optionally) an implementation of OpenAPIConfigBuilder, which would then allow then to give the framework a copy of OpenAPIConfig that may contain things like a custom Reader, Scanner, options, etc.  \nNot part of this PR, but for completeness:  the idea is that the \"specification\" part of MicroProfile's OpenAPI Java proposal will say something like this:\nThe application developer can provide an OpenAPIConfig to implementations of the OpenAPI Java spec in 2 ways:\n(1) By specifying an openapi-config.yaml file in the application's classpath, which contains the configuration corresponding to an OpenAPIConfig object (link to schema)\n(2) By specifying the qualified name of their OpenAPIConfigBuilder service inside META-INF/services, following JDK practice (https://docs.oracle.com/javase/8/docs/api/java/util/ServiceLoader.html). Hey @frantuma - thanks for the comments.\nWe chose isScanDisabled instead of isScanAllResources to be more descriptive of the purpose of this boolean:  is it used to disable scanning.     We felt that isScanAllResources was not being descriptive enough (for example: I am turning off the scan for ALL resources, but maybe SOME resources will still be scanned?)\nRegarding the multiple configs per JVM, I see this as an implementation add-on, rather than a specification item.  Therefore, this is where the Map<String,Object> that is passed into OpenAPIConfigBuilder#build can be used, where the implementation (ie: Swagger OSS) could pass in an option such {key = SERVLET_NAME, value = MyServlet} and the proper OpenAPIConfig would be returned.. hey @frantuma - I see now what you mean with isReadAllResources.   The optionisScanDisabled is for scenarios where the user will provide a full OpenAPI model via the Config, so it turns off annotation scanning. (no need to scan the app).\nAbout the multiple JVMs, I still believe that is implementation specific - for example, in Liberty our JVM (the app server) supports multiple applications (WAR module), and each application will have their own OpenAPIConfig inside their WAR module.  So even without extra Map options we can already achieve multiple apps in a JVM scenario.  \nPerhaps you are referring to multiple APIs in a single WAR module (single app), which then that can be handled differently depending on the implementation (some implementations may not support it).\nLastly, I think isPrettyPrint is outside of the spec - it deals with the serialization format of the vendor/implementation as it handles the OpenAPI model that it got from the OAS3 Java programming model (ie: from OpenAPIConfig or from OpenAPIReader).  How that model is handled will vary per implementation.. hey @frantuma - I think we can then agree to include isReadAllResources and isScanDisabled as spec, and other things like isPrettyPrint as implementation-dependent.  So we will add isReadAllResources into the current PR.\nRegarding the multiple API per application, my thought was that the javadoc of the OpenAPIConfigBuilder#build method would specify that if implementations/vendors want to support different configurations for different APIs in the same application, then they must define an appropriate key  in the Map that gets passed into build - the reason I am trying to keep this away from spec is because \"servlet name\" wouldn't be application to all implementations, such as Spring.. Using https://github.com/swagger-api/swagger-core/pull/2398 instead. I think having something similar to @SwaggerDefinition would be better, so that we can claim the annotation set is complete (ie: you don't need to use bootstrapping or filter if you don't want to).  . Closing as fixed. I thought there was no need to have the annotation \"ArraySchema\", since we could easily do things like @Schema(type=\"array\", implementation=POJO.class) without an extra annotation.. I am currently looking into the CI build failure logs. @frantuma  / @fehguy  - I fixed the build issues, ready for review now.. thanks for the review @fehguy !  I will go through them individually.  As a summary of the thought process here though:\n\n\nhaving the default of an array as a single object didn't feel right.  For example:  String[] field default \"\" doesn't feel right, it really should be String[] field {}, no?     Unless I missed something, we want the annotation processor to know that this is an empty array, not a singleton instance with default values (which is something different).\n\n\nI can see your point about deviating from the spec by having \"allowableValues\" instead of \"_enum\", and \"defaultValue\" instead of \"_default\".  My intention is to make this more natural for a Java programmer to use (we don't see any JSR annotations leading with underscore) while still being close enough to the spec that it's clear what the purpose of the field is.  \n\n\nWhy do we need ArraySchema annotation, but don't need all the other types of annotations?  I tried to show in the PR that we can get away with a simple single Schema.  For you can do things like @Schema(type=\"array\", implementation= MyPojo.class).  \n\n\n. @fehguy - please let me know if you agree with my replies to the review comments.  . good point @fehguy - I have added ArraySchema back into the PR.. @frantuma @gracekarina @ralphdoe  - please let me know if you have any review comments about this PR.\n@fehguy  - I didn't find any buttons to relate that I have addressed your review comment about the ArraySchema, so I clicked on \"dismiss\" with the explanation.  (not to mean that I dismissed, but to mean that it was addressed). @webron - hey Ron, could you please help move this one forward?. Thanks @webron !  I will go through the comments today.\nYes, only annotation changes and the corresponding changes for names, with the exception of io/swagger/jaxrs2/OperationParser.java which contains a change to handle the Content[] from ApiResponse (was previously just Content).  . Addressed review comments. @webron - ready for final review and merge.. I created another PR to target the new branch 2.0, https://github.com/swagger-api/swagger-core/pull/2394, so closing this PR. @webron @fehguy - this would help stabilizing a spec while allowing swagger-core implementation to be improved.. Closing this one.  I did some experiments with interfaces for the models and the changes are just too big to make at this time.  Perhaps in a future release.  . @ralphdoe @frantuma - I would suggest we change the package of OpenApiSpecFitler to io.swagger.oas.core, to match the annotations and models packages.. Closing this as it relates to a particular vendor.  Please open a PMR with IBM.  . @frantuma  - when you get a chance can you please check out this PR?. in this particular case, the default responseCode is named \"default\" as per the spec, so I thought it would be good to have that as the default.. See issue https://github.com/swagger-api/swagger-core/issues/2272.    I am curious as to why we would want the default of an array of operations to be a single empty operation?  Shouldn't be an empty array?. See comment for Operation[]. See comment for Operation[]. See comment for Operation[]. See comment for Operation[]. They were disabled because a new annotation, called  ArraySchema was created and the array related methods were moved there.  In this PR I removed that extra annotation so I enabled the methods back into Schema, to simplify into a single Schema annotation.. See comment for maxItems. See comment for maxItems. See comment for Operation[]. See comment for Operation[]. To make it more natural for Java developers.  Starting with underscore brings a connotation of something being private.   I believe the name allowableValues is pretty clear on its intention, and I also updated the javadoc to say This field map to the enum property in the OAS schema.. Same reasoning as _enum. it was redundant.  We just needed to use Parameter[].. Same reasoning as Operation[] above. All the other security annotations for OAuth started with OAuth, so I thought this was more consistent, and clear that it is only for OAuth - not generic ACL scopes.  . In this case we needed a default value because name only applies for apiKeys.  . This is required in all cases, so no default needed.. This maps to the Server Variable default field: https://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/3.0.md#serverVariableObject\nSo in that sense, I felt that defaultValue better represents that this is a default value than just using value.. The Parameter object in the spec has an examples field: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#parameterObject. The Parameter object in the spec has an example field: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#parameterObject. Although this has the same name, I believe it is different than the spec's definition of a Request Body object.  For a link, the requestBody field's description is  A literal value or {expression} to use as a request body when calling the target operation. which implies just a simple string, and not a full blown Request Body (which has a description, a required boolean and an array of content objects). I agree @webron  I opened this new issue for this: https://github.com/swagger-api/swagger-core/issues/2371. agreed - I will clarify this in the javadoc. Cool, I opened https://github.com/swagger-api/swagger-core/issues/2372 for the style enum investigation.   \nFixing the javadoc to clarify the exclusion with content. Sounds good - I am clarifying this in a new commit.. Clarifying it in new commit. changing it. changed. changing it. clarifying. yup, good catch.  I missed that one.. good point, let's go with double.. clarifying it in the javadoc. agreed, changing.. agreed, changing.. agreed. agreed. Opened issue https://github.com/swagger-api/swagger-core/issues/2373 for those. ",
    "guptayash4": "\nI need to integrate something like this in swagger, i.e Masking the password fields in swagger-ui.\n\nMy code looks like this, And the question being what should be added here to mask the \"name\" field?\n. ",
    "Gobliins": "Hi i am facing same issue, is this fixed?\nOr is there a way to select between kay / value formdata with hidden password field and json body?\n(Is formdata even possible with OpenApi 3.0 and RequestBody?). ",
    "bruceadowns": "I was able to use password characters with the following annotation:\n// @param secret query string false \"user password\" format(password)\nThe annotation is processed using https://github.com/swaggo/swag.. ",
    "joelewis-janrain": "I'm using swagger-core 1.3.2.\n. I'm using swagger-core 1.3.2.\n. What sort of inconsistencies do you think this will add? I was thinking that maybe this had to do with the ComplexTypeMatchers not matching \"$\". But admittedly, I'm very unfamiliar with this code base.\nAlso should I be using swagger-core in a different way?\n. What sort of inconsistencies do you think this will add? I was thinking that maybe this had to do with the ComplexTypeMatchers not matching \"$\". But admittedly, I'm very unfamiliar with this code base.\nAlso should I be using swagger-core in a different way?\n. ",
    "eljonny": "There is a similar bug in 1.3.10 with Java. I have generated JAXB classes with XJC that have nested classes, with a List of a nested type in the outer class, like:\npublic class Top {\n  protected List<Outer> topObjects;\n}\npublic class Outer {\n  protected List<Inner> objects;\n  public static class Inner {\n    ...\n  }\n}\nWhich shows up in Swagger-UI like this:\n{\n  \"topObjects\": [\n    {\n      \"objects\": \"List[Inner]\"\n    }\n  ]\n}\nI didn't see any other bugs like this through a search, but I could have missed something.\n. ",
    "fjab76": "I am using swagger-core 1.5.12 and the problem persists. ",
    "mrForest13": "same for 1.5.17 (isn't working). same for 1.5.17 (isn't working). ",
    "valdemon": "I've been using the 'allowMultiple' since the swagger-core 2.9.x. \nFor now, i can't find anything about this attribute in the Wiki: https://github.com/wordnik/swagger-core/wiki/Parameters, and there's a statement there: \"When sending multiple values, the array type should be used\".\nWhen using the swagger-jaxrs lib,  in cases that the List or Type[] is used for the JAXRS service method query param, the 'array' type is declared in the generated JSON spec. (which is fine), but the 'allowMultiple' is not there any more (as it was there before - in 2.9.x, i guess), when declared in ApiParam annotation.\nProbably making assumptions using the 'allowMultiple' in this case was my mistake. Actually the 'array' type is enough to assume that the multiple values can come. \nAbove concerns the issue https://github.com/wordnik/swagger-ui/pull/304, where the 'allowMultiple' attr was inspected. I decided to change that functionality and use the 'array' type check instead. Just wanted to know if the 'allowMultiple' is kinda deprecated..\nI can't find any documentation about the 'allowMultiple' definition & use cases. Could you provide an example when this attribute could be used for non-array param cases? \n. Ok, thanks for clarifying that.\nHow should the example request URL look like, when using the 'array' type for the query parameter? Could you please align this somehow with the discussions @ https://github.com/wordnik/swagger-ui/issues/118 ? \n. hmm, now i'm really confused.\nAs far as I know, the mime-type (or Content-type header) concerns the BODY part of the request not the query params.\nMaybe i'll describe my use case:\n1. Using the JAXRS implementation I declare the REST service with a GET method, which takes the array (or java.util.List) of primitives (eg Integers) annotated with swagger's ApiParam.\n2. swagger-jaxrs 'DefaultJaxrsApiReader' generates the JSON spec with the parameter of the 'array' type by automation in such a case.\n3. JAXRS implementation converts & injects the request parameter automatically to the array or List method parameter as long as the request query is in a format like '...&param=value1&param=value2...'.\nAs the No.3 is kinda standard for the JAXRS reference implementations, and the request query syntax: '...param=value1&param=value2...' is the most used \"standard\",  i'd like to have an interactive REST documentation, which produces the request in an expected by the REST service way, from some friendly UI (comma separated string in a textbox, multi-select list box etc.). But that's  rather swagger-js & swagger-ui related (I've put some propositions for that with my latest pull requests).\nThe 'allowMultiple' seems to be superfluous in my use case. Question is if there's really a use case, which fits for using this attribute (especially in case of query params)?\n. @webron: true, but i wouldn't expect complex types to be a standard approach for query parameter values, although it is possible with some de/serialization using mime type like JSON (maybe + Base64 encoding), as you pointed. And still possible to bind it to the array or collection of  such a complex type as a method parameter eg. in JAXRS impl.\n@fehguy: \nfoo=a&bar=b\nis out of the scope of this discussion.\nI was thinking of:\nfoo=a&foo=b&foo=c\ninstead of\nfoo=a,b,c\nwhich would do for my case (Java & JAXRS reference implementations). \nBut the format parameter seems to be The Solution, because, as you pointed,  there's no standard for multiple values query parameter (eg. RoR doesn't understand my desired syntax).\nIf i'd be aware of the format parameter i'd take it under account when preparing the https://github.com/wordnik/swagger-js/pull/83 (if it is ready to use).\nAnyway - the main questions - still not answered - were: \n1. Will the 'allowMultiple' attribute stay in the specification?\n2. Isn't it just superflous for the 'array' type in case of the query parameters? \n3. What is a use case for it? \n4. To what structure will it cause to convert the multiple value parameter, if not to array or collection (in which case eg. the swagger-jaxrs generates the 'array' type parameter).   \nFeel a bit like bothering you, but i'd like to understand your intention in this subject, and decide  what to do with my use case. \n. Hi,\nconcerning the CSV - maybe it's not bad to have it as a first format produced by the UI elements (eg, writing the value set as CSV in a text box is more convenient than in any syntax like _x=a&x=b). \nThen one could change outgoing value to a choosen format at the place where the query param values are urlified, like I did in https://github.com/wordnik/swagger-js/pull/83, which could be enhanced for taking the _format param into account.\n. ",
    "brutuscat": "@fehguy I know that this is closed and in our project we are in the path to migrate to swagger v2 (json schema yay!), but apart from the comma-separated value format, you might also considerthe, already supported by php and ruby (and I guess more languages), key[]=value format.\n. @webron JAX-RS is also a naming convention, that's what are you saying right? I understand that, I was just suggesting to not forget this particular format when considering formats. TBH honest haven't read the whole thread...\nOk, but what about try to use some sort of RFC 6570 - URI Template to specify the format? No idea if it is possible to have template \"fragments\" though...\n. @webron right! I guess \"core\" and \"spec\" looks similar to me...  I'll read the discussion in the groups thanks.\n. ",
    "DavidBiesack": "OpenAPI 2.0 does not support allowMultiple, nor does it allow format: array. However, one can set the type of a query parameter to array (with items being a string/enum) and set collectionFormat: csv, and Swagger UI will emit \n\u2026 &param=value1,value2\nOAS 3.0 will allow parameter styles which includes a style: form, explore:false style for query params which should support the same csv representation.\n. master\n. mvn install\nruns javadoc so that it can install the -javadoc.jar\nmvn package\ndoes run cleanly.\n. PR: https://github.com/swagger-api/swagger-core/pull/1241\n. closing to resubmit against  develop_2.0\n. ",
    "saadmufti": "+1\n. Sure thing, I knew that was lacking. I'll add some.\n. @fehguy I added tests for the functionality I added, please take a look and let me know if you need any more changes. Thanks.\n. @webron Thanks, I totally missed that while upgrading from 1.3.x to the latest, doh.\n. ",
    "amandabouman": "Is there any consideration of this? Or any sort of workaround to make it at all possible? We have multiple views per class and would like to be able to customize the view by endpoint (i.e., we can't hide properties across the board because some properties are shown in some services and not in others).\n. ",
    "ryanlchandler": "+1\n. ",
    "txfan": "+1\n. +1\n. ",
    "sseide": "+1\n. ",
    "batcer": "fehguy, your link gives 404\n. ",
    "gustavolira": "+1\n. Sorry for my explanation missing details.\nI'm talking about schema Model Schema, in this case I'm not using bean class at my Service to receive the json from the cliente, I'm using a HashMap that is receiving the json from the client, but would be nice if there's some way to define how is the json that I'm expect for this service.\nI'm using spring-mvc (spring boot to be precise)\nThank you very much for your attention\n. Imagine that we have a huge Entity that is used for a lot of services in one application.\nAt service A we need only a few properties of this entity, in other words the customer will send only a few properties of this entity. But in my Swagger documentation at mode schema is showing all the properties of the Entity, a lot of information that is not used for this service. Use @ApiModelProperty or @JsonProperty to hidden some attributes is not a option because or another service I will use this same entity but now receiving another properties.\nHow to tell swagger that I'm using this Entity but my model schema will be 'x' and on another service I will use this same entity but my model schema will be 'y' ?\n. Hi,\nSorry for my miss information. Yes I'm using Springfox as wrapper of swagger\n. ",
    "john24318": "+1\n. In many situations, I hope a request/response model will display suitable properties but not all properties for some APIs. For example, my User model can be used to create users or to update users.\nIn my create API, it has a parameter with User type. I hope Swagger will hide the \"id\" property in the User model because it is generated by the database. So I can put an annotation @ApiImplicitModel(derived=User.class, properties={\"username\", \"password\" ,\"nickname\", \"contact.address\", \"contact.phone\", \"contact.email\"}) at the create method to hide the \"id\" property.\nIn my update API, it also has a parameter with User type. I hope Swagger will hide the \"username\" property in the User model because username can't be modified. So I can put an annotation @ApiImplicitModel(derived=User.class, properties={\"id\", \"password\" ,\"nickname\", \"contact.address\", \"contact.phone\", \"contact.email\"}) at the update method to hide the \"username\" property.\nSincerely.\n. Inheritance in models doesn't make sense. Usually my models are domain entities, and some are complex DTOs for special views. Inheritance will make my models have superclass and subclass relationship, but there is no such relationship in my create user and update user input data. They both input User model data, I just need to tell which properties are required/optional in different APIs. Thus, dynamic displaying the properties of User model is my preference.\nI slightly modify my example:\n// For create user:\n@ApiImplicitModel(derived=User.class, required={\"username\", \"password\"}, optional={\"nickname\", \"contact.address\", \"contact.phone\", \"contact.email\"})\n// For update user:\n@ApiImplicitModel(derived=User.class, required=\"id\", optional={\"password\", \"nickname\", \"contact.address\", \"contact.phone\", \"contact.email\"})\n. How about support @JsonView annotation?\nCan you reopen the https://github.com/swagger-api/swagger-core/issues/479 issue?\n. ",
    "sebastienvermeille": "Hm it is still not resolved in my opinion. This api implicit model only supports manual setted parameters... that means we have to write it : \nin jsonviews + in swagger doc\nIf jsonviews was supported we only had to write into jsonviews. \nPlease support it\n. ",
    "salletchen": "+1\n. ",
    "aint": "+1. ",
    "monoc44": "+1. @fehguy Thanks for your comment. I don't think SwaggerSpecFilter can be of any help as the limitation resides in the OAI syntax itself.\nTaking this example (pseudo code):\n```\n@GET(/serviceA)\n@JsonView(ViewA.class)\npublic MyModel methodA() {...}\n@GET(/serviceB)\n@JsonView(ViewB.class)\npublic MyModel methodB() {...}\n```\n=> parsing these two resources will translate into the following OAI JSON file:\npaths: {\n   /serviceA:\n     get ->  responses: { 200-> $ref: #/definitions/MyModel }\n   /serviceB: {\n     get ->  responses: { 200-> $ref: #/definitions/MyModel }\n},\ndefinitions: {\n  MyModel:\n      type: object,\n      required: [\n        propertyForServiceA,\n        propertyNotForServiceB\n      ]\n}\nSadly, method SwaggerSpecFilter#isPropertyAllowed() is invoked only once, either after scanning serviceA or serviceB. \nWould it be difficult to instead generate a 'contextualized' definition model which could have then different properties (hidden or not), like:\n```\ndefinitions: {\n  MyModel-serviceA.get:\n      type: object,\n      required: [\n        propertyForServiceA,\n        propertyNotForServiceB\n      ]\n  MyModel-serviceB.get:\n      type: object,\n      required: [\n        propertyForServiceB\n      ]\n}\n```\n. ",
    "prajotNaik": "+1. ",
    "manuelhuber": "+1. ",
    "jpomykala": "+1. ",
    "barthik": "+1\n. +1\n. ",
    "brock-bouchard": "I also just ran into this!  Another idea might be to change the property definition to allow for a views field that holds the views to which the property applies?. Another alternative to using JSON views that will get you a more precise swagger definition is to leverage Java 8's \"mixin\" capability with default interface methods.  For example one can define a base Representation class and PropertyBag interface as such:\n```\npublic interface PropertyBag {\n<T> T get(String key);\n\n<T> void set(String key, T value);\n\n}\npublic class Representation implements PropertyBag {\nprivate Map<String, Object> properties;\n\npublic Representation() {\n    this.properties = new HashMap();\n}\n\npublic <T> T get(String key) {\n    return (T) this.properties.get(key);\n}\n\npublic <T> void set(String key, T value) {\n    this.properties.put(key, value);\n}\n\n}\npublic interface Creatable extends PropertyBag {\n@ApiModelProperty(\n    value = \"The time in UTC when the resource was created in the ISO 8601 format \"\n    + \"yyyy-MM-dd'T'HH:mm:ssZ.\",\n    required = true\n    )\ndefault DateTime getCreatedAt() {\n    return this.<DateTime>get(\"createdAt\");\n}\n\ndefault void setCreatedAt(DateTime createdAt) {\n    this.<DateTime>set(\"createdAt\", createdAt);\n}\n\n}\n```\nYou can then make \"mixins\" of common properties...\n```\npublic interface DisplayOrderable extends PropertyBag {\n@ApiModelProperty(\n    value = \"The display order of this entity.\",\n    required = true)\ndefault Integer getDisplayOrder() {\n    return this.<Integer>get(\"displayOrder\");\n}\n\ndefault void setDisplayOrder(Integer displayOrder) {\n    this.<Integer>set(\"displayOrder\", displayOrder);\n}\n\n}\n```\n... and subclasses of the base Representation class as such:\n```\n@ApiModel(...)\npublic class MyEntityRead extends Representation implements Creatable, DisplayOrderable {}\n@ApiModel(...)\npublic class MyEntityCreate extends Representation implements DisplayOrderable {}\n```\nFull @JsonView support would be ideal, but this approach lets you define precise models for different situations whilst cutting down on code duplication.. ",
    "arcana261": "+1. ",
    "Diom": "+1\nYeah, this feature would be much appreciated.. ",
    "DaBlick": "+1\nStrictly speaking, the appropriate JsonView is dynamically specified.     For our purposes, we don't need that generality.\nWhat would work just fine for us is to have a new @ApiJsonView annotation that contains the JsonView class and to have the Swagger object-graph walker just do the same test against that that Jackson does.\nThat change doesn't sound very hard.   . ",
    "gaffney": "And yes I realize I can use a model converter; my point here is that I shouldn't have to.\n. ",
    "pbromley": "Great, do you know which release this might be fixed in. We are using the Java version.\n. ",
    "perabello": "On the same way, service are not read by the Swagger when the annotations for REST services are placed on external jar (on interfaces for remote access).\nI resolve this setting the annotation in the implementation methods. But this force me to duplicate annotations to define the service (example: path, GET, POST, etc.) on interfaces and on implementation.\n. I can not find 1.3.3-SNAPSHOT. Can you give the link?\n. Yes, now descriptions for the sample are published.\nBut not descriptions my specification (methods on interfaces).\nI create a different issue for this bug: #493\n. Sorry, I was wrong.\nAs Paave said, no descriptions are published.\n\n. Although I whant that JaxRsActivator class do not override \"getClasses\" method (to automatically detect REST services), I try with this code:\n@ApplicationPath(\"/api/v1\")\npublic class JaxRsActivator extends Application {\n  public JaxRsActivator() {\n    SwaggerConfig swaggerConfig = new SwaggerConfig();\n    swaggerConfig.setBasePath(\"/api/v1\");\n    swaggerConfig.setApiVersion(\"1.0.1\");\n    ConfigFactory.setConfig(swaggerConfig);\n    ScannerFactory.setScanner(new DefaultJaxrsScanner());\n    ClassReaders.setReader(new DefaultJaxrsApiReader());\n  }\nprivate void addRestResourceClasses(Set> resources) {\n    resources.add(es.gc.sample.core.api.domain.CategoryService.class);\n    resources.add(es.gc.sample.core.api.domain.CompanyService.class);\n    resources.add(es.gc.sample.core.api.domain.spain.SpainCompanyService.class);\n  }\n@Override\n  public Set> getClasses() {\n    Set> resources = new java.util.HashSet<>();\n    resources.add(com.wordnik.swagger.jaxrs.JaxrsApiReader.class);\n    resources.add(com.wordnik.swagger.jaxrs.listing.ApiListingResource.class);\n    resources.add(com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider.class);\n    resources.add(com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON.class);\n    resources.add(com.wordnik.swagger.jaxrs.listing.ResourceListingProvider.class);\n    addRestResourceClasses(resources);\n    return resources;\n  }\n}\nWhen I run the example, this is the error generated => Could not find constructor for class: es.gc.sample.core.api.domain.spain.SpainCompanyService\n15:59:40,871 ERROR org.apache.catalina.core.ContainerBase.[jboss.web].[default-host].[/sample].[es.gc.sample.core.api.JaxRsActivator] JBWEB000235: Allocate exception for servlet es.gc.sample.core.api.JaxRsActivator: java.lang.RuntimeException: Could not find constructor for class: es.gc.sample.core.api.domain.spain.SpainCompanyService\n        at org.jboss.resteasy.spi.metadata.ResourceBuilder.constructor(ResourceBuilder.java:683) [resteasy-jaxrs-3.0.6.Final.jar:]\n        at org.jboss.resteasy.plugins.server.resourcefactory.POJOResourceFactory.registered(POJOResourceFactory.java:41) [resteasy-jaxrs-3.0.6.Final.jar:]\n        at org.jboss.resteasy.core.ResourceMethodRegistry.addResourceFactory(ResourceMethodRegistry.java:207) [resteasy-jaxrs-3.0.6.Final.jar:]\n        at org.jboss.resteasy.core.ResourceMethodRegistry.addResourceFactory(ResourceMethodRegistry.java:193) [resteasy-jaxrs-3.0.6.Final.jar:]\n        at org.jboss.resteasy.core.ResourceMethodRegistry.addResourceFactory(ResourceMethodRegistry.java:179) [resteasy-jaxrs-3.0.6.Final.jar:]\n        at org.jboss.resteasy.core.ResourceMethodRegistry.addResourceFactory(ResourceMethodRegistry.java:156) [resteasy-jaxrs-3.0.6.Final.jar:]\n        at org.jboss.resteasy.core.ResourceMethodRegistry.addPerRequestResource(ResourceMethodRegistry.java:75) [resteasy-jaxrs-3.0.6.Final.jar:]\n        at org.jboss.resteasy.spi.ResteasyDeployment.registration(ResteasyDeployment.java:430) [resteasy-jaxrs-3.0.6.Final.jar:]\n        at org.jboss.resteasy.spi.ResteasyDeployment.start(ResteasyDeployment.java:241) [resteasy-jaxrs-3.0.6.Final.jar:]\n        at org.jboss.resteasy.plugins.server.servlet.ServletContainerDispatcher.init(ServletContainerDispatcher.java:112) [resteasy-jaxrs-3.0.6.Final.jar:]\n        at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.init(HttpServletDispatcher.java:36) [resteasy-jaxrs-3.0.6.Final.jar:]\n        at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1194) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]\n        at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:950) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:151) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:389) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]\n        at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169) [jboss-as-web-7.2.0.Final-redhat-8.jar:7.2.0.Final-redhat-8]\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]\n        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1]\n        at java.lang.Thread.run(Thread.java:724) [rt.jar:1.7.0_25]\n. It runs with same solution that in  #485\n. Yes. Thanks\n. Please, open this issue again.\nI can not set scope as compile for model jar in my pom.xml\nIt produces cast exception on other module in the EAR that consumes dto's (with provided scope).\nSo, I have to set scope as provided for model jar. Then no documentation is generated.\nI try with swagger-pluggin, but it has other problems:\n- Do not show subtypes in a model\n- Do not respect position order for services\n. I try again with last swagger-maven-plugin.\nNow the subtypes model are all showed.\nSo, the problem with this system is the services order.\nIf there are not any alternative to set scope as compile, and I have to use swagger-maven-plugin, should I create a new issue in other reposition?\n. I already use the annotation \"position\" for the service.\nThey are ordered in \"strapdown.html\", but not in swagger-ui.\nShall I open a issue for swagger-ui?\n. What do you mean with json output ordered?\nI only generate the file \"strapdown.html\" and a forlder with json that define the services documented\n. No. The creating json order (on execute maven) is not the order specified by annotation \"position\".\nAnd in file \"service.json\" the order is not the correct too.\nIn swagger-ui, services are showed with same order that in service.json\n. I use swagger-maven-plugin to generate json and strapdown.html\n. I only use json generated by swagger-maven-plugin to expose the api documentation with swagger-ui.\n. If I cast json to my api (by a servlet), then the services are ordered well. \nBut it does not run, because I can not set scope to \"compile\" when I package the war.\nWhat else I should test?\n. I think that the problem is with swagger-maven-plugin.\nWhen I test the annotation \"position\" in a example with a servlet it runs well.\nBut when I use the swagger-maven-plugin, it stops working.\n. The result could be two classes totally different.\nI try to open the incident in swagger-spec repo.\nThanks\n. ",
    "elisid": "@Paave - I dont think that is an acceptable solution. If you put an ejb in the ejb module with a method that returns an instance of \"model.EjbModel\" and calls the method from the web module, you will produce a ClassCastException since the class of the returned object (from the dependency in the ear) and the expected class (from the \"compile\" dependency in the war) will come from different places.\nI.e. with this solution you cant put any ejb:s in the ejb module...\n. Please reopen this bug if possible\n. ",
    "dolejnik": "I think it deserves to be reopened and fixed.. I think it deserves to be reopened and fixed.. Possibly same problem as #2194 . Possibly same problem as #2194 . Possibly same problem as #485. Possibly same problem as #485. Possibly same problem as #2194 . Possibly same problem as #2194 . ",
    "lluu": "[cid:9C31645D-0EE2-4E46-9E13-570CD3BF0BD6]\n[cid:2228A381-F8E6-4BB1-B8DA-205C778A0A4A]\nThere you go.  Thanks Tony!\nFrom: Tony Tam notifications@github.com<mailto:notifications@github.com>\nReply-To: wordnik/swagger-core reply@reply.github.com<mailto:reply@reply.github.com>\nDate: Friday, March 14, 2014 5:44 PM\nTo: wordnik/swagger-core swagger-core@noreply.github.com<mailto:swagger-core@noreply.github.com>\nCc: Lynn Luu lynn_luu@intuit.com<mailto:lynn_luu@intuit.com>\nSubject: Re: [swagger-core] ReferenceError:$analytics is not defined (#490)\nHi, can you explain more? Maybe add a screenshot?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/490#issuecomment-37710571.\n. Here's the json\nFrom: , Lynn Luu lynn_luu@intuit.com<mailto:lynn_luu@intuit.com>\nDate: Friday, March 14, 2014 5:50 PM\nTo: wordnik/swagger-core reply@reply.github.com<mailto:reply@reply.github.com>, wordnik/swagger-core swagger-core@noreply.github.com<mailto:swagger-core@noreply.github.com>\nSubject: Re: [swagger-core] ReferenceError:$analytics is not defined (#490)\n[cid:9C31645D-0EE2-4E46-9E13-570CD3BF0BD6]\n[cid:2228A381-F8E6-4BB1-B8DA-205C778A0A4A]\nThere you go.  Thanks Tony!\nFrom: Tony Tam notifications@github.com<mailto:notifications@github.com>\nReply-To: wordnik/swagger-core reply@reply.github.com<mailto:reply@reply.github.com>\nDate: Friday, March 14, 2014 5:44 PM\nTo: wordnik/swagger-core swagger-core@noreply.github.com<mailto:swagger-core@noreply.github.com>\nCc: Lynn Luu lynn_luu@intuit.com<mailto:lynn_luu@intuit.com>\nSubject: Re: [swagger-core] ReferenceError:$analytics is not defined (#490)\nHi, can you explain more? Maybe add a screenshot?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/490#issuecomment-37710571.\n. ",
    "dvic": "On my machine I could not get the project to compile. I now fixed the compile errors. This PR indeed fixes the problem that showed up in swagger-ui. \nNo idea if the build problem only applies to me, but here is the commit that fixed it for me: damirv/swagger-core@2c10d4f5ee2bf1fe62510df620b8137619066908\n. I fixed the compile error (there were other errors too). The PR indeed fixes the problem in swagger-ui. \nNo idea if this only applies to me, but here is the commit that fixed it for me: damirv/swagger-core@2c10d4f5ee2bf1fe62510df620b8137619066908\n. ",
    "mingfang": "Has this been fixed?\nI'm still seeing this problem with the latest swagger core and swagger-ui 2.0.22\n. The feature to generate default nickname no longer works in master.\n. You can use Play's default controller to do the redirect instead of creating your own, like this...\nGET     /api                    controllers.Default.redirect(to=\"/assets/swagger-ui/index.html\")\n. I finally figured it out.\nSomeone already packaged swagger-ui as a webjar.\nhttps://github.com/webjars/swagger-ui\nTo add the webjar, I created a build.sbt(because I don't know how to use Build.scala) with this line\nlibraryDependencies += \"org.webjars\" % \"swagger-ui\" % \"2.0.24\"\nThen in my `routes file, add these two lines(note you may already have one of them)\nGET     /assets/*file           controllers.Assets.at(path=\"/public\", file)\nGET     /swagger                controllers.Default.redirect(to=\"/assets/lib/swagger-ui/index.html\")\nNow point your browser to /swagger and it will be redirected to assets/lib/swagger-ui/index.html\nAlso note this PR is no longer need with this approach.\n. Then perhaps you should publish an official webjar.\nWebjars are supported out of the box by Play and must more elegant than doing a wget.\n\nOn Dec 9, 2014, at 2:00 PM, webron notifications@github.com wrote:\nI don't know if that's wise. The webjars are not maintained by us. I believe @fehguy https://github.com/fehguy's method is the right track.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/swagger-api/swagger-core/pull/741#issuecomment-66337123.\n. \n",
    "ovstetun": "Will there be a general solution to this problem? I am exposing an API with a general \"ResultList\" implementation supporting paging:\njava\npublic class ListResult<T> {\n    public long size = 0;\n    public long rangeFrom = 0;\n    public long rangeSize = 0;\n    public List<T> entries = Collections.emptyList();\n}\nAnd I should really have the T-type as part of my Swagger documentation.\n. ",
    "MichaelMcClure": "+1\n. ",
    "tomtit": "Unfortunately there is no way to do this as JLS states:\n\nIt is a compile-time error if the return type of a method declared in an annotation type is any type other than one of the following: one of the primitive types, String, Class and any invocation of Class, an enum type (\u00a78.9), an annotation type, or an array (\u00a710) of one of the preceding types.\n. So, we need to use the workaround with a non-generic type (RecordResultList) or change method's return type from Response to generic type.\n. @tavoda actually it depends on the way you define your resource:\n\n```\n@Path(\"/\")\npublic class AddressService {\n// Here you need a specific type\n@GET\n@Path(\"/foo\")\n@ApiOperation(value = \"/foo\", response = PagingResultOfAddresses.class)\npublic Response foo() {\n    ...\n}\n\n// Swagger core will handle return type\n@GET\n@Path(\"/boo\")\n@ApiOperation(value = \"/boo\")\npublic PagingResult<Address> foo() {\n    ...\n}\n\n}\n```\n. @tavoda actually it depends on the way you define your resource:\n```\n@Path(\"/\")\npublic class AddressService {\n// Here you need a specific type\n@GET\n@Path(\"/foo\")\n@ApiOperation(value = \"/foo\", response = PagingResultOfAddresses.class)\npublic Response foo() {\n    ...\n}\n\n// Swagger core will handle return type\n@GET\n@Path(\"/boo\")\n@ApiOperation(value = \"/boo\")\npublic PagingResult<Address> foo() {\n    ...\n}\n\n}\n```\n. The CompositionTest unit test is enabled now and checks the presence of the 'allOf' entry in the model definition. What else should be done to resolve the issue?\n. The CompositionTest unit test is enabled now and checks the presence of the 'allOf' entry in the model definition. What else should be done to resolve the issue?\n. The first test for the Human class seems to be incorrect as it accepts Pet as a descendant of Human:\n\"Pet\" : {\n    \"allOf\" : [ {\n        \"$ref\" : \"#/definitions/Human\"\n    }\nSo, here is an improvement #987 for handling subtypes stricter.\n. The first test for the Human class seems to be incorrect as it accepts Pet as a descendant of Human:\n\"Pet\" : {\n    \"allOf\" : [ {\n        \"$ref\" : \"#/definitions/Human\"\n    }\nSo, here is an improvement #987 for handling subtypes stricter.\n. Property ordering is not the issue here, the com.fasterxml.jackson.databind.node.ObjectNode.equals(Object) doesn't take property order into account. Expected JSON is incomplete: #966.\n. Property ordering is not the issue here, the com.fasterxml.jackson.databind.node.ObjectNode.equals(Object) doesn't take property order into account. Expected JSON is incomplete: #966.\n. The order of items in the second test (read a model with composition) is not the same.\nHere is the JSON built for the Animal class:\n{\"Animal\":{\"properties\":{\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"discriminator\":\"type\"},\"Human\":{\"allOf\":[{\"$ref\":\"#/definitions/Animal\"},{\"properties\":{\"name\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"}}}]},\"Pet\":{\"allOf\":[{\"$ref\":\"#/definitions/Animal\"},{\"required\":[\"isDomestic\",\"name\",\"type\"],\"properties\":{\"type\":{\"type\":\"string\",\"position\":1,\"description\":\"The pet type\"},\"name\":{\"type\":\"string\",\"position\":2,\"description\":\"The name of the pet\"},\"isDomestic\":{\"type\":\"boolean\",\"position\":3,\"default\":false}}}]}}\nHere is the one built from the string:\n{\"Animal\":{\"properties\":{\"name\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"discriminator\":\"type\"},\"Human\":{\"allOf\":[{\"$ref\":\"#/definitions/Animal\"},{\"properties\":{\"name\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"}}}]},\"Pet\":{\"allOf\":[{\"$ref\":\"#/definitions/Animal\"},{\"required\":[\"isDomestic\",\"name\",\"type\"],\"properties\":{\"type\":{\"type\":\"string\",\"position\":1,\"description\":\"The pet type\"},\"name\":{\"type\":\"string\",\"position\":2,\"description\":\"The name of the pet\"},\"isDomestic\":{\"type\":\"boolean\",\"position\":3,\"default\":false}}}]}}\nThe Animal.type property is referenced from the JsonTypeInfo annotation. Perhaps it's the reason why the property's position has been changed. I'll investigate this.\nThe ordering check was affected after the #926 fix where String.equals(Object) has been changed to ObjectNode.equals(Object). So, I'm wondering do we need an additional unit test for checking property ordering?\n. The order of items in the second test (read a model with composition) is not the same.\nHere is the JSON built for the Animal class:\n{\"Animal\":{\"properties\":{\"type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"discriminator\":\"type\"},\"Human\":{\"allOf\":[{\"$ref\":\"#/definitions/Animal\"},{\"properties\":{\"name\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"}}}]},\"Pet\":{\"allOf\":[{\"$ref\":\"#/definitions/Animal\"},{\"required\":[\"isDomestic\",\"name\",\"type\"],\"properties\":{\"type\":{\"type\":\"string\",\"position\":1,\"description\":\"The pet type\"},\"name\":{\"type\":\"string\",\"position\":2,\"description\":\"The name of the pet\"},\"isDomestic\":{\"type\":\"boolean\",\"position\":3,\"default\":false}}}]}}\nHere is the one built from the string:\n{\"Animal\":{\"properties\":{\"name\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"discriminator\":\"type\"},\"Human\":{\"allOf\":[{\"$ref\":\"#/definitions/Animal\"},{\"properties\":{\"name\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"}}}]},\"Pet\":{\"allOf\":[{\"$ref\":\"#/definitions/Animal\"},{\"required\":[\"isDomestic\",\"name\",\"type\"],\"properties\":{\"type\":{\"type\":\"string\",\"position\":1,\"description\":\"The pet type\"},\"name\":{\"type\":\"string\",\"position\":2,\"description\":\"The name of the pet\"},\"isDomestic\":{\"type\":\"boolean\",\"position\":3,\"default\":false}}}]}}\nThe Animal.type property is referenced from the JsonTypeInfo annotation. Perhaps it's the reason why the property's position has been changed. I'll investigate this.\nThe ordering check was affected after the #926 fix where String.equals(Object) has been changed to ObjectNode.equals(Object). So, I'm wondering do we need an additional unit test for checking property ordering?\n. The java.lang.Class.getDeclaredMethods() is JVM dependent. My local JVM (java version \"1.7.0_75\", OpenJDK Runtime Environment (fedora-2.5.4.2.fc20-x86_64 u75-b13), OpenJDK 64-Bit Server VM (build 24.75-b04, mixed mode) lists the methods of the Animal interface as follows:\n- public abstract void models.composition.Animal.setType(java.lang.String)\n- public abstract java.lang.String models.composition.Animal.getName()\n- public abstract void models.composition.Animal.setName(java.lang.String)\n- public abstract java.lang.String models.composition.Animal.getType()\nThat is why the type property precedes the name in my previous comment regardless of the order of members in the source code.\nSo, there is nothing we can do about property ordering here.\n. The java.lang.Class.getDeclaredMethods() is JVM dependent. My local JVM (java version \"1.7.0_75\", OpenJDK Runtime Environment (fedora-2.5.4.2.fc20-x86_64 u75-b13), OpenJDK 64-Bit Server VM (build 24.75-b04, mixed mode) lists the methods of the Animal interface as follows:\n- public abstract void models.composition.Animal.setType(java.lang.String)\n- public abstract java.lang.String models.composition.Animal.getName()\n- public abstract void models.composition.Animal.setName(java.lang.String)\n- public abstract java.lang.String models.composition.Animal.getType()\nThat is why the type property precedes the name in my previous comment regardless of the order of members in the source code.\nSo, there is nothing we can do about property ordering here.\n. @devshorts  could you try the version1.5.3-M2-SNAPSHOT? The issue should be fixed there.\n. Yes they are, but codegen's issue is #646 (PR #676).\n. Yes they are, but codegen's issue is #646 (PR #676).\n. Looks like this snippet:\n+    final JsonSubTypes jst = a.getAnnotation(JsonSubTypes.class);\n+    if (jst != null) {\n+      final JsonSubTypes.Type[] subTypes = jst.value();\n+      final List<NamedType> names = new ArrayList<NamedType>(subTypes.length);\n+      for (JsonSubTypes.Type subType : subTypes) {\n+        names.add(new NamedType(subType.value()));\n+      }\n+      if (!names.isEmpty()) {\n+        return names;\n+      }\n+ }\nduplicates FasterXML internals.\nDeep inside we have instance of the com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair class:\n@Override\n    public List<NamedType> findSubtypes(Annotated a)\n    {\n        List<NamedType> types1 = _primary.findSubtypes( a );\n        List<NamedType> types2 = _secondary.findSubtypes( a );\n        if (types1 == null || types1.isEmpty()) return types2;\n        if (types2 == null || types2.isEmpty()) return types1;\n        ArrayList<NamedType> result = new ArrayList<NamedType>(types1.size() + types2.size());\n        result.addAll(types1);\n        result.addAll(types2);\n        return result;\n    }\nwhere _primary holds our SwaggerAnnotationIntrospector and _secondary holds some internal class that handles JSON annotations.\nAt least as we can see from our CompositionTest.scala JSON annotations are already supported.\n. Looks like this snippet:\n+    final JsonSubTypes jst = a.getAnnotation(JsonSubTypes.class);\n+    if (jst != null) {\n+      final JsonSubTypes.Type[] subTypes = jst.value();\n+      final List<NamedType> names = new ArrayList<NamedType>(subTypes.length);\n+      for (JsonSubTypes.Type subType : subTypes) {\n+        names.add(new NamedType(subType.value()));\n+      }\n+      if (!names.isEmpty()) {\n+        return names;\n+      }\n+ }\nduplicates FasterXML internals.\nDeep inside we have instance of the com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair class:\n@Override\n    public List<NamedType> findSubtypes(Annotated a)\n    {\n        List<NamedType> types1 = _primary.findSubtypes( a );\n        List<NamedType> types2 = _secondary.findSubtypes( a );\n        if (types1 == null || types1.isEmpty()) return types2;\n        if (types2 == null || types2.isEmpty()) return types1;\n        ArrayList<NamedType> result = new ArrayList<NamedType>(types1.size() + types2.size());\n        result.addAll(types1);\n        result.addAll(types2);\n        return result;\n    }\nwhere _primary holds our SwaggerAnnotationIntrospector and _secondary holds some internal class that handles JSON annotations.\nAt least as we can see from our CompositionTest.scala JSON annotations are already supported.\n. Fixes #802\n. Fixes #802\n. Fixes #394.\n. Fixes #394.\n. @fehguy could you clarify what should be done here? The project's pom.xml contains two dependencies from Jersey2. Do we need to remove them?\n. @fehguy could you clarify what should be done here? The project's pom.xml contains two dependencies from Jersey2. Do we need to remove them?\n. There was rather long gap between commit and review, so it's easier to close this PR and re-implement no-annotations support again.\n. There was rather long gap between commit and review, so it's easier to close this PR and re-implement no-annotations support again.\n. Looks like a duplicate of the #992. On 1.5.2-M2-SNAPSHOT (branch develop_2.0) this resource:\n```\n@Api(\"renamed\")\n@Path(\"renamed\")\n@Produces({\"application/xml\"})\npublic class ResourceWithRenamedModel {\n@GET\n  @Path(\"/test\")\n  @ApiOperation(value = \"Test operation\", response = AccountRegistration.class, tags=\"Test\")\n  public AccountRegistration test() {\n    return null;\n  }\n@ApiModel(value = \"Account\", description = \"Account information\")\n  public static class AccountModel {\n    public String name;\n  }\n@ApiModel(value = \"User\", description = \"User information\")\n  public static class UserModel {\n    public String name;\n  }\n@ApiModel(description = \"Account registration\")\n  public static class AccountRegistration {\n    public AccountModel account;\n    public UserModel user;\n  }\n}\n```\nis reported as follows:\n{\n  \"swagger\" : \"2.0\",\n  \"tags\" : [ {\n    \"name\" : \"renamed\"\n  }, {\n    \"name\" : \"Test\"\n  } ],\n  \"paths\" : {\n    \"/renamed/test\" : {\n      \"get\" : {\n        \"tags\" : [ \"Test\" ],\n        \"summary\" : \"Test operation\",\n        \"description\" : \"\",\n        \"operationId\" : \"test\",\n        \"produces\" : [ \"application/xml\" ],\n        \"parameters\" : [ ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/AccountRegistration\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"definitions\" : {\n    \"User\" : {\n      \"properties\" : {\n        \"name\" : {\n          \"type\" : \"string\"\n        }\n      },\n      \"description\" : \"User information\"\n    },\n    \"AccountRegistration\" : {\n      \"properties\" : {\n        \"account\" : {\n          \"$ref\" : \"#/definitions/Account\"\n        },\n        \"user\" : {\n          \"$ref\" : \"#/definitions/User\"\n        }\n      },\n      \"description\" : \"Account registration\"\n    },\n    \"Account\" : {\n      \"properties\" : {\n        \"name\" : {\n          \"type\" : \"string\"\n        }\n      },\n      \"description\" : \"Account information\"\n    }\n  }\n}\n. Looks like a duplicate of the #992. On 1.5.2-M2-SNAPSHOT (branch develop_2.0) this resource:\n```\n@Api(\"renamed\")\n@Path(\"renamed\")\n@Produces({\"application/xml\"})\npublic class ResourceWithRenamedModel {\n@GET\n  @Path(\"/test\")\n  @ApiOperation(value = \"Test operation\", response = AccountRegistration.class, tags=\"Test\")\n  public AccountRegistration test() {\n    return null;\n  }\n@ApiModel(value = \"Account\", description = \"Account information\")\n  public static class AccountModel {\n    public String name;\n  }\n@ApiModel(value = \"User\", description = \"User information\")\n  public static class UserModel {\n    public String name;\n  }\n@ApiModel(description = \"Account registration\")\n  public static class AccountRegistration {\n    public AccountModel account;\n    public UserModel user;\n  }\n}\n```\nis reported as follows:\n{\n  \"swagger\" : \"2.0\",\n  \"tags\" : [ {\n    \"name\" : \"renamed\"\n  }, {\n    \"name\" : \"Test\"\n  } ],\n  \"paths\" : {\n    \"/renamed/test\" : {\n      \"get\" : {\n        \"tags\" : [ \"Test\" ],\n        \"summary\" : \"Test operation\",\n        \"description\" : \"\",\n        \"operationId\" : \"test\",\n        \"produces\" : [ \"application/xml\" ],\n        \"parameters\" : [ ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/AccountRegistration\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"definitions\" : {\n    \"User\" : {\n      \"properties\" : {\n        \"name\" : {\n          \"type\" : \"string\"\n        }\n      },\n      \"description\" : \"User information\"\n    },\n    \"AccountRegistration\" : {\n      \"properties\" : {\n        \"account\" : {\n          \"$ref\" : \"#/definitions/Account\"\n        },\n        \"user\" : {\n          \"$ref\" : \"#/definitions/User\"\n        }\n      },\n      \"description\" : \"Account registration\"\n    },\n    \"Account\" : {\n      \"properties\" : {\n        \"name\" : {\n          \"type\" : \"string\"\n        }\n      },\n      \"description\" : \"Account information\"\n    }\n  }\n}\n. Ignoring of whitespaces will make reviewing easier https://github.com/tomtit/swagger-core/commit/723da7be917bc78c48ba7b42225bed6baecd9569?w=1\n. Ignoring of whitespaces will make reviewing easier https://github.com/tomtit/swagger-core/commit/723da7be917bc78c48ba7b42225bed6baecd9569?w=1\n. This is fixed in ~~#1038~~ #1078.\n. This is fixed in ~~#1038~~ #1078.\n. Could you try 1.5.1-M2? But add \"format\": \"float\" or \"format\": \"double\" into your qux definition.\n. Could you try 1.5.1-M2? But add \"format\": \"float\" or \"format\": \"double\" into your qux definition.\n. @fehguy you should add a non-default constructor into your Resource1085 to reproduce the issue.\nHere is such a kind of resource:\n```\n@Api\n@Path(\"/constructor/{someId}\")\npublic class ResourceWithParamsInConstructor {\npublic ResourceWithParamsInConstructor(@PathParam(\"someId\") long someId) {\n  }\n@GET\n  @Path(\"/testTwoParams/{anotherId}\")\n  public List testTwoParams(@QueryParam(\"anotherId\") long anotherId) {\n    return null;\n  }\n}\n```\nIts JSON on develop_2.0 looks as follows:\n{\n  \"swagger\" : \"2.0\",\n  \"paths\" : {\n    \"/constructor/{someId}/testTwoParams/{anotherId}\" : {\n      \"get\" : {\n        \"operationId\" : \"testTwoParams\",\n        \"parameters\" : [ {\n          \"name\" : \"anotherId\",\n          \"in\" : \"query\",\n          \"required\" : false,\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"array\",\n              \"items\" : {\n                \"type\" : \"object\"\n              }\n            },\n            \"headers\" : { }\n          }\n        }\n      }\n    }\n  }\n}\n. @fehguy you should add a non-default constructor into your Resource1085 to reproduce the issue.\nHere is such a kind of resource:\n```\n@Api\n@Path(\"/constructor/{someId}\")\npublic class ResourceWithParamsInConstructor {\npublic ResourceWithParamsInConstructor(@PathParam(\"someId\") long someId) {\n  }\n@GET\n  @Path(\"/testTwoParams/{anotherId}\")\n  public List testTwoParams(@QueryParam(\"anotherId\") long anotherId) {\n    return null;\n  }\n}\n```\nIts JSON on develop_2.0 looks as follows:\n{\n  \"swagger\" : \"2.0\",\n  \"paths\" : {\n    \"/constructor/{someId}/testTwoParams/{anotherId}\" : {\n      \"get\" : {\n        \"operationId\" : \"testTwoParams\",\n        \"parameters\" : [ {\n          \"name\" : \"anotherId\",\n          \"in\" : \"query\",\n          \"required\" : false,\n          \"type\" : \"integer\",\n          \"format\" : \"int64\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"array\",\n              \"items\" : {\n                \"type\" : \"object\"\n              }\n            },\n            \"headers\" : { }\n          }\n        }\n      }\n    }\n  }\n}\n. Does it make sense to declare it as deprecated?\n. Does it make sense to declare it as deprecated?\n. What is the correct JSON for the mentioned resource? Do we still has to report that parameter as array?\n. What is the correct JSON for the mentioned resource? Do we still has to report that parameter as array?\n. Yes, here are the Java types:\nhttps://github.com/tomtit/swagger-core/commit/2ecc1161883f0e28c6dca7d69df0d834d32a7887#diff-38f32c8123dec3817dcd5f383e26517cR83\nAnd here are the expected names:\nhttps://github.com/tomtit/swagger-core/commit/2ecc1161883f0e28c6dca7d69df0d834d32a7887#diff-a7292369035933e77c7e86d4afa12245R155\nTest checks this conversions:\n- GenericType<String> -> GenericTypeString\n- GenericType<UUID> -> GenericTypeUUID\n- GenericType<GenericType<String>> -> GenericTypeGenericTypeString\n- GenericTypeWithApiModel<String> -> RenamedGenericTypeString\n- GenericTypeWithApiModel<GenericTypeWithApiModel<String>> -> RenamedGenericTypeRenamedGenericTypeString\n. Yes, here are the Java types:\nhttps://github.com/tomtit/swagger-core/commit/2ecc1161883f0e28c6dca7d69df0d834d32a7887#diff-38f32c8123dec3817dcd5f383e26517cR83\nAnd here are the expected names:\nhttps://github.com/tomtit/swagger-core/commit/2ecc1161883f0e28c6dca7d69df0d834d32a7887#diff-a7292369035933e77c7e86d4afa12245R155\nTest checks this conversions:\n- GenericType<String> -> GenericTypeString\n- GenericType<UUID> -> GenericTypeUUID\n- GenericType<GenericType<String>> -> GenericTypeGenericTypeString\n- GenericTypeWithApiModel<String> -> RenamedGenericTypeString\n- GenericTypeWithApiModel<GenericTypeWithApiModel<String>> -> RenamedGenericTypeRenamedGenericTypeString\n. Added detailed explanation on my changes. Hope it'll help.\n. Added detailed explanation on my changes. Hope it'll help.\n. Rebased.\n. Rebased.\n. Looks like fixed at the develop_2.0 branch after the #1130 PR.\n. Looks like fixed at the develop_2.0 branch after the #1130 PR.\n. What are the format values?\n. What are the format values?\n. Rebased.\nThe io.swagger.converter.PrimitiveType enum from the PR #1152 was removed as duplicate.\n. Rebased.\nThe io.swagger.converter.PrimitiveType enum from the PR #1152 was removed as duplicate.\n. @webron we have this PR #1163 for the issue.\n. @webron we have this PR #1163 for the issue.\n. This issue #1252 looks similar.\n. This issue #1252 looks similar.\n. I would suggest to remove format checks here at all:\nhttps://github.com/ePaul/swagger-core/blob/feature/993-fall-back-to-no-format-if-format-is-missing/modules/swagger-models/src/main/java/io/swagger/models/properties/StringProperty.java#L54\nand place this item https://github.com/ePaul/swagger-core/blob/feature/993-fall-back-to-no-format-if-format-is-missing/modules/swagger-models/src/main/java/io/swagger/models/properties/PropertyBuilder.java#L146 after all other items with the string format (i.e. DATE, DATE_TIME, E_MAIL and UUID).\n. I'm not sure if it's correct to allow any formats for numbers and integers.\n. Well, INTEGER and DECIMAL are already located after all format sensitive builders, so they can be modified to accept any format.\n. I think this change is not required at all.\n. @fehguy could you please explain this? parameterType is just a helper to call setType(String), while the type is reserved word in scala.\n. I would suggest to convert listeners into local variable as we reinitialize it on each read.\n. This condition looks strange. The first part is always true, the second one is always false as the listeners map is empty after the clean() call.\n. This method is obsolete, it was moved into the ContainerWrapper class.\n. We can speed up these lines for free :)\nMap<String, Object> value = map.get(name)\nif (value == null) {\n  value = new HashMap<String, Object>();\n  map.put(name, value)\n}\n. Second condition still lacks for '!' operator.\nDo you think it's safe to instantiate REST related resources? Please take a look at the resource from the #1085. To add a listener for the TestResource class the author will need to rework his/her class and add a default constructor.\nI would prefer https://jaxb.java.net/tutorial/section_6_2_9-Type-Adapters-XmlJavaTypeAdapter.html#Type%20Adapters:%20XmlJavaTypeAdapter approach and added listener class as one more class annotation:\n```\n@Path(\"/api/workspaces/{workspaceId}/items\")\n@Api(value = \"items\")\n@Produces(MediaType.APPLICATION_JSON)\n@Consumes(MediaType.APPLICATION_JSON)\n@ApiReaderListener(MyListener.class)\npublic class TestResource extends EndpointBase {\npublic TestResource(@PathParam(\"workspaceId\") long workspaceId) throws WorkspaceException\n{\n    // Configures a class-wide resource using workspaceId/PathParam, e.g. DAO\n}\n\n...\n}\npublic class MyListener implements ReaderListener {\n...\n}\n``\n. My point was wrong. I didn't realize initially that we don't need to add implementation of the ReaderListener into our REST resources.\nSo, having this understanding I have a concern about theread(Class<?> cls)method. Inside this method method we don't add our listener into thelisteners` map. If we have two subsequent calls of this method it's possible to activate listener for itself only:\nreader.read(MyListener.class);\nreader.read(MyREST.class); // MyREST will be hidden from MyListener\nAs for now we always call this method from read(Set<Class<?>> classes). Perhaps it makes sense to declare  read(Class<?> cls) as private or protected.\n. Changed rs to rs. to skip javax.ws.rs.* classes only.\nRemoved state variable to get shorter body.\n. non-body params have to be of primitive type according to our spec.\n. implements SwaggerExtension was moved into base class\n. Need to add skipped type into typesToSkip\n. Default value is csv according to the spec.\nmulti is valid only for query or formData.\n. StringProperty may contain enum values, so let's merge additional arguments instead of rebuilding items from scratch.\n. We need to call readAll when swagger != null\n. Never used.\n. We don't need raw types here\n. Changed Class<?> to Type, Set<Class<?>> to Set<Type>.\nisArray is redundant as it's known from Type.\n. shouldIgnoreClass was moved into AbstractSwaggerExtension as we use it inside implementations only. I think we can do this as we're changing the signature already.\n. The ParameterProcessor.applyAnnotations knows how to handle generics now.\n. isArray was always false here, need to leave the else block only.\n. isArray is known from type\n. Now we have enum array, let's check if it contains all values\n. Let's force all descendants to register skipped types in typesToSkip set\n. The ParameterProcessor.applyAnnotations call may return null for skipped parameters, so let's skip them too.\n. This was always false as \"$ref\" != \"ref\".\nNeed this change for PropertyBuilder.Processor.REFERENCE.isType\n. Need this constant for PropertyBuilder.Processor.INTEGER.isType\n. @olensmar, I don't need it for this fix. Do you want me to add it?\n. Need this for org.junit.Assert.assertThat(...) and org.hamcrest.CoreMatchers.instanceOf(Class<?>)\n. Json.prettyPrint(swagger) checks nothing\n. Let's check renamed property instead of printing to console.\n. I think the @Context annotations can be removed as well.\n. Here we have another issue that doesn't relate to the initial one. The ComposedModel is not supported here. So, this converter will update the references to composed models but leave model names untouched.\n. I don't like the idea with renaming and TestNG ending. There is nothing wrong if some tests will run twice (of course until they will not fail). This just means that these tests are first candidates for migration.\nBut my main concern here that we introduce implicit naming convention for Java tests for other community members.\n. Could you clarify this?\n. @ePaul what do you think on this test?\nfor (Property numeric : Arrays.<Property>asList(new DecimalProperty(), new FloatProperty(), new DoubleProperty(), new BaseIntegerProperty(), new IntegerProperty(), new LongProperty())) {\n    final Property built = PropertyBuilder.build(numeric.getType(), numeric.getFormat(), null);\n    Assert.assertNotNull(built);\n    Assert.assertEquals(built.getClass(), numeric.getClass());\n    Assert.assertEquals(built.getType(), numeric.getType());\n    Assert.assertEquals(built.getFormat(), numeric.getFormat());\n}\nIt will ensure that the PropertyBuilder handles all predefined numeric formats properly.\nThe same test can be added for string properties: StringProperty, DateProperty, DateTimeProperty, EmailProperty and UUIDProperty.\n. The signature of this method should not be changed for backward compatibility. If you need to get object type instead of string value just use the Object getDefault() method.\nHandling of default values has been fixed in version 1.5.4 (PR #1378, unit test for boolean values looks as follows) - could you please check the version of the swagger-core artifact in your project?\n. This change (including getter and setter) is not backward compatible and may affect clients of the AbstractSerializableParameter class. I would suggest to apply the same approach that we did for the default property (getDefaultValue vs getDefault, setDefaultValue vs setDefault)\n. The enum property from other primitive types has to be taken into account as well (IntegerProperty, LongProperty, FloatProperty, DoubleProperty, etc.)\n. ",
    "chenjianjx": "Why is this issue closed?  Is there any new issue tracking this problem?   @ovstetun  's workaround is fine, but it may cause too many classes to be created. \n. ok, thank you\n. ",
    "tavoda": "@fehguy sure you can not support ALL POSSIBLE forms of generic, however you can easily support at least very common patterns which can make life better. Just simple e.g. Result and than have possibility to specify for example return type as Result. This is supported by many languages and doesn't require too much changes in spec.\n. Which limitations? Erasures are in generic type (e.g. List), in concrete type you can find it easily. This code produce:\nMethod getListOfStrings return java.util.List[java.lang.String]\nMethod getMapOfStringToSample return java.util.Map[java.lang.String, Sample]\n```\npublic class Sample {\n    public List getListOfStrings() {return null;}\n    public Map getMapOfStringToSample() {return null;}\npublic static void main(String[] args) {\n    Method[] methods = Sample.class.getDeclaredMethods();\n    for (Method m : methods) {\n        Type returnType = m.getGenericReturnType();\n        if (returnType instanceof ParameterizedType) {\n            ParameterizedType pType = (ParameterizedType) returnType;\n            StringBuilder params = new StringBuilder();\n            String prefix = \"\";\n            for (Type type : pType.getActualTypeArguments()) {\n                params.append(prefix).append(type.getTypeName());\n                prefix = \", \";\n            }\n            System.out.println(\"Method \" + m.getName() + \" return \"\n                + pType.getRawType().getTypeName() + \"[\" + params + \"]\");\n        }\n    }\n}\n\n}\n```\n. @webron I'm still confused by spec. Maybe implementation is fine, I would like to have very simple Java return type like PagingResult:\nclass PagindResult<T> {\n    int startRow, endRow, totalRows;\n    List<T> data;\n}\nAnd than AddressService.find method which return just PagingResult<Address>. What is correct way of specifying PagingResult in Swagger? Do I have to create specific type for each service?\nI can investigate in Java all necessary types however I'm not able to write it in swagger. Is it really problem of core or spec?\nThanks for your help\n. Thanks @webron, I will track that issue.\n. @tomtit nice to know, thanks\n. It's problem of SPEC. This mean is not possible to specify real generic return type. Core is handling it fine as mentioned by @tomtit . It should be closed.. ",
    "Marvel77": "Hey, guys! Maybe it will be usefull. I had same issues with my Spring based application and I've used alternate type rules in the Swagger config:\n@Bean\n    Docket api() {\n        return new Docket(DocumentationType.SWAGGER_2)\n                .select()\n                .apis(RequestHandlerSelectors.any())\n                .paths(paths())\n                .build()\n                .apiInfo(apiInfo())\n                .alternateTypeRules(\n                        newRule(typeResolver.resolve(DeferredResult.class,\n                                typeResolver.resolve(ResponseEntity.class, WildcardType.class)),\n                                typeResolver.resolve(WildcardType.class)))\n                ;\n}\nThis means: Swagger, if you will find DeferredResult<ResponseEntity<Something>> then use <Something> as return type for generating JSON in SwaggerUI.\nHere is a controller's method signature:\n@ApiOperation(\n            value = \"Authenticate a user\",\n            notes = \"...\"\n    )\n    @RequestMapping(method = RequestMethod.POST)\n    public DeferredResult<ResponseEntity<BaseResponse<AccessTokenResponse>>> authAndGetDeviceInfo(@RequestBody AuthUserRequest authReques...\nAnd now Swagger generates returned JSON description based on generic BaseResponse<AccessTokenResponse>.\nHave a nice day!\nPS for more info read http://springfox.github.io/springfox/docs/snapshot \n2.1.3. Springfox-swagger2 with Spring MVC and Spring Boot\n. ",
    "dark2201": "How is this solved?. ",
    "kiriak7": "I have the same issue. I just want to clarify that the field appears in api docs, but with the wrong name (\"name\" instead of \"pet_name\").\n. You are right, @XMLElement does work. But @XmlAttribute doesn't.\n. ",
    "feliperoos": "Hi Folks! Shouldn't this work on fields also? I'm pretty sure JAX-RS does not pose any restriction on the definition for XmlElement. Other than that, it makes difficult to have swagger working properly with project lombok.\n. ",
    "markusjura": "salat is using 3.2.5: https://github.com/novus/salat/blob/master/project/SalatBuild.scala\nval json4sNative = \"org.json4s\" %% \"json4s-native\" % \u201c3.2.5\"\nOn 20 Mar 2014, at 18:26, Tony Tam notifications@github.com wrote:\n\nI haven't chased down the version of json4s used in that plugin. Perhaps you can give some more info on what it's using?\nswagger-core is using 3.2.4 of json4s.\n\u2014\nReply to this email directly or view it on GitHub.\n. I tried to publish swagger-core locally with sbt and the json4s version 3.2.5\n\nHowever, swagger-core is not compiling if I do compile in the sbt console. I receive 140 compile errors. Probably I am doing something wrong.\nCan you help me how to publish swagger-core and the swagger-play2 module locally with sbt so that I can try out the json4s version 3.2.5.\nOn 20 Mar 2014, at 20:32, Tony Tam notifications@github.com wrote:\n\nThen I'd try evicting the 3.2.4 in favor of this version, and you shouldn't get that error.\n\u2014\nReply to this email directly or view it on GitHub.\n. It works now. Thanks a lot! Can you release a new version 1.3.4?\nOn 21 Mar 2014, at 15:01, Tony Tam notifications@github.com wrote:\nswagger is built with maven, and the play module with sbt. I've just deployed 1.3.3-SNAPSHOT to sonatype oss which depends on json4s-3.2.5. I've also pushed the play module with this dependency, let me know how it goes.\n\u2014\nReply to this email directly or view it on GitHub.\n. The 1.3.3-SNAPSHOT isn't available on sonatype anymore: https://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-play2_2.10/\n\nWhen do release a new version with this fix?\n. Can't see a 1.3.3.-SNAPSHOT on https://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-play2_2.10\nCan you push a SNAPSHOT again?\n. Again it is not on Sonatype. I'll wait for the version 1.3.4. Thx!\n. ",
    "salimane": "@webron I've already checked that and tried some of the snippets but I'm still getting the same error. In my case I'm not really uploading a file or consuming xml. You can check https://github.com/salimane/java-jersey2/blob/master/src/main/java/com/salimane/swagger/api/resource/v1/UserResource.java#L50\n. @webron I've just pushed to https://github.com/salimane/java-jersey2. No more jersey-media-multipart but still having the same error.\n. @fehguy thanks\n. Yep you are right ApiAuthorizationFilterImpl is just a sample.  I thought it would be easier to find a very simple basic auth that doesn't depend on web servers\n. @webron thanks\n. ",
    "mohitjoshi2410": "Remove all Jersey 1.X libraries and move them to 2.x (glassfish ones)\nAlso make sure you have this web.xml in spring. MultiPartFeature param value is what you need to add.\n<servlet>\n    <servlet-name>jersey-serlvet</servlet-name>\n    <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>\n    <init-param>\n        <param-name>jersey.config.server.provider.packages</param-name>\n        <param-value>com.xyz.app</param-value>\n    </init-param>\n    <init-param>\n        <param-name>jersey.config.server.provider.classnames</param-name>\n        <param-value>org.glassfish.jersey.media.multipart.MultiPartFeature</param-value>\n    </init-param>\n    <load-on-startup>1</load-on-startup>\n</servlet>\nmore details @here\n. ",
    "JavaNeed": "I found some relevance to this issue mentioned here : http://stackoverflow.com/questions/39405067/org-glassfish-jersey-server-model-modelvalidationexception-validation-of-the-ap\nCould you please guide on how to fixed this issue ?\n. ",
    "MiguelGL": "I think I fixed this as of pull request https://github.com/wordnik/swagger-core/pull/531\n. I think Issue https://github.com/wordnik/swagger-core/issues/508 should be fixed here too. \n. ",
    "fkirchhoff": "Is this fix planned to be part of the 1.3.8 release?\n. ",
    "rajanramasamy": "Would it be possible to backport this bug fix to 1.3.7? Our release is coming up in one month and this bug is a showstopper.\n. ",
    "jeremyxxdman": "Because I am using swagger-springmvc 0.6.5, which depends on swagger-core 1.2.0\n. Because there's no DocumentationConfig.class in 0.8.1 right now, if I upgrade to 0.8.1, I have to modify lots of part in my project....\n. Yeah I know that, but what I want is the file like the format shows in \"model schema\" as Swagger Ui.\nrather than the model itself.\ni.e:\nModel schema:\n{\n  \"statusCode\": \"string\",\n  \"name\": \"string\",\n  \"personId\": 0.1,\n  \"expecienceInd\": \"string\"\n}\nrather than:\n(only list out the model part)\n\"Res\": {\n            \"properties\": {\n                \"statusCode\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"personId\": {\n                    \"type\": \"long\"\n                },\n                \"expecienceInd\": {\n                    \"type\": \"string\"\n                }\n           }\n. I modified it\n. ",
    "ankitjaininfo": "I also need this configuration sample about how to override. My objective is to disable swagger in production. I tried to copy JerseyJaxrsConfig scala class and re-create in my package as a copy/override. Didn't work. Throws some class instantiate error. Any pointers shall be helpful.\n. ",
    "todd-richmond": "If you are using a ResourceConfig derived class to initialize your app, you can also use the following code. Application derived classes are probably similar buy you will have to replace packages() helper. This will work for both a war and shaded jar deployment\n```\n@ApplicationPath(\"/myapp\")\npublic class MyApplication extends ResourceConfig {\n    public MyApplication() {\n        SwaggerConfig config = ConfigFactory.config();\n        ApiInfo info = new ApiInfo(\n            \"My RESTful API\",\n            \"My RESTful resources\",\n            \"https://www.foobar.com/eula\",\n            \"support@mycompany.com\",\n            \"Apache 2.0\",\n            \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n        );\n        ReflectiveJaxrsScanner scanner = new ReflectiveJaxrsScanner();\n    config.setApiInfo(info);\n    config.setApiVersion(\"1.0.0\");\n    config.setApiPath(\"/api-docs\");\n    config.setBasePath(\"/myapp\"); // only need relative path\n    packages(\"com.wordnik.swagger.jaxrs.json\");\n    packages(\"com.wordnik.swagger.jersey.listing\");\n    scanner.setResourcePackage(MyApplication.class.getPackage().getName()); //\"com.company.swagger.domain.rest\"\n    ScannerFactory.setScanner(scanner);\n\n}\n}\n```\n. Nope - i don't need var substitution in the default response string. It would definitely be useful to optionally override the entire string so if you want more descriptive \"foo not found\" instead of plain \"not found\"  you would have to supply it yourself. Default strings can come straight from the RFC spec\n. an example would definitely help. Our REST API has a global exception handler that we use to catch most issues and translate to HTTP codes in a general manner. As a result, the documented responses would all share the same docs. Ideally I'd like to create a base set of responses for each HTTP command (PUT, PATCH, GET, DELETE...) and then be able to add a few per-route additions\n. Just hit this today. I have a base class \"Resource\" with a single getUniqueId() method default implementation, but other classes override it (in this case for different Hibernate Id types). I had tried JsonIgnore and hidden=true as well w/o luck\n. 1.5 has enough major changes that it seems like a reasonable, though not huge effort is already required to migrate from 1.3. In that case, changing package names at the same time is trivial\nWhy not just make the change now? We're already working on 1.5 milestone releases and so expect some churn\n. Thx!. Not sure how I missed it, but yes, @JsonProperty(\"ab_cd\") does cause the API doc to work as expected. Would still be nice to enhance @ApiModelProperty though because @JsonProperty is unnecessary otherwise.\n. Based on an idea from https://github.com/swagger-api/swagger-core/issues/947#issuecomment-88052282, you can use the following line to set Swagger's Object Mapper to do camel case conversion \ncom.wordnik.swagger.util.Json.mapper().setPropertyNamingStrategy(\n        PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES);\n. confirmed fixed. Would also be good to change the 1.5 JAX-RS example to the new API since ApiConfig is now deprecated\n. These samples both use ApiInfo. ApiInfo was actually nice in that it only required a single constructor. Would be nice to allow BeanConfig to have a full constructor as well\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/samples/java-jersey-jaxrs/src/main/java/com/wordnik/swagger/sample/Bootstrap.java\nhttps://github.com/swagger-api/swagger-core/blob/develop_2.0/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/Bootstrap.java\n. Only enough web.xml to load the cross-origin filter and some other security constraints - the only swagger config is the lines of code above\n. Also, the samples are still using old Swagger config - I took that code from help you gave me when I first migrated to 1.5\n. xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"3.1\" xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n    http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n  metadata-complete=\"true\">\n  <display-name>MapR</display-name>\n  <filter>\n    <filter-name>gzip</filter-name>\n    <filter-class>org.eclipse.jetty.servlets.GzipFilter</filter-class>\n    <init-param>\n      <param-name>mimeTypes</param-name>\n      <param-value>application/javascript,application/json,text/css,text/html,text/plain</param-value>\n    </init-param>\n    <init-param>\n      <param-name>minGzipSize</param-name>\n      <param-value>1500</param-value>\n    </init-param>\n  </filter>\n  <filter>\n    <filter-name>shiro</filter-name>\n    <filter-class>org.apache.shiro.web.servlet.ShiroFilter</filter-class>\n  </filter>\n  <filter>\n    <filter-name>mapr-installer</filter-name>\n    <filter-class>com.mapr.installer.controller.RequestFilter</filter-class>\n  </filter>\n  <filter-mapping>\n    <filter-name>gzip</filter-name>\n    <url-pattern>/*</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>shiro</filter-name>\n    <url-pattern>/api/*</url-pattern>\n    <dispatcher>ERROR</dispatcher>\n    <dispatcher>FORWARD</dispatcher>\n    <dispatcher>INCLUDE</dispatcher>\n    <dispatcher>REQUEST</dispatcher>\n      </filter-mapping>\n  <filter-mapping>\n    <filter-name>mapr-installer</filter-name>\n     <url-pattern>/api/*</url-pattern>\n  </filter-mapping>\n  <listener>\n    <listener-class>org.apache.shiro.web.env.EnvironmentLoaderListener</listener-class>\n    </listener>\n  <servlet>\n    <servlet-name>mapr-installer</servlet-name>\n    <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>\n    <init-param>\n      <param-name>javax.ws.rs.Application</param-name>\n      <param-value>com.mapr.installer.InstallerApplication</param-value>\n    </init-param>\n  </servlet>\n  <servlet>\n    <servlet-name>default</servlet-name>\n    <servlet-class>org.eclipse.jetty.servlet.DefaultServlet</servlet-class>\n    <init-param>\n      <param-name>dirAllowed</param-name>\n      <param-value>false</param-value>\n    </init-param>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>mapr-installer</servlet-name>\n    <url-pattern>/api/*</url-pattern>\n    </servlet-mapping>\n</web-app>\n. Looks like BeanConfig does not work in 1.5.3 even after adding ReflectiveJaxrsScanner code (which wasn't required in 1.5.2). However, using ReflectiveJaxrsScanner after separately setting the Swagger Info context attribute does.\nThe only issue is that ServletContext is not available for an ResourceConfig derived Application constructor so I had to move setting the context value out to main (for embedded jetty). Ideally there would be some way to set the Swagger+Info class beyond just through ServletContext.setAttribute\n. Accepting a class would be very helpful as I have several endpoints that accept an InputStream parameter (@ApiParam(hidden=true)) for deserialization performance, but want to document them as the actual class expected.\nAlso, no matter what I add for \"datatype=xxxx\", the schema.type value is always the literal value \"string\"\n. Unfortunately 2.7.1 and swagger 1.5.6 now work correctly, but 1.5.7 is quite broken. Roughly 1/3 of all values in swagger.json end up as nulls. I also pulled the Jackson 2.7.2 snapshot build with one more fix for the constructType issue, but that does not make a difference\n. ah - that is it - definitely not an obvious failure mode as many fields still have expected values. I also had to remove the code that was setting SNAKE_CASE on the io.swagger.util.Json.mapper()\n```\n    @Provider\n    @Produces({MediaType.APPLICATION_JSON})\n    private static class JacksonJsonProvider extends JacksonJaxbJsonProvider {\n        JacksonJsonProvider(final ObjectMapper mapper) {\n            super.setMapper(mapper);\n        }\n    }\nregister(new JacksonJsonProvider(new ObjectMapper()));\n\n```\n. Actually - this doesn't work with a shaded jar or maybe because that causes a different load order. I don't see how a provider can be set based on looking at the code. io.swagger.util.json does not provide a way to set the ObjectMapper because io.swagger.util. ObjectMapperFactory.CreateJson() has no public way to pass in the ObjectMapper - it always forces null which ends up using the Jackson default ObjectMapper()\nI also need the default Jackson provider to work in SNAKE_CASE form to translate between java and json keyname conventions. However, Swagger must work in normal mode or else things like basePath get translated incorrectly\nMaking the @Provider class public (instead of a subclass) and using Json.mapper() as in the old file doesn't help for the shaded version. Is there some other registration w/ Swagger that must occur? I do get different, though still incorrect results. In this case objects such as \"info\" are completely empty instead of nulls and basePath key does not exist at all\n. Played around for another couple of hours w/o luck. When running under Eclipse from it's build, I don't need the extra @Provider - swagger.json has all expected elements. However, I cannot get a shaded jar to work under any circumstance with any combination of provider code\nI did notice one significant difference running the 2 Swagger releases. Shaded jar w/ 1.5.6 shows an info log for Reflections but 1.5.7 does not. Is there something that is supposed to initiate this that just happened to work automagically before?\n\nReflections Reflections took 1691 ms to scan 1 urls, producing 21317 keys and 38210 values\n. that will take quite some effort - let me see if it is possible after I ship a release this week\n. I spent some time today attempting to see if 1.5.8 solved my problem (it didn't), but went through the integration docs again and decided to move my Swagger() object creation to my ResourceConfig based constructor as well as register(ApiListingResource.class) and SwaggerSerializers directly. Everything now works as expected for my embedded jetty app even when shaded.\n\nJackson 2.7.2 is out so I think this bug can be closed\n. Same issue with Jersey 2.7.1 - PATCH is not found in swagger.json paths even when using a standard class where PUT/GET/POST all work as expected\n```\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@HttpMethod(\"PATCH\")\n@NameBinding\npublic @interface PATCH {\n}\n``\n@Path(\"config\")\n@SwaggerDefinition(tags = @Tag(name = \"config\", description = \"configuration\"))\n@Api(\"config\")\npublic class ConfigController extends ResourceController {\n    @GET\n    @ApiOperation(\"Get config\")\n    public Config get() {\n    ...\n    }\n    @PATCH\n    @ApiOperation(\"Patch config\")\n    public Config patch(final Config resource) {\n    ...\n    }\n}\n```\n. found a work-around. You must include the httpMethod value in @ApiOperation\n@ApiOperation(value = \"Patch config\", httpMethod = \"PATCH\")\n. Just hit this today as I was about to use the new feature to add ApiResponse to my controller base class as my DELETE ops don't have response data. This should fix the problem so I'll wait to merge until 1.5.9 is out\n. ",
    "swaggering": "@webron, My swagger configuration is bean based. I am using it with SpringMVC. How can I disable this in Production?\n. Okay, thanks for the help. \n. ",
    "rjstanford": "Do you know of any way to teach Swagger that there can be more than one package involved?  I've got a situation in which the ApiListingResource.resourceListing is frustratingly incomplete even though it generates the specific links correctly if I enter them by hand ( /api-docs/ is missing classes, but /api-docs/specific/path reveals the correct JSON ).  My Jersey app is supporting several packages, and if I replace them with a single base package (\"com\" effectively) then Swagger seems to work better - but that's quite silly.\n. ",
    "moxiegirl": "Yeah, I see that this test passes in some envs and not in others. I ended up just building it with \n-DskipTests,  it compiles fine.\n. ",
    "iWebi": "http://stackoverflow.com/questions/22921823/swagger-and-spring-boot-integration-throws-scannerexception is the problem I have.\n. http://stackoverflow.com/questions/22921823/swagger-and-spring-boot-integration-throws-scannerexception is the problem I have.\n. am using 1.3.4. I see below output when I enabled debug.\n\n12:33:11,559 DEBUG processing method public java.lang.String com.company.my.support.mongo.functionality.SMModificationDetails.toString()                     [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,559 DEBUG processing method public int com.company.my.support.mongo.functionality.SMModificationDetails.hashCode()                                  [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,560 DEBUG processing method public groovy.lang.MetaClass com.company.my.support.mongo.functionality.SMModificationDetails.getMetaClass()            [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,560 DEBUG validating datatype groovy.lang.MetaClass against 12 keys, got groovy.lang.MetaClass                                                                   [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,560 DEBUG inspecting groovy.lang.MetaClass                                                                                                                       [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,560 DEBUG validating datatype MetaClass against 12 keys, got MetaClass                                                                                           [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,560 DEBUG validating datatype MetaClass against 12 keys, got MetaClass                                                                                           [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,560 DEBUG added param type groovy.lang.MetaClass for field metaClass                                                                                             [http-nio-8080-exec-2] ModelPropertyParser\n\n. am using 1.3.4. I see below output when I enabled debug.\n\n12:33:11,559 DEBUG processing method public java.lang.String com.company.my.support.mongo.functionality.SMModificationDetails.toString()                     [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,559 DEBUG processing method public int com.company.my.support.mongo.functionality.SMModificationDetails.hashCode()                                  [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,560 DEBUG processing method public groovy.lang.MetaClass com.company.my.support.mongo.functionality.SMModificationDetails.getMetaClass()            [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,560 DEBUG validating datatype groovy.lang.MetaClass against 12 keys, got groovy.lang.MetaClass                                                                   [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,560 DEBUG inspecting groovy.lang.MetaClass                                                                                                                       [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,560 DEBUG validating datatype MetaClass against 12 keys, got MetaClass                                                                                           [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,560 DEBUG validating datatype MetaClass against 12 keys, got MetaClass                                                                                           [http-nio-8080-exec-2] ModelPropertyParser\n12:33:11,560 DEBUG added param type groovy.lang.MetaClass for field metaClass                                                                                             [http-nio-8080-exec-2] ModelPropertyParser\n\n. FYI Its a Jersey JaxRs resource service for which I am integrating swagger. gradle dependencies are\n\n 'com.wordnik:swagger-jersey-jaxrs_2.10:1.3.4', \n'com.fasterxml.jackson.core:jackson-core:2.3.0',\n\"com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.0.0\",\n\n. FYI Its a Jersey JaxRs resource service for which I am integrating swagger. gradle dependencies are\n\n 'com.wordnik:swagger-jersey-jaxrs_2.10:1.3.4', \n'com.fasterxml.jackson.core:jackson-core:2.3.0',\n\"com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.0.0\",\n\n. Can anyone provide me a work around? Is this a bug? Am planning to change all my classes from groovy to java to proceed further. This is a painful process. Want to know if this indeed is a problem? or am I missing anything?\n. Can anyone provide me a work around? Is this a bug? Am planning to change all my classes from groovy to java to proceed further. This is a painful process. Want to know if this indeed is a problem? or am I missing anything?\n. ",
    "mhamrah": "I'm looking for ways to override the assumed format. For instance, I want to represent a specific numerical type, like Biginteger or BigDecimal. I assume the type would be \"string\" (or possibly \"double\" with a format of \"BigDecimal\".\nThe spec seems to infer clients should adhere to the format if present but only communicate the Json schema types for interopability.\n. ",
    "tsandall": "Per https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#data-types the format doesn't need to be specified in the standard. Any chance of revisiting this? /cc @fehguy\n. Yes, it would/should throw an exception. I'm not sure I see where the tricky bit is. Are you saying the API author should not be able to control the type and format of the properties in their models?\n. ",
    "abelsromero": "Sorry to bring back the topic, but how about stream data?\nI have a download file service that returns an InputStreamResource, but I am unable to define the return as type: file or type:string format:binary.\nUsing @ApiResponse(response = byte[].class) swagger generates type:string format:byte, which means Base64 encoded, which is not what the service responds. That's the closest I got, other types (File, InputStream) are just treated as Pojos.. I guess this has not been addressed in any way.\nRegardless of the client behavior, here swagger is clearly taking a decision on behalf of the developer forcing to use a type when the spec offers different options. For me using byte is not viable for the reasons exposed by @IgnasD and it's extremely frustrating there seems to be no way to set the type/format of the return.. ",
    "ngbalk": "Has there been more discussion around @abelsromero 's concern?  I too am not able to find a reasonable solution for autogeneration of Java client's that return stream data.. ",
    "JimB123": "I'm getting this as well.  Downloaded latest swagger-ui today.  Issue seems simple.  Swagger sends a request header of \"application/json\" - regardless of configuration.  The web service is marked with @Produces({ MediaType.TEXT_PLAIN })\nWhen Jetty receives a request for application/json, and the service only supports text/plain, Jetty responds with a 406 (Not Acceptable).\nWhy is swagger forcing the accepts to \"application/json\"?\nSimple swagger declaration:\n{\n    \"swaggerVersion\": \"1.2\",\n    \"apiVersion\": \"1.0\",\n    \"basePath\": \"/services/v1\",\n    \"apis\": [\n        {\n            \"path\": \"/hello\",\n            \"description\": \"A test API that just returns Hello World.\",\n            \"operations\": [\n                {\n                    \"method\": \"GET\",\n                    \"summary\": \"Get a simple Hello World response string.\",\n                    \"nickname\": \"getHello\",\n                    \"parameters\": []\n                }\n            ]\n        }\n    ],\n    \"produces\": [\"text/html\"],\n    \"consumes\": [\"text/html\"]\n}\nThis sends the following request header (snipped from firebug):\nRequest Headers\nAccept  application/json\nAccept-Encoding gzip, deflate\nAccept-Language en-US,en;q=0.5\n[...]\nNote:  I've also tried setting the produces/consumes in the \"operations\" section as well, no change.\n. When making the actual API request. Most of our operations return JSON, but I have one routine that just returns text/html. Swagger UI requests JSON regardless of config.\n- Jim Brunner\nOn Apr 13, 2014, at 4:32 PM, \"Tony Tam\" notifications@github.com<mailto:notifications@github.com> wrote:\nHi, is your issue that swagger is sending a request for application/json when fetching either the api-docs or api declaration? Or when making actual API requests?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/518#issuecomment-40323702.\n. Hi Tony - I think I've figured it out.  Pretty non-obvious.\nIf you specify a \"type\" for the API, the \"produces\" tag is respected and sent in the request \"accept\" header.  If you fail to specify a \"type\", then \"application/json\" is sent in the request \"accept\" header.\nIn my example above, if I just add:\n    \"type\": \"string\",\nthe accept header is properly sent.\nThis is even more confusing due to the poor documentation of the \"type\" tag.  See bug report:  https://github.com/wordnik/swagger-ui/issues/444\n. I'd almost agree - except - since there's no error checking or error indication from the missing type field, I'd still consider the non-obvious result of the UI ignoring the \"produces\" tag as an error.\nIf the documentation is clarified per https://github.com/wordnik/swagger-ui/issues/444, I'd consider this closeable, however error handling continues to be a weak point for Swagger-UI.  The slightest JSON syntax error causes the page not to load - with very little indication of what went wrong.  Even if the page does load, the slightest typo causes elements to be simply ignored by the UI.  Missing required fields are simply ignored.\n. ",
    "azhawkes": "I have been suffering from this same issue. Please see the below test case which demonstrates @JsonIgnoreProperties being ignored.\nhttps://github.com/azhawkes/swagger-core/commit/e55630dc28a45a6e7f039db01131e4a6cde5787e\nIf you run \"mvn test\" in my fork, you'll see the failure.\nPlease note that @JsonIgnore is handled fine; it is the class-level annotation @JsonIgnoreProperties that is totally ignored by ModelPropertyParser. \nBecause a huge number of Groovy meta-properties are added at runtime, using the regular @JsonIgnore is not an option. As it currently stands, there are so many Groovy meta-properties being serialized that swagger-ui crashes my browser.\n. Pull request submitted that should fix the issue... hope that helps.\n. Just a note for anyone Googling... @fehguy merged my fix into the development branch today and it's been built in 1.3.5-SNAPSHOT. Using 1.3.5-SNAPSHOT, I'm now able to use Groovy models just fine like this:\n``` groovy\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties\n@JsonIgnoredProperties([\"metaClass\"])\nclass SampleModel {\n    String name\n    int age\n}\n```\n. ",
    "ptdecker": "I'm having problems too integrating the Swagger dropwizard sample application with dropwizard's own 'hello world' sample.  In doing so, I noticed that the Swagger dropwizard sample application uses 'com.yammer.dropwizard' resources (with appropriate dependencies in the POM):\nimport com.yammer.dropwizard.Service;\nimport com.yammer.dropwizard.config.Bootstrap;\nimport com.yammer.dropwizard.config.Environment;\nHowever, the dropwizard hello world from their site seems to have moved these to 'io.dropwizard' and no longer seems to have the Service class replaced instead by Application.\nimport io.dropwizard.Application;\nimport io.dropwizard.setup.Bootstrap;\nimport io.dropwizard.setup.Environment;\nCould it be that the swagger dropwizard example is out of date? Certainly it works because the POM pulls in the older com.yammer.dropwizard classes. But, could the move to io.dropwizard be causing issues?\n. To your questions directly, here is a link to a working version of the current dropwizard quickstart sans the swagger integration.  The code commented out in were me striking out everything but the bare minimum 'hello world' and health check stuff:\nhttps://github.com/LigoSphere/dwhello\nI think I'm on the trail of what is going on.  Seems some fairly big translations are necessary in the move from dropwizard 0.6 upon which the Swagger dropwizard quickstart is based and the newer dropwizard 0.7.  Here is a related thread from the Dropwizard google group:\nhttps://groups.google.com/forum/#!searchin/dropwizard-user/com.yammer.dropwizard%7Csort:relevance/dropwizard-user/S4K3Ayfij3g/AzMBwJekfnEJ\nAnd a thread I started (showing off my n00b'ness) around confirming the topic:\nhttps://groups.google.com/forum/#!topic/dropwizard-user/SMabfRaShso\nIf this is the right track then some kind sole probably needs to update the swagger quickstart example.\n. Just got it to compile in my 'swagger' branch of that repository:\nhttps://github.com/LigoSphere/dwhello/tree/swagger\nBy replacing:\n- environment.addResource() => environment.jersey().register()\n- environment.addProvider => environment.jersey().register()\n. And, it runs with all testpoints working:\nhttp://localhost:8080/api-docs\nhttp://localhost:8080/hello-world\nhttp://localhost:8080/hello-world?name=P+Todd+Decker\nhttp://localhost:8081/\nI would say we could close my issue (and probably diversion of this thread), but don't know if this solves @shivam03164 issues. And, the swagger dropbox quickstart needs to be updated.\n. ",
    "kiennguyen": "Did it fix in milestone v1.3.12?\n. Did it fix in milestone v1.3.12?\n. I am using the version 1.5.0: https://github.com/swagger-api/swagger-core/commits/v1.5.0.\nDid you have the fix in other versions?\n. I tried the 1.5.2: https://github.com/swagger-api/swagger-core/tree/v1.5.2 and got the same error.\nDo you remember the commit ID or do I need to configure more things?\n. I tried the 1.5.2: https://github.com/swagger-api/swagger-core/tree/v1.5.2 and got the same error.\nDo you remember the commit ID or do I need to configure more things?\n. I cherry-picked your commit and it worked for me. Thank Lugaru1234\n. I cherry-picked your commit and it worked for me. Thank Lugaru1234\n. ",
    "avdkamp": "@fehguy , thanks for your reply, it gave me quite an insight on how to make it work actually. From what I noticed is that the difference between our annotations is that I had put the annotations above the variable and not above the getter method.\nWhen I changed the following code:\njava\n@ApiModel(value = \"Model\", description = \"Model description\")\npublic class Model {\n       @ApiModelProperty(value = \"variable0\", required = true)\n       private String variable0;\n...\n       public String getVariable0(){\n               return variable0;\n       }\n...\n}\nto:\njava\n@ApiModel(value = \"Model\", description = \"Model description\")\npublic class Model {\n       private String variable0;\n...\n       @ApiModelProperty(value = \"variable0\", required = true)\n       public String getVariable0(){\n               return variable0;\n       }\n...\n}\nit showed the required ones. To me this seems that the annotation directly above a variable does not work properly. So there is a work-around available (or this is working as intended and we were implementing it wrongly.)\nthe json returned looks like this now (a shorter version than i previously posted though):\n``` json\n\"models\" : {\n    \"Model\" : {\n      \"id\" : \"Model\",\n      \"description\" : \"Model description\",\n      \"required\" : [ \"variable0\" ],\n      \"extends\" : \"\",\n      \"properties\" : {\n         \"variable0\" : {\n          \"type\" : \"string\",\n          \"description\" : \"variable0\"\n        },\n```\nIt also looks like that the \"value = variable0\" was ignored as well when putting the annotation above the variables as it now shows two extra fields in the json file;\n- required\n- description\nThe pojos that we have annotated are basically nothing more than shown here, just a class with variables,a getter and a setter.\n. Hi, I had send the same issue to the guys from swagger-spring-mvc and it seems that they have not implemented this yet.\nAs far as I can see, the version that their latest version(0.8.3), which is available on Maven, is using swagger-core 1.3.2.\nThe output I receive is exactly the same for me, to bad that this is more of a work around for their library. Other variables besides \"required\" and \"value\" are not working(, yet I presume.)\nThanks again for your help as it made the \"required\" fields on the variables work, which was the most important thing for us to have.\n. ",
    "whitlockjc": "This seems to have been completed already but the code is in master only and not the develop_2.0 branch.  The important commit was a part of pull request #547.  Can you (@fehguy) confirm this?  If so, fixing this is as simple as merging 0adb22e from master to develop_2.0.\n. Okay, I'll get started.  Thanks for clarifying.\n. I tried to keep with your syntax and style as best as possible.\n. This originally came in from swagger-ui/issues/1054.\n. ",
    "swastika": "Hi,\nHere's the output of the curl request:\ncurl -i http://localhost:8080/cmtapivup/api-docs\nHTTP/1.1 200 OK\nServer: Apache-Coyote/1.1\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Methods: GET, POST, DELETE, PUT, PATCH, OPTIONS\nAccess-Control-Allow-Headers: Content-Type\nAccess-Control-Allow-Headers: Content-Length\nAccess-Control-Allow-Headers: Cache-Control\nAccess-Control-Allow-Headers: Transfer-Encoding\nAccess-Control-Allow-Headers: Server\nAccess-Control-Allow-Headers: X-Intuit_tid\nContent-Length: 76\nDate: Mon, 05 May 2014 15:01:44 GMT\njson\n{\"apiVersion\":\"1.0.0\",\"swaggerVersion\":\"1.2\",\"apis\":[{\"path\":\"/cmtapivup\"}]}\n. ",
    "ganddev": "I had a look at the Dependencies.scala and it seems that play uses version 0.9.8. \n\"\n\"org.reflections\" % \"reflections\" % \"0.9.8\" notTransitive ())\n      .exclude(\"com.google.guava\", \"guava\")\n      .exclude(\"javassist\", \"javassist\"),\n\"\n. What do you mean by forcing? As I mentioned play uses 0.9.8\n. ",
    "herrmann": "Swagger 1.3.3 (not 1.3.4) appears to be the correct version for Play 2.2.3.\n. Swagger 1.3.3 (not 1.3.4) appears to be the correct version for Play 2.2.3.\n. ",
    "jypma": "after reading those samples, I was also wondering why swagger wouldn't just use the path in the @Path annotation that always has to be there. Either this javadoc is correct after all, or there's a need for duplication on each resource.\n. ",
    "ijuma": "By the way, there are artifacts for json4s, jackson-scala-module and scalatest so it seems like it would not be hard for swagger-core, but I don't know about other modules.\n. Here is a commit that shows what changes need to be made:\nhttps://github.com/ijuma/swagger-core/commit/4eca2a5bd68f12b8b42f48a33a16248fe64c6a73\n. @fehguy, note that BeanProperty hasn't moved. It's just the aliases for 2.9 that were removed (http://www.scala-lang.org/api/2.10.2/#scala.beans.BeanProperty). In case you were referring to that.\n. ",
    "crakjie": ":+1: \n. +1 too for 2.11\nEnvoy\u00e9 de mon iPhone\n\nLe 4 juil. 2014 \u00e0 19:26, \"Bryce Anderson\" notifications@github.com a \u00e9crit :\n+1 for Scala 2.11\n\u2014\nReply to this email directly or view it on GitHub.\n. This will support 2.11 ?\n. http://day-to-day-stuff.blogspot.fr/2013/04/fixing-code-and-binary.html\n\ncan help ?\n. ",
    "stevenheidel": "Any updates on this? I'd like to be able to use Swagger with Scala 2.11.1\n. Any updates on this? I'd like to be able to use Swagger with Play 2.3.1\n. ",
    "kuehl": ":+1:\n. ",
    "bryce-anderson": "+1 for Scala 2.11\n. ",
    "ohde": "After this is committed will it support 2.11.1 and Play 2.3? Or would I have to pull the new commit and merge another Play 2.3 support branch?\n. ",
    "Shwaaathi": "So, should I always use an java.rs.core.Application?\n. Oh, when are you going to add this feature? So, I would have to redesign my service?\n. Can you tell me a sample with resources packages using resteasy?\n. OK, there are multiple issues here:\n1. If I used ReflectiveJaxrsScanner, I still need to have all the resources in one package.\n2. What would the configuration be if I used ReflectiveJaxrsScanner in web.xml.\nThanks,\nShwaathi\n. What is dropwizard?\nThanks,\nShwaathi\n. Thansk for your help!\n. Thanks for the help!\n. ReflectiveJaxrsScanner says addResourcePackage, not addResourcePackages.\nThanks,\nShwaathi\n. Does my service need to have Jackson library support to use Swagger? Is it a must?\n. OK, thanks :)\n. @fehguy I have been using com.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig for getting the annotations from resources classes in multiple packages. \nIn web.xml:\n``` xml\n    \n    <param-name>resteasy.providers</param-name>\n\n    <param-value>       com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider,com.wordnik.swagger.jaxrs.listing.ResourceListingProvider</param-value>\n\n\n\nresteasy.resources\ncom.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON\n\n<servlet>\n    <servlet-name>DefaultJaxrsConfig</servlet-name>\n    <servlet-class>com.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig</servlet-class>\n    <init-param>\n        <param-name>api.version</param-name>\n        <param-value>1.0.0</param-value>\n    </init-param>\n    <init-param>\n        <param-name>swagger.api.basepath</param-name>\n        <param-value>http://localhost:8080/localservices</param-value>\n    </init-param>\n    <load-on-startup>3</load-on-startup>\n</servlet>\n\n<servlet-mapping>\n    <servlet-name>Resteasy</servlet-name>\n    <url-pattern>/api-docs/*</url-pattern>\n</servlet-mapping>\n<!-- Configuration for SWAGGER UI - END -->\n\n```\njboss-web.xml:\n``` xml\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE jboss-web\n    PUBLIC \"-//JBoss//DTD Web Application 2.3V2//EN\"\n    \"http://www.jboss.org/j2ee/dtd/jboss-web_3_2.dtd\">\n\nlocalservices\n\n```\nThe value \"localservices\" in the below example is configured as the context root.\nAnd my resource implementations are have API declarations:\nBut, still Swagger doesn't read the APi annotations. Am I missing something?\n. jboss-web.xml:\nxml\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE jboss-web\nPUBLIC \"-//JBoss//DTD Web Application 2.3V2//EN\"\n\"http://www.jboss.org/j2ee/dtd/jboss-web_3_2.dtd\">\n<jboss-web>\n    <context-root>localservices</context-root>\n</jboss-web>\nMy resource implementations are in different packages. \n. ",
    "CuriousAgilist": "+1 As I have a team who opted to avoid using Swagger based on the lack of annotation scanning for interfaces. They're sticking with Apiary.io which does not provide the highly valued \"try it\" feature that allows for experimentation with the actual API.\n. ",
    "pike1212": "The @Inherited annotation only applies to super classes not to Interfaces.\n. 1.3.12\n. Thanks! Changing ReflectiveJaxrsScanner to point to the package with the interfaces instead of the package with the implementations seems to have fixed the issue.\n. public Response getFile(@ApiParam(value = \"id of file to return\", required = true) @PathParam(value = \"id\") int id);\n. byte[] file = getFile();\nreturn Response.ok(file).build();\n. ",
    "iushankin": "Cannot reproduce on the develop_2.0 branch.\nThis JSON was generated from the sample:\n\"Task.\":{\n      \"properties\":{\n         \"id\":{\n            \"type\":\"integer\",\n            \"format\":\"int64\",\n            \"description\":\"The ID.\"\n         },\n         \"name\":{\n            \"type\":\"string\",\n            \"description\":\"The name.\"\n         },\n         \"title\":{\n            \"type\":\"string\",\n            \"description\":\"The title.\"\n         }\n      }\n   },\n   \"DetailedTask.\":{\n      \"allOf\":[\n         {\n            \"$ref\":\"#/definitions/Task.\"\n         },\n         {\n            \"properties\":{\n               \"id\":{\n                  \"type\":\"integer\",\n                  \"format\":\"int64\",\n                  \"description\":\"The ID.\"\n               },\n               \"name\":{\n                  \"type\":\"string\",\n                  \"description\":\"The name.\"\n               },\n               \"title\":{\n                  \"type\":\"string\",\n                  \"description\":\"The title.\"\n               },\n               \"attachment\":{\n                  \"description\":\"The attachment\",\n                  \"$ref\":\"#/definitions/Attachment\"\n               }\n            }\n         }\n      ]\n   },\n   \"Attachment.\":{\n      \"properties\":{\n         \"id\":{\n            \"type\":\"integer\",\n            \"format\":\"int64\",\n            \"description\":\"The attachment ID.\"\n         },\n         \"name\":{\n            \"type\":\"string\",\n            \"description\":\"The attachment name.\"\n         }\n      }\n   }\n. Also fixed #1004 issue\n. Yes, it should work on the develop_2.0 branch\nYou can look at https://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-jaxrs/src/main/java/com/wordnik/swagger/jaxrs/Reader.java#L191-L201\n. This issue is related to #953\n. The Swagger doesn't support some parameters.\nSupported types of injection from the JAX-RS documentation:\n- [ ] Class fields\n- [ ] Constructor parameters\n- [x] Resource methods\n- [x] Sub resource locators\n- [ ] Setter methods it should not be supported\nJAX-RS documentation: https://jersey.java.net/documentation/latest/jaxrs-resources.html#d0e2688\nTest resource which implement all injection types: https://gist.github.com/iushankin/319883fd1409b6a7344c\nJSON from this sample:\nField parameter and constructor parameter are both lost. Method parameter is correct:\n\"/resource\": {\n  \"get\": {\n    ...\n    \"parameters\": [\n      {\n        \"name\": \"methodParam\",\n        \"in\": \"query\",\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    ],\n    ...\nSub resource parameter is correct:\n\"/resource/subresource\": {\n  \"get\": {\n    ...\n    \"parameters\": [\n      {\n        \"name\": \"subResourceQueryParam\",\n        \"in\": \"query\",\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    ],\n    ...\n. It was fixed on the develop_2.0 (can you look at #971)\nAlso it was merged to the 1.5.2-M2\n. This PR was rebased\n. @bogdatov I wonder how do you get path for loginId. @PathVariable annotation is the SpringFramework annotation and it's not processed by swagger-core.\nI would expect to get these types for your parameters\n  loginId is body\npage and size are both query\nDo you have some custom SwaggerExtension for handling @PathVariable?\n. Hi, which version of the Swagger do you use?\nWe changed base package from com.wordnik.swagger to io.swagger month ago. Please try to use io.swagger.jaxrs.json instead com.wordnik.swagger.jaxrs.json.\n. It should work on the Swagger 1.5\nThis feature was implemented, please look at: https://github.com/swagger-api/swagger-core/pull/1095\nJSON for your example:\n``` json\n{\n  \"swagger\" : \"2.0\",\n  \"tags\" : [ {\n    \"name\" : \"basic\"\n  } ],\n  \"paths\" : {\n\"/getContainerItems\" : {\n  \"get\" : {\n    \"tags\" : [ \"basic\" ],\n    \"operationId\" : \"getContainerItems\",\n    \"parameters\" : [ {\n      \"name\" : \"limit\",\n      \"in\" : \"query\",\n      \"required\" : false,\n      \"type\" : \"integer\",\n      \"default\" : 10, <--\n      \"format\" : \"int32\"\n    } ],\n    \"responses\" : {\n      \"default\" : {\n        \"description\" : \"successful operation\"\n      }\n    }\n  }\n},\n\n}\n}\n```\nWhich version of the Swagger do you use?\n. @webron it works for @BeanParam\nAlso we have tests for it:\nmodel - TestBeanParam.java\nresource - ResourceWithBeanParams.java\ntest - ScannerTest.java\n. @webron sure, I wrote tests for @DefaultValue and for @ApiParam(defaultValue = ...) annotations in @BeanParam\n. Hi, @meshuga. Did you have a chance to check the swagger version? Can we close the issue?\n. Your sample should work correctly in the swagger-core v1.5.3\nPlease look at JSON which was generated by this sample:\njson\n\"definitions\": {\n  \"NodeTree\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"id\": {\n        \"type\": \"integer\",\n        \"format\": \"int64\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      },\n      \"children\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/definitions/NodeTree\" <--\n        }\n      }\n    }\n  }\n}\nAlso you have the implicit parameter with wrong paramType. Valid values are path, query, body, header or form.\n@ApiImplicitParams(value = {\n    @ApiImplicitParam(name = \"nodeTree\", value = \"\", required = true, dataType = \"NodeTree\",\n                      paramType = \"data\")})\n. @vishakMetric please check default value of url in your index.html file\nyou can look at sample: https://github.com/swagger-api/swagger-samples/blob/master/java/java-jersey2/src/main/webapp/index.html#L30\nAlso, check next url: http://localhost/swagger/index.html?url=http://localhost/swagger/sample.json\n. Could you please follow the Swagger Coding Style: tab characters are not used for indentation.\n. Hi @gaalandr, thank you.\nYour changes are good, but could you remove tab characters for indentation.\nPlease look at the Swagger Coding Style for details.\n. @gaalandr thanks\n. @webron I approved and merged this PR https://github.com/swagger-api/swagger-core/pull/1524\n. Okay\n. Seems no. This method depends on the private method Reader#getParameters\n. From the spec: \"The @FormParam annotation is special and may only be utilized on resource and sub-resource methods. This is because it extracts information from a request entity. \"\nPlease look: https://jersey.java.net/documentation/latest/jaxrs-resources.html#d0e2731\nAlso look old implementation: https://github.com/swagger-api/swagger-core/blob/399bb429803c03cff9aa474057c72df39026787f/modules/swagger-jaxrs/src/main/scala/com/wordnik/swagger/jaxrs/JaxrsApiReader.scala#L216-L219\n. The ScalaTest compiles tests from the src/test/scala path by default.\nWe compile tests from both paths: src/test/scala, src/test/java.\nPlease look at build.log file - https://travis-ci.org/swagger-api/swagger-core/builds/68503343#L3622-L3623\n. Yes, but we have some java tests in scala (i.e. SimpleGenerationTest, ModelPropertyOverrideTest, etc.). And these tests will be run two times (first run by the ScalaTest and second run by the TestNG).\nIt's best workaround when we have two types of tests.\n. The testName attribute will be ignored if @Test is not at the class level. You can use description instead.\n. order of properties should be the same as they are defined in the spec\n. duplicated method - public Boolean isExclusiveMaximum()\n. duplicated method - public void setExclusiveMaximum(Boolean exclusiveMaximum)\n. please add new line to the end of file\n. Let's wrap this array with @org.testng.annotations.DataProvider so we could check every property independently.\nAs for now if we have more then one skipped properties the test will detect the first one only\n. add @Override annotation if a method is implementing an interface\n. Generally speaking this check gives positive results for non-bean methods. (i.e. String setSomeValue(String arg1, String arg2, ...)). Is it possible use the com.fasterxml.jackson.databind.BeanDescription class here as we do it in the ModelResolver?\n. ",
    "andreysaksonov": "Actually, I rushed too fast with this fix. I will send new PR with better solution.\n. see #567\n. how to change the base branch for PR?\n. Version need to be bumped to 1.4.0-SNAPSHOT after merge as support for Play 2.3 requires to drop support for Play 2.2\n. Unfortunately, binary inconpatibility is not caused by this changes, but by play 2.3 jar itself\n. Probably, you could do the same thing as versioning the extensions for akka like this https://github.com/typesafehub/akka-quartz-scheduler\n// For Akka 2.0.x\nlibraryDependencies += \"com.typesafe.akka\" %% \"akka-quartz-scheduler\" % \"1.2.0-akka-2.0.x\"\n// For Akka 2.1.x\nlibraryDependencies += \"com.typesafe.akka\" %% \"akka-quartz-scheduler\" % \"1.2.0-akka-2.1.x\"\n// For Akka 2.2.x\nlibraryDependencies += \"com.typesafe.akka\" %% \"akka-quartz-scheduler\" % \"1.2.0-akka-2.2.x\"\nAkka team also breaks backward compatibility with insane speed\n. Currently you can try this -\nhttps://github.com/suxonoff/swagger-core/tree/play-2.3.0-support, it works\nfine for me (but it is not compatible with play 2.2)\n. I will close this and open new PR against current develop_2.11\n. This makes swagger-play2-utils unusable out of the box, so need to be fixed asap\n. Please merge :)\n. 1) This is common problem in Scala World! Despite the fact such naming turn my eyes to bleeding with blood, I think such naming is well known through Scala Community. Quick Examples:\n\"com.typesafe.akka\" %% \"akka-quartz-scheduler\" % \"1.2.0-akka-2.2.x\"\n\"org.reactivemongo\" %% \"reactivemongo\" % \"0.10.5.akka23-SNAPSHOT\"\nSo I propose to not touch the artifact name, but introduce the suffix in version and cross build (I am not sure if it is possible, currently it looks like pointing scala version to 2.10.x breaks the build - I need double check):\nswagger-play2_2.10-1.3.8-play-2.2-SNAPSHOT\nswagger-play2_2.10-1.3.8-play-2.3-SNAPSHOT\nswagger-play2_2.11-1.3.8-play-2.2-SNAPSHOT\nswagger-play2_2.11-1.3.8-play-2.3-SNAPSHOT\n2) Will do it, hope it requires not much efforts :)\n. Okay, the problem with cross-building is that some dependencies of swagger-play2 built using maven (swagger-jaxrs for example). I don't have experience with Scala on Maven, so I just don't know how to cross-compile in Maven. Hope it is possible at least.\n. It looks like it works, please see how I tuned poms for cross-compilation (a little bit hacky at my taste, but works):\nhttps://github.com/suxonoff/swagger-core/commit/00365ded8b46cb4c9a01835e734918abcbf77a69\n. Compilation with 2.10 breaks some tests. Investigating...\n. See https://github.com/wordnik/wordnik-oss/issues/22\n. Root cause of failed tests:\njava.lang.NoSuchMethodError: scala.Predef$.ArrowAssoc(Ljava/lang/Object;)Ljava/lang/Object;\n    at org.json4s.JDoubleJFieldJsonWriter.addNode(json_writers.scala:36)\n. Actually, it is. Also it looks like maven has a lot of problems with variables in artifactId, after few days of testing this, I think it is better to abandon it and have separate branches for 2.10 and 2.11\n. Actually, it is. Also it looks like maven has a lot of problems with variables in artifactId, after few days of testing this, I think it is better to abandon it and have separate branches for 2.10 and 2.11\n. ",
    "kristijanbambir": "When is support for 2.3 planned?\n. ",
    "ArvindPotnuru": "@suxonoff any updates on this? :)\n. ",
    "kenkoster": "Is the merge pending a decision around versioning or is the issue the pull request merge conflicts?\nI had independently added 2.3 support (https://github.com/kenkoster/swagger-core/tree/play_2.3.0); I can set up a pull request for that if the problem is the merge conflict.\n. ",
    "e28eta": "I don't think that'll work, I want to replace the type for all requests, parameters and responses, and I can't do it through annotations.\nDates are a great example. Our (third-party provided) schema specifies that the date fields have type XMLGregorianCalendar. We've told Jackson (the json serialization library we're using) that it should produce and consume strings with a certain format (yyyy-MM-dd...) for all XMLGregorianCalendar fields.\nI need Swagger to reflect this fact.\nAnd a very similar story for BigDecimal. Because it's a global override, there's no way I want to find and annotate each field with the target type, even if we could.\nCan this be the specific issue to provide this feature? Is there some other way I can word it to be more clear?\nThanks!\nDan\n. @webron I can't figure out how someone would use Swagger with types like BigDecimal and not need this, unless they're solely going from Java to Java. My API client should not send me scale and precision (the internal representation of BigDecimal on Java) it should send me the value as a string (since any other JSON representation could lose precision). Date classes are another good example, I think.\n@fehguy I thought my initial message explained why. Did I get something wrong, or explain my issue incorrectly?\nThanks again for the help.\n. ",
    "IAmTheEye": "Thanks, I'll take it there. A bit confusing with all the subprojects ;-).\n. ",
    "nheidloff": "Not sure what the problem was but it works now.\n. Thanks for the quick response, but that doesn't work either. \nI just found @ApiImplicitParams. When using it I can see the parameters in the JSON. Now trying out whether the input parameters are passed in correctly when using the 'try it out' in the swagger ui\n. Thanks, just tried https://github.com/wordnik/swagger-core/blob/master/samples/java-jaxrs/src/main/java/com/wordnik/swagger/sample/resource/PetResource.java. Everything works except of the input parameters unfortunately. Maybe some config issue on my side.\n. ",
    "saliabbasraza": "Thanks, That solve my problem :)\n. ",
    "flenzi": "I'm having the same problem. Trying to make it work with apache cxf\n. I just realize that the pom is not the problem, but the beans configuration\n. ",
    "vandeti": "made new pull request for develop branch #592 \n. replaced by Test and suggested fix for issue 433 #592\n. Jackson currently has limited support for ignoring fields on deserialise only (see link below). Through a combination of JsonIgnore on field and setter and JsonProperty on getter you can get this kind of behaviour but it's more a trick then a feature.  Even though this will get you the serialisation behaviour it will obviously not get you the correct swagger Model.\nThe swagger model converter uses the com.fasterxml.jackson.databind.AnnotationIntrospector  to abstract the actual annotations being used (jaxb, Jackson or ModelAPI ). Unless the readOnly concept is added on that API (and then also in the jackson deserialiser), I see no clean way to add it to swagger given the current design.\nsee:  https://github.com/FasterXML/jackson-databind/issues/95\nKr,\nTim\n. ",
    "msmiths": "I'm afraid not... do you have any pointers?\n. Many thanks.\n. ",
    "advaittrivedi": "Thanks Tony, I followed that, but no luck. But I see a pattern here -- I have 2 resource java classes both has @Path(\"/user\"), say R1 and R2. If I add @Api(\"/user\") in R, all the Model JSON are generated. If add @Api(\"/user\") in R2 as well, model JSON gets generated for operations listed in R2, but none of the model listed in R1, though all the operations listed in R1 are part of the JSON.\nAlso, I am not adding @ApiParam and @ApiModel any where.\n. From where can you I get 1.3.6-SNAPSHOT, I do not know if its uploaded to some Maven repo ?\n. Hey Tony,\nI used 1.3.6-SNAPSHOT but still the same problem persists. Actually, I was able to produce this problem on https://github.com/wordnik/swagger-core/tree/master/samples/java-jersey2 as well using 1.3.6-SNAPSHOT. I added class CopyOfUserResource with @Path(\"/user\"), and also I added a new model CopyOfUser which I am passing as parameter to this method: public Response createUser(@ApiParam(value = \"Created user object\", required = true) CopyOfUser user). Now, when I try to get JSON from http://localhost:8080/swagger-jersey2-sample-app_2.10-1.3.5/api/api-docs, model for CopyOfUser.java is available, but model for User.java is not available (attached screenshot).\n\n. Hi Tony, Some more insight in to this issue. The issue gets resolved if I changed @Api annotation on one of the resources to @Api(\"/new-user\"). And the good thing is swagger-ui doesnt use this values to construct URLs. It actually uses value from @Path jax-rs annotation which is @Path(\"/user\"). I can live with this work around. But it'd be nice to get to the root of this.\n. ",
    "jGauravGupta": "Issue is still coming for v1.3.7\n. ",
    "pastarace": "The shared lib currently contains just the postgres jdbc driver.\nMy pom is:\n\n4.0.0\nsciamlab-rest\nckan-wrapper\nwar\n0.0.1-SNAPSHOT\n\n\n\norg.glassfish.jersey\njersey-bom\n${jersey.version}\npom\nimport\n\n\n\n\n\norg.glassfish.jersey.containers\njersey-container-servlet-core\n use the following artifactId if you don't need servlet 2.x\ncompatibility \n artifactId>jersey-container-servlet</artifactId \n <scope>provided</scope> \n\n\ncom.wordnik\nswagger-jersey2-jaxrs_2.10\n1.3.5\n <scope>provided</scope> \n\n\njunit\njunit\n4.9\ntest\n\n\nnet.sf.json-lib\njson-lib\n2.4\njdk15\n <scope>provided</scope> \n\n\norg.postgresql\npostgresql\n9.3-1101-jdbc4\nprovided\n\n\nlog4j\nlog4j\n1.2.17\n <scope>provided</scope> \n\n\nsciamlab\nsciamlab-common\n0.0.1-SNAPSHOT\n <scope>provided</scope> \n\n\nsciamlab-auth\noauth-core\n0.0.1-SNAPSHOT\n <scope>provided</scope> \n\n\n\n2.7\nUTF-8\n\n\nckan\n\n\norg.apache.maven.plugins\nmaven-war-plugin\n2.3\n\n <failOnMissingWebXml>false</failOnMissingWebXml> \n <archive> \n <manifestEntries> \n <Class-Path>../WEB-INF/classes/</Class-Path> \n </manifestEntries> \n </archive> \n\n\n\norg.apache.maven.plugins\nmaven-compiler-plugin\n2.5.1\ntrue\n\n1.7\n 1.7\n\n\n\n\n\nThanks\nPaolo\nOn Mon, Jun 9, 2014 at 3:34 PM, webron notifications@github.com wrote:\n\nI've never tried it, but it's an interesting challenge.\nCan you share your current pom.xml and a list of which libraries are\nactually deployed to your tomcat shared dir?\nOn Mon, Jun 9, 2014 at 11:13 AM, Fuffa notifications@github.com wrote:\n\nHi all,\nI've a Jersey2 webapp and I noticed that the Swagger deps on it are\n~32mb\nso, since my webapp is ~8mb, Swagger increase its size to ~40mb (and\nthat\nis a small pain just to add api docs...). I've also several apps to\ndocument so I'd like to copy the swagger libs once.\nTo solve I'm trying to deploy the Swagger deps as shared lib in Tomcat,\nmarking them as provided in my pom, but at runtime I get the Jersey\nerror:\n[image: image]\n<\nhttps://cloud.githubusercontent.com/assets/3236943/3214372/7d0b8c18-efad-11e3-9cec-b53c149f3c08.png>\nI know that Swagger tries to import several jars that are already\ndeployed\nby Jersey so I left them into the war, avoiding to provide them into\ntomcat\nshared lib dir. Indeed I'm sure the jar that contains the WebConfig\n(jersey-container-servlet-core-2.7.jar) is part of the war (compiled,\nnot\nprovided).\nDo you know if it is possible to use Swagger as provided dep? If not, do\nyou know a workaround to solve my \"issue\"?\nI'm using swagger-jersey2-jaxrs_2.10 version 1.3.5.\nThanks a lot,\nPaolo\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/593.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/593#issuecomment-45490574\n.\n. Applying the exclusion the size is affected by few KB.\nNo way to use it as provided? Are you able to reproduce the issue?\nthanks\n. The main issue is that I'm trying to use swagger as provided dep to reduce the size of the resulting war (that with swagger increase by ~38mb).\nThe error in the screenshot happens when the swagger dep is marked as \"provided\", so that means that deploying it as provided breaks something on Jersey (also if all the jersey libs are deployed as \"compile\") :(\n. This is what I copied in the shared dir:\ndom4j-1.6.1.jar\njackson-annotations-2.1.5.jar\njackson-core-2.1.5.jar\njackson-databind-2.1.5.jar\njackson-jaxrs-json-provider-2.0.0.jar\njackson-module-jaxb-annotations-2.0.0.jar\njackson-module-jsonSchema-2.1.0.jar\njackson-module-scala_2.10-2.1.5.jar\njoda-convert-1.2.jar\njoda-time-2.1.jar\njson4s-ast_2.10-3.2.4.jar\njson4s-core_2.10-3.2.4.jar\njson4s-ext_2.10-3.2.4.jar\njson4s-jackson_2.10-3.2.4.jar\njson4s-native_2.10-3.2.4.jar\njsr311-api-1.1.1.jar\nmimepull-1.9.3.jar\nparanamer-2.3.jar\nreflections-0.9.8.jar\nscala-compiler-2.10.0.jar\nscala-library-2.10.0.jar\nscalap-2.10.0.jar\nscala-reflect-2.10.0.jar\nslf4j-api-1.6.3.jar\nswagger-annotations-1.3.2.jar\nswagger-core_2.10-1.3.2.jar\nswagger-jaxrs_2.10-1.3.2.jar\nswagger-jersey2-jaxrs_2.10-1.3.2.jar\nxml-apis-1.0.b2.jar\n\nThey represent the packages that are removed from the war when I change the scope of the swagger dep from compile to provided\njavassist-3.12.1.GA.jar, javax.inject-2.2.0.jar and jersey-server-2.7.jar are kept into the war.\n. I finally sorted out deploying jersey libs into the tomcat shared lib dir as well.\nNow the problem is different and much more critical I guess :( as I have a huge side effect using swagger in two different webapps. I'm currently configuring it using:\nSwaggerConfig config = new SwaggerConfig();\nconfig.setBasePath(BASE_PATH);\nconfig.setApiVersion(API_VERSION);\nconfig.setApiInfo(new ApiInfo(API_TITLE, API_DESCRIPTION, API_TERMS_OF_SERVICE_URL, API_CONTACT, API_LICENSE, API_LICENSE_URL));\nConfigFactory.setConfig(config);\nScannerFactory.setScanner(new DefaultJaxrsScanner());\nClassReaders.setReader(new JerseyApiReader());\nand I do the same for both webapps (of course with different values).\nThe problem is that at runtime the api-docs page of each webapp returns the same result (for both apis list and info part) (actually a mix of both is returned).\nAny clue/hint about?\nThanks,\nPaolo\n. I tried also using web.xml based configuration with:\n<servlet>\n    <servlet-name>JerseyJaxrsConfig</servlet-name>\n    <servlet-class>com.wordnik.swagger.jersey.config.JerseyJaxrsConfig</servlet-class>\n    <init-param>\n        <param-name>api.version</param-name>\n        <param-value>v3</param-value>\n    </init-param>\n    <init-param>\n        <param-name>swagger.api.basepath</param-name>\n        <param-value>http://localhost:8080/ckan/v3</param-value>\n    </init-param>\n    <load-on-startup>2</load-on-startup>\n</servlet>\nbut the result is the same.\n. yes they are deployed as separated wars\n. I finally solved using the example you can find here http://java.dzone.com/articles/extending-tomcat-webapploader\n. ",
    "lammel": "We are facing the same issue here. The annotation scanning results in a slowdown of our suite with 1000 tests considerable (running over 20min instead of 2min). It seems laso the swagger plugin initialization is getting slower and slower as the tests progress.\nIf there is a sane way to disable swagger doing the same scanning over and over for the tests any hints would be greatly appreciated.\n. It's a play 2.3 application currently with Scala 2.10 using \"com.wordnik\" %% \"swagger-play2\" % \"1.3.10\".\nTests do initialize the application afresh for most of the tests, so the scanning occurs pretty often.\nWe basically followed the README, just adding the routes to api-docs and having currently 2 classes with annotations (about 20 routes).\nNo additional configuration for swagger-core. To which kind of configuration are you refering?\n. Thanks, let's see if @fehguy has some time to spare for an answer. I just tried with swagger-play2 1.3.11. I'm still seeing a notable slowdown of plugin initialization after some tests (pretty fast initially at 160ms and slows down to approx 600ms after 50 tests and keeps on growing up to 2-3 seconds).\nMemory has been checked (using jvisualvm), still memory free and permgen is also fine (both having approx 40% free).\nSeems like computation requires more and more effort with each application init for testing.\n. Ok, so I would need to patch (comment out) that to verify. I see if I get around to doing that.\n. Ah, great, thanks! Should have looked more into FakeApplication instead of messing with the sbt plugin config. Using withoutPlugins for FakeApplikation works great and is looks to me like the right solution anyway.\nIf it should be documented I can provide a pull request for the text blurb. Any specific place where we should put that (e.g. readme)?\nThis should probably be documented, is there a place to put this (e.g. readme)?\n. ",
    "tpietsch": "i know swagger but if i place a JSONObject as one of my variables in my POJO i feel like that should be able to accommodate this requirement but when i use JSONObject or ArrayList\nand i POST an arrayList of 3 json objects i get\n[{},{},{}]\n. maybe it isn't i guess\n. ",
    "knutz3n": "Closed and opened a new pull request against develop https://github.com/wordnik/swagger-core/pull/599\n. ",
    "eclucas": "The problem was I didnt import all the dependencies to my NO maven project.\n. ",
    "TheLouisHong": "That's the download page you guys pointed in your website :https://helloreverb.com/developers/swagger\n. Can you update it real quick so I can start using swagger?\n. No, I guess I could learn for the sake of getting Swagger. But it's best if I can just download it\n. ",
    "frankgibbs": "much appreciated\n. ",
    "slustbader": "The thread reported the issue in 1.3.0 and 1.3.5, and I still have this problem in 1.3.6.\n. Any update on this issue? Were you able to reproduce it?\n. Any chance this could be back-ported to 1.3.x? Does 1.5.0 have an estimated release date yet?\n. We're using Play, so as you noted in another thread, we'll have to wait at least until M3 for play support - if that's really going available to be available, we can wait (and just use the \"extra\" API operation workaround for now).\nWe're also a little reluctant to use a milestone build, but if M3 is close to final (and since API documentation isn't mission critical), I think it'll be OK.\n. Yes, that is correct - the problem occurs when using Play and not using jaxrs.\n. Does this support Play 2.10, too, or just 2.11?\n. Thanks!\n. Has there been any progress on the 2.10 version?\n. @fehguy Is there an issue or something we can follow in the swagger-play repo?\n. ",
    "mwhig": "Adding a new @ApiOperation and making it hidden doesn't work fully. \nI created a new operation with the following annotation:\njava\n@Path(\"/dummy\")\n@GET\n@ApiOperation(response = MyModel.class, hidden = true, httpMethod = \"GET\",\n    value = \"Workaround for bug https://github.com/wordnik/swagger-core/issues/606\")\nMyModel POJO has following annotations:\njava\n@JsonTypeName(\"myModel\")\n@JsonTypeInfo(include = As.WRAPPER_OBJECT, use = Id.NAME)\npublic class MyModel {...}\njava\n@Path(\"/someApi\")\n@GET\n@ApiOperation(response = ResourceWithAssociationToMyModel.class, httpMethod = \"GET\", value = \"An api that returns some resource.\")\npublic ResourceWithAssociationToMyModel someAPI() {...}\n``` java\n@JsonTypeName(\"resourceWithAssociations\")\n@JsonTypeInfo(include = As.WRAPPER_OBJECT, use = Id.NAME)\npublic class ResourceWithAssociationToMyModel {\n@ApiModelProperty(required=true, dataType=\"myModel\")\nprivate MyModel anAssociation =...;\n\n}\n``\n- Themodelssection, in the generated spec file, now has the proper model object in it with the correct type name for MyModel.class. However, the other apis that have return types with an association to MyModel, still don't show the json representation in their respective sections.\n- Thehidden=trueproperty seems to be ignored. The new dummy operation shows up in my api-docs ui. \n- The@ApiModelProperty'sdataTypeproperty seems to be ignored too. Instead of using the type name of the complex object, as defined by thedataTypeproperty, it is using the FQ class name of the POJO. I've also tried giving the FQN and just the class name ofMyModelas thedataType` value.\nUsing 1.3.5 version.\nAm I missing something obvious? I haven't debugged through the introspection code yet, which is my next step.\n. I'll modify the petstore sample as an example and try it out.\n. Sorry, for the delay. I am now working on modifying the petstore sample and verifying this issue. If I can reproduce it, will post it.\n. I've added some sample in the java-jaxrs sample app and issued a pull request:\nhttps://github.com/wordnik/swagger-core/pull/654\n. Not sure if I misunderstood the question, but can this be achieved by allowing @ApiResponse be a meta-annotation?\n//other metas\n@Target(ElementType.METHOD, ElementType.ANNOTATION_TYPE)\n@ApiResponse\nThen we could have user defined annotations like:\n@ApiResponse(code=\"404\", message=\"Resource not found\")\npublic @interface MyResourceNotFound\nThe annotation processor can then check if the @MyResourceNotFound has @ApiResponse in its meta-annotation \"hierarchy\".\n. ",
    "cluttered-code": "I'm having the exact same issue, glad to see a defect is already in place. Cheers!\n. ",
    "JonMR": "Also having this issue.\n. ",
    "helloworld1": "Same issue here\n. ",
    "kschulst": "Dont find any traces of this in the develop branch yet. Is there anything I can help out with?\n. ",
    "tburch": ":+1:\n. ",
    "looztra": "hi, any news regarding this issue please?\n. ok, thanks for the update\nI provided a workaround code (in a Dropwizard/Dropwizard-swagger context) in https://github.com/federecio/dropwizard-swagger/issues/20 based on https://groups.google.com/forum/#!topic/swagger-swaggersocket/LgrU5ecwcoE and https://groups.google.com/forum/#!msg/swagger-swaggersocket/i_X_mDdwIWQ/6Q32s5zyaCwJ\n. ",
    "kendzi": "I'm using swagger core 1.3.5. I will try to check it with new version of swagger.\n. It is working ok in swagger 1.3.6, so no fix is need.\n. After release it seems not working with 1.3.6. I could have locally cached artifact with my fix when I was make test last time :/\n. I added example as you asked. In short lets assume that come company created set of annotation which could be used on method level e.g. \"@VendorFunnyAnnotation\". If it is used this indicates that that method could return some error code and we would like to add that error code to swagger documentation. \n. done\n. @webron @frantuma anything else should I rebase of fix?\n. I re-base it once again. Please merge it.\n. Looks like it was fixed in #1752 #1754\n. ",
    "GuiSim": "We also encountered this issue. This is quite a sneaky error!\n. We also encountered this issue. This is quite a sneaky error!\n. I feel that a @ApiSubResource annotation would resolve the issue.\nIt would be excluded from root apis but would still be scanned by the scanner.\n. @Path(\"/v9/awesome\")\n@Produces(MediaType.APPLICATION_JSON)\n@Api(value = \"v9/awesome\",\n     description = \"My awesome resource\",\n     protocols = \"https\",\n     authorizations = { @Authorization(value = \"oauth2\",\n                                       scopes = { @AuthorizationScope(scope = \"read\",\n                                                                      description = \"Read from the awesome service\") }) })\npublic class AwesomeResourceV9\n{\n...\n}\n. Workaround available, see https://github.com/wordnik/swagger-core/issues/651\n. Here's my ugly workaround:\n```\nimport java.lang.reflect.Method;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.stream.Collectors;\nimport scala.Option;\nimport scala.collection.JavaConversions;\nimport scala.collection.mutable.ListBuffer;\nimport com.wordnik.swagger.annotations.Api;\nimport com.wordnik.swagger.jaxrs.reader.DefaultJaxrsApiReader;\nimport com.wordnik.swagger.model.Authorization;\nimport com.wordnik.swagger.model.AuthorizationScope;\nimport com.wordnik.swagger.model.Operation;\nimport com.wordnik.swagger.model.Parameter;\n// TODO - Remove this when https://github.com/wordnik/swagger-core/issues/650 and https://github.com/wordnik/swagger-core/issues/651 are fixed\npublic class ApiAuthorizationJaxrsReader extends DefaultJaxrsApiReader\n{\n    @Override\n    public scala.Option readMethod(java.lang.reflect.Method method,\n                                              scala.collection.immutable.List parentParams,\n                                              ListBuffer parentMethods)\n    {\n        Option operation = super.readMethod(method, parentParams, parentMethods);\n        if (operation.isDefined()) {\n            Operation oldOperation = operation.get();\n        ArrayList<Authorization> newAuthorizations = new ArrayList<>();\n        newAuthorizations.addAll(JavaConversions.asJavaCollection(oldOperation.authorizations()));\n\n        Api api = method.getDeclaringClass().getAnnotation(Api.class);\n        if (api != null) {\n            // Take annotations.Authorization and convert them to model.Authorizations.\n            List<Authorization> apiAuthorizations = Arrays.stream(api.authorizations())\n                                                          .map(authorization -> new Authorization(authorization.value(),\n                                                                                                  Arrays.stream(authorization.scopes())\n                                                                                                        .map(auth -> new AuthorizationScope(auth.scope(),\n                                                                                                                                            auth.description()))\n                                                                                                        .toArray(size -> new AuthorizationScope[size])))\n                                                          .collect(Collectors.toList());\n            newAuthorizations.addAll(apiAuthorizations);\n\n            Operation operationWithAuthorizations = new Operation(oldOperation.method(),\n                                                                  oldOperation.summary(),\n                                                                  oldOperation.notes(),\n                                                                  oldOperation.responseClass(),\n                                                                  oldOperation.nickname(),\n                                                                  oldOperation.position(),\n                                                                  oldOperation.produces(),\n                                                                  oldOperation.consumes(),\n                                                                  oldOperation.protocols(),\n                                                                  JavaConversions.asScalaIterable(newAuthorizations)\n                                                                                 .toList(),\n                                                                  oldOperation.parameters(),\n                                                                  oldOperation.responseMessages(),\n                                                                  oldOperation.deprecated());\n\n            operation = Option.apply(operationWithAuthorizations);\n        }\n    }\n    return operation;\n}\n\n}\n```\n. Note that unless  https://github.com/wordnik/swagger-core/issues/650 is fixed, the workaround will still be required.\n. I don't think swagger-jersey-jaxrs supports org.glassfish.jersey.media.multipart.FormDataParam\nIf anyone else has the same issue, here's my workaround:\n```\nimport java.lang.annotation.Annotation;\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Set;\nimport org.glassfish.jersey.media.multipart.FormDataParam;\nimport com.wordnik.swagger.jaxrs.ext.AbstractSwaggerExtension;\nimport com.wordnik.swagger.jaxrs.ext.SwaggerExtension;\nimport com.wordnik.swagger.models.parameters.FormParameter;\nimport com.wordnik.swagger.models.parameters.Parameter;\npublic class FormDataParamSwaggerExtension extends AbstractSwaggerExtension implements SwaggerExtension\n{\n    @Override\n    public List extractParameters(Annotation[] annotations,\n                                             Class<?> cls,\n                                             boolean isArray,\n                                             Set> classesToSkip,\n                                             Iterator chain)\n    {\n        List output = new ArrayList<>();\n    if (this.shouldIgnoreClass(cls))\n        return new ArrayList<>();\n\n    for (Annotation annotation : annotations) {\n        if (annotation instanceof FormDataParam) {\n            FormDataParam fd = (FormDataParam) annotation;\n            if (java.io.InputStream.class.equals(cls)) {\n                Parameter param = new FormParameter().type(\"file\").name(fd.value());\n                output.add(param);\n                return output;\n            }\n        }\n    }\n    if (chain.hasNext()) {\n        return chain.next().extractParameters(annotations, cls, isArray, classesToSkip, chain);\n    }\n    return null;\n}\n\n}\n```\nAnd then somewhere before you create your BeanConfig, call \nSwaggerExtensions.getExtensions().add(0, new FormDataParamSwaggerExtension());\n. I'd rather not have to use my own solution ;) but yeah, it works for the time being.\n. I wasn't sure if that's where it belonged.\nI'll submit a pull request for this, thanks for the help @webron \n. @webron for my information, when is the next released scheduled for?\n. ",
    "mapoulin": "This is related to https://github.com/ronmamo/reflections/issues/15\nWe fixed it by forcing Swagger to use Javassist 3.18.2-GA instead of 3.16.1-GA\n. +1\n. ",
    "arsenaid": "Swagger dependencies are deployed centrally. I use Tomcat 7.\n. Makes sense. Thanks a lot.\n. ",
    "MaxPMagee": "I guess we just wish the output were consistent then. Is there a suggested work-around for that? The reason we're using a HashMap in the first place is so that we can allow the user to null out existing values in PUT update requests. (If the incoming data is automatically deserialized into the object type, we can't know which attributes have been submitted with \"null\" value vs which had simply not been submitted.)\n. Hi Tony-\nThe issue with the optional parameters approach is that if there is\nexisting data and the user enters a null value- say, \"password\":null-\nthere's no way to know if the user didn't enter a password, or if they\nwanted to null out the password value once that data is serialized into the\nobject (it will say password: null in either event) and comparing values to\noverwrite becomes impossible.\nWe use a HashMap receiver because it gives us the ability to perceive the\nnull values and overwrite the existing data as appropriate. I've seen\ndiscussion of the pros and cons of each, and for us, the con is really that\nthe Swagger output looks a bit daft.  We'll definitely take advantage of\nthe next spec. Thanks for your response.\n-Max\nOn Wed, Jul 16, 2014 at 5:33 PM, Tony Tam notifications@github.com wrote:\n\n@MaxPMagee https://github.com/MaxPMagee Maps are not going to be easily\nsupported in the short term. The next version of the spec (out in the next\nfew weeks) addresses it gracefully.\nIf you're looking to support PUT requests, an alternative approach is to\nhave a model with all optional parameters.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/619#issuecomment-49236919\n.\n\n\nMax (Magee[]) {\nDeveloper: Singlewire Software\nCell: 281-253-7944\nOffice: 608-661-1166\nMax.Magee@singlewire.com }\n. Ah, I like it. Don't deserialize at all. Nice. That works just as well for\nus. I'm headed out on vacation now, but that sounds like a winner. :-)\nOn Jul 17, 2014 8:21 AM, \"webron\" notifications@github.com wrote:\n\n@MaxPMagee https://github.com/MaxPMagee - just as a hint, we solved it\na bit differently in one of my previous projects. We had a custom message\nreader that got the json, merged it with the existing object (jackson can\ndo that), and then passed it on to our REST call implementation. That way,\nthe client sent the same json object, and in the actual API code, we\nalready had the modified object at hand.\nWe utilized the difference in sending \"key\":null and not sending the key\nat all. The first meant the value needs to be nullified and the second that\nit should remain as is. Hope this helps as a general idea.\nKeep in mind that if you use a map for your API, you're not really\ndocumenting it. You're saying, I accept any set of keys and values, but\nyou're not telling the user what the keys are and what legal values they\ncan have.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/619#issuecomment-49305206\n.\n. Aw crud. Thanks. Will post over there.\n. \n",
    "draghuram": "Sure. \n. I submitted another PR (#623) against develop branch. \n. I did rebase and squash my commits and here is my single commit:\nhttps://github.com/draghuram/swagger-core/commit/038216ddc824bb26e88809747680b72ef2621007\nI don't know how all other commits showed up in the PR. If you do \"git log\nHEAD --not develop\" in \"osgi_develop\" branch, you will see only this\ncommit.\nOn Wed, Jul 16, 2014 at 6:10 PM, Tony Tam notifications@github.com wrote:\n\nHi, could you rebase before the PR? There are so many changes that it's\nvery hard to tell what you've done. I'd like to get this supported.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/pull/623#issuecomment-49234749.\n. I figured out the problem. The PR is created by default against master and\nhence the extra commits. I have created a new PR (#627) against \"develop\"\nwhich now shows a single commit.\n. Thanks for the quick response in merging the PR. I am not familiar with the release policy of Swagger so can you please tell me when this change may make it to maven central?\n. Hi,\n\nI just tried the artifacts from https://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-annotations/1.3.8-SNAPSHOT/ and the JAR files do not have OSGi headers. Same with swagger-core as well. Aren't they supposed to have the headers now that the OSGi changes in the PR are merged? \nThanks,\nRaghu\n. Thanks. Please post here once you are done so that I can give it a try.\n. swagger-annotations is good but swagger-core_2.10 still doesn't have the\nheaders.\nhttps://oss.sonatype.org/content/repositories/snapshots/com/wordnik/swagger-core_2.10/1.3.8-SNAPSHOT/\n. Looks good. Thanks for all the help. \n. ",
    "phraktle": "Hi @raspacorp,\nPlease re-open this ticket. The library should be migrated to pure java \u2013 pulling in an entire Scala compiler etc is clearly excessive...\nThanks,\n  Viktor\n. Hi @webron,\nBased on the dependency graph below, there are still scala dependencies in the released modules. Or am I using some outdated version?\nThanks,\n  Viktor\n+--- com.wordnik:swagger-jersey2-jaxrs_2.11:1.3.12\n|    +--- com.wordnik:swagger-jaxrs_2.11:1.3.12\n|    |    +--- org.scala-lang:scala-library:2.11.1\n|    |    +--- com.wordnik:swagger-core_2.11:1.3.12\n|    |    |    +--- org.slf4j:slf4j-api:1.6.3 -> 1.7.7\n|    |    |    +--- com.fasterxml.jackson.module:jackson-module-scala_2.11:2.4.1\n|    |    |    |    +--- org.scala-lang:scala-library:2.11.1\n|    |    |    |    +--- org.scala-lang:scala-reflect:2.11.1\n|    |    |    |    |    \\--- org.scala-lang:scala-library:2.11.1\n|    |    |    |    +--- com.fasterxml.jackson.core:jackson-core:2.4.1 -> 2.6.1\n|    |    |    |    +--- com.fasterxml.jackson.core:jackson-annotations:2.4.1 -> 2.6.1\n|    |    |    |    +--- com.fasterxml.jackson.core:jackson-databind:2.4.1.1 -> 2.6.1 (*)\n|    |    |    |    +--- com.thoughtworks.paranamer:paranamer:2.6\n|    |    |    |    +--- com.google.code.findbugs:jsr305:2.0.1\n|    |    |    |    \\--- com.google.guava:guava:15.0 -> 18.0\n|    |    |    +--- com.fasterxml.jackson.core:jackson-annotations:2.4.1 -> 2.6.1\n|    |    |    +--- com.fasterxml.jackson.module:jackson-module-jsonSchema:2.4.1\n|    |    |    |    +--- com.fasterxml.jackson.core:jackson-annotations:2.4.0 -> 2.6.1\n|    |    |    |    +--- com.fasterxml.jackson.core:jackson-core:2.4.1 -> 2.6.1\n|    |    |    |    \\--- com.fasterxml.jackson.core:jackson-databind:2.4.1 -> 2.6.1 (*)\n|    |    |    +--- com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.4.1 -> 2.5.4 (*)\n|    |    |    +--- com.wordnik:swagger-annotations:1.3.12\n|    |    |    +--- org.json4s:json4s-ext_2.11:3.2.11\n|    |    |    |    +--- org.scala-lang:scala-library:2.11.0 -> 2.11.1\n|    |    |    |    +--- joda-time:joda-time:2.3\n|    |    |    |    \\--- org.joda:joda-convert:1.6\n|    |    |    +--- org.json4s:json4s-native_2.11:3.2.11\n|    |    |    |    +--- org.scala-lang:scala-library:2.11.0 -> 2.11.1\n|    |    |    |    \\--- org.json4s:json4s-core_2.11:3.2.11\n|    |    |    |         +--- org.scala-lang:scala-library:2.11.0 -> 2.11.1\n|    |    |    |         +--- org.json4s:json4s-ast_2.11:3.2.11\n|    |    |    |         |    \\--- org.scala-lang:scala-library:2.11.0 -> 2.11.1\n|    |    |    |         +--- com.thoughtworks.paranamer:paranamer:2.6\n|    |    |    |         \\--- org.scala-lang:scalap:2.11.0\n|    |    |    |              \\--- org.scala-lang:scala-compiler:2.11.0\n|    |    |    |                   +--- org.scala-lang:scala-library:2.11.0 -> 2.11.1\n|    |    |    |                   +--- org.scala-lang:scala-reflect:2.11.0 -> 2.11.1 (*)\n|    |    |    |                   +--- org.scala-lang.modules:scala-xml_2.11:1.0.1\n|    |    |    |                   |    \\--- org.scala-lang:scala-library:2.11.0 -> 2.11.1\n|    |    |    |                   \\--- org.scala-lang.modules:scala-parser-combinators_2.11:1.0.1\n|    |    |    |                        \\--- org.scala-lang:scala-library:2.11.0 -> 2.11.1\n|    |    |    \\--- org.json4s:json4s-jackson_2.11:3.2.11\n|    |    |         +--- org.scala-lang:scala-library:2.11.0 -> 2.11.1\n|    |    |         +--- org.json4s:json4s-core_2.11:3.2.11 (*)\n|    |    |         \\--- com.fasterxml.jackson.core:jackson-databind:2.3.1 -> 2.6.1 (*)\n. Thanks @webron! I have missed that update due to the artifact renaming.\n. ",
    "krispypen": ":+1: \n. ",
    "alexmasselot": "thanks!\n. ",
    "bakie": "@fehguy @bkowalik I tried the 1.3.8-SNAPSHOT and that one works for me. The problem with the SimpleResult is fixed in that one.\n. ",
    "abstratt": "The docs state 1.6 and higher, so I suggest at least changing that for now:\nhttps://github.com/wordnik/swagger-core/blob/master/README.md\n. The docs state 1.6 and higher, so I suggest at least changing that for now:\nhttps://github.com/wordnik/swagger-core/blob/master/README.md\n. ",
    "davidgev": "Hi Guys, is this fixed in the newer versions of Swagger?\n. ",
    "osbornk": "What is your preferred method for wiki changes? Just add a page to your wiki? Something else?\n. Of course, looks like the code that worked against master had some conflicts against develop. I will clean these up and do some more documentation.\n. I have not forgotten about this issue. I do plan on doing the documentation as well. However, before I put in that effort, would this be something that would be included in Swagger? I have not heard any feedback from Tony.\n. Will cleanup this pull request and issue new pull requests.\n. Sure. Here you go.\n```\n@ApiModel(value = \"Task\")\nclass Task {\n  @BeanProperty\n  @(ApiModelProperty @field)(position = 1, required = false)\n  var id: Option[UUID] = None\n@BeanProperty\n  @(ApiModelProperty @field)(position = 2, required = true)\n  var name: String = \"\"\n}\n```\n@Api(value = \"/tasks\", description = \"Operations on Tasks\")\nclass TaskController extends BaseApiController {\n  @ApiOperation(nickname = \"getTask\", value =\"getTask method\", httpMethod = \"GET\", response = classOf[Task])\n  @ApiResponses(Array(\n    new ApiResponse(code = 200, message = \"Task found\"),\n    new ApiResponse(code = 400, message = \"Invalid input\"),\n    new ApiResponse(code = 404, message = \"Task not found\")\n  ))\n  def getTask(@ApiParam(value = \"Task ID\") @PathParam(\"id\")id: UUID) = Action { implicit request =>\n    Task task = new Task()\n    task.setId(Some(UUID.randomUUID))\n    task.setName(\"task\")\n    JsonResponse(task)\n    }\n  }\n}\n```\nobject Global extends GlobalSettings {\n  override def beforeStart(app:Application) = {\n    setupSwaggerConverters\n  }\ndef setupSwaggerConverters = {\n    class UUIDConverter extends SwaggerSchemaConverter {\n      override def typeMap = Map(\"uuid\" -> \"string\")\n  override def ignoredClasses: Set[String] = Set(\"java.util.UUID\")\n}\n\nModelConverters.addConverter(new UUIDConverter, true)\n  }\n}\n```\nThis produces the following JSON. Notice that the Task.id is expressed as a string, but the id REST parameter refers to the UUID parameter.\n{\n  \"apiVersion\": \"1.0-b1\",\n  \"swaggerVersion\": \"1.2\",\n  \"basePath\": \"http://localhost\",\n  \"resourcePath\": \"/vDefault/tasks\",\n  \"produces\": [\n    \"application/json\"\n  ],\n  \"apis\": [\n        {\n          \"method\": \"GET\",\n          \"summary\": \"getTask method\",\n          \"notes\": \"\",\n          \"type\": \"Task\",\n          \"nickname\": \"getTask\",\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"description\": \"Task ID\",\n              \"required\": true,\n              \"type\": \"UUID\",\n              \"paramType\": \"path\",\n              \"allowMultiple\": false\n            }\n          ],\n          \"responseMessages\": [\n            {\n              \"code\": 200,\n              \"message\": \"Task found\"\n            },\n            {\n              \"code\": 400,\n              \"message\": \"Invalid input\"\n            },\n            {\n              \"code\": 404,\n              \"message\": \"Task not found\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"models\": {\n    \"UUID\": {\n      \"id\": \"UUID\",\n      \"properties\": {\n        \"leastSignificantBits\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\"\n        },\n        \"mostSignificantBits\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\"\n        }\n      }\n    },\n    \"Task\": {\n      \"id\": \"Task\",\n      \"required\": [\n        \"name\"\n      ],\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}\n. Yes. This is simply my own work. It is completed, but I haven't had a chance to resubmit the pull request with these changes. I will try to get to finishing this up early this week.\n. I didn't realize that I added it to swagger-spec. It definitely doesn't belong there and should be in swagger-core. I will fix that as well.\n. The Wiki page has been moved to swagger-core. The pull requests are almost ready as well. I just need to verify they work against the current master before I submit them.\nhttps://github.com/wordnik/swagger-core/wiki/API-Filtering\n. ",
    "Sebruck": "+1\n. ",
    "jayzaw": "Ran into the same issue, GuiSim may be right, but I leave that to you guys. I think it shouldnt be necessary to annotate SubResources as such\n. I had another issue related to this one I think, so I post it into here: \nMain resource A, Sub resource B\nA has B linked into it\nPath of A is /site\nPath of B is /site/{siteId}/driver\nSub resource B has a resource C linked to it, accessible through:\n/site/{siteId}/driver/driverId/car\nA POST operation \"O\" in C has the path:\n/site/{siteId}/driver/driverId/car/\nThe problem here is that swagger wont recognize that I have 2 path parameter variables in there which need to be specified in order to reach the operation. It just \"notices\" one of them (driverId). \nAs a workaround, I had to specify the path parameter siteId in the \"O\" operation in C with ApiImplicitParams. This then worked. \n. Oh I forgot to note: Jersey 2.10, all appropriate exclusions made in swagger-jersey module, and we also tried with 1.3.9-snappshot of swagger - same results. \n. Thanks. However, I disagree regarding a) : client code generation tools find it very handy to be able to clone used types of the API and their relationships to each other. Be it for input (parameters), output (responses) or exceptions. It is an extremely useful feature to be able to identify that the same parameter type is used in several methods. And to thus correctly build up a class/type structure on the client side in a completely automated way. \n. BTW: the swagger for spring mvc does \"a)\" correctly. \n. here we go, for case a): \nResource Driver, Method experimental:\npublic Response experimental(@PathParam(\"siteId\") SiteId siteId, @ApiParam(value = \"Customization command for driver creation\", required = true) @BeanParam DriverCustomizationCommand command)\nin DriverCustomizationCommand, the fields are annotated with @FormParam: \nresult: swagger wont mention the existence of a DriverCustomizationCommand in the api-docs, models section, wherever. It isnt exposed. However, I verified in a springmvc project that it does. \n. webron: it is aware of and exposes the command. I can of course invest a lot of time into exposing code and output - but I try to make it undestandable without having to, because it costs lots and lots of time. Is it clear now ?\n. webron: I am afraid there is no time to show the output (as I would have to mask it as well) - but my description should be very hintful anyhow. If I would have to show code and/or output for everything I report I would as well be able to patch swagger myself in the end. I know this sounds kinda lazy, but the cost of doing this outweighs the benefits for many companies out there who have a strict data protection policy.\n. Just successfully patched and tested it. How can I merge ?\n. Hey Tony,\nI have never done a PR before. I had cloned the repo to obtain a SNAPSHOT 1.3.9 end of August and want to merge that one file change now. Can you guide me in the steps on how to do this ?\nThanks in advance,\nJay\n\nFrom: Tony Tam [notifications@github.com]\nSent: Friday, September 26, 2014 9:31 PM\nTo: wordnik/swagger-core\nCc: Zawar, Jay(AWF)\nSubject: Re: [swagger-core] Faulty or incomplete handling of Jersey 2 @BeanParam annotation (#672)\nHi, there are a lot of changed files in this PR. Can you rebase and submit it?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/wordnik/swagger-core/issues/672#issuecomment-57009411.\n. ",
    "c100k": "I'm not a Scala developer so I'm not sure for the syntax. Here is how I did it in a custom controller in Java :\njava\npublic static Action<AnyContent> resource(String path) {\n        return ApiHelpController.getResource(\"/\" + path);\n}\n. ",
    "guy4286": "Sorry for the delayed response.  I was away on vacation for several days.\nWe do not use the swagger annotations - we custom build the JSON messages that swagger UI uses to render the parameters.  Perhaps that means this bug should be filed with swagger-ui instead of swagger-core?\nHere is the JSON we are giving to Swagger to render those parameters:\n\n        {\n            \"path\" : \"/v1/files/upload\",\n            \"operations\" : [\n                {\n                    \"method\" : \"POST\",\n                    \"summary\" : \"Uploads a file at the specified location.\",\n                    \"notes\" : \"Uploads a file at the specified location.\",\n                    \"type\" : \"fileUploadResponse\",\n                    \"nickname\" : \"filesUpload\",\n                    \"produces\" : [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"consumes\" : [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\" : [\n                        {\n                            \"name\" : \"file\",\n                            \"description\" : \"File to upload\",\n                            \"required\" : true,\n                            \"type\" : \"file\",\n                            \"paramType\" : \"body\",\n                            \"allowMultiple\" : false\n                        },\n                        {\n                            \"name\" : \"data\",\n                            \"description\" : \"Definition of fileUploadRequest. Use Content-Type to drive message format (application/json or application/xml) of this body part.\",\n                            \"required\" : true,\n                            \"type\" : \"fileUploadRequest\",\n                            \"paramType\" : \"form\",\n                            \"allowMultiple\" : false\n                        }\n                    ],\n                    \"responseMessages\" : [\n                        {\n                            \"code\" : 200,\n                            \"message\" : \"File uploaded successfuly.\",\n                            \"responseModel\" : \"\"\n                        },\n                        {\n                            \"code\" : 400,\n                            \"message\" : \"The message payload is invalid.\",\n                            \"responseModel\" : \"\"\n                        },\n                        {\n                            \"code\" : 401,\n                            \"message\" : \"You are not authorized to use this API. Please provide a valid user name and password before trying to use an API.\",\n                            \"responseModel\" : \"\"\n                        },\n                        {\n                            \"code\" : 500,\n                            \"message\" : \"Internal Server Error\",\n                            \"responseModel\" : \"\"\n                        }\n                    ],\n                    \"deprecated\" : \"\"\n                }\n            ]\n        }\n\nNotice the \"file\" and \"data\" parameters which match the screenshot.\n. That hasn't quite fixed the problem yet, so I'm still wondering whether there is a bug.\nI've changed our JSON generation so that it matches what you described:\n\n{\n            \"path\" : \"/v1/files/upload\",\n            \"operations\" : [\n                {\n                    \"method\" : \"POST\",\n                    \"summary\" : \"Uploads a file at the specified location.\",\n                    \"notes\" : \"Uploads a file at the specified location.\",\n                    \"type\" : \"fileUploadResponse\",\n                    \"nickname\" : \"filesUpload\",\n                    \"produces\" : [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"consumes\" : [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\" : [\n                        {\n                            \"name\" : \"file\",\n                            \"description\" : \"File to upload\",\n                            \"required\" : true,\n                            \"type\" : \"file\",\n                            \"paramType\" : \"form\",\n                            \"allowMultiple\" : false\n                        },\n                        {\n                            \"name\" : \"data\",\n                            \"description\" : \"Definition of fileUploadRequest. Use Content-Type to drive message format (application/json or application/xml) of this body part.\",\n                            \"required\" : true,\n                            \"type\" : \"fileUploadRequest\",\n                            \"paramType\" : \"body\",\n                            \"allowMultiple\" : false\n                        }\n                    ],\n                    \"responseMessages\" : [\n                        {\n                            \"code\" : 200,\n                            \"message\" : \"File uploaded successfuly.\",\n                            \"responseModel\" : \"\"\n                        },\n                        {\n                            \"code\" : 400,\n                            \"message\" : \"The message payload is invalid.\",\n                            \"responseModel\" : \"\"\n                        },\n                        {\n                            \"code\" : 401,\n                            \"message\" : \"You are not authorized to use this API. Please provide a valid user name and password before trying to use an API.\",\n                            \"responseModel\" : \"\"\n                        },\n                        {\n                            \"code\" : 500,\n                            \"message\" : \"Internal Server Error\",\n                            \"responseModel\" : \"\"\n                        }\n                    ],\n                    \"deprecated\" : \"\"\n                }\n            ]\n        }\n\nHowever, when I click \"Try It Out\" Swagger sends a message which seems invalid:\n\n------WebKitFormBoundaryOK78BBaHlU0capbP\nContent-Disposition: form-data; name=\"file\"\nC:\\fakepath\\fetch.xml\n------WebKitFormBoundaryOK78BBaHlU0capbP\nContent-Disposition: form-data; name=\"file\"; filename=\"fetch.xml\"\nContent-Type: text/xml\n------WebKitFormBoundaryOK78BBaHlU0capbP--\n\nThe JSON message we are trying to send as part of this message is missing.\n. Yes, I had tried that as webron had also suggested.  The problem is that once I do that, I can no longer select the content type of the \"data\" parameter.  It gives me only the \"multipart/form-data\" option.\nSee the screenshot:\n\nThen when the request gets to the server, it wouldn't know how to process the data parameter (which could be either JSON or XML).  It doesn't look like Swagger is sending the data parameter payload anyway - using the multipart/form-data consumes, this is the message that swagger sends (notice that there is no JSON sent by Swagger even though I specified it in the UI):\n\n------WebKitFormBoundaryVm5la0DOFwOEEesi\nContent-Disposition: form-data; name=\"file\"\nC:\\fakepath\\readme.txt\n------WebKitFormBoundaryVm5la0DOFwOEEesi\nContent-Disposition: form-data; name=\"file\"; filename=\"readme.txt\"\nContent-Type: text/plain\n------WebKitFormBoundaryVm5la0DOFwOEEesi--\n\nJust so you can see what I did, here is the JSON that Swagger is generating the UI from with the consumes value you had recommended:\n\n        {\n            \"path\" : \"/v1/files/upload\",\n            \"operations\" : [\n                {\n                    \"method\" : \"POST\",\n                    \"summary\" : \"Uploads a file at the specified location.\",\n                    \"notes\" : \"Uploads a file at the specified location.\",\n                    \"type\" : \"fileUploadResponse\",\n                    \"nickname\" : \"filesUpload\",\n                    \"produces\" : [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"consumes\" : [\n                        \"multipart/form-data\"\n                    ],\n                    \"parameters\" : [\n                        {\n                            \"name\" : \"file\",\n                            \"description\" : \"File to upload\",\n                            \"required\" : true,\n                            \"type\" : \"file\",\n                            \"paramType\" : \"form\",\n                            \"allowMultiple\" : false\n                        },\n                        {\n                            \"name\" : \"data\",\n                            \"description\" : \"Definition of fileUploadRequest. Use Content-Type to drive message format (application/json or application/xml) of this body part.\",\n                            \"required\" : true,\n                            \"type\" : \"fileUploadRequest\",\n                            \"paramType\" : \"body\",\n                            \"allowMultiple\" : false\n                        }\n                    ],\n                    \"responseMessages\" : [\n                        {\n                            \"code\" : 200,\n                            \"message\" : \"File uploaded successfuly.\",\n                            \"responseModel\" : \"\"\n                        },\n                        {\n                            \"code\" : 400,\n                            \"message\" : \"The message payload is invalid.\",\n                            \"responseModel\" : \"\"\n                        },\n                        {\n                            \"code\" : 401,\n                            \"message\" : \"You are not authorized to use this API. Please provide a valid user name and password before trying to use an API.\",\n                            \"responseModel\" : \"\"\n                        },\n                        {\n                            \"code\" : 500,\n                            \"message\" : \"Internal Server Error\",\n                            \"responseModel\" : \"\"\n                        }\n                    ],\n                    \"deprecated\" : \"\"\n                }\n            ]\n        }\n\nSo that's why I had changed the consumes to be application/json, application/xml, then at least I get a UI which looks like I expect where I can select the correct content type for the data parameter:\n\nSo, it still seems like Swagger isn't behaving as expected here.\n. ",
    "thorntech": "I totally agree with @guy4286 that you should be able to specify a content type on the parts other than the file. This is critical for Java applications that need the content type of the part in order to know how to deserialize the json or xml into a Java object. \nFor what its worth, I was able to get this working by modifying swagger-ui,js to use a Blob as the FormData. I had to add a \"contentType\" field to the Parameter object. I know this violates the spec, but this worked for my project. \nswagger-ui.js line 1797:\nif (param.paramType === 'form') {\n      if (param.type.toLowerCase() !== 'file' && map[param.name] !== void 0) {\n        if(typeof param.contentType !== 'undefined') {\n            bodyParam.append(param.name, new Blob([map[param.name]], { type: param.contentType}));\n        }\n        else {\n            bodyParam.append(param.name, map[param.name]);\n        }\n      }\n    }\nIn the swagger doc, I can define the file and the json object parameters like so: \n{\n         \"name\": \"story\",\n         \"description\": \"The story object in json format\",\n         \"required\": true,\n         \"paramType\": \"form\",\n         \"type\": \"Story\",\n         \"contentType\": \"application/json\"\n        },\n        {\n         \"name\": \"file\",\n         \"description\": \"The base64 encoded multipart file attachment. \",            \n         \"required\": true,\n         \"paramType\": \"form\",\n         \"type\": \"File\"\n        }\n. I totally agree with @guy4286 that you should be able to specify a content type on the parts other than the file. This is critical for Java applications that need the content type of the part in order to know how to deserialize the json or xml into a Java object. \nFor what its worth, I was able to get this working by modifying swagger-ui,js to use a Blob as the FormData. I had to add a \"contentType\" field to the Parameter object. I know this violates the spec, but this worked for my project. \nswagger-ui.js line 1797:\nif (param.paramType === 'form') {\n      if (param.type.toLowerCase() !== 'file' && map[param.name] !== void 0) {\n        if(typeof param.contentType !== 'undefined') {\n            bodyParam.append(param.name, new Blob([map[param.name]], { type: param.contentType}));\n        }\n        else {\n            bodyParam.append(param.name, map[param.name]);\n        }\n      }\n    }\nIn the swagger doc, I can define the file and the json object parameters like so: \n{\n         \"name\": \"story\",\n         \"description\": \"The story object in json format\",\n         \"required\": true,\n         \"paramType\": \"form\",\n         \"type\": \"Story\",\n         \"contentType\": \"application/json\"\n        },\n        {\n         \"name\": \"file\",\n         \"description\": \"The base64 encoded multipart file attachment. \",            \n         \"required\": true,\n         \"paramType\": \"form\",\n         \"type\": \"File\"\n        }\n. A new issue has been created here - https://github.com/swagger-api/swagger-spec/issues/222\n. A new issue has been created here - https://github.com/swagger-api/swagger-spec/issues/222\n. ",
    "rmmeans": "Awesome work!\n. ",
    "russwyte": "I would say at least that the build could be simplified by using build.sbt (with cross compile support) and the omitting the custom sbt script. Also the Play and Scala versions should be updated.\nIt would also be good to make this available as a pre-built artifact as the versions Play/Scala in master are no longer main stream.\n. ",
    "Helmsdown": "Just discovered this. I'm not using XML annotations so adding them is super ugly for me. \n. Submitted pull request #811 as a proposed fix for this. Please advise.\n. this build error is also occurring on the develop_2.0 branch. can you confirm I didn't break it?\n. FYI: I am working off the develop_2.0 branch.\n. I haven't re-synced my fork yet. Waiting on my other pull requests to be merged in before I resync. \n. Swagger Codegen pull requests (didn't mean to imply that they were swagger-core pull requests, I forgot this issue was for swagger-core)\nhttps://github.com/swagger-api/swagger-codegen/pull/417\nhttps://github.com/swagger-api/swagger-codegen/pull/374\nhttps://github.com/swagger-api/swagger-codegen/pull/366\nhttps://github.com/swagger-api/swagger-codegen/pull/365\nI can change my maven target to something more up to date than \"com.wordnik:swagger-jaxrs:1.5.0-M1\"\nto try any updated version of BeanConfig and ApiListingResource.\nJust let me know what version to up date to.\n. Sorry I was probably confusing. I am not using a fork of swagger-core. I am using \"com.wordnik:swagger-jaxrs:1.5.0-M1\". What maven target should I use to try out the new BeanConfig/ApiListingResource functionality.\n. 1.5.3-M1-SNAPSHOT solves the problem. I think we can consider this issue closed.\n. @webron I think it makes perfect sense. I ended up including a proposed change into pull request #1271.\nTwoBirdsOneStone :-)\n. @webron The subresource would want an @Api annotation so you can tag it and have it show up in swagger-ui in its own expander.\n. I currently have that use case\nOn Thursday, January 21, 2016, Ron notifications@github.com wrote:\n\n@Helmsdown https://github.com/Helmsdown - the amount of dust I needed\nto clean in order to remember what this was even about is insane, and I\ncan't still can see clearly. This came from a specific use case, and\nperhaps that's the key. I believe this relates to sub-resources that are\nnot annotated with @Path at the class level.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1106#issuecomment-173776156\n.\n\n\nSent from Gmail Mobile\n. We have a discussion going in #1614 about how to solve this (if at all).\n. oh\n. really\n. :-)\n. @wing328  The test failure is due to the coverage expectations not being met. These are the first tests for swagger-models module. I thought I had the coverage expectations to configured to allow the current state of coverage to pass (but its still tripping up on the number of uncovered classes). I'll tweak with the coverage expectations for swagger-models module to get it to pass.\n@olensmar I absolutely agree. This will require creating some new RefXXX classes and appropriate deserializers (nothing too hard). I would like to suggest a different name for this section, https://github.com/swagger-api/swagger-spec/blob/master/guidelines/REUSE.md#operations. This section is really referring to paths, not operations. \nThis is the example given, I would think of this as \"ref path\"\njson\n{\n  \"paths\": { //this parent object is not explicitly stated, but I assuming that is an oversight\n    \"/health\": {\n      \"$ref\": \"http://localhost:8000/health.json#/health\"\n    }\n  }\n}\nThis is my opinion of what a \"ref operation\" would be\njson\n{\n  \"paths\": {\n    \"/health\": {\n      \"get\": {\n        \"$ref\": \"http://my.company.com/operations.json#/get\"\n      }\n    }\n  }\n}\nI think both are valid use cases and would like to implement both. If this is OK with you, I'll submit a change to the guidelines page (and perhaps the swagger 2.0 spec wiki page itself) when we get swagger-core changes merged in.\n. @olensmar I have some preliminary changes to support path/operation and response references on another branch. These additional changes are more intrusive. What do you think merging this pull request first, and then reviewing a second pull request?\n. Thanks @fehguy !!!!\n. Absolutely. Shouldn't take me too long.\n. Yes indeed.\n. @webron The tests have been updated to Java/TestNG. Let me know if there are additional changes you'd like.\n. Sounds good.\n. @fehguy Did as we we discussed. \n1. RefPath extends Path (until we can do a major release and make Path an interface)\n2. RefResponse extends Response (*)\n3. Added vendor extensions to the following swagger-models classes\n   - AbstractModel.java\n   - AbstractProperty.java\n   - Response.java\n   - SecurityRequirement.java\n   - ExternalDocs.java\n   - SecuritySchemeDefinition.java\nPlease note I had to do some \"tomfoolery\" in Json.java to support correct deserialization of RefPath/Path and RefResponse/Response. If you know of a better way to achieve the same result I would be very interested. Also, while I was messing around in Json.java I decided to do some light refactoring to central ize code that was duplicated between Json.java and Yaml.java.\nAs always, feedback on my code is greatly appreciated.\n. @webron Want me to refactor to satisfy #1258 and #1261? Are breaking changes ok? (since it apparently doesnt match the spec)\n. @fehguy Let me know what, if anything, you want me to do anything additional regarding #1258 and #1261...I have the time.\n.  So #1261 sounds like it just needs a logic change. We need to add to this list of scopes...not override it with each successive call to addSecurity()...right?\n1258 sounds like it is a break change and we will have to wait till the next major version.\n1261 doesnt need to go in this pull request, but I can fix it if you like.\n. You know on second read...I am confused by #1261...what exactly is the problem. \n. After re-reading #1258 again and looking at SecurityRequirement.java, I understand it now. \nThis is what is allowed right now in Java\njava\n        Swagger swagger = new Swagger();\n        swagger.addSecurityDefinition(\n                new SecurityRequirement(\"oauth\")\n                        .scope(\"scope1\")\n                        .scope(\"scope2\"));\n        swagger.addSecurityDefinition(\n                new SecurityRequirement(\"api_key\"));\nand it gets serialized as\njson\n{\n  \"swagger\" : \"2.0\",\n  \"securityRequirement\" : [ {\n    \"scopes\" : [ \"scope1\", \"scope2\" ]\n  }, { } ]\n}\nThere are several issues at play:\n1. The spec says this element should be called \"security\" not \"securityRequirement\" (can't fix the getter and setters without a breaking change)\n2. The name of the security requirement is not serialized due to a JsonIgnore annotation in SecurityRequirement.java\n3. Even if the name of the requirement was serialized it wouldn't match the spec due to the the fact that the spec documents the format to be {\"api_key\": [\"scope1\", \"scope2\"]} not {\"name\": \"api_key\", \"scopes\": [\"scope1\", \"scope2\"]}\n4. The java function to add a securityRequirement to the root swagger object is called addSecurityDefintion() instead of addSecurityRequirement\nI have some proposed changes to remedy most of these with non breaking changes (and hopefully get us set up for cleaning this stuff up in the next major version). Will post the diff in a moment.\n. Ok I think I have things, with respect to #1258, as good as they are going to get without a breaking change. Its not completely compliant with the spec (i.e. The list of security requirements is going to get serialized/deserialized as \"securityRequirements\" but the spec says it should be \"security\"). \nI deprecated all the methods that are wrong, but we can't delete because it would be breaking. \nWe now should be able to model what is described in the spec. However, I did not change any of the code in swagger-core that actually acts on the Authorization annotations (e.g. Reader.java).\n@fehguy & @webron take a look at let me know if you want anything additional.\n. Danke!\nOn Wednesday, August 5, 2015, Tony Tam notifications@github.com wrote:\n\nMerged #1271 https://github.com/swagger-api/swagger-core/pull/1271.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/pull/1271#event-374906898.\n. @webron -Try taking the content of the unit test I wrote and running it in a main(), do you get YAML?. I totally missed the jackson-guava dependency...will fix that momentarily.\n. Ah so this is interesting.\n\nWith 2.4.2 of the Jackson YAML library...\njava\n//this produces yaml\nYaml.mapper().writeValueAsString(foo);\n//this produces json\nYaml.pretty().writeValueAsString(foo);\nWith verison 2.4.5 of the library...\njava\n//this produces yaml\nYaml.mapper().writeValueAsString(foo);\n//this produces yaml as well now\nYaml.pretty().writeValueAsString(foo);\nI've gotten in the habit of calling pretty() when I am marshaling something that a human is going to look at. So there is some bug related to the yaml library when you use the DefaultPrettyPrinter class in conjunction with the YAMLFactory, but you can get around it by just not using the pretty() function in Yaml.java. WDYT, upgrade or keep it as is?\n. @webron Done.\n. @fehguy / @webron  I would like to start work this week that requires this change. Do you guys have bandwidth to take a look at it?\n. @fehguy, I just add some additional test cases to GenericRefTest to cover this.\nThis change should not affect anything negatively.\n. I will try first thing tomorrow and confirm this fixes the problem. If so I\nwill close issue and PR.\nOn Wednesday, January 20, 2016, Tony Tam notifications@github.com wrote:\n\nI believe we tackled this before, namely in this sample:\nhttps://github.com/swagger-api/swagger-samples/tree/master/java/java-jaxrs-subresource\nThe solution--albeit hacky--is to annotate the subresource and set\nhidden=true as shown here\nhttps://github.com/swagger-api/swagger-samples/blob/master/java/java-jaxrs-subresource/src/main/java/io/swagger/sample/resource/OwnerResource.java#L25\n.\nNow, this sample uses web.xml and not BeanConfig. I don't think that would\ncause a difference though.\nAm I missing something?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1614#issuecomment-173449750\n.\n\n\nSent from Gmail Mobile\n. @fehguy I tried the hidden flag on the subresources and it worked as you said. However, is there any reason not to make the code change though? Having to remember to put the hidden flag on sub-resources is a small perpetual annoyance (#firstworldproblems). \n. So it does!\n. Another way of \"automatically\" hiding sub resources is to have the Scanner ignore them, no? \n. I think you kind of lost me there...\nAre my assumptions below correct?\n1. Root resources should always be annotated with @Path at the class level\n2. Purely Child resources should never be annotated with @Path (they are deriving their \"parent path\" behavior from their parent).\n3. If a resource is both a root resource (meaning the class has a class level @Path) AND another root resource exposes it as a child resource then it is accessible by two URLs\n4. If a given resource has an @Api annotation where hidden = true, that resource (and any subresources that it exposes) should not show up in the swagger.json (this should hold true regardless of whether the resources is a root or a not)\nCurrently BeanConfig passes both root resources and child resources to Reader. Since Reader has logic to detect sub-resources and process them appropriately it seems like BeanConfig should only be passing root resources to Reader.\nWDYT?\n. @webron and @fehguy : This involves the same code as #1620 / #1663. Given your copious amounts of free time; I'd like your thoughts on this issue so that I might get a fix for this into #1663.\nThanks!\n. In discussion with @fehguy removing ServletConfig from the JaxrsScanner.classesFromContext() signature would be breaking.\nThe next best solution was then to write a JAX-RS provider for ServletConfig that allows Jersey to inject a dummy ServletConfig without blowing up. \nThis class does such a thing.\nIf anyone else gets bit by this issue please +1 this issue so that we might expose this code in accessible format. \n. Do you still want to support the /swagger endpoint?\nOn Monday, February 8, 2016, Tony Tam notifications@github.com wrote:\n\n@Helmsdown https://github.com/Helmsdown I think that works. Let's set\nthe path-level path and then the routing should take care of it. If you can\nsend a PR that'd be great.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1620#issuecomment-181717848\n.\n\n\nSent from Gmail Mobile\n. So to reiterate:\n1) we want to continue supporting /swagger endpoint that hinges off the Accepts header to return either json or yaml. This functionality should be moved to a new resource class with a class level Path annotation. \n2) The current ApiListingResource will have a class level Path annotation that is \"/swagger.{type:json|yaml}\"\n3) Anyone who depends on the /swagger endpoints will need to make sure that their are either scanning io.swagger.listing package or specifically registering the new /swagger Resource class. \n. Any suggestions for the /swagger listing class name? AcceptHeaderApiListingResource?\n. Ok @webron and @fehguy take a look at #1663 and let me know what you think.\n. @fehguy I think it will. When a snapshot is built and deployed let me know so I can give it a spin.\n. Well if you are offering. :-)\n. @fehguy Tests added\n. +1 for this PR\n. @webron This is how it renders...\n\n. @webron @fehguy if it means anything....I vouch for this change it is almost identical to the change I made to support ZonedDateTime. Unfortunately, you can't add tests because the project compiles for java 6 (assuming that has not changed).\nhttps://github.com/swagger-api/swagger-core/pull/1715\n. +1 for this PR. We just ran into this with a wonderful NoSuchMethodError. Auto-organize imports strikes again! Just reverted that particular change.\n. ",
    "tlovett-rmn": "I'm seeing this same bug. I'm using swagger-jersey2-jaxrs_2.11\njava\n@JsonFilter(SpringRoleBeanPropertyFilter.NAME)\n@ApiModel(value = \"Name\", description = \"This is the description of the Name object\")\npublic class LongName {\n    ...\n}\nOutput:\njson\n\"LongName\": {\n    \"id\": \"LongName\",\n    \"description\": \"This is the description of the Name object\",\n}\n. Thanks! That was fast!\n. We don't have a setter for the field, nor does the superclass. I tried adding a setter with @JsonIgnore, and it didn't change anything.\n. Here are the actual dependencies Maven is pulling in, in case that's useful:\nswagger-annotations-1.3.10.jar\nswagger-core_2.11-1.3.10.jar\nswagger-jaxrs_2.11-1.3.10.jar\nswagger-jersey2-jaxrs_2.11-1.3.10.jar\njackson-annotations-2.4.3.jar\njackson-core-2.4.3.jar\njackson-databind-2.4.3.jar\njackson-jaxrs-base-2.4.3.jar\njackson-jaxrs-json-provider-2.4.3.jar\njackson-module-jaxb-annotations-2.4.3.jar\njackson-module-jsonSchema-2.4.1.jar\njackson-module-scala_2.11-2.4.1.jar\n. I tried that too, and it didn't work. The problem must be due to the way that method is inherited (which is actually more complex than the way I represented it in my obfuscated code). Both @JsonIgnore and hidden=true works just fine for other getters in the same class.\n. Ok I think I've got it down to a valid minimal test case.\nIn my API endpoint:\njava\n    @GET @Path(\"/foobar\")\n    @ApiOperation(value = \"Get new FooBar\", response = FooBar.class)\n    public FooBar getFooBar() {\n        return new FooBar();\n    }\nIn FooBar.java:\njava\npackage com.rmn.thread.publisher.model;\nimport com.fasterxml.jackson.annotation.JsonIgnore;\nimport com.rmn.thread.core.model.Bar;\npublic class FooBar extends Bar {\n    @Override\n    @JsonIgnore\n    @ApiModelProperty(hidden = true)\n    public String getIgnoredField() {\n        return super.getIgnoredField();\n    }\n}\nIn Bar.java:\njava\npackage com.rmn.thread.core.model;\npublic class Bar {\n    public String getIgnoredField() {\n        return \"Ignore me!\";\n    }\n    public String getNotIgnoredField() {\n        return \"Don't ignore me!\";\n    }\n}\nIn spec output:\njson\n{\n  \"models\": {\n    \"FooBar\": {\n      \"id\": \"FooBar\",\n      \"properties\": {\n        \"ignoredField\": {\n          \"type\": \"string\"\n        },\n        \"notIgnoredField\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}\nIn API output for GET /foobar:\njson\n{\n  \"notIgnoredField\": \"Don't ignore me!\"\n}\n. ",
    "dmascord": "We are not using spring MVC, as far as I know, what other annotation should be used for the post content?\nOn 11 August 2014 6:41:45 pm AEST, webron notifications@github.com wrote:\n\nLooking at the code posted at the issue in swagger-ui, you're using\n@RequestBody. Isn't that a Spring-MVC annotation?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/wordnik/swagger-core/issues/646#issuecomment-51754620\n. We use spring (non MVC) with jersey 2, with jaxrs using Jackson 2 (rather than moxy) for object to json/xml\n\nOn 11 August 2014 7:28:17 pm AEST, webron notifications@github.com wrote:\n\nWhich REST framework do you use then? As far as I know,@RequestBody\nis a Spring-MVC annotation.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/wordnik/swagger-core/issues/646#issuecomment-51758540\n. Removing still causes the same issue, see with no annotations (v1), and with annotations (v2)\n\nJava v1:\nWTR_DamagedBagsCreateRQ_schema request) {\nJSON v1:\n{\n                        \"allowMultiple\": false,\n                        \"name\": \"body\",\n                        \"paramType\": \"body\",\n                        \"required\": false,\n                        \"type\": \"WTR_DamagedBagsCreateRQ_schema\"\n                    }\nJava v2:\n@ApiParam(value = \"WTR_DamagedBagsCreateRQ_schema request\", required = true) WTR_DamagedBagsCreateRQ_schema request) {\nJSON v2:\n                        {\n                            \"allowMultiple\": false,\n                            \"description\": \"WTR_DamagedBagsCreateRQ_schema request\",\n                            \"name\": \"body\",\n                            \"paramType\": \"body\",\n                            \"required\": true,\n                            \"type\": \"WTR_DamagedBagsCreateRQ_schema\"\n                        }\n. Ah, interesting, the two methods were annotated the same, so didn't see that empty type variable. \nJava:\n@ApiParam(value = \"WTR_DamagedBagsCreateRQ_schema request\", required = true) WTR_DamagedBagsCreateRQ_schema request) {\nJSON:\n                        {\n                            \"allowMultiple\": false,\n                            \"description\": \"WTR_DelayedBagsCreateRQ_schema request\",\n                            \"name\": \"body\",\n                            \"paramType\": \"body\",\n                            \"required\": true,\n                            \"type\": \"\"\n                        }\nSo, the difference seems to be in the annotation in the underlying object:\nWTR_DelayedBagsCreateRQ_schema has @XmlRootElement(name=\"\")\nWTR_DamagedBagsCreateRQ_schema has @XmlRootElement\nTesting WTR_DamagedBagsCreateRQ_schema with @XmlRootElement(name=\"\") . . .\nNo change, type is still \"\" after changing the XmlRootElement.\n. OK, I got it the copy/paste back to front, apologies.\nIf I remove the name=\"\" from both @XmlRootElement, it renders it completely fine in the UI.\nI do functionally need name=\"\" so that the generated JSON and XML doesn't include the WTR_DamagedBagsCreateRQ_schema or WTR_DelayedBagsCreateRQ_schema\n. If I annotate as follows:\n@ApiModel(\"WTR_DelayedBagsCreateRQ_schema\")\n@XmlRootElement(name=\"\")\n@ApiModel(\"WTR_DamagedBagsCreateRQ_schema\")\n@XmlRootElement(name=\"\")\nIt renders the json as \"type\": \"\"\n. OK, that works in the same manner as @XmlRootElement() by itself.\nI would prefer that:\n@ApiModel(\"WTR_DamagedBagsCreateRQ_schema\")\n@XmlRootElement(name=\"\")\nis able to be rendered, but at least I now know what is going on.\n. ",
    "guofengzh": "It formatted incorrectly. trying using markdown for the same content.\nUse Sbt to cross-build swagger-core\n1, What changed: \n   (1) added a project folder\n   (2) added the launcher script sbt(linux), sbt.bat(windows), laucher.jar in the root folder.    \nI build the modules code using the build successfully, That is, the develop_scala_2.11 branch  works well for Scala 2.11.x and Scala 2.10.3/4\nThe Sbt is 0.13.5\n2, The build can be used to build the projects in modules and some projects in samples. \n3, To use the build, first run \"sbt\" command to launch Sbt. On linux, you please make sure that the sbt script file has execution permission.\n4, On the Sbt console, run:\n```\n\nprojects\n```\n\nto list the projects that the build can build for. \n   The \"root\" project is a aggregate project. Running a task on the aggregate project will also run it on the aggregated projects. see http://www.scala-sbt.org/0.13/tutorial/Multi-Project.html.\n5, To build a specific project, run:\n>project <project-name>\nto go to the specific project, for example,\n>project swagger-core\n6, To build for Scala 2.11 and 2.10, run\n>+compile/package/publish\nsee http://www.scala-sbt.org/0.13/docs/Cross-Build.html\n7, use \n>+publish\nto do the publishing, but you need to create a .credential file in .ivy directory. see http://www.scala-sbt.org/0.13/docs/Publishing.html\n8, The OSGi bundle is generated for the core and annotation when run the \"publish/publishLocal\" task.\n9, To build use a specific Scala version, for example, 2.11.2\n```\n\n++ 2.11.2\n```\n\nComments on the sample projects\n1. for java-play2/scala-play2, run \n```\n\nproject \n```\n\nto go to one of the play project, then run\n```\n\nrun\n```\n\nto launch Play. see http://www.playframework.com/documentation/2.3.x/Migration23\n2, for java-dropwizard, go the the project, then run\n```\n\nassembly\n```\n\nto generate the executable jar. see https://github.com/sbt/sbt-assembly\n3, for other Java Servlet projects, run in the project\n```\n\ncontainer:start\n```\n\nto start the web container (Jetty 9.2.1.v20140609), or run\n```\n\npackge\n```\n\nto generate the war. see https://github.com/earldouglas/xsbt-web-plugin.\n. ",
    "maoanran": "Yes, the code sample is wrong, I modified it , it is correct now.\nAnd I update the swagger version to 1.3.7, but the problem still exists, and this json file can't be load in swagger UI, if i remove the generic of the ArrayList, then it is correct.\n. No, but just List and Set is ok, and It seems like the problem caused by these code in the JaxrsApiReader.scala file :\n``` scala\ndef processDataType(paramType: Class[_], genericParamType: Type) = {\n    paramType.getName match {\n      case \"[I\" => \"Array[int]\"\n      case \"[Z\" => \"Array[boolean]\"\n      case \"[D\" => \"Array[double]\"\n      case \"[F\" => \"Array[float]\"\n      case \"[J\" => \"Array[long]\"\n      case _ => {\n        if(paramType.isArray) {\n          \"Array[%s]\".format(paramType.getComponentType.getName)\n        }\n        else {\n          genericParamType.toString match {\n            case GenericTypeMapper(container, base) => {\n              val qt = SwaggerTypes(base.split(\"\\.\").last) match {\n                case \"object\" => base\n                case e: String => e\n              }\n              val b = ModelUtil.modelFromString(qt) match {\n                case Some(e) => e._2.qualifiedType\n                case None => qt\n              }\n              \"%s[%s]\".format(normalizeContainer(container), b)\n            }\n            case _ => paramType.getName\n          }\n        }\n      }\n    }\n  }\ndef normalizeContainer(str: String) = {\n    if(str.indexOf(\".List\") >= 0) \"List\"\n    else if(str.indexOf(\".Set\") >= 0) \"Set\"\n    else {\n      println(\"UNKNOWN TYPE: \" + str)\n      \"UNKNOWN\"\n    }\n  }\n```\n. ",
    "crfeliz": "I'm seeing this issue in 1.3.8 with Play 2.3.4\n. ",
    "olensmar": "@fehguy this looks like a swagger 1.2 related issue - does it apply to 2.0 as well?\n. @fehguy I can add this if you let me know what you had in mind...\n. looks fine by me - I agree that the reference should take precedence over a dataType/response...\nHow about naming the annotation \"modelReference\" ?\n/Ole\n. I think having \"remote\" in the name will be misleading since these could be local as well\n. jsonReference? modelReference? reference? Ron - release us! :-)\n. thanks :-)\n. ok - initial implementation for model references is in PR at https://github.com/swagger-api/swagger-core/pull/1113\n. I'm currently doing some stuff in the Reader for another issue, if you can bring me up to speed on this one I can probably fix it as well...\n. initial code is at https://github.com/swagger-api/swagger-core/compare/develop_2.0...issue-905-implicit-params - please let me know what I missed...\n. I think I have fixed this in swagger core - but I can't get sbt to pick up the changed SNAPSHOT jar from my local maven repo - any ideas in that regard? (so I can confirm before submitting a PR)\n. Confirmed to be fixed in branch https://github.com/swagger-api/swagger-core/tree/fix-body-ref-models-missing-in-definitions - will submit a PR soon\n. according to the javadoc for @Inherited - it is only applicable to annotations for types/classes - so I'm not sure why you want to add it here. https://docs.oracle.com/javase/7/docs/api/java/lang/annotation/Inherited.html\n. ok - I agree that's a problem, but there might already be an issue for it - @webron, can you shed some light?\n. @webron unfortunately different frameworks have different levels of support in regard to traversal, annotations on interfaces, etc.\nIf we add support for this we need to do it consistently for all annotations - and we need to figure out how to handle merging/overriding annotations at different levels\n. different implementations of jax-rs\n. Thanks Tony!\n. Thanks!\nThe rationale is to allow for more complex vendor extensions - for example\njavascript\n\"x-something\" : {\n    \"p1\" : \"value\",\n    \"p2\" : \"value\",\n    \"p3\" : \"value\"\n}\ninstead of\njavascript\n\"x-something-p1\" : \"value\",\n\"x-something-p2\" : \"value\",\n\"x-something-p3\" : \"value\"\nHope that makes sense :-)\n. looks good - please rebase so we can merge!\n. fine to merge by me - @webron?\n. done... waiting for build.. \n. please rebase also...\n. i've made this merge-able this in https://github.com/swagger-api/swagger-core/pull/1136\n. to be honest - this is somewhat above my head :-) What problem does this PR solve? \n. great - thanks for the explanation - I don't think I would have figured that out myself :-)\n. Seems to work for self references but not for circular references - i.e. as in the Foo / Bar classes above - in that case the \"top level\" reference works but the reference to the contained class that refs back to the top-level class gets a List definition. I'll continue digging... \n. Thanks, I'll confirm later today!\n. confirmed - seems to work in develop branch - closing!\n. this supersedes https://github.com/swagger-api/swagger-core/pull/1126\n. Just checking @chriskessel - are you good to go? Can we close the issue? \n. Thanks - I'm fine with merging this - waiting for Rons review\n. thank you!\n. thank you!\n. Thanks - this looks fine to me but lets wait for @webron just to be sure we aren't missing something mule...\n. Hi! Why don't we just improve the addTag method to complement the existing tag with the metadata found in the SwaggerDefinition annotation?\n. ok - I'll consider that as well.. thanks\n. I've created https://github.com/swagger-api/swagger-core/pull/1264 - @MadMatt04 if you could check this to see if it solves your problem that would be appreciated!\n. great - thanks for checking so quickly! @webron - can we get this into 1.5.1?\n. Hi! \nYou can do that with the new @SwaggerDefinition annotation introduced in the 1.5.0 release - have a look at the https://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-jaxrs/src/test/scala/resources/ResourceWithConfigAndExtensions.java class used by https://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-jaxrs/src/test/scala/ConfigAndExtensionScannerTest.scala\nGood Luck \n. Hi - I can't see any immediate reason to why this would fail - can you share the entire resource class to give some more context? \n. i've pushed some related fixes to https://github.com/swagger-api/swagger-core/tree/issue-1523 - although I would be surprised if they helped in your specific case - if you have the time to try that would of course still be helpful :-)\n. awesome - thank you - digging in!\n. so - unfortunately this works for me - how exactly are you hosting the resource? (framework, etc)\n. sure - https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java#L336 is where the ApiOperation extensions should be picked up when scanning your jaxrs resource - try putting one there to see if you hit it when generating the swagger definition\nthanks for your help!\n. awesome - let me fix that right away... can you give the branch a try afterwards?\n. ok great - the fix is in https://github.com/swagger-api/swagger-core/tree/issue-1523\n. awesome - thanks for confirming - i'll submit a PR for this\n. Perhaps Definition or SwaggerDefinition would be better names for this - thoughts anyone?\n. wow - thanks for catching that one - will fix this and the above..\n. it's used in the other read method to detect of the class being read is read independently... \n. ok - removing.. \n. I don't think performance will be an issue here...\n. makes sense - the only objection I have is that you need to know at code-time which listeners you want; I was aiming at a solution where listeners can be added later without having to modify the source code (since the main scan method will find any class implementing this interface, those classes could be added later, for example by scanning a 3rd party library that adds additional Swagger-related features).\n. yes you're right - i'm not sure if this method can be made private or protected - it is called directly by the tests (which we could change) - let me check the actual code... \n. perhaps have a constant - DEFAULT_COLLECTION_FORMAT ?\n. why not have a FORMAT constant also?\n. no - i'm just just nitpicking :-)\n. don't we need to add FormParam as well?\n. This method looks like a candidate to put in a ReaderUtils class (or perhaps even ReflectionUtils) ?\n. Perhaps add tests for all the other types as well?\n. ok - that could also be moved out perhaps - but lets not touch these for now... thanks\n. I think just \"BeanValidatorTest\" is fine... :-)\n. do we really want to remove the scala tests before all of them are migrated?\n. ok - we can rename them once the Scala tests have removed... thanks\n. We are currently migrating tests away from scala - if you could consider rewriting this in pure java (with TestNG) as in https://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-core/src/test/java/io/swagger/BeanValidatorTest.java that would be much appreciated... thank you!\n. To be fully in line with in line with https://github.com/swagger-api/swagger-spec/blob/master/guidelines/REUSE.md - shouldn't we have OPERATION and RESPONSE refs as well (with corresponding changes in the other classes) ? \n. not sure this is the right type of value to set as the example; we could also simply save the JsonNode!?. ",
    "dhathris": "I have tried something similar in that I tried migrating the 'v0' up to the Resource Api definition level like this: \n@Path(\"/v0\")\n@Scope(\"request\")\n@ContextConfiguration(locations = { \"classpath:application-config.xml\" })\n@Api(value = \"/v0\", description = \"Rules CRUD operations. Rules are used to customize financial transaction categorization\")\nAnd removed 'v0' from the @Path annotations at the method level\nBut that did NOT work and is exhibiting the same behavior......\n. {\n    \"apiVersion\": \"1.0.0\",\n    \"swaggerVersion\": \"1.2\",\n    \"apis\": [\n        {\n            \"path\": \"/v0\",\n            \"description\": \"Rules CRUD operations. Rules are used to customize financial transaction categorization\"\n        }\n    ]\n}\n. yeah, in that case I am getting the proper JSON response, which is too long to list here....\n. Thank you.....\n. I don't know why copy paste changed the method signature, but the signature of overriden read method reads as follows:\npublic Option<Model> read(Class<?> cls, final Map<String, String> typeMap)\n. ",
    "malli31": "issue resolved,\njersey server 1.13.0 and 1.17.1 conflict is causing the issue  using exclusions in pom solved the issue\n. ",
    "palhotel": "I 'm sorry I forgot to use the && lt; && gt;\npublic Aclass<Bclass> listValidation(){\n.......................\n}\nHow to write the @ApiOperation(response = ?), what's the class object of Aclass<Bclass>?\n. ok, Thank you\n. ",
    "wb14123": "OK. I just found it. Thanks.\n. ",
    "lagrwilson": "I upgraded to Swagger core, jaxrs and annotations to version 1.3.9.\nI added the following lines to my api, and it won't even compile.\n```\n@POST\n@Timed\n@Logged\n@Produces({MediaType.APPLICATION_JSON})\n@ApiEndpointPermissions({\n        @ApiEndpointPermission(permission = PermissionStrings.ORGANIZATION_READ,\n                permissionInstancePathParam = PathParamNames.ORGANIZATION_ID),\n        @ApiEndpointPermission(permission = PermissionStrings.API_KEY_CREATE)\n})\n@ApiOperation(value = \"Create Api Keys\",\n        consumes = MediaType.APPLICATION_JSON,\n        authorizations = Array(new Authorization(value=\"oauth2\",\n                scopes = Array(\n                        new AuthorizationScope(scope = \"organization:read\", description = \"read organization\"),\n                        new AuthorizationScope(scope = \"apikey:create\", description = \"create apiKey\")\n                ))))\n@ApiResponses(value = {\n        @ApiResponse(code = 400, message = \"Bad Request\"),\n        @ApiResponse(code = 403, message = \"Credentials are required to access this resource\")\n})\npublic ApiKeyResponse createApiKey(@PathParam(PathParamNames.ORGANIZATION_ID) OrganizationId organizationId,\n                                   @Context HttpServletRequest request) {\n// Do stuff here.\n    return apiKeyResponse;\n}\n```\nMy index.html in my swaggerui resource changed to so that api-key goes on header rather than query.\nI have several issues:\nI've checked the how to embed oauth2 blog post and that post is really old, out of date and there don't seem to be equivalent functions.  So I can't pass the api-key in the header with my bearer token and have swagger connect to get the proper permissions to exercise the apis.\nPlease provide some guidance on authenticating my apis within swagger's documentation.\nI am using Java 1.8, dropwizard.\nThank you.\nLucille Wilson\nI can't seem to add annotations to the apis to document the permissions each api is allowed.  \nI can't seem to hook up oath2 at all.\n. I believe I've found the reason why Swagger is unable to document these 2\napis.  Thisse apis are really in an AuthenticatingFilter.\nOn Sun, Sep 21, 2014 at 5:58 PM, Tony Tam notifications@github.com wrote:\n\nClosed #682 https://github.com/wordnik/swagger-core/issues/682.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/682#event-168209351.\n. Yes, thank you. I'm all set.\n\nOn Wed, Sep 24, 2014 at 10:35 AM, Tony Tam notifications@github.com wrote:\n\nOk, so you're all set then?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/682#issuecomment-56679006\n.\n. Hi.  I've been talking with my team. We've simplified our expectations of what the use case will be.  What we would like to do is have our developers use Swagger UI to test our rest apis.  Our rest apis rely on authentication and permissions.  So when the developer uses the Try it Out button, we want to pass a request header named Authorization and the value will be \"Bearer\" + \"APIKEYTOKENHERE\".  So the request header will equal \"Authorization\" = \"Bearer APIKEYTOKENHERE\".   Do you have any advice on how to include a request header?\n. Just this one line in index.html?  I'll let you know how this goes this\nafternoon.\n\nOn Wed, Sep 24, 2014 at 10:05 AM, webron notifications@github.com wrote:\n\nhttps://github.com/wordnik/swagger-ui#custom-header-parameters---for-basic-auth-etc\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/685#issuecomment-56674298\n.\n. Sure, as long as you agree with my explanation.  Thank you for your help.\nLucille\n\nOn Wed, Sep 24, 2014 at 4:25 PM, webron notifications@github.com wrote:\n\nCan we close the issue then?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wordnik/swagger-core/issues/685#issuecomment-56732939\n.\n. mvn install -Dmaven.test.skip=true\nThis worked.\n\nmvn jetty:run -Dmaven.test.skip=true worked also\n. May I please ask you to upgrade your samples to 1.3.10?  I notice that the swagger-ui files are still from an older version.  All the api-doc samples still mention 1.0.0, rather than 1.3.10.  It would be helpful to bring this all in line with the latest version.\n. I just compiled and ran the swagger-core/samples/no-server.  I've examined the index.html to see that the code is the same as 1.3.10 swagger-ui's index.html.  So the code seems to be the same. However, the api-docs file still references \"apiVersion\": \"1.0.0\",\n  \"swaggerVersion\": \"1.2\"\nWouldn't you want to change the apiVersion to 1.3.10?\n. Also, if I download the swagger-core zip file then the index.html has the older version of the code.  So I'm assuming all the other samples contain older versions of swagger-ui code.\n. I'll go to the google group from now on, but what I see is:\n\nAnd I'd like to change the data type so that my package name becomes a hypertext link to javadoc html which I supply.\nWhen will Swagger 2.0 come out?  And what additional documentation will it support?\n. In my resource file where the Rest API I am document is, I've used the following annotations:\njava\n    @GET\n    @Logged\n    @Produces(MediaType.APPLICATION_JSON)\n    @ApiEndpointPermissions({\n            @ApiEndpointPermission(permission = PermissionStrings.ORGANIZATION_READ,\n                    permissionInstancePathParam = PathParamNames.ORGANIZATION_ID)\n    })\n    @ApiOperation(value = \"Get Api Keys\")\n    @ApiResponses(value = {\n            @ApiResponse(code = 400, message = \"Bad Request\"),\n            @ApiResponse(code = 403, message = \"Credentials are required to access this resource\")\n    })\n    public ApiKeysResponse getApiKeys(@PathParam(PathParamNames.ORGANIZATION_ID) OrganizationId organizationId) {\nIn the OrganizationId class there aren't any Swagger annotations. In particular the @ApiModel() annotation does not exist.\njava\n@Embedded\n@Converters(OrganizationIdConverter.class)\n@JsonSerialize(using = OrganizationIdSerializer.class)\n@JsonDeserialize(using = OrganizationIdDeserializer.class)\npublic class OrganizationId extends ValidatedString {\nIn the ApiKeysResponse class the annotations look like this:\njava\n@ApiModel()\npublic class ApiKeysResponse {\n. As for your remark: \"In any case you won't be able to make that into a link to the javadocs, but you would be able to add a link to an external documentation of the operation.\"\nHow do I do this?  And what version supports a link to external documenation?\n. After using 1.5.0 do I put a Swagger annotation in to link to external documentation?  Can you give me some more information about how to make this work?  Thank you.\n. Alright, I can override the model for OrganizationId.  No problem.\nI just did a git clone on your 1.5 branch: git clone https://github.com/wordnik/swagger-core.git\nand then cd to swagger-core and did git pull origin develop.  I just got a lot of merge errors.  I can't merge your code. \n. I Overrode all the Models I needed to. I'll wait to see what the instructions are for linking a specific element of the model or api paremeters to a documentation website.\n. ",
    "legshort": "@fehguy thanks, I'm looking forward to it.\n. Thanks!! Great work. \nI will check and close it tomorrow morning for my timezone. \n. it's been working fine with 1.3.10 and have integrated with swagger-ui without any problem.\nHowever, it seems like your example code kind of old for instance classOf\njava\n@ApiResponse(response = classOf[models.User])\nI will try to make a pull request or something later.\nI'm gonna close this issue since the problem has been taken cared of.\nThanks a lot @fehguy.\n. ",
    "psurya": "Thanks, that resolved the issue. I've gone through some examples from the dev-2.0 branches in swagger-core and swagger-spec. \n. ",
    "hyuan-esol": "@webron Thanks for your suggestion! It will be more efficient.\n@fehguy Thanks for your suggestion! Yes I am using subclass. However I think \"@Produces({\"application/json\", \"application/*+json\"})\" is better. BTW,  isJsonType() in JacksonJsonProvider will ensures only JSON media type will be handled.\n. ",
    "vhochstein": "Unfortuenetly, I did not understand your described solution.\nHas anyone a link where I can see how I may define my general Response Codes such as 500, 502 which apply for all operations and use them in each operation annotation to avoid the same block of documentation for every operation ?\nThanks a lot in advance.\n. ",
    "codenozzle": "I came across this thread as I too need a way to define our Response Codes once, and use them across the API. We have several response codes (500, 400, 200, etc.) that we don't want to copy/paste all throughout the API. Yes, I could statically define the strings for the responses, but the annotations would still need to be duplicated. \nHas anyone figured this out? I don't think I followed what @fehguy was suggesting back in March. \nThank you very much in advance! Love using Swagger!\n. ",
    "jlous": "If I understand correctly, the swagger json format already supports references that would do the trick. All we need is annotation support for it.  Or am I missing something?. ",
    "ishener": "+1. ",
    "rob-k": "+1 \nWould be extremely helpful if you added the full spec of the Swagger object (or at least definitions, parameters and responses) to @SwaggerDefinition. Alternatively, as @jlous pointed out, it would be sufficient to give us an option to reference global definitions in @ApiOperation, @ApiParam etc. (e.g. with a field ref), as one can define the global definitions by subclassing ReaderListener as described here: http://swagger.io/customizing-your-auto-generated-swagger-definitions-in-1-5-x/. ",
    "rhamedy": "So it is possible to create an a Custom annotation (i.e. GroupedApiResponses) and annotate it with @ApiResponses and then use the custom annotations GroupedAPiResponses on endpoints and works just fine. I have posted an answer in SO about the same. \nIt saves a lots of repetitive code. \n. ",
    "krishnajinka": "Thanks for the help. I guess there is some issue with the scala version on my eclipse. The error is coming out of the com.wordnik.test.swagger.integration.ResourceListingIT.scala\nSince I am not familiar with Scala, I am unable to figure out what might be going wrong here. \nJust to check if everythign else is working fine, I renamed the scala file such that it wont execute during deploying, the app got deployed properly and I am able to see the Swagger output on the browser. \n. ",
    "magnusar": "Yes I've already tried that. It doesn't work. It produces a Scala match error \"scala.MatchError: string (of class java.lang.String)\"\n(Using just byte in combination with dataType=\"string\" works fine and the output is a string. It's the byte[] that I can't make work.) \n. Sorry, what are the three variants? Yeah I can try changing the dependency.\n. Sorry, what are the three variants? Yeah I can try changing the dependency.\n. @webron && @fehguy : I'm not surprised that the annotation worked for long -> String, since it worked for me with byte -> String. The problem is the array primitive. So if you can make anything primitive[] working (preferably byte[] since that is my case) that would probably solve it. \nIf I end up having to patch the code myself, do you please have any pointers as to how I would go about making a converter work for arrays of Java primitives? (I'm totally new to Scala...)\nThanx for the feeback.\n. @webron && @fehguy : I'm not surprised that the annotation worked for long -> String, since it worked for me with byte -> String. The problem is the array primitive. So if you can make anything primitive[] working (preferably byte[] since that is my case) that would probably solve it. \nIf I end up having to patch the code myself, do you please have any pointers as to how I would go about making a converter work for arrays of Java primitives? (I'm totally new to Scala...)\nThanx for the feeback.\n. As an input to the discussion, when I look at the response body where we also have a byte[] it looks like this in the Swagger UI if I click the Model link:\nMyClass {\nanotherByteArray (array[byte]): base64 encoded byte array\n} \nSo \"array[byte]\" is used as syntax at least in the output. I don't know if that's relevant but that's why I tried \"converter.add(\"array[byte]\", jsonString);\" as stated in the issue. \n. As an input to the discussion, when I look at the response body where we also have a byte[] it looks like this in the Swagger UI if I click the Model link:\nMyClass {\nanotherByteArray (array[byte]): base64 encoded byte array\n} \nSo \"array[byte]\" is used as syntax at least in the output. I don't know if that's relevant but that's why I tried \"converter.add(\"array[byte]\", jsonString);\" as stated in the issue. \n. We absolutely need to make the byte[] => string conversion work. (In the worst case I will have to try and patch the code myself or we have to choose some other framwork.) Do you think you guys could add a fix for this in the near future? \n. We absolutely need to make the byte[] => string conversion work. (In the worst case I will have to try and patch the code myself or we have to choose some other framwork.) Do you think you guys could add a fix for this in the near future? \n. @webron could you please give me an example of that workaround and what extra annotations I should add? \n. @webron could you please give me an example of that workaround and what extra annotations I should add? \n. Ok, here's a simplified version of the model:\nMyView.java:\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\n@ApiModel(value = \"Bla bla bla\")\npublic class MyView {\n@ApiModelProperty(value = \"a name\", required = true)\n  private String name;\n@ApiModelProperty(value = \"some text\", dataType=\"\", notes = \"base64 string\", required = true)\n  private byte[] byteArray;\n}\nAnd then we use it like this:\n@POST\n  @Path(\"/someservice\")\n  @ApiOperation(value = \"bla, bla\",\n                notes = \"bla bla\",\n                response = MyView.class)\n  public MyView doRequest(@ApiParam(value = \"Parameters for ...\", required = true) InputObject inputObject) {\nreturn getNewMyViewInstance(inputObject);\n}\n. Ok, here's a simplified version of the model:\nMyView.java:\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\n@ApiModel(value = \"Bla bla bla\")\npublic class MyView {\n@ApiModelProperty(value = \"a name\", required = true)\n  private String name;\n@ApiModelProperty(value = \"some text\", dataType=\"\", notes = \"base64 string\", required = true)\n  private byte[] byteArray;\n}\nAnd then we use it like this:\n@POST\n  @Path(\"/someservice\")\n  @ApiOperation(value = \"bla, bla\",\n                notes = \"bla bla\",\n                response = MyView.class)\n  public MyView doRequest(@ApiParam(value = \"Parameters for ...\", required = true) InputObject inputObject) {\nreturn getNewMyViewInstance(inputObject);\n}\n. Yeah, that works. Thanks! (The setters are generated automatically by the Lombok annotation @Data.)\nI'm not sure this duplication of model classes will be acceptable as a solution but perhaps we can use it temporarily. Do you know if we can expect a fix for this issue in a future snapshot release of Swagger?\n. Yeah, that works. Thanks! (The setters are generated automatically by the Lombok annotation @Data.)\nI'm not sure this duplication of model classes will be acceptable as a solution but perhaps we can use it temporarily. Do you know if we can expect a fix for this issue in a future snapshot release of Swagger?\n. Thanks for you reply @webron,\nOption 2. does not work for us. We have already tried using @HeaderParam as described above but it doesn't work. It doesn't seem to have any effect at all. Can you reproduce our situation (that it doesn't work) or verify that it does work, and if it works for you in the same setting (com.wordnik:swagger-jaxrs_2.11:1.3.10 in a Dropwizard project) are we doing something wrong? \n. Thanks for you reply @webron,\nOption 2. does not work for us. We have already tried using @HeaderParam as described above but it doesn't work. It doesn't seem to have any effect at all. Can you reproduce our situation (that it doesn't work) or verify that it does work, and if it works for you in the same setting (com.wordnik:swagger-jaxrs_2.11:1.3.10 in a Dropwizard project) are we doing something wrong? \n. ",
    "whisperwing": "@magnusar I know this is an old post but I'm running into the same issue and wonder what did you end up doing.\nAdding @ApiImplicitParam(name = \"methodArgumentName\",...) didn't work for me, the auth parameter still shows up as a body parameter in the generated doc (using swagger version 1.5.1-M2). Did it work for you? What am I missing here?\n. @webron OK I've updated to swagger-core 1.5.3 now. How do I work around this? Thanks!\n. Both! I can add the header parameter explicitly with @ApiImplicitParam but I can't get rid of the body parameter\n. It worked, thanks Ron!\n. ",
    "vsriram30": "@webron If we use @ApiParam(hidden=true), based on the source code comment, I get that it will be hidden from the list of parameters that are shown. But what if i want to enter the header param and make use of it? If it is hidden from the list of params, then I will not be able to enter that right?\nAlso looks like it is not in 1.5.1-M2 version which I am using because of dropwizard-swagger module uses this version of swagger.\n. @webron If we use @ApiParam(hidden=true), based on the source code comment, I get that it will be hidden from the list of parameters that are shown. But what if i want to enter the header param and make use of it? If it is hidden from the list of params, then I will not be able to enter that right?\nAlso looks like it is not in 1.5.1-M2 version which I am using because of dropwizard-swagger module uses this version of swagger.\n. @fehguy  Thanks for your reply. If the UI doesn't show it, then I will not be able to enter header params and try the API through swagger UI right? Is it still expected that APIs requiring headers should not be called via swagger?\n. @fehguy  Thanks for your reply. If the UI doesn't show it, then I will not be able to enter header params and try the API through swagger UI right? Is it still expected that APIs requiring headers should not be called via swagger?\n. @webron Based on the above suggestions given by you to allow swagger pass header parameters that is what I got. I am new to swagger and might have misunderstood what you mentioned. I declared two params as @HeaderParam in my method definition along with @ApiParam definition for that. It gets shown in swagger UI page as header param. But when I enter values for the header param and when I click Try it, the call is not directed to my implemented method. But when I call the same API through curl command with header added with -H, the call is going to the implemented API method. Hence I was not sure why when called via swagger UI, the call is not reaching my implementation. \n. @webron Based on the above suggestions given by you to allow swagger pass header parameters that is what I got. I am new to swagger and might have misunderstood what you mentioned. I declared two params as @HeaderParam in my method definition along with @ApiParam definition for that. It gets shown in swagger UI page as header param. But when I enter values for the header param and when I click Try it, the call is not directed to my implemented method. But when I call the same API through curl command with header added with -H, the call is going to the implemented API method. Hence I was not sure why when called via swagger UI, the call is not reaching my implementation. \n. Fixed it. My bad that I forgot the new header params to be added in the CORS filter. Now it works good.\n. Fixed it. My bad that I forgot the new header params to be added in the CORS filter. Now it works good.\n. ",
    "martoe": "For computer-generated specs I agree, but this was not my intention.\nWhen writing the spec manually, the swagger-codegen parser cannot process a JSON file with parameter references, so no code generation is possible.\nIn my opinion, since Swagger 2 now supports a top-down approach, it would be great to have all spec features available.\n. For computer-generated specs I agree, but this was not my intention.\nWhen writing the spec manually, the swagger-codegen parser cannot process a JSON file with parameter references, so no code generation is possible.\nIn my opinion, since Swagger 2 now supports a top-down approach, it would be great to have all spec features available.\n. Hmm, probably - to be honest, it is not clear to me which project to use for such issues, since the implementation must be done in both projects. Shall I move it there?\n. Hmm, probably - to be honest, it is not clear to me which project to use for such issues, since the implementation must be done in both projects. Shall I move it there?\n. You are right. Even if there are code changes needed in swagger-core, the implementation starting point must be swagger-codegen. I will move it there.\n. You are right. Even if there are code changes needed in swagger-core, the implementation starting point must be swagger-codegen. I will move it there.\n. This probably should be moved to swagger-codegen (similar to #698)?\n. This probably should be moved to swagger-codegen (similar to #698)?\n. Not yet, that's what the #700 pull-request is about...\n. Not yet, that's what the #700 pull-request is about...\n. The swagger-codegen implementation is merged. Now only the swagger-core part (#700 or similar) is missing so that this feature is done.\n. @webron @fehguy \nIs it ok to merge this? This would resolve #699, and the swagger-codegen part is already done (https://github.com/wordnik/swagger-codegen/pull/284)\n. Sure. At least on my machine, these are the very same tests that have failed before (I had those errors ever since I started using the develop_2.0 branch)\n. @fehguy: tried to fix those tests in https://github.com/wordnik/swagger-core/pull/717\n. Those failing tests are flickering - they are asserting the order of (unordered) JSON properties...\n. +1 for spock - a great tool for writing simple yet expressive tests\n. I agree that this is a very ugly hack - but both replacements are necessary to make the tests succeed on both Unix and Windows independent of the autocrlf style.\nTwo other possibilities to fix this:\n- A change in the Json.prettyPrint() method (as you suggested), combined with the replacement of the test's multiline-strings with plain strings (\"foo\\nbar\") - which of course makes the test less readable\n- Change the assertion (\"should equal\") method to make it ignore whitespaces (can't do that because I know nothing about Scala)\n. ",
    "palkopatel": "@fehguy maybe do you know when 1.5.0 will be released? Thanks!\n. @fehguy thanks for support! I am just trying to use 1.5.0 together swagger-maven-plugin but looks like they are not compatible for today\n. ",
    "Baztoune": "Hi, I'm glad to know that the version will be bumped. For information, I have an issue that will be fixed thanks to that https://groups.google.com/d/msg/play-framework/RVBKtoym1qM/kKOov8deQm4J (Play-Swagger and Play-Slick DDL compatibility)\n. Hi, I'm glad to know that the version will be bumped. For information, I have an issue that will be fixed thanks to that https://groups.google.com/d/msg/play-framework/RVBKtoym1qM/kKOov8deQm4J (Play-Swagger and Play-Slick DDL compatibility)\n. ",
    "tarpdalton": "@sandipmangale Can the other project module use a newer version of reflections?\n. ",
    "erdbeerschnitzel": "I have exactly the same requirement and I want to ask if there is a any workaround or if this is possible with swagger 2.x?\n. ",
    "francisdb": "Is that necessary for a single file delete?\n. @trein I think you got the wrong username in your reply. ",
    "javierfdr": "The type of response is ProductDTO which is the class I've set for response. Unfortunately is not Array.\n\n. Ok Thanks\n. ",
    "ShokuninSan": "Unless I\u2019m very much mistaken there is no trace of the described feature which allows to maintain multiple API versions via API filtering even in the latest version of swagger-play2. The article I referred to above describes the usage of a filter parameter  on ApiHelpController.getResources and the Api annotation respectively which is not there. So, is it just a feature proposal or @osbornk's own work? Or do I miss any extending library?\n. Thanks guys. I'm looking forward to seeing this feature as part of swagger-play2 soon!\n. @fehguy can you roughly estimate when this pull request or a similar feature will be available for versioning apis? \n. @fehguy awesome! thank you very much!\n. ",
    "daneguevara": "On second thought, this may actually belong in the swagger-ui repository.\n. So I looked into the swagger-ui code [1] that renders the ui for the @ApiParam annotations and it looked like everything should be working correctly, so I went back and took a look at the json swagger generates in the api-docs endpoint. The defaultValue attribute for each param is set correctly, however, the enum value was slightly off\njson\n{\n  \"name\":\"order\",\n  ...\n  \"defaultValue\":\"desc\",\n  ...\n  \"enum\": [\n    \"asc\",\n    \" desc\"\n  ]\n}\nThere is actually a space in the second enum element, and \" desc\" differs from \"desc\" so it never gets set as the selected option when the html renders. This happens using\njava\n@ApiParam(allowableValues = \"asc, desc\")\nIt the doc [1] it actually says you need to include the list in square brackets, so I tried that but it just renders the enum elements as \"[asc\" and \" desc]\", so that may need to be updated as well.\n[1] https://github.com/wordnik/swagger-ui/blob/master/src/main/template/param_list.handlebars#L14\n[2] https://github.com/wordnik/swagger-core/blob/master/modules/swagger-annotations/src/main/java/com/wordnik/swagger/annotations/ApiParam.java#L63\nEDIT: Could the documentation simply be updated so that the example given is \"first,second,third\"? Curious side note: any particular design reason as to why the allowableFields annotation is a String instead of String[]?\n. Yup pretty, much. Thanks!\n. ",
    "liuyang1204": "This is an internal user role with database realm.\n\nIs this an internal user role or an oauth2 scope?\n\nHowever, does this really matter?\nThe requirement is only to transform Shiro annotations to json format, then let swagger API add this json when it returns.\nPurpose is to show access control information on swagger-ui, so developers can easily know how to use the APIs under different account types.\n. Thanks, webron!\nI got some paths to solve this problem from your response.\nI think the first way is a good idea, one account is only aware of what it can do. I guess we can already do this easily, according to my Google search.\nThe first way is useful for API users, it shows \"what I can do\".\nBut it is not enough for API developers. Developers want to know \"Who can do what\".\nI feel \"access control information\" has great potential to be included in the swagger specification in the future.\n. ",
    "mukulgupta2507": "@webron : I'm using swagger core 1.3.10 http://mvnrepository.com/artifact/com.wordnik/swagger-core_2.10/1.3.10. In addition to this, I'm also using swagger-jaxrs_2.10 and  swagger-annotations.\nhttp://mvnrepository.com/artifact/com.wordnik/swagger-annotations\nThese are all libraries that I'm using for swagger related stuff. In addition to this for interacting with db, I 'm using jongo annotations which I have shown in the above mentioned class.\n. I tried using  @ApiModelProperty(dataType= \"string\")  on the getter of the field but still it doesn't work. BTW I'm also using @XmlElement(name = \"id\") on the getter field since my rest api supports both json and xml. Can this be one problem ? Or the way I'm using @ApiModelProperty is not correct ?\n. No, I tried it after removing @XmlElement but still doesn't work. Any other work around ?\n. I'm using that model as a reponse of my rest api. which method signature should I share with you ?\n. One more thing I'm not using @ApiModel on the main POJO class. Is it necessary to first use annotation @ApiModel on POJO ?\nMethod signature of my rest api is:\n@ApiOperation(value=\"Find Id\",response=MyPojo.class)\n    public javax.ws.rs.core.Response getMethod(@ApiParam(value=\"ID of object\",required=true) @PathParam(\"id\") final String id,\n            @ApiParam(value=\"type\",required=false,allowMultiple=true) @QueryParam(\"type\") final String type, \n            @ApiParam(value=\"keys\",required=false,allowMultiple=true) @QueryParam(\"keys\") final String keys) \n. Yeah, that's right.\n. I'll try to clear your doubts. I have represented my mongo id as a string in my Java POJO, now since jongo mapper which I normally use to query my mongo db automatically converts into an ObjectId, I need  not to worry about it. Using @ObjectId ensures that. But that thing is not happening when I started using swagger. I know the issue lies with the type of object mapper which internally swagger uses to process objectId. I'm trying to handle this field only but without breaking it into time,new,timestamp,machine,etc. It's happening something like a Date Object, when you know that swagger actually breaks into smaller things like minutes,seconds,hours,etc. Is there anyway I can tell swagger that don't process it this way. Simply handle it as an ObjectId ? \nI have mostly mosted the main parts of POJO. Othere parts of POJO contains other fields, I don't think there is anything you can find from there.\n. @webron @fehguy \nIs there anyway by which I can use Swagger Overriding models functionality to override ObjectId models. There is a blog post which shows how to override Date models. Can we do something similar to this ?\nhttps://github.com/wordnik/swagger-core/wiki/overriding-models\n. Okay, for test cases should I write a sample pojo with all the necessary annotations and a sample rest api which will be using it and post it here with the corresponding output and expected outputs ?\nAlso, if you can give me some hints on the overriding models parts of swagger for ObjectId, it'll be great. I tried writing models something like:\nString jsonString = \"{\" +\n        \"  \\\"_id\\\": \\\"ObjectId\\\",\" +\n        \"  \\\"properties\\\": {\" +\n        \"      \\\"date\\\": \\\"Date in ISO-8601 format\\\",\" +\n        \"      \\\"time\\\": \\\"Date in ISO-8601 format\\\",\" +\n        \"      \\\"timestamp\\\": \\\"Date in ISO-8601 format\\\",\" +\n        \"      \\\"new\\\": false,\" +\n        \"      \\\"timeSecond\\\": \\\"Date in ISO-8601 format\\\",\" +\n        \"      \\\"inc\\\": \\\"Date in ISO-8601 format\\\",\" +\n        \"      \\\"machine\\\": \\\"Date in ISO-8601 format\\\"\" +\n        \"    }\" +\n        \"  }\" +\n        \"}\";\n        OverrideConverter converter = new OverrideConverter();\n        converter.add(ObjectId.class.getName(), jsonString);\n        ModelConverters.addConverter(converter, true);\nBut it didn't work.\n. Okay, for the test cases I'll write a simple POJO with all the necessary annotations and a simple REST api so that you can test it on your local machine.\nAs for the converter, I have written a bootstrap servlet file which is initialized when Resteasy scans all my resources. \n``` java\nimport javax.servlet.ServletConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport org.bson.types.ObjectId;\nimport com.wordnik.swagger.config.ConfigFactory;\nimport com.wordnik.swagger.config.ScannerFactory;\nimport com.wordnik.swagger.config.SwaggerConfig;\nimport com.wordnik.swagger.converter.ModelConverters;\nimport com.wordnik.swagger.converter.OverrideConverter;\nimport com.wordnik.swagger.converter.TypeConverter;\nimport com.wordnik.swagger.jaxrs.config.ReflectiveJaxrsScanner;\nimport com.wordnik.swagger.jaxrs.reader.DefaultJaxrsApiReader;\nimport com.wordnik.swagger.reader.ClassReaders;\npublic class Bootstrap extends HttpServlet {\n    @Override\n    public void init(ServletConfig servletConfig) {\n        try {\n            super.init(servletConfig);\n            SwaggerConfig swaggerConfig = new SwaggerConfig();\n            ConfigFactory.setConfig(swaggerConfig);\n            swaggerConfig.setBasePath(\"http://localhost:8080/myresource\");\n            swaggerConfig.setApiVersion(\"1.0.0\");\n            ReflectiveJaxrsScanner scanner = new ReflectiveJaxrsScanner();\n            scanner.setResourcePackage(\"my_package\"); //your \"resources\" package\n            ScannerFactory.setScanner(scanner);\n            ClassReaders.setReader(new DefaultJaxrsApiReader());\n            String jsonString = \"{\" +\n            \"  \\\"_id\\\": \\\"ObjectId\\\",\" +\n            \"  \\\"properties\\\": {\" +\n            \"      \\\"date\\\": \\\"Date in ISO-8601 format\\\",\" +\n            \"      \\\"time\\\": \\\"Date in ISO-8601 format\\\",\" +\n            \"      \\\"timestamp\\\": \\\"Date in ISO-8601 format\\\",\" +\n            \"      \\\"new\\\": false,\" +\n            \"      \\\"timeSecond\\\": \\\"Date in ISO-8601 format\\\",\" +\n            \"      \\\"inc\\\": \\\"Date in ISO-8601 format\\\",\" +\n            \"      \\\"machine\\\": \\\"Date in ISO-8601 format\\\"\" +\n            \"    }\" +\n            \"}\";\n            OverrideConverter converter = new OverrideConverter();\n            converter.add(ObjectId.class.getName(), jsonString);\n            ModelConverters.addConverter(converter, true);\n        } catch (ServletException e) {\n            System.out.println(e.getMessage());\n        }\n    }\n}\n```\nI have copied my entire bootstrap file here. I guess this is how we override the way swagger looks the things. But it's not working, Any ideas ?\n. Yeah. I have done it like this:\n<servlet>\n    <servlet-name>Bootstrap</servlet-name>\n    <servlet-class>my_package.Bootstrap</servlet-class>\n    <load-on-startup>2</load-on-startup>\n </servlet>\nBootStrap is working fine, that's for sure because that way only I made swagger to scan my resources using DefaultJaxrsApiReader.\n. No, It's not working. Infact I'm getting an exception like this:\n2014-10-20 15:32:05,246: ERROR com.wordnik.swagger.converter.OverrideConverter  - failed to convert json to model\n       org.json4s.package$MappingException: Did not find value which can be converted into java.lang.String\n    at org.json4s.reflect.package$.fail(package.scala:96)\n    at org.json4s.Extraction$.convert(Extraction.scala:554)\n    at org.json4s.Extraction$.extract(Extraction.scala:331)\n    at org.json4s.Extraction$.extract(Extraction.scala:42)\n    at org.json4s.ExtractableJsonAstNode.extract(ExtractableJsonAstNode.scala:21)\n    at com.wordnik.swagger.model.SwaggerSerializers$JsonSchemaModelSerializer$$anonfun$$init$$1$$anonfun$apply$1$$anonfun$applyOrElse$9.apply(SwaggerSerializers.scala:51)\n    at com.wordnik.swagger.model.SwaggerSerializers$JsonSchemaModelSerializer$$anonfun$$init$$1$$anonfun$apply$1$$anonfun$applyOrElse$9.apply(SwaggerSerializers.scala:51)\n    at org.json4s.ExtractableJsonAstNode.extractOrElse(ExtractableJsonAstNode.scala:59)\n    at com.wordnik.swagger.model.SwaggerSerializers$JsonSchemaModelSerializer$$anonfun$$init$$1$$anonfun$apply$1.applyOrElse(SwaggerSerializers.scala:51)\n    at com.wordnik.swagger.model.SwaggerSerializers$JsonSchemaModelSerializer$$anonfun$$init$$1$$anonfun$apply$1.applyOrElse(SwaggerSerializers.scala:33)\n    at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:33)\n    at org.json4s.CustomSerializer$$anonfun$deserialize$1.applyOrElse(Formats.scala:364)\n    at org.json4s.CustomSerializer$$anonfun$deserialize$1.applyOrElse(Formats.scala:362)\n    at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:33)\n    at org.json4s.CustomSerializer$$anonfun$deserialize$1.applyOrElse(Formats.scala:362)\n    at org.json4s.CustomSerializer$$anonfun$deserialize$1.applyOrElse(Formats.scala:362)\n    at scala.PartialFunction$OrElse.apply(PartialFunction.scala:162)\n    at org.json4s.CustomSerializer$$anonfun$deserialize$1.applyOrElse(Formats.scala:362)\n    at org.json4s.CustomSerializer$$anonfun$deserialize$1.applyOrElse(Formats.scala:362)\n    at scala.PartialFunction$OrElse.apply(PartialFunction.scala:162)\nI'll post the test cases today when I'm free. Meanwhile, if you get a chance, can you please see what's wrong with the model part ?\n. I want to convert following model to MongoDB ObjectId without breaking the original id into sub-fields: \n                     \"_id\": {\n                          \"date\": 1337063806000,\n                            \"time\": 1337063806000,\n                            \"timestamp\": 1337063806,\n                            \"new\": false,\n                            \"timeSecond\": 1337063806,\n                           \"inc\": -100663295,\n                           \"machine\": 808430657 \n                       }\nRather I want it to be coming like this:\n\"_id\" : \"503b2ab3e4b032e338f11111\"\nIf you want something else, then please let me know.\n. @webron  @fehguy \nOkay, so I'm posting a simple test case and the process to reproduce it. \nI have created a test collection in my MongoDB in test DB on localhost and inserted one document:\n> use test\n    > db.test.insert({name:\"somerandomname\"});\n    > db.test.findOne()\n    { \"_id\" : ObjectId(\"544507e70ffab1fab3a6c492\"), \"name\" : \"somerandomname\" }\nMy POJO looks like this:\n``` java\nimport java.io.Serializable;\nimport org.jongo.marshall.jackson.oid.ObjectId;\nimport org.springframework.data.annotation.Id;\nimport org.springframework.data.mongodb.core.mapping.Field;\nimport com.fasterxml.jackson.annotation.JsonInclude;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n@JsonInclude(JsonInclude.Include.NON_NULL)\npublic class SampleModel implements Serializable{\nprivate static final long serialVersionUID = -7917366681345859073L;\n\n@Id\n@org.jongo.marshall.jackson.oid.Id\n@ObjectId\nprivate String id;\n@Field(\"name\")\n@JsonProperty(\"name\")\nprivate String name;\n\n\npublic SampleModel() {\n}\n\n//@ApiModelProperty(dataType= \"string\")  I tried using this but it's not working  \npublic String getId() {\n    return id;\n}\npublic void setId(String id) {\n    this.id = id;\n}\n\npublic String getName(){\n    return name;\n}\npublic void setName(String name){\n    this.name = name;\n}\n\n}\n```\nAnd My Rest API looks like this:\njava\n@Path(\"/v1/samplerestapi\")\n@Component\n@Api(value=\"/v1/samplerestapi\",description=\"operations about sample rest api\")\n@Produces({MediaType.APPLICATION_JSON})\npublic class SampleRestAPI{\n    @GET\n    @Path(\"/name/{name}\")\n    @Produces({MediaType.APPLICATION_JSON})\n    @ApiOperation(value=\"find document by name\",response=SampleModel.class)\n    @ApiResponses(value={\n            @ApiResponse(code=200,message=\"Success\"),\n            @ApiResponse(code=500,message=\"Exception occurred\"),\n            @ApiResponse(code=404,message=\"Not Found\")\n    })\n    public javax.ws.rs.core.Response getDocumentByName(@ApiParam(value=\"name of document to fetch\",required=true) @PathParam(\"name\") final String name) {\n        try{\n            if(name != null){\n                MongoCollection jongo = new Jongo(new MongoClient(\"localhost\").getDB(\"test\")).getCollection(\"test\");\n                SampleModel obj = jongo.findOne(new BasicDBObject().append(\"name\",name).toString()).as(SampleModel.class);\n                return javax.ws.rs.core.Response.status(Status.BAD_REQUEST).entity(obj).build();\n            }\n            else{\n                return javax.ws.rs.core.Response.status(Status.BAD_REQUEST).entity(\"Not found\").build();\n            }\n        }catch(Exception e){\n            return javax.ws.rs.core.Response.status(Status.INTERNAL_SERVER_ERROR).entity(\"Not found\").build();\n        }\n    }\n}\nSo the hit which you will be using is:\nhttp://localhost:8080/sampleproject/api/v1/samplerestapi/name/somerandomname\nAnd the output will be:\njson\n{\n    \"name\": \"somerandomname\",\n    \"_id\": {\n        \"date\": 1413810151000,\n        \"time\": 1413810151000,\n        \"timestamp\": 1413810151,\n        \"new\": false,\n        \"timeSecond\": 1413810151,\n        \"inc\": -1280916334,\n        \"machine\": 268087802\n    }\n}\nBut I expect something like this:\njson\n{ \"_id\" : \"544507e70ffab1fab3a6c492\", \"name\" : \"somerandomname\" }\nI guess that will work. Rest of the things you can configure on your local environment like adding swagger dependency and RestEasy configuration in your pom.xml and web.xml.\nPlease revert if anything is still not clear.\n. But in my case it's affecting the API. If the remove swagger annotations then the output will come as expected. Adding the swagger annotations is the only change I have made in my Rest API's.\n. No, I'm just using Jongo Annotations which internally uses Jackson itself. Also, since I'm working on legacy code so Spring Annotations are also there. I guess those are not creating any problem. There is something wrong in the mapper only but not able to figure out why it's happening only when using Swagger Annotations in my code. Is there something like when you install swagger then it overrides the default Jackson mapper because that's the only possible case if swagger doesn't change anything in the API.\n. @alino91 \nyou are right, it's the issue of Jongo not Swagger. \n@webron \nThe solution suggested by @alino91 is working for me right now. I guess I can use it till we get a fix in the Jongo itself.\nFor those who are facing the same problem and looking for a solution, you can follow the @alino91  answer, it will work fine.\nThanks for the help guys.\nCheers\n. ",
    "King-Wizard": "Hello guys,\nI read all your discussion and actually the bug comes from an update of the Jongo library 1.0 to 1.1.\nFor a solution to your problem, please find an answer here: http://stackoverflow.com/questions/26474514/using-jongo-and-jackson-2-how-to-deserialize-a-mongodb-objectid-represented-un\nI encountered the same problem today with jackson 2, jersey 2 and Jongo 1.1.\nNote: do not forget to put +1 on my answer on stackoverflow.\nCheers guys.\nFrom France.\n. Another solution to solve this problem would consist in using Jongo.\nSee the following last post for a detailed explanation: https://github.com/bguerout/jongo/issues/221\n. ",
    "Athou": "master, I just removed the dependency from the parent pom and it builds fine.\n. ",
    "stevenschlansker": "Note that this applies to both com.google.common.base.Optional<> and java.util.Optional<> (JDK8 only)\n. Nice!\n. ",
    "bthule": "The compile time enhanced is my primary issue-- I included the super class property issue since a solution would likely solve both:\nHere is sample model for super+inherited classes:\njava\n// A super class provided by third-party\npublic class Animal {\n    String uselessAnnoyingProperty;\n}\njava\n// A sub class whose api-model should not have uselessAnnoyingProperty\npublic class Dog extends Animal {\n    int numberOfLegs;\n}\nswagger-ui would show:\njavascript\n{\n    \"numberOfLegs\": 0,\n    \"uselessAnnoyingProperty\": \"\",\n}\nThe solution I would suggest is:\njava\n@ApiModel(hideProperties = {\"uselessAnnoyingProperty\", ...})\n. Because it is a super class provided by a third party.  For me, right now I just need to hide properties, but I can see valid cases where others would want to be able to have all the options available in @ApiModelProperty.  So a better solution might be:\njava\n@ApiModel(properties = {@ApModelProperty(name=\"uselessAnnoyingProperty\", hide=true), ...})\n. Will swagger-core also work with Moxy?  Jersey 2 now prefers Moxy, which uses different annotations than Jackson.  Moxy uses jaxb annotations such as @XmlRootElement.\nAnyway, I'd like to be sure you read that the issue I am directly facing right now is with compile time enhancing-- (I included the super/inherited class issue since I believe any solution would likely solve both).\nI am fine with waiting for next version of swagger-core.  I found a (yucky) workaround by adding this to my api model class:\njava\n    @ApiModelProperty(hidden=true)\n    public int _ebean_intercept;  // not used, except to trick swagger-core\nOnce ebean compile enhances, it will add a _ebean_intercept of type EntityBeanIntercept. Swagger still uses the annotations on the _ebean_intercept of type int.  This workaround seems to be working okay.\n. @aciganj Did you try @ApiModel(properties = {@ApModelProperty(name=\"uselessAnnoyingProperty\", hidden=true), ...})\n. ",
    "aciganj": "@bthule , @fehguy \n@ApiModel doesn't have the properties option, and other options don't seem useful for this purpose. I'll create a new issue\n. ",
    "duckladydinh": "Please reopen the issue. This is a very important issue for the documentation because otherwise, the json data and the swagger model will not match. Please reopen the issue.. > it is a very important issus for me, Please reopen the issue.\nHi, I think the same and I tried implementing some workaround for it in this pull request https://github.com/swagger-api/swagger-core/pull/2996, but unfortunately, Swagger team does not allow open contribution, so it will never be official. But if you do not intend to use Swagger forever, maybe it will help for now.. Maybe not related, but if you do not want to expose 'any value', instead, just push a reference to the enum class, you can check my pull request. I have implemented an option to make an Enum class and push a reference to it (If you are building manually from OpenAPI object)\nhttps://github.com/swagger-api/swagger-core/pull/2996\n. ",
    "r3215407": "it is a very important issus for me, Please reopen the issue.. ",
    "wenyi189": "It is 2019 now. And this is still not supported. I'm running into the exact problem where I have multiple sub types of APIException. And this APIException extends from RuntimeException from java. For example, if I have a subtype called UnexpectedException and it extends APIException, everything from parent class got picked up including the fields in Throwable.class. Very annoying and still couldn't find a way to get it working.. ",
    "garethjevans": "It does depend on swagger-models, but because that is in the same repository (swagger-core) as swagger-core, you end up with a release time circular dependency between these modules.\n. ",
    "leachbj": "This circular dependency makes it impossible to do a fully automated release with the maven release plugin at the git repository level which looks like how you've done your earlier releases.\nWhen you try and release the swagger-core repository it fails due to the SNAPSHOT dependency on the jackson-module-swagger artifact and if you try it the other way around you'll get the same issue but for the jackson-module-swagger artifact.  I think you'll need to either break that dependency cycle or bring the jackson-module-swagger code into the swagger-core repo.\n. ",
    "andreicristianpetcu": "Ups.... sorry. I was using an older version.\n. ",
    "txt8888": "Would you show me how this is done?  I would like to do the exact same thing. \nThe links did not work.  \nhere is the swagger version I have in my project:\n    <dependency>\n        <groupId>io.springfox</groupId>\n        <artifactId>springfox-swagger-ui</artifactId>\n        <version>2.6.1</version>\n    </dependency>\n\n    <dependency>\n        <groupId>io.springfox</groupId>\n        <artifactId>springfox-swagger2</artifactId>\n        <version>2.6.1</version>\n    </dependency>\n\n. ",
    "hgschmie": "Very nice.\n. ",
    "tpetr": "yep, no problem\n. Ah, sorry for the headache there. I'll reopen the PR for that branch.\n. ",
    "rdiehl": "Yes, we're using swagger-core_2.10-1.3.10 and supporting jars.\nIt seems to be slightly slower the first time, but even after refreshing the page a few times, the load times for the individual endpoints are still in the 2 second range.\n. Yes, the actual calls are fast.  curl shows the GET call for one of these services is in the 200ms range, and doing the GET call from within swagger-ui is also fast, around 200-300ms.\n. OK that is reassuring.  Is there a migration guide or anything that I can follow to see if there are other things I need to change when moving our annotations to the 2.0 spec?\n. Thanks for that, I'm closing this as I won't have time to go update our annotations in a timely fashion.  If I encounter issues in the future, I'll reopen it.\n. OK thanks, I'm going to close this, it's not necessarily a feature request or anything, we were just using that as a workaround for issues in swagger-ui with huge apis. \n. ",
    "rktoomey": "Oh very good!  Should I modify my pull request to reflect the webjar?\nOn Tue Dec 09 2014 at 1:20:41 PM Ming Fang notifications@github.com wrote:\n\nI finally figured it out.\nSomeone already packaged swagger-ui as a webjar.\nhttps://github.com/webjars/swagger-ui\nTo add the webjar, I created a build.sbt(because I don't know how to use\nBuild.scala) with this line\nlibraryDependencies += \"org.webjars\" % \"swagger-ui\" % \"2.0.24\"\nThen in my `routes file, add these two lines(note you may already have\none of them)\nGET     /assets/*file           controllers.Assets.at(path=\"/public\", file)\nGET     /swagger                controllers.Default.redirect(to=\"/assets/lib/swagger-ui/index.html\")\nNow point your browser to /swagger and it will be redirected to\nassets/lib/swagger-ui/index.html\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/pull/741#issuecomment-66330406\n.\n. @fehguy - this is not difficult to do in sbt, let me try to come up with something later today.\n\nBut it doesn't look too difficult to get hooked into official webjar publishing either:\nhttp://www.webjars.org/contributing\n. ",
    "gorgonblot": "I had branched from master rather than the develop_scala-2.10 branch.  Let me know if I should pull in develop, resolve conflicts, and then submit again.\n. Now...this is pulling all of the master branch commits back into the develop which is probably not what we want to do either. I need to make this cleaner off of develop.\n. ",
    "earth2marsh": "Realistically, YAML is biased toward an authoring workflow. That being\nsaid, it would be nice to have the ability to consume and produce\nswagger.yaml from swagger-core, even if that just means a YAML-to-JSON and\nJSON-to-YAML conversion step. I would expect most, if not all, of the\nSwagger tooling to prefer the JSON.\nNote that because YAML is a superset of JSON, any YAML > JSON > YAML round\ntrips may lose data. Comments are a good example of this.\nOn Thu Nov 20 2014 at 6:28:50 AM webron notifications@github.com wrote:\n\nNo... I was under the impression that we agreed YAML is a swagger-editor\nformat only.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/762#issuecomment-63815462\n.\n. If people become familiar with the swagger format through authoring in\nYAML, then should they wish to view a swagger-enabled spec, why offer them\njust JSON, especially since it is such a clean conversion?\n\nThis is about developer experience more than purity or minimalism, IMO.\nOn Thu, Nov 20, 2014, 1:00 PM webron notifications@github.com wrote:\n\nWe can also produce XML and HTML directly from it, but there's no reason\nto do those either.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/762#issuecomment-63878675\n.\n. Me either, but the end result is broken YAML, which isn't a great thing in the standard app's spec. If I had any Java skill, I'd dig in to see for myself! :)\n. @webron interesting\u2026 my guess is that a swagger-tools dependency has a flaw then, so I will chase it down there. Thanks for the excellent sleuthing!\n. \n",
    "mbarbanson": "No, we don't need this anymore. 779 is a superset that includes this change.\n-Monique\n\nOn Dec 6, 2014, at 4:00 PM, Tony Tam notifications@github.com wrote:\n@mbarbanson is this still valid after #779?\n\u0081\\\nReply to this email directly or view it on GitHub.\n. Close this pull request and open one to specify develop_2.0 branch as the merge target\n. \n",
    "nhartner": "I'd like to use this feature. Is there a previous version I can use where this was working? I went all the way back to the initial version 1.3.4 where this feature was added and it still seemed to have the same problem. Perhaps I was changing the wrong dependencies.  Here's the ones I changed to:\ncom.wordnik:swagger-annotations:jar:1.3.4\ncom.wordnik:swagger-core_2.10:jar:1.3.4\ncom.wordnik:swagger-jaxrs_2.10:jar:1.3.4\n. Closing to resubmit against the develop-scala_2.10 branch.\n. Recreated as pull request #792\n. opened by mistake\n. ",
    "thibaultcha": "Moved to #772!\n. I couldn't find any tests about the JsonSchemaParameterSerialization. Are you expecting a test suite similar to JsonSchemaModelSerializationTest?\n. Of course. Only issue is that there was no tests before, so this doesn't break any existing ones. But will do if I find the time.\n. ",
    "sonicaghi": "It doesn't work for me either.\nWith the fix works fine and it doesn't seem to break anything else.\n. ",
    "dibog": "After further investigation I think my problem is not directly a swagger problem, but perhaps a jersey/swagger problem.\nE.g. here is the way I have registered the resources with Jersey:\nIf I do it like this, then Swagger acts as previously described, but if I use\nit works for Swagger, but the Rest call failes due to some bug in Jersey.\nSo basically I'm between a rocky and a hard place.\n. Should they, or should they not, be in the same package?\nIf I use   it doesn't matter for Swagger, he gets the information. But in both cases Jersey can't call the REST service.\nIf I use   then it works for Jersey regardless if its in the same package or not. But Swagger doesn't see anything.\nCurrently it looks like I either can make Jersey happy or Swagger, but not both.\n. I'm currently setting up a github repository showing my problem. \n. Due to some firewall problems, I can't commit my project. Is there anyway I could send you a zip file? It isn't that large, around 180 kByte.\n. Ron R I hope?\n. Hi Ron,\nfirst off, thanks a lot for you efforts.\nThe BeanConfig solutions works in so far, that the JSON returned by\nhttp://localhost:8080/api-docs looks now correct, as it contains both\nmethods /base and /data. As well as both rest calls also works correctly.\n{\"apiVersion\":\"1.1.1\",\"swaggerVersion\":\"1.2\",\"apis\":[{\"path\":\"/base\",\"description\":\"Operations\nfor ...\"},{\"path\":\"/data\",\"description\":\"Operations for ...\"}]}\nThe only modification I had to do was the following line for the BeanConfig:\nbeanConfig.setBasePath(BASE_URI.toString());\notherwise he would use a wrong url for the REST calls.\nBut when I put the Swagger-UI on it, I get the following:\n[image: Inline-Bild 1]\nSo each line is repeated thrice. I attach the classes to do this test.\nJust put them into the folder where my classes from yesterday went.\nBest regards,\nDieter\n2014-11-25 17:08 GMT+01:00 webron notifications@github.com:\n\nOkay. I'm not sure why Jersey won't load interface/implementation\ncombinations when using the ResourceConfig.packages(...). However, if you\nuse ResourceConfig.register(...) instead, you can configure Swagger to\nwork as well.\nInstead of using the code you have in the BaseLauncher:\nMap<String, String> swaggerParams = new HashMap<>();\nswaggerParams.put(\"api.version\", \"1.0.1\");\nswaggerParams.put(\"swagger.api.basepath\", BASE_URI.toString());\n    swaggerParams.put(\"\")\n    SwaggerJaxrsConfig.register(swaggerParams);\nUse the BeanConfig class (use it after you start your web server:\n```\n    BeanConfig beanConfig = new BeanConfig();\nbeanConfig.setVersion(\"1.1.1\");\nbeanConfig.setResourcePackage(\"net.bogdoll\");\nbeanConfig.setScan(true);\n\n```\nNotice that the setScan has to be set to true for the scanning to work.\nOne thing to keep in mind is that this will scan all classes under the\npackage, whether they are loaded by Jersey or not. However, this should\nexpose all your APIs properly. Let me know if this works for you.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/773#issuecomment-64423756\n.\n. Hi Ron,\n\nah, thanks, I hadn't interpreted that in this way. Okay, so, in the normal\ncase this shouldn't be a problem.\nAnd if you say: \"scan all classes under the package\", you mean with \"under\"\nspecifically all sub packages?\nBest regards,\nDieter\n2014-11-26 9:18 GMT+01:00 webron notifications@github.com:\n\nI don't think you can attach images via email responses, but only when you\nuse the web interface.\nHowever, the reason you're experiencing the triple operations is due what\nI wrote in the last paragraph in my last comment - One thing to keep in\nmind is that this will scan all classes under the package, whether they are\nloaded by Jersey or not..\nYour sample project contains multiple resources on the same URLs with the\nsame operations (for testing purposes, of course), and Swagger scans them\nall and loads them up. So you're basically seeing the same resource with\nthree of the operations.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/773#issuecomment-64528489\n.\n. Yes, thanks.\n. \n",
    "brandonheller": "Thanks for doing that.  I'll report this with swagger-springmvc.\n. ",
    "zouzias": "This is deprecated, since I have submitted a more complete pull request containing an apache wink sample, see #786 \n. ",
    "frosforever": "Perfect sense as Vector is similar to Java's ArrayList. I'll amend my PR to match as a List. Thanks!\n. ",
    "efenderbosch": "Of course, I figured it out after submitting the issue.\nThe include pattern path was /partners/.* which didn't include /partners\nApologies. Please close.\n. ",
    "fenoloco": "Hi, thanks for the response.\nI'm using 1.3.10 version of the core and to activate swagger I configured the aplicacion like the code below:\n```\n@ApplicationPath(\"/rest\")\npublic class JaxRsActivator extends Application {\n@Override\npublic Set<Class<?>> getClasses() {       \n    Set<Class<?>> resources = new java.util.HashSet<>();\n    resources.add(com.wordnik.swagger.jaxrs.listing.ApiListingResource.class);\n    resources.add(com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider.class);\n    resources.add(com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON.class);\n    resources.add(com.wordnik.swagger.jaxrs.listing.ResourceListingProvider.class);\n\n```\n. Yeap, I also define the servlet .\n```\n@WebServlet(name = \"SwaggerJaxrsConfig\", loadOnStartup = 1)\npublic class SwaggerJaxrsConfig extends HttpServlet {\n//TODO get this info from the pom version.\nprivate static final String API_VERSION = \"1.0.0\";\n\n@Override\npublic void init(ServletConfig servletConfig) {\n    try {\n        super.init(servletConfig);\n        SwaggerConfig swaggerConfig = new SwaggerConfig();\n        ConfigFactory.setConfig(swaggerConfig);\n        swaggerConfig.setApiVersion(API_VERSION);\n        ScannerFactory.setScanner(new DefaultJaxrsScanner());\n        ClassReaders.setReader(new DefaultJaxrsApiReader());\n    } catch (ServletException e) {\n..\n    }\n}\n\n```\nAny ideas?\nThanks in advance.\n. All is defined on activator class, I showed only a part of it, here the whole class\n```\n@ApplicationPath(\"/rest\")\npublic class JaxRsActivator extends Application {\n@Override\npublic Set<Class<?>> getClasses() {       \n    Set<Class<?>> resources = new java.util.HashSet<>();\n    resources.add(com.wordnik.swagger.jaxrs.listing.ApiListingResource.class);\n    resources.add(com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider.class);\n    resources.add(com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON.class);\n    resources.add(com.wordnik.swagger.jaxrs.listing.ResourceListingProvider.class);\n    resources.add(xxxxxxxxxx.RestExceptionMapper.class);\n    addRestResourceClasses(resources);\n    return resources;\n}\n\nprivate void addRestResourceClasses(Set<Class<?>> resources) {\n    resources.add(xxxxxxxxxx.EntityGroupService.class);\n    resources.add(xxxxxxxxxx.GroupBranchService.class);\n}\n\n}\n```\n. Are classes, That way only accepts classes, but all implements the interfaces, and those interfaces has the JAX-RS annotations\n. Don't worry.. ask what you needs, is a pleasure give you the response in order to find the problem\nThe response is the next.\nCase 1:  Without interface\n```\n@Stateless\n@Path(\"/test\")\n@Api(value = \"/test\", description = \"Test service\")\npublic class TestServiceImpl {\n@GET\n@Path(\"/aca/\")\n@Produces(\"application/json\")\n@ApiOperation(\n        value = \"List all Cars\",\n        notes = \"List all Cars\",\n        response = Car.class,\n        responseContainer = \"List\"\n)\n@ApiResponses({\n    @ApiResponse(code = 200, message = \"Merchant created\", response = Car.class),\n    @ApiResponse(code = 412, message = \"Merchant not exist\")\n})    \npublic String list3(){\n    return \"test response\";\n}\n\n}\n```\nThe response\n```\n{\n   \"apiVersion\":\"1.0.0\",\n   \"swaggerVersion\":\"1.2\",\n   \"basePath\":null,\n   \"resourcePath\":\"/test\",\n   \"apis\":[\n      {\n         \"path\":\"/test/car/\",\n         \"operations\":[\n            {\n               \"method\":\"GET\",\n               \"summary\":\"List all Cars\",\n               \"notes\":\"List all Cars\",\n               \"type\":\"array\",\n               \"items\":{\n                  \"$ref\":\"Car\"\n               },\n               \"nickname\":\"list3\",\n               \"produces\":[\n                  \"application/json\"\n               ],\n               \"parameters\":[  \n           ],\n           \"responseMessages\":[  \n              {  \n                 \"code\":404,\n                 \"message\":\"Not exist\"\n              }\n           ]\n        }\n     ]\n  }\n\n],\n   \"models\":{\n      \"Car\":{\n         \"id\":\"Car\",\n         \"properties\":{\n            \"id\":{\n               \"type\":\"integer\",\n               \"format\":\"int64\"\n            },\n            \"model\":{\n               \"type\":\"string\"\n            }\n         }\n      }\n   }\n}\n```\nCase2: With all annotations on the interface.\n```\n@Stateless\npublic class TestServiceImpl implements TestService{\n@Override\npublic String list3(){\n    return \"test response\";\n}\n\n}\n```\n```\n@Path(\"/test\")\n@Api(value = \"/test\", description = \"Test service\")\npublic interface TestService {\n@GET\n@Path(\"/car/\")\n@Produces(\"application/json\")\n@ApiOperation(\n        value = \"List all Cars\",\n        notes = \"List all Cars\",\n        response = Car.class,\n        responseContainer = \"List\"\n)\n@ApiResponses({\n    @ApiResponse(code = 404, message = \"Not exist\")\n})\npublic String list3();\n\n}\n```\nThe service is not register for swagger, /api-docs/ not list the service and \n/rest/api-docs/test return 404\nCase3: With annotations on the interface and on the class\n```\n@Stateless\n@Path(\"/test\")\n@Api(value = \"/test\", description = \"Test service\")\npublic class TestServiceImpl implements TestService{\n@Override\n@ApiOperation(\n        value = \"List all Cars\",\n        notes = \"List all Cars\",\n        response = Car.class,\n        responseContainer = \"List\"\n)\n@ApiResponses({\n    @ApiResponse(code = 404, message = \"Not exist\")\n})\npublic String list3(){\n    return \"test response\";\n}\n\n}\n```\n```\npublic interface TestService {\n@GET\n@Path(\"/car/\")\n@Produces(\"application/json\")\npublic String list3();\n\n}\n```\nThe response don't find the @GET method so not work.. \n```\n{\n   \"apiVersion\":\"1.0.0\",\n   \"swaggerVersion\":\"1.2\",\n   \"basePath\":null,\n   \"resourcePath\":\"/test\",\n   \"apis\":[\n      {\n         \"path\":\"/test\",\n         \"operations\":[\n            {\n               \"method\":null,\n               \"summary\":\"List all Cars\",\n               \"notes\":\"List all Cars\",\n               \"type\":\"array\",\n               \"items\":{\n                  \"$ref\":\"Car\"\n               },\n               \"nickname\":\"list3\",\n               \"parameters\":[  \n           ],\n           \"responseMessages\":[  \n              {  \n                 \"code\":404,\n                 \"message\":\"Not exist\"\n              }\n           ]\n        }\n     ]\n  }\n\n],\n   \"models\":{\n      \"Car\":{\n         \"id\":\"Car\",\n         \"properties\":{\n            \"id\":{\n               \"type\":\"integer\",\n               \"format\":\"int64\"\n            },\n            \"model\":{\n               \"type\":\"string\"\n            }\n         }\n      }\n   }\n}\n1December 10th 2014, 3:33:44 pm\nVALID\nFormatted JSON Data\n{\n   \"apiVersion\":\"1.0.0\",\n   \"swaggerVersion\":\"1.2\",\n   \"basePath\":null,\n   \"resourcePath\":\"/test\",\n   \"apis\":[\n      {\n         \"path\":\"/test/car/\",\n         \"operations\":[\n            {\n               \"method\":\"GET\",\n               \"summary\":\"List all Cars\",\n               \"notes\":\"List all Cars\",\n               \"type\":\"array\",\n               \"items\":{\n                  \"$ref\":\"Car\"\n               },\n               \"nickname\":\"list3\",\n               \"produces\":[\n                  \"application/json\"\n               ],\n               \"parameters\":[  \n           ],\n           \"responseMessages\":[  \n              {  \n                 \"code\":404,\n                 \"message\":\"Not exist\"\n              }\n           ]\n        }\n     ]\n  }\n\n],\n   \"models\":{\n      \"Car\":{\n         \"id\":\"Car\",\n         \"properties\":{\n            \"id\":{\n               \"type\":\"integer\",\n               \"format\":\"int64\"\n            },\n            \"model\":{\n               \"type\":\"string\"\n            }\n         }\n      }\n   }\n}\n```\n. I got this exception\n2014-12-10 16:03:03,736 ERROR [io.undertow.request] (default task-4) UT005023: Exception handling request to /gmp-web/rest/api-docs: org.jboss.resteasy.spi.UnhandledException: java.lang.NullPointerException\n    at org.jboss.resteasy.core.SynchronousDispatcher.writeException(SynchronousDispatcher.java:157) [resteasy-jaxrs-3.0.6.Final.jar:]\n    at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:372) [resteasy-jaxrs-3.0.6.Final.jar:]\n    at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:179) [resteasy-jaxrs-3.0.6.Final.jar:]\n    at org.jboss.resteasy.plugins.server.servlet.ServletContainerDispatcher.service(ServletContainerDispatcher.java:220) [resteasy-jaxrs-3.0.6.Final.jar:]\n    at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:56) [resteasy-jaxrs-3.0.6.Final.jar:]\n    at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:51) [resteasy-jaxrs-3.0.6.Final.jar:]\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) [jboss-servlet-api_3.1_spec-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85) [undertow-servlet-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:61) [undertow-servlet-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36) [undertow-servlet-1.0.0.Final.jar:1.0.0.Final]\n    at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)\n    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:25) [undertow-core-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:113) [undertow-servlet-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.security.handlers.AuthenticationCallHandler.handleRequest(AuthenticationCallHandler.java:52) [undertow-core-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:45) [undertow-core-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:61) [undertow-servlet-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:70) [undertow-servlet-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.security.handlers.SecurityInitialHandler.handleRequest(SecurityInitialHandler.java:76) [undertow-core-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:25) [undertow-core-1.0.0.Final.jar:1.0.0.Final]\n    at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)\n    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:25) [undertow-core-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:25) [undertow-core-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:240) [undertow-servlet-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:227) [undertow-servlet-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:73) [undertow-servlet-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:146) [undertow-servlet-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.server.Connectors.executeRootHandler(Connectors.java:168) [undertow-core-1.0.0.Final.jar:1.0.0.Final]\n    at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:687) [undertow-core-1.0.0.Final.jar:1.0.0.Final]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [rt.jar:1.8.0_20]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [rt.jar:1.8.0_20]\n    at java.lang.Thread.run(Thread.java:745) [rt.jar:1.8.0_20]\nCaused by: java.lang.NullPointerException\n    at com.fasterxml.jackson.jaxrs.json.annotation.EndpointConfig.add(EndpointConfig.java:71) [jackson-jaxrs-json-provider-2.0.0.jar:]\n    at com.fasterxml.jackson.jaxrs.json.annotation.EndpointConfig.forWriting(EndpointConfig.java:63) [jackson-jaxrs-json-provider-2.0.0.jar:]\n    at com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider.writeTo(JacksonJsonProvider.java:526) [jackson-jaxrs-json-provider-2.0.0.jar:]\n    at com.wordnik.swagger.jaxrs.json.JacksonJsonProvider$Proxy$_$$_WeldClientProxy.writeTo(Unknown Source) [swagger-jaxrs_2.10-1.3.10.jar:1.3.10]\n    at org.jboss.resteasy.core.interception.AbstractWriterInterceptorContext.writeTo(AbstractWriterInterceptorContext.java:129) [resteasy-jaxrs-3.0.6.Final.jar:]\n    at org.jboss.resteasy.core.interception.ServerWriterInterceptorContext.writeTo(ServerWriterInterceptorContext.java:62) [resteasy-jaxrs-3.0.6.Final.jar:]\n    at org.jboss.resteasy.core.interception.AbstractWriterInterceptorContext.proceed(AbstractWriterInterceptorContext.java:118) [resteasy-jaxrs-3.0.6.Final.jar:]\n    at org.jboss.resteasy.security.doseta.DigitalSigningInterceptor.aroundWriteTo(DigitalSigningInterceptor.java:143) [resteasy-crypto-3.0.6.Final.jar:]\n    at org.jboss.resteasy.core.interception.AbstractWriterInterceptorContext.proceed(AbstractWriterInterceptorContext.java:122) [resteasy-jaxrs-3.0.6.Final.jar:]\n    at org.jboss.resteasy.plugins.interceptors.encoding.GZIPEncodingInterceptor.aroundWriteTo(GZIPEncodingInterceptor.java:100) [resteasy-jaxrs-3.0.6.Final.jar:]\n    at org.jboss.resteasy.core.interception.AbstractWriterInterceptorContext.proceed(AbstractWriterInterceptorContext.java:122) [resteasy-jaxrs-3.0.6.Final.jar:]\n    at org.jboss.resteasy.core.ServerResponseWriter.writeNomapResponse(ServerResponseWriter.java:99) [resteasy-jaxrs-3.0.6.Final.jar:]\n    at org.jboss.resteasy.core.SynchronousDispatcher.writeException(SynchronousDispatcher.java:153) [resteasy-jaxrs-3.0.6.Final.jar:]\n    ... 30 more\n. Thanks, don't hesitate to ask me if you need help or other information.\n. Works like a charm!!\nThanks for the support, I will use swagger on a big REST API, working with RestEasy so I think I will test it in dept :)\nThanks again.\n. An old one, I realized that the model were not working just after moving the models to the other Jar.\nI'm not hundred percent sure if this is or not the problem. Can I turn debug mode or something like that to get more information?\n. I'm using a simple jar, not OSGI so is the same classloader\nxml\n <dependency>\n            <groupId>com.wordnik</groupId>\n            <artifactId>swagger-jaxrs_2.10</artifactId>\n            <version>1.3.10</version>\n            <scope>provided</scope>\n        </dependency>\n. Yes,I use provided dependency because I added it to my custom JBoss module.\nI Already tried with version 1.3.12 and removing the provided attribute and the same happens.\n. Ok, I will try to update, is there a guide like this one :https://github.com/swagger-api/swagger-core/wiki/Swagger-Core-RESTEasy-2.X-Project-Setup#hooking-up-swagger-core-in-your-application \nFor the 1.5 version?\n. I'm using BeanConfig.\n2015-05-23 17:45 GMT-03:00 Tony Tam notifications@github.com:\n\nWhich scanner are you using? web.xml, BeanConfig, etc?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1099#issuecomment-104943648\n.\n. \n",
    "skelkar9794": "I am working on integrating Swagger in SpringMVC application (it's not springboot application) , can you mention the steps in detail. Also, what is the use of  \nI am getting error that package io.swagger.annotations does not exist.\nKindly Help ! Bit Urgent !\nEmail ID : shaileshsk94@gmail.com\n. ",
    "bluebossa63": "Yes, exaktly, the subtypes were used in the previous spec. \nWith my implementation both versions are supported.\nFor test coverage, I will try to deliver some test cases as soon as possible.\nThanks for merging!\n. ",
    "W1zzard": "Hello, for annotation its \nxml\n<dependency>\n            <groupId>com.wordnik</groupId>\n            <artifactId>swagger-jaxrs_2.10</artifactId>\n            <version>1.3.7</version>\n</dependency>\nAnd JSONs for swagger-ui generated by maven plugin\nxml\n <groupId>com.github.kongchen</groupId>\n <artifactId>swagger-maven-plugin</artifactId>\n <version>2.3.2</version>\nHere is REST method:\njava\n    @POST\n    @Path(\"/merge\")\n    @Produces(MediaType.APPLICATION_JSON)\n    @Consumes(MediaType.APPLICATION_JSON)\n    @ApiOperation(value = \"Merge several keywords.\",\n            response = KeywordDTO.class)\n    @ApiResponses(\n            value =\n                    {\n                            @ApiResponse(code = HttpURLConnection.HTTP_UNAUTHORIZED, message = \"User not authorized\"),\n                            @ApiResponse(code = HttpURLConnection.HTTP_FORBIDDEN,\n                                    message = \"User has no required permissions\")\n                    }\n    )\n    @RequiresRoles(\n            value =\n                    {\n                            \"ADMIN\"\n                    },\n            logical = Logical.OR\n    )\n    Response merge(@ApiParam(value = \"Merge keywords request\") @Valid MergeRequestDTO<KeywordDTO> request);\nAnd part of generated JSON is:\njs\n{\n    \"path\" : \"/keyword/merge\",\n    \"operations\" : [ {\n      \"method\" : \"POST\",\n      \"summary\" : \"Merge several keywords.\",\n      \"notes\" : \"\",\n      \"type\" : \"KeywordDTO\",\n      \"nickname\" : \"merge\",\n      \"produces\" : [ \"application/json\" ],\n      \"consumes\" : [ \"application/json\" ],\n      \"parameters\" : [ {\n        \"name\" : \"body\",\n        \"description\" : \"Merge keywords request\",\n        \"required\" : false,\n        \"items\" : {\n          \"$ref\" : \"KeywordDTO\"\n        },\n        \"paramType\" : \"body\",\n        \"allowMultiple\" : false\n      } ],\n      \"responseMessages\" : [ {\n        \"code\" : 401,\n        \"message\" : \"User not authorized\"\n      }, {\n        \"code\" : 403,\n        \"message\" : \"User has no required permissions\"\n      } ]\n    } ]\n  }\nHere in parameters no field \"type\"\n. I will check it tommorow, need to modify project config for that.\n. Sorry cant check it, can add support of swagger servlet because project bound to org.glassfish.jersey.servlet.ServletContainer\n. ",
    "reta": "Absolutely, will do that asap! Thanks!\n. Absolutely, will do that asap! Thanks!\n. Resubmitted as https://github.com/swagger-api/swagger-core/pull/797. Thanks!\n. Thanks a lot! Not a problem, I would be happy to investigate the \"scan.all.resources\" option and make sure there is no conflicts or side effects (I will pick it up right after the merge in order to not mess up with code). Thanks!\n. @webron - Yes, I think so. It could be useful. Do you want me to submit a PR against 1.5? Thanks.\n. Awesome, will try to submit the PR this week. Thanks!\n. @webron Would you guys merge this PR into develop_scala-2.10 / v1.3.xxx release? Thanks.\n. @webron - thanks a lot for clarification, IMHO it would be good to see 1.3.13 rolled out (1.3 is widely used) but it is definitely up to you guys to decide. \n. Hey @webron. Sorry for delay, finally found the time and resubmitted this feature against Swagger 1.5 (develop_2.0 branch, https://github.com/swagger-api/swagger-core/pull/961)\n. Hi Francesco,\nThanks a lot for your review and feedback. I think it is pretty good idea to have base path handled uniformly. I will do the change and update the PR shortly. Thank you!\nBest Regards,\n    Andriy Redko\n. Hi Francesco,\nThe PR has been updated to normalize base path (by adding leading and trailing slashes), test cases, SwaggerContextService and ApiListingResources have been updated to use the proper property. Thanks again for spotting that.\nBest Regards,\n    Andriy Redko\n. @webron @frantuma The PR has been rebased, thanks guys.\n. @frantuma  @webron What do you think guys, could we merge this PR? Thanks in advance.\n. Awesome, thanks a lot, @webron !\n. Hey @swag-cxf ,\nThanks a lot for your comments. Swagger2Feature is going to be updated once the Swagger Core (with this PR merged) is released. The patch is actually ready but CXF cannot depend on snapshot but release versions only (as a rule).  The usage for non-OSGi / OSGi deployment looks pretty much how you posted it in here (XML snippet). Anyway, I would be happy to share the patch with you if you need it.\nSorry for not answering earlier, @webron, it is definitely CXF land :-)\nThank you!\nBest Regards,\n    Andriy Redko\n. Yeah, it needs is a little bit more work than just that. @swag-cxf , I will attach the patch against master to https://issues.apache.org/jira/browse/CXF-6740, today or tomorrow at latest. Thanks.\n. Thanks a lot, @webron !\n. @swag-cxf Patch against latest master attached to https://issues.apache.org/jira/browse/CXF-6740 (CXF-6740-Collision-by-Swagger.patch), please give it a try. We've tested it and it works perfectly fine, as expected (samples available jax_rs/description_swagger2_osgi,  jax_rs/description_swagger2_per_path_config). \nPlease post your comments / issues on CXF ticket, we'll try to address them.\nThank you.\n. Hi @frantuma ,\nThanks for the reply, I see it in the swagger-core's, pom.xml\n<guava-version>23.0</guava-version>\nIt may not be used by Swagger directly but the Guava deps come from reflections library as well. However, due to the fact that Swagger asks for higher version, this is what is generated in the OSGi manifest for swagger-jaxrs2 module:\nImport-Package: ... com.google.common.base;version=\"[23.0,24)\", ...\nAlternatively, it would be simpler to downgrade the Guava in  swagger-core's, pom.xml to 20.0, the problem will be gone as well.\n<guava-version>20.0</guava-version>\nWhat do you think? Thanks!\nBest Regards,\n    Andriy Redko. Hi @frantuma,\nYes, certainly, that would solve it. Confirmed by the manifest:\nImport-Package: ..., com.google.common.base;version=\"[20.0,21)\",\nThank you.\nBest Regards,\n    Andriy Redko. Closing in favor of https://github.com/swagger-api/swagger-core/pull/2698. This will also put back the proper transitive Guava dependency to jaxrs2 module, thank you @frantuma . ",
    "weboguy": "I meant that I have only one resource that serves request which has only one QueryParam 'q' which is used to do different kinds of searches in my application, for e.g. \nhttp://localhost:8080/xyz/abc/search?q=id%3DbzMyWVVIWlcybDNKQXpqdnpKeTA=\nOR\nhttp://localhost:8080/xyz/abc/search?q=txnNo=Abc12345678 \nOR\nhttp://localhost:8080/xyz/abc/search?q=txnStatus='Fulfilled'\nOR\nhttp://localhost:8080/xyz/abc/search?q=txnStatus='Unfulfilled'\nOR\nhttp://localhost:8080/xyz/abc/search?q=txnStatus='Pending'\nSo in all of above requests the @QueryParam q can contain any of the search strings described.\nHope I have made it more clear this time.\n. I meant that I have only one resource that serves request which has only one QueryParam 'q' which is used to do different kinds of searches in my application, for e.g. \nhttp://localhost:8080/xyz/abc/search?q=id%3DbzMyWVVIWlcybDNKQXpqdnpKeTA=\nOR\nhttp://localhost:8080/xyz/abc/search?q=txnNo=Abc12345678 \nOR\nhttp://localhost:8080/xyz/abc/search?q=txnStatus='Fulfilled'\nOR\nhttp://localhost:8080/xyz/abc/search?q=txnStatus='Unfulfilled'\nOR\nhttp://localhost:8080/xyz/abc/search?q=txnStatus='Pending'\nSo in all of above requests the @QueryParam q can contain any of the search strings described.\nHope I have made it more clear this time.\n. Is there a sample that you may include here to show how regex can be used along with Swagger Annotations. The api docs response should be as described above,\n. Is there a sample that you may include here to show how regex can be used along with Swagger Annotations. The api docs response should be as described above,\n. ",
    "maneeshsahu": "Ah ha! I see AuthorisationFilter now. This should solve it. Thank you!\n. Ah ha! I see AuthorisationFilter now. This should solve it. Thank you!\n. This app is on play 2.2.2 that is why we are using 1.3.7. Is there a SNAPSHOT for play 2.2.2?\n. ",
    "zyro23": "just checking if i understood the approach correctly: if we want to express constraints for the swagger spec now but we are not using bean validation, we are expected to annotate the properties with jsr-303 anyway (just for swagger purposes)?\nor is it still planned that swagger annotations will be added that cover the property-related information?\nthank you, zyro\n. nice! any chances for a 1.5.3-M1 containing the enum support?\nthanks, zyro\n. ok. will have to wait then. or are maybe snapshots published somewhere? thanks for the quick reply! zyro\n. could the reader class for this be implemented in a fashion so that jax rs annotations/classes are supported but their use is not mandatory to annotate an api?\nwhat i am after is to use only swagger annotations to annotate an api staying more agnostic wrt the actual rest implementation that is used, including a way to map any method to an arbitrary path.\ni think currently, the only missing part is a @ApiPath (or similar) annotation which can be used to express the path a method maps to (current servlet reader impl. uses the value of @Api for all @ApiOperation-annotated methods). Or a path attribute for @ApiOperation would do the job as well, i guess.\nbesides that, using @Api, @ApiImplicitParam, @ApiImplicitParams, @ApiOperation, @ApiResponse and @ApiResponses works reasonably well to completely annotate resources/classes where methods represent paths.\nthanks, zyro\n. essentially i want to be able to annotate an api using the swagger-servlet module without using jax-rs as rest impl. that includes allowing multiple methods within one class/resource to be mapped to different paths.\n. https://gist.github.com/zyro23/c5be1b659a2de22f12f9\nthat gist shows a simplified grails controller (a rest resource) with two operations. those two methods should be mapped to different paths. it would be nice if that could be expressed with swagger annotations in a way that the migrated swagger-servlet reader impl. is able to parse.\ni hope u do not mind using grails as example (groovy syntax..). this should not be specific to any framework or any rest implementation.\nhope that helps? if this is not the right place for this kind of discussion or that request, im happy to open a new issue.\n. thank you. ill give the migrated swagger-servlet module a spin once it is in shape and then raise this idea again as a new issue if still necessary.\n. i understand that this is tagged Feature for the idea of adding an access param to @ApiOperation.\nhowever, i fail to see how the currently available @ApiModelProperty.access is supposed to be used properly if it cannot be evaluated from a SwaggerSpecFilter?\ni would be ok with a workaround in the meantime, too. thanks, zyro\n. sure will quickly open a new one for the @ApiModelProperty \"bug\" as this one is now already tagged feature\n. #1150 ?\n. just being curious - do you have another field in mind? currently, the method name is implemented as fallback if nickname is not set but that bears the same problem of being non-unique (across resources at least, ref. https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-servlet/src/main/java/io/swagger/servlet/extensions/ServletReaderExtension.java#L224).\n. yes i meant as fallback for operationId \"generation\" or rather which annotation attributes could/should be used for path and/or operationId if those are handled seperately. did not know operationId is optional, so defaulting to an empty value is fine of course.\nside-note reg. the migrated swagger-servlet module: currently using it successfully without jax-rs which means it is already working as i requested in #919. just awesome.\n. please note that it seems @ApiOperation.nickname is used as path from swagger-core-1.5.14 on (ref. https://github.com/swagger-api/swagger-core/commit/5d13697fe715e488068ec173f4dd902753c0524a).\nbut as @ApiOperation.nickname is also used as operationId, this still causes duplicate ids for endpoints with different methods having the same path\n(https://github.com/swagger-api/swagger-core/blob/v1.5.17/modules/swagger-servlet/src/main/java/io/swagger/servlet/extensions/ServletReaderExtension.java#L232).\nalso, the 1.5.14 change referenced above has not (yet?) landed on the 2.0 branch\n(https://github.com/swagger-api/swagger-core/blob/2.0/modules/swagger-servlet/src/main/java/io/swagger/servlet/extensions/ServletReaderExtension.java#L218).\nas there has been a change in a non-major release now, it would be great if we could fix this and restore consistency across the release branches as well.\nthank you!. could this fix be applied to swagger-servlet as well?. ",
    "t1": "Spoc is nice, but it requires Groovy, which is also fine, but poses the same downside as scalatest requiring Scala.\nI recently stumbled over assertj and started to use it in some of my projects. It makes writing very good assertions really easy. IMHO, using this makes a bigger difference than using TestNG of JUnit.\n. Spoc is nice, but it requires Groovy, which is also fine, but poses the same downside as scalatest requiring Scala.\nI recently stumbled over assertj and started to use it in some of my projects. It makes writing very good assertions really easy. IMHO, using this makes a bigger difference than using TestNG of JUnit.\n. TestNG is great, and assertj augments it nicely :-)\n. TestNG is great, and assertj augments it nicely :-)\n. tried it with 1.5.0 and haven't found any issues in github for this\n. I'd love to contribute a patch, but I'm not getting it to build OOTB. Maven complains that it can't resolve the Felix build extension: Plugin org.apache.felix:maven-bundle-plugin:0.8.0-incubator or one of its dependencies could not be resolved: Failed to collect dependencies at org.apache.felix:maven-bundle-plugin:jar:0.8.0-incubator -> biz.aQute:bnd:jar:0.0.106\nMaybe I'm missing something?\n. Retrying with a clean ~/.m2/repository helped. Sorry for bothering.\n. I was too slow ;-)\n. I'd like to work on a patch for this issue.\n. I've created pull request 1192\n. I've updated pull#1192 as requested. Can I improve anything else on it?\n. I've updated pull#1192 as requested. Can I improve anything else on it?\n. I had the tabs already removed in 048b8d2\n. I had the tabs already removed in 048b8d2\n. Can I do anything to allow this to be pulled?\n. Can I do anything to allow this to be pulled?\n. @olensmar: I've migrated the test from scala to java :-)\n. @olensmar: I've migrated the test from scala to java :-)\n. io.swagger.jackson.SwaggerModule looks like the anonymous class in AbstractModelConverter.\n. io.swagger.jackson.SwaggerModule looks like the anonymous class in AbstractModelConverter.\n. In what regard is the JacksonJsonProvider required for backward compatibility? There are no tests for that :-)\n. I fully appreciate the desire to stay backward compatible. Just how exactly is the JacksonJsonProvider required for that?\n. > There's no harm in it being there.\nMaybe I'm missing something, but we've experienced a lot of issues due to the fact that swagger-core registers JacksonJsonProvider as the provider for application/json. We need a different Jackson configuration for the serialization to work. It would have been okay, if swagger would define a vendor specific media type like application/vnd.swagger+json, but now it just breaks our apps.\n. > There's no harm in it being there.\nMaybe I'm missing something, but we've experienced a lot of issues due to the fact that swagger-core registers JacksonJsonProvider as the provider for application/json. We need a different Jackson configuration for the serialization to work. It would have been okay, if swagger would define a vendor specific media type like application/vnd.swagger+json, but now it just breaks our apps.\n. > If you don't want it, please make sure it's not in your scanning path.\nHow can I exclude JacksonJsonProvider from being scanned, if I include the swagger-jaxrs jar in my Java EE app? This was the path I was heading before I started to create this PR, but the scanning is done automatically, I'm not in a Dropwizard ;-)\n. > If you don't want it, please make sure it's not in your scanning path.\nHow can I exclude JacksonJsonProvider from being scanned, if I include the swagger-jaxrs jar in my Java EE app? This was the path I was heading before I started to create this PR, but the scanning is done automatically, I'm not in a Dropwizard ;-)\n. I'm not configuring Jersey ;-) I'm in a Java EE 6 container (namely JBoss 7), which ServiceLoader-scans for MessageBodyReaders/Writers, finding Jackson bound to */*, and the Swagger-JacksonJsonProvider bound to application/json. This results in various strange behaviors: E.g., if a client passes a vendor type, it uses the correct one, and if a client passes application/json, it uses the Swagger binding, which does not work correctly for all types, as this one doesn't, e.g., ServiceLoader-scan the modules.\n. I'm not configuring Jersey ;-) I'm in a Java EE 6 container (namely JBoss 7), which ServiceLoader-scans for MessageBodyReaders/Writers, finding Jackson bound to */*, and the Swagger-JacksonJsonProvider bound to application/json. This results in various strange behaviors: E.g., if a client passes a vendor type, it uses the correct one, and if a client passes application/json, it uses the Swagger binding, which does not work correctly for all types, as this one doesn't, e.g., ServiceLoader-scan the modules.\n. > Can you include specific property packages or classes to scan?\nNot that I'm aware of, no. But I don't see the use-case, either. If something is annotated as @Provider, it is supposed to be found. You just have to be careful to just annotate things that work in the way they are supposed to work, and this JacksonJsonProvider doesn't handle application/json in general. Maybe we should not remove the JacksonJsonProvider but merely the @Provider annotation? Should still work when registering manually somewhere, shouldn't it? I'd then also rename it to SwaggerJsonProvider, so the name reflects the function.\nBTW: The SwaggerModule looks like a duplicate of the anonymous inner class in the constructor of AbstractModelConverter.\n. > Can you include specific property packages or classes to scan?\nNot that I'm aware of, no. But I don't see the use-case, either. If something is annotated as @Provider, it is supposed to be found. You just have to be careful to just annotate things that work in the way they are supposed to work, and this JacksonJsonProvider doesn't handle application/json in general. Maybe we should not remove the JacksonJsonProvider but merely the @Provider annotation? Should still work when registering manually somewhere, shouldn't it? I'd then also rename it to SwaggerJsonProvider, so the name reflects the function.\nBTW: The SwaggerModule looks like a duplicate of the anonymous inner class in the constructor of AbstractModelConverter.\n. We could switch to manual configuration, but automatic scanning saves us a lot of work, and hasn't caused a lot trouble before.\nI guess it's just the @Provider annotation. It's intended for automatic scanning. The javadoc says:\n\nMarks an implementation of an extension interface that should be discoverable by JAX-RS runtime during a provider scanning phase.\n\nSo this annotation should not be put on the JacksonJsonProvider if it's not intended to be auto-scanned.\n. We could switch to manual configuration, but automatic scanning saves us a lot of work, and hasn't caused a lot trouble before.\nI guess it's just the @Provider annotation. It's intended for automatic scanning. The javadoc says:\n\nMarks an implementation of an extension interface that should be discoverable by JAX-RS runtime during a provider scanning phase.\n\nSo this annotation should not be put on the JacksonJsonProvider if it's not intended to be auto-scanned.\n. These changes are unrelated to the issue... they just simplify building.\n. These changes are unrelated to the issue... there just where tabs in the source\n. These changes are unrelated to the issue... just the xml dataformat is not required\n. ",
    "evant": "It really is everywhere, but for example in https://github.com/swagger-api/swagger-core/blob/develop_2.0/modules/swagger-models/src/main/java/com/wordnik/swagger/models/ModelImpl.java if you don't add any properties then getProperties() returns null. If performance is your issue, you can simply return Collections.emptyList() etc. which will reuse the same singleton object.\n. ",
    "elirazBusi": "Thanks for the response.\nActually what I'm trying to do is to make Swagger play with dynamic resources.\nDo you know a way that would help me do that ?\n. I see. thanks !\n. ",
    "vbeffa": "Hm, I'm not sure if this is the right version but this is what we have in build.sbt (this is a Scala project):\n\"com.gettyimages\" %% \"spray-swagger\" % \"0.5.0\" excludeAll(ExclusionRule(organization = \"io.spray\")\n. OK thanks. Sorry for the confusion.\n. ",
    "javatestcase": "If I may throw a tangential note in as well... It seems like most major platforms (Spring, Jersey, RESTEasy at least) support Bean Validation 1.1 (JSR-349) at this point.  It's probably an outrageous amount of work, but it would be incredible if we could scan those validations.  That would make this request (and much of the @ApiModelProperty properties obsolete.\n. Thanks Ron.  I should have guessed.  You guys are doing amazing work here.\n. ",
    "iuliamiron": "Now i got this exception:\norg.osgi.service.blueprint.container.ComponentDefinitionException: At least one Setter method has to match the type of the Getter method for property scan\nBecause in setScan it's used primitive type boolean instead of Boolean.\n. ",
    "unoexperto": "Yes. I'll fork and modify spray-swagger most likely to search for annotations on Scala val-s (currently it checks only top-level methods), but for that I'd need ApiOperation to have additional target.\n. Guys, what's the ETA for the fix of this ?\n. Here is list of my dependencies\nscala\n            \"org.glassfish.jersey.containers\" % \"jersey-container-servlet\" % \"2.15\",\n            \"org.glassfish.jersey.media\" % \"jersey-media-json-jackson\" % \"2.15\",\n            \"com.fasterxml.jackson.core\" % \"jackson-databind\" % \"2.5.0\",\n            \"com.fasterxml.jackson.core\" % \"jackson-core\" % \"2.5.0\",\n            \"com.fasterxml.jackson.core\" % \"jackson-annotations\" % \"2.5.0\",\n            \"com.wordnik\" % \"swagger-jersey2-jaxrs_2.11\" % \"1.3.12\",\nI don't have application class. Interestingly enough all my @Path classes work and serve content in both methods of initialization via web.xml.\n. Yeah, I thought that too and tried adding it after I posted this issue but strangely it didn't help. I'm investigating it right now.\nAs per Swagger I can't come up with working solution for now :(\n. He he :) Could you please give me ResourceConfig version of the solution ?\nBy the way, why do you need com.wordnik:swagger-jaxrs_2.11 in com.wordnik:swagger-jersey2-jaxrs_2.11 ? I might try to exclude it in maven script.\nUPDATE: Ah damn, it's because of com.wordnik.swagger.annotations...\n. Could you decouple these two libraries instead so that there are no duplicating JAX-RS provides in the classpath ?\n. I see. So I'm still fighting with it here here is what I found.\n- I switched to com.wordnik:swagger-jaxrs_2.11\n- Use javax.ws.rs.core.Application method of initialization\nIf I have Swaggers providers in classpath my ContextResolver<ObjectMapper> never initialized. It seems like presense of Swagger breaks Jersey's autodiscovery mechanism.\n. Sadly I couldn't figure out why it's happening. If you find root cause please update this issue.\nI only found this. In your com.wordnik.swagger.jaxrs.json.JacksonJsonProvider you call super.setMapper(commonMapper). That sets non-null value to ProviderBase._mapperConfig._mapper. Later when http request handler attempts to serialize instance of my class call ends up in ProviderBase.locateMapper which has following body\njava\n    public MAPPER locateMapper(Class<?> type, MediaType mediaType)\n    {\n        // First: were we configured with a specific instance?\n        MAPPER m = _mapperConfig.getConfiguredMapper();\n        if (m == null) {\n            // If not, maybe we can get one configured via context?\n            m = _locateMapperViaProvider(type, mediaType);\n            if (m == null) {\n                // If not, let's get the fallback default instance\n                m = _mapperConfig.getDefaultMapper();\n            }\n        }\n        return m;\n    }\nin correct code-flow _mapperConfig.getConfiguredMapper() returns null which subsequently causes invocation of _locateMapperViaProvider which finds my custom mapper. With Swagger it defaults to com.fasterxml.jackson.jaxrs.json.JsonMapperConfigurator and my custom json serializers never get invoked.\nI'll try to create small isolated sample project in few days that reproduces the issue and will post it on GitHub.\nIn the mean time I'll have to maintain API documentation manually :(\n. Here we go\nhttps://github.com/cppexpert/broken_swagger_jaxrs_integration\n. Oops. I accidentally left wrong webroot from my big project. Please update.\n. I changed description of the issue as I discovered real cause of it. Initially I thought problem lies in how I enable Jersey in web.xml.\nYep, I intentionally simplified example project. In my real project API documentation is working.\nYes, I tested 1.5.0-M1 as well. Web-service doesn't give error about missing serializer but returns empty json instead. ObjectMapperProvider is still not used.\n. Thank you, guys ! If we fix it I'll be tremendously happy.Let me know if I can help somehow.\n. Guys, I just tried switching to new 1.5.0\nSadly I can't have it get initialized now. I get following exception\njson\n{\n  \"error\": {\n    \"type\": \"GenericException\",\n    \"message\": \"NotFoundException: HTTP 404 Not Found\",\n    \"stackTrace\": \"javax.ws.rs.NotFoundException: HTTP 404 Not Found\\r\\n\\tat org.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:305)\\r\\n\\tat org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\\r\\n\\tat org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\\r\\n\\tat org.glassfish.jersey.internal.Errors.process(Errors.java:315)\\r\\n\\tat org.glassfish.jersey.internal.Errors.process(Errors.java:297)\\r\\n\\tat org.glassfish.jersey.internal.Errors.process(Errors.java:267)\\r\\n\\tat org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\\r\\n\\tat org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:291)\\r\\n\\tat org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1140)\\r\\n\\tat org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:403)\\r\\n\\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:386)\\r\\n\\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:334)\\r\\n\\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:221)\\r\\n\\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:751)\\r\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1666)\\r\\n\\tat org.tuckey.web.filters.urlrewrite.RuleChain.handleRewrite(RuleChain.java:176)\\r\\n\\tat org.tuckey.web.filters.urlrewrite.RuleChain.doRules(RuleChain.java:145)\\r\\n\\tat org.tuckey.web.filters.urlrewrite.UrlRewriter.processRequest(UrlRewriter.java:92)\\r\\n\\tat org.tuckey.web.filters.urlrewrite.UrlRewriteFilter.doFilter(UrlRewriteFilter.java:381)\\r\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1636)\\r\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:564)\\r\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\\r\\n\\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:578)\\r\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\\r\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1111)\\r\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:498)\\r\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)\\r\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1045)\\r\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\\r\\n\\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:199)\\r\\n\\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)\\r\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:98)\\r\\n\\tat org.eclipse.jetty.server.Server.handle(Server.java:461)\\r\\n\\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:284)\\r\\n\\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:244)\\r\\n\\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:534)\\r\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:607)\\r\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:536)\\r\\n\\tat java.lang.Thread.run(Thread.java:745)\\r\\n\"\n  }\n}\nAlso I see in the debugger that this class io.swagger.jaxrs.listing.ApiListingResource is never invoked. Could it be regression of this bug https://github.com/swagger-api/swagger-core/issues/862 ?\nMy web.xml has this\nxml\n    <servlet>\n        <servlet-name>DefaultJaxrsConfig</servlet-name>\n        <servlet-class>io.swagger.jaxrs.config.DefaultJaxrsConfig</servlet-class>\n        <init-param>\n            <param-name>api.version</param-name>\n            <param-value>1.0.0</param-value>\n        </init-param>\n        <load-on-startup>2</load-on-startup>\n    </servlet>\nand ResourceConfig has this\njava\n        packages(\"com.company.api2\", \"io.swagger.jaxrs.listing\");\n. I was in old version of \"develop_scala-2.11\" branch. I'll test with the latest version soon.\n. Oh I had no idea. Thanks!\n. JFYI I've got that error under JDK8u40 under Windows 7 64bit.\n. Oh, I didn't know it exists and was going to ask you if I could define implicit param per @Api instead of specifying it per each method :)\nI cannot find it in the documentation. Could you please show me example of definition of token param which is query param for each endpoint ?\nUPD:\nSadly it looks like implicit params are broken completely. token is not show in docs for following methods either :(((\njava\n@GET\n@Produces(MediaType.APPLICATION_JSON)\n@Path(\"timesheetEntries\")\n@ApiOperation(response = ListResponse.TimesheetEntriesResponse.class, value = \"Returns list of project current user can charge time to\")\n@ApiImplicitParams({@ApiImplicitParam(name = \"token\", required = true, dataType = \"string\", paramType = \"query\", value = \"API token\")})\npublic ListResponse<TimesheetEntryWire> getTimesheetEntries(\n        @ApiParam(required = true, value = \"ID of timesheet\") @QueryParam(\"timesheetId\") long timesheetId) {}\n. Sadly it didn't work me. Here is my Bootstrap class\n``` java\nclass PropertyConverter implements ModelConverter {\nprivate final Class<?> classToIntercept;\nprivate final Property property;\n\npublic PropertyConverter(Class<?> clazz, Property property) {\n    this.classToIntercept = clazz;\n    this.property = property;\n}\n\n@Override\npublic Property resolveProperty(Type type, ModelConverterContext context, Iterator<ModelConverter> chain) {\n    JavaType _type = Json.mapper().constructType(type);\n    if(_type != null){\n        Class<?> cls = _type.getRawClass();\n        if(classToIntercept.isAssignableFrom(cls))\n            return property;\n    }\n    return chain.hasNext() ? chain.next().resolveProperty(type, context, chain) : null;\n}\n\n@Override\npublic Model resolve(Type type, ModelConverterContext context, Iterator<ModelConverter> chain) {\n    return chain.hasNext() ? chain.next().resolve(type, context, chain) : null;\n}\n\n}\npublic class SwaggerBootstrap extends HttpServlet {\n    @Override\n    public void init(ServletConfig config) throws ServletException {\n        super.init(config);\n    Info info = new Info()\n            .title(\"crazyrabbit API\")\n            .description(\"Documentation on RESTful JSON-based crazyrabbit API (located at /api/*)\")\n            .contact(new Contact()\n                    .email(\"rrrrr@crazyrabbit.com\"));\n\n    ServletContext context = config.getServletContext();\n    Swagger swagger = new Swagger().info(info);\n    swagger.securityDefinition(\"api_key\", new ApiKeyAuthDefinition(\"token\", In.QUERY));\n\n//        swagger.securityDefinition(\"petstore_auth\",\n//                new OAuth2Definition()\n//                        .implicit(\"http://petstore.swagger.io/api/oauth/dialog\")\n//                        .scope(\"read:pets\", \"read your pets\")\n//                        .scope(\"write:pets\", \"modify pets in your account\"));\n        context.setAttribute(\"swagger\", swagger);\n    /////\n\n    ModelConverters.getInstance().addConverter(new PropertyConverter(TTLocalDate.class, new StringProperty()));\n\n    BeanConfig beanConfig = new BeanConfig();\n    beanConfig.setResourcePackage(\"com.crazyrabbit.api2\");\n\n//        beanConfig.setTitle(\"crazyrabbit API\");\n//        beanConfig.setVersion(\"1.1\");\n//        beanConfig.setDescription(\"Documentation on RESTful JSON-based crazyrabbit API (located at /api/*)\");\n//        beanConfig.setBasePath(\"/api\");\n//        beanConfig.setContact(\"rrrr@crazyrabbit.com\");\n    beanConfig.setScan(true);\n}\n\n}\n```\nAlso Info seems to be ignored. Information about API is not displayed in docs at all.\nHere is one of endpoints with defined authorization field\njava\n@GET\n@Produces(MediaType.APPLICATION_JSON)\n@Path(\"timesheet\")\n@ApiOperation(response = ListResponse.TimesheetsResponse.class, value = \"Returns timesheet\", authorizations = @Authorization(value = \"api_key\", type = \"api_key\"))\npublic TimesheetWire getTimesheet(@ApiParam(required = false, value = \"ID of timesheet\") @QueryParam(\"id\") int id) {}\n. Sure,\n``` json\n{\n  \"swagger\": \"2.0\",\n  \"info\": {\n},\n  \"tags\": [\n    {\n      \"name\": \"unauthenticated\",\n      \"description\": \"Unauthenticated endpoints\"\n    },\n    {\n      \"name\": \"authenticated\",\n      \"description\": \"Authenticated endpoints (requires API token)\"\n    }\n  ],\n  \"paths\": {\n    \"/authenticated/billableProjects\": {\n      \"get\": {\n        \"tags\": [\n          \"authenticated\"\n        ],\n        \"summary\": \"Returns list of project current user can charge time to\",\n        \"description\": \"\",\n        \"operationId\": \"getBillableProjects\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"timesheetId\",\n            \"in\": \"query\",\n            \"description\": \"ID of timesheet\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          {\n            \"name\": \"searchText\",\n            \"in\": \"query\",\n            \"description\": \"Search query timesheet title will be filtered by\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"applyMyProjectsFilter\",\n            \"in\": \"query\",\n            \"description\": \"flag to apply My Projects filter\",\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"starting position for paginated response\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"number of items to return\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ProjectsResponse\"\n            }\n          }\n        }\n      }\n    },\n    \"/authenticated/myTasks\": {\n      \"get\": {\n        \"tags\": [\n          \"authenticated\"\n        ],\n        \"summary\": \"Returns tasks from 'My Tasks' for current user\",\n        \"description\": \"\",\n        \"operationId\": \"getMyTasks\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"starting position for paginated response\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"number of items to return\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/TasksResponse\"\n            }\n          }\n        }\n      }\n    },\n    \"/authenticated/projectTimesheetEntry\": {\n      \"post\": {\n        \"tags\": [\n          \"authenticated\"\n        ],\n        \"summary\": \"Creates new project timesheet entries and returns ALL entries for specified timesheet\",\n        \"description\": \"\",\n        \"operationId\": \"addProjectTimesheetEntry\",\n        \"consumes\": [\n          \"application/json\"\n        ],\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"body\",\n            \"name\": \"body\",\n            \"description\": \"input parameters in json form\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/definitions/AddTimesheetEntriesRequest\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/AddTimesheetEntriesResponse\"\n            }\n          }\n        }\n      }\n    },\n    \"/authenticated/rolesForTimesheet\": {\n      \"get\": {\n        \"tags\": [\n          \"authenticated\"\n        ],\n        \"summary\": \"Returns roles the current user can charge to a task within a project for a specific timesheet\",\n        \"description\": \"\",\n        \"operationId\": \"getRoles\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"timesheetId\",\n            \"in\": \"query\",\n            \"description\": \"ID of timesheet\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          {\n            \"name\": \"projectId\",\n            \"in\": \"query\",\n            \"description\": \"ID of project\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          {\n            \"name\": \"taskId\",\n            \"in\": \"query\",\n            \"description\": \"ID of task\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"starting position for paginated response\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"number of items to return\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/RolesResponse\"\n            }\n          }\n        }\n      }\n    },\n    \"/authenticated/tasksForTimesheet\": {\n      \"get\": {\n        \"tags\": [\n          \"authenticated\"\n        ],\n        \"summary\": \"Returns tasks available within a Project for the current user to charge time to\",\n        \"description\": \"\",\n        \"operationId\": \"getTasksForTimesheet\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"timesheetId\",\n            \"in\": \"query\",\n            \"description\": \"ID of timesheet\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          {\n            \"name\": \"projectId\",\n            \"in\": \"query\",\n            \"description\": \"ID of project\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"starting position for paginated response\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"number of items to return\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/TasksResponse\"\n            }\n          }\n        }\n      }\n    },\n    \"/authenticated/timesheet\": {\n      \"get\": {\n        \"tags\": [\n          \"authenticated\"\n        ],\n        \"summary\": \"Returns timesheet\",\n        \"description\": \"\",\n        \"operationId\": \"getTimesheet\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"ID of timesheet\",\n            \"required\": false,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/TimesheetsResponse\"\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": [\n        ]\n      }\n    ]\n  }\n},\n\"/authenticated/timesheetEntries\": {\n  \"get\": {\n    \"tags\": [\n      \"authenticated\"\n    ],\n    \"summary\": \"Returns list of project current user can charge time to\",\n    \"description\": \"\",\n    \"operationId\": \"getTimesheetEntries\",\n    \"produces\": [\n      \"application/json\"\n    ],\n    \"parameters\": [\n      {\n        \"name\": \"timesheetId\",\n        \"in\": \"query\",\n        \"description\": \"ID of timesheet\",\n        \"required\": false,\n        \"type\": \"integer\",\n        \"format\": \"int64\"\n      }\n    ],\n    \"responses\": {\n      \"200\": {\n        \"description\": \"successful operation\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/TimesheetEntriesResponse\"\n        }\n      }\n    }\n  }\n},\n\"/authenticated/timesheets\": {\n  \"get\": {\n    \"tags\": [\n      \"authenticated\"\n    ],\n    \"summary\": \"Returns list of recent timesheets\",\n    \"description\": \"\",\n    \"operationId\": \"getTimesheets\",\n    \"produces\": [\n      \"application/json\"\n    ],\n    \"parameters\": [\n      {\n        \"name\": \"limit\",\n        \"in\": \"query\",\n        \"description\": \"number of the latest items to return (default is 5)\",\n        \"required\": false,\n        \"type\": \"integer\",\n        \"default\": \"5\",\n        \"format\": \"int32\"\n      },\n      {\n        \"name\": \"withEntries\",\n        \"in\": \"query\",\n        \"description\": \"include timesheet entries (default is true)\",\n        \"required\": false,\n        \"type\": \"boolean\",\n        \"default\": \"true\"\n      }\n    ],\n    \"responses\": {\n      \"200\": {\n        \"description\": \"successful operation\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/TimesheetsResponse\"\n        }\n      }\n    }\n  }\n},\n\"/authenticated/updateTimesheet\": {\n  \"put\": {\n    \"tags\": [\n      \"authenticated\"\n    ],\n    \"summary\": \"Updates notes field of specific timesheet\",\n    \"description\": \"\",\n    \"operationId\": \"updateTimesheet\",\n    \"produces\": [\n      \"application/json\"\n    ],\n    \"parameters\": [\n      {\n        \"name\": \"timesheetId\",\n        \"in\": \"query\",\n        \"description\": \"ID of timesheet\",\n        \"required\": false,\n        \"type\": \"integer\",\n        \"format\": \"int64\"\n      },\n      {\n        \"name\": \"notes\",\n        \"in\": \"query\",\n        \"description\": \"Notes\",\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    ],\n    \"responses\": {\n      \"default\": {\n        \"description\": \"successful operation\"\n      }\n    }\n  }\n},\n\"/unauthenticated/apiTokenForUsernamePassword\": {\n  \"get\": {\n    \"tags\": [\n      \"unauthenticated\"\n    ],\n    \"summary\": \"Authenticates user by username and password\",\n    \"description\": \"\",\n    \"operationId\": \"authenticate\",\n    \"produces\": [\n      \"application/json\"\n    ],\n    \"parameters\": [\n      {\n        \"name\": \"username\",\n        \"in\": \"query\",\n        \"description\": \"Username of user\",\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"password\",\n        \"in\": \"query\",\n        \"description\": \"Password for user\",\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    ],\n    \"responses\": {\n      \"200\": {\n        \"description\": \"successful operation\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/AuthResponse\"\n        }\n      },\n      \"500\": {\n        \"description\": \"Incorrect username or password\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/ErrorResponse\"\n        }\n      }\n    }\n  }\n},\n\"/unauthenticated/apiTokenForWebUser\": {\n  \"get\": {\n    \"tags\": [\n      \"unauthenticated\"\n    ],\n    \"summary\": \"Returns user object for logged-in user\",\n    \"description\": \"\",\n    \"operationId\": \"getApiToken\",\n    \"produces\": [\n      \"application/json\"\n    ],\n    \"responses\": {\n      \"200\": {\n        \"description\": \"successful operation\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/AuthResponse\"\n        }\n      },\n      \"500\": {\n        \"description\": \"User must log-in via web\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/ErrorResponse\"\n        }\n      }\n    }\n  }\n}\n\n},\n  \"securityDefinitions\": {\n    \"api_key\": {\n      \"type\": \"apiKey\",\n      \"name\": \"token\",\n      \"in\": \"query\"\n    }\n  },\n  \"definitions\": {\n    \"IdValuePair\": {\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"CREATED\",\n            \"IN_PROGRESS\",\n            \"PENDING_PM\",\n            \"APPROVED\",\n            \"PENDING_FINAL\",\n            \"REJECTED\"\n          ]\n        },\n        \"value\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"TaskWire\": {\n      \"required\": [\n        \"canChargeBillableHours\",\n        \"id\",\n        \"outline\",\n        \"parentTitle\",\n        \"taskNumber\",\n        \"title\"\n      ],\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"Task ID\"\n        },\n        \"title\": {\n          \"type\": \"string\",\n          \"description\": \"Title of task\"\n        },\n        \"taskNumber\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"Task number\"\n        },\n        \"outline\": {\n          \"type\": \"string\",\n          \"description\": \"Outline\"\n        },\n        \"parentTitle\": {\n          \"type\": \"string\",\n          \"description\": \"Title of parent (project or task)\"\n        },\n        \"canChargeBillableHours\": {\n          \"type\": \"boolean\",\n          \"description\": \"true if user can charge billable hours to this task\"\n        }\n      },\n      \"description\": \"Task item\"\n    },\n    \"Optional\": {\n      \"properties\": {\n        \"present\": {\n          \"type\": \"boolean\"\n        }\n      }\n    },\n    \"TimesheetEntriesResponse\": {\n      \"required\": [\n        \"items\"\n      ],\n      \"properties\": {\n        \"items\": {\n          \"type\": \"array\",\n          \"description\": \"list of items\",\n          \"items\": {\n            \"$ref\": \"#/definitions/TimesheetEntryWire\"\n          }\n        }\n      },\n      \"description\": \"List response\"\n    },\n    \"TasksResponse\": {\n      \"required\": [\n        \"items\",\n        \"maxSize\",\n        \"startIndex\"\n      ],\n      \"properties\": {\n        \"items\": {\n          \"type\": \"array\",\n          \"description\": \"list of items\",\n          \"items\": {\n            \"$ref\": \"#/definitions/TaskWire\"\n          }\n        },\n        \"startIndex\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"description\": \"starting position of given items in complete list\"\n        },\n        \"maxSize\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"description\": \"maximum number of items in complete list\"\n        }\n      },\n      \"description\": \"Paginated response\"\n    },\n    \"ErrorInfo\": {\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"Unknown\",\n            \"GenericException\",\n            \"InvalidArgument\",\n            \"AuthError\",\n            \"ObjectNotFound\",\n            \"InitializationError\",\n            \"InvalidState\"\n          ]\n        },\n        \"message\": {\n          \"type\": \"string\"\n        },\n        \"stackTrace\": {\n          \"$ref\": \"#/definitions/Optional\"\n        }\n      }\n    },\n    \"ProjectsResponse\": {\n      \"required\": [\n        \"items\",\n        \"maxSize\",\n        \"startIndex\"\n      ],\n      \"properties\": {\n        \"items\": {\n          \"type\": \"array\",\n          \"description\": \"list of items\",\n          \"items\": {\n            \"$ref\": \"#/definitions/ProjectWire\"\n          }\n        },\n        \"startIndex\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"description\": \"starting position of given items in complete list\"\n        },\n        \"maxSize\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"description\": \"maximum number of items in complete list\"\n        }\n      },\n      \"description\": \"Paginated response\"\n    },\n    \"UserWire\": {\n      \"required\": [\n        \"customerId\",\n        \"firstName\",\n        \"id\",\n        \"lastName\"\n      ],\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"user id\"\n        },\n        \"firstName\": {\n          \"type\": \"string\",\n          \"description\": \"user's first name\"\n        },\n        \"lastName\": {\n          \"type\": \"string\",\n          \"description\": \"user's last name\"\n        },\n        \"customerId\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"customer id of company this user belongs to\"\n        }\n      },\n      \"description\": \"User object\"\n    },\n    \"UserConfig\": {\n      \"required\": [\n        \"timesheetStates\"\n      ],\n      \"properties\": {\n        \"timesheetStates\": {\n          \"type\": \"array\",\n          \"description\": \"Possible values for state property of timesheet or timesheet entry\",\n          \"uniqueItems\": true,\n          \"items\": {\n            \"$ref\": \"#/definitions/IdValuePair\"\n          }\n        }\n      },\n      \"description\": \"Different config setting and constants for user\"\n    },\n    \"TimesheetEntryWire\": {\n      \"required\": [\n        \"entryDate\",\n        \"entryHours\",\n        \"id\",\n        \"isBillable\",\n        \"notes\",\n        \"orgRoleId\",\n        \"projectId\",\n        \"projectName\",\n        \"roleName\",\n        \"taskId\",\n        \"taskName\",\n        \"tmrId\"\n      ],\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"timesheet id\"\n        },\n        \"taskId\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"task id\"\n        },\n        \"taskName\": {\n          \"type\": \"string\",\n          \"description\": \"name of task\"\n        },\n        \"orgRoleId\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"organization role id\"\n        },\n        \"tmrId\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"TMR id\"\n        },\n        \"roleName\": {\n          \"type\": \"string\",\n          \"description\": \"name of role\"\n        },\n        \"projectId\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"project id\"\n        },\n        \"projectName\": {\n          \"type\": \"string\",\n          \"description\": \"project name\"\n        },\n        \"entryHours\": {\n          \"type\": \"number\",\n          \"format\": \"double\",\n          \"description\": \"number of hours spent\"\n        },\n        \"isBillable\": {\n          \"type\": \"boolean\",\n          \"description\": \"are hours billable?\"\n        },\n        \"notes\": {\n          \"type\": \"string\",\n          \"description\": \"text notes\"\n        },\n        \"entryDate\": {\n          \"type\": \"string\",\n          \"description\": \"entry date\"\n        }\n      },\n      \"description\": \"Timesheet entry object\"\n    },\n    \"AuthResponse\": {\n      \"required\": [\n        \"config\",\n        \"token\",\n        \"user\"\n      ],\n      \"properties\": {\n        \"token\": {\n          \"type\": \"string\",\n          \"description\": \"unique token used with all authenticated calls\"\n        },\n        \"user\": {\n          \"description\": \"information about logged in user\",\n          \"$ref\": \"#/definitions/UserWire\"\n        },\n        \"config\": {\n          \"description\": \"different config setting and constants for user\",\n          \"$ref\": \"#/definitions/UserConfig\"\n        }\n      },\n      \"description\": \"Authentication response\"\n    },\n    \"ErrorResponse\": {\n      \"properties\": {\n        \"error\": {\n          \"$ref\": \"#/definitions/ErrorInfo\"\n        }\n      }\n    },\n    \"TimesheetWire\": {\n      \"required\": [\n        \"calcTotalHours\",\n        \"endDate\",\n        \"entries\",\n        \"id\",\n        \"isCurrent\",\n        \"personAwaitingActionBy\",\n        \"startDate\",\n        \"state\",\n        \"stateName\",\n        \"userId\"\n      ],\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"timesheet id\"\n        },\n        \"userId\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"user id who timesheet belongs to\"\n        },\n        \"startDate\": {\n          \"type\": \"string\",\n          \"description\": \"start date in ISO8601 format\"\n        },\n        \"endDate\": {\n          \"type\": \"string\",\n          \"description\": \"end date in ISO8601 format\"\n        },\n        \"calcTotalHours\": {\n          \"type\": \"number\",\n          \"format\": \"double\",\n          \"description\": \"total calculated hours\"\n        },\n        \"stateName\": {\n          \"type\": \"string\",\n          \"description\": \"state of timesheet\"\n        },\n        \"personAwaitingActionBy\": {\n          \"type\": \"string\",\n          \"description\": \"name of person who changed state of timesheet\"\n        },\n        \"entries\": {\n          \"description\": \"timesheet entries\",\n          \"$ref\": \"#/definitions/Optional\"\n        },\n        \"isCurrent\": {\n          \"type\": \"boolean\",\n          \"description\": \"is current timesheet?\"\n        },\n        \"state\": {\n          \"type\": \"string\",\n          \"description\": \"state\",\n          \"enum\": [\n            \"CREATED\",\n            \"IN_PROGRESS\",\n            \"PENDING_PM\",\n            \"APPROVED\",\n            \"PENDING_FINAL\",\n            \"REJECTED\"\n          ]\n        }\n      },\n      \"description\": \"Timesheet object\"\n    },\n    \"AddTimesheetEntriesResponse\": {\n      \"required\": [\n        \"deletedIds\",\n        \"modifiedItems\"\n      ],\n      \"properties\": {\n        \"modifiedItems\": {\n          \"type\": \"array\",\n          \"description\": \"list of modified items\",\n          \"items\": {\n            \"$ref\": \"#/definitions/TimesheetEntryWire\"\n          }\n        },\n        \"deletedIds\": {\n          \"type\": \"array\",\n          \"description\": \"IDs of deleted items\",\n          \"uniqueItems\": true,\n          \"items\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"description\": \"List response\"\n    },\n    \"RoleRecord\": {\n      \"required\": [\n        \"hoursToComplete\",\n        \"id\",\n        \"name\",\n        \"type\"\n      ],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"description\": \"Role type\",\n          \"enum\": [\n            \"ORG_ROLE\",\n            \"TEAM_MEMBER_ROLE\",\n            \"TASK_ROLE\"\n          ]\n        },\n        \"hoursToComplete\": {\n          \"type\": \"number\",\n          \"format\": \"double\",\n          \"description\": \"Hours to complete\"\n        },\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"Role ID\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of role\"\n        }\n      },\n      \"description\": \"Role item\"\n    },\n    \"AddTimesheetEntriesRequest\": {\n      \"properties\": {\n        \"timesheetId\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\"\n        },\n        \"items\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/NewTimesheetEntry\"\n          }\n        }\n      }\n    },\n    \"NewTimesheetEntry\": {\n      \"properties\": {\n        \"taskId\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\"\n        },\n        \"roleId\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\"\n        },\n        \"hours\": {\n          \"type\": \"number\",\n          \"format\": \"double\"\n        },\n        \"remainingHours\": {\n          \"type\": \"number\",\n          \"format\": \"double\"\n        },\n        \"isBillable\": {\n          \"type\": \"boolean\"\n        },\n        \"date\": {\n          \"type\": \"string\"\n        },\n        \"notes\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"TimesheetsResponse\": {\n      \"required\": [\n        \"items\"\n      ],\n      \"properties\": {\n        \"items\": {\n          \"type\": \"array\",\n          \"description\": \"list of items\",\n          \"items\": {\n            \"$ref\": \"#/definitions/TimesheetWire\"\n          }\n        }\n      },\n      \"description\": \"List response\"\n    },\n    \"ProjectWire\": {\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"properties\": {\n        \"id\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\",\n          \"description\": \"Project ID\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Project title\"\n        }\n      },\n      \"description\": \"Project item\"\n    },\n    \"RolesResponse\": {\n      \"required\": [\n        \"items\",\n        \"maxSize\",\n        \"startIndex\"\n      ],\n      \"properties\": {\n        \"items\": {\n          \"type\": \"array\",\n          \"description\": \"list of items\",\n          \"items\": {\n            \"$ref\": \"#/definitions/RoleRecord\"\n          }\n        },\n        \"startIndex\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"description\": \"starting position of given items in complete list\"\n        },\n        \"maxSize\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"description\": \"maximum number of items in complete list\"\n        }\n      },\n      \"description\": \"Paginated response\"\n    }\n  }\n}\n``\n. Am I supposed to seetokenfield in addition toid` then ?\n\n. Could you please point me to exact location of explanation in documentation ? I cannot understand how it's supposed to work. I see \"api_key\" edit box in upper area of Swagger-UI but putting token there doesn't change anything. If authentication is defined via \"authentications\" fields of annotation like I did in getTimesheet Also why would token be global for all APIs ? I have set of unauthenticated endpoinds (which allow clients to authenticate) which must not require token.  I'm expecting to see token field only on documentation of getTimesheet.\n. I'd like Pair to be handled as Map rather than being parsed completelly like one in your example. So I thought I'd override Pair using ModelConverter but it never intercepted there.\n. Not sure, I've never used Maven. Another option is to fix javadoc comments.\n. Great! What's the ETA roughly ?\n. I don't know if you guys had any updates on this but as of 3 days ago this bug was still present in develop_2.0 branch.\n. According to earlier conversation here (in another issue) security definition is not going to work for me for multiple reasons one of which is lack of support of unauthenticated endpoints.\n. https://github.com/swagger-api/swagger-core/issues/889\nAnd even \"api_key\" wasn't working in my sample app anyway. Filling out that field in swagger-ui never passed it with the request.\n. How is it going with new release, guys ? This bug is quite critical too https://github.com/swagger-api/swagger-core/issues/847\n. But neither #847 nor #905 are fixed in 1.5.3-M1, right ?\n. I tried using 1.5.3-M1 with my work project. Implicit parameters are still not visible.\n. @webron How is the progress by the way? It's been two months :)\n. @webron Just to let you know. I just tested \"io.swagger\" % \"swagger-jersey2-jaxrs\" % \"1.5.0\" and ApiImplicitParams is still not working.\nHere is json I get\nhttp://dpaste.com/3CNDBYE\nHere is one of the classes defined\n``` java\n@SuppressWarnings(\"VoidMethodAnnotatedWithGET\")\n@Path(\"taskSchedule\")\n@Api(value = \"taskSchedule\", description = \"Operations with scheduled resources\", produces = \"application/json\")\n@Authenticated\npublic class TaskScheduleRoutes extends AbstractRoutes {\n@GET\n@Consumes(MediaType.APPLICATION_JSON)\n@Produces(MediaType.APPLICATION_JSON)\n@ApiOperation(response = ListResponseWithUpdate.ModifiedTimesheetEntriesResponse.class, value = \"Returns multiple task schedules\")\n@ApiImplicitParams({@ApiImplicitParam(name = \"token\", required = true, dataType = \"string\", paramType = \"query\", value = \"API token\")})\n@ManagedAsync\npublic ListResponse<TaskScheduleWire> getTaskSchedules(\n        @ApiParam(required = true, value = \"Comma separated IDs of task schedules\") @QueryParam(\"ids\") String idsStr,\n        @Suspended final AsyncResponse response) {\n\n    Precondition.checkArgument(idsStr != null && !idsStr.isEmpty(), \"`ids` is missing or empty\");\n\n    final ArrayList<String> ids = Lists.newArrayList(idsStr.split(\",\"));\n\n    // Basic sanity check\n    Precondition.checkArgument(ids.size() > 0, \"Array with IDs is empty or not provided\");\n\n    return handleInFuture(() -> {\n        Collection<TaskSchedule> items = api.getTaskSchedules(ids.stream().map(Long::valueOf).collect(toSet()));\n        return new ListResponse<>(items.stream().map(TaskScheduleWire::fromTaskSchedule).collect(toList()));\n    }, response);\n}\n\n}\n```\nAny thought when it can finally be fixed ?\n. @webron Why should I file new ticket if from my POV it's being ignored. I don't and can't know whether it's \"really scanned\" in the library. All I see is that token param is not presented in generated Swagger json.\n. @fehguy Is there custom repo I can point to ? It's not in genereal maven repo.\n. @fehguy Tony, for some reason it can't fetch swagger-models. Perhaps there is wrong reference in parent POM ? Here is what SBT says\n[warn] ==== sonatype-snapshots: tried\n[warn]   https://oss.sonatype.org/content/repositories/snapshots/io/swagger/swagger-models/1.5.1-SNAPSHOT/swagger-models-1.5.1-20150716.064150-10.pom\n[warn]   https://oss.sonatype.org/content/repositories/snapshots/io/swagger/swagger-models/1.5.1-SNAPSHOT/swagger-models-1.5.1-SNAPSHOT.pom\n[warn] ==== spray releases: tried\n. It works! Thanks!\n. @titiu7 I'm on \"io.swagger\" % \"swagger-jersey2-jaxrs\" %  \"1.5.1-SNAPSHOT\" from sonatype snapshots. Just to confuse everyone even more they published latest build with changed package name and lower version number :)\n. It was class path mixup as you suspected.\n. Well, that's pretty much default answer from you, based on 6 months experience communicating here.\nDownload this file\nhttps://oss.sonatype.org/content/repositories/snapshots/io/swagger/swagger-core/1.5.4-SNAPSHOT/swagger-core-1.5.4-20150909.202041-9-sources.jar\nIt has no ScannerFactory.java\n. @fehguy Let me add Tony here. He was pretty responsive usually.\n. What's your role on the project then if I babysit lead engineer to to line level of what's wrong ? You're always triggerhappy to close bugs without even trying to solve the problem as if it was performance indicator of your work in the company.\nI frankly think open source software development it's not something you enjoy and honestly don't understand why you still on the project which is already close to the state of \"broken beyond repair\".\n. Getting latest snapshot fixed the issue. Broken snapshot should be removed from the repo since it's been reported that it's broken.\nAs per your services I'll let @fehguy to decide what to do. I can discuss the matter outside of GitHub comments but my personal opinion is that you're not interested in this project, you've been damaging it for at least last 8 months and it should stop.\nThanks.\n. ",
    "iaguera": "Okay\n. ",
    "JamesDunne": "Setting the property naming strategy on the Json.mapper() instance causes the entire swagger.json file to be generated with this naming convention which fails for internal swagger properties like readOnlyor dataType; they get emitted as read_only and data_type for instance.\nThis swagger library needs a native way to specify property naming conventions to align with Jackson when it's used for the API implementation without interfering with the swagger internal properties emitted to swagger.json. I have an entire API defined with Jackson's SNAKE_CASE property naming convention but I have no way to tell swagger to respect this naming convention. I have far too many properties to consider manually specifying @JsonProperty on them all.\n. ",
    "shiqicao": "@fehguy, your fix seems never merged to mater. I tried to add a 'name' property, but it doesn't work. Or I didn't specify 'name' correctly?\n\"Foo\": {                                                                                             \n     \"properties\": {\n       \"object_type\": {                                                                                           \n               \"name\": \"object_type\",                                                                      \n               \"readOnly\": true,                                                                             \n               \"type\": \"string\"                                                                  \n          }                                                                                                          \n      },\n }. ",
    "WesternGun": "The case in swagger file is affected by config in Spring. In application.properties, if you set spring.jackson.property-naming-strategy: SNAKE_CASE or other values, it would affect the case of json properties in swagger file. So, in Java, it is better to use @JsonNaming on each class instead of configuring this key in properties file, if you don't want the interference.\nAnd I really think Swagger-api should have a separated, independent config other than that. This is not reliable. . Check here: https://github.com/swagger-api/swagger-core/issues/826#issuecomment-461460771. ",
    "TonyWuLihu": "Oh... Thx for the useful info !! \n. ",
    "elw00d": "Try this please\nhttps://github.com/elw00d/gretty-jersey-swagger-app/tree/master\n. ",
    "MDoumin": "\nJacksonSubTypeModelTest.scala had already been migrated, now it is in ComposiotionTest.scala, it should \"read a model with composition\"\nParentChildWithParentOverrideTest.scala looks very strange and does not do something comprehended. Has been decided to abandon it.\nSubTypeModelTest.scala. Looks like a test for this feature has been implemented during working on #847, see ComposiotionTest.scala, it should \"create a model\".\nModelInheritenceTest.scala. The functional has to be tested has been removed. Specification has changed and there's no need to test such a term as \"extends\".\n. @fehguy, yep, I think this can be closed.\n. Hope to fix today or tomorrow.\n. The problem has been eliminated in fix for #847, here's a test confirming this: https://github.com/MDoumin/swagger-core/commit/cfe4e7b2aa998cb4da9fde6ec80ce009188d5009\n. I've just tested this. All works well.\n\nClass structure:\n``` java\n@ApiModel(description = \"Basic class for timesheet entry\", subTypes = {TimesheetProjectEntryWire.class, TimesheetAdminEntryWire.class}, discriminator = \"type\")\n@JsonTypeInfo(use = JsonTypeInfo.Id.CUSTOM, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"type\")\n@JsonTypeIdResolver(TimesheetEntryTypeIdResolver.class)\npublic abstract class TimesheetEntryWireBase {\n}\n@ApiModel(description = \"Timesheet project entry object\", parent = TimesheetEntryWireBase.class)\nabstract public class TimesheetEntryTypeIdResolver extends TimesheetEntryWireBase implements TypeIdResolver {\n}\n@ApiModel(description = \"Timesheet project entry object\", parent = TimesheetEntryWireBase.class)\npublic class TimesheetAdminEntryWire extends TimesheetEntryWireBase {\n}\n@ApiModel(description = \"Timesheet project entry object\", parent = TimesheetEntryWireBase.class)\npublic class TimesheetProjectEntryWire extends TimesheetEntryWireBase {\n}\n```\nJSON-output:\njson\n{\n  \"TimesheetAdminEntryWire\" : {\n    \"allOf\" : [ {\n      \"$ref\" : \"#/definitions/TimesheetEntryWireBase\"\n    }, {\n      \"type\" : \"object\",\n      \"description\" : \"Timesheet project entry object\"\n    } ]\n  },\n  \"TimesheetEntryWireBase\" : {\n    \"type\" : \"object\",\n    \"discriminator\" : \"type\",\n    \"description\" : \"Basic class for timesheet entry\"\n  },\n  \"TimesheetProjectEntryWire\" : {\n    \"allOf\" : [ {\n      \"$ref\" : \"#/definitions/TimesheetEntryWireBase\"\n    }, {\n      \"type\" : \"object\",\n      \"description\" : \"Timesheet project entry object\"\n    } ]\n  }\n}\n. Working on.\n. The last fix considers Alexey's remark above: JsonSubTypes processing is re-used from JacksonAnnotationIntrospector.\n. ",
    "pbielicki": "it's a bit better (as the type is not void anymore) but now swagger-ui.js 2.0.23 crashes on line 1672: if (type.toLowerCase() === 'file') { and in version 2.1.0-alpha.7 data type is empty:\n\nIf I was able to tell @ApiParam which type I would like to use (like in @ApiResponse) I think it could help.\n. can I paste it here? (it's almost 90 lines)\n. js\n{\n  \"apiVersion\": \"1.0.0\",\n  \"swaggerVersion\": \"1.2\",\n  \"basePath\": \"../../rest-services/v1\",\n  \"resourcePath\": \"/filterEvents\",\n  \"apis\": [{\n    \"path\": \"/filterEvents/event\",\n    \"operations\": [{\n      \"method\": \"POST\",\n      \"summary\": \"Post a set of EventType on given impacted entities.\",\n      \"notes\": \"\",\n      \"type\": \"EventType\",\n      \"nickname\": \"processEventFliter\",\n      \"produces\": [\"application/json\",\n      \"application/xml\"],\n      \"consumes\": [\"application/json\",\n      \"application/xml\"],\n      \"parameters\": [{\n        \"name\": \"body\",\n        \"description\": \"Set of EventType and impacted entities.\",\n        \"required\": false,\n        \"items\": {\n          \"$ref\": \"EventType\"\n        },\n        \"paramType\": \"body\",\n        \"allowMultiple\": false\n      }]\n    }]\n  }],\n  \"models\": {\n    \"EventType\": {\n      \"id\": \"EventType\",\n      \"required\": [\"EventProperties\"],\n      \"properties\": {\n        \"EventProperties\": {\n          \"$ref\": \"EventPropertiesType\"\n        },\n        \"ImpactedEntities\": {\n          \"$ref\": \"ImpactedEntitiesType\"\n        },\n        \"setEventProperties\": {\n          \"type\": \"boolean\"\n        },\n        \"setImpactedEntities\": {\n          \"type\": \"boolean\"\n        }\n      }\n    },\n    \"EventPropertiesType\": {\n      \"id\": \"EventPropertiesType\",\n      \"required\": [\"Type\"],\n      \"properties\": {\n        \"Type\": {\n          \"type\": \"string\",\n          \"enum\": [\"OPERATION_CLOSURE\",\n          \"DELETE_FLIGHT\"]\n        },\n        \"Source\": {\n          \"type\": \"string\"\n        },\n        \"OccurrenceTime\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"OccurrenceId\": {\n          \"type\": \"string\"\n        },\n        \"setSource\": {\n          \"type\": \"boolean\"\n        },\n        \"setType\": {\n          \"type\": \"boolean\"\n        },\n        \"setOccurrenceTime\": {\n          \"type\": \"boolean\"\n        },\n        \"setOccurrenceId\": {\n          \"type\": \"boolean\"\n        }\n      }\n    },\n    \"ImpactedEntitiesType\": {\n      \"id\": \"ImpactedEntitiesType\",\n      \"properties\": {\n        \"flightLegChangeSetOrAircraftVisitChangeSet\": {\n          \"$ref\": \"Serializable\"\n        },\n        \"setFlightLegChangeSetOrAircraftVisitChangeSet\": {\n          \"type\": \"boolean\"\n        }\n      }\n    }\n  }\n}\n. @Path(\"filterEvents\")\n@Api(value = \"/filterEvents\", description = \"Services dealing with EventType filtering.\")\npublic interface EventFilterResource {\n@POST\n  @Path(\"/event\")\n  @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n  @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n  @ApiOperation(value = \"Post a set of EventType on given impacted entities.\", response = EventType.class)\n  public MyResponse<MyResponse<EventType>> processEventFliter(\n      @ApiParam(value = \"Set of EventType and impacted entities.\") @Valid MyEventRequest<EventType> events);\n. nope\n. ",
    "TuomasKiviaho": "I hope that the proposal for overriding the data type (just by declaring it in string form) could be considered. It's quite cumbersome to register a Converter compared to @XmlSchemaType (and @XmlJavaTypeAdapter) of JAXB.  I'd rather declare @ApiParam(type=\"date\") LocalDate date directly at method level, so that other tools like swagger-doclet can also utilize the annotation.\n. I hope that the proposal for overriding the data type (just by declaring it in string form) could be considered. It's quite cumbersome to register a Converter compared to @XmlSchemaType (and @XmlJavaTypeAdapter) of JAXB.  I'd rather declare @ApiParam(type=\"date\") LocalDate date directly at method level, so that other tools like swagger-doclet can also utilize the annotation.\n. ",
    "rbrondgeest": "Also, does swagger generate these annotations when one does codegen of yaml -> JAX-RS?\n. Thanks a lot for adding this, and for all your hard work on this project. . ",
    "stephenleny": "Yes, we're using swagger-jersey2-jaxrs_2.10 version 1.3.7. \n. Ok thanks for the update. It is just I need to check whether our team can upgrade now, or need to wait to upgrade with some other groups within our company.\n. ",
    "ipeluffo": "Excuse me @fehguy , but it seems that BeanConfig doesn't work properly using an Info object.\nI took a look to the BeanConfig's source code and it seems it's overriding the Info object in the classes method (see line 175 in BeanConfig).\nI'd appreciate it any help about this issue.\n. Excuse me @fehguy , but it seems that BeanConfig doesn't work properly using an Info object.\nI took a look to the BeanConfig's source code and it seems it's overriding the Info object in the classes method (see line 175 in BeanConfig).\nI'd appreciate it any help about this issue.\n. @webron , actually I found this issue because the default value is csv as reported in the issue #1160 .\nIn my case, I need to configure the collectionFormat property as multi, so fixing the issue #1160 should be enough for me.\nHowever, I believe that adding the this feature is a more general solution that any developer can modify according to their particular implementation, like it was mention in #478 .\nAnyway, feel free to close this issue if you think it'll be resolved fixing #1160 \nThanks again.\n. @webron , actually I found this issue because the default value is csv as reported in the issue #1160 .\nIn my case, I need to configure the collectionFormat property as multi, so fixing the issue #1160 should be enough for me.\nHowever, I believe that adding the this feature is a more general solution that any developer can modify according to their particular implementation, like it was mention in #478 .\nAnyway, feel free to close this issue if you think it'll be resolved fixing #1160 \nThanks again.\n. I've been very busy lately. I'll try to make the PR to fix this issue asap.\nCould anyone confirm me if I'll be able to make the Test case for this fix?\n@nistvan86 , I need to do a deeper analysis to see how to add the switch in the BeanConfig. Also, this would be useful only for those using the BeanConfig to configure Swagger but not for the ones which don't use it (like me :wink: )\n. I've been very busy lately. I'll try to make the PR to fix this issue asap.\nCould anyone confirm me if I'll be able to make the Test case for this fix?\n@nistvan86 , I need to do a deeper analysis to see how to add the switch in the BeanConfig. Also, this would be useful only for those using the BeanConfig to configure Swagger but not for the ones which don't use it (like me :wink: )\n. ",
    "codeturner": "@ipeluffo I ran into the same problem 2+ years later.  BeanConfig.setInfo doesn't do anything.  As a workaround, you can specify an Info object manually by setting the BeanConfig's swagger object directly.  For example:\nBeanConfig config = new BeanConfig();\n  config.getSwagger().info(new Info()\n      .version(\"1.0.0\")\n      .title(\"Swagger Petstore\")\n      .contact(new Contact()\n        .name(\"Wordnik API Team\")\n        .email(\"foo@bar.baz\")\n        .url(\"http://swagger.io\")));\n  config.setResourcePackage(getClass().getPackage().getName());\n  config.setScan();. ",
    "lemoncolly": "Yeah, it's wink under the hood of IBM's stuff.\nDo you mean version dependency? 1.5.0-M1 is the one I am testing here.\n. Yeah, it's wink under the hood of IBM's stuff.\nDo you mean version dependency? 1.5.0-M1 is the one I am testing here.\n. Oh sorry....yes, using swagger-jaxrs.\n\ncom.wordnik\nswagger-jaxrs\n1.5.0-M1\n\n. Oh sorry....yes, using swagger-jaxrs.\n\ncom.wordnik\nswagger-jaxrs\n1.5.0-M1\n\n. That's what I was worried about.\nWe can get a PMR open and see what they have to say.\n. That's what I was worried about.\nWe can get a PMR open and see what they have to say.\n. Yeah, I can test it out. I can throw together a REST module with no dependency injection and then turn it off on LP.\n. Yeah, I can test it out. I can throw together a REST module with no dependency injection and then turn it off on LP.\n. Did some playing around with this tonight.\nStripped everything right down, but still having issues.\nSeeing a 404 when attempting to get the api docs.\nQuestions, when loading the Swagger specific classes in my application, I used to add them like so:\nSet> swaggerClasses = new HashSet>();\n        swaggerClasses.add(com.wordnik.swagger.jaxrs.listing.ApiListingResource.class);\n        swaggerClasses.add(com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider.class);\n        swaggerClasses.add(com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON.class);\n        swaggerClasses.add(com.wordnik.swagger.jaxrs.listing.ResourceListingProvider.class);\nBut now, i only see the ApiListingResource class. Is this expected? Seeing contradictory guides online. As is always the problem when moving major versions.\n. Did some playing around with this tonight.\nStripped everything right down, but still having issues.\nSeeing a 404 when attempting to get the api docs.\nQuestions, when loading the Swagger specific classes in my application, I used to add them like so:\nSet> swaggerClasses = new HashSet>();\n        swaggerClasses.add(com.wordnik.swagger.jaxrs.listing.ApiListingResource.class);\n        swaggerClasses.add(com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider.class);\n        swaggerClasses.add(com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON.class);\n        swaggerClasses.add(com.wordnik.swagger.jaxrs.listing.ResourceListingProvider.class);\nBut now, i only see the ApiListingResource class. Is this expected? Seeing contradictory guides online. As is always the problem when moving major versions.\n. Ok, got it.\nSo, using Liberty Profile I am able to get Swagger working with a bare bones setup. Hurrah!\nAt least it isn't core wink/LP that is the issue. Just some other feature.\n. Ok, got it.\nSo, using Liberty Profile I am able to get Swagger working with a bare bones setup. Hurrah!\nAt least it isn't core wink/LP that is the issue. Just some other feature.\n. I just tested out with CDI enabled, and back to the original error now.\nAnd that is without any actual dependency injection in my code itself.\n. I just tested out with CDI enabled, and back to the original error now.\nAnd that is without any actual dependency injection in my code itself.\n. Thanks guys.\nI just opened a PMR with them. I will keep you posted on the findings.\n. I am actively working the PMR with IBM. Getting there, slowly.\n. I am actively working the PMR with IBM. Getting there, slowly.\n. Sorry guys......I was on vacation there.\nUpdate. PMR was closed. We were able to fix the passivation issue, to then find a different one.\nSo IBM wanted that PMR closed.\nI now need to go and create ANOTHER PMR to keep triaging this.\n. Sorry guys......I was on vacation there.\nUpdate. PMR was closed. We were able to fix the passivation issue, to then find a different one.\nSo IBM wanted that PMR closed.\nI now need to go and create ANOTHER PMR to keep triaging this.\n. @fehguy @webron \nHey guys, just an FYI.\nLooks like this was all ultimately down to CDI 1.0 (and it's feature as part of Liberty Profile).\nWe have been testing out the latest beta version of Liberty Profile, and CDI 1.2, and have been able to get the latest version of Swagger 2.0 working.\nKeep up all your great work. Thanks!\n. @fehguy @webron \nHey guys, just an FYI.\nLooks like this was all ultimately down to CDI 1.0 (and it's feature as part of Liberty Profile).\nWe have been testing out the latest beta version of Liberty Profile, and CDI 1.2, and have been able to get the latest version of Swagger 2.0 working.\nKeep up all your great work. Thanks!\n. Also able to get it working with CDI 1.0.\nSeems there is an issue with Google Guava.\nI upgraded the version in my dependencies and was able to get it working successfully.\n\ncom.google.guava\nguava\n16.0\n\n. Also able to get it working with CDI 1.0.\nSeems there is an issue with Google Guava.\nI upgraded the version in my dependencies and was able to get it working successfully.\n\ncom.google.guava\nguava\n16.0\n\n. Hi all,\nWe are using CDI 1.0 on Liberty Profile.\nI was able to get by the issue by upgrading the version of Google Guava.\nAdd this to your Maven dependencies:\n\ncom.google.guava\nguava\n16.0\n\n. Hi all,\nWe are using CDI 1.0 on Liberty Profile.\nI was able to get by the issue by upgrading the version of Google Guava.\nAdd this to your Maven dependencies:\n\ncom.google.guava\nguava\n16.0\n\n. I realize this issue is very similar to #1317.\n. Let me check up on how to do a PR (haven't done one before).\nAnd sorry for the delay (new child arrival has knocked me off track).\n. I am getting a missing POM exception for the snapshot, when building.\nAm I missing something?\n. Got it, and re-tested.\nLooks like the issue is now resolved with the latest snapshot.\n. This is not the correct place for this kind of question.\nI would post any questions in the swagger Google group.\nhttps://groups.google.com/forum/#!forum/swagger-swaggersocket\n. ",
    "cprokopiak": "Just curious, what does the P2 tag mean?\n. @webron - I am currently trying to test it with the 1.5 release. However, I have been unable to get swagger to actually scan my resources, either using Singletons or Classes.\nBelow is how I am currently trying to test my configuration and initialization.\n``` java\n                application = new JAXRSApplication();\n    application.addSingleton(enterprisePatientEndpoint);\n\n    application.addSingleton(new JacksonJsonProvider());\n    if (corsFilter != null) {\n        application.addSingleton(corsFilter);\n    }\n    application.addSingleton(authentication);\n\n    application.addClass(ApiListingResource.class);\n    application.addClass(SwaggerSerializers.class);\n\n    service.registerApplication(ALIAS, application);\n\n    BeanConfig beanConfig = new BeanConfig();\n    beanConfig.setVersion(\"0.0.1\");\n    beanConfig.setSchemes(new String[]{\"http\"});\n    beanConfig.setHost(\"localhost:80\");\n    beanConfig.setBasePath(\"/rs\" + ALIAS);\n    beanConfig.setDescription(\"Healthcare Database Resources\");\n    beanConfig.setTitle(\"Healthcare Database REST API\");\n    beanConfig.setResourcePackage(\"phcdb.endpoint.rs\");\n    beanConfig.setScan(true);\n    beanConfig.setPrettyPrint(true);\n\n    logger.info(\"REST endpoints registered successfully\");\n\n```\nThis generates the following in my swagger.json file:\njson\n{\n  \"swagger\" : \"2.0\",\n  \"info\" : {\n    \"description\" : \"Healthcare Database Resources\",\n    \"version\" : \"0.0.1\",\n    \"title\" : \"Healthcare Database REST API\"\n  },\n  \"host\" : \"localhost:80\",\n  \"basePath\" : \"/rs/phcdb\",\n  \"schemes\" : [ \"http\" ]\n}\nOne thing I am unclear on so far, do I need to specify a scanner or reader like I had back in the 1.3.x version? I had tried setting the scanner to DefaultJaxrsScanner, but that seemed to conflict with my BeanConfig, resulting in a swagger.json that looked like this:\njson\n{ \"swagger\" : \"2.0\" }\nI've turned up the logging to the highest level in the platform, as well as tried to set a logback.xml file just for io.swagger, but I haven't seen any debug logging from swagger itself. I'm not sure if I don't have something configured properly for logging, or if nothing in swagger that has log statements is actually running.\n. I am using CXF as part of an in-house framework. The framework provides JAXRSApplication: \n```\npublic class JAXRSApplication extends Application {\n    private final Set> classes = new HashSet>();\n    private final Set singletons = new HashSet();\npublic JAXRSApplication() {\n}\n\n@Override\npublic Set<Class<?>> getClasses() {\n    return classes;\n}\n\n@Override\npublic Set<Object> getSingletons() {\n    return singletons;\n}\n\npublic void addClass(Class<?> clazz) {\n    classes.add(clazz);\n}\n\npublic void addClasses(Class<?>... types) {\n    addClasses(Arrays.asList(types));\n}\n\npublic void addClasses(Collection<Class<?>> types) {\n    for (Class<?> clazz : types) {\n        addClass(clazz);\n    }\n}\n\npublic void addSingleton(Object singleton) {\n    singletons.add(singleton);\n}\n\npublic void addSingletons(Object... objects) {\n    addSingletons(Arrays.asList(objects));\n}\n\npublic void addSingletons(Collection<Object> objects) {\n    for (Object obj : objects) {\n        addSingleton(obj);\n    }\n}\n\n}\n``\n. Yes, I am now testing with theio.swagger` 1.5.0 packages.\nWe are currently in the process of renaming some of our packages. \nUnder phcdb.endpoint.rs is the file containing the configuration and initialization of my JAXRSApplication. phcdb.endpoint.rs.api contains the interfaces for the API, and this is where I've applied my swagger annotations. phcdb.endpoint.rs.impl contains the implementations of the API.\nI've tried setting the setResourcePackage option to all three packages mentioned, but it didn't seem to make a difference. Which package should I be setting for the resources?\n. With the latest version, I have not been able to get the proper output using either singletons or classes.\n. The framework is using CXF 2.7.4.\nHow do I go about turning up the logging for swagger-core? Using a logback.xml file with a setting for io.swagger?\nIt will be a week or two before I can get to try and create a small test case, if I can at all. With this running on an in-house framework, it may be difficult to generate a test case that I can provide.\n. @webron Sorry, no updates yet. Haven't had a chance to come back to the issue. Hopefully later this week work will slow down a bit and give me an opportunity.\n. ",
    "vishakMetric": "yes. and also i have made sure to include them in lib folder of server (I use Tomcat6).\n. Please find the stacktrace below. \nMar 02, 2015 9:43:20 PM org.apache.catalina.core.ApplicationContext log\nSEVERE: StandardWrapper.Throwable\njava.lang.NoClassDefFoundError: com/wordnik/swagger/jaxrs/listing/ApiDeclarationProvider\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:791)\n    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)\n    at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)\n    at java.net.URLClassLoader.access$100(URLClassLoader.java:71)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:361)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:355)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:354)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:423)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:356)\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1632)\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1491)\n    at org.glassfish.jersey.server.ResourceConfig.scanClasses(ResourceConfig.java:856)\n    at org.glassfish.jersey.server.ResourceConfig._getClasses(ResourceConfig.java:840)\n    at org.glassfish.jersey.server.ResourceConfig.getClasses(ResourceConfig.java:755)\n    at org.glassfish.jersey.server.ResourceConfig$RuntimeConfig.(ResourceConfig.java:1171)\n    at org.glassfish.jersey.server.ResourceConfig$RuntimeConfig.(ResourceConfig.java:1144)\n    at org.glassfish.jersey.server.ResourceConfig.createRuntimeConfig(ResourceConfig.java:1140)\n    at org.glassfish.jersey.server.ApplicationHandler.(ApplicationHandler.java:317)\n    at org.glassfish.jersey.server.ApplicationHandler.(ApplicationHandler.java:284)\n    at org.glassfish.jersey.servlet.WebComponent.(WebComponent.java:311)\n    at org.glassfish.jersey.servlet.ServletContainer.init(ServletContainer.java:168)\n    at org.glassfish.jersey.servlet.ServletContainer.init(ServletContainer.java:358)\n    at javax.servlet.GenericServlet.init(GenericServlet.java:212)\n    at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1173)\n    at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:993)\n    at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4350)\n    at org.apache.catalina.core.StandardContext.start(StandardContext.java:4659)\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:791)\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:771)\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:546)\n    at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1041)\n    at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:964)\n    at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:502)\n    at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1277)\n    at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:321)\n    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)\n    at org.apache.catalina.core.StandardHost.start(StandardHost.java:785)\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)\n    at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:445)\n    at org.apache.catalina.core.StandardService.start(StandardService.java:519)\n    at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)\n    at org.apache.catalina.startup.Catalina.start(Catalina.java:581)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:601)\n    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)\n    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)\nCaused by: java.lang.ClassNotFoundException: com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:366)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:355)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:354)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:423)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:356)\n    ... 51 more\nMar 02, 2015 9:43:20 PM org.apache.catalina.core.StandardContext loadOnStartup\nSEVERE: Servlet /metricstream threw load() exception\njava.lang.ClassNotFoundException: com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:366)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:355)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:354)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:423)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:356)\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:791)\n    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)\n    at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)\n    at java.net.URLClassLoader.access$100(URLClassLoader.java:71)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:361)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:355)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:354)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:423)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:356)\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1632)\n    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1491)\n    at org.glassfish.jersey.server.ResourceConfig.scanClasses(ResourceConfig.java:856)\n    at org.glassfish.jersey.server.ResourceConfig.getClasses(ResourceConfig.java:840)\n    at org.glassfish.jersey.server.ResourceConfig.getClasses(ResourceConfig.java:755)\n    at org.glassfish.jersey.server.ResourceConfig$RuntimeConfig.(ResourceConfig.java:1171)\n    at org.glassfish.jersey.server.ResourceConfig$RuntimeConfig.(ResourceConfig.java:1144)\n    at org.glassfish.jersey.server.ResourceConfig.createRuntimeConfig(ResourceConfig.java:1140)\n    at org.glassfish.jersey.server.ApplicationHandler.(ApplicationHandler.java:317)\n    at org.glassfish.jersey.server.ApplicationHandler.(ApplicationHandler.java:284)\n    at org.glassfish.jersey.servlet.WebComponent.(WebComponent.java:311)\n    at org.glassfish.jersey.servlet.ServletContainer.init(ServletContainer.java:168)\n    at org.glassfish.jersey.servlet.ServletContainer.init(ServletContainer.java:358)\n    at javax.servlet.GenericServlet.init(GenericServlet.java:212)\n    at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1173)\n    at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:993)\n    at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4350)\n    at org.apache.catalina.core.StandardContext.start(StandardContext.java:4659)\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:791)\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:771)\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:546)\n    at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1041)\n    at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:964)\n    at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:502)\n    at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1277)\n    at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:321)\n    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)\n    at org.apache.catalina.core.StandardHost.start(StandardHost.java:785)\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)\n    at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:445)\n    at org.apache.catalina.core.StandardService.start(StandardService.java:519)\n    at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)\n    at org.apache.catalina.startup.Catalina.start(Catalina.java:581)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:601)\n    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)\n    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)\n. I'm including following jars\nswagger-core_2.11-1.3.12.jar\nswagger-jaxrs_2.11-1.3.12.jar\nswagger-jersey2-jaxrs_2.11-1.3.12.jar\nswagger-annotations-1.3.12.jar\n. Today is the first day of try on swagger so i manually copying it into the lib folder of the tomcat. Along with these \njersey-client-2.6.jar\njersey-common-2.6.jar\njersey-container-servlet-2.6.jar\njersey-container-servlet-core-2.6.jar\njersey-entity-filtering-2.6.jar\njersey-guava-2.6.jar\njersey-media-moxy-2.6.jar \njersey-media-multipart-2.6 and jersey-server-2.6 jar file\n. I'm getting this message in the UI \"Can't read from server. It may not have the appropriate access-control-origin settings.\". I'm using Apache Tomcat 6.0.28.\nBelow are the HTTP headers\nAccept  application/json,application/json;charset=\"utf-8\",/_\nAccept-Encoding gzip, deflate\nAccept-Language en-US,en;q=0.5\nHost    localhost:8002\nOrigin  http://localhost:8080\nReferer http://localhost:8080/swagger/\nUser-Agent  Mozilla/5.0 (Windows NT 6.1; WOW64; rv:35.0) Gecko/20100101 Firefox/35.0\nCan you please let me know why is this happening. Tomcat logs do not report any issues.\n. Yes. Please find the web.xml configuration below\nMy context root will be: http://localhost:8080/swagger\n<servlet>\n<servlet-name>Jersey2Config</servlet-name>\n<servlet-class>com.wordnik.swagger.jersey.config.JerseyJaxrsConfig</servlet-class>\n<init-param>\n<param-name>api.version</param-name>\n<param-value>1.0</param-value>\n</init-param>\n<init-param>\n<param-name>swagger.api.basepath</param-name>\n<param-value>http://localhost:8002/api</param-value>\n</init-param>\n<init-param>\n<param-name>swagger.filter</param-name>\n<param-value>com.wordnik.swagger.sample.util.ApiAuthorizationFilterImpl</param-value>\n</init-param>\n<load-on-startup>2</load-on-startup>\n</servlet>\nand in html file \nwindow.swaggerUi = new SwaggerUi({\n      url: \"http://localhost:8002/swagger/api/api-docs\",\n      dom_id: \"swagger-ui-container\",\n      supportedSubmitMethods: ['get', 'post', 'put', 'delete'],\n      onComplete: function(swaggerApi, swaggerUi){\n        log(\"Loaded SwaggerUI\");\n. Can't read swagger JSON from http://localhost:8080/swagger/api-docs\n. \nI get the above exception. I do not have JSON generated anywhere. I had cloned the sample above and trying to replicate it in my local tomcat.\n. I get 404 error.\n. I'm working on windows OS and when i do http://localhost:8080/swagger/ and http://localhost:8080/swagger/swagger-ui.json it is producing the results.\nI might be missing some minute thing which i'm not able to get.\n. Hi fehguy/webron,\nI was able to fix the issue. Thanks for all help.\n. Hi,\n  I had missed scala jars scala-library-2.11.1.jar and scala-xml_2.11-1.0.1.jar files, when i placed them it started working. But not sure how i missed them.\n. java.lang.IllegalArgumentException: Unrecognized Type: [null]\n    at com.fasterxml.jackson.databind.type.TypeFactory._constructType(TypeFactory.java:405)\n    at com.fasterxml.jackson.databind.type.TypeFactory.constructType(TypeFactory.java:354)\n    at com.fasterxml.jackson.databind.ObjectMapper.constructType(ObjectMapper.java:1330)\n    at io.swagger.jackson.ModelResolver.resolveProperty(ModelResolver.java:94)\n    at io.swagger.converter.ModelConverterContextImpl.resolveProperty(ModelConverterContextImpl.java:79)\n    at io.swagger.jackson.ModelResolver.resolve(ModelResolver.java:345)\n    at io.swagger.jackson.ModelResolver.resolve(ModelResolver.java:149)\n    at io.swagger.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:99)\n    at io.swagger.jackson.ModelResolver.resolveProperty(ModelResolver.java:129)\n    at io.swagger.jackson.ModelResolver.resolveProperty(ModelResolver.java:94)\n    at io.swagger.converter.ModelConverterContextImpl.resolveProperty(ModelConverterContextImpl.java:79)\n    at io.swagger.converter.ModelConverters.readAsProperty(ModelConverters.java:58)\n    at io.swagger.jaxrs.Reader.parseMethod(Reader.java:765)\n    at io.swagger.jaxrs.Reader.read(Reader.java:263)\n    at io.swagger.jaxrs.Reader.read(Reader.java:167)\n    at io.swagger.jaxrs.Reader.read(Reader.java:144)\n    at io.swagger.jaxrs.listing.ApiListingResource.scan(ApiListingResource.java:64)\n    at io.swagger.jaxrs.listing.ApiListingResource.process(ApiListingResource.java:90)\n    at io.swagger.jaxrs.listing.ApiListingResource.getListingJson(ApiListingResource.java:129)\n    at io.swagger.jaxrs.listing.ApiListingResource.getListing(ApiListingResource.java:116)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:601)\n    at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81)\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:164)\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:181)\n    at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:158)\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:101)\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\n    at org.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:305)\n    at org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\n    at org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:315)\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:297)\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:267)\n    at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\n    at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:288)\n    at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1110)\n    at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:401)\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:386)\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:335)\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:222)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at com.xxx.xxx.xxx.swagger.SwaggerApiFilter.doFilter(SwaggerApiFilter.java:21)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)\n    at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:190)\n    at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:291)\n    at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:774)\n    at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:703)\n    at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:896)\n    at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:690)\n    at java.lang.Thread.run(Thread.java:722)\nThis is the error i'm getting\npublic void doFilter(ServletRequest request, ServletResponse response,\n            FilterChain chain) throws IOException, ServletException {\n        HttpServletResponse res = (HttpServletResponse) response;\n        res.addHeader(\"Access-Control-Allow-Origin\", \"*\");\n        res.addHeader(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\n        res.addHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\n        chain.doFilter(request, response);\n    }\nI'm struck.\n. Hi fehguy,\nI was able to solve the issue, now i'm not getting those exceptions. Currently i'm facing another issue.\nhttp://localhost/swagger/sample.json is able to fetch all the details and also producing the json.\nBut it gets struck with below message in UI\nfetching resource list: http://localhost/swagger/swagger.json; Please wait.\nFrom the firebug I was able to find the errors listed below\nThe 'help' tag conflicts with a SwaggerClient function/property name.  Use 'client._help' or 'client.apis.help' instead of 'client.help'.\nswagger-ui.js (line 1599)\nThe 'help' tag conflicts with a SwaggerClient operation function/property name.  Use 'client.apis._help' instead of 'client.apis.help'.\nswagger-ui.js (line 1599)\nThe 'help' tag conflicts with a SwaggerClient function/property name.  Use 'client._help' or 'client.apis.help' instead of 'client.help'.\nswagger-ui.js (line 1599)\nThe 'help' tag conflicts with a SwaggerClient operation function/property name.  Use 'client.apis._help' instead of 'client.apis.help'.\nswagger-ui.js (line 1599)\nThe 'help' tag conflicts with a SwaggerClient function/property name.  Use 'client._help' or 'client.apis.help' instead of 'client.help'.\nswagger-ui.js (line 1599)\nThe 'help' tag conflicts with a SwaggerClient operation function/property name.  Use 'client.apis._help' instead of 'client.apis.help'.\nswagger-ui.js (line 1599)\nThe 'help' tag conflicts with a SwaggerClient function/property name.  Use 'client._help' or 'client.apis.help' instead of 'client.help'.\nswagger-ui.js (line 1599)\nThe 'help' tag conflicts with a SwaggerClient operation function/property name.  Use 'client.apis._help' instead of 'client.apis.help'.\nswagger-ui.js (line 1599)\nTypeError: Argument 1 of XMLSerializer.serializeToString does not implement interface Node.\nswagger-ui.js (line 4327, col 25)\nFollowing are the javascript files\n1] backbone-min.js\n2] handlebars-2.0.0.js\n3] highlight.7.3.pack.js\n4] jquery.ba-bbq.min.js\n5] jquery.slideto.min.js\n6] jquery.wiggle.min.js\n7] jquery-1.8.0.min.js\n8] marked.js\n9] swagger-oauth.js\n10]swagger-ui.js\n11] swagger-ui.min.js\n12] underscore-min.js\n13] underscore-min.map\nI have tested it in Firefox [41] and Chrome [31] both the places getting same result.\nCan you please let me know what i have missed.\n. I did the change but still same thing is happening.\n<div class='input'><input placeholder=\"http://localhost/swagger/swagger.json\" id=\"input_baseUrl\" name=\"baseUrl\" type=\"text\"/></div>\nand \n$(function () {\n      var url = window.location.search.match(/url=([^&]+)/);\n      if (url && url.length > 1) {\n        url = decodeURIComponent(url[1]);\n      } else {\n        url = \"http://localhost/swagger/swagger.json\";\n      }\n      window.swaggerUi = new SwaggerUi({\n        url: url,\n        dom_id: \"swagger-ui-container\",\n        supportedSubmitMethods: ['get', 'post', 'put', 'delete', 'patch'],\n        onComplete: function(swaggerApi, swaggerUi){\n          if(typeof initOAuth == \"function\") {\n            initOAuth({\n              clientId: \"your-client-id\",\n              realm: \"your-realms\",\n              appName: \"your-app-name\"\n            });\n          }\nI doubt it is issue with the browser compatibility. I'm getting issues from javascript.\nThe 'help' tag conflicts with a SwaggerClient function/property name. Use 'client._help' or 'client.apis.help' instead of 'client.help'.\nswagger-ui.js (line 1599)\nTypeError: Argument 1 of XMLSerializer.serializeToString does not implement interface Node.\nswagger-ui.js (line 4327, col 25)\n. This can be further tracked from Swagger-ui below is the url\nhttps://github.com/swagger-api/swagger-ui/issues/1685\n. ",
    "MANIKUME24": "Hi Vishak,\nCan you let us know how exactly you fixed this?\nOn Tuesday, March 3, 2015, vishakMetric notifications@github.com wrote:\n\nHi fehguy/webron,\nI was able to fix the issue. Thanks for all help.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/888#issuecomment-76906002\n.\n\n\nRegards,\nManish Agrawal\n. ",
    "mikeholtkamp": "Question does this mean that by the type parameter we can override the schema ref property? . ",
    "joantune": "I thought of that but I haven't tried it. I will ASAP and let you guys know\nhow it went\nEm 09/03/2015 12:57, \"Ron\" notifications@github.com escreveu:\n\nHave you tried excluding the offending dependency from the swagger-core\nlibrary that you use?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/900#issuecomment-77848042\n.\n. Ok, so, good news:\n\nI bumped everything to 1.3.13-SNAPSHOT (in second thought I should have bumped it to something like 1.3.12-RS2-SNAPSHOT, as it's a bit of a bummer to do so because one has to go through all the poms to do that. I think the version can be a property stated in the parent pom [I think this is doable, i'm not sure anymore], also, if I recall I also think that there was a maven plugin to assist with the version bumping, I haven't used mvn in a bit..)\nAnd all of the dependencies that one had with \"javax.ws.rs\"  % \"jsr311-api\"   % \"1.1.1\" were changed to \"javax.ws.rs\"  % \"javax.ws.rs-api\"   % \"2.0.1\" .\nAfter a bit of a hassle with Java8 new Javadoc rules that were making the mvn install fail, i managed to mvn install and sbt publishLocal without a problem (the tests had no errors). I updated the use of the library to that version, and the paymill client works fine, I haven't tested Swagger's functionalities, but I'm assuming they work because the tests worked!\nI'm glad to submit a pull request if you think this is worthy of that (while updating also the Readme.md to have this special note of a version with play2 support and rs-api 2.X)\n. +1 please, if possible, take into account  https://github.com/swagger-api/swagger-core/issues/900\n. ",
    "itayavra": "Hey,\nI'm trying to generate a python REST client based on Swagger documentation, using a swagger.json generated by swagger-maven-plugin-3.1.0\nI have 2 DTOs that extend an abstract base class:\njava\n@ApiModel(subTypes = {FileSourceDTO.class, MemorySourceDTO.class}, discriminator = \"classType\")\n@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = \"classType\")\n@JsonSubTypes({\n        @JsonSubTypes.Type(value = FileSourceDTO.class, name = \"FileSourceDTO\"),\n        @JsonSubTypes.Type(value = MemorySourceDTO.class, name = \"MemorySourceDTO\") })\npublic abstract class LogSourceDTO implements BaseIdentifiableDTO<UUID>  {..}\njava\n@ApiModel(description = \"FileSourceDTO\", parent = LogSourceDTO.class)\npubli` class FileSourceDTO extends LogSourceDTO {..}\njava\n@ApiModel(description = \"MemorySourceDTO\", parent = LogSourceDTO.class)\npublic class MemorySourceDTO extends LogSourceDTO {..}\nIn the resulting REST client, the FileSourceDTO and MemorySourceDTO classes don't contain a 'classType' field (which should be in the REST request as it is generated and expected by jackson) even though it should.\nIn addition, when I called (using the generated python REST client) an API method that returns an object of one of the children classes, an object of the abstract LogSourceDTO class was actually created instread (losing all the additional fields the children class adds over it).\nI tried adding the above @ApiModel annotations after reading the comments here, but it doesn't seem to solve this.\nAm I doing something wrong?\nMany, many thanks.\n. ",
    "sanchopancho13": "I am having the same problem with the ApiImplicitParam annotation.  I spent some time looking over the latest code (1.5.0-M2) and couldn't see any references to this annotation in any of the source code.  I did see a reference in the old 1.3.12 code (in the JaxrsApiReader.scala class).  I think the equivalent class for 1.5 would be the Reader class, but couldn't find an equivalent code block.\n. I am having the same problem with the ApiImplicitParam annotation.  I spent some time looking over the latest code (1.5.0-M2) and couldn't see any references to this annotation in any of the source code.  I did see a reference in the old 1.3.12 code (in the JaxrsApiReader.scala class).  I think the equivalent class for 1.5 would be the Reader class, but couldn't find an equivalent code block.\n. Hi @fehguy.  The simplest test I could devise was the following:\n1) Downloaded the latest swagger-core code from master (which is currently 1.5.1-M2).\n2) In the samples/java-jaxrs project, edited the PetResource class by adding the following annotation to the getPetById method:\njava\n  @ApiImplicitParams({\n      @ApiImplicitParam(name = \"sort\", paramType = \"query\", dataType = \"string\", required = false, value = \"Comma-delimited list of fields to sort by.\")\n  })\n3) [I also changed the description of the operation to make sure that I was seeing my latest changes.]\n4) Ran the sample project with the maven jetty command.\n5) Viewed the new documentation in a local swagger-ui instance.  The implicit parameter is not displayed.\n. Hi @fehguy.  The simplest test I could devise was the following:\n1) Downloaded the latest swagger-core code from master (which is currently 1.5.1-M2).\n2) In the samples/java-jaxrs project, edited the PetResource class by adding the following annotation to the getPetById method:\njava\n  @ApiImplicitParams({\n      @ApiImplicitParam(name = \"sort\", paramType = \"query\", dataType = \"string\", required = false, value = \"Comma-delimited list of fields to sort by.\")\n  })\n3) [I also changed the description of the operation to make sure that I was seeing my latest changes.]\n4) Ran the sample project with the maven jetty command.\n5) Viewed the new documentation in a local swagger-ui instance.  The implicit parameter is not displayed.\n. ",
    "buremba": "Any update on this issue? It seems that there is no reference of @ApiImplicitParams in source code even though the documentation is complete.\n. In my opinion, ApiModelProperty.example without ApiParam.example does not really make sense. I actually asked this question on IRC channel and @fehguy suggested me to file this issue.\n@webron Is there any specific reason that you don't have any plans to include this parameter in swagger-spec and swagger-core?\n. @fehguy no problem. :+1:\n. It seems that currently only a few date related classes are supported by Swagger. (See PrimitiveTypes)  #1445 might be a solution for this issue.\n. @andersaa ObjectMapper doesn't actually directly related with this issue. Swagger uses Jackson inspector in order to analyze classes but Jackson doesn't actually know whether it's a bean class or a primitive type. For example, JSR310Module for Jackson serialize LocalDate as string but doesn't actually tell Jackson that it's a string AFAIK.\nEXTERNAL_CLASSES in Swagger PrimitiveType is used for this purpose in order to determine whether the class is actually a primitive type or not and if it's, Swagger doesn't use Jackson inspector.\nAs a workaround, you can use the following code:\n```\nprivate void setExternalTypes(Map externalTypes) {\n        // ugly hack until swagger supports adding external classes as primitive types\n        try {\n            Field externalTypesField = PrimitiveType.class.getDeclaredField(\"EXTERNAL_CLASSES\");\n            Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n        modifiersField.setAccessible(true);\n        externalTypesField.setAccessible(true);\n        modifiersField.set(externalTypesField, externalTypesField.getModifiers() & ~Modifier.FINAL);\n\n        Map<String, PrimitiveType> externalTypesInternal = externalTypes.entrySet().stream()\n                .collect(Collectors.toMap(e -> e.getKey().getName(), e -> e.getValue()));\n        externalTypesField.set(null, externalTypesInternal);\n    } catch (NoSuchFieldException|IllegalAccessException e) {\n        LOGGER.warn(\"Couldn't set external types\", e);\n    }\n\n}\nsetExternalTypes(ImmutableMap.builder()\n                .put(LocalDate.class, PrimitiveType.DATE)\n                .build())\n``\n. @webron I'm actually usingjava.time.Durationandjava.time.Instantand they're still missing. However, in general, I still think that you should allow people to register their external classes as primitive types since there are many third party libraries and use cases.\nThe workaround that I suggested in #1444 is not reliable,EXTERNAL_CLASSES` field is marked as final and It seems that Java recovers the initial value of field in hot swapping phase.\n. ",
    "who": "Any update on this?  Can I help at all ?\n. Any update on this?  Can I help at all ?\n. I did indeed see nickname, but I thought the Swagger 2.0 spec did away with nickname and changed the operationId ?\nThe string \"nickname\" doesn't even exist in the Swagger 2.0 spec definition. \n. I did indeed see nickname, but I thought the Swagger 2.0 spec did away with nickname and changed the operationId ?\nThe string \"nickname\" doesn't even exist in the Swagger 2.0 spec definition. \n. Ok, got it. That makes sense. Perhaps an update to the comments regarding how operationId is populated by nickname would be worth adding. \n. Ok, got it. That makes sense. Perhaps an update to the comments regarding how operationId is populated by nickname would be worth adding. \n. Excellent.  Thank you!\n. Excellent.  Thank you!\n. @webron Oh, hey! Look at that. Yup, mines a dupe. Closing this.\n. @webron Oh, hey! Look at that. Yup, mines a dupe. Closing this.\n. I am seeing the same issue in reverse; I cannot remove a \"readOnly\" : true setting from the properties by adding the readOnly=false parameter to my ApiModelProperty annotation.\nI dug into the swagger-core code and found this:\nhttps://github.com/swagger-api/swagger-core/blob/9c67549cc4e30db916dac0165f0549485a6eb4c7/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java#L276-L280\nApparently, if a field has a getter and a setter, it is not read only.  If it only has a getter, and no setter, then it's read only.\nI was able to work around this by adding a private setter method inside my model classes.\n@diagonal-e , what happens in your case, if you remove your setter methods?\n. I am seeing the same issue in reverse; I cannot remove a \"readOnly\" : true setting from the properties by adding the readOnly=false parameter to my ApiModelProperty annotation.\nI dug into the swagger-core code and found this:\nhttps://github.com/swagger-api/swagger-core/blob/9c67549cc4e30db916dac0165f0549485a6eb4c7/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java#L276-L280\nApparently, if a field has a getter and a setter, it is not read only.  If it only has a getter, and no setter, then it's read only.\nI was able to work around this by adding a private setter method inside my model classes.\n@diagonal-e , what happens in your case, if you remove your setter methods?\n. @diagonal-e Agreed. Having the read-only attribute automatically adjust depending on getters and setters is, in my opinion, too prescriptive. Also, I did indeed try readOnly=false to over-ride the automatic setting, but it doesn't work.  For now, I'll just stick to keeping that dummy setter.\n. @diagonal-e Agreed. Having the read-only attribute automatically adjust depending on getters and setters is, in my opinion, too prescriptive. Also, I did indeed try readOnly=false to over-ride the automatic setting, but it doesn't work.  For now, I'll just stick to keeping that dummy setter.\n. :+1:  Agreed. The auto-magic read-only determination is too prescriptive.\n. :+1:  Agreed. The auto-magic read-only determination is too prescriptive.\n. Update:\nBecause of how swagger-core 1.5 now automatically includes ALL function parameters that it encounters in a resource/controller method, an annotation along the lines of the above is even more beneficial. \n. Update:\nBecause of how swagger-core 1.5 now automatically includes ALL function parameters that it encounters in a resource/controller method, an annotation along the lines of the above is even more beneficial. \n. Here is a repro:\nThis method ...\n@POST\n    @Path(\"/strings\")\n    @ApiOperation(value = \"Send a string in the body\",\n        nickname = \"gimmieString\",\n        authorizations = @Authorization(value = \"basicAuth\"))\n    public String gimmieString(@ApiParam(\"theString\") String theString, @Auth User user) {\n        return \"you sent: \"+ theString;\n    }\n... yields this parameters spec:\n...\n\"/strings\" : {\n    ...\n    \"parameters\": [\n      {\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"required\": false,\n        \"description\": \"theString\",\n        \"name\": \"body\",\n        \"in\": \"body\"\n      },\n      {\n        \"schema\": {\n          \"$ref\": \"#/definitions/User\"\n        },\n        \"required\": false,\n        \"name\": \"body\",\n        \"in\": \"body\"\n      }\n    ]\n...\n}\n...\nNotice how there are two body parameters.  This creates an invalid swagger spec.  I want swagger to completely ignore the @Auth User user parameter, and I do not want a User definition created.\n. Here is a repro:\nThis method ...\n@POST\n    @Path(\"/strings\")\n    @ApiOperation(value = \"Send a string in the body\",\n        nickname = \"gimmieString\",\n        authorizations = @Authorization(value = \"basicAuth\"))\n    public String gimmieString(@ApiParam(\"theString\") String theString, @Auth User user) {\n        return \"you sent: \"+ theString;\n    }\n... yields this parameters spec:\n...\n\"/strings\" : {\n    ...\n    \"parameters\": [\n      {\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"required\": false,\n        \"description\": \"theString\",\n        \"name\": \"body\",\n        \"in\": \"body\"\n      },\n      {\n        \"schema\": {\n          \"$ref\": \"#/definitions/User\"\n        },\n        \"required\": false,\n        \"name\": \"body\",\n        \"in\": \"body\"\n      }\n    ]\n...\n}\n...\nNotice how there are two body parameters.  This creates an invalid swagger spec.  I want swagger to completely ignore the @Auth User user parameter, and I do not want a User definition created.\n. @webron Let me know if the above is a sufficient repro.\n. @webron Let me know if the above is a sufficient repro.\n. @webron https://github.com/swagger-api/swagger-core/issues/1188 would cover the majority of the over-inclusion issues I'm seeing. It'd be a welcome change!\n. It may also be worthwhile to add @ApiModel#hidden() in addition to the proposed @ApiParam#hidden()\n. @webron \nIf a class is annotated with @ApiIgnore, swagger-core should not use it as a model nor reference it (in another model, parameter, etc).  This is how both springfox and swagger-maven-plugin handle ignoring class-level items. \n. @webron \nIf a class is annotated with @ApiIgnore, swagger-core should not use it as a model nor reference it (in another model, parameter, etc).  This is how both springfox and swagger-maven-plugin handle ignoring class-level items. \n. If you indeed wanted to @ApiIgnore Foo, you probably wouldn't create an @ApiOperation that returns it, as this is a logical conflict, if I understand correctly. \nI suppose one of the following would be the way to handle the logical conflict: \n1. Return a dummy ref of type:\"object\" \n2. Return a ref to Foo, but don't create the model, which intentionally creates a spec that doesn't validate, causing the user to rectify the initial logical conflict.\n. If you indeed wanted to @ApiIgnore Foo, you probably wouldn't create an @ApiOperation that returns it, as this is a logical conflict, if I understand correctly. \nI suppose one of the following would be the way to handle the logical conflict: \n1. Return a dummy ref of type:\"object\" \n2. Return a ref to Foo, but don't create the model, which intentionally creates a spec that doesn't validate, causing the user to rectify the initial logical conflict.\n. Here's one example:\npublic class Foo {\n  private String unignoredString;\n  private Bar bar;\n}\n@ApiModel(hidden=true)\npublic class Bar {\n}\nGiven the above, in the generated swagger spec, I would expect:\n1. Definition of Bar is not present\n2. Reference in Foo's definition to Bar is not present\n. Here's one example:\npublic class Foo {\n  private String unignoredString;\n  private Bar bar;\n}\n@ApiModel(hidden=true)\npublic class Bar {\n}\nGiven the above, in the generated swagger spec, I would expect:\n1. Definition of Bar is not present\n2. Reference in Foo's definition to Bar is not present\n. Also, @dilipkrish may be able to provide some rationale from the Springfox side for having class-level ignores.  I think it's mainly used to ignore controllers, but he may be able to shed some light.\nSee: https://github.com/springfox/springfox/blob/master/springfox-core/src/main/java/springfox/documentation/annotations/ApiIgnore.java#L28\n. Also, @dilipkrish may be able to provide some rationale from the Springfox side for having class-level ignores.  I think it's mainly used to ignore controllers, but he may be able to shed some light.\nSee: https://github.com/springfox/springfox/blob/master/springfox-core/src/main/java/springfox/documentation/annotations/ApiIgnore.java#L28\n. Yes, you could definitely hide at the property level, but you'd have to add that annotation any time the class is referred to across all models that use it. If you wanted an authoritative way to ensure a class is never leaked out when referred to, class-level is most assuring; it safeguards against including an unwanted model if you miss adding the annotation at the getter/field level.\n. Yes, you could definitely hide at the property level, but you'd have to add that annotation any time the class is referred to across all models that use it. If you wanted an authoritative way to ensure a class is never leaked out when referred to, class-level is most assuring; it safeguards against including an unwanted model if you miss adding the annotation at the getter/field level.\n. That is understandable. \nI'm really mainly excited for @ApiParam#hidden :).  It'll cover 90%+ of the things we need to ignore.  The other 10% we can work around until ignore works at the class level too.\n. That is understandable. \nI'm really mainly excited for @ApiParam#hidden :).  It'll cover 90%+ of the things we need to ignore.  The other 10% we can work around until ignore works at the class level too.\n. +1\n. Thank you, @t1 !\n. Thank you, @t1 !\n. @bojanantonovic \nThis looks like a known issue over in swagger-maven-plugin. Please add any useful information to https://github.com/kongchen/swagger-maven-plugin/issues/217\nI can investigate this over the next few days.\n. @bojanantonovic \nThis looks like a known issue over in swagger-maven-plugin. Please add any useful information to https://github.com/kongchen/swagger-maven-plugin/issues/217\nI can investigate this over the next few days.\n. @bojanantonovic \nI've fixed this in swagger-maven-plugin 3.1.1-SNAPSHOT. Could you please pull source and verify ?\n@webron This issue is probably safe to close; we can move discussion over to kongchen/swagger-maven-plugin#217\n. @bojanantonovic \nI've fixed this in swagger-maven-plugin 3.1.1-SNAPSHOT. Could you please pull source and verify ?\n@webron This issue is probably safe to close; we can move discussion over to kongchen/swagger-maven-plugin#217\n. ",
    "thegreatdao": "sorry, maybe a bit off the topic, I also ran  into an issue with @ApiParam swagger-core 1.5.1-M2. I wrote a customized SwaggerSpecFilter to filter out some internal param. Whenever I tried to access the \"access\" property of Parameter in method isParamAllowed, it's alway null. Is this feature missing in 1.5.1-M2? \nThanks,\n. Hi,\nThanks for the quick response.\nI'm only add the depency in my pom as:\nxml\n        <dependency>\n            <groupId>com.wordnik</groupId>\n            <artifactId>swagger-jersey-jaxrs</artifactId>\n            <version>1.5.1.M1</version>\n        </dependency>\nMy project is set to both source and target to 1.7, does this break swagger?\nxml\n<plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>${maven-compiler-plugin.version}</version>\n                    <configuration>\n                        <source>1.7</source>\n                        <target>1.7</target>\n                    </configuration>\n                </plugin>\nThanks,\nH\n. That's the first one I tried, I got the error, then I went to http://mvnrepository.com/artifact/com.wordnik/swagger-core, and found other version. so tried most 1.5.x. pretty much got the same errors. From error message, It complains about classcastexception.\nGoogled, not much information about that specific error.\n. Ok, that's the last thing I can try. Thanks, will report later.\n. Tried latest JDK 7u79 no luck.\nTried JDK 8u45 worked.\nNot sure what happened.\n. Switched back to 7u79 worked again. I think you can close the issue. \nThanks\n. This is actually due to the an out of date jackson jar in my build, I excluded the jackson jar from swagger, and used an older one.\n. Sure, please.\n. Hi, w are staying with 1.3 for now will migrate to 1.5 later.\nYou can close the issue.\nThanks,\n. ",
    "alexworden": "Can anyone offer insight on where the fix needs to happen? I need this a.s.a.p. and am happy to fix it myself but some pointers in the right direction would greatly help. \n. I'll try to test it today and will let you know. \nSent from my iPhone\n\nOn Jun 3, 2015, at 12:18 PM, Ron notifications@github.com wrote:\nHaha, it should work, but if you can test the develop_2.0 branch quickly and provide us feedback, that would be great because we want to make a public release very soon.\n\u2014\nReply to this email directly or view it on GitHub.\n. I tried to verify today but I'm using the swagger-maven-plugin to build the\nspec at compile time.\nCurrently, I can't get that project to build, so I can't update the version\nof swagger it uses.\n\nI don't have time to spin my wheels in this right now sorry.\nOn Wed, Jun 3, 2015 at 3:02 PM, Ron notifications@github.com wrote:\n\n@alexworden https://github.com/alexworden - thanks!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/905#issuecomment-108628033\n.\n. \n",
    "prota": "Hi all, I'm also experiencing that issue with swagger-play2 version 1.3.12. When do you think it could be fixed?\nThanks\n. ",
    "titiu7": "@cppexpert, I tried all the solutions I could find to make the @ApiImplicitParam work, but I have failed. I'm using swagger-jersey-jaxrs 1.5.3-M1. Which version have you used to make it work? \n. @cppexpert it's confusing for sure. I changed the group id to io.swagger and it works. Thanks \n. @cppexpert it's confusing for sure. I changed the group id to io.swagger and it works. Thanks \n. @webron assuming v1.5.4 will have the fix, when is the release expected?\nThanks\n. @webron assuming v1.5.4 will have the fix, when is the release expected?\nThanks\n. Thanks for your reply @fehguy \nI have a class that looks like: \nJava\n@XmlAccessorType(XmlAccessType.FIELD)\n@JsonIgnoreProperties(ignoreUnknown = true)\n@JsonSerialize(include = Inclusion.NON_NULL)\n@JsonAutoDetect(fieldVisibility = Visibility.ANY, getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE)\nPublic Class AttributeValue {\n   private String attributeValue;\n   private AttributeTypeEnum attributeType;\n    public void setAttributeValue(String attributeValue) {\n        this.attributeValue = attributeValue;\n    }\n    public void setAttributeValue(ValueType attributeValue) {\n        this.attributeValue = attributeValue.toString();\n        this.attributeType = attributeValue.getAttributeType();\n    }\n}\nthis class belongs to a library that is used in my project as a maven dependency, so it can't be changed. One of the resource methods, annotated with Swagger, deals with an object that uses the AttributeValue class shown above. When Swagger parses models that will be included in the swagger json file, io.swagger.jaxrs.Reader throws an exception on AttributeValue: \njava.lang.IllegalArgumentException: Conflicting setter definitions for property \"attributeValue\": com.mycompany.AttributeValue#setAttributeValue(1 params) vs com.mycompany.AttributeValue#setAttributeValue(1 params)\n    at com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.getSetter(POJOPropertyBuilder.java:303)\nMy assumption is that the FasterXml Json parser doesn't support overloaded setter methods. The only solution to this kind of problem that I know of is to use @JsonIgnore.  Since the class AttributeValue can't be changed, that option is ruled out. So, I'm wondering if there is a way to use a different library that supports parsing overloaded methods. \nThanks\n. Thanks for your reply @fehguy \nI have a class that looks like: \nJava\n@XmlAccessorType(XmlAccessType.FIELD)\n@JsonIgnoreProperties(ignoreUnknown = true)\n@JsonSerialize(include = Inclusion.NON_NULL)\n@JsonAutoDetect(fieldVisibility = Visibility.ANY, getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE)\nPublic Class AttributeValue {\n   private String attributeValue;\n   private AttributeTypeEnum attributeType;\n    public void setAttributeValue(String attributeValue) {\n        this.attributeValue = attributeValue;\n    }\n    public void setAttributeValue(ValueType attributeValue) {\n        this.attributeValue = attributeValue.toString();\n        this.attributeType = attributeValue.getAttributeType();\n    }\n}\nthis class belongs to a library that is used in my project as a maven dependency, so it can't be changed. One of the resource methods, annotated with Swagger, deals with an object that uses the AttributeValue class shown above. When Swagger parses models that will be included in the swagger json file, io.swagger.jaxrs.Reader throws an exception on AttributeValue: \njava.lang.IllegalArgumentException: Conflicting setter definitions for property \"attributeValue\": com.mycompany.AttributeValue#setAttributeValue(1 params) vs com.mycompany.AttributeValue#setAttributeValue(1 params)\n    at com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.getSetter(POJOPropertyBuilder.java:303)\nMy assumption is that the FasterXml Json parser doesn't support overloaded setter methods. The only solution to this kind of problem that I know of is to use @JsonIgnore.  Since the class AttributeValue can't be changed, that option is ruled out. So, I'm wondering if there is a way to use a different library that supports parsing overloaded methods. \nThanks\n. Hey @fehguy, do you think this issue will be addressed anytime soon in the upcoming versions? \n. Hey @fehguy, do you think this issue will be addressed anytime soon in the upcoming versions? \n. @webron thanks for your reply. I tested out 1.5.8, but that functionality is still not there yet. @frantuma, can you share your thoughts on this. Thanks \n. @webron thanks for your reply. I tested out 1.5.8, but that functionality is still not there yet. @frantuma, can you share your thoughts on this. Thanks \n. @pixels4nickels, I had a similar issue. I fixed it by using Jackson MixIn annotations which works because Swagger uses Jackson internally. \n```\n //use this code to configure the ObjectMapper which will be used for serialization\n  ObjectMapper mapper = Json.mapper();\n  mapper.addMixIn(AttributeValue.class, MixIn.class);\n//create this class to specify which conflicting setter method will be ignored\npublic abstract class MixIn {\n    @JsonIgnore\n    abstract String setAttributeValue(ValueType attributeValue);\n}\n```\nThat's the workaround. I hope this feature gets implemented soon though. Our application uses AcceptHeaderVersioning scheme and Swagger only differentiate operations based on their paths. @ApiOperation doesn't help either. \n. @pixels4nickels, I had a similar issue. I fixed it by using Jackson MixIn annotations which works because Swagger uses Jackson internally. \n```\n //use this code to configure the ObjectMapper which will be used for serialization\n  ObjectMapper mapper = Json.mapper();\n  mapper.addMixIn(AttributeValue.class, MixIn.class);\n//create this class to specify which conflicting setter method will be ignored\npublic abstract class MixIn {\n    @JsonIgnore\n    abstract String setAttributeValue(ValueType attributeValue);\n}\n```\nThat's the workaround. I hope this feature gets implemented soon though. Our application uses AcceptHeaderVersioning scheme and Swagger only differentiate operations based on their paths. @ApiOperation doesn't help either. \n. ",
    "Michael-crazyman": "I just wanna know in annotation @ApiImplicitParam how to describe a parameter's length.Such as there is a  parameter is String and I wanna the client who send a request know what is the max length and min length of this string by swagger? Thank you.. My web service need to authorize but swagger did not have a header blank to input header parameters.So my request is 401,how to solve it?. ",
    "jlubaqy": "how did you resoulve this question,l also meet how to config maxLength and minLength for a parameter. how did you resoulve this question,l also meet how to config maxLength and minLength for a parameter. ",
    "bigwheel": "ok, i re-retry this pull-req.\n. ",
    "jcranky": "Since the integration will be reworked, it would be nice if more information like path and query params could be automatically extracted, so that we don't have to use jax-rs's PathParam and QueryParam annotations. This is information is already available in the routes file.\n. Since the integration will be reworked, it would be nice if more information like path and query params could be automatically extracted, so that we don't have to use jax-rs's PathParam and QueryParam annotations. This is information is already available in the routes file.\n. ",
    "alpeb": "Also it seems models inside scala objects aren't properly supported.\nI modified /samples/scala-play2/app/models/Pet.scala (using tag v.1.3.12) like this:\n```\nobject Models {\n  @ApiModel(\"Pet\")\n  case class Pet(\n    @(ApiModelProperty @field)(position=1, value=\"id\")id: Long,\n    @(ApiModelProperty @field)(position=2)category: Category,\n    @(ApiModelProperty @field)(position=3)name: String,\n    @(ApiModelProperty @field)(position=4)photoUrls: List[String],\n    @(ApiModelProperty @field)(position=5)tags: List[Tag],\n    @(ApiModelProperty @field)(position=6)status: String\n  )\n@ApiModel(\"Tag\")\n  case class Tag (\n    @(ApiModelProperty @field)(position=1)id: Long,\n    @(ApiModelProperty @field)(position=2)name: String)\n}\n```\nAnd the Tag model disappeared from the json in http://localhost:9000/api-docs/pet\nCan someone please confirm this is indeed a bug?\n. Are there any instructions on how to use https://github.com/swagger-api/swagger-scala-module ? All I see there is the SwaggerScalaModelConverter class.\nI would love to make this work now, that's why I was trying with the v.1.3.12 tag.\n. Thanks @fehguy . I added the swagger-scala-module dependency into the pet store, but it doesn't build because it depends on swagger-play2, whose Jackson dependencies conflict with the swagger scala module. So it looks like Play support is nowhere to be found yet in 1.5?\n. ",
    "emersonbarros": "+1\n. ",
    "kanuku": "+1\n. ",
    "orangefiredragon": "+1\n. +1\n. ",
    "anovstrup": "Any progress on this? I might be able to help out, particularly if it means resolving some of the issues @jcranky mentioned.\n. Is there a github repository for the new module yet? Perhaps if the existing code were migrated to its own project, the community could start working on it?\n. ",
    "cdparra": "+1\n. In the meantime, maybe this project can be of help. Will try it later Today and report if it works or not with play 2.4.x\n. Juste tested matiwinnetou/swagger-play24. Working just fine. \n. ",
    "laguiz": "+1\n. ",
    "fcappi": "+1\n. ",
    "zcsongor": "+1\n. Hi!\nOh, thanks, but how can I use it with the latest swagger-play2 module (1.3.12)?\n. ",
    "sebigavril": "+1\n. ",
    "alex-vas": "+1\n. ",
    "laat": "ohh, I see. And it is already enforced in develop_2.0.\nThank you =)\n. ",
    "jsimmonsc": "Also, this is a bit tangential but... I haven't done a lot of scala dev.  What's the best environment to verify that it works?  The travis build above failed, all the tests pass on redhat, and I get 24 failures on windows. \n. Closing since a different commit was made to fix this\n. ",
    "shivangshah": "@jmarreroc I did some testing with the latest 1.5.4 snapshot. Here are my results: https://github.com/swagger-api/swagger-core/issues/925\nMaybe we can close one of these issues as duplicate? I think we both are having almost the same issue.\n. @fehguy I am currently on 2.0 and yes indeed I am talking about subresources. You want me to try 1.5.3-M1 version ? Is this the version before or after 2.0 ? \n. btw .. i do not see this branch 1.5.3-M1-SNAPSHOT in the link you sent me .. \n. Got it .. it seems like I am actually using 1.3.4 swagger version with dropwizard and if I upgrade to 1.5.3, there are some breaking changes that I will need to look into before I can try it out with my project .. any documentation for 1.5.3 snapshot with dropwizard 0.8?\n. I will give this a try sometime this week and let you know how it goes. \n. @fehguy \nSo finally I got a chance play around with 1.5.4 snapshot and it almost got everything working in regards to subresource. There are a few features that the upgrade broke which i am listing here with and maybe you can shed some light as to what could be the problem ? \n1) \nThrough a subresource, if a path is not given at root level (because it gets subresource'd from inheritance), the api will not show up in swagger. For example: \n```\n@Path(\"/api/v1\")\n@Api(tags = \"V1 APIs - All\", value = \"/api/v1\", description = \"MDM Services\")\n@Produces(MediaType.APPLICATION_JSON)\n@Consumes(MediaType.APPLICATION_JSON)\npublic class BaseResource {\n@Path(\"/somePath\")\n    @ApiOperation(value = \"Returns Some service\", response = SomeResource.class)\n    public SomeResource getSomeService() {\n        return this.someService;\n    }\n}\n@Api(tags = \"V1 Tenant APIs\", hidden = true, value = \"/tenants\", description = \"MDM Base Service\")\n@Produces(MediaType.APPLICATION_JSON)\n@Consumes(MediaType.APPLICATION_JSON)\npublic class SomeResource {\n@GET\n    @Path(\"\")\n    @CacheControl(maxAge = 3, maxAgeUnit = TimeUnit.SECONDS)\n    @ApiOperation(value = \"get tenants\", notes = \"Sort Order Values can be 'ASC' or 'DESC'\", response = String.class)\n    public Response getStuff(@ApiParam(value = DATASOURCE_HEADER, required = true)\n{\n}\n```\nYou see that @Path(\"\")? I had to provide that for the swagger scanner to pickup that api. Otherwise it did not recognize the inherited path\n2) The \"required = true\" does not work with @ApiParam (combined with @HeaderParam or @QueryParam) anymore. I checked the swagger.json and no matter what you put, required is always false. It does work with @PathParam though\n3) The previous scanners were able to pickup Body parameters without any @ApiParam now I had to do something like this for it to pickup body parameters: \nBEFORE:\npublic Response create(@ApiParam(value = \"someHeader\", required = true)\n            @HeaderParam(\"someHeader\") String header, String jsonBody) {\nAFTER\npublic Response create(@ApiParam(value = DATASOURCE_HEADER, required = true)\n                        @HeaderParam(\"someHeader\") String header,\n            @ApiParam(value = \"jsonBody\", required = true) String jsonBody) {\nLet me know what you think. \n. @fehguy Tested 2) with the latest snapshot. It looks good ! Thanks for the turnaround! Let me know if you need a separate issue(s) for 1) and 3). I can help test them because I already have the framework and testcase for it in place.\n. +1 on \"required\" not working other than @PathParam\n. @jmarreroc Not sure I understand. The first @Path(\"/somePath\") is basically returning a subresource while the second @Path(\"\") is just for swagger to scan and pick up that specific subresource method (yes, with the same path). The difference is we don't provide an HTTP method when a subresource is returned. JAX-RS won't understand a @GET on a subresource (although I haven't tried it first hand but that's what i'd expect)\nThe \"returns some service\" api operation actually doesn't do anything from what I can see. It's just a way to let swagger know that this is a subresource and you need to go inside this subresource class to scan the remaining methods (and corresponding paths). So you will only see the documentation for \"getTenants\" (as expected)\n. That's what I found so far .. yes ! And no problem.\n. @fehguy Thank you ! Which snapshot/release I can test this with ? \n. sounds good .. let me know what release .. currently I am on 1.5.4-Snapshot\n. @webron @fehguy I just tried with 1.5.0-M2. The bug is still there. I had to give @Path(\"\") for the scanner to pick it up the subresource method even though there is an @ApiOperation \n. @webron do you know which snapshot i can test it with instead of branch? (I might not be able to clone the branch and test :( )\n. @webron I see ok .. when I get a chance, I will build and try it out .. \n. Sorry for the late response @webron  @fehguy . I just got around testing this on 1.5.0 release and it still does not work .. :(\n. @webron Let me set one up and send you guys the link soon .. \n. ",
    "nkoterba": "@todd-richmond Hi...I'm trying to do exactly what you describe in this post:\n- Jersey 2\n- Swagger: 1.5.3-M1\n- EmbeddedJetty (during development) but deployed on standalone Jetty/Tomcat in production\nI followed the quickstart guide: https://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup-1.5\nAnd used the sections for an Application-based setup.\nHowever, I never got a swagger.json or swagger.yaml file.\nI then tried to follow the vague description above.\nIn my EmbeddedJetty.js main function I have this code:\n``` java\ncontext.setContextPath(\"/snap\");\n        context.setParentLoaderPriority(true);\n    _server.setHandler(context);\n\n    Info info = new Info()\n        .title(\"Swagger Sample App\")\n        .description(\"This is a sample server Petstore server.  You can find out more about Swagger \" +\n            \"at <a href=\\\"http://swagger.io\\\">http://swagger.io</a> or on irc.freenode.net, #swagger.  For this sample, \" +\n            \"you can use the api key \\\"special-key\\\" to test the authorization filters\")\n        .termsOfService(\"http://helloreverb.com/terms/\")\n        .contact(new Contact()\n            .email(\"apiteam@swagger.io\"))\n        .license(new License()\n            .name(\"Apache 2.0\")\n            .url(\"http://www.apache.org/licenses/LICENSE-2.0.html\"));\n\n    Swagger swagger = new Swagger().info(info);\n    swagger.securityDefinition(\"api_key\", new ApiKeyAuthDefinition(\"api_key\", In.HEADER));\n    swagger.securityDefinition(\"petstore_auth\",\n        new OAuth2Definition()\n            .implicit(\"http://petstore.swagger.io/api/oauth/dialog\")\n            .scope(\"read:pets\", \"read your pets\")\n            .scope(\"write:pets\", \"modify pets in your account\"));\n    swagger.tag(new Tag()\n        .name(\"pet\")\n        .description(\"Everything about your Pets\")\n        .externalDocs(new ExternalDocs(\"Find out more\", \"http://swagger.io\")));\n    swagger.tag(new Tag()\n        .name(\"store\")\n        .description(\"Access to Petstore orders\"));\n    swagger.tag(new Tag()\n        .name(\"user\")\n        .description(\"Operations about user\")\n        .externalDocs(new ExternalDocs(\"Find out more about our store\", \"http://swagger.io\")));\n\n    context.setAttribute(\"swagger\", swagger);\n\n```\nThen in my Application.java, I have:\n``` java\n@ApplicationPath(\"/rest/*\")\npublic class MyJerseyApplication extends ResourceConfig {\n    private static final Logger Log = LoggerFactory.getLogger(MyJerseyApplication.class);\n@Inject\npublic MyJerseyApplication(ServiceLocator serviceLocator) {\n    super(\n        MyJacksonObjectMapperProvider.class,\n        JacksonFeature.class,\n        MultiPartFeature.class,\n        RolesAllowedDynamicFeature.class,\n        ApiListingResource.class,\n        SwaggerSerializers.class\n    );\n\n    ReflectiveJaxrsScanner scanner = new ReflectiveJaxrsScanner();\n    scanner.setResourcePackage(\"com\");\n    ScannerFactory.setScanner(scanner);\n\n// Then other setup code\n```\nI get no errors when I run, but I never get a swagger.json or swagger.yaml output file...is my setup correct considering it sounds like BeanConfig does not work in 1.5.3?\n. @fehguy @todd-richmond \nI just wanted to confirm that I was able to follow the instructions at: https://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup-1.5\nwith 1.5.2 and everything worked.  However, when I simply update my gradle to use version 1.5.3 no swagger.json or swagger.yaml was created at my context path.\nSo something definitely changed between versions that makes bean configuration in a ResourceConfig application stop working.\nFor now I will use 1.5.2 until this gets resolved.\n. 0\n. ",
    "mayuranchalia": "I am using jersey-server-1.8.jar,jersey-core-1.8.jar and swagger-core_2.9.1-1.3.0.jar\n. Okay Ron thanks a lot for quick response...I will update the jars..and validate.\n. If I add this dependency will it work?\n\ncom.wordnik\nswagger-jaxrs_2.10\n1.3.12\n\n. No Ron,\nI haven't tried with 1.5x version..\n. I have given the model in above comment. Are you asking for com.xml.rpc.xsd.ArrayOfObject Java file?\n. This a response from a function.I can also be take as a input via Body...\n``` java\npublic class ArrayOfObject {\n    protected List array;\n public List getArray() {\n        if (array == null) {\n            array = new ArrayList();\n        }\n        return this.array;\n    }\n}\n. java\n OverrideConverter convertor = new OverrideConverter();\n String jsonString = \"{\\\"id\\\": \\\"ArrayOfObject\\\",\\\"properties\\\": {\\\"array\\\": {\\\"type\\\": \\\"Array\\\",\\\"items\\\":{\\\"$ref\\\":\\\"ArrayObj\\\"}}}}\";\n convertor.add(\"com.xml.rpc.xsd.ArrayOfObject\",jsonString );\nModelConverters.addConverter(convertor, true);\n```\n. Yes Ron,\nI am looking for multiple resource listing docs within a single application.\n. I am not clear about Swagger.java pojo...please clarify\n. Is there a way to configure the same using web.xml\n. Hi fehguy,\nIs this not supported in previous version?.\n. It would be nice of you fehguy, If you help me with this version I have added lots of code already...\nI am trying this patch,,, but it didn't help ...\n  TypeConverter typeConverter = new TypeConverter();\n        typeConverter.add(\"Calendar\", \"string\");\n        typeConverter.add(\"XMLGregorianCalendar\", \"string\");\n        ModelConverters.addConverter(typeConverter, true);\nAm I making any mistake?\n. There is one class called JodaDateTimeConverter,\nIn this I saw there is already a mapping  Map(\"datetime\" -> \"Date\", \"localdatetime\" -> \"Date\", \"xmlgregoriancalendar\" -> \"Date\")..but I am not sure why this is not getting picked.\n. Its not a Pojo ...I am directly returning Calendar and XMLGregorianCalendar from a Jersey service which is calling some other api .\nI will share a snippet.\n@GET\n @Produces({\"application/json\"})\n public javax.xml.datatype.XMLGregorianCalendar helloWorld() throws SoapserviceTestCfcCFCInvocationException_Exception    { \n            LOG.info(\"Executing operation helloWorld\");\n            javax.xml.datatype.XMLGregorianCalendar _helloWorld__return = port.helloWorld();\n            return _helloWorld__return ;\n}\n. Other Snippet\n@Path(\"getTime\")\n    @ApiOperation(\"getTime\")\n    @GET\n    @Produces({\"application/json\"})\n    public java.util.Calendar getTime() throws java.rmi.RemoteException, {\n    LOG.info(\"Executing operation getTime\");\n        return binding.getTime();\n    }\n. Thanks a lot fehguy for the solution, I will try this out.\nBut one more question, \nIn a scenario where calendar or XMLGregorianCalendar is passed as body or formparam. In that case will the model be generated by ModelConvertor.\n@Path(\"setTime\")\n@POST\n@Consumes({\"application/json\"})\npublic void setTime(java.util.Calendar cal) throws java.rmi.RemoteException, {\n  LOG.info(\"Executing operation setTime\");\n  binding.setTime(cal);\n}\n. Hi Fehguy,\nI wrote a sample service..\n    @POST\n    @Produces({\"application/json\"})\n    @Consumes({\"application/json\"})\n    @ApiOperation(value = \"setDate\",response = String.class)\n    @Path(\"time\")\n    public Calendar setDate(Calendar date){\n        System.out.println(date.get(Calendar.DAY_OF_WEEK));\n        return date;\n    }\nand registered \n            TypeConverter typeConverter = new TypeConverter();\n        typeConverter.add(\"Calendar\", \"string\");\n        //typeConverter.add(\"XMLGregorianCalendar\", \"string\");\n        ModelConverters.addConverter(typeConverter, true);\nBut in Swagger model for the body is \n{\n  \"lenient\": false,\n  \"firstDayOfWeek\": 0,\n  \"minimalDaysInFirstWeek\": 0,\n  \"time\": \"\",\n  \"timeZone\": {\n    \"displayName\": \"\",\n    \"iD\": \"\",\n    \"rawOffset\": 0,\n    \"dSTSavings\": 0\n  },\n  \"timeInMillis\": 0,\n  \"weekYear\": 0,\n  \"weeksInWeekYear\": 0,\n  \"weekDateSupported\": false\n}\n. I did also follow below link and solution posted bu you.\nhttps://groups.google.com/forum/#!topic/swagger-swaggersocket/nutGhUbOwvM\n. Hi,\nWas going through the swagger doc -- Api Listing doc \njs\nparameters: [\n{\nname: \"body\",\nrequired: false,\ntype: \"XMLGregorianCalendar\",\nparamType: \"body\",\nallowMultiple: false\n}\n]\nthis is referring to the model generated in api doc.\nWhile analyzing the source code of swagger core got the code which is doing this\nSwaggerSerializers.scala file has method toJsonSchema which is creating parameter level doc.\nIf we add something similar to \"date\" will resolve the issue \nscala\n case \"Date\"       => (name -> \"string\")  ~ (\"format\" -> \"date-time\")\nI am not sure though this is the right way of doing ,just sharing my thoughts.\n. Yes it was working for me.\nOn 28 May 2015 20:55, \"Ron\" notifications@github.com wrote:\n\n@mayuranchalia https://github.com/mayuranchalia - was this resolved for\nyou?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1047#issuecomment-106407004\n.\n. Will you ubdate in main line/branch or I need to fork.\n. \n",
    "smil2k": "Hi,\nI am hit by this using 1.5.10. \n@webron could you please reopen the issue?\nCheers,\nTamas. Related: #929 . ",
    "bquenin": "Ok, I'll wait for the new release then. Thanks for the prompt answer!\n. You're right, according to YAML specification http://yaml.org/spec/1.2/spec.html#id2760395 , these 3 leading dashes are expected. I'm going to file an issue on the swagger-parser project.\n. ",
    "Flamenco": "I don't have that info right now.  The current from Maven Central most likely.  I am not on a dev branch.  Was this issue already addressed?\n. 1.3.4\n. It doesn't work with 1.3.12 either.  I was using that first, and then tried 1.3.4.\n. Upgraded to latest version and api-docs JSON is no longer published (404) although my other rest resources are available.  Bootstrap and filters are all activated.\n. @fehguy swagger.json worked and my issue (along with a bunch of other things) is now working.\nThanks :)\n. 1.5.2-M1\n. with 1.5.3-M1 same issue.  Also note that default values are not working.  \n```\n@GET\n@Path(\"/goodbye/{name}\")\n@ApiOperation(value = \"goodbye\")\npublic String goodbye(@ApiParam(defaultValue = \"the-name\", required = true) @PathParam(\"name\") String name) {\n    return \" Goodbye \" + name + \" \";\n}\n@GET\n@Path(\"/goodbye2\")\n@ApiOperation(value = \"goodbye2\")\npublic String goodbye2(@ApiParam(defaultValue = \"the-name\", required = true) @QueryParam(\"name\") String name) {\n    return \" Goodbye \" + name + \" \";\n}\n```\n\n. Please also notice that the default values don't appear either :(  \nThe @Default jax-rs annotation does work however, but the docs state that default will be used if that value is not specified.  This is useful because a just want default values for the sandbox, not the actual service.\nI would fix this myself but my Scala skills need some work.  For me it's easy and fast to write, but hard to read.\n. ",
    "chrisregnier": "I understand the spec doesn't work for that scenario, but as I said I'm open to putting things on different documentation paths, and older versions were capable of doing this, however the newest version doesn't take the @Api value into account, or the basePath (which I know has been deprecated). I'd say this is at least a bug in the jersey/jaxrs code. Otherwise, there's a direct 1:1 mapping with the @Path mappings, which means you can't control the docs nearly as well now.  So I think the Api value (or basePath) should be used as an override if actually set, since it's more explicit than taking the assumed value from @Path.\n. ",
    "BigSocial": "Just switched to Swagger 1.5M2 and half my documentation disappeared because of this. How is it possible this was missed in the Swagger 2.0 spec? For example, I have a resource to which you can POST JSON, a file in MULTIPART_FORM_DATA, or a raw file in APPLICATION_OCTET_STREAM. So now, not only can't I use Swagger Annotations to document my API, I apparently can't even use Swagger 2.0. Can someone please explain the rationale here, because it escapes me?\n. I guess this solves my issue swagger-api/swagger-core#1531 assuming core will map the InputStream parameter (see my example) to \"type\" : \"string\", \"format\" : \"byte\" and codegen and UI understand the same thing.\nI'd make a few points:\n1. \"type\" : \"string\", \"format\" : \"byte\" is a confusing way to encode this. \"type\" : \"binary\" seems much more clear but I guess there are reasons...\n2. @webron asked in swagger-api/swagger-spec#50 \"Do you think that, in the case of \"format\" : \"binary\", the content type \"octet-stream\" should be mandatory?\" I believe the answer is very much \"no\" since there are any number of MIME types that one might want to deal with this way e.g. all the image types, application/pdf,  application/msword, etc.\n3. Every popular object storage REST API including S3, OpenStack, Box, DropBox, etc. require PUT or POST of binary data with no encoding to upload objects. I point this out to make it clear that this is not a fringe use case for anyone dealing with binary files such as images, documents, presentations, etc.\n. @fehguy Thanks for the quick reply. We're using swagger-jersey2-jaxrs 1.5.4. I don't believe the FormDataParam is meaningful/significant in this case. The is not a form based POST, it is a POST with the file as the raw bytes of the request body. We have a form based POST which works fine (see that code below), but also need the raw POST to work with core, UI and codegen.\n@POST\n@Path(\"/form\")\n@Consumes(MediaType.MULTIPART_FORM_DATA)\n@Produces({ MediaType.APPLICATION_JSON})\npublic Response makeSource(\n        @ApiParam(value = \"The file\", required = true) @FormDataParam(value=\"file\") InputStream inputStream,\n        @ApiParam(hidden=true) @FormDataParam(value=\"file\") FormDataContentDisposition fileDisposition\n        )\n. @fehguy We understand it's different, but it's also the way every major REST API that takes file uploads works. That includes S3, OpenStack, Box, DropBox, etc. all of which take the file as the raw body of the request either through a PUT or POST. So it's in no way a fringe use case. It's the most efficient way to get a file local from the client (which in many cases will not be a browser) up to a server because no encoding is required, and it's directly supported by most HTTP client libraries. \nWe understand Swagger UI upload support might be an issue because the browser may not allow that type of direct upload of a file selected by the user (we haven't tried this), but at least Swagger UI can document it correctly. \n. No problem. The details are this. The scenario is a binary file (think Word document, or PDF) sent as the body of the HTTP POST request with Content-Type = application/octet-stream and no encoding (in which case the client code will set Content-Length) or a Transfer-Encoding negotiated between the client code and the server (like chunked, ZIP, etc.).  No JSON, no base64, etc. In this case, the InputStream on the server (i.e. in the makeSourceRaw method in the first comment) contains the raw bytes of the file. \nI refer you to the W3C HTTP spec where an Entity Body is defined as entity-body    = *OCTET and message-body = entity-body (when there is no Transfer-Encoding) AKA the message body of a HTTP request can be plain old binary data. \nI think maybe we're not quite on the same page. Am I missing something here?\n. ",
    "ralf0131": "Hi, I have encountered the same issue as @dilipkrish has mentioned, I have 2 resources which has identical path, but produces different response types, one for application/json, and one for text/plain.\nThe generated swagger definition is missing unless I comment one of the resource out.\nI have been using swagger-core 1.5.0.\nAny workaround before the spec change takes place?\n. Hi, I have encountered the same issue as @dilipkrish has mentioned, I have 2 resources which has identical path, but produces different response types, one for application/json, and one for text/plain.\nThe generated swagger definition is missing unless I comment one of the resource out.\nI have been using swagger-core 1.5.0.\nAny workaround before the spec change takes place?\n. Just a clarification that just as @fehguy said, we are annotating different methods with the same path + http operation but different produces values? If swagger spec does not support this, I think it is a spec bug.\n. Just a clarification that just as @fehguy said, we are annotating different methods with the same path + http operation but different produces values? If swagger spec does not support this, I think it is a spec bug.\n. I am using swagger on Jersey based RESTful service, onr service simply runs on JDK HttpServer so there is no chance to get context injected into ApiListResource. Therefore NPE will be thrown in line 90 if accessing /swagger.json:\njava\nSwagger swagger = (Swagger) context.getAttribute(\"swagger\");\nconfiguration:\nxml\n<dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-jersey2-jaxrs</artifactId>\n            <version>1.5.0</version>\n        </dependency>\nI am +1 on not relying on ServletContext to initialize swagger instance.\nI checked the source code in v1.5.4 and develop-2.0 branch, which has still not beeb fixed.\nIs there plan about when to fix it?\n. I am using swagger on Jersey based RESTful service, onr service simply runs on JDK HttpServer so there is no chance to get context injected into ApiListResource. Therefore NPE will be thrown in line 90 if accessing /swagger.json:\njava\nSwagger swagger = (Swagger) context.getAttribute(\"swagger\");\nconfiguration:\nxml\n<dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-jersey2-jaxrs</artifactId>\n            <version>1.5.0</version>\n        </dependency>\nI am +1 on not relying on ServletContext to initialize swagger instance.\nI checked the source code in v1.5.4 and develop-2.0 branch, which has still not beeb fixed.\nIs there plan about when to fix it?\n. Thanks for your comments. I will send out a PR later.\n. Hi @fehguy I've filed the PR. Could you please take some time to review it?\n. Hi, thanks for your comments, I never thought about this.\nHow do you achieve multi-tenancy of swagger definitions in a single app?\nCan you give some example configurations?\n. ",
    "beskrovnykh": "I've faced the same issue. Am I right that there is no any workaround here except to change the path of one of the resources?\nI use swagger-core 1.5.18.. ",
    "hriyamaharaja": "This is my previous code for beanconfig:\n beanConfig.setApiReader(\"com.wordnik.swagger.jersey.JerseyApiReader\");\nbeanConfig.setFilterClass(\"swagerfilter\");\nI am getting a no such method error for these.\n. ",
    "MichaelVoegeli": "Is there still the lack of the example project? It still doen't work.\n. Is there still the lack of the example project? It still doen't work.\n. We are using the swagger-maven-plugin version 3.1.3 that is using swagger version 1.5.4 to document our REST services. I hope it's not a bug of the maven plugin itself and should be addressed there.\n. We are using the swagger-maven-plugin version 3.1.3 that is using swagger version 1.5.4 to document our REST services. I hope it's not a bug of the maven plugin itself and should be addressed there.\n. ",
    "defnull": "Running into the same problem. Only the most trivial kind of JAX-RS application seems to be supported. \n. Okay, after removing all the @Api and @Api(hidden=True) annotations it worked as intended. Looks like I was just misguided by google and old workarounds/examples still floating around. Sorry for the noise.\nIf someone finds this via google: Resource locator methods do not need any swagger-specific annotation, only @Path. Sub-Resources classes do not need any annotation at all (No empty @Path and no @Api and especially no @Api(hidden=true)). Swagger will pick them up when it finds a @Path annotated sub-resource locator method.\nHere is a working example:\n```\n@Path(\"/\")\npublic class RootResource {\n    @GET\n    @ApiOperation(\"Service info\")\n    public String info() {\n        return \"info\";\n    }\n@Path(\"/subresource\")\npublic SubResoure subResourceLocator() {\n    return new SubResoure();\n}\n\n}\npublic class SubResoure {\n    @GET\n    public String info() {\n        return \"sub\";\n    }\n}\n```\n. Never mind, it is really easy to do with a ReaderListener:\npublic void afterScan(Reader reader, Swagger swagger) {\n    for(Path path: swagger.getPaths().values()) {\n        for(Entry<HttpMethod, Operation> operation: path.getOperationMap().entrySet()) {\n            switch(operation.getKey()) {\n            case GET:\n            case HEAD:\n            case DELETE:\n            case OPTIONS:\n                operation.getValue().setConsumes(null);\n            }\n        }\n    }\n}\nThis issue can be closed I think.\n. ",
    "JunNakamura": "Thanks, it did work! \nI can configure com.wordnik.swagger.util.Json.mapper to set PropertyNamingStrategy, then property name is changed to snake_case at /swagger.json.\nIf not above, properties of classes I defined are still camelCase.(other properties are snake_case)\n. Please one more. \nI also use swagger-ui, its version is current master (2.1.0-M2). \nI think this version may not catch base_path cause \"BASE URL\" in footer is empty. Should I upgrade swagger-ui ?\n. Sorry, my explain is not good.\nat demo site,  swagger.json has \"host\" and \"basePath\" as below\n\"host\":\"petstore.swagger.io\",\"basePath\":\"/v2\"\nand, swagger-ui display  [ base url: /v2 , api version: 1.0.0 ] .\nOn the other hand, in my case,\nswagger.json have \"host\" and \"base_path\" as below.\n\"host\":\"localhost:8080\",\"base_path\":\"/path/to\"\nswagger-ui display [ base url: , api version: 1.0.0 ] and request url is \"http://localhost:8080/xxx\" when pushing \"Try it\". (uri  must be http://localhost:8080/path/to/xxx)\nI think current swagger-ui do not handle snake_case such a \"base_path\". ( In my local swagger-ui, http://localhost:8080/path/swagger-ui/ display the same as demo site.)\n. @webron \nOK, I see. \nI want to deploy my api with swagger which is enable to try its api. I give priority to it,\u3000I use current release version of swagger-core and swagger-ui. I want they support snake_case in the future.\nIt is OK to close this issue if you so. Thanks for helping!\n. ",
    "blackat": "@fehguy \n\nyou want to go this route, you'll be going off-road a bit but it's technically possible.\n\nCould you please give an example of code? We have multiple endpoints and we would like to document them.\nThanks for your attention :wink: . @fehguy thanks a lot for the link, I have already tested a bit that approach but I would like to know if there is a javax.ws.rs.core.Application based approach, sorry may be I was not really clear.\nI have already tested a bit the servlet based approach but configuring the base path as following\njava\nnew SwaggerContextService()\n    .withServletConfig(config)\n    .withBasePath(config.getServletContext().getContextPath() + \"/api1\")\n    .updateSwagger(swagger);\nI don't have the the good context path, I am expecting something like app.war/api1 but I simply get /api1.\nI don't have any basePath configuration in the web.xml (I dont configure DefaultJaxrsConfig2) where I just add my BoostrapServlet, as you have done in the examples. All the rest system is configured via javax.ws.rs.core.Application extension.\nDo you have please any hint?. ",
    "gkbalu": "Thanks for the response. I would check how to enable CORS on Grizzly and get back\n. I enabled the CORS filter.\n``` java\npublic class CrossDomainFilter implements ContainerResponseFilter {\n@Override\npublic void filter(ContainerRequestContext creq, ContainerResponseContext cres) {\n    cres.getHeaders().add(\"Access-Control-Allow-Origin\", \"\");\n    cres.getHeaders().add(\"Access-Control-Allow-Headers\", \"\");\n    cres.getHeaders().add(\"Access-Control-Allow-Credentials\", \"\");\n    cres.getHeaders().add(\"Access-Control-Allow-Methods\", \"\");\n    cres.getHeaders().add(\"Access-Control-Max-Age\", \"\");\n}\n\n}\n```\nCORS filter added to Jersey Config as below.\n``` java\npublic JerseyConfig() {\n        register(JacksonFeature.class);\n        register(MultiPartFeature.class); \n        //register(BasicAuthenticationFilter.class);\n        register(com.wordnik.swagger.jersey.listing.ApiListingResourceJSON.class);\n        register(com.wordnik.swagger.jersey.listing.JerseyApiDeclarationProvider.class);\n        register(com.wordnik.swagger.jersey.listing.JerseyResourceListingProvider.class);\n        register(new CrossDomainFilter());\n        packages(\"My package name\"); \n    }\nResourceConfig config = new JerseyConfig().property(\"contextConfig\", applicationContext);\n        final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(\n                uri, config, false);\nserver.start();\n```\nI still see api docs in JSON format from the URL/api-docs correctly. UI is not doing anything.\nPlease advise.\n. Thanks. I have add the asterisk still no change. \nDo you have a sample project or code that illustrates how to configure swagger UI for Jersey/grizzly without using Web.xml? I have only been doing trail and error and spent two full days making it work. Any help would be greatly appreciated.\n. Thanks. I made some progress and now stuck at this place. Could you advise why I get this error?\n\n. thats right. I have two End points that starts after the 1.\n i.e localhost:8889/SERVICE1/test and localhost:8889/SERVICE2/test.\nI tried giving the below options in the index.html and it remains the same.\n1. http://localhost:8889/api-docs\n2. http://localhost:8889/api-docs/\n3. http://localhost:8889/\n4. http://localhost:8889\n5. http://localhost:8889/SERVICE1_REST/api_docs\n6. http://localhost:8889/SERVICE1_REST/api_docs\n. If I comment the below lines in the code I get the JSON format result of all apis under my endpoints.\nIf I don't comment I get the Swagger UI html. Which givens the result as given in the above screenshot. Uncaught SyntaxError.\ngrizzlyhttpserver.....\nhttpserver.start();\n//CLStaticHttpHandler staticHttpHandler = new //CLStaticHttpHandler(Test.class.getClassLoader(), \"swagger-ui/\");\n//server.getServerConfiguration().addHttpHandler(staticHttpHandler, \"/\");\nindex.html is under the swagger-ui folder.\n. Thanks. I am not trying to load the URL directly from swagger UI. I load it through browser. \nWhen I type the http://localhost:8889 directly on my browser, I get the Swagger UI. But I do not get the APIS listed.  When I hit explore, I get \nUncaught SyntaxError: Unexpected token < as shown in the screen shot provided in my previous reply.\n. sorry. The site is restricted from my workplace.\n. thank you\n. ",
    "testn": "but still no changelog for 1.5.x release?\n. but still no changelog for 1.5.x release?\n. Thanks. Please update the link in this page then... https://github.com/swagger-api/swagger-core\n. Thanks. Please update the link in this page then... https://github.com/swagger-api/swagger-core\n. That is probably fair enough except that ApiListResource is located in the same package as SwaggerSerializers. It's a bit of configuration to get stuff working nicely with Application configuration to ensure that ApiListResource is excluded but SwaggerSerializers is included. \nIn addition to that, process() method is marked as private which made it a bit difficult to extend properly.\n. That is probably fair enough except that ApiListResource is located in the same package as SwaggerSerializers. It's a bit of configuration to get stuff working nicely with Application configuration to ensure that ApiListResource is excluded but SwaggerSerializers is included. \nIn addition to that, process() method is marked as private which made it a bit difficult to extend properly.\n. Interestingly, process method (which should be protected) already accepts UriInfo. It could then potentially override host/basepath information if it's not provided by @SwaggerDefinition.\n. Interestingly, process method (which should be protected) already accepts UriInfo. It could then potentially override host/basepath information if it's not provided by @SwaggerDefinition.\n. right now... just because Swagger UI does not really work correctly without basePath/host when running on port other than port 80. Also you might want it such that the host information is always what the user is used to access the machine. Load balancer is a good example.\n. right now... just because Swagger UI does not really work correctly without basePath/host when running on port other than port 80. Also you might want it such that the host information is always what the user is used to access the machine. Load balancer is a good example.\n. @javax.inject.Singleton. By specifying it, you make sure that ApiListingResource is not instantiated every time it is accessed.\n. @javax.inject.Singleton. By specifying it, you make sure that ApiListingResource is not instantiated every time it is accessed.\n. ",
    "TomDataworks": "Here's a bit of an update, which appears to solve the issue at least for me. I used the singleton class ModelConverters to add a new ModelResolver. This is probably a workaround, and there is likely a cleaner way of implementing this.\njava\n    @Bean\n    public ObjectMapper objectMapper() {\n        ObjectMapper obMap = new ObjectMapper();\n        obMap.setAnnotationIntrospector(new JaxbAnnotationIntrospector(obMap.getTypeFactory()));\n        ModelConverters.getInstance().addConverter(new com.wordnik.swagger.jackson.ModelResolver(obMap));\n        return obMap;\n    }\nUpon adding this converter, the examples in Swagger-UI as well as the definitions in the swagger.json schema match what is accepted by the JAX-RS service.\n. ",
    "cwstenberg": "Hi \ntrying to get Swagger to reflect JAXB annotations in json model both still unsucessfull trying your suggestions above. I trying this with springfox release 2.0.0.\n@webron When or how should I add or do the new module registrations?\nIs there a test for JAXB 2.0 Annotations in the source?\n. ",
    "Poohie": "Hi webron -\nSorry if this is a newbie question, but can you give an example of how to add the json mapper mentioned above (Json.mapper().registerModule(new JaxbAnnotationModule()); and Yaml.mapper().registerModule(new JaxbAnnotationModule())) via BeanConfig?\n. @webron:  Again, sorry for my lack of knowledge here.  I really do appreciate the pointers & invaluable information!\nI believe if I had used a servlet to initialize the BeanConfig, then simply adding the lines and importing appropriate packages for the json mapper would do the trick.  However, I 1) initialized using Swagger's servlet in web.xml and 2) used Spring's Bean declaration to configure Swagger (see snippets below) and not sure how to add the json mapper.  \nPerhaps the simplest thing is to just convert over to using a servlet?\nI apologize that the snippets are a bit hard to read...\n1) Initialize w/Swagger servlet:\nxml\n    <xmp>\n<servlet>\n        <servlet-name>Jersey2Config</servlet-name>\n        <servlet-class>com.wordnik.swagger.jaxrs.config.DefaultJaxrsConfig</servlet-class>\n        <init-param>\n            <param-name>api.version</param-name>\n            <param-value>1.0.0</param-value>\n        </init-param>\n        <init-param>\n            <param-name>swagger.api.basepath</param-name>\n            <param-value>http://localhost:8080/api</param-value>\n        </init-param>\n        <load-on-startup>2</load-on-startup>\n    </servlet>\n</xmp>\n2) Spring Bean declaration\nxml\n<xmp>\n    <bean id=\"apiListingResource\" class=\"com.wordnik.swagger.jaxrs.listing.ApiListingResource\"/>\n    <bean id=\"swaggerSerializers\" class=\"com.wordnik.swagger.jaxrs.listing.SwaggerSerializers\" scope=\"singleton\"/>    \n <bean id=\"beanConfig\" class=\"com.wordnik.swagger.jaxrs.config.BeanConfig\">\n        <property name=\"title\" value=\"Swagger Sample App\"/>\n        <property name=\"version\" value=\"1.0.0\" />\n        <property name=\"schemes\" value=\"http\" />\n        <property name=\"host\" value=\"localhost:8002\" />\n        <property name=\"basePath\" value=\"/api\"/>\n        <property name=\"resourcePackage\" value=\"io.swagger.resources\"/>\n        <property name=\"scan\" value=\"true\"/>\n    </bean>\n<xmp>\n. @webron: Eureka!  Very grateful for your guidance and expertise on helping to resolve this!\nIn summary: Changed from using Spring bean config with Jersey to use Bootstrap servlet to initialize and configure Swagger in order to add the extra lines of code required for Swagger to recognize the JAXB annotations (which aren't automatically picked up with swagger core 1.5).\n. ",
    "CSchulz": "For example the XmlJavaTypeAdapter annotation is ignored:\n```\n@XmlAccessorType(XmlAccessType.FIELD)\n@XmlRootElement(namespace = \"http://namespace/v1\")\n@AssociationOverride(...)\npublic class FloatPackage extends AbstractItem {\n@NotNull\n@AttributeOverride(name = \"value\", column = @Column(name = \"FGP_NUMBER\", unique = true))\nprivate PackageNumber packageNumber;\n\n```\nThe class PackageNumber:\n@Embeddable\n@XmlJavaTypeAdapter(PackageNumber.Adapter.class)\npublic class PackageNumber extends AbstractValueObject<String> {\nAbstractValueObject:\n@MappedSuperclass\npublic abstract class AbstractValueObject<V> {\n    @Expose\n    private V value;\nXSD output:\n<xs:complexType name=\"Package\">\n    <xs:complexContent>\n      <xs:extension base=\"abstractStockItem\">\n        <xs:sequence>\n          <xs:element minOccurs=\"0\" name=\"PackageNumber\" type=\"xs:string\"/>\nswagger.json output:\n\"PackageNumber\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"value\" : {\n          \"type\" : \"string\"\n        }\n      }\n    },\nI expect that PackageNumber gets a string in swagger.json like in the xsd.\n. I have tried 2.5.4 and 2.6.0-RC2 without any success. I will prepare a simple test case based on the about provided classes.\n. @XmlTransient was working after adding the JaxbAnnotationModule. There was no need for @ApiModelProperty to overwrite some fields anymore, because you can hide them.\n. Yes correct. Before I used @ApiModelProperty to hide information with overwritting data types.\n. Please open an issue and I will attach a sample project.\n. @fehguy Is there a difference between using the JaxbAnnotationIntrospector and the JaxbAnnotationModule?\nJson.mapper().registerModule(new JaxbAnnotationModule());\nvs\nAnnotationIntrospector primary = new JacksonAnnotationIntrospector();\n        AnnotationIntrospector secondary = new JaxbAnnotationIntrospector(TypeFactory.defaultInstance());\n        AnnotationIntrospector pair = AnnotationIntrospector.pair(primary, secondary);\n        Json.mapper().setAnnotationIntrospector(pair);\n. @tcuje In 1.5.3 #1343 is fixed. Did it work for you now too?\n. ",
    "aymittal": "@Poohie can you share the bootstrap servlet\n. @billforward-alex tried that and still no luck.\n. @billforward-alex what version of swagger are you using?\n. @billforward-alex No luck still :(\n. @billforward-alex thanks for your help but still not working.\n. @billforward-alex yes, swaggerbootstrap is getting initialized. i have checked that.\n. Soved the issue. Just exclude the following dependencies from swagger dependency.\n<exclusion>\n<groupId>com.fasterxml.jackson.jaxrs</groupId>\n<artifactId>jackson-jaxrs-json-provider</artifactId>\n</exclusion>\n<exclusion>\n<groupId>com.sun.jersey</groupId>\n<artifactId>jersey-client</artifactId>\n</exclusion>\n<exclusion>\n<groupId>com.sun.jersey</groupId>\n<artifactId>jersey-core</artifactId>\n</exclusion>\n<exclusion>\n<groupId>com.sun.jersey</groupId>\n<artifactId>jersey-server</artifactId>\n</exclusion>\nAfter excluding these i was able to resolve this issue.\n. Soved the issue. Just exclude the following dependencies from swagger dependency.\n<exclusion>\n<groupId>com.fasterxml.jackson.jaxrs</groupId>\n<artifactId>jackson-jaxrs-json-provider</artifactId>\n</exclusion>\n<exclusion>\n<groupId>com.sun.jersey</groupId>\n<artifactId>jersey-client</artifactId>\n</exclusion>\n<exclusion>\n<groupId>com.sun.jersey</groupId>\n<artifactId>jersey-core</artifactId>\n</exclusion>\n<exclusion>\n<groupId>com.sun.jersey</groupId>\n<artifactId>jersey-server</artifactId>\n</exclusion>\nAfter excluding these i was able to resolve this issue.\n. ",
    "billforward-alex": "@aymittal\nMaybe you can use the servlet I used:\n``` java\npackage com.api.rest.cool.my.base;\nimport com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule;\nimport io.swagger.jaxrs.config.BeanConfig;\nimport io.swagger.util.Json;\nimport javax.servlet.ServletConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\npublic class SwaggerBootstrapper extends HttpServlet {\n    @Override\n    public void init(ServletConfig config) throws ServletException {\n        super.init(config);\n    // this makes Swagger honor JAXB annotations\n    Json.mapper()\n            .registerModule(new JaxbAnnotationModule());\n\n    BeanConfig beanConfig = new BeanConfig();\n    beanConfig.setTitle(\"My cool REST API\");\n    beanConfig.setVersion(\"1.0.0\");\n    beanConfig.setSchemes(new String[]{\"https\"});\n    beanConfig.setHost(\"localhost:8080\");\n    beanConfig.setBasePath(\"/RestAPI\");\n    beanConfig.setResourcePackage(\"com.api.rest.cool.my\");\n    beanConfig.setScan(true);\n}\n\n}\n```\nOnce I added the line Json.mapper().registerModule(new JaxbAnnotationModule()); (as per @webron's comment), Swagger started listening to my @XmlTransient annotations \u2014 that is, it correctly started interpreting those annotations as meaning \"hidden = true\" .\n. @aymittal I'm surprised that didn't work for you; it's working well on my end. I'm afraid I don't have any other ideas.\n. @aymittal I am using:\nxml\n<dependencies>\n    <dependency>\n        <groupId>${swagger-group}</groupId>\n        <artifactId>swagger-jaxrs</artifactId>\n        <version>${swagger-version}</version>\n    </dependency>\n    <dependency>\n        <groupId>${swagger-group}</groupId>\n        <artifactId>swagger-core</artifactId>\n        <version>${swagger-version}</version>\n    </dependency>\n    <dependency>\n        <groupId>${swagger-group}</groupId>\n        <artifactId>swagger-annotations</artifactId>\n        <version>${swagger-version}</version>\n    </dependency>\n    <dependency>\n        <groupId>${swagger-group}</groupId>\n        <artifactId>swagger-models</artifactId>\n        <version>${swagger-version}</version>\n    </dependency>\n</dependencies>\n<properties>\n    <swagger-version>1.5.6</swagger-version>\n    <swagger-group>io.swagger</swagger-group>\n</properties>\n. @aymittal \nThe only other parts of my setup are:\nFrom my Spring web.xml:\nxml\n<servlet>\n    <servlet-name>SwaggerBootstrap</servlet-name>\n    <servlet-class>com.api.rest.cool.my.base.SwaggerBootstrapper</servlet-class>\n    <load-on-startup>2</load-on-startup>\n</servlet>\nI believe the servlet there must be named SwaggerBootstrap.\nFinally, from my Spring MVC applicationContext.xml:\nxml\n<bean id=\"apiListingResource\" class=\"io.swagger.jaxrs.listing.ApiListingResource\"/>\n<bean id=\"swaggerSerializers\" class=\"io.swagger.jaxrs.listing.SwaggerSerializers\" scope=\"singleton\"/>\n. @aymittal :( have you tried putting some breakpoints in to double-check that your SwaggerBootstrap servlet actually gets hit?\nAlso if you've got debug symbols or a decompiler, it's worth stepping through swagger-core's internals to see what it's doing.\n. ",
    "csuich2": "I think I'm running into a similar issue, but figured I'd piggyback here until we determine it is a separate issue (in which case I'll open a separate issue).\nI have an API model and am using @ApiModelProperty to indicate my model fields but haven't found a way to specify a default value. The annotation doesn't have a defaultValue field and jax-rs @DefaultValue doesn't seem to work. Am I missing some way to indicate a default value with an @ApiModelProperty?\n. I think I'm running into a similar issue, but figured I'd piggyback here until we determine it is a separate issue (in which case I'll open a separate issue).\nI have an API model and am using @ApiModelProperty to indicate my model fields but haven't found a way to specify a default value. The annotation doesn't have a defaultValue field and jax-rs @DefaultValue doesn't seem to work. Am I missing some way to indicate a default value with an @ApiModelProperty?\n. Thanks @webron - not sure how I missed that issue. I'll sit tight!\n. Thanks @webron - not sure how I missed that issue. I'll sit tight!\n. @webron Thanks, Ron. I just updated the PR per the style guidlines.\n. @webron Thanks, Ron. I just updated the PR per the style guidlines.\n. ",
    "mjgp2": "When reading my swagger it gives a json mapping exception because the value is a map not a string (content type => object). Can provide stack trace illater if you like?\n. Can not deserialize instance of java.lang.String out of START_OBJECT token\n at [Source: N/A; line: -1, column: -1] (through reference chain: com.wordnik.swagger.models.Swagger[\"paths\"]->com.wordnik.swagger.models.Path[\"get\"]->com.wordnik.swagger.models.Operation[\"responses\"]->com.wordnik.swagger.models.Response[\"examples\"])\nreading from /home/mjgp2/import.io/api-docs/swagger-ui/swagger.json\nCan not deserialize instance of java.lang.String out of START_OBJECT token\n at [Source: N/A; line: -1, column: -1] (through reference chain: com.wordnik.swagger.models.Swagger[\"paths\"]->com.wordnik.swagger.models.Path[\"get\"]->com.wordnik.swagger.models.Operation[\"responses\"]->com.wordnik.swagger.models.Response[\"examples\"])\nException in thread \"main\" java.lang.RuntimeException: missing swagger input or config!\n    at com.wordnik.swagger.codegen.DefaultGenerator.generate(DefaultGenerator.java:53)\n    at com.wordnik.swagger.codegen.cmd.Generate.run(Generate.java:77)\n    at com.wordnik.swagger.codegen.SwaggerCodegen.main(SwaggerCodegen.java:33)\nfrom this swagger\n. ",
    "kinetifex": "I'm running into this exact same issue, using inner public static class for responses with responseContainer = \"List\". Is there a solution besides extracting inner classes?\n. @webron - I am using swagger-jersey2-jaxrs_2.10 on version 1.3.12\n. ",
    "vvicario": "The only way  i found was extracting inner classes. Regards. \n. @webron Thanks! :+1: \n. ",
    "griswold": "Sorry, need to rethink the approach here. I didn't notice that the mapper is a singleton, so limiting the visibility of that mapper affects other things that use the singleton. I considered creating the mapper with Json.create(), but this also affects the behavior of Json.mapper because it assigns the static mapper in addition to returning a new instance. Back to the drawing board.\n. ",
    "jasonchaffee": "This works for constraints on the model, but the issue I filed is for support for path params, query params, and matrix params on the resource.  I can use the validations on the query param to make sure that the query param field is within a max and min.  This should be then reflected in the query param in swagger, but I am not seeing that happen.\n\nOn Apr 13, 2015, at 4:46 PM, Tony Tam notifications@github.com wrote:\nHi @jasonchaffee https://github.com/jasonchaffee, we have two methods for handling JSR-303:\nModelResolver.java https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/main/java/com/wordnik/swagger/jackson/ModelResolver.java will process javax.validation.contraints annotations directly in swagger-core. Please see BeanValidatorTest.scala https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/test/scala/BeanValidatorTest.scala for a test of BeanValidationsModel.java https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/test/scala/models/BeanValidationsModel.java\nFor handling hibernate-specific extensions, we've created modules/swagger-hiberate-validations https://github.com/swagger-api/swagger-core/tree/master/modules/swagger-hiberate-validations\nand tests which add additional support for scanning hibernate extensions. Simply include the module and it'll be picked up by SPI.\nIf there's an annotation missing, please file a ticket with those specific.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/swagger-api/swagger-core/issues/981#issuecomment-92538075.\n. \n",
    "bertramn": "Normally an Introspector is set on the ObjectMapper during configuration like mapper.setAnnotationIntrospector(introspector); but one can also wrap this in a Jackson Module. I think all that is needed is a static function on the SwaggerSerializers like:\njava\npublic static void registerModule(Module module) {\n    yaml.registerModule(module);\n}\nbut I did actually mucked around and created a custom SwaggerSerializers with the introspector that drops the annotated field. Unfortunately is seems that your component does not use the introspector at all as the field still comes out with the wrong name. For the time being I am just adding annotation @ApiModelProperty(name = \"id\") in the model so the field name renders correctly in the documentation. I think the use case I got is just too complicated and only caused by a minor design flaw in the Jongo library that will be fixed in the next release. Unless you like to understand the use case in detail, I am inclined to just close the issue as edge case with viable workaround.\n. Well I want to affect both JSON and YAML because the field is only called _id when it goes to the MongoDB but everywhere else such as in the bean, doc or out the other end through the API it should just be id. When you say JSON you refer to com.wordnik.swagger.util.Json right?\n. Hmm I am looking at swagger-jaxrs master and nothing has really changed that would allow the ObjectMapper to be configured with an annotation introspector.\n. ",
    "ctolkmit": "I can try (never did that on GitHub before ;-))\n. i hope i did everything correctly. let me know if there are any other issues.\n. You are right, but the following line will throw an NPE if the string is NULL (inside the if-braces). the comparison itself is null-safe\n. ",
    "jharmn": "+1 confirmed this issue today. This seems to violate spec (certainly in the perspective of JSON Schema), as parsers should ignore unknown custom formats:\nhttps://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#data-types\n\nHowever, the format property is an open string-valued property, and can have any value to support documentation needs. Formats such as \"email\", \"uuid\", etc., can be used even though they are not defined by this specification.\n. +1 to this, ran across it today. We dereference our schema (for other broken libraries), rather than using $ref. As such, any child objects in the schema just disappear in swagger-core.\n. @benken-parasoft AFAIK that's all powered by swagger-js (Javascript/Node-based). \n. \n",
    "natros": "I'm also using resteasy 3 with guice 4 but my configuration is a bit simpler\nhttps://gist.github.com/natros/370c0093fa60379c3901\nI'm missing file upload support.\n. I'm also using resteasy 3 with guice 4 but my configuration is a bit simpler\nhttps://gist.github.com/natros/370c0093fa60379c3901\nI'm missing file upload support.\n. I think I know what the problem is. I'm bootstrapping resteasy with a filter dispatcher rather than a servlet dispatcher, so the ServletConfig is not available in this case. Apparently this last version of swagger is using getInitParameter from ServletConfig that restasy can not provide.\n. I think I know what the problem is. I'm bootstrapping resteasy with a filter dispatcher rather than a servlet dispatcher, so the ServletConfig is not available in this case. Apparently this last version of swagger is using getInitParameter from ServletConfig that restasy can not provide.\n. I don't think it's related to #1491. In my case the ServletContext is set and is valid, but the same does not happen with ServletConfig. IIRC, the ServletConfig is one for each servlet while the ServletContext is for all servlets. \nFor now I cannot change the bootstrap.\njava\npublic User getMessage(@Context ServletContext ctx, @Context ServletConfig cfg) {\n}\nThe debugger shows me this\ncfg = {$Proxy62@8445} Method threw 'org.jboss.resteasy.spi.LoggableFailure' exception. Cannot evaluate com.sun.proxy.$Proxy62.toString()\nctx = {$Proxy59@8444} \"ServletContext@o.e.j.m.p.JettyWebAppContext@9accff0{/,[file:///Users/fsousa/Projects/demo/swagger2-demo/src/main/webapp/, jar:file:///Users/fsousa/.m2/repository/org/webjars/swagger-ui/2.1.4/swagger-ui-2.1.4.jar!/META-INF/resources],AVAILABLE}{file:///Users/fsousa/Projects/demo/swagger2-demo/src/main/webapp/}\"\n. I don't think it's related to #1491. In my case the ServletContext is set and is valid, but the same does not happen with ServletConfig. IIRC, the ServletConfig is one for each servlet while the ServletContext is for all servlets. \nFor now I cannot change the bootstrap.\njava\npublic User getMessage(@Context ServletContext ctx, @Context ServletConfig cfg) {\n}\nThe debugger shows me this\ncfg = {$Proxy62@8445} Method threw 'org.jboss.resteasy.spi.LoggableFailure' exception. Cannot evaluate com.sun.proxy.$Proxy62.toString()\nctx = {$Proxy59@8444} \"ServletContext@o.e.j.m.p.JettyWebAppContext@9accff0{/,[file:///Users/fsousa/Projects/demo/swagger2-demo/src/main/webapp/, jar:file:///Users/fsousa/.m2/repository/org/webjars/swagger-ui/2.1.4/swagger-ui-2.1.4.jar!/META-INF/resources],AVAILABLE}{file:///Users/fsousa/Projects/demo/swagger2-demo/src/main/webapp/}\"\n. I'll try as soon as possible.\nThank you.\n\nOn 02/03/2016, at 21:49, Francesco Tumanischvili notifications@github.com wrote:\n@natros https://github.com/natros, yep issue is with servletConfig being not null but \"invalid\" in RESTEasy filter based; a fix is available in PR #1692 https://github.com/swagger-api/swagger-core/pull/1692 and will be available soon in 1.5.8-SNAPSHOT and in next release v1.5.8\n\u2014\nReply to this email directly or view it on GitHub https://github.com/swagger-api/swagger-core/issues/1691#issuecomment-191448135.\n. I'll try as soon as possible.\n\nThank you.\n\nOn 02/03/2016, at 21:49, Francesco Tumanischvili notifications@github.com wrote:\n@natros https://github.com/natros, yep issue is with servletConfig being not null but \"invalid\" in RESTEasy filter based; a fix is available in PR #1692 https://github.com/swagger-api/swagger-core/pull/1692 and will be available soon in 1.5.8-SNAPSHOT and in next release v1.5.8\n\u2014\nReply to this email directly or view it on GitHub https://github.com/swagger-api/swagger-core/issues/1691#issuecomment-191448135.\n. \n",
    "lpellegr": "@ben-manes Could you please add an example for the web.xml used? a full example would be really helpful.\n. ",
    "mrj365": "Hello all. I have created an example for Using Swagger 2.0 and RestEasy 3 and Spring on Jboss eap 6/Jboss 7 using a web.xml\nhttps://github.com/mrj365/RestEasy-3.09-Spring-3.2.5-Swagger2.0\n. @lpellegr was looking for a web.xml example. I provided one.\n. ",
    "m-radzikowski": "Log above was from swagger-jersey2-jaxrs 1.5.3-M1. On 1.5.0-M2 and 1.5.1-M2 log is:\njava.lang.NullPointerException\n    at com.wordnik.swagger.jaxrs.config.BeanConfig.configure(BeanConfig.java:210)\n    at com.wordnik.swagger.jaxrs.listing.ApiListingResource.scan(ApiListingResource.java:52)\n    at com.wordnik.swagger.jaxrs.listing.ApiListingResource.getListingJson(ApiListingResource.java:79)\n    ...\nand it may be related to #963 \n. Ok, thank you for the response. It's sad that Glassfish does it.\nIt would be great if that info would appear in wiki.\nIssue to close.\n. It's sad it cannot be done by annotations any more. Isn't it doubling the \"tags\" - in @API annotations and by Swagger#tag()?\nSo isn't now description in @Api redundant? Or leaved only by backwards compatibility reasons? At lease javadoc should be updated.\nPS.\nBut thank you for your quick response :)\n. Ok, that's the way we will probably do this. Thank you for the detailed info.\n. This seems to not be an issue any more in Swagger 1.5.9 and/or WildFly 10.0. In fact, right now usiong Json.mapper().setDateFormat() did nothing I could observe in my API or swagger.json.\nIt may be closed now I think.\n. Using swagger-jersey-jaxrs package instead of swagger-jaxrs causes deployment error on WildFly 10 with RestEasy (I've swagger configured by annotations if that matters):\njava\n14:30:54,961 ERROR [org.jboss.msc.service.fail] (ServerService Thread Pool -- 262) MSC000001: Failed to start service jboss.undertow.deployment.default-server.default-host./: org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./: java.lang.RuntimeException: RESTEASY003920: Unable to instantiate ContextResolver\n    at org.wildfly.extension.undertow.deployment.UndertowDeploymentService$1.run(UndertowDeploymentService.java:85)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n    at org.jboss.threads.JBossThread.run(JBossThread.java:320)\nCaused by: java.lang.RuntimeException: RESTEASY003920: Unable to instantiate ContextResolver\n    at org.jboss.resteasy.spi.ResteasyProviderFactory.registerProvider(ResteasyProviderFactory.java:1641)\n    at org.jboss.resteasy.spi.ResteasyProviderFactory.registerProvider(ResteasyProviderFactory.java:1344)\n    at org.jboss.resteasy.spi.ResteasyProviderFactory.registerProvider(ResteasyProviderFactory.java:1266)\n    at org.jboss.resteasy.spi.ResteasyDeployment.registerProvider(ResteasyDeployment.java:552)\n    at org.jboss.resteasy.spi.ResteasyDeployment.registration(ResteasyDeployment.java:342)\n    at org.jboss.resteasy.spi.ResteasyDeployment.start(ResteasyDeployment.java:245)\n    at org.jboss.resteasy.plugins.server.servlet.ServletContainerDispatcher.init(ServletContainerDispatcher.java:113)\n    at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.init(HttpServletDispatcher.java:36)\n    at io.undertow.servlet.core.LifecyleInterceptorInvocation.proceed(LifecyleInterceptorInvocation.java:117)\n    at org.wildfly.extension.undertow.security.RunAsLifecycleInterceptor.init(RunAsLifecycleInterceptor.java:78)\n    at io.undertow.servlet.core.LifecyleInterceptorInvocation.proceed(LifecyleInterceptorInvocation.java:103)\n    at io.undertow.servlet.core.ManagedServlet$DefaultInstanceStrategy.start(ManagedServlet.java:231)\n    at io.undertow.servlet.core.ManagedServlet.createServlet(ManagedServlet.java:132)\n    at io.undertow.servlet.core.DeploymentManagerImpl.start(DeploymentManagerImpl.java:526)\n    at org.wildfly.extension.undertow.deployment.UndertowDeploymentService.startContext(UndertowDeploymentService.java:101)\n    at org.wildfly.extension.undertow.deployment.UndertowDeploymentService$1.run(UndertowDeploymentService.java:82)\n    ... 6 more\nCaused by: java.lang.IllegalArgumentException: RESTEASY003900: Unable to find a public constructor for provider class org.glassfish.jersey.media.multipart.MultiPartProperties$Feature$MultiPartContextResolver\n    at org.jboss.resteasy.spi.ResteasyProviderFactory.createConstructorInjector(ResteasyProviderFactory.java:2218)\n    at org.jboss.resteasy.spi.ResteasyProviderFactory.createProviderInstance(ResteasyProviderFactory.java:2207)\n    at org.jboss.resteasy.spi.ResteasyProviderFactory.addContextResolver(ResteasyProviderFactory.java:1106)\n    at org.jboss.resteasy.spi.ResteasyProviderFactory.registerProvider(ResteasyProviderFactory.java:1635)\n    ... 21 more\nso right now I suppose I've to wait for swagger-jaxrs2 module with @BeanParam support.\n. Well, adding support for own / third-party validation annotations is surely great possibility. But it would require adding support for each own annotation.\nWouldn't you be interested in recursive mechanism that processes each annotations' annotations? We could take annotation and check it's annotations if they have @Constraint annotation. If so, we would apply their validation rules, and so on.\nOf course the performance would decrese as we would have to make annotations' reflections. On the other hand annotations such as org.hibernate.validator.constraints.NotEmpty or own composite annotations, that use standard (already supported) constraint annotations, would be supported without additional developer effort.\n@fehguy please write what do you think about this. If you would be interested I could work on some PR with that feature.. @fehguy yes, I've checked this out. That solves the problem but requires much work and discipline with creating new compound constraints. I'll try to clarify.\nLet's say I've that custom constraint:\njava\n@NotNull\n@Size(min = 8)\n@ReportAsSingleViolation\n@Constraint(validatedBy = {})\n@Target({METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface Password {\n    String message() default \"password must be not null and minimum 8 characters long\";\n    Class<?>[] groups() default {};\n    Class<? extends Payload>[] payload() default {};\n}\nNow to support it in Swagger I've to create Validator that implements ModelConverter, like this:\n```java\npublic class OwnConstraintsValidator extends AbstractModelConverter implements ModelConverter {\n    public OwnConstraintsValidator() {\n        super(Json.mapper());\n    }\n@Override\npublic Property resolveProperty(Type type, ModelConverterContext context, Annotation[] annotations, Iterator<ModelConverter> chain) {\n    Map<String, Annotation> annos = new HashMap<String, Annotation>();\n    if (annotations != null) {\n        for (Annotation anno : annotations) {\n            annos.put(anno.annotationType().getName(), anno);\n        }\n    }\n    Property property = null;\n\n    if (chain.hasNext()) {\n        property = chain.next().resolveProperty(type, context, annotations, chain);\n    }\n    if (property != null) {\n        if (annos.containsKey(\"com.example.Password\")) {\n            property.setRequired(true);\n            if (property instanceof StringProperty) {\n                ((StringProperty) property).minLength(8);\n            }\n        }\n        return property;\n    }\n    return super.resolveProperty(type, context, annotations, chain);\n}\n\n}\n```\nRight?\nNow when some developer creates, for example, @Hex constraint, that is also only a compound validator, without own logic:\njava\n@Pattern(regexp = \"([0-9a-fA-F]{2})*\")\n@ReportAsSingleViolation\n@Constraint(validatedBy = {})\n@Target({METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface Hex {\n    String message() default \"should be even number of [0-9a-fA-F] characters\";\n    Class<?>[] groups() default {};\n    Class<? extends Payload>[] payload() default {};\n}\nhe has to add next if clause to our OwnConstraintsValidator class. And so on, and so on. It doesn't seem to be a big problem, but sooner or later somebody will create new constraint and forgot to add Swagger condition for it. As @gjong noticed, it leads to generating invalid API.\nBut, all of those annotations, @NotNull, @Size, @Pattern and more are already supported by Swagger, so why bother with manual rewriting their logic? The ModelResolver#applyBeanValidatorAnnotations() method already knows them.\nMy idea was to modify that method. It takes actual property annotations as argument. We could reflect those annotations to discover compound (known) constraints and put them into annos map. Then do regular job with applying Property's properties.\nThis way both my upper cases, with @Password and @Hex constraints, would work as expected without defining OwnConstraintsValidator class and logic for each of those constraints. This should not be hard to implement and I could make a PR, if you agree.\n\nBigger problem would be to support own, custom constraints in the same way. For example there is BeanValidator for Hibernate or another one custom implementation of ModelConverter that provides support for custom constraints. I can't find a solution how those custom constraints could be supported in compund constraints. For example that:\njava\n@Pattern(regex = \".*@gmail.com\")\n@Email\n@ReportAsSingleViolation\n@Constraint(validatedBy = {})\n@Target({METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface GmailEmail {\n    String message() default \"must be an email addres in gmail.com domain\";\n    Class<?>[] groups() default {};\n    Class<? extends Payload>[] payload() default {};\n}\nwould result in @Email constraint still not handled by Swagger. The annotations list passed to ModelResolver#applyBeanValidatorAnnotations() can't be altered by other ModelConverters so even dirty hacks are not an option. I think it would be required to modify constraint annotations processing. Maybe behaviours for each constraint could be registered, so we could both manage annotations discovering (resolving compound annotations) and support custom constraints like it is now.\n\nBut that's the bigger, more complex problem, so maybe firstly let's discuss about the first part of my post. What do you think about my proposition about out of the box support for compound constraint annotations? Do you agree?. Well, it's weird that external (@NotNull) annotation has priority over library's own annotation (@ApiModelProperty) when it comes to displaying library-specific stuff.... ",
    "santosdealmeidaelias": "Hello guys,\nI'm having the same problem and I would like to solve this without change the jars inside the glassfish. Because if I do that in the production environment it's possible to happens anothers issuing with other applications.\nThere's another way to solve this?\nThank you.\n. It's not a good news, but thank you.\n. ",
    "Kiolali": "Thanks! I had the same problem. Replacing the five jackson jars (annoations, core, databind, jaxrs-base, jaxrs-json-provider) in the /glassfish/modules folder with the version 2.8.5 solved the problem.. ",
    "asanka88": "Hi @webron ,\nPlease find the response below.\nHTTP/1.1 200 OK\nContent-Type: application/json; charset=UTF-8\nAccept: /\nAccess-Control-Allow-Headers: accept, appid, appname, authorization, content-type\nAccess-Control-Allow-Methods: GET, POST, DELETE, PUT, PATCH, OPTIONS\nAccess-Control-Allow-Origin: *\nHost: myhost.com:11243\nDate: Wed, 22 Apr 2015 15:46:25 GMT\nTransfer-Encoding: chunked\nThanks,\nAsanka \n. :( No. That is not public. Can you spot any issue with the information I provided?\n. ",
    "kungfoo": "I've created a pull request that I hope will fix this.\nhttps://github.com/swagger-api/swagger-core/pull/1010\nSadly, I'm not able to run the tests as they seem to fail on the master branch.\n. I am using ApiListingResource in a JAX-RS application.\n. Do I configure the jackson provider in web.xml?\n. Does this also work with resteasy, since we're actually using resteasy\n3.0.9 to get jax-rs 2.0 features...\nOn 27 Apr 2015 17:42, \"Tony Tam\" notifications@github.com wrote:\n\nMany ways to configure it, but the easiest--assuming you're using\nweb.xml--is to add the path to your scanning properties:\nhttps://github.com/swagger-api/swagger-core/blob/master/samples/java-jaxrs/src/main/webapp/WEB-INF/web.xml#L12\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/pull/1010#issuecomment-96716614\n.\n. I have added that dependecy as it is done in the sample project.\nI'll check there for the appropriate web.xml. Must've missed that.\nOn 27 Apr 2015 18:04, \"Ron\" notifications@github.com wrote:\n@kungfoo https://github.com/kungfoo - if you're using jax-rs 2.0, you'd\nneed the swagger-jersey2-jaxrs dependency. Yes, it would work for resteasy\nas well.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/pull/1010#issuecomment-96724664\n.\n. I've managed to reproduce the problem:\n\nhttps://github.com/kungfoo/swagger-resteasy-sample\nSince I've got to monkey patch resteasy, I added a rakefile to do that, since honestly that kinda thing in maven is beyond me..... :)\nAnyhow, if you navigate to the documentation and look at the Model, or also the generated swagger.json, you can see the declaringClass and son on definitions.\n. You can look at the generated json here once it runs:\nhttp://localhost:8080/resteasy-sample/rest/swagger.json\n. It seems that the field with the Set trips swagger. It really doesn't matter that it's a Set, the same also happens, when the field is declared as a List.\nI will add a testcase to my fork that proves this later on.\n. Just tested my sample on OSX as opposed to linux at work and it is not running on JDK 8, since 7.1.1 is not supporting that.\nAre you guys running JDK 8? I will have to add a branch that uses Wildfly 8 to run the sample...\n. I created a branch java-8-wildfly that is using wildfly to deploy the app.\nIt reproduces the bug without patching resteasy, because widlfy includes a 3.x release of resteasy.\n. It is both reproducable on both branches, but JBoss AS 7.1.1 is not compatible with Java 8.\n- JBoss AS 7.1.1, resteasy 3.0.9 (patched) and Java 7\n- Wildfly 8.0.0, resteasy 3.x (delivered with Wildfly) and Java 8\nThe line that causes the issue is this one:\nhttps://github.com/kungfoo/swagger-resteasy-sample/blob/master/resteasy-sample/src/main/java/ch/ergon/sample/rest/model/Pet.java#L28\nIf the transfer object includes a Collection of Enum values, the problem occurs.\n. I would love to create a test-case in the code for this, but I can't seem to get the build to pass on my machine here. On my laptop it worked this morning, very weird.\nRunning\nmvn -N && mvn install\nshould actually work, for swagger-core right?\nThe build fails on\n```\nTests in error: \n  should convert a model with scala list(ScalaTest): Serialized object does not equal expected serialized string\"\nTests run: 168, Failures: 0, Errors: 1, Skipped: 5\n```\nThis is on Archlinux, happens with openjdk-7, openjdk-8 and jdk-8.\n. I'm actually trying to build swagger-core so I can add a testcase with a Set>.\n. Tried the master branch.\n. Freshly cloned: no luck, it still fails.\nmvn -version\nApache Maven 3.3.3 (NON-CANONICAL_2015-04-29T11:04:34_root; 2015-04-29T10:04:34+02:00)\nMaven home: /opt/maven\nJava version: 1.8.0_45, vendor: Oracle Corporation\nJava home: /usr/lib/jvm/java-8-jdk/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"linux\", version: \"3.19.3-3-arch\", arch: \"amd64\", family: \"unix\"\n. I will try to run it again at home. It worked on the laptop...\n. Sorry that this has drifted so far, but I still think it's great we found and fixed that bug with the enums. :)\n. I;ve noticed this too but figured it was supposed to be this way.\n. I think this is a bug in the UI because it seems the spec returned is correct. In the sample I just created, the enum Action is returned as:\njson\n\"Pet\" : {\n      \"properties\" : {\n        \"kind\" : {\n          \"type\" : \"string\",\n          \"enum\" : [ \"DOG\", \"CAT\", \"UNKNOWN\" ]\n        },\n      }\n. ",
    "ctoestreich": ":+1: \n. +1, the grails sample is lacking docs on how to access the api-docs and it isn't setup correctly as far as I can tell since there is NO docs that give the actual end point to hit for the json spec and /api-docs/swagger.json and /swagger.json both don't seem to work.\n. ",
    "cowwoc": "@webron Okay, please provide an alternative solution in the spec as you mentioned (change this issue to a feature request).\n. Done. Closing this issue.\n. ",
    "jharter": "You can close this now. The offending APIs have been removed and that eliminated the appearance of the Body field. Never figured out what was causing it. I am running a current version of the core.\n. Hi.\nApparently there was a parent pom.xml, and the version of jax-rs (in apache cfx) is 2.2.3.\nDoes that help?\nThanks.\n. Yes, Sorry. Will add it to 1059.\n. yes\n. Sorry for the confusion. I am unaccustomed to seeing application/javascript responses, too. I am just documenting this API. Unless I specify a Response type of application/javascript, I receive a 406. But, if I annotate @Produces({ \"application/javascript\"}), I get a http 200 response with the response body displaying in the Browser debugger. But, Swagger hangs. I don't see the response in the Swagger UI. I am really not saying that the bug is in Swagger. I just want to eliminate Swagger as the culprit. \nIs that clearer?\nThanks,\njohnh\n. Here is a sample return, from the Network tab of IE's Developer Tool. It looks like json to me, but only application/javascript will give me any return at all. \n{\"ver\":\"2020\",\"device\":\"011\",\"brand\":\"001\",\"xmlns\":\"http://abc.go.com/vp2/ws/xmlns\",\"affiliates\":{\"affiliate\":[{\"name\":\"KGTV\",\"dma\":\"SAN DIEGO\",\"rank\":\"28\",\"id\":\"KGTV\",\"event\":{\"url\":{\"callback\":\"event_flat_file\",\"value\":\"http://liveeventsfeed.abc.go.com/kgtv.json\"},\"refresh\":{\"unit\":\"second\",\"value\":\"300\"}}}],\"count\":1},\"server\":{\"time\":\"Mon, 4 May 2015 15:54:52 +0000\"}}\n. I am sure that was the case, but if I just used application/json and there is a correct response in the Response Body in IE's debugger tool. However, the response header says 406. It must be that if Swagger sees a 406 in the header, it means no content and so don't display. I think the API must be sending back the wrong header. Does that sound right to you?\n. xml\n<dependency>\n            <groupId>com.wordnik</groupId>\n            <artifactId>swagger-jaxrs_2.10</artifactId>\n        </dependency>\n. swagger-jaxrs_2.10-3.10.jar in Maven /lib.\n. Perhaps it is the version of the core I am using, but ... Let's say I just provide form parameters instead of arbitrary input. I tried doing that but the body field continues to show up in the UI. It is not needed with specific form params. It is confusing. How can I get rid of it?\n. Hmmm. Is there some swagger annotation that allows me to filter it out? or must I do the filtering in the API java?\n. Seems that \"@ApiParam(hidden=true) is not supported in my version of the core. I suspect. IntelliJ marks it red, can 't resolve method. As you pointed out, I am using Swagger-core 1.3.X. I need to update, I guess, but don't know what to update to. I am using plain vanilla Java and using Maven for building. I put the Swagger jar file in the Maven lib directory and register it. Plus change my pom.xml file to point to the Swagger file. Could you point me to the correct Swagger download?\nThanks. johnh\n.  I see no reason not to upgrade to 1.5, unless you see an issue. Where can I download it?\n. Hmmm. I don't know where to find that information. I am awaiting an email from the folks who set up the project. I know: JAVA_VERSION=\"1.8.0_40\". Maven Version = 3.2.5. That's probably not helpful. Sorry, but I need to await an email from a colleague. \n. I think the answer is 2.4.1, but here is the Maven dependency:tree response.\norg.codehaus.jackson:jackson-jaxrs:jar:1.9.11:compile\ncom.wordnik:swagger-jaxrs_2.10:jar:1.3.12:compile\ncom.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:jar:2.4.1:compile\ncom.fasterxml.jackson.jaxrs:jackson-jaxrs-base:jar:2.4.1:compile\nThanks.\n. I am really hoping that a new version of the core with @ApiParam(hidden=true) works because now the body field is displaying in my GET methods. It used to only display in the POST.\n. Hi.\nApparently there was a parent pom.xml, and the version of jax-rs (in apache cfx) is 2.2.3.\nDoes that help?\nThanks.\n. Yes, I will give it a shot. Thanks so much.\n. Is there a jar file for this? Where would I find it? I need to add it to Maven.\n. Thanks for your help. My first attempts at using this were unsuccessful. Unfortunately I need to push my project with this one bug due to time constraints. I will work with this new version in a week or so and give you any feedback I have. Thanks for all  your help.\n. ",
    "lugaru1234": "I would suggest to add enum for http methods and use it as a key instead of strings.\npublic Map<HttpMethod, Operation> getOperations()\nWhat do you think? \n. I have tested the mechanism on jersey jax-rs implementation (version 1.13) and here is serialized exception thrown by an operation:\n{\n   \"stackTrace\":[\n      {\n         \"methodName\":\"getPetById\",\n         \"fileName\":\"PetResource.java\",\n         \"lineNumber\":61,\n         \"className\":\"io.swagger.sample.resource.PetResource\",\n         \"nativeMethod\":false\n      },\n      {\n         \"methodName\":\"invoke0\",\n         \"fileName\":\"NativeMethodAccessorImpl.java\",\n         \"lineNumber\":-2,\n         \"className\":\"sun.reflect.NativeMethodAccessorImpl\",\n         \"nativeMethod\":true\n      }     \n...\n      {\n         \"methodName\":\"run\",\n         \"fileName\":\"Thread.java\",\n         \"lineNumber\":745,\n         \"className\":\"java.lang.Thread\",\n         \"nativeMethod\":false\n      }\n   ],\n   \"message\":\"test exception\",\n   \"localizedMessage\":\"test exception\",\n   \"suppressed\":[]\n}\nand it would make sense in that case that the same information would be available in the model itself. \n. Done\n. For GenericsTest: collection format was changed from csv to multi and tests were changed to, but this changes weren't merged yet, when I was migrating this test. So when both task and test were merged, changes in test were lost. \nPossibly the same situation happened for 2 other tests. ResourceWithKnownInjections doesn't contain @Path(\"/subresource\") any more and one more tag (\"testingtag\") was added to ResourceWithConfigAndExtensions so swagger.getTags().size() now is 7.\n. Hi, @HenrikHL. I have tested your sample. What jersey version do you use? It should work for jersey2 as you expected. Please look at the https://github.com/swagger-api/swagger-samples/tree/master/java/java-jersey2\n. @HenrikHL, Sure, sorry. I forget about this fact. I have added your code to the test and it works fine, also I have added the same code to the swagger-jersey2-sample-app and it works as you expected too.\nHere is CollectionParameters https://github.com/lugaru1234/swagger-samples/blob/beanParam/java/java-jersey2/src/main/java/io/swagger/sample/model/CollectionParameters.java, and its use https://github.com/lugaru1234/swagger-samples/blob/beanParam/java/java-jersey2/src/main/java/io/swagger/sample/resource/PetResource.java#L101\nAnd the result from the Swagger-UI:\n\nPlease check the swagger dependency. It should include swagger-jersey2-jaxrs:\n<dependency>\n      <groupId>io.swagger</groupId>\n      <artifactId>swagger-jersey2-jaxrs</artifactId>\n      <scope>compile</scope>\n      <version>${swagger-version}</version>\n</dependency>\nIf it doesn't help I'll look for another reason\n. @HenrikHL , you're welcome)\n. @asicignano, what swagger version do you use?\nThe issue does exist in 1.5.3, but it is fixed in 1.5.4-SNAPSHOT\nThis test works\n```\npublic class DefaultValueTest {\n@Test\npublic void scanResourceWithDefaultValue() {\n    final Swagger swagger = new Reader(new Swagger()).read(ResourceWithDefaultValue.class);\n    QueryParameter qp = (QueryParameter) swagger.getPath(\"/test\").getGet().getParameters().get(0);\n    final String json = \"{\" +\n            \"   \\\"name\\\":\\\"page\\\",\" +\n            \"   \\\"in\\\":\\\"query\\\",\" +\n            \"   \\\"description\\\":\\\"Page to be returned\\\",\" +\n            \"   \\\"required\\\":false,\" +\n            \"   \\\"type\\\":\\\"integer\\\",\" +\n            \"   \\\"default\\\":1,\" +\n            \"   \\\"format\\\":\\\"int32\\\"\" +\n            \"}\";\n    SerializationMatchers.assertEqualsToJson(qp, json);\n}\n\n@Api(\"/test\")\n@Path(\"/test\")\npublic class ResourceWithDefaultValue {\n    @ApiOperation(value = \"test\")\n    @GET\n    public void getTest(@QueryParam(\"page\") @DefaultValue(\"1\") @ApiParam(value = \"Page to be returned\") Integer page) {\n        return;\n    }\n}\n\n}\n```\n. ",
    "wing328": "@fehguy FYI. I tested http://petstore.swagger.io/#!/pet/updatePetWithForm but still the update failed. My guess is that the server has not picked up the latest change.\n. @webron ok understood.\n. @fehguy I performed a test via http://petstore.swagger.io/#!/pet/updatePetWithForm and confirm updatePetWithForm now works fine :smile:\n. @webron If you look at the folder containing the StringProperty.java, it has \"DateTimeProperty.java\" but no \"ByteProperty.java\" (both have type set to string)\nhttps://github.com/swagger-api/swagger-core/blob/ee0b6398e98254ed4625ba47e173253466e8fe2b/modules/swagger-models/src/main/java/com/wordnik/swagger/models/properties/StringProperty.java#L90\nThe above line checks type and format to determine if a property is a string. I think the TODO refers to implementing byte as a property itself (instead of treating byte as string)\nIn swagger-codegen, a response (type: string, format: byte) will always map to string. Ideally one can map it manually to something else (e.g. byte[]) using typeMapping.\n. I would recommend updating the comment section on Swagger Spec 2.0 Data Types to mention about Base64-encoded string for byte\n. @webron shall we resume the conversation in https://github.com/swagger-api/swagger-spec/issues/50 to  confirm ?\n. Totally agree.\n. @Helmsdown FYI the PR couldn't pass the CI build.\n. Agree with you that the spec is faulty and the spec owner/user should fix it.\nMy PR aims to handle the exception gracefully.\n. My original intention is to handle the minor issue gracefully for the user. You've the point that the user should be notified of the error so that they can fix it.\n. After you generate the swagger spec, you can load it to editor.swagger.io and generate click on the menu to generate the HTML documentations (or API clients in different langauges)\n. @aparvis I would suggest you to report it in https://github.com/OAI/OpenAPI-Specification similar to this one: \nhttps://github.com/OAI/OpenAPI-Specification/issues/325\n. @afkham thanks for reviewing the license of the dependencies Are you aware of any alternatives we can use to replace it? \nDisclaimer: I'm not an expert in software licensing.\n. @afkham thanks for the follow up.\n. @frantuma I wonder if you can review this PR when you've time. Thanks.. > sorry about that. Feel free to ping us on relevant PRs. We just had a release yesterday \nNo problem at all. Please review when you've time.. ",
    "carlosthe19916": "i'm sorry. I've resolve the problem. That was not a problem of Swagger, My code was bad. Thank you very much.\n. ",
    "xhh": "verified it, thanks\n. ",
    "tomaszszlek": "I just resubmitted https://github.com/swagger-api/swagger-core/pull/1054.\nThanks\n. ",
    "RobWin": "Thx !!  :)\n. Yes. Immutable objects + builders are always a good idea. \nHave a look at https://github.com/mkarneim/pojobuilder or https://www.jetbrains.com/idea/help/replace-constructor-with-builder.html\n. @fehguy @rdiehl My question is: Why do all definitions (ChartDTO, AreaChartDTO and ChartableDTO) need a id and name property, if it would be sufficient to have them in the ChartableDTO definition? It looks like a bug in the generator which generates the Swagger JSON? What do you think?\nReference to https://github.com/Swagger2Markup/swagger2markup/issues/44\n. If you agree to this change, I can create a PR.\n. Ok.thx. we have an issue in Swagger2Markup when we want to preserve the order of the operations which the user choosed (contract-first design via the editor).\n. ",
    "chadjaros": "Cool. Thanks for the info.\n. Sets and maps both have order-preserving implementations in Java. See LinkedHashSet and LinkedHashMap\n. ",
    "exstan": "So how should I order my methods when the 'position' attribute is deprecated? \nAs I'm using swagger-maven-plugin (JAX-RS) and I want a custom order of my methods in the swagger.json.\n. So, it was possible with the 'position' attribute but now it is not :) perfect\n. But if the 'position' attribute is also exported in the JSON, the order will be guaranteed again.\n. ",
    "sschwell": "+1 on this as a important loss of functionality.\nIf the spec needs to change, then so be it. Its really important to be able to specify an order for Resources and Operations.\n. ",
    "lukecampbell999": "Any chance that this could be backward patched into 1.5 stream also - it's a big nuisance for us in terms of the spec showing fields that we've already marked as non-visible.. Any chance that this could be backward patched into 1.5 stream also - it's a big nuisance for us in terms of the spec showing fields that we've already marked as non-visible.. ie we have a class with a property that looks like this :-\n@JsonView(Views.Internal.class)\n@ApiModelProperty(required = false, readOnly = true, access = \"private\")\nprivate String apiKey;\nat the moment, when we use a SwaggerSpecFilter, access always comes back as null, therefore although it's marked as ignored in the view that we generate in the output when the call is made, in the spec itself, the field shows up. \nThe best we can do for right now is to use readOnly or a combination of required and readOnly, which isn't ideal.. ie we have a class with a property that looks like this :-\n@JsonView(Views.Internal.class)\n@ApiModelProperty(required = false, readOnly = true, access = \"private\")\nprivate String apiKey;\nat the moment, when we use a SwaggerSpecFilter, access always comes back as null, therefore although it's marked as ignored in the view that we generate in the output when the call is made, in the spec itself, the field shows up. \nThe best we can do for right now is to use readOnly or a combination of required and readOnly, which isn't ideal.. Added: https://github.com/swagger-api/swagger-core/issues/2067. Added: https://github.com/swagger-api/swagger-core/issues/2067. 1.5.10 - it definitely doesn't work for me.. 1.5.10 - it definitely doesn't work for me.. From our POM \n<dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-jaxrs</artifactId>\n            <version>1.5.10</version>\n        </dependency>\n        <dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-core</artifactId>\n            <version>1.5.10</version>\n        </dependency>\n        <dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-annotations</artifactId>\n            <version>1.5.10</version>\n        </dependency>. From our POM \n<dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-jaxrs</artifactId>\n            <version>1.5.10</version>\n        </dependency>\n        <dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-core</artifactId>\n            <version>1.5.10</version>\n        </dependency>\n        <dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-annotations</artifactId>\n            <version>1.5.10</version>\n        </dependency>. Confirmed - this works with 1.5.12. Thanks for the help and advice!. Confirmed - this works with 1.5.12. Thanks for the help and advice!. ",
    "dalegaspi": "Wow...OK so it was working all along...I was just using the wrong URL to test...going to http://localhost:1339/swagger.json does output the swagger JSON as expected (I should read the manual more carefully lol) ...so i suppose the line\njava\ncontext.addServlet(swagger, \"/api-docs\");\nthe second parameter is ignored?  for now I just replaced it with \"\" and it still works.\nthanks!\n. ",
    "bakito": "I'm not familiar with the Scala Test framework that is used, so I wrote a JUnit test to show the problem:\n``` java\npackage com.wordnik.swagger.jaxrs.utils;\nimport java.lang.reflect.Method;\nimport org.junit.Test;\npublic class ParameterUtilsTest {\n    @Test\n    public void test_simple_parameterized_type() throws NoSuchMethodException, SecurityException {\n        Method method = this.getClass().getMethod(\"testMethod1\", MyType.class);\n        ParameterUtils.isMethodArgumentAnArray(method.getParameterTypes()[0], method.getGenericParameterTypes()[0]);\n    }\n@Test\npublic void test_nested_parameterized_types() throws NoSuchMethodException, SecurityException {\n    Method method = this.getClass().getMethod(\"testMethod2\", MyType.class);\n    ParameterUtils.isMethodArgumentAnArray(method.getParameterTypes()[0], method.getGenericParameterTypes()[0]);\n}\n\npublic void testMethod1(MyType<String> type) {\n}\n\npublic void testMethod2(MyType<MyType<String>> type) {\n}\n\nprivate class MyType<T> {\n}\n\n}\n```\n. ",
    "hongxingli": "Thanks Ron for the quick response, really appreciated! We are using 1.5.3M.\n. from the .json, I can see that\n....\n$ref: \"#/definitions/AccountModel\"\n....\n$ref: \"#/definitions/AccountModel\"\nBut due to the @ApiModel(value=...) annotation, the model has already been rename to Account and User\n. We are on 1.5.3M1, just tried it on 1.5.1M2, issue is still there. Actually same issue exists in stable release 1.3.12.\n. hi Ron, can I ask you a quick question? \u00a0what's the difference between 1.5.3-M1 vs 1.5.1-M2?\nThanks, \nOn Tuesday, May 12, 2015 12:02 PM, Ron <notifications@github.com> wrote:\nVery well, we need to take care of it.\u2014\nReply to this email directly or view it on GitHub. \n. hi Alexey,\nThanks for help take a look, yes, it's the same issue, please help close it.\nWhen will it be merged to main branch?\nThanks, \nOn Friday, May 15, 2015 5:35 AM, Alexey Nechaev <notifications@github.com> wrote:\nLooks like a duplicate of the #992. On 1.5.2-M2-SNAPSHOT (branch develop_2.0) this resource:@Api(\"renamed\")\n@Path(\"renamed\")\n@Produces({\"application/xml\"})\npublic class ResourceWithRenamedModel {\n@GET\n  @Path(\"/test\")\n  @ApiOperation(value = \"Test operation\", response = AccountRegistration.class, tags=\"Test\")\n  public AccountRegistration test() {\n    return null;\n  }\n@ApiModel(value = \"Account\", description = \"Account information\")\n  public static class AccountModel {\n    public String name;\n  }\n@ApiModel(value = \"User\", description = \"User information\")\n  public static class UserModel {\n    public String name;\n  }\n@ApiModel(description = \"Account registration\")\n  public static class AccountRegistration {\n    public AccountModel account;\n    public UserModel user;\n  }\n}\nis reported as follows:{\n  \"swagger\" : \"2.0\",\n  \"tags\" : [ {\n    \"name\" : \"renamed\"\n  }, {\n    \"name\" : \"Test\"\n  } ],\n  \"paths\" : {\n    \"/renamed/test\" : {\n      \"get\" : {\n        \"tags\" : [ \"Test\" ],\n        \"summary\" : \"Test operation\",\n        \"description\" : \"\",\n        \"operationId\" : \"test\",\n        \"produces\" : [ \"application/xml\" ],\n        \"parameters\" : [ ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/AccountRegistration\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"definitions\" : {\n    \"User\" : {\n      \"properties\" : {\n        \"name\" : {\n          \"type\" : \"string\"\n        }\n      },\n      \"description\" : \"User information\"\n    },\n    \"AccountRegistration\" : {\n      \"properties\" : {\n        \"account\" : {\n          \"$ref\" : \"#/definitions/Account\"\n        },\n        \"user\" : {\n          \"$ref\" : \"#/definitions/User\"\n        }\n      },\n      \"description\" : \"Account registration\"\n    },\n    \"Account\" : {\n      \"properties\" : {\n        \"name\" : {\n          \"type\" : \"string\"\n        }\n      },\n      \"description\" : \"Account information\"\n    }\n  }\n}\n\u2014\nReply to this email directly or view it on GitHub. \n. Thanks, please close it, it's the same issue. Just verified on 1.5.2-M2, it works fine there.\n. I'm was on 1.5.1-M2\n. ",
    "kbober-kenzan": "@webron I am using Guice Servlet to configure the Swagger Resources. Forgive me if I am missing some details as I am new to using Guice all together.\n``` java\npublic class RestModule extends JerseyServletModule {\nprivate static final Logger LOG = LoggerFactory.getLogger(RestModule.class);\n\n@Override\nprotected void configureServlets() {\n\n    final String[] propertyPackages = new String[] { \"com.kbss.resource\", \"com.wordnik.swagger.jaxrs.listing\"};\n\n    initParams.put(PackagesResourceConfig.PROPERTY_PACKAGES, Joiner.on(';').join(propertyPackages));\n    initParams.put(ServletContainer.PROPERTY_WEB_PAGE_CONTENT_REGEX, \"/.*\\\\.(jpg|ico|png|gif|html|id|txt|css|js|eot|svg|ttf|woff|woff2)\");\n\n    bind(ObjectMapperProvider.class);\n    bind(DocumentationRS.class);\n\n    bind(com.wordnik.swagger.jaxrs.listing.ApiListingResource.class);\n    bind(com.wordnik.swagger.jaxrs.listing.SwaggerSerializers.class).in(Scopes.SINGLETON);\n\n    filter(\"/*\").through(GuiceContainer.class, initParams);\n    // Using serve works fine but as a filter Swagger fails deployment :(\n    //serve(\"/*\").with(GuiceContainer.class, initParams);\n}\n\n}\n```\n. It looks as if we are using version 1.19\nOn Fri, May 15, 2015 at 6:28 AM, Ron notifications@github.com wrote:\n\nWhich version of jersey-guice do you use?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1068#issuecomment-102362801\n.\n\n\nAny fool can write code that a computer can understand.  Good programmers\nwrite code that humans can understand.  ~Martin Fowler\n. This may shed a bit more lite:\n JAX-RS & JERSEY \n\njavax.ws.rs\njsr311-api\n1.1.1\n\n\njavax.ws.rs\njavax.ws.rs-api\n2.0.1\nprovided\n\n\ncom.sun.jersey\njersey-core\n1.19\n\n\ncom.sun.jersey\njersey-json\n1.19\n\n\norg.codehaus.jettison\njettison\n\n\n\n\ncom.sun.jersey\njersey-server\n1.19\n\n\ncom.sun.jersey.contribs\njersey-guice\n1.19\n\n END JAX-RS & JERSEY \nOn Fri, May 15, 2015 at 9:44 AM, Kyle Bober kyle.bober@gmail.com wrote:\n\nIt looks as if we are using version 1.19\nOn Fri, May 15, 2015 at 6:28 AM, Ron notifications@github.com wrote:\n\nWhich version of jersey-guice do you use?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1068#issuecomment-102362801\n.\n\n\nAny fool can write code that a computer can understand.  Good programmers\nwrite code that humans can understand.  ~Martin Fowler\n\n\nAny fool can write code that a computer can understand.  Good programmers\nwrite code that humans can understand.  ~Martin Fowler\n. Give me a day or two and I will throw something together.\nOn Fri, May 15, 2015 at 12:58 PM, Ron notifications@github.com wrote:\n\nCan you share a sample project that reproduces the problem? It'd be easier\nto work off that.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1068#issuecomment-102458616\n.\n\n\nAny fool can write code that a computer can understand.  Good programmers\nwrite code that humans can understand.  ~Martin Fowler\n. ",
    "ankurpiyush26": "I am having a servlet filter in my application. Additionally my webapp is using Jersey. for REST APIs. \nSwagger seems to work fine if I exclude the servlet filter. But without the exclusion, it breaks.\n. ",
    "seriar": "Unfortunately 1.5.2-M2-SNAPSHOT is not in maven central repo. I tried quickly with 1.5.2-M1, and have had same issue:\ncom.fasterxml.jackson.databind.node.IntNode cannot be cast to com.fasterxml.jackson.databind.node.TextNode (through reference chain: com.wordnik.swagger.models.ModelImpl[\"properties\"]) (through reference chain: com.wordnik.swagger.models.ComposedModel[\"allOf\"]->java.util.ArrayList[0]) (through reference chain: com.wordnik.swagger.models.Swagger[\"definitions\"])\nIs there some repository with M2-SNAPSHOT?\n. Thanks. It seems to be working for even w/o format.\n. Well there is still the issue in two latest version available on maven. I do not mind to use older one, but i belive it is a bug.\n. Ok, seems it is. Just maven by default suggests 1.5.3-M1, which causes my confusion.\n. ",
    "jsiqueiraRF": "Hi, I've had a chance to test the current branch and it works for my use case, which is simply to be able to add a custom vendor field to the Operation.\nA comment, what is the rationale behind the two levels of annotations (ie, @Extension takes an array of @ExtensionProperty)? For a simple case like mine only @ExtensionProperty would be needed and I'm wondering what other use cases there might be.\n. ",
    "santiagopoli": "I think I managed to fix it using tags!\n. I think I managed to fix it using tags!\n. If i define\njava\npublic class Test {\n   @ApiModelProperty(required = true, example = \"Example Text\")\n   private String text;\n}\nThe UI shows:\njavascript\n{ \n   \"text\":\"Example Text\"\n}\nWhich is OK. The problem seems to be regarding values inside Lists.\n. If i define\njava\npublic class Test {\n   @ApiModelProperty(required = true, example = \"Example Text\")\n   private String text;\n}\nThe UI shows:\njavascript\n{ \n   \"text\":\"Example Text\"\n}\nWhich is OK. The problem seems to be regarding values inside Lists.\n. ",
    "bogdatov": "@webron \nI use this in Maven ( and spring boot, if it makes a difference )\n```\n\nio.springfox\nspringfox-swagger2\n2.0.0\n\n    <dependency>\n        <groupId>io.springfox</groupId>\n        <artifactId>springfox-swagger-ui</artifactId>\n        <version>2.0.0</version>\n    </dependency>\n\n```\nMy Swagger config uses this:\n@Profile({\"development\",\"dit\",\"sit\",\"uat\",\"production\"})\n@Configuration\n@EnableSwagger2\npublic class SwaggerConfig  {\nMy code WITH @ApiParam look like this:\n@RequestMapping(value = \"v1/um/user/search/{loginId}\", method = RequestMethod.GET, produces = \"application/json\")\n    @PerformanceMetrics(sla = 500)\n    @ApiOperation(value = \"Returns user list\", notes = \"Returns list of trails matching the critera. SLA:500\", response = List.class)\n    @ApiResponses(value = {\n            @ApiResponse(code = 200, message = \"Successful retrieval of list of users matching the search criteria\", response = SecUserDTO.class),\n            @ApiResponse(code = 400, message = \"Invalid input provided\"),\n            @ApiResponse(code = 404, message = \"No matching user found\") })\n    public List<SecUserDTO> searchUsers(\n            @PathVariable String loginId,\n            @ApiParam(name=\"page\", value=\"start page\") @QueryParam(\"page\") @DefaultValue(\"1\") Integer page,\n            @ApiParam(name=\"page\", value=\"page size\" ) @QueryParam(\"size\") @DefaultValue(\"500\") Integer size,\n            HttpServletRequest request)\n            throws InterruptedException, ExecutionException, TimeoutException, BindException {\nAnd my swagger-ui.html looks like this:\n\n. Thanks, opened with springfox\n. ",
    "pycloux": "For info read in https://github.com/swagger-api/swagger-core/wiki/1.3--1.5-Migration :\nSince swagger-core 1.5 contains implementation for JAX-RS only, this guide covers the migration for that alone. Play integration would be handled at a later date. \nIs there any news about this ?\n. Thanks webron.\nJust a last comment : the issue seems to be focused on scala while play is also \"Java\" (which actually we are using currently our project - using the existing annotations).\nJust in case if you need some hands for the Play2 java support, we can help.\n. ",
    "Plonk42": "Same for me, using:\nxml\n        <dependency>\n            <groupId>org.glassfish.grizzly</groupId>\n            <artifactId>grizzly-http-servlet-server</artifactId>\n            <version>2.3.21</version>\n        </dependency>\n        <dependency>\n            <groupId>org.glassfish.jersey.containers</groupId>\n            <artifactId>jersey-container-grizzly2-http</artifactId>\n            <version>2.18</version>\n        </dependency>\n        <dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-jersey2-jaxrs</artifactId>\n            <version>1.5.0</version>\n        </dependency>\njava.lang.NullPointerException\n    at io.swagger.jaxrs.listing.ApiListingResource.getListingJson(ApiListingResource.java:90)\nLine 90 being:\njava\n        Swagger swagger = (Swagger) context.getAttribute(\"swagger\");\nMaybe related to: http://stackoverflow.com/questions/29974887/jersey-containerrequestfilter-does-not-get-context-servletrequest\n. Here is findMethod() in io.swagger.jaxrs.utils.ReflectionUtils:\njava\n    public static Method findMethod(Method methodToFind, Class<?> cls) {\n        String methodToSearch = methodToFind.getName();\n        Class<?>[] pTypes = methodToFind.getParameterTypes();\n        Type[] gpTypes = methodToFind.getGenericParameterTypes();\n        methodLoop:\n        for (Method method : cls.getMethods()) {\n            if (!method.getName().equals(methodToSearch) || !method.getReturnType().isAssignableFrom(methodToFind.getReturnType())) {\n                continue;\n            }\n            Class<?>[] pt = method.getParameterTypes();\n            Type[] gpt = method.getGenericParameterTypes();\n            for (int j = 0; j < pTypes.length; j++) {\n                Class<?> parameterType = pTypes[j];\n                if (!(pt[j].equals(parameterType) || (!gpt[j].equals(gpTypes[j]) && pt[j].isAssignableFrom(parameterType)))) {\n                    continue methodLoop;\n                }\n            }\n            return method;\n        }\n        return null;\n    }\nLine 93 being:\njava\n                if (!(pt[j].equals(parameterType) || (!gpt[j].equals(gpTypes[j]) && pt[j].isAssignableFrom(parameterType)))) {\nHow can we be sure that pt.size() == pTypes.size() ?\nI think we should first check that the candidate method has the same number of parameters than the one we are looking for. Maybe in the same place where we check name and return type (line 86):\njava\n            if (!method.getName().equals(methodToSearch) || !method.getReturnType().isAssignableFrom(methodToFind.getReturnType())) {\n                continue;\n            }\nWhat do you think?\n. I confirm the issue comes from two overrided methods with same name and different parameters.\nI solved the issue by renaming a method, moving from:\n``` java\n    @Override\n    @GET\n    public Response get() {\n        return _get();\n    }\n@Override\n@GET\n@Path(\"{identifier}\")\npublic Response get(@PathParam(\"identifier\") ResourceIdentifierDto identifier)  {\n    return _get(identifier);\n}\n\n```\nto:\n``` java\n    @Override\n    @GET\n    public Response getAll() {\n        return _get();\n    }\n@Override\n@GET\n@Path(\"{identifier}\")\npublic Response get(@PathParam(\"identifier\") ResourceIdentifierDto identifier)  {\n    return _get(identifier);\n}\n\n```\nAbout the fact that it is not always reproducible, it is because  java.lang.Class.getMethods() ordering is not guaranteed, cf. javadoc:\n\nThe elements in the array returned are not sorted and are not in any particular order.\n. \n",
    "BGaunitz": "Hi, I fixed it quick and dirty which is sufficient for me. May be it can be used for a solid solution.\nBest regards,\nBenjamin\n```\npackage com.wordnik.swagger.jaxrs.listing;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport javax.servlet.ServletConfig;\nimport javax.servlet.ServletContext;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.Application;\nimport javax.ws.rs.core.Context;\nimport javax.ws.rs.core.Cookie;\nimport javax.ws.rs.core.HttpHeaders;\nimport javax.ws.rs.core.MediaType;\nimport javax.ws.rs.core.MultivaluedMap;\nimport javax.ws.rs.core.Response;\nimport javax.ws.rs.core.UriInfo;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport com.wordnik.swagger.annotations.ApiOperation;\nimport com.wordnik.swagger.config.FilterFactory;\nimport com.wordnik.swagger.config.Scanner;\nimport com.wordnik.swagger.config.ScannerFactory;\nimport com.wordnik.swagger.config.SwaggerConfig;\nimport com.wordnik.swagger.core.filter.SpecFilter;\nimport com.wordnik.swagger.core.filter.SwaggerSpecFilter;\nimport com.wordnik.swagger.jaxrs.Reader;\nimport com.wordnik.swagger.jaxrs.config.JaxrsScanner;\nimport com.wordnik.swagger.models.Swagger;\nimport com.wordnik.swagger.util.Yaml;\n@Path(\"/\")\npublic class ApiListingResource {\n    Logger LOGGER = LoggerFactory.getLogger(ApiListingResource.class);\nstatic boolean initialized = false;\nstatic Swagger swagger = null;\n\n@Context\nServletContext context;\n\nprotected synchronized Swagger scan(Application app, ServletConfig sc) {\n    Scanner scanner = ScannerFactory.getScanner();\n    LOGGER.debug(\"using scanner \" + scanner);\n\n    if (scanner != null) {\n        SwaggerSerializers.setPrettyPrint(scanner.getPrettyPrint());\n        if (context != null) {\n            swagger = (Swagger) context.getAttribute(\"swagger\");\n        } else {\n            swagger = new Swagger();\n        }\n        Set<Class<?>> classes = new HashSet<Class<?>>();\n        if (scanner instanceof JaxrsScanner) {\n            JaxrsScanner jaxrsScanner = (JaxrsScanner) scanner;\n            classes = jaxrsScanner.classesFromContext(app, sc);\n        } else {\n            classes = scanner.classes();\n        }\n        if (classes != null) {\n            Reader reader = new Reader(swagger);\n            swagger = reader.read(classes);\n            if (scanner instanceof SwaggerConfig)\n                swagger = ((SwaggerConfig) scanner).configure(swagger);\n            else {\n                SwaggerConfig configurator = (SwaggerConfig) context\n                        .getAttribute(\"reader\");\n                if (configurator != null) {\n                    LOGGER.debug(\"configuring swagger with \" + configurator);\n                    configurator.configure(swagger);\n                } else\n                    LOGGER.debug(\"no configurator\");\n            }\n\n        }\n    }\n    initialized = true;\n    return swagger;\n}\n\n@GET\n@Produces(MediaType.APPLICATION_JSON)\n@Path(\"/swagger.json\")\n@ApiOperation(value = \"The swagger definition in JSON\", hidden = true)\npublic Response getListingJson(@Context Application app,\n        @Context ServletConfig sc, @Context HttpHeaders headers,\n        @Context UriInfo uriInfo) {\n    if (!initialized)\n        swagger = scan(app, sc);\n    if (swagger != null) {\n        SwaggerSpecFilter filterImpl = FilterFactory.getFilter();\n        if (filterImpl != null) {\n            SpecFilter f = new SpecFilter();\n            swagger = f.filter(swagger, filterImpl,\n                    getQueryParams(uriInfo.getQueryParameters()),\n                    getCookies(headers), getHeaders(headers));\n        }\n        return Response.ok().entity(swagger).build();\n    } else\n        return Response.status(404).build();\n}\n\n@GET\n@Produces(\"application/yaml\")\n@Path(\"/swagger.yaml\")\n@ApiOperation(value = \"The swagger definition in YAML\", hidden = true)\npublic Response getListingYaml(@Context Application app,\n        @Context ServletConfig sc, @Context HttpHeaders headers,\n        @Context UriInfo uriInfo) {\n    // Swagger swagger = (Swagger) context.getAttribute(\"swagger\");\n    if (!initialized)\n        swagger = scan(app, sc);\n    try {\n        if (swagger != null) {\n            SwaggerSpecFilter filterImpl = FilterFactory.getFilter();\n            LOGGER.debug(\"using filter \" + filterImpl);\n            if (filterImpl != null) {\n                SpecFilter f = new SpecFilter();\n                swagger = f.filter(swagger, filterImpl,\n                        getQueryParams(uriInfo.getQueryParameters()),\n                        getCookies(headers), getHeaders(headers));\n            }\n\n            String yaml = Yaml.mapper().writeValueAsString(swagger);\n            String[] parts = yaml.split(\"\\n\");\n            StringBuilder b = new StringBuilder();\n            for (String part : parts) {\n                int pos = part.indexOf(\"!<\");\n                int endPos = part.indexOf(\">\");\n                b.append(part);\n                b.append(\"\\n\");\n            }\n            return Response.ok().entity(b.toString()).type(\"text/plain\")\n                    .build();\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n    return Response.status(404).build();\n}\n\nprotected Map<String, List<String>> getQueryParams(\n        MultivaluedMap<String, String> params) {\n    Map<String, List<String>> output = new HashMap<String, List<String>>();\n    if (params != null) {\n        for (String key : params.keySet()) {\n            List<String> values = params.get(key);\n            output.put(key, values);\n        }\n    }\n    return output;\n}\n\nprotected Map<String, String> getCookies(HttpHeaders headers) {\n    Map<String, String> output = new HashMap<String, String>();\n    if (headers != null) {\n        for (String key : headers.getCookies().keySet()) {\n            Cookie cookie = headers.getCookies().get(key);\n            output.put(key, cookie.getValue());\n        }\n    }\n    return output;\n}\n\nprotected Map<String, List<String>> getHeaders(HttpHeaders headers) {\n    Map<String, List<String>> output = new HashMap<String, List<String>>();\n    if (headers != null) {\n        for (String key : headers.getRequestHeaders().keySet()) {\n            List<String> values = headers.getRequestHeaders().get(key);\n            output.put(key, values);\n        }\n    }\n    return output;\n}\n\n}\n```\n. ",
    "kareez": "I tried: \n- 1.3.7 \n- 1.3.12\n- 1.5.2-M2.  \nAll of them have the same issue. \n. apparently my mistake again. in 1.5.2-M2 is NOT reproducible anymore. I will close the ticket. \nsorry for any inconvenience caused.\n. Sorry, wrong project.\n. ",
    "frantuma": "fixed in #1646\n. @andi-livn I am not sure if I get correctly your use case, and you want to have Throwable \"completely out of the way\", you can mark TransientRuntimeException with\n@JsonIgnoreProperties({\"detailMessage\",\"cause\",\"stackTrace\", \"suppressed\"})\nso basically adding suppressed to JsonIgnore\n. @andi-livn mmh strange actually, it seems to work alright with similar code as in https://gist.github.com/frantuma/3a563b8576a5e75f141a.\nAre you using latest version of swagger? \n. @webron possibly this could cover different scenarios which are now inconsistent, dependently on which annotations are present and with which values among @ApiResponse, @ApiOperation.code and @ApiOperation.response, for some cases returning 200, for others default or no \"success codes\".\nChecking spec, it reads:\n\nthe Responses Object MUST contain at least one response code, and it SHOULD be the response for a successful operation call. \n\nand\n\nThe default can be used a default response object for all HTTP codes that are not covered individually by the specification.\n\nbut also\n\nit is expected from the documentation to cover a successful operation response and any known errors\nThe documentation of responses other than the ones declared for specific HTTP response codes. It can be used to cover undeclared responses. Reference Object can be used to link to a response that is defined at the Swagger Object's responses section.\n\nPossibly therefore one of the behaviors below would be consistent, 1. not adding default and 2. including default for non successful codes\nI am not sure if I get this fully though, and if codes should be different, please let me know what you think.\n```\nCurrent behaviour:\n\nNo annotation                                default\n@ApiResponse                             @ApiResponse values WITHOUT DEFAULT\n@ApiOperation.code (IGNORED)             default\n@ApiOperation.response                       200 (except Void.class -> default)\n@ApiOperation.response & @ApiOperation.code  @ApiOperation.code\n@ApiOperation.code & @ApiResponse            @ApiResponse values WITHOUT DEFAULT\n@ApiOperation.response & @ApiResponse        200 (except Void.class -> default)\n                                                                                        +@ApiResponse values\n@ApiOperation.response & @ApiOperation.code & \n@ApiResponse                                @ApiOperation.code + @ApiResponse values\n\nPossible expected behaviour 1:\n\nNo annotation                                200 (success)\n@ApiResponse                             @ApiResponse values + 200 (success)\n@ApiOperation.code                           @ApiOperation.code\n@ApiOperation.response                       200 (success)\n@ApiOperation.response & @ApiOperation.code  @ApiOperation.code\n@ApiOperation.code & @ApiResponse            @ApiResponse values + @ApiOperation.code\n@ApiOperation.response & @ApiResponse        @ApiResponse values + 200 (success)\n@ApiOperation.response & @ApiOperation.code & \n@ApiResponse                                @ApiResponse values + @ApiOperation.code\n\nPossible expected behaviour 2:\n\nNo annotation                    200 (success), default (\"invalid op??\")\n@ApiResponse                 @ApiResponse values + 200 (success), default (\"invalid..\")\n@ApiOperation.code               @ApiOperation.code + default (\"invalid..\")\n@ApiOperation.response           200 (success), default (\"invalid..\")\n@ApiOperation.response & \n@ApiOperation.code              @ApiOperation.code + default (\"invalid..\")\n@ApiOperation.code & \n@ApiResponse                    @ApiResponse values + @ApiOperation.code, default \n@ApiOperation.response & \n@ApiResponse                    @ApiResponse values + 200 (success), default (\"invalid..\")\n@ApiOperation.response & \n@ApiOperation.code & @ApiResponse   @ApiResponse values + @ApiOperation.code, default (\"invalid\n\n```\n. Closing, fixed in #1314.\n. @webron @briandelaney \nI believe the direction is ok, but it doesn't address fully the issue, and also with current code it introduces a wrong behaviour when 2 contrasting JAX-RS param annotations are set on sub and super.\nA possible idea is to better adhere to JAX-RS spec, implementing the same behaviour defined in the spec, i.e. inherit JAX-RS annotations if no JAX-RS annotation is defined in the child.\nIt would mean enhancing @briandelaney code handling JAX-RS annotations according to spec\nPlease let me know what you think\n\nJAX-RS annotations MAY be used on the methods and method parameters of a super-class or an implemented interface. Such annotations are inherited by a corresponding sub-class or implementation class method provided that method and its parameters do not have any JAX-RS annotations of its own. Annotations on a super-class take precedence over those on an implemented interface. If a subclass or implementation method has any JAX-RS annotations then all of the annotations on the super class or interface method are ignored. E.g.:\n\n```\npublic interface ReadOnlyAtomFeed {\n    @GET @Produces(\"application/atom+xml\")\n    Feed getFeed();\n}\n@Path(\"feed\")\npublic class ActivityLog implements ReadOnlyAtomFeed {\n    public Feed getFeed() {...}\n}\n```\n\nIn the above, ActivityLog.getFeed inherits the @GET and @Produces annotations from the interface. Conversely:\n\n```\n@Path(\"feed\")\npublic class ActivityLog implements ReadOnlyAtomFeed {\n    @Produces(\"application/atom+xml\")\n    public Feed getFeed() {...}\n}\n```\n\nIn the above, the @GET annotation on ReadOnlyAtomFeed.getFeed is not inherited by ActivityLog\n.getFeed\n. Please check also the following samples demonstrating multi swagger contexts:\n\n\njava-jersey-jaxrs-multi-simple-webxml\njava-jersey-jaxrs-multi-simple-servlet\njava-jersey-jaxrs-multi-use-basepath\n. merged in #1683 \n. @webron @kendzi \nIt looks good to me, but it needs to be rebased and to have SimpleResourceWithVendorAnnotation annotated with @Path(\"/\") at class level to allow it to be scanned during test. \n. should be solved in #1747\n. @webron looks fine; let me know it's ok I merge\n. related to #1546, fixed when #1680 is merged. \n. @webron it should actually possibly solve it, I just updated last remaining unchecked ref to context  (kind of quick fix, ReaderConfig still only configurable via context), but tests and samples would need to be run/checked to confirm\n. @fehguy issue is also related to the way Reader identifies sub resources; it currently scans for @Api annotated return types in method of root resource; therefore it \"correctly\" identifies subresource if annotated with @Api and creates correct path/operation including parent, but because subresource is annotated with @Api it processes it again wrongly as root resource;\n\nAs @Helmsdown mentioned, if @Api annotated classes are not considered while scanning (in BeanConfig), the issue doesn't occur; I would say that it shouldn't cause bad side-effects, because in a jax-rs environment root resources should anyway be annotated with @Path.\nThis is possibly easiest option, alternatively anyway above behaviour doesn't seem to fully match jax-rs spec, and we could maybe just update Reader to consider jax-rs subresources locator identifiers while identifying sub resource.\n. @fehguy you're right, missed that; with web.xml I guess problem doesn't arise because it uses DefaultJaxrsScanner  (which doesn't scan @Api annotated classes) instead of BeanConfig, but as you say with hidden=true it works as expected also with BeanConfig\n. seems related to #1106 \n. seems related to #1106 \n. @fehguy I believe they serve different purposes; this PR (and generally related code) handles jsr-303 annotations for non \"body\" operation parameters (therefore primitive), while hibernate BeanValidator is used during model/definition processing, e.g. for body parameters etc.\n. @fehguy I believe they serve different purposes; this PR (and generally related code) handles jsr-303 annotations for non \"body\" operation parameters (therefore primitive), while hibernate BeanValidator is used during model/definition processing, e.g. for body parameters etc.\n. @mtraynham @fehguy\nI am not sure to get exactly what you mean by duplicates the function in swagger-ui (under it's own API section and it's parents); \nI guess you refer to tags, but here behaviour haven't changed if I am not mistaken; it basically adds parent tags to operation only if existing, can you detail what you mean?\nActually I had some additional thoughts about the overall issue, basically root and child JAX-RS resources identification; the scenarios below should include possible options, in acending order of \"Jax-rs compliance\", eventually IMO option 5. would be the best, but all but Option 1. involve change in behaviour, which I am not sure if it is ok in same minor version, etc. \nPlease let me know what you think\nIn regards to subresource identification,  in scenario 1. subresources are considered when any method, even not annotated with @Path returned a class with @Api; in all other scenarios subresources are only considered when method annotated with @Path and not annotated with any @HttpMethod, regardless of scanAllResources.\n1. PREVIOUS BEHAVIOUR\nreads also root resources if not annotated with @Path. if not annotated with @Path and not with @Api also it reads if isScanAllResources is true\n| status | result |\n| --- | --- |\n| @Api | reads |\n| @Path | doesn't read |\n| scanAllResources | reads |\n| @Api hidden | doesn't read |\n| @Api @Path hidden | doesn't read |\n| @Api hidden scanAllResources | doesn't read |\n| @Api scanAllResources | reads |\n| @Api @Path | reads |\n| @Api hidden scanAllResources | doesn't read |\n| @Path scanAllResources | reads |\n| subresource | doesn't read |\n| @Api subresource | reads |\n2.CURRENT BEHAVIOUR\nCurrent PR https://github.com/swagger-api/swagger-core/pull/1636\nreads root resources only if annotated with @Path. if not annotated with @Path and not with @Api also it reads if isScanAllResources is true\n| status | result |\n| --- | --- |\n| @Api | doesn't read |\n| @Path | doesn't read |\n| scanAllResources | reads |\n| @Api hidden | doesn't read |\n| @Api @Path hidden | doesn't read |\n| @Api hidden scanAllResources | doesn't read |\n| @Api scanAllResources | reads |\n| @Api @Path | reads |\n| @Api hidden scanAllResources | doesn't read |\n| @Path scanAllResources | reads |\n| subresource | doesn't read |\n| @Api subresource | reads |\n3.CURRENT BEHAVIOUR WITH FIX ON SUBRESOURCE (if (readable || (api == null && config.isScanAllResources()) || isSubresource))\nCurrent PR https://github.com/swagger-api/swagger-core/pull/1636 with change to be applied\nSame as 2. but resources are always read.\n| status | result |\n| --- | --- |\n| @Api | doesn't read |\n| @Path | doesn't read |\n| scanAllResources | reads |\n| @Api hidden | doesn't read |\n| @Api @Path hidden | doesn't read |\n| @Api hidden scanAllResources | doesn't read |\n| @Api scanAllResources | reads |\n| @Api @Path | reads |\n| @Api hidden scanAllResources | doesn't read |\n| @Path scanAllResources | reads |\n| subresource | reads |\n| @Api subresource | reads |\n4.MORE JAX-RS COMPLIANT BEHAVIOUR\nCode at https://github.com/frantuma/swagger-core/tree/issue-1614-enhanced/\nreads root resources only if annotated with (@Path and @Api) or (@Path and scanAllResources). if not annotated with @Path classes are never read.\n| status | result |\n| --- | --- |\n| @Api | doesn't read |\n| @Path | doesn't read |\n| scanAllResources | doesn't read |\n| @Api hidden | doesn't read |\n| @Api @Path hidden | doesn't read |\n| @Api hidden scanAllResources | doesn't read |\n| @Api scanAllResources | doesn't read |\n| @Api @Path | reads |\n| @Api hidden scanAllResources | doesn't read |\n| @Path scanAllResources | reads |\n| subresource | reads |\n| @Api subresource | reads |\n5.FULLY JAX-RS COMPLIANT BEHAVIOUR\nCode to be updated at https://github.com/frantuma/swagger-core/tree/issue-1614-enhanced/\n| status | result |\n| --- | --- |\n| @Api | doesn't read |\n| @Path | reads |\n| scanAllResources | reads |\n| @Api hidden | doesn't read |\n| @Api @Path hidden | doesn't read |\n| @Api hidden scanAllResources | doesn't read |\n| @Api scanAllResources | doesn't read |\n| @Api @Path | reads |\n| @Api hidden scanAllResources | doesn't read |\n| @Path scanAllResources | reads |\n| subresource | reads |\n| @Api subresource | reads |\n. closing because included in https://github.com/swagger-api/swagger-core/pull/1642\n. closing because included in https://github.com/swagger-api/swagger-core/pull/1642\n. A possible alternative option to maintain compatibility is to enhance the mechanism to behave according to a flag/property set as default for Option 1 or 2 (as now) and settable to behave as options 3-5\n. A possible alternative option to maintain compatibility is to enhance the mechanism to behave according to a flag/property set as default for Option 1 or 2 (as now) and settable to behave as options 3-5\n. replaced by #1680\n. replaced by #1680\n. Hi Andriy & Aki, thanks. This seems to work ok, and shouldn't impact compatibility, so I'd say we can merge happily; maybe one small thing, I believe ApiListingResources gets something like \"/api/\" (leading and trailing slashes) for uriInfo.getBaseUri().getPath(). Possibly we could strip slash of do a wider match..\nWith regards to the suggestion to get rid of some \"KEY mess\" I would say we'd wait for next major release, also @fehguy pls let me know what you think.\nThanks and regards\nFrancesco\n. Hi Andriy & Aki, thanks. This seems to work ok, and shouldn't impact compatibility, so I'd say we can merge happily; maybe one small thing, I believe ApiListingResources gets something like \"/api/\" (leading and trailing slashes) for uriInfo.getBaseUri().getPath(). Possibly we could strip slash of do a wider match..\nWith regards to the suggestion to get rid of some \"KEY mess\" I would say we'd wait for next major release, also @fehguy pls let me know what you think.\nThanks and regards\nFrancesco\n. @fehguy looks good it fixes #1620 and #1647, rebased locally and tested ok. (Added issue \"auto close\" message in body..)\n. @fehguy looks good it fixes #1620 and #1647, rebased locally and tested ok. (Added issue \"auto close\" message in body..)\n. similar to #1506, fixed in #1747 \n. similar to #1506, fixed in #1747 \n. @webron looks ok, it adds additional option as source of http verb for operation.\n. @webron tests added; PR slightly changes behaviour for comma separated \u201cproduces\u201d and \u201cconsumes\u201d values in@ApiOperation, @Api, @Produces and @Consumes annotations by splitting them into array of items fed into operation.produces and consumes; previously this values would be treated as single consume/produce e.g.\n@Produces (\u201ctext/xml,text/html\u201d)\nin previous version would result in:\n\"consumes\": [\n   \u201ctext/xml,text/html\u201d\n  ]\nWhile after  it will generate:\n\"consumes\": [\n    \u201ctext/xml\u201d,\n    \u201ctext/html\u201d\n  ],\n. @webron tests added; PR slightly changes behaviour for comma separated \u201cproduces\u201d and \u201cconsumes\u201d values in@ApiOperation, @Api, @Produces and @Consumes annotations by splitting them into array of items fed into operation.produces and consumes; previously this values would be treated as single consume/produce e.g.\n@Produces (\u201ctext/xml,text/html\u201d)\nin previous version would result in:\n\"consumes\": [\n   \u201ctext/xml,text/html\u201d\n  ]\nWhile after  it will generate:\n\"consumes\": [\n    \u201ctext/xml\u201d,\n    \u201ctext/html\u201d\n  ],\n. merged to fix #1640 regression, rest of discussion moved to #1699.\n. merged to fix #1640 regression, rest of discussion moved to #1699.\n. implemented in #1833 \n. implemented in #1833 \n. Hi @eniniz did you register your Application in web.xml? and can you deploy/run and do your apis work ok, and can you access ../../swagger.json?\n. Hi @eniniz did you register your Application in web.xml? and can you deploy/run and do your apis work ok, and can you access ../../swagger.json?\n. sorry bad wording, I meant javax.ws.rs.Application like:\n<servlet>\n        <servlet-name>resteasy</servlet-name>\n        <servlet-class>org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet-class>\n        <init-param>\n            <param-name>javax.ws.rs.Application</param-name>\n            <param-value>io.swagger.sample.PetStoreApplication</param-value>\n        </init-param>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\nTo be able to help we would need to see full config code, please share on  gist.github.com\nAs mentioned in guide the Swagger definition will be accessible at /swagger.json and /swagger.yaml at the context root of your application.\n. sorry bad wording, I meant javax.ws.rs.Application like:\n<servlet>\n        <servlet-name>resteasy</servlet-name>\n        <servlet-class>org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet-class>\n        <init-param>\n            <param-name>javax.ws.rs.Application</param-name>\n            <param-value>io.swagger.sample.PetStoreApplication</param-value>\n        </init-param>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\nTo be able to help we would need to see full config code, please share on  gist.github.com\nAs mentioned in guide the Swagger definition will be accessible at /swagger.json and /swagger.yaml at the context root of your application.\n. Hi @jllado While it is supposed to work in a CXF environment (see e.g. https://github.com/swagger-api/swagger-samples/tree/master/java/java-jaxrs-cxf), it would seem there's no ServletConfig in yours and this causes indeed the error; could you please share your full configuration (maybe on gist.github.com) to help identify the issue? \n. Hi @jllado While it is supposed to work in a CXF environment (see e.g. https://github.com/swagger-api/swagger-samples/tree/master/java/java-jaxrs-cxf), it would seem there's no ServletConfig in yours and this causes indeed the error; could you please share your full configuration (maybe on gist.github.com) to help identify the issue? \n. @jllado a fix has been merged into master, to be released in v1.5.8; I would however ask if you can share configuration, to have a full view of the issue.\n. @jllado a fix has been merged into master, to be released in v1.5.8; I would however ask if you can share configuration, to have a full view of the issue.\n. @jllado thanks; I could reproduce, fix has been tagged for release in v1.5.8 and is available in 1.5.8-SNAPSHOT; I don't think there's an easy work around so please either  use/test 1.5.8-SNAPSHOT available on Sonatype or wait for v1.5.8\n. @jllado thanks; I could reproduce, fix has been tagged for release in v1.5.8 and is available in 1.5.8-SNAPSHOT; I don't think there's an easy work around so please either  use/test 1.5.8-SNAPSHOT available on Sonatype or wait for v1.5.8\n. @natros this is possibly related to #1491, could you specify old and new version, and possibly share configuration?\n. @natros this is possibly related to #1491, could you specify old and new version, and possibly share configuration?\n. last version uses indeed ServletConfig if not null, also previous versions do actually in some configurations like the ones affected by #1491. as you said in your case ServletConfig is not available, but it's not null and I would say possibly this is related to solution mentioned in #1491. This will need some investigation, as workaround you could change resteasy bootstrap or try #1491 solution\n. last version uses indeed ServletConfig if not null, also previous versions do actually in some configurations like the ones affected by #1491. as you said in your case ServletConfig is not available, but it's not null and I would say possibly this is related to solution mentioned in #1491. This will need some investigation, as workaround you could change resteasy bootstrap or try #1491 solution\n. @natros, yep issue is with servletConfig being not null but \"invalid\" in RESTEasy filter based; a fix is available in PR #1692 and will be available soon in 1.5.8-SNAPSHOT and in next release v1.5.8\n. @natros, yep issue is with servletConfig being not null but \"invalid\" in RESTEasy filter based; a fix is available in PR #1692 and will be available soon in 1.5.8-SNAPSHOT and in next release v1.5.8\n. @afredlyj log seems to be correct (INFO level) it just signals the \"invalid\" servlet config, and adopts appropriate behavior; previously you would get a blocking error instead\n. @afredlyj log seems to be correct (INFO level) it just signals the \"invalid\" servlet config, and adopts appropriate behavior; previously you would get a blocking error instead\n. @webron, this is a \"new\" ticket from discussion in #1681, related to  #1107 and #1118 and targeting similar issue as in kongchen/swagger-maven-plugin#233.\n. @webron, this is a \"new\" ticket from discussion in #1681, related to  #1107 and #1118 and targeting similar issue as in kongchen/swagger-maven-plugin#233.\n. Hi, allowableValues format for a list of value is \"1,2,3,4\", it is described in http://docs.swagger.io/swagger-core/current/apidocs/io/swagger/annotations/ApiModelProperty.html#allowableValues().\nPlease reopen if it doesn't answer your question\n. Hi, allowableValues format for a list of value is \"1,2,3,4\", it is described in http://docs.swagger.io/swagger-core/current/apidocs/io/swagger/annotations/ApiModelProperty.html#allowableValues().\nPlease reopen if it doesn't answer your question\n. Hi @Nogyara, \nI am not sure I get fully what you mean; JS3-303 @Min, @Max, @NotNull and @Size support have been added in #1618, as you mentioned; this should work for @QueryParam and @PathParam alike (e.g. in https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/test/java/io/swagger/ReaderTest.java#L252 and https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/test/java/io/swagger/resources/ResourceWithValidation.java)\nCan you detail/share your use case if you're still experiencing issues?\nThx\n. Hi @Nogyara, \nI am not sure I get fully what you mean; JS3-303 @Min, @Max, @NotNull and @Size support have been added in #1618, as you mentioned; this should work for @QueryParam and @PathParam alike (e.g. in https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/test/java/io/swagger/ReaderTest.java#L252 and https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/test/java/io/swagger/resources/ResourceWithValidation.java)\nCan you detail/share your use case if you're still experiencing issues?\nThx\n. @Kvezon I guess you had a model without properties or filtered out properties which caused NPE, fixed in #1710 will be part of v1.5.8 \n. @Kvezon I guess you had a model without properties or filtered out properties which caused NPE, fixed in #1710 will be part of v1.5.8 \n. @Kvezon you're right, this is fixed in #1711, can you confirm it solves issue you mentioned?\n. @Kvezon you're right, this is fixed in #1711, can you confirm it solves issue you mentioned?\n. Hi @rainerwei, issue has been just fixed in #1719 and merged into master, and will be part of v1.5.9, can you confirm it solves your issue?\n. Hi @rainerwei, issue has been just fixed in #1719 and merged into master, and will be part of v1.5.9, can you confirm it solves your issue?\n. Closing this as it is covered in #1513\n. Closing this as it is covered in #1513\n. As mentioned by @gaeljw annotation is in sync with latest version behaviour, closing.\n. As mentioned by @gaeljw annotation is in sync with latest version behaviour, closing.\n. @ebelanger #1781 is merged, can you check if this issue can be closed? \n. replaced by #1829\n. @gm2211 this seems ok, would you mind adding a test demonstrating the use case?\n. implemented in #2662 and #2681. A solution for this issue has been implemented in #2797, check out this comment and related test case, to  be able to customize name resolving. Please see related comment; an accessMode field is now available on ApiModelProperty (deprecating readOnly) which allows setting readonly both as true and false. @rtomsick \nI have referenced above comment as it is (also) related to the issue described here, providing a workaround possibly better than others suggested, but this ticket is kept open; as you pointed out it is not fully addressed by the change in recent PR, and a further code update is needed to support it and is planned. Of course PRs are more than welcome..\n. logic updated and reworked, with readonly/writeonly support in #2695. Closing ticket, please reopen if you're still experiencing issues. implemented (currently in https://github.com/swagger-api/swagger-core/tree/2.0). implemented in #2215 #2212 and further work. I am still not sure I am fully getting your scenario, e.g. in which container/env you are running the sample code, and what is the issue you're getting using BaseOpenApiResource. \nAlso as mentioned, PRs are welcome\n. @arthurdm I guess this is related also to #2317, please see my comment there . related to open question above about concurrent allOf, anyOf, oneOf support, as discussed with @webron and @fehguy in such case annotation will be resolved / json schema property deserialized into a ComposedSchema which will replace current AllOfSchema, AnyOfSchema and OneOfSchema. implemented. included and replaced by #2800 . fixed in https://github.com/swagger-api/swagger-core/pull/2294. closing, related notes/questions in #2312 2312. @arthurdm some comments about points 1 and 5 above.\n\n\nyou're probably right, I was thinking (not much..) about e.g. some scenario where user would want to expose an existing app service layer, with the spec used to build a dynamic javafx or swing UI based on the schema or the like; Don't have a strong opinion here though.\n\n\nhere I still think it would be valuable to keep the scanning logic separate from config building, as it could e.g. potentially be time consuming, and also be \"dynamic\" and so on. I understand we can pass whatever in a Map<String, Object>, but this sounds too generic imo. Also for the reader I would think that adding it to the config would add value, e.g. to allow a user to use a custom (or library) jaxrs-free reader, or a scala reader, keeping an easy entry point.\nI understand we have diverging opinions here, not sure if @webron or @fehguy have any comment to add, we can give it maybe a little more thought and then we decide.. @arthurdm Thanks for comments and revised PR! getting there I'd say.. I add here a couple of  comments.\n\n\nWe have a working \"integration implementation\" draft, which makes use of swagger-web module for a part of the functionality. Possibly it can be further refactored to \"integrate more\" with swagger-web design concepts, however at the moment it references and implements scanner and reader, and uses config and builder classes which implement swagger-web related interfaces.\nThis effort is visible in branches for core and for samples (jersey2 and java-dropwizard modules).\nAt the moment it uses a slightly modified version of OpenApiConfig interface, which basically includes also reader and scanner and adds couple of props/methods which were previously scattered around 2.0 config classes. \nAs you know, my idea is that scanners and readers are part of the game, and their implementation classes would be part of the config; if you have a strong opinion against it however, we can keep them out from the interface (we'll keep them in the specific oss \"integration implementation\"), in this case this would be the interface more similar to what you had in mind (with additional props added).\nAnother possible point is about returning Class from e.g. getFilterClass, in my idea I'd rather have a simple and serializeable  bean so returning strings, this would facilitate loading of config from files, or any declarative config, with no custom deserialization mechanism, and would also delegate class loading to the caller. This alternative is implemented here (for \"full config), or here (for \"minimal config\").\nBasically my preferences would be in this order:\n1. Full / Strings\n2. Full / Classes\n3. Basic / Strings\n4. Basic / Classes\nPlease let me know what you think, and what's your preference, and we can use that (merging with your latest effort) in the delivered version.\nAn additional point is about naming: I would feel that sticking to OpenApi instead of oas would be possibly be more consistent with the rest of the code and the spec, let me know what you think.\n. @arthurdm forgot a further point about builder: in my version I removed the parameters (as you coded in the first place..), as that would be passed to the builder via its implementation. @arthurdm \nlooks quite ok to me, just one note:\nWould add to config interface isScanAllResources and isPrettyPrint, and remove (if there is no particular reason to keep it) isScanDisabled, so like:\n```\npublic interface OpenAPIConfig {\nSet<String> getResourcePackages();\n\nSet<String> getResourceClasses();\n\nString getReaderClass();\n\nString getScannerClass();\n\nString getFilterClass();\n\nCollection<String> getIgnoredRoutes();\n\nOpenAPI getOpenAPI();\n\nMap<String, Object> getUserDefinedOptions();\n\nboolean isScanAllResources();\n\nboolean isPrettyPrint();\n\n}\n``. @arthurdm an additional note about loading via service loader; this doesn't cover the case where uses needs different configs in same JVM (e.g. a config per servlet); a possible solution could be adding agetName()to the interface to allow the framework to e.g. match it to servlet name, even if I don't like it so much.. with regard toisScanDisabledandisScanAllResources,isScanAllResourcesis bad naming actually (betterisReadAllResources`), and is meant (used like that in 2.0) to allow to read/resolve all classes passed to reader independently of the presence of specific annotation.\nI am not sure what is the usage/meaning isScanDisabled, what does it mean to disable scanning?\nAbout the multiple configs per JVM, in this way if I am not mistaken, in order to have different configs e.g. per servlet (a quite common scenario), a final user would need to implement a builder without knowing what this Map<String,Object> contains, for example this SERVLET_NAME, in the best case it would be specified by the implementation and therefore different depending on implementation.. hey @arthurdm isScanDisabled is now clear, I feel that this also could be an implementation specific thing, but no strong opinion; the same goes for prettyPrint and isReadAllResources at this point.\nWith regard to the multiple config per JVM, it's indeed per classloader (e.g. per web application), a common scenario would be e.g. exposing v1 and v2 of APIs or the like; I still feel this would fit in scope of the \"spec\", but maybe it can be part of a later version.. closing, as bootstrappinng implemented in scope of #2312 and #2307; Extensions already added to encoding; ReaderListener will be replaced by filter. @fehguy thanks, one thing about point 2 (Jackson @jsonsubtypes annotations):\nyou say: \n\nJackson annotations can be substituted with @Schema annotations, correct? Meaning, they're not required.\n\nwe don't have currently @Schema equivalent to @jsonSubTypes, (as we had in 2.0 @ApiModel), I would add subtypes field to @Schema annotation, is that right?. @fehguy sorry missed your comment, subtypes are needed for any composition, mainly because when resolving starting from a \"parent\" (a class which is extended and/or used as \"parent\" in anyOf, allOf, oneOf annotations) we have otherwise no way to know we should resolve \"children\"; this was true also in 2.0, where either jackson JsonSubTypes or swagger annotation subtypes field were allowed and used. ## updated open questions and todo (includes areas spotted in swagger-jaxrs):\nopen questions\n\npoint 5. above and related comments\nin 2.0 a @ApiImplicitParam exists, which would allow to specify a param independently; this does not exisist in 3.0, is that ok? should related tests be removed?\n\n\ntodo core\n\nimplement @Schema \"subtypes\" similar to 2.0, for point 5 above\n\n2227 clone implementation\n\nPojoTests complete last tests\nimplement/fix MapProperty support currently commented out\ncleanup/fix commented code in AbstractModelConverter.java\nsecurity full support (deserialize/resolve..)\nimplement/refactor tests related to consume, produce and security\nModelResolver \"minor\" TODOs (marked #2312)\n(\"Ref\" schema and property resolving and serializing)\nexamples and string array resolving (see commented out PojoTests)\n\nrequiredProperties schema annotation field support\n\n\noverriding full support  \n\nSchema annotation type + format full support\nSchema annotation implementation field full support\n\ntodo jaxrs\nA. SpecFilter (includes replacing ReaderListener with filter run before and after)\nB. Jaxrs-reader currently not processing subresources\nC. Jaxrs-reader currently not processing extensions\nD. complete ParameterProcessor implementation (see TODO)\nE. have content field of Response annotation  as array, and of Parameter as object, according to spec\nF. @Schema type attribute is ignored in the Reader atm,  so no way to specify  type of list for responses/parameters and requestBody. if it is specified  like @Schema(type=\"array\", implementation=Airline.class) it doesn't work\nG. OperationParser doesn't handle correctly string and primitive types in implementation field, at least for response\ntodo all\nI. bootstrapping\nII. implement 3.0 version of samples (at least one as proof of concept)\nIII. (rename all \"swagger\" to \"openapi\")\nIV. (rename all #/definitions path in tests to #/components/schemas)\nV. cleanup\n. First Release candidate's release notes draft, summarizing remaining TODOs of the list in comments above:\nRelease notes\nswagger-core v2.0.0-rc0 Release candidate!\nThe Swagger team is proud to announce the rc0 release candidate of our main java library swagger-core. This release candidate provides official initial support for OpenApi 3.0\u2019s main features. The missing features will be added in the next release candidates until the final release is available.\nIn order to better improve these libraries and tools, we ask that you start using them and provide us with feedback in form of issues (please use label 3.0 spec support) on the github repository. The issues are a huge help in finding what\u2019s missing or not working properly (though note some issues are already submitted). We would also appreciate any PRs that improve existing or new tickets. \nBe aware that the release notes contain the notable changes, but there may some changes that we missed in the list. The same applies for the Limitations section.\nNotable Features:\n\nFirst official release candidate of OpenApi 3.0 support. swagger-core now produces OpenAPI 3.0 specs only. swagger-core 2.0 version is not backward compatible with previous 1.x versions.\nAvailable on Maven central, and the sources are in the 2.0 branch. PRs should be submitted against the 2.0 branch.\nSwagger JAX-RS 2 support\nJava 8\nConsistent integration mechanism\n\nLimitations\n\nResolve resource operations also when not annotated with @Operation (swagger-jaxrs2) \nImplement subtypes field in Schema annotation, with related resolver processing (swagger-annotations / core) \nOverriding full support (swagger-core) \nSchema annotation type + format full support (swagger-core) \nSchema annotation implementation field full support  (swagger-core) \nFilter / Reader listener support (swagger-jaxrs2) \nReader sub-resources support (swagger-jaxrs2) \nReader extensions full support  (swagger-jaxrs2) \nAnnotations javadocs (swagger-annotations) \nAnnotations default values enhancement (swagger-annotations / core) \nIntegration layer enhancements:config file location enhanced loading, additional loaders, etc. (swagger-integration, swagger-jaxrs) \nConsumes/Produces full support (swagger-jaxrs2) \nJsonIdentity support (swagger-core) \nMatrixParam annotation support\n. included and replaced by #2688. implemented in #2688. @arthurdm This possibly includes other top level metadata, as tags in #2268 and maybe other;\n\nI guess the only options are either \n\nadding an annotation similar to 2.0 @SwaggerDefinition (and implement related code in jaxrs reader)\n\nor \n\nrelying solely on filter and/or bootstrapping to include such info.\n\nPossibly 2. is enough, and it would provide a single consistent way to provide such data.\n@webron @fehguy any thought on this?. implemented in #2470 and #2490. #2801 introduces example support to response annotation, limited to String types.\nAlso related to #1107 and linked tickets, a full solution would be similar to the one applied in 2.0 version, probably in scope of #1107 and related.. Parameters container annotation is supported at method level, closing ticket. included and replaced by #2801. included in #2429 and merged. merged in #2437. replaced by #2423. As discussed in related tickets (#2320, #2105, #2106) and specifically in this comment, issue with #2105 is handled by registering SwaggerSerializers; https://github.com/swagger-api/swagger-samples/pull/71 would possibly need to be updated accordingly. swagger-jaxrs module which I guess you are using resolves JAX-RS resources to a swagger spec (for OpenAPI 3.0 support, the equivalent module is swagger-jaxrs2. \nIt seems you're using Spring MVC in your project which is not in scope of swagger-core. The same would apply to swagger-maven-plugin. Please also checkout wiki. \nSpringfox is currently providing such support; please close the ticket if this answers your questions.. closing as BeanParam is implemented, and proposed solution for MatrixParam not applicable. implemented in #2481. implemented in #2481. implemented in #2481. Thanks @rtomsick and @bjchambers for reporting and analyzing this; PR #2675 introduces new ApiModelProperty field accessMode which replaces readOnly (deprecated) to allow setting readOnly both as true and false in ApiModelProperty annotation. \nThis is part of latest 2.0.0-SNAPSHOT available in sonatype and in upcoming release.\nCurrent behaviour (without usage of accessMode) is left unaltered to maintain backward compatibility.\nSee this test for a usage example.\nClosing ticket, please reopen if you still encounter issues.. closing as obsolete. closing as changes included in #2401 . ArraySchema support added to Content annotation in #2501 (in 2.0 branch) and will be part of next release.. closing as obsolete. closing as only supported in java 8+. implemented in #2443. Default response is created for non annotated class/methods. Fix to resolve media type in case of non annotated return type added in #2513. . implemented in #2416. @ralphdoe examples related code looks good, the one thing is that this branch/pr seems to also include commits from #2404 which is still in discussion, not sure why you added them here also; are these changes needed for the example related stuff? if so we must wait for finalization of #2404, otherwise can you remove those, so to keep here only stuff related to examples?. @pjfanning the name of the field is resolved (if not passed in annotatedType param) in resolveAnnotatedType method; not sure how is your code organized, (e.g. if you're extending ModelResolver or such), currently e.g. overriding protected String decorateModelName(AnnotatedType type, String originalName) to store the name somewhere could be an option, I would need some more details about your code.. @pjfanning not sure if this helps in all cases, however #2909 adds propName to annotatedType, try to give it a go.. included in #2452 . closing as support introduced elsewhere. merged #2671 which applies getOperationId logic to all scenarios, closing ticket, please reopen if you're still experiencing issues. implemented in #2548. included in #2548 . closing as implemented in RC2. implemented in #2510. Hi, which version of the spec are you referring to? and is this specific to swagger-core java project?\ne.g in version 2.0 a request body schema reference is supported, as in the example in the spec\n{\n  \"name\": \"user\",\n  \"in\": \"body\",\n  \"description\": \"user to add to the system\",\n  \"required\": true,\n  \"schema\": {\n    \"$ref\": \"#/definitions/User\"\n  }\n}. Which version of swagger-core?. implemented in #2495. implemented in #2530 . @ApplicationPath support added in #2493; it's currently in 2.0 branch and will be part of next rc. implemented in #2686 . ArraySchema support added to Content annotation in #2501 (in 2.0 branch) and will be part of next release; the example above should work using array field, similar to this example.. Thanks for reporting this! it's a bug, and is fixed in #2519 which is currently in io.swagger.core.v3:swagger-jaxrs2:2.0.0-SNAPSHOT (please notice the groupId change) available on sonatype, and will be included in next rc. Closing as fixed, please reopen if you still experience issues.. It's probably a bug in rc2, it should work ok using current snapshot version instead (io.swagger.core.v3:swagger-jaxrs2:2.0.0-SNAPSHOT, please notice the groupId change) available on sonatype, or waiting for oncoming rc. \nThe resolved spec should look like:\nopenapi: 3.0.0\npaths:\n  /:\n    get:\n      summary: Returns a list of somethings\n      operationId: getSomethings\n      responses:\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/SomethingResponse'\ncomponents:\n  schemas:\n    SomethingResponse:\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/DataSomethingDTO'\n    DataSomethingDTO:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/SomethingDTO'\n    SomethingDTO:\n      type: object\n      properties:\n        id:\n          type: string\n    Data:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object. test. test. test. mm.. this is weird, reflection dep should be correctly referenced; are you getting the same issue with latest snapshot? also can you in case share your declared deps in project giving error?. Not really sure why you're getting this; org.reflections should be picked as transitive dep (from swagger-jaxrs2), with correct version; possibly it would help if you could share a mvn dependency:tree -Dverbose output, full stack trace, and project POM. Also it can possibly help building with -U, please give that a try. I guess this is a bit out of scope of swagger-core, but I suspect this is caused by https://issues.apache.org/jira/browse/MNG-5739 or similar, it should work ok just by changing the scope of your direct dep to compile. applied also to 2.0 in #2535 . This is caused by a bug (basically resolving @Schema.title instead of name and not resolving in generic type) which is fixed in #2523 and  latest 2.0.0-SNAPSHOT, please update swagger deps and give it a go. yeah, such mechanism has been in todo for a while, just added in #2526 support for @Hidden annotation at class or operation level, available in latest snaphsot. pls use @Hidden as @Api(hidden = true) in 1.x. yes at the moment is out of scope for swagger-core; a separate project https://github.com/kongchen/swagger-maven-plugin provides such feature for maven environment, we don't know when/if it will be updated to support 2.x; Alternatively you can provide your own code and execute during buid lifecycle via exec, and task or equivalent; the following would be an example of such class:\n```\nClass ...\n    public static void main(String[] args)  {\n        SwaggerConfiguration oasConfig = new SwaggerConfiguration()\n                .prettyPrint(true)\n                .resourcePackages(Stream.of(\"io.swagger.sample.resource\").collect(Collectors.toSet()));\n    try {\n        OpenApiContext ctx = new JaxrsOpenApiContextBuilder()\n                .openApiConfiguration(oasConfig)\n                .buildContext(true);\n        String yaml = Yaml.pretty(ctx.read());\n        System.out.println(yaml); // save to file, etc..\n\n    } catch (OpenApiConfigurationException e) {\n        throw new RuntimeException(e.getMessage(), e);\n    }\n}\n\n```. As in the example above, one option to provide resources is specifying them in configuration, either as list of classes, or packages:\nSwaggerConfiguration oasConfig = new SwaggerConfiguration()\n                .prettyPrint(true)\n                .resourcePackages(Stream.of(\"io.swagger.sample.resource\").collect(Collectors.toSet()));\nDid you replace the resourcePackages values above with the ones for your project?\n. Thank for spotting and reporting these; it's fixed in #2533 and latest snapshot.. in compliance with jax-rs spec, you can use field or constructor params, which will be added to parameters of each operation in the class; an example here: https://github.com/swagger-api/swagger-core/blob/2.0/modules/swagger-jaxrs2/src/test/java/io/swagger/v3/jaxrs2/resources/ResourceWithKnownInjections.java. you can specify them as class level:\n@Tag(name = \"mytag\")\npublic class MyClass {\nif you provide a name only, the tag will be added to operation only; if you also provide additional fields, like description or externalDocs the Tag will also be added to openAPI.tags field.\nA full example here: https://github.com/swagger-api/swagger-core/blob/2.0/modules/swagger-jaxrs2/src/test/java/io/swagger/v3/jaxrs2/resources/TagsResource.java\n. Hi,\nAn OpenAPIDefinition annotation is available in current snapshot version (io.swagger.core.v3:swagger-jaxrs2:2.0.0-SNAPSHOT, please notice the groupId change) available on sonatype, or in oncoming rc. By annotating a resource with @OpenAPIDefinition, the defined fields will be resolved into the OpenAPI Object; this includes servers.\nAlternatively (available also in rc2) you can provide such data in the openAPI property of the configuration (either with config file or code).. Hi,\nIn current snapshot version (io.swagger.core.v3:swagger-jaxrs2:2.0.0-SNAPSHOT, please notice the groupId change) available on sonatype, or in oncoming rc, you can annotate your resource class with one or more @SecurityRequirement to have them added to operation; see https://github.com/swagger-api/swagger-core/blob/2.0/modules/swagger-annotations/src/main/java/io/swagger/v3/oas/annotations/security/SecurityRequirement.java#L26-L34. Thanks!\n\nIf the plan is to retain jackson 2.8 support for now, would it be better to revert the pom dependency back to jackson 2.8.10?\n\nThe idea is to take advantage of fixed bugs and improvements provided in 2.9.x, while maintaining compatibility with 2.8 if needed by the user.\n\nThe Jackson-Databind code is really important to how Swagger core code works - would it be safer to shade a particular jackson-databind jar that swagger builds and tests with? Then, users can have whatever jackson dependencies they like without affecting the swagger code?\n\nShading is an option to consider for further improvement, but it's not a trivial effort for various reasons, including interoperability with other swagger and external libs, user extensions and client projects, and while it could help in some situations it could possibly break in other scenarios.\n. Agreeing with @webron, also generally I feel that shading would cause possible issues which could overcome benefits, specifically:\n\nHeavier artifacts\nMore complex and slow development process\nIntroduces difficult to spot issues in some scenarios, as in OSGi envs, etc.\nAdds at least overhead for interoperability. \nNeeds non trivial effort to introduce\nUser can shade on his side if needed\n\nThere are benefits as well, basically one which is the static linking, but I would say in our case Cons are much more than Pros.\nThis is kind of similar to the approach taken by elasticsearch, which used shading in the first place, but switched away from that in more recent versions, and provided in wiki/blog some documentation: \nhttp://www.elastic.co/blog/to-shade-or-not-to-shade\n . Thanks!. As of 2.0.0-rc3 @RequestBody annotation can be applied to method parameter as detailed in wiki. If I get your point correctly, this is not sufficient for your needs, but you'd like to have it applicable also as field of @Operation, is this right or does the parameter annotation suffice? . Ok it makes sense, will update soon and will be part of next release. implemented in #2574. you can use ReaderListener or provide your own spec-serving resource (see default one, implement your own REST method, invoking super.process() to obtain the resolved Swagger object) to further modify the resolved spec. \nPlease close ticket if one of the above solves your issue.. This is because you are defining paramType as path, which doesn't support a schema according to spec; either use a body paramType, or remove dataTypeClass and use instead one of type allowed values (e.g. string). Hi, I understand your point, however I think an update in this area would be non trivial and with quite some side effects, and would need to be applied consistently across all models classes; for the specific issue, as I guess you are already doing in your code, you can convert  collection to mutable, or use add.. methods in models beans instead.\nIn general terms, a couple of thoughts about switching to defensive copies / immutable models (including collections in such models):\nIn my view we have 2 approaches: \n\n\nGo for immutables / defensive copies all around in models, therefore changing massively how the thing is structured now; immutables and defensive copies are indeed generally \"good\" comparing to \"bad' beans but such approach would:\n\n\nNeed a complete rewrite of models, core, and other stuff\n\nBe completely different than 1.5 version\nProbably take many users by surprise, as they are probably used to mutable beans..\n\nPossibly introduce performance issues\n\n\nand in general (credits to some guy I agree with):\n\n\n\nWhile immutability is a great think in languages designed to care about (like Clojure), it may become very expensive in Java when you deal with collection immutability. Moreover, it may cause runtime errors (a developer who reads List expects to be able to call add and if you are returning an immutable view via Collections.unmodifiableList this will cause an Exception). I would rather leave it to best practice (your client should know he is not supposed to call add on a getter and let him do the copy if he needs to\n\n\nThe other approach is leaving things as is, \"bad\" mutable beans, but still quite a common approach, consistent with project history, no need of massive rewrite, and clearly state in documentation. As mentioned and for the reasons above I'd go for this option.\n\nA possible option, but not sure how useful, would be to provide an immutable version of models module on top of current, and a simple converter layer so that users wanting to get an immutable guy for their own purposes would have that; still an early stage idea, any help/thought in this area would be welcome. \n. Hi, @FormDataParam is not yet supported (in terms of being considered while resolving request body) in latest rc3 but will be in next version; however  I believe the error you're getting is not related to swagger, but related to this jersey issue and can be worked around by having FormDataParam as the last annotation.\n. This would work defining multiple contents within 200 response:\n@POST\n    @Operation(summary = \"Create multilevel query execution\", responses = {\n            @ApiResponse(responseCode = \"200\",\n                    content = {\n                       @Content(mediaType = \"application/multiLevel+json\", \n                            schema = @Schema(implementation = MultiLevelResult.class)),\n                       @Content(mediaType = \"application/flat+json\", \n                            schema = @Schema(implementation = FlatResult.class))\n                    }\n             ),\n            @ApiResponse(responseCode = \"500\", description = \"An unexpected error has occurred. Error code is unexpected.error\")})\n    @Consumes({\"application/execution.multiLevelQuery+json\"})\n    @Produces({\"application/flat+json\", \"application/multiLevel+json\"})\nAlso please switch to 2.0.0-rc3.. Atm this is not possible; support for such a scenario is planned, but probably it won't make it for next release.. see also #2694 which reports the same behaviour. @gte619n \nWhich behaviour exactly are you experiencing? can you provide a test scenario?. It was indeed a missing feature / bug; correct support has been added in #2585, and is part of latest 2.0.0-SNAPSHOT version available on sonatype, and will be part of next release; closing ticket, please reopen if your issue isn't fixed.. I would say this is a class loading issue, in your sample it seems you have duplicated swagger-annotations in both ear and war which results in ear lib annotations loaded classes being different from the ones in the ear; adding also swagger-annotations as provided dep in war module would solve the problem:\n<dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-annotations</artifactId>\n            <version>1.5.10</version>\n            <scope>provided</scope>\n        </dependency>\nPlease check if this solves your issue, and close ticket if it does.. should be fixed in https://github.com/swagger-api/swagger-core/commit/3f7d054cdfe728800cc2fd4e7aefeedc8d9a66fc. Snapshots are indeed pushed on commit and available in https://oss.sonatype.org/content/repositories/snapshots/io/swagger/core/v3/swagger-core/ due to groupId change.. implemented in #2667 . Thanks with your effort with this one! I don't think we can go this way actually, because of the issue you mention in your comment about required defaulting to false which wouldn't allow to use the annotation \"freely\". A solution similar to what done for readOnly in #2675 for 1.5 and #2695 for 2.0 should be applicable here as well, adding an annotation field named e.g. necessity (or better naming..) with related enum with values like AUTO, REQUIRED, NOT_REQUIRED, with related support in reader/resolver code, and deprecating required. \nPlease let me know if you can help, and/or any comment.. Sub resources support implemented in #2615 and available in latest 2.0.0-SNAPSHOT available on sonatype, and in oncoming release (no fixed schedule but not far). Closing this ticket, please reopen if still experiencing issues. Version 2.0.0 has recently been released along with a new wiki, which covers dependencies and integration; swagger-core group id is now io.swagger.core.v3 for all modules. Closing ticket, please reopen if it doesn't address your concerns.. updated behaviour has been implemented in #2692, available in latest 2.0.0-SNAPSHOT (on sonatype) and upcoming release. The outcome is similar to expected one in comment above:\nAObject:\n  type: object\n  properties:\n    name:\n      type: string\nAbstractObject:\n  type: object\n  oneOf:\n  - $ref: '#/components/schemas/AObject'\n  - $ref: '#/components/schemas/BObject'\nBObject:\n  type: object\n  properties:\n    number:\n      type: integer\n      format: int32\ntestObject:\n  type: object\n  properties:\n    objects:\n      type: array\n      items:\n        $ref: '#/components/schemas/AbstractObject'\nClosing ticket, please reopen if you're still experiencing issues.. Thanks!. Fixed in #2623 (2.0.0-SNAPHSHOT, available in sonatype and upcoming release), see also related test for test bean and test bean with subtypes. \nPlease reopen if issue is not solved.. Closing as duplicate. Such models shouldn't be resolved, would be resolved only if a registered resource references them.\nCan you detail a bit more your setup/environment, and specifically how you bootstrap app and swagger?\nThere are also quite some fixes in latest 2.0.0-SNAPSHOT version available in sonatype, which will be included in oncoming release, please switch to that version and see if it changes. at first look there seems to be nothing wrong, before digging further, can you try with 2.0.0-SNAPSHOT?\n. Ok, adding @Hidden at class level in MyTestOpenApiResource should fix it; API Definition-exposing resources provided by Swagger are excluded by default (by package name), this is not the case for user defined ones, therefore you need to hide from Swagger resolver. Please lmk/close ticket if issue solved . I have tried to reproduce the issue, but it works ok with latest 2.0.0-SNAPSHOT, and having @io.swagger.v3.oas.annotations.Hidden at class level, like:\n```\n@Path(\"/apidocdata.{type:json|yaml}\")\n@Hidden\npublic class MyTestOpenApiResource extends BaseOpenApiResource {\n@GET\n@Produces({MediaType.APPLICATION_JSON, \"application/yaml\"})\npublic Response getOpenApi(@Context ServletConfig config, @Context Application app, @Context HttpHeaders headers,\n                           @Context UriInfo uriInfo, @PathParam(\"type\") String type) throws Exception {\n\n    return super.getOpenApi(headers, config, app, uriInfo, type);\n}\n\n}\n```\nwith the same application subclass in a jersey2 environment.\nPossibly if not already done, use 2.0.0-SNAPSHOT with Hidden at class level\n(also not sure if maybe you're updating openApi via the config in this.setOpenApiConfiguration(Constant.geOASConfig(version));, I guess not). fixed in #2697 (master) and #2700 (2.0). At the moment support for such a case requires providing a @JsonProperty(\"name\") (updated in #2730 and #2731) or @ApiModelProperty(name = \"name\") (or equivalent @Schema in 2.0), as inferring the name solely from JAXB annotations and env would require quite complex changes. See also related tests. Thanks for reporting this; it should be fixed in #2639 and latest 2.0.0-SNAPSHOT. Closing ticket, please reopen if you still experience issues.. implemented in #2882. Change in #2617 is not part (shouldn't be) of 2.0.0-rc4; it is currently included in 2.0.0-SNAPSHOT and will possibly be updated; are you maybe experiencing the issue with 2.0.0-SNAPSHOT instead? in this case please switch to rc4 and/or monitor #2627 and #2617. . Which Jackson version are you using? possibly may be related to https://github.com/FasterXML/jackson-modules-base/issues/31 which is fixed in jackson 2.9.3 (although dep version of swagger is the same in rc3 and rc4); worth trying to use 2.9.3 though. \nAlso can you identify the offending class?\nRegarding your original issue with 2.0.0-SNAPSHOT, have you maybe tried to \"simplify\" integration as suggested in https://github.com/swagger-api/swagger-core/pull/2627#issuecomment-361093066 ?. included in #2799. in rc4, as specification mandates a spec-unique operationId, a suffix is added if methods with same name  are resolved (regardless of class/resource) and operationId is not provided in @Operation annotation; with your example as is, this should't be the case, unless the above scenario is applicable.. I suspect the root cause could be the configuration of resourcePackages by resolving package of the considered classes here, invoked here and then used here to fill OpenApi configuration resourcePackages field; in the test case, BookStoreOpenApi is also scanned/read as it belongs to passed package; as it provides the same operationId the suffix is added.\nIn this particular case, BookStoreOpenApi also provides the same paths/operations, which overwrites the ones from BookStore; I guess this is an edge case which probably is not intended, nor supported; however logic will probably be updated in next release to use the operationId without suffix in such a case.\nPlease let me know if this solves your issue.\n. Thanks for reporting and for the fix! Included in merged #2650, closing ticket, please reopen if you're still experiencing issues. included in #2650 . Well spotted, thanks! merged PR with your fix, it's available in snapshot. Closing ticket, please reopen if you're still experiencing issues. included in #2649 . Actually it's more the other way around: while rc2 is not released to maven repo, 2.0.0-rc4 is:\nhttps://search.maven.org/#artifactdetails%7Cio.swagger.core.v3%7Cswagger-core%7C2.0.0-rc4%7Cbundle\nas for the wiki, it's indeed targeting rc2 and still a bit outdated, but differences with rc4 aren'tmajor; it' currently being updated and will be online soon.\n. Swagger is not considering annotations at superclass/interface level, according to JAX-RS spec par. 3.6:\nNote that inheritance of class or interface annotations is not supported.\nAnnotations on superclass/interface at method/param level are instead supported, and should work ok in current version.\nClosing ticket, please reopen if you're still experiencing issues.\n. @p4ali Thanks! this PR has been included in merged #2681 which adds some tests and minor fixes. Thanks for reporting this; it should be fixed in #2664 and 2.0.0-SNAPSHOT available in sonatype and in oncoming release. Please reopen if you're still experiencing issues.. Unfortunately more work is needed to have the build succeed with jdk9+ and keep existing clients work with same deps, similarly to what done for 2.0 version (now in master branch) in #2735. . @ilgrosso Just merged #2685 implements the behaviour you mention also for 2.0, allowing ApiResponse annotations at class level and adding them to each operation of the class. implemented in #2684. Thanks! slightly refactored in merged #2670. included and replaced by #2688. Thank for your effort! As we need to maintain backward compatibility, and name resolving seems to be an opinionated matter, I would rather apply the solution implemented in #2797, which relies on a few changes of method access, and on the current extension mechanism, please see the related test custom converter. This solution allows to fully customize name resolving, there fore not limited to using class.getName() or class.getSimpleName().\nAn alternative could be also implemented to provide some flag USE_FULLY_QUALIFIED_NAME or something and modify code accordingly, probably in scope of a new ticket.\n. Closing as a solution has been implemented in #2797 (see comment above). duplicates #2573, closing this ticket and referencing it in #2573. Hi, actually guava dep has been removed in #2618 for swagger 2.0, so this PR shoudn't be necessary. Hi @reta, what about fix in #2698? it removes guava from root deps management, and should be equivalent as result to downgrading to 20.0. Can you check if it works ok in your scenario?\n. We have not been able to reproduce this, could you share your environment and any significant detail? e.g OS, java version, maven version, branch being built.\nAlso please try with ./mvnw install and see if you get the same error.. it seems a bit weird actually, I couldn't find any way to reproduce, also line numbers in stack trace seem to be wrong, are you running maven from command line? also do you get the same by running mvn clean install?. the plot thickens.. we could possibly get some additional hint by running ./mvnw -U -e -X clean install from  project root, can you try and share the (huge) output as a file?. Issue found and fixed in #2708, please give it a try, thanks for reporting this. Thanks for the fix! to open a PR, please fork the repo and push the branch to your own repo, and open the PR from there targeting the main repo.. see also this comment in PR #2713 . Thanks for the fix! to open a PR, please fork the repo and push the branch to your own repo, and open the PR from there targeting the main repo.. fixed in #2796. Thanks for the fix! included in merged #2796 . @PeaceInColour Thanks for your effort with this one. As you mentioned currently responses are overwritten and not merged; this makes sense for method level annotations (as you can specify return type in annotation response field) while for class level it is not applicable (as different methods would return different types), on top of the original issue of #2705.\nA possible direction, also to maintain backward compatibility, would be to introduce a new ApiResponse annotation boolean field applyReturnType or similar naming, along with the change of order as done in your commit;  with applyReturnType = true, the code would merge the returnType (if present) into the response from annotation, be it at class or method level. \nLet me know if you can help with that (and related tests..), and/or any comment you might have. Thanks for reporting this, fixed in #2719.. Extensions are indeed supported in latest 2.0.0-SNAPSHOT available in sonatype and coming soon release (along with new wiki). Annotations don't support Object as field type, however #2725 introduces support for parseValue boolean field of @ExtensionProperty allowing to achieve what you need. It's available in latest 2.0.0-SNAPSHOT (on sonatype) and in coming soon release.\nFor your use case you would do something like:\n@Operation(extensions = {\n    @Extension(properties = {\n            @ExtensionProperty(name = \"custom\", value = \"[\\\"xxx\\\", \\\"yyy\\\"]\", parseValue = true)\n    })\n})\npublic Response updatePet() {...}. Actually PR has been triggered by your ticket, you wouldn't have found it before... @FormParam support has been fixed in latest 2.0.0-SNAPSHOT available on Sonatype and in coming soon release; please notice the naming/package change since rc2 (see #2485).\nThe outcome of your example would look like:\nyaml\n...\npost:\n      operationId: doSomething\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              type: object\n              properties:\n                someInput:\n                  type: string\n...\nClosing ticket, please reopen if you are still experiencing issues. This doesn't seem to be reproducible, your latest version of the resources in a Jersey2 env produces your expected result, when using 2.0.0 release version. In case you're indeed using 2.0.0 release version, please share some more details, e.g. how you're registering the resources and any significant data.. I am still not able to reproduce, registering your latest version of resources in the dropwizard sample (environment.jersey().register(new MyControllerImpl());) produces your expected result. If you can test your resources in a similar env and see if you get the same issue, we could restrict the troubleshooting area... Thanks for reporting this, fixed in #2737 / latest 2.0.1-SNAPSHOT on Sonatype. Thanks for reporting this! it's indeed a bug which is fixed in #2741 and available in latest 2.0.1-SNAPSHOT version (on sonatype). \nAlternatively, a possible workaround for 2.0.0 version involves either \n\nadding @Schema(hidden = true) to getOtherThings and customize resolved component directly in spec with a filter or a listener\n\nor \n\nimplementing a custom resolver as in the example below:\n\n```java\npublic class Ticket2740Converter implements ModelConverter {\n    @Override\n    public Schema resolve(AnnotatedType type, ModelConverterContext context, Iterator<ModelConverter> chain) {\n        JavaType _type = Json.mapper().constructType(type.getType());\n        if (_type != null) {\n            Class<?> cls = _type.getRawClass();\n            if (MyThing.class.isAssignableFrom(cls)) {\n                ArraySchema arraySchema = new ArraySchema()\n                        .items(new Schema().$ref(\"#/components/schemas/MyThing\"));\n                arraySchema\n                        .uniqueItems(true)\n                        .description(\"Other related things\");\n\n                Schema schema = new ObjectSchema()\n                        .description(\"MyThing\")\n                        .addProperties(\"otherThings\", arraySchema);\n\n                context.defineModel(\"MyThing\", schema);\n\n                return schema;\n            }\n        }\n        if (chain.hasNext()) {\n            return chain.next().resolve(type, context, chain);\n        } else {\n            return null;\n        }\n    }\n}\n\n```\nclosing ticket, please reopen if you're still experiencing issues.. Can you share SomeClass or equivalent class triggering the issue?. Thanks! applied fix in #2757.. included and replaced by #2758 . OpenAPIExtension support has been reintroduced in #2759 (2.0.1-SNAPSHOT available in sontype); however possibly you can achieve the same result by using a filter. Thanks for reporting this! fixed in latest version.. fixed in #2758 (including and replacing #2746). Fixed in #2754 . Thanks for reporting this! Should be fixed now. Thanks for reporting this! Fixed in #2764 and available in latest 2.0.1-SNAPSHOT in sonatype and upcoming 2.0.1 release. Closing ticket, please reopen if you're still experiencing issues. with Multipart and @FormDataParam, the request body is resolved from the related parameters, also resolving @Parameter annotations (not multiple request bodies), so something like this would produce the expected output:\n```\n...\n            @Parameter(in = ParameterIn.HEADER, name = \"Authorization\", description = \"Autentica\u00e7\u00e3o para acesso ao recurso. Deve ser do tipo 'Basic'\", required = true, allowEmptyValue = false)\n            @HeaderParam(HttpHeaders.AUTHORIZATION) String credenciais,\n        @Parameter(required = true, schema = @Schema(implementation = Pet.class, description = \"Conte\u00fado da den\u00fancia online\"))\n        @FormDataParam(\"conteudo\") String denuncia,\n\n        @Parameter(\n                required = false,\n                schema = @Schema(type = \"string\", format = \"binary\", description = \"Arquivo anexo 1, Aceito somente as extens\u00f5es JPG, JPEG, PNG, PDF\"))\n        @FormDataParam(\"arquivo1\") InputStream arquivo1,\n\n        @Parameter(\n                required = false,\n                schema = @Schema(type = \"string\", format = \"binary\", description = \"Arquivo anexo 2, Aceito somente as extens\u00f5es JPG, JPEG, PNG, PDF\"))\n        @FormDataParam(\"arquivo2\") InputStream arquivo2,\n\n        @Parameter(\n                required = false,\n                schema = @Schema(type = \"string\", format = \"binary\", description = \"Arquivo anexo 3, Aceito somente as extens\u00f5es JPG, JPEG, PNG, PDF\"))\n        @FormDataParam(\"arquivo3\") InputStream arquivo3\n\n...\n``. Thanks for reporting this! It's indeed a bug asnamefield of annotation was used both for security schemes map key and name within security scheme; this is fixed in #2769 (available in2.0.1-SNAPSHOTon sonatype and in upcoming2.0.1release) which introduces annotation field [paramName](https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-annotations/src/main/java/io/swagger/v3/oas/annotations/security/SecurityScheme.java#L66) which maps to spec security schemenameproperty (forapikey` types).\nClosing ticket, please reopen if you're still experiencing issues.. it's already there I'd say: https://search.maven.org/#artifactdetails%7Cio.swagger.core.v3%7Cswagger-core%7C2.0.1%7Cbundle. It's not clear which exception are you getting (StackOverflow?) and your full scenario, for which we would need some more details and a test case. This case should be handled ok (as e.g. in this test), possibly also see if that can be related to your lombok usage (try maybe be \"delomboking\" the class)\n. support for NotEmpty and NotBlank added in #2876. Closing ticket, please reopen if you're still experiencing issues. Thanks for spotting this, just merged #2795 addresses the issue by allowing to set deprecated as false in Operation.setDeprecated(), therefore whenever explicitly set as false (e.g. while deserializing, or by setting programmatically), getDeprecated() will return correctly false. warning fixed in #2784.. Not sure if I get it fully, I guess we have 2 things here:\n\nserialization/deserialization\n\ntype resolving into OpenAPI spec\n\n\nfor serialization/deserialization - if I get it correctly - you say that using a customized Json.mapper() (e.g. with JavaTimeModule()) doesn't apply the module, in this case e.g. deserializing Period as complex object instead of patterned String. If this is the case, I cannot really reproduce as applying Json.mapper().registerModule(new JavaTimeModule()); seem to work fine in this regards. Can you post some more details, along with a test case?\n\n\nas for resolving, the issue is different, as mechanism is not related to registered custom modules, the best thing to do here to customize the spec output would be specify the type in the related Schema annotation e.g.:\n\n\nclass Foo {\n        @Schema(type = \"string\", pattern = \"^P(?!$)(\\\\d+Y)?(\\\\d+M)?(\\\\d+W)?(\\\\d+D)?(T(?=\\\\d)(\\\\d+H)?(\\\\d+M)?(\\\\d+S)?)?$\")\n        public Period term;\n    }. @soberich \nAs for your Edit 2 section above, a custom converter similar to the one here below would address both questions:\n```java\npublic class DateTimePropertyConverter implements ModelConverter {\n  @Override\n  public Schema resolve(\n          AnnotatedType type,\n          ModelConverterContext context,\n          Iterator chain) {\nif (type.isSchemaProperty()) {\n  JavaType _type = Json.mapper().constructType(type.getType());\n  if (_type != null) {\n    Class<?> cls = _type.getRawClass();\n\n    if (Period.class.isAssignableFrom(cls)) {\n      return new Schema()\n              .type(\"string\")\n              .pattern(\"^P(?!$)(\\\\\\\\d+Y)?(\\\\\\\\d+M)?(\\\\\\\\d+W)?(\\\\\\\\d+D)?(T(?=\\\\\\\\d)(\\\\\\\\d+H)?(\\\\\\\\d+M)?(\\\\\\\\d+S)?)?$\");\n    } else if (MonetaryAmount.class.isAssignableFrom(cls)) {\n      return new ObjectSchema()\n              .addProperties(\"amount\", new NumberSchema()) // optionally add format\n              .addProperties(\"currency\", new StringSchema());\n    }\n  }\n}\nif (chain.hasNext()) {\n  return chain.next().resolve(type, context, chain);\n} else {\n  return null;\n}\n\n}\n}\n```\nwith regards to Edit 3, I feel this is an opinionated matter, and a solution based on custom converter similar to the one above could address the different needs, however it would probably make sense to allow a \"simpler\" way to provide additional types to be considered as primitive, and will be considered. As usual any PR is more than welcome..\n. Thanks for reporting this; missing enum fixed in #2791, available in 1.5.20-SNAPSHOT version on sonatype. Closing ticket, please reopen if you're still experiencing issues.. #2804 fixes the NPE but without full support of scenario in comment above.. implemented in #2803 . fixed in #2815, introducing new @ArraySchema field arraySchema; please check this test resource for an example matching your scenario.. I am not sure what you mean by While generating OpenAPI 3.0 contracts with 'x-' extensions at the Response level using swagger-parser; swagger-parser doesn't \"generate\" any serialized spec, as its work is to parse a spec in yaml/json format, by first desrializing it and then resolving refs etc. The outcome is a OpenAPI POJO (from swagger-model).\nThis POJO can indeed be then serialized as json/yaml string, and possibly it's this part you're referring to? in this case, it's possible that you're not using swagger-core Json or Yaml objects; these guys basically wrap a customized ObjectMapper, among the other things registering ExtensionsMixin which is providing the @jsonanygetter you mentioned.\nYou would use them e.g by calling Yaml.pretty(openAPI).\nPlease let me know if this solves your issue.. closing ticket, please reopen if still experiencing issues. implemented in #2820 . @shauera we can sneak this in, but we would need a test case added to SpecFilterTest, can you possibly take care of that, and ping me here when done?. included and replaced by #2820. nope not needed thx. Probably the best option here is to implement a custom ModelConverter, as you mentioned; something like this should do the work for your case:\njava\n        class CustomConverter extends ModelResolver {\n            public CustomConverter(ObjectMapper mapper) {\n                super(mapper);\n            }\n            @Override\n            protected boolean shouldIgnoreClass(Type type) {\n                if (type instanceof Class) {\n                    Class<?> cls = (Class<?>) type;\n                    if (Representation.class.isAssignableFrom(cls)) {\n                        return true;\n                    }\n                }\n                return super.shouldIgnoreClass(type);\n            }\n        }\nyou would register it anywhere in your bootstrap code by:\njava\nModelConverters.getInstance().addConverter(new CustomConverter(Json.mapper()));\nAn alternative, e.g in case you are defining a custom response via annotation, and you just want to get rid of the schema in components/schemas, could be using a filter, e.g.:\nA sample resource with custom response via annotation.\njava\n    @GET\n    @Path(\"/testresponse\")\n    @ApiResponse(description = \"my response\", content = @Content(mediaType = \"*/*\", schema = @Schema(type = \"string\")))\n    public Representation getTestResponse() {\n        return null;\n    }\nA filter:\njava\n        class RestletFilter extends AbstractSpecFilter {\n            @Override\n            public boolean isRemovingUnreferencedDefinitions() {\n                return true;\n            }\n        }\nSuch filter can be registered passing its fully qualified name in configuration filterClass property (see wiki) in case you're using provided OpenAPIResource to serve the resolved spec, otherwise you can apply it with something like:\njava\n        // resolve the openAPI spec..\n        SpecFilter f = new SpecFilter();\n        openAPI = f.filter(openAPI, new RestletFilter(), null, null, null);\nclosing ticket, please reopen if you're still experiencing issues\n. fixed in #2819. is this in kotlin? also can you share a test case reproducing the issue?. Issue is reproducible in Kotlin, in Java it's not; seems like it could be caused by the way annotations are handled in Kotlin, possibly needs further investigation, however explicitly specifying the annotation target seems to do the trick:\nkotlin\ndata class Pet(\n        @get:[Schema( required=true, pattern=\"[0-9]{8}\" )]\n        val bornAt: String\n). Link to issue above is broken, good one should be this one. However that points to an open discussion about spec enhancements which is not part of any released spec, it's therefore too early to address it in implementations, and I will close this PR for the time being. ref field added to annotation in #2838. Closing ticket, please reopen if you're still experiencing issues.\n. fixed in #2877 . at the moment you can achieve what you need using filter, as in the example below; possibly related annotation processing will be enhanced to allow for annotation only handling of such a case, but no ETA atm\njava\n    class SecurityFilter extends AbstractSpecFilter {\n        @Override\n        public Optional<Operation> filterOperation(Operation operation, ApiDescription api, Map<String, List<String>> params, Map<String, String> cookies, Map<String, List<String>> headers) {\n            if (\"security\".equals(operation.getOperationId())) { // or whatever operationId..\n                operation.setSecurity(new ArrayList<>());\n                return Optional.of(operation);\n            }\n            return super.filterOperation(operation, api, params, cookies, headers);\n        }\n    }\nin your case (usage of provided OpenApiResource) you can specify filter providing fully qualified name in config object:\njava\n        SwaggerConfiguration oasConfig = new SwaggerConfiguration()\n                .openAPI(oas)\n                .prettyPrint(true)\n                .filterClass(\"fully.qualified.SecurityFilter\")\n                .resourcePackages(Stream.of(\"my.resources.package\")\n                        .collect(Collectors.toSet()));. thanks for reporting this! fixed in #2932 . Thanks for reporting this, fixed in #2867. in your case you would use\n@get:[ ArraySchema( schema = Schema(required = true), minItems = 1,uniqueItems = true ) ]\nClosing ticket, please reopen if still experiencing issues. fixed. Converters are added at the front as by design the converter implementation is responsible for calling or not calling the next converter in the chain. The default converter (ModelResolver) is not calling the next converter and therefore any converter after it would not be called.\nTo achieve your goal (using the results of the other converters), you can call the next converter and then do whatever with the result; this test converter implements such a scenario.\nClosing ticket, please feel free to reopen if you're still experiencing issues or have questions.. this seems related to swagger-ui, if that is the case, please open the ticket in related repo https://github.com/swagger-api/swagger-ui. independently of the version you are referring to (1.x or 2.x), seems to be a duplicate of #2121 and related PRs #2797 and #2798. Check comment in  https://github.com/swagger-api/swagger-core/pull/2691#issuecomment-386611105 with related links, for 2.0 a custom resolved for this scenario is https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/test/java/io/swagger/v3/core/converting/override/CustomResolverTest.java#L49. Seems not to be reproducible, can you share the full failing resource/model class and the caller code, and possibly the full stack trace?. Generally speaking, mapping java composition/inheritance to JSON/JSONSchema/openAPI can be tricky due to to the different constructs and the like; in Swagger, the inheritance model is resolved by considering swagger specific annotations and  jackson JsonTypeInfo / JsonSubtypes annotations along with super classes and interfaces, let's say with an approach similar to Jackson's. \nThat said, any improvement/added feature in this area is as usually more than welcome, not sure what you had in mind; it could be maybe possible in some scenarios to e.g resolve a parent/child pair with no annotations having the child define an allOf of properties of the parent, or something like that (which would work only if resolving the child, as when resolving the parent we will have no info about its subtypes), this would require probably some flag to be considered to activate such behaviour, and probably also some side effects to consider. . This seems like a duplicate of your other ticket #2861.. . included and replaced by #2874 and #2875 (fixes the warning, but doesn't modify the original value). Thanks for spotting this! just merged #2877 which updates the datatype to Object (handling also the \"Any\" case) and adds a test, and replaces this PR.. With which version of swagger-jaxrs2? if not already using it, can you try with latest 2.0.3-SNAPSHOT? . Thanks for reporting this, extensions deprecated in #2931, will be eventually removed. please build. Thanks for reporting this! on one side, there was a bug causing \"primitive\" types not to be resolved, this is fixed in #2902, please try with latest snapshot from sonatype.\nAt the moment, all properties resolved as objects are resolved as reference to an object defined in components section, therefore it is not possible (except using filters or extensions as described in https://github.com/swagger-api/swagger-core/wiki/Swagger-2.X---Extensions, e.g. by providing a custom resover) to have the property defined inline as in your expected output. such support is planned but no ETA at the moment.\nIn your scenario you are also using a POJO (Gson JsonPrimitive) for which (if I get this right) you don't want some properties to show up. Check  this example (with related test) for 2 ways to implement this without applying filters or extension, basically you can define your own POJO as implementation and annotate that, or ignore JsonPrimitive properties at Jackson level via mixins.\n. merged #2920 and #2921, thanks!. please build. Thanks!. Hey @jsikkes, thanks for reporting this! it's indeed a bug, fixed in #2917 and available in latest 2.0.4-SNAPSHOT on sonatype. Please reopen the ticket if you're still experiencing issues.. Thanks! implemented in #3010 / #2919 . @simenflatby thanks a lot! I have included your commits in #3010 (it fixes merge conflict) which is merged.. I believe you could be using springfox. If this is the case please open ticket there and close this one.. Can you share an example of what are you trying to achieve, along with swagger-core version and actual vs expected result?. Thanks for the details, this should be solved by using newly introduced paramName field of SecurityScheme annotation (see #2767, #2769), in your case the following should work:\njava\n@Path(\"/\")\n@OpenAPIDefinition(\n  info = @Info(title = \"MyTitle\", version = \"v1\", description = \"My Description\"),\n  security = @SecurityRequirement(name = \"apiKey\"))\n@SecurityScheme(type = SecuritySchemeType.APIKEY, name = \"apiKey\", in = securitySchemeIn.HEADER, paramName = \"apiKey\")\npublic class MyApplication extends ResourceConfig {\n    public MyApplication() {\n        ResourceConfig resourceConfig = packages(\"com.mypackage.resources\");\n        register(resourceConfig.getClasses());\n        register(OpenApiResource.class);\n    }\n}\nPlease give it a try, and close ticket if it solves your issue.\n. Thanks for reporting this! fixed in #2931. as this is related to swagger-ui, please move this ticket there. we could and will update, but you can declare the dependency to 2.9.6 at top level, and that will be picked up. implemented in #3123  and #3091. #3109 addresses this by replacing reflections with classgraph. 1.5.21 and previous versions use Jackson mixin in some cases (for backward compatibility or other reasons) to provide some Jackson annotations and behavior; this is true also for $ref (introduced in #2849, please check PR comment). swagger-core provides JSON and YAML helpers to obtain a correctly configured object mapper (e.g. JSON.mapper()) which also registers such Mixins. If for any reason you need to use an own mapper, you can register such mixins in your code, using ReferenceSerializationConfigurer.serializeAsComputedRef(mapper); . it depends how are you obtaining and exposing your swagger instance, e.g. in a JAX-RS env, the correctly configured mapper is used automatically if you're using ApiListingResource and SwaggerSerializers. As you are mentioning SpringMVC I am not sure what is your env (are you possibly using Springfox? in this case please check this issue in Springfox project), but basically as mentioned the solution is registering the mixin with whatever mapper in use.. I don't know the internals of springfox, but yes, if it's not using the provided mapper it's possible that it would need updating their serialization of swagger-models. please build. not sure what you're trying to achieve; do you wish to resolve the OpenAPI spec out of a project (java code + maybe static spec to be merged), or to provide an OpenAPI spec directly?. Still I am not sure I fully understand step 3 and 4, however atm it is possible to provide an OpenAPI instance to the configuration/reader(see wiki) which will be merged with the resolved spec from java code. Operations are not merged though, in the sense that if an operation is resolved for a given path/http method it will overwrite (not merge) the operation with same path/http method defined in provided OpenAPI. . this seems to be related to swagger-ui project, if this is the case please move this ticket there. thx. Thanks for reporting this, and yes a PR is welcome!. Please add the buildSrc classpath to classpath parameter of resolveTask. Thanks for reporting, it is indeed a bug :( this should be fixed in #3038 (latest 2.0-7-SNAPSHOT) which limits the scope of custom ObjectMapper to default resolver; for 2.0.6, applying ModelConverter as in your example via modelConverters parameter should work:\nmodelConverterClasses = [\"...SampleModelConverter\"]. Thanks a lot to @wcicola for spotting and working on this!\n3001 fixes this and replaces #2997.\nClosing ticket, please reopen if still experiencing issues. Thanks for reporting this; it's indeed a bug, fixed in latest 2.0.6-SNASPHOT available on sonatype; alternatively, #2993 /  2.0.6-SNASPHOT also adds support for LocalTime resolved globally as a primitive string type with rfc3339 format partial-time, either using convenient \nPrimitiveType.enablePartialTime(); \nor \nPrimitiveType.customClasses().put(\"org.joda.time.LocalTime\", PrimitiveType.PARTIAL_TIME);\nPrimitiveType.customClasses().put(\"java.time.LocalTime\", PrimitiveType.PARTIAL_TIME); \nin any bootstrap code.\nin this case, the outcome would be something like;\na:\n  type: string\n  format: partial-time\nb:\n  type: string\n  format: partial-time\nc:\n  type: string\n  format: partial-time\nClosing ticket, please reopen if you're still experiencing issues.. replaced by #3001 . This is possibly similar to #2567 and is probably not related to swagger, but related to this jersey issue and can be worked around by having FormDataParam as the last annotation.\nPlease give it a go, and close ticket if it solves your issue\n. Thanks for reporting this and pointing to code! #3014 adds contextId param (defaulting to ${project.artifactId}), available in latest snapshot. Closing ticket, please reopen if you're still experiencing issues. no fixed ETA, but within few weeks. Thanks for reporting this; #3017 (available in latest 2.0.6-SNAPSHOT on sonatype) fixes it by correctly resolving to string schema with uri format; it also allows to provide a set of classes not to be considered primitive in case this is needed for some reason (in this case URI would be resolved as a non system POJO); please see related test for its usage.\nIn 2.0.5 version you can instead workaround that by providing the schema your self:\njava\n@Operation(responses = {\n                    @ApiResponse(responseCode = \"200\", description = \"OK\", content = @Content(schema = @Schema(type = \"string\", format = \"uri\"))),\n                    @ApiResponse(responseCode = \"400\", description = \"Bad Request\"),\n                    @ApiResponse(responseCode = \"500\", description = \"Internal Server Error\")\n            })\nClosing ticket, please reopen if still experiencing issues. Thanks for reporting this; fixed in #3018 . This seems to be caused by same issue of #3013, which is fixed in latest 2.0.6-SNAPSHOT available on sonatype, please give it a go and close ticket if it solves your issue. Please try with 2.0.6 version, providing a different contextId param in each execution e.g.\nxml\n<execution>\n <configuration>\n  <outputFileName>openapi-1</outputFileName>\n  <contextId>openapi-1</contextId>\n...\n<execution>\n <configuration>\n  <outputFileName>openapi-2</outputFileName>\n  <contextId>openapi-2</contextId>\n.... fixed in #3032 . Thanks for reporting and checking this! Fixed in #3039 . One way to achieve what you need with annotations would be the following:\n```java\n    @GET\n    @Path(\"/random\")\n    @Produces(MediaType.APPLICATION_JSON)\n    public Pet random() {\n        Random rand = new Random();\n    if (rand.nextBoolean())\n        return new Cat(rand.nextBoolean());\n    else\n        return new Dog(rand.nextBoolean());\n}\n\n\n@Schema(\n    type = \"object\",\n    title = \"Pet\",\n    subTypes = { Cat.class, Dog.class },\n    discriminatorMapping = {\n            @DiscriminatorMapping( value = \"CAT\", schema = Cat.class ),\n            @DiscriminatorMapping( value = \"DOG\", schema = Dog.class )\n    },\n    discriminatorProperty = \"petTypeAsString\"\n)\npublic class Pet {\n\n    public enum PetType {\n        CAT,\n        DOG;\n    }\n\n    @Schema(required = true)\n    public PetType petType;\n\n    @Schema(required = true)\n    public String petTypeAsString;\n\n    public Pet() {\n    }\n\n    public Pet(PetType petType) {\n        this.petType = petType;\n        this.petTypeAsString = petType.name();\n    }\n\n}\n\npublic class Cat extends Pet{\n    public boolean hunts;\n\n    public Cat() {\n        super(Pet.PetType.CAT);\n    }\n\n    public Cat(boolean hunts) {\n        this();\n        this.hunts = hunts;\n    }\n}\n\npublic class Dog extends Pet{\n    public boolean barks;\n\n    public Dog() {\n        super(Pet.PetType.DOG);\n    }\n\n    public Dog(boolean barks) {\n        this();\n        this.barks = barks;\n    }\n\n}\n\n```\nwhich would result to the following spec:\nyaml\nopenapi: 3.0.1\npaths:\n  /pets/cat:\n    get:\n      summary: Generate a cat\n      operationId: cat\n      responses:\n        default:\n          description: a cat\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cat'\n  /pets/random:\n    get:\n      summary: Generate a pet\n      operationId: random\n      responses:\n        default:\n          description: a pet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\ncomponents:\n  schemas:\n    Cat:\n      required:\n      - petType\n      - petTypeAsString\n      type: object\n      properties:\n        hunts:\n          type: boolean\n      allOf:\n      - $ref: '#/components/schemas/Pet'\n    Dog:\n      required:\n      - petType\n      - petTypeAsString\n      type: object\n      properties:\n        barks:\n          type: boolean\n      allOf:\n      - $ref: '#/components/schemas/Pet'\n    Pet:\n      title: Pet\n      required:\n      - petType\n      - petTypeAsString\n      type: object\n      properties:\n        petType:\n          type: string\n          enum:\n          - CAT\n          - DOG\n        petTypeAsString:\n          type: string\n      discriminator:\n        propertyName: petTypeAsString\n        mapping:\n          CAT: '#/components/schemas/Cat'\n          DOG: '#/components/schemas/Dog'. adding the input file path should be sufficient to have its content (typically info section and/or some components) used as input to the resolving engine and merged into result.\ne.g.\nresolve {\n    outputFileName = 'out'\n    outputFormat = 'JSONANDYAML'\n    prettyPrint = 'TRUE'\n    classpath = sourceSets.main.runtimeClasspath\n    resourcePackages = ['my.package']\n    outputPath = '/tmp'\n    openApiFile = file('/tmp/input-openapi.yaml')\n}\ndo you have problems with this approach?. from the examples you shared, possibly the issue is that you are passing a serialized instance of SwaggerConfiguration, while the parameter accepts instances of OpenAPI (just the spec, not the config, the rest of the config is passed via task parameters). Can you give that a try?. it would be:\n`\nopenapi: 3.0.1\ninfo:\n  version: '1.0'\n  title: Swagger Pet Sample App Config File\n  description: 'This is a sample server Petstore server.  You can find out more\n    about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\n    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key\n    special-key to test the authorization filters.'\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html. This again doesn't map to an OpenAPI file, as it includes root openAPI, the right one in json format would be\n{\n  \"openapi\" : \"3.0.1\",\n  \"info\": {\n    \"version\": \"1.0\",\n    \"title\": \"Swagger Pet Sample App\",\n    \"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\n    \"termsOfService\": \"http://swagger.io/terms/\",\n    \"contact\": {\n      \"email\": \"apiteam@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  }\n}\nAs I mentioned the expected file is not a Swagger configuration but a spec, I would therefore rename openApiFile = file('openapi-configuration.json') to something like openApiFile = file('openapi-input.json')\n. you're right, added a not to readme with example. Closing ticket, please reopen if you're still experiencing issues. I am not sure I understand, which filter fails to load? can you share your config and possibly a test case?. Thanks for reporting this! fixed in #3110. . Thanks for spotting this; fixed in #3077 will be part of next release. Thanks for reporting and working on this! implemented in #3107 . The probable reason for this is not using a configured object mapper for serialization to YAML (best option would be the provided Yaml class, e.g. via Yaml.prettyPrint(openApi). Closing ticket, please reopen if you're still experiencing issues.. Thanks for this! included and replaced by #3107. updated in #3122 and #3121 . one way to achieve what you want is having your resource method return e.g. Map<String, List<Pet>> which would result in a spec with a response to the one above:\n@GET\n        @Path(\"/path\")\n        public Map<String, List<Pet>> simpleGet(String data) {\n            return null;\n        }\na more \"invasive\" alternative would be defining a class extending e.g. HashMap<String, Pet> to be used in implementation field of @Content annotation within @Response:\nclass MyModel extends HashMap<String, Pet> {}\n@Operation(responses = {\n  @ApiResponse(\n    responseCode = \"200\",\n    content = @Content(\n      mediaType = \"application/json\", \n      schema = @Schema(implementation = MyModel.class)))\n  }\n)\n@GET\n@Path(\"/path\")\npublic Whatever simpleGet(String data) {\n      return null;\n}. Thanks! merged #3096 (includes #3083). Thanks! included in #3096 . implemented in #3085 . Thanks!. It will be within 1-2 weeks. If I get your scenario right, something like that would express it : \nyaml\ncomponents:\n  schemas:\n    Registration: \n      type: object\n      properties: \n       payload: \n         anyOf: \n         - $ref: '#/components/schemas/IndividualRegistration'\n         - $ref: '#/components/schemas/BusinessRegistration'\n         type: object\n    IndividualRegistration: \n      type: object\n      properties: \n        channel: \n          anyOf: \n          - $ref: '#/components/schemas/SocialChannel'\n          - $ref: '#/components/schemas/EmailIndividualChannel'\n          type: object\n    BusinessRegistration: \n      type: object\n      properties: \n        channel: \n          - $ref: '#/components/schemas/EmailBusinessChannel'\n    SocialChannel: \n      type: object\n      properties: \n        name: \n          type: string\n        whatever: \n          type: string\n    EmailIndividualChannel: \n      type: object\n      properties: \n        address: \n          type: string\n        whatever: \n          type: string\n    EmailBusinessChannel: \n      type: object\n      properties: \n        address: \n          type: string\n        whateverbusiness: \n          type: string\nplease close ticket if this answers your question. Looking at the code, it seems you're possibly mixing Swagger/OpenAPI 2.x version in your dependency (supported in io.swagger:swagger-jersey2-jaxrs:jar:1.5.21 - 1.x line) and OpenAPI 3.x in your annotations (supported in  io.swagger.core.v3:swagger-jaxrs2:jar:2.0.6 - 2.x line). Please use one or the other (see also wiki pages for both versions).\nClosing ticket, please reopen if this doesn't answer your question or you're experiencing issues.. Difficult to say, there should be nothing in swagger-core v1 or v2 to cause this behaviour; which project/maven artifact and version are you using? (e.g. io.swagger:swagger-jaxrs:1.5.21 , io.swagger.core.v3:swagger-jaxrs2:2.0.6), and how is that configured?. Ok, so you are Springfox which is a different project, please post this issue in related project. Thanks for reporting and addressing this! it's indeed an issue which should be addressed, possibly  similarly to your suggestion but slightly different, to maintain existing compatibility specifically for fluent interface.\nThis would basically mean:\n remove private modifier in Schema type and format members\n remove type and format members in all subclasses along with getter and setter, keeping fluent setter\n* add a public no arg ctor in all subclasses like:\npublic IntegerSchema() {\n        type = \"integer\";\n        format = \"int32\";\n    }\n* adjust equals, hashcode, and print, removing type and format\n. Thanks!. A custom model converter, defined in modelConverterClasses parameter of task should work ok, can you share some more details about your config and possibly a test case?. for primitive types you wouldn't use @Schema.implementation, as they are mapped to OpenAPI types, therefore the following will resolve into expected result:\n@Operation(\n    ...\n    responses = {\n        @ApiResponse(responseCode = \"200\", description = \"OK\", \n            content = @Content(schema = @Schema(type = \"integer\", format = \"int64\"))),\n        ....\n        }\n...\n)\n. I would say they are a leftover/initial support but.. I missed your #3112 PR which implements (at least partial) support of primitive types also via @Schema.implementation, which looks nice, thanks! \nIf possible I would apply the same logic also to resolveSchemaFromType (possibly extracting common code).\nIt would make sense to get rid of schemaImplementation.getName().startsWith(\"java.lang\")  and instead check as you do isPrimitive || \"java.lang.Object\".equals(schemaImplementation.getName()) ||  || \"java.lang.String\".equals(schemaImplementation.getName())\nAlso it would be nice to have related tests added to swagger-jaxrs2 module, e.g to ReaderTest. Please let me know your thoughts and if you can help with this. as 1.5 supports Java 1.7, it reference guava-android as the flavor supporting 1.7, see https://github.com/google/guava/wiki/ReleasePolicy#flavors; if this is not compatible with your env, you can exclude from swagger core transitive deps. this has been implemented in #3120. well spotted, thanks!. This sounds very good indeed, and it is for sure interesting, possibly applicable also to gradle-plugin. Maybe the config name could be configurationFilePath. excellent thx!. #3150 merged, thanks!. Thanks for reporting this! implemented in #3139 . You're right, this change has been indeed introduced in #3096 to better handle inheritance and generics in some scenarios; as you pointed out, a side effect is breaking custom converter code relying on AnnotatedType.type being of class JavaType; as the new behaviour is more correct, we would keep it as is (at the expense of the possibly \"minor\" breakage, that should have made it  anyway into release notes, sorry about that). in your test scenario this would mean adapting code like the following:\npublic Schema<?> resolve(AnnotatedType type, ModelConverterContext context, Iterator<ModelConverter> chain) {\n    if (type.getType() instanceof ParameterizedType && WRAPPER_CLASSES.contains(((ParameterizedType) type.getType()).getRawType().getTypeName())){\n        return context.resolve(new AnnotatedType(((ParameterizedType) type.getType()).getActualTypeArguments()[0]).resolveAsRef(true));\n    } else if (type.getType() instanceof SimpleType && WRAPPER_CLASSES.contains(((SimpleType) type.getType()).getRawClass().getName())) {\n        return context.resolve(new AnnotatedType(((SimpleType) type.getType()).containedType(0)).resolveAsRef(true));\n    }\n    return chain.hasNext() ? chain.next().resolve(type, context, chain) : null;\n}. resolved resources depending on which OpenApiContext and OpenApiScanner implementations you are using, please check wiki for details about provided scanners or providing your own implementation.\n. I would say it was a bug in org.reflections (or a misconfiguration) not picking up for some reason resources in classpath. Thanks! PR merged. it's ok, possibly removing @Inherited which doesn't apply to anything but classes. this is ok. this is ok. @ralphdoe is this not set (also) below line 98?. should add a \"removeBrokenReferences\" to interface and abstract class, similar to \nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/main/java/io/swagger/core/filter/AbstractSpecFilter.java#L42. should implement method similar to previous version, and related tests. same comment as above. same comment as above. same comment as above. should enable and implement/fix tests. implement execution of other filter ops param, property, etc..). change to 3.0.0. rename description. change to \"An array of examples of the schema\". change to @return array of examples of the parameter. I guess this is wrong, would be parameterObject.setParameter instead? also it means no tests current cover the case, and should be added. remove related unused imports IOException and Json. unused import. Why has the above been removed? its purpose was populating request body schema/content from parameter schema if not set in annotation.. what should be taking precedence (array or content or schema)? did you discuss this with @webron? . what should be taking precedence (array or content or schema)? did you discuss this with @webron? . why has this be added? this is not needed for the test and should be removed I'd say. @ralphdoe Can you point me to code implementing the above? getContent doesn't seem to use parameter schema if not set in annotation, but maybe I am wrong. @ralphdoe What do you mean? I couldn't find any reference there about the question above. @ralphdoe I might be wrong, but that code seems to populate requestBody with values from @RequestBody and @Consumes annotations, which is not what the removed code did, which was applying the so far resolved parameter schema to requestBody if requestBody doesn't specify it. these should be called outside the loop. also other elements are not cloned? e.g. extensions, externalDocs, servers. see also general review comment, filterProperty should be used for schemas inside components also. it possibly makes sense using latest plugin version 3.0.0. see also general review, we would keep as is to maintain support for jackson 2.8.x. see also general review, we would keep as is to maintain support for jackson 2.8.x. see also general review, we would keep as is to maintain support for jackson 2.8.x. see also general review, we would keep as is to maintain support for jackson 2.8.x. see also general review, we would keep as is to maintain support for jackson 2.8.x. see also general review, we would keep as is to maintain support for jackson 2.8.x. ok, as also available in 2.8.x. ok, as also available in 2.8.x. why?. remove blank line?. This doesn't seem to handle @RequestBody as method level annotation. Use existing RequestBodyTest, considering all scenarios (method annotation only, @Operation.requestBody annotation only, both, both and also parameter annotation). All these cleanup should be part of separate PR. test should be part of swagger-jaxrs, not swagger-servlet (or even better have them both)\nalso where does the path \"users\" come from?. test should be part of swagger-jaxrs, not swagger-servlet (or even better have them both)\n. test should be part of swagger-jaxrs, not swagger-servlet (or even better have them both)\n. this code would fail in any case where uniqueItems == null even with non equals emptyValue. This doesn't really test the ApiOperation annotation... these 2 methods should also be moved to SerializableParameter interface. you would use here SerializableParameter instead of QueryParameter. We are moving the property from the more generic interface/abstract class Parameter/AbstractParameter which is also implemented by BodyParameter, to the less generic SerializableParameter/AbstractSerializableParameter which is not implemented by BodyParameter; this is implemented also by other parameters (not query or formData) but it's a good compromise of effort/result for this scope.. Don't understand the comment, however the above comment applies here also:\nWe are moving the property from the more generic interface/abstract class Parameter/AbstractParameter which is also implemented by BodyParameter, to the less generic SerializableParameter/AbstractSerializableParameter which is not implemented by BodyParameter; this is implemented also by other parameters (not query or formData) but it's a good compromise of effort/result for this scope.. would call response.setExamples() on new line, with no need of modifying setter behaviour in response POJO . we don't want to modify setter behaviour, see also comment above. maybe rename test, also not sure what how is this related to the ref handling?\nwould need to add specific test(s) with own spec/model. no need of new line here. no need of new line here. no need of new line here. no need of new line here. maybe keep ref as is but use the function to set the refformat. a file can have no extension..\nalso what is the URL of  referenced RFC and section?. We try not to add deps if not strictly necessary, use instead indexOf / charAt directly in code. We try not to add deps if not strictly necessary, use instead indexOf / charAt directly in code. We try not to add deps if not strictly necessary, use instead indexOf / charAt directly in code, probably indexOf(\".\") != -1 is sufficient. only add to responseObject. only add to responseObject. remove this, as deprecation comes from mixin. remove this, as deprecation comes from mixin. this needs to return responsesObject (converted to Map) or responses depending on null status of the two. see how this is achieved for responseSchema and schema in response. this needs to return responsesObject (converted to Map) or responses depending on null status of the two. see how this is achieved for responseSchema and schema in response. remove all added logic, as such logic is handled in the getter. remove all added logic, as such logic is handled in the getter. only add to responseObject. remove deprecation. remove method, not needed. why is this? keep it instead as Map . why is this? keep it instead as Map . can you possibly just add\nif (this == o) {\n  return true;\n}. This section is not fully clear to me, particularly the meaning of Embedded annotations and the swagger/openapi within parenthesis); Possibly it would be sufficient something like:\nSince version 2.0.8, configurationFilePath parameter is available, allowing to specify a path to a [swagger configuration file](https://github.com/swagger-api/swagger-core/wiki/Swagger-2.X---Integration-and-Configuration#configuration); If single maven configuration parameters (e.g. prettyPrint) are also defined, these will overwrite any value set in configuration file; the same applies to  openapiFilePath which takes precedence over openAPI field in configuration file.\n. is this just for tests?. ",
    "JessieGit": "Is this problem solved? I mean, does example support List or other different objects? This is really annoying and frustrating. Our project get stuck here for a long time...... Seems nobody fixes the @ApiModelProperty example support problem here. Just curious how everybody gets the workaround if it only supports string type? . Hi, I am also experiencing the similar problem. I'd like to show a list of string in the example, but it is not working. If dataType is changed to \"List\" or \"List[String]\", all APIs will completely disappear from Swagger UI.\n@ApiModelProperty(required = true, dataType = \"List[String]\", example = \"[\\\"type0\\\",\\\"type1\\\"]\")\nprivate List entityTypes;\nFrom the definition of example, it only supports string type. Then it is supposed to allow json input as shown above. \nDoes anyone fix this problem?\n. I have the same problem. I am using Swagger-annotations 1.5.10. I want to show the example input for the API as below.\n @ApiParam(value = \"Input for get canonical names service\", required = true, examples = @Example(@ExampleProperty(value = \"{\\r\\n\\\"inputs\\\": [{\\r\\n\\t\\\"entityType\\\": \\\"type0\\\",\\r\\n\\t\\\"token\\\": \\\"flower\\\"\\r\\n}]\\r\\n}))) \nActually, no matter the example is what, there is no example shown in UI. But, all other attributes, e.g., value, required are displayed correctly. The only problem is the example. Is there any potential package conflicting with exampleproperty?\nAny help will be appreciated!. ",
    "indiie": "I too am trying to find out if this is supposed to be fixed, and if so could you please provide an example.. I too am trying to find out if this is supposed to be fixed, and if so could you please provide an example.. ",
    "rtomsick": "I don't think that this is fixed yet. It sure as hell doesn't work for Maps...\nWould having something like exampleModel typed as Object not suffice?  Then you could simply construct an suitable example object, annotated with the appropriate Jackson annotations and be done with it.. There is at least a workaround.\nSince @JsonCreator takes precedence over @JsonSetter, you can add dummy no-op setters and annotate them accordingly.  That will make swagger see the properties as mutable and act accordingly, while Jackson will simply ignore them.\nDumb hack?  You bet.  But at least it's a way to avoid too much model damage while getting the API spec built correctly.. It does for me...\nCould it be dependent on the version of Jackson?  I've used it in production on a project built w/ Jackson 2.9.0 and it worked fine.\nStill, this really should be fixed.. Addendum: I just realized that I don't quite do the same thing that @iyogi is doing.\nInstead, I'm doing @JsonCreator on the constructor (static or real) with @JsonProperty to name the constructor params, but then I'm simply doing @JsonGetter on the accessors, not @JsonProperty like in the original report.\nI haven't tested to see if the workaround works if you're doing @JsonProperty on your existing getters, but I can imagine that it might not.  @alexwei : did you try using @JsonGetter instead of @JsonProperty on your accessors?. @frantuma \nWell accessMode certainly addresses the broken behavior of readOnly, but I'm not sure it's really a good solution for this.  After taking a look at the accessMode changes, I don't really see anything that would really fix the behavior in this bug report.\nSort of by definition, we have enough information to be able to infer that a property is read/write based on the presence of @JsonCreator and @JsonProperty.  If we have a property that's exposed in the spec and if there exists a @JsonProperty annotation with the same property name for a @JsonCreator, then the property's \"access mode\" is R/W.  It would seem to be pretty poor form to force developers to re-declare that intent when it would be trivial to infer.\nApologies if I'm misunderstanding the semantics of accessMode.. As a follow-up, the following is also ignored (despite it being the canonical Jackson equivalent to @XmlEnumValue):\njava\n@ApiModel\npublic static enum Example\n{\n    @JsonProperty(\"foo\")\n    FOO,\n    @JsonProperty(\"bar\")\n    BAR;\n}\nSo basically, there are two different supported-by-Jackson ways to do this, and zero supported-by-Swagger ways.  :angry: . I understand that, and that's why I wouldn't propose a change in behavior for Map<K, V> where K is an arbitrary class.\nBut I would contend that since Map<MyEnum, Boolean> is logically equivalent to DummyExample in the code above, there is something that can be done about the cases where K is an enum.\nAs the set of possible keys is both finite and known at compile time, it would be both logically-sound and functionally equivalent [1] to produce a representation of the Map as though it were simply an object with those properties (all optional).\nThere is a pretty strong real world usage pattern for this too, which is why I'm so adamant about it.  A real-life example (the one that motivated this report in the first place) would be an endpoint that returns ACL entries for an object.  Each ACL entry is a mapping of an enumerated permission to a boolean (grant/deny), with absence from the ACL carrying its own semantic meaning (in this case, that the permission's grant/deny status is inherited).  The possible permissions are modeled in an enum, and are used in numerous other places in the application.  Since swagger-core uses the default Map serialization behavior of simply treating all maps as though they had String keys, the resulting spec \n not only winds up permitting any arbitrary permission identifier to be used, but also does not allow for useful examples to be generated.  While one can work around this with a dummy class like above (and indeed that's what I'm doing), it's far from ideal; while the resulting spec is correct, the dummy class shouldn't be necessary since all of the information that would be needed to generate it is already there.\n\n[1] Technically, it's only guaranteed to be equivalent if we assume that the user isn't returning an implementation of Map that violates the various contracts re: key existence, but I feel like that's probably a safe assumption.. That's true, there's potentially no way to go from OpenAPI spec -> code, but that's the same problem with enums in general isn't it?  \nI don't use client codegen or anything, so I have to plead ignorance here.  How are enums currently handled?. Well... at least there sort of is a workaround.  See my comment in #2169 for an example.. At least as it behaves on my system no, that is not a workaround.  The resulting schema remains whether I specify \njava\n@ApiResponse(code = 204, message = \"identity deleted sucessfully\",\n                    response = void.class)\nor \njava\n@ApiResponse(code = 204, message = \"identity deleted sucessfully\")\nI agree with you that the correct behavior for a 204 would be to assume no response unless otherwise specified, but that is not what currently happens.. Yes, that is the correct (default) behavior for 404.  If no @ApiResponse#response property is specified, no schema property will exist in the resulting spec.\nBut if you re-read my previous message, you'll see that the incorrect schema appears for 204 regardless of whether or not I provide an @ApiResponse#response property.\nI have edited my original post to hopefully make it clearer that the incorrect behavior is not dependent on the presence of a response = void.class property.. Reproduced most recently w/ 1.5.16. ",
    "SuperMarioX": "2.10\n. Thanks webron. I have fixed this issue by following closely the guide without servlet. But while integrating with other similar projects, this issue remains if I choose servlet way. I am not sure, but I finally got a way to run it successfully.\n. Yes, Config swagger on liberty is a headache and always cause issues. But I think we will find a walkaround. Pls close it and many thanks.\n. ",
    "quilicicf": "Hi, sorry for the delay. \nSame issue with version 1.5.2-M2:\ncom.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.node.BooleanNode cannot be cast to com.fasterxml.jackson.databind.node.TextNode (through reference chain: com.wordnik.swagger.models.ModelImpl[\"properties\"]->java.util.LinkedHashMap[\"complete\"]) (through reference chain: com.wordnik.swagger.models.Swagger[\"definitions\"]->java.util.LinkedHashMap[\"Order\"])\n    at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:210)\n    at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:177)\n    at com.fasterxml.jackson.databind.deser.std.MapDeserializer.wrapAndThrow(MapDeserializer.java:566)\n    at com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringMap(MapDeserializer.java:472)\n    at com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:320)\n    at com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:26)\n    at com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:538)\n    at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:99)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:238)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:118)\n    at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1269)\n    at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:864)\n    at org.restlet.ext.jackson.JacksonRepresentation.getObject(JacksonRepresentation.java:309)\n    at org.restlet.ext.apispark.internal.conversion.ImportUtils.getAndDeserialize(ImportUtils.java:87)\n    ... 3 more\nCaused by: java.lang.IllegalArgumentException: com.fasterxml.jackson.databind.node.BooleanNode cannot be cast to com.fasterxml.jackson.databind.node.TextNode (through reference chain: com.wordnik.swagger.models.ModelImpl[\"properties\"]->java.util.LinkedHashMap[\"complete\"])\n    at com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:2774)\n    at com.fasterxml.jackson.databind.ObjectMapper.convertValue(ObjectMapper.java:2700)\n    at com.wordnik.swagger.util.ModelDeserializer.deserialize(ModelDeserializer.java:55)\n    at com.wordnik.swagger.util.ModelDeserializer.deserialize(ModelDeserializer.java:16)\n    at com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringMap(MapDeserializer.java:460)\n    ... 13 more\nCaused by: com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.node.BooleanNode cannot be cast to com.fasterxml.jackson.databind.node.TextNode (through reference chain: com.wordnik.swagger.models.ModelImpl[\"properties\"]->java.util.LinkedHashMap[\"complete\"])\n    at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:210)\n    at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:177)\n    at com.fasterxml.jackson.databind.deser.std.MapDeserializer.wrapAndThrow(MapDeserializer.java:566)\n    at com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringMap(MapDeserializer.java:472)\n    at com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:320)\n    at com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:26)\n    at com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:538)\n    at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:99)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:238)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:118)\n    at com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:2769)\n    ... 17 more\nCaused by: java.lang.ClassCastException: com.fasterxml.jackson.databind.node.BooleanNode cannot be cast to com.fasterxml.jackson.databind.node.TextNode\n    at com.wordnik.swagger.util.PropertyDeserializer.propertyFromNode(PropertyDeserializer.java:75)\n    at com.wordnik.swagger.util.PropertyDeserializer.deserialize(PropertyDeserializer.java:22)\n    at com.wordnik.swagger.util.PropertyDeserializer.deserialize(PropertyDeserializer.java:15)\n    at com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringMap(MapDeserializer.java:460)\n    ... 24 more\n. We switched to 1.5.0. \nThanks for your help. \n. @webron - you're welcome. \nI've updated the code. \n. ",
    "manishgoyaler": "By mistake i put scala file in java example , closing pull request.\n. ",
    "dklotz": "@webron So #1318 is closed, but examples still don't work for array/list types right? Should this be re-opened or should I open a new issue?\n. @webron So #1318 is closed, but examples still don't work for array/list types right? Should this be re-opened or should I open a new issue?\n. @fehguy I'm still seeing this error log with dataType=\"file\" in 1.5.9. dataType=\"java.io.InputStream\" generates no error on the server-side, but also no file chooser on the client side (also having \"java.io.InputStream\" in the generated swagger.json/yaml wouldn't really be helping our non-java clients). \"java.io.File\" on the annotation works (and results in the correct \"type\": \"file\" in the JSON), but the spec says to use \"file\", so maybe this should be supported on the annotation?\n. @fehguy I'm still seeing this error log with dataType=\"file\" in 1.5.9. dataType=\"java.io.InputStream\" generates no error on the server-side, but also no file chooser on the client side (also having \"java.io.InputStream\" in the generated swagger.json/yaml wouldn't really be helping our non-java clients). \"java.io.File\" on the annotation works (and results in the correct \"type\": \"file\" in the JSON), but the spec says to use \"file\", so maybe this should be supported on the annotation?\n. This works:\nJava\n@ApiImplicitParams({\n            @ApiImplicitParam(name = UploadRequestParts.FILE, value = \"The binary file to upload.\", required = true, dataType = \"java.io.File\", paramType = \"form\")\n})\nThis generates the error log mentioned above:\nJava\n@ApiImplicitParams({\n            @ApiImplicitParam(name = UploadRequestParts.FILE, value = \"The binary file to upload.\", required = true, dataType = \"file\", paramType = \"form\")\n})\nSo the workaround works, I just thought the annotations should maybe accept the type \"file\" as its described in the spec.\n. This works:\nJava\n@ApiImplicitParams({\n            @ApiImplicitParam(name = UploadRequestParts.FILE, value = \"The binary file to upload.\", required = true, dataType = \"java.io.File\", paramType = \"form\")\n})\nThis generates the error log mentioned above:\nJava\n@ApiImplicitParams({\n            @ApiImplicitParam(name = UploadRequestParts.FILE, value = \"The binary file to upload.\", required = true, dataType = \"file\", paramType = \"form\")\n})\nSo the workaround works, I just thought the annotations should maybe accept the type \"file\" as its described in the spec.\n. maybe ping @fehguy will help? this is intended as a fix for #1319, which was erroneously closed\n. ",
    "sudohippie": "Okay. I'll take a look at develop_2.0.\n. cloned develop_2.0 and ran mvn clean install. Got a build failure related to code coverage:\n[INFO] --- jacoco-maven-plugin:0.7.2.201409121644:check (default-check) @ swagger-jersey-jaxrs ---\n[INFO] Analyzed bundle 'swagger-jersey-jaxrs' with 1 classes\n[WARNING] Rule violated for bundle swagger-jersey-jaxrs: complexity covered ratio is 0.00, but expected minimum is 0.90\n[WARNING] Rule violated for bundle swagger-jersey-jaxrs: classes missed count is 1, but expected maximum is 0\n[WARNING] Rule violated for class io.swagger.jersey.SwaggerJerseyJaxrs: lines covered ratio is 0.00, but expected minimum is 0.90\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 14.440s\n[INFO] Finished at: Fri Jun 05 11:11:45 PDT 2015\n[INFO] Final Memory: 32M/327M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.jacoco:jacoco-maven-plugin:0.7.2.201409121644:check (default-check) on project swagger-jersey-jaxrs: Coverage checks have not been met. See log for details. -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\nThe code install fine with mvn clean install -DskipTests.\nTravis-CI seems to be building fine. But I see swagger-jersey-jaxrs/target/jacoco.exec which Travis can not find:\n[INFO] --- jacoco-maven-plugin:0.7.2.201409121644:check (default-check) @ swagger-jersey-jaxrs ---\n[INFO] Skipping JaCoCo execution due to missing execution data file:/home/travis/build/swagger-api/swagger-core/modules/swagger-jersey-jaxrs/target/jacoco.exec\n. ",
    "mortias": "@olensmar please check this related issue, https://github.com/swagger-api/swagger-core/issues/1178 i think it's related but not completely solved \n. Note: if i change the \npublic List<MenuItem> sub;\nto another class type, it's fine\npublic List<MenuNode> sub;\nresult: \n\"definitions\" : {\n    \"MenuData\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"menudata\" : {\n          \"type\" : \"array\",\n          \"items\" : {\n            \"$ref\" : \"#/definitions/MenuItem\"\n          }\n        }\n      }\n    },\n    \"MenuItem\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"description\" : {\n          \"type\" : \"string\"\n        },\n        \"title\" : {\n          \"type\" : \"string\"\n        },\n        \"sub\" : {\n          \"type\" : \"array\",\n          \"items\" : {\n            \"$ref\" : \"#/definitions/MenuNode\"\n          }\n        }\n      }\n    },\n    \"MenuNode\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"node\" : {\n          \"type\" : \"string\"\n        }\n      }\n    }\n. If i only return the menuItem (without being used in another class like the menuData, its also fine)\n@GET\n    @Path(\"menuitems\")\n    @Produces({\"application/json\"})\n    @ApiOperation(httpMethod = \"GET\", value = \"Get the menu\", response = MenuItem.class)\n    public MenuItem getMenu() {\n        MenuItem root = new MenuItem(\"a\",\"b\");\n        return root;\n    }\n```\npublic class MenuItem {\npublic String description;\npublic String title;\n\npublic List<MenuItem> sub;\n\npublic MenuItem(String title, String description) {\n    this.title = title;\n    this.description = description;\n    this.sub = new ArrayList<MenuItem>();\n}\n\n}\n```\n\"paths\" : {\n    \"/test/menudata\" : {\n      \"get\" : {\n        \"summary\" : \"Get the menu\",\n        \"description\" : \"\",\n        \"operationId\" : \"getMenu\",\n        \"produces\" : [ \"application/json\" ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/MenuItem\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"definitions\" : {\n    \"MenuItem\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"description\" : {\n          \"type\" : \"string\"\n        },\n        \"title\" : {\n          \"type\" : \"string\"\n        },\n        \"sub\" : {\n          \"type\" : \"array\",\n          \"items\" : {\n            \"$ref\" : \"#/definitions/MenuItem\"\n          }\n        }\n      }\n    }\n  }\n}\n. Fyi\n```\n   swagger \n\nio.swagger\nswagger-core\n1.5.0\n\n   <build>\n    <plugins>\n        <plugin>\n            <groupId>com.github.kongchen</groupId>\n            <artifactId>swagger-maven-plugin</artifactId>\n            <version>3.1.0</version>\n            <configuration>\n                <apiSources>\n                    <apiSource>\n                        <springmvc>false</springmvc>\n                        <schemes>http</schemes>\n                        <host>localhost:9998</host>\n                        <basePath>/api</basePath>\n                        <info>\n                            <title>Swagger Maven Plugin Sample</title>\n                            <version>v1</version>\n                            <description>\n                                This is a sample.\n                            </description>\n                        </info>\n                        <locations>rest</locations>\n                        <swaggerDirectory>${project.basedir}/target/swagger-json/</swaggerDirectory>\n                    </apiSource>\n                </apiSources>\n            </configuration>\n            <executions>\n                <execution>\n                    <phase>compile</phase>\n                    <goals>\n                        <goal>generate</goal>\n                    </goals>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n</build>\n\n```\n. So there is good and bad news, \nthe bad news is that there is some sort of problem and it looses track of the right reference probably,..\nbut the good news is, i found a \"workaround\", so it's not blocking, however it's not what i want..\nif i specify the DataType i get an array with an object definition so swagger.ui doesn't block..\nhowever the \"type\" : \"object\" should point to the definition of \"MenuItem\"..\n@ApiModelProperty(required = true, dataType=\"java.util.ArrayList\")\n    public ArrayList<MenuItem> sub;\nresults in \n\"MenuItem\" : {\n      \"type\" : \"object\",\n      \"required\" : [ \"sub\" ],\n      \"properties\" : {\n        \"description\" : {\n          \"type\" : \"string\"\n        },\n        \"title\" : {\n          \"type\" : \"string\"\n        },\n        \"sub\" : {\n          \"type\" : \"array\",\n          \"items\" : {\n            \"type\" : \"object\"\n          }\n        }\n      },\n      \"description\" : \"MenuItem\"\n    }\n. sorry for the late reply but it doesn't work in my case, i still have an array without a definition\n\"items\" : {\n          \"type\" : \"array\"\n        }\nusing swagger core > 1.5.3\n. Please re-open the issue and test it with my simple case above..\n. Hmm... i 'll test it again then :)\n. ",
    "jahlborn": "Sorry for the delayed response.  we haven't been working with our swagger code recently, so have not had a chance to look into that.\n. yes, we generate our model info on the fly from internal product configuration.\n. When trying to define a model in a swagger document, you start with a Model, which has a map of Property's.  now, i want to define one of the properties in the Model to have complex content (i.e. nested properties).  there is no Property implementation which contains a map of Properties.  MapProperty seems like what you would want, but it only contains a single nested property.\n. ",
    "bytesandwich": "@mikalveli are you keeping your fork as a dependency from maven local?\n. ",
    "cablegunmaster": "mikalveli, i'm trying to recreate what you did, because im updating Play to 2.4 as well, with my swagger-core.\n1. I clone your repository. Esentially downloading the files in a folder. like D:\\Swagger-core\n2. I go to the swagger-core folder.\n3. I checkout the folder into my local repository of my pc? ( git local). Create my own repository for this?\n4. I use the sbt publish-local command to attach the repository with my play framework?\nI don't understand step 3 checking out the module on the local pc. \n'1.3.12-play2.4' != '1.3.12_play24'\nNone the less happy to know that 2.4 is going to be supported with swagger!\n. @mikalveli I got the part fixed with checkout and clone :). Thx!!!! \nthe publish-local command worked after figuring out how it works. now only to resolve the Swagger update errors ^^! \n\"URI has an authority component\"\nWindows users: build.scala replace 'file://' 'file:///' to compensate for the location URI error the SBT creates.\nAlso don't forget to add the local SBT repository in your build.sbt:\n        \"resolvers += Resolver.mavenLocal\"\n. ",
    "truman-misfit": "@mikalveli I got a strange error when I follow your steps:\ntype ApiHelpController is not a member of package controllers\nI figure out that you define ApiHelpController as a Object instead of Class which causes the compilation error. So I change the ApiHelpController to Class and it looks good to me. Have I missed something important?\n. @mikalveli I got the problem and fixed it. I think the compilation error was caused by the routesGenerator in my build.sbt file. Play 2.4, by default, generates a dependency injected router, unlike previously, when it used a static router.\n. ",
    "matiwinnetou": "I ported 1.3.12 to Play 2.4 here:\nhttps://github.com/matiwinnetou/swagger-play24\n. ",
    "Ciantic": "Is there plans to support play in the core? I know that the Readme says:\n\nFuture milestone releases will add support for plain Servlets and Play Framework.\n\nBut it's been there probably for ages. I'm now trying this @matiwinnetou's implementation.\n. ",
    "MarvGilb": "New PR: Improved accept header for swagger request. #1172 \n. Thanks for the fast reply. When is a new release planed?. ",
    "chriskessel": "How do I get 1.5 with jaxrs? I don't see a 1.5 available in http://mvnrepository.com/ anywhere. We were using this (stolen from a gradle file I inherited). I was trying to move to the latest, but I'm not sure what that means as far as a gradle dependency.\ncompile group: \"com.wordnik\", name: \"swagger-jaxrs_2.9.1\", version: \"1.0.1\"\ncompile group: \"com.wordnik\", name: \"swagger-core_2.9.1\", version: \"1.0.1\"\n. Ah, ok. The repackaged bit got me. My eyes flew right over that change.\n. Yea, sorry.\n. Found it. io.swagger.jaxrs.utils.ReflectionUtils.java:158\nif (\"javax.inject.Inject\".equals(annotation.annotationType().getName())) {\nIn a previous project I used Google's inject and didn't get this mysterious body parameter. In my project showing the issue, I'm using javax.inject.Inject.  Guice doesn't care which inject I use, but I try to use standard Java when possible so that's why I switched to javax.inject.Inject. \nI can switch back to Google's inject, but I guess my original question is still valid: how do I prevent this @Inject annotation from creating the body param in the swagger.json?\n. Thanks.\n. ",
    "phillro": "1.3.12\nOn Tue, Jun 9, 2015 at 4:45 PM, Ron notifications@github.com wrote:\n\n@phillro https://github.com/phillro - which version of swagger-core do\nyou use?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1149#issuecomment-110499268\n.\n. \n",
    "Syzygy24": "Is there a version we can use that has this fix? 1.5.1-SNAPSHOT maybe?\n. I tried, but it's still giving me version 1.5.0. I attempted to just change the version in the dependency here. Am I misunderstanding how to change it?\n<dependency>\n                <groupId>io.swagger</groupId>\n                <artifactId>swagger-jersey-jaxrs</artifactId>\n                <version>1.5.1-SNAPSHOT</version>\n            </dependency>\n. Edit: The annotation version didn't match. It's up and running now, with the bug fix. It looks great, thanks!\n. All right, well thank you for the quick response! I'll try to figure something else out.\n. ",
    "darklynx": "Thank you for your quick reply!\nI entirely understand that parsing logic could be tricky and does not have to be sequential, which would then break the originally defined order. I also understand that Swagger Spec which defines map to keep paths by definition does not guarantees the order in general.\nThis makes the sorting logic from the getter even more confusing.\nHowever the proposed simplification from my message above has solved the issue for swagger-codegen project and out-coming JSON had the same order of paths as original YAML. The swagger-ui project that I'm using tends also to respect the order of paths in JSON file.\nBut I don't like to have a separate branch / fork for this small but important change. It would be great if the getter could be simplified in your original project, unless it breaks something that I'm not aware of. \nUnfortunately I could not track down the reason for paths sorting in the commit history (neither in comments), and I might be missing some important reasons to sort the paths.\n. @fehguy thank you for your reply! I see your point.\nBut if you look at the implementation of public Swagger path(String key, Path path) method in Swagger class, it tends to use LinkedHashMap which would preserve the order paths gets added to Swagger.\nThis could have worked with YAML parser => JSON generator (I tested it). However the public Map<String, Path> getPaths() method breaks the order by sorting the output. Since your assumption is that the order cannot be guaranteed for paths why bother sorting them anyway?\nOn the other hand I do use tags in my descriptions of API, but cannot figure out how they could help to preserve an order within the tag group.\nActually it is a missing feature in the Path description to have some kind of sortOrder or weight parameter that would help to sort paths while displaying them. But this is, of course, out of scope of this particular issue, and I have already seen a feature request mentioning something like that.\nThanks a lot for the Swagger, you are doing a great job!\nI can live with my personal generator and wait for the path sort order feature to make into the Swagger spec... ;)\n. @webron where can I read about the reasoning? :) I'd like to understand your position about ordering paths. I've read the discussion on this issue: https://github.com/swagger-api/swagger-core/issues/1050, but it does not explain why you've decided to get rid of manual ordering\n. ",
    "paukiatwee": "I would like to suggest add new method Swagger.getPathsMap() to return original LinkedHashMap in order to access to ordered map.\n@JsonIgnore annotation can add to Swagger.getPathsMap() in order to prevent serialized as json.\nThis is essential to preserve paths order defined in json/yaml file.\n. getPaths return Map sorted by key and this one return original Map with insertion order. I can remove it if it is not ok.\n. ",
    "2is10": "@webron\n\nEverything is represented as a JSON object and not as a JSON array, and by definition, there's no order of properties within a JSON object and they can be parsed differently by different parsers.\n\nThe fact is that browsers (the most commonly used parsers of swagger JSON, no?) do preserve property order of objects, and this feature is part of the ES6 specification. Here\u2019s an informative discussion of the reasons. I found this remark from Brendon Eich specifically noteworthy:\n\nEngines are converging, inter-operation pressure points in one direction only: greater convergence and standardization. . . . Leaving things unspecified for too long was a failure on our part in tending the spec, or a trade-off (we had other things to do ;-). All water under the bridge, but we're not stepping back to unspecified behavior. Because engines aren't, because developers do not want.\n\n@fehguy\n\nI believe the sorting was added because, given it is a map, the order would change just fetching the items twice in a row. Since the maps are unordered, I think it's best to leave this as such.\n\nWhat do you mean that \u201cthe order would change just fetching the items twice in a row\u201d? I don't know of any widely used java.util.Map implementation whose order changes without any change to its contents. (I\u2019m talking about a specific instance\u2019s order. Even java.util.HashMap has a consistent order until modified.)\nAlso, your claim that \u201cmaps are unordered\u201d is an over-generalization. From the Map Javadoc:\n\nThe order of a map is defined as the order in which the iterators on the map's collection views return their elements. Some map implementations, like the TreeMap class, make specific guarantees as to their order; others, like the HashMap class, do not.\n\nSwagger allows callers to choose what kind of Map they want to use for paths:\npublic void setPaths(Map<String, Path> paths) {\n        this.paths = paths;\n    }\nIf callers choose to use an ordered Map (as Swagger does by default), then why defeat that choice with an arbitrarily placed sort operation?\nIf fixing this issue is really as simple as removing a sort operation that has no reason to exist in the first place, I second @darklynx\u2019s request for you to please consider it. Thanks.. ",
    "TehBakker": "Just to check, there is no way to customly order my paths to show them in a logical order in swagger ui ?\nAlso using codeGen so I can't use swagger annotation, just the swagger yaml specification.\nAnd I don't want to use alpha order.\n. ",
    "ashley-taylor": "change to the latest io.swagger version and it now works\nCheers,\nAshley\n. ",
    "msimons": "@webron Thanks for informing me. I will submit a PR against develop_2.0 branch.\n. ",
    "Armanda888": "Can I set collectionFormat to be csv for query parameter? as my rest api is like foo=bar, baz\n. @fehguy how do I set it? in the annotation ApiParam?\n. by checking https://github.com/kongchen/swagger-maven-plugin/blob/master/src/main/java/com/github/kongchen/swagger/docgen/reader/AbstractReader.java, Line 417, it sets collectionFormat to multi for query param. \nHere is my query parameter:\nApiParam(name = \"include\", allowableValues = \"a, b\", allowMultiple = true, required = false)\n@QueryParam(\"include\") String include,\nin the swagger.json, it's like this:\n{\n\"name\" : \"include\",\n\"in\" : \"query\",\n\"required\" : false,\n\"type\" : \"array\",\n\"items\" : {\n\"type\" : \"string\",\n\"default\" : \"csv\",\n\"enum\" : [ \"a\", \"b\" ]\n},\n\"collectionFormat\" : \"multi\"\n}\n. ",
    "gkozyryatskyy": "@Armanda888 do you solve your question? have the same problem after update.\nThere is a support of collectionFormat now available in annotations https://github.com/swagger-api/swagger-core/issues/1180, but seems swagger plugin do not use it.. @fehguy can you please show how we can set collectionFormat to csv through annotations + swagger plugin?. @fehguy this one https://github.com/kongchen/swagger-maven-plugin\nseems like the problem is somewhere here https://github.com/kongchen/swagger-maven-plugin/blob/master/src/main/java/com/github/kongchen/swagger/docgen/reader/AbstractReader.java#L441. @fehguy \ndone https://github.com/kongchen/swagger-maven-plugin/issues/425. ",
    "viktorgunnarson": "This seems to be broken when using @JsonProperty, or am I missing something?\nThis model:\n```java\n@ApiModel\npublic class TestModel {\n@ApiModelProperty(value = \"Prop\", readOnly = false)\n@JsonProperty\nprivate String prop;\n\npublic TestModel() {\n}\n\npublic TestModel(String prop) {\n    this.prop = prop;\n}\n\npublic String getProp() {\n    return prop;\n}\n\n}\n```\nResults in:\njavascript\nTestModel:\n  type: \"object\"\n  properties:\n    prop:\n      type: \"string\"\n      description: \"Prop\"\n      readOnly: true\nIf @JsonProperty is removed the readOnly row disappears in the swagger spec.. ",
    "sergeijakovlev": "Edit: sorry for commenting on an old issue. Found a newer open report: https://github.com/swagger-api/swagger-core/issues/2169\nThis does seem to be broken in my case as well. The behavior I see currently using Jackson annotations:\n\nprivate field, getter, no annotations - not read only (OK)\nprivate field, getter, setter, no annotations - not read only (OK)\nprivate field, getter, @JsonProperty - read only (in my opinion NOK)\nprivate field, getter, @JsonProperty with access=READ_WRITE - read only (NOK)\nprivate field, getter, @JsonProperty with access=READ_WRITE and @ApiModelProperty with readOnly=false - read only (very much NOK)\nprivate field, getter, @ApiModelProperty with readOnly=false, constructor with @JsonCreator with an argument marked @JsonProperty with name=\"fieldName\" and access=READ_WRITE - read only (NOK)\n\nThis makes it very inconvenient to  use immutable objects with Swagger Core. A simplified example of a class that we would like to use:\npublic class SomeDTO implements Serializable {\n    private final String value;\n\n    public String getValue() {\n        return this.Value;\n    }\n\n    @JsonCreator\n    public SomeDTO(@JsonProperty(value = \"value\", required = true) String name) {\n        this.value = value;\n    }\n}\n\nUnfortunately, the generated Swagger definition is the following:\nSomeDTO:\n  type: \"object\"\n  required:\n  - \"value\"\n  properties:\n    value:\n      type: \"string\"\n      readOnly: true # <- NOK. This does seem to be broken in my case as well. The behavior I see currently using Jackson annotations:\n\n\nprivate field, getter, no annotations - not read only (OK)\nprivate field, getter, setter, no annotations - not read only (OK)\nprivate field, getter, @JsonProperty on field - read only (in my opinion NOK)\nprivate field, getter, @JsonProperty on field with access=READ_WRITE - read only (NOK)\nprivate field, getter, @JsonProperty on field with access=READ_WRITE and @ApiModelProperty on field with readOnly=false - read only (very much NOK)\nprivate field, getter, @ApiModelProperty on field with readOnly=false, constructor with @JsonCreator with an argument marked @JsonProperty with name=\"fieldName\" and access=READ_WRITE - read only (NOK)\n\nThis makes it very inconvenient to  use immutable objects with Swagger Core.\nRelated issues:\nhttps://github.com/kongchen/swagger-maven-plugin/issues/379\nhttps://github.com/kongchen/swagger-maven-plugin/issues/458\nhttps://github.com/swagger-api/swagger-core/issues/1161 (maybe). This issue also exists in swagger-jaxrs version 1.5.17. The part of the Reader class that seems to be responsible is currently the following: https://github.com/swagger-api/swagger-core/blob/c2481359451c368785bf7910a463d36452a7f40b/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java#L831-L835\nThis code tries to generate a unique operationId if the method is defined for super type to avoid duplicate operationIds when using inheritance for resources (https://github.com/swagger-api/swagger-core/commit/7878cfde405042465dcf3e65135e77ff34b40275). Unfortunately, this is not done for other methods.\nQuite obviously, this causes duplicate operationIds to appear if two methods in completely unrelated classes share the same name. In this case it is possible to either rename those methods or supply a custom nickname if methods cannot be renamed.\nA bit less obviously, this also causes duplicates when the same sub-resource is used in multiple resources. In that case it is impossible to rename different \"copies\" of methods or supply different nicknames.\nUnfortunately, we currently have the second situation. In our API we have to handle a relatively complex sub-resource common to multiple resources. Currently I do not see a way to avoid semantic errors (operationIds must be unique) in our generated Swagger files.\nIs there a reason why you chose specifically not to generate unique IDs for all methods? As far as I can tell, duplicate IDs in swagger files should not exist in any case - why not default to the safe behavior in all cases?\nIf this is a performance optimization, it must be noted that String getOperationId(String operationId) and boolean existOperationId(String operationId) seem to be very sub-optimal and iterate over all operations and all paths to check if an operationId is unique, and repeat the process for each subsequent generated ID. It seems that a simple HashMap would go a long way in improving the performance of this particular section.. It is quite interesting that there is a unit test that specifically expects appearance of duplicate operationIds.\nhttps://github.com/swagger-api/swagger-core/blob/c2481359451c368785bf7910a463d36452a7f40b/modules/swagger-jaxrs/src/test/java/io/swagger/SubResourceReaderTest.java#L44-L54\nThis seems to contradict OpenAPI 2.0 specification of operationId:\n\nUnique string used to identify the operation. The id MUST be unique among all operations described in the API. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is recommended to follow common programming naming conventions.. Unfortunately, I was unable to find documentation regarding expected behavior of the Reader class. Optimizing de-duplication of operationIds is trivial if a Swagger object is expected to be bound to only one Reader at a time, which does not seem to be guaranteed. It seems that re-scanning of all paths is performed in case a Swagger object is modified externally while Reader is working, but currently the code does not seem thread-safe.. \n",
    "bofalot": "I am interested in this change, thanks for fixing. Just my $0.02, but I would keep head after get in the @JsonPropertyOrder as that is the order listed at http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html.\n. I've included this into my pull request https://github.com/swagger-api/swagger-core/pull/1217\n. Have included the fix from https://github.com/swagger-api/swagger-core/pull/1162\n. Have removed #1162 from this PR and created https://github.com/swagger-api/swagger-core/pull/1250.\nHope this works, this is my first time contributing using GitHub.\n. The function argument should be head not get. This typo prevents this change from actually working.\n. ",
    "greenreign": "I just stumbled over this trying to use swagger for the first time.\n. It seems a bit arbitrary to use the getter annotation and ignore the setter annotation.  This problem, and perhaps others, would not be a big issue If the ApiModelProperty annotation took precedence.  The documentation would at least be usable if I could:\n```\n@JsonIgnore\n@ApiModelProperty(notes=\"POST/PUT only\")\npublic String getPassword() {\n    return password;\n}\n@JsonProperty\npublic void setPassword(String password) {\n    this.password = password;\n}\n```\n@ApiModelProperty should take precedence over implied getter/setter parsing.  I've experienced a similar problem being unable to have a property marked readonly through the ApiModelProperty because a setter exists.\n. That's true.  I do think upgrading the importance of the ApiModelProperty annotation to override any implicit logic would be a suitable workaround for this issue.  Perhaps not that simple \n. Correct, it would not technically solve the problem however it would be an improvement and in my situation enough for my documentation to get by.   Should I open a separate issue with respect to the ApiModelProperty?  It seems like that could be accomplished without the complication of introducing a second model.\n. For me, that's an improvement.  If I could simply force the property to show up in the model then I could add a note that specifies when it's applicable.\n. Looks like description has been marked deprecated in a future version.  Still the result for this version can't be correct.  \nWhat way may I describe my resource in the future?\n. @webron Sorry for the delay.  I've had to shelf the documentation for a while.  The tags look like they will do the trick.  My dependency is from dropwizard-swagger 0.7 so I'm hoping that framework upgrades the swagger version so I can test it then.\n. Looks like @Tag was introduced in 1.5.2-M1\n. We are purely using annotations.  While the Swagger object may be a potential work around I think we'll wait until we have some time to either create a PR to upgrade dropwizard-swagger or dump that framework and use the latest swagger directly.  \n@webron thanks for your time on this and the framework as well.  I think we can mark this one closed since so much has changed in the later versions.   Up to you I guess\n. ",
    "boazsapir": "See also https://github.com/swagger-api/swagger-codegen/pull/868\n. I agree.\nBTW is the new proposal confirmed or are we still waiting for input from more people?\n. ",
    "samolsen": "I'm having some trouble grok-ing the test cases. Would you share a gist of your JodaTime converter? \n. ",
    "andi-livn": "Sure, no worries.\nIn our swagger configuration code I'm registering our CustomModelConverter:\njava\nModelConverters.getInstance().addConverter(new CustomModelConverter());\nThe converter and referenced types are as follows:\n``` java\npublic class CustomModelConverter implements ModelConverter {\n@Override\npublic Property resolveProperty(Type type, ModelConverterContext context, Annotation[] annotations, Iterator<ModelConverter> chain) {\n    JavaType _type = Json.mapper().constructType(type);\n    if (_type != null) {\n        Class<?> cls = _type.getRawClass();\n        if (DateTime.class.isAssignableFrom(cls)) {\n            return new ISODateTimeProperty();\n        }\n        if (LocalDate.class.isAssignableFrom(cls)) {\n            return new ISODateProperty();\n        }\n        if (LocalTime.class.isAssignableFrom(cls)) {\n            return new ISOTimeProperty();\n        }\n        if (Currency.class.isAssignableFrom(cls)) {\n            return new CurrencyProperty();\n        }\n        if(Throwable.class.equals(cls)) {\n            return new io.swagger.models.properties.ObjectProperty();\n        }\n    }\n    if (chain.hasNext()) {\n        return chain.next().resolveProperty(type, context, annotations, chain);\n    } else {\n        return null;\n    }\n}\n\n@Override\npublic Model resolve(Type type, ModelConverterContext context, Iterator<ModelConverter> chain) {\n    if (chain.hasNext()) {\n        return chain.next().resolve(type, context, chain);\n    } else {\n        return null;\n    }\n}\n\n}\npublic class CurrencyProperty extends AbstractProperty {\n    public CurrencyProperty() {\n        this.setType(\"string\");\n        this.setExample(\"AUD\"); //ISO 4217 currency code\n    }\n}\npublic class ISOTimeProperty extends AbstractProperty {\n    public ISOTimeProperty() {\n        this.setType(\"string\");\n        this.setExample(\"23:59:59.999\"); //time in ISO8601 format (HH:mm:ss.SSS)\n    }\n}\npublic class ISODateProperty extends AbstractProperty {\n    public ISODateProperty() {\n        this.setType(\"string\");\n        this.setFormat(\"date\");\n        this.setExample(\"1999-12-31\"); //date in ISO8601 format (yyyy-MM-dd)\n    }\n}\npublic class ISODateTimeProperty extends AbstractProperty {\n    public ISODateTimeProperty() {\n        this.setType(\"string\");\n        this.setFormat(\"date-time\");\n        this.setExample(\"1999-12-31T23:59:59.999+11:00\"); //date-time in ISO8601 format (yyyy-MM-ddTHH:mm:ss.SSSZZ)\n    }\n}\n```\nUsing this approach java Currency and the joda types DateTime, LocalDate and LocalTime are documented with the same format as we use in our Jersey API (using JAXB adapters that map Currency to the 3 letter ISO currency code, LocalTime to an ISO String, etc)\nNote: We also use this custom converter to set not otherwise defined Throwable types to be a plain Object in order to prevent our application's Exception subclass types' inherited property Throwable getSuppressed() (and with that StackTraceElement[] stackTrace) from showing up in our Swagger docs. See: https://github.com/swagger-api/swagger-core/issues/1168\n. ``` java\n//...\n@ApiOperation(value = \"Modifies the passenger record.\", response = Pax.class)\n@ApiResponses(value = {\n            @ApiResponse(code = 400, message = \"Submitted data contains errors (e.g. fields exceed max length).\", response=ApiException.class), //...\n    })\n    public Pax customisePax(\n            @ApiParam(value=\"Pax including the API user custom strings 1-4.\") Pax pax\n            ) {\n//... we validate data client wishes to modify\nif(!validationErrors.isEmpty()) {\n            ApiException ex = new ApiException(ApiExceptionReason.INVALID_DATA);\n            ex.setDetails(validationErrors);\n            throw new MappableContainerException(ex);\n        }\n```\nIf the submitted data doesn't validate, say an email address is malformed, the MappableContainerException is resolved by\n``` java\n@Provider\npublic class ApiExceptionMapper implements ExceptionMapper {\n@Context\nprotected HttpHeaders hh;\n\n@Override\npublic Response toResponse(ApiException e) {\n\n    return Response\n        .status(e.getStatus())\n        .entity(e)\n        .type(this.hh.getMediaType())\n        .build();\n}\n\n}\n```\nApiException itself extends RuntimException, but is also annotated to double up as an API type (hiding all but the details we wish to share with the client)\nI suppose we should just let the API return a plain purpose-built type and map our exceptions to that.\n. @frantuma Thanks for the suggestion. I just tried it, but both Throwable and StackTraceElement are included in the generated swagger.json.\n. Sorry, have been flat out at work lately. Prviously I've only tried the above suggestion using v1.5.4.\nI've just updated to the latest stable 1.5.8 and it makes no difference, using only \n@JsonIgnoreProperties({\"detailMessage\",\"cause\",\"stackTrace\",\"suppressed\"}) and removing my CustomModelConverter workaround (if(Throwable.class.equals(cls)) return new ObjectProperty();), swagger.json still includes suppressed and the Throwable and StackTraceElement type definitions:\n\"ApiException\" : {\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"string\",\n      \"enum\" : [ \"OK\", \"CREATED\", \"ACCEPTED\", \"NO_CONTENT\", \"MOVED_PERMANENTLY\", \"SEE_OTHER\", \"NOT_MODIFIED\", \"TEMPORARY_REDIRECT\", \"BAD_REQUEST\", \"UNAUTHORIZED\", \"FORBIDDEN\", \"NOT_FOUND\", \"NOT_ACCEPTABLE\", \"CONFLICT\", \"GONE\", \"PRECONDITION_FAILED\", \"UNSUPPORTED_MEDIA_TYPE\", \"INTERNAL_SERVER_ERROR\", \"SERVICE_UNAVAILABLE\" ]\n    },\n    \"reason\" : {\n      \"type\" : \"string\",\n      \"enum\" : [ \"CURRENCY_CONVERSION_FAILED\", \"AUTHENTICATION_CREDENTIALS_INVALID\", \"NOT_ENOUGH_CLEARANCE\", \"AUTHENTICATION_CREDENTIALS_REQUIRED\", \"AUTHENTICATION_METHOD_UNSUPPORTED\", \"AUTHENTICATION_CREDENTIALS_SYNTAX_INVALID\", \"INVALID_CART\", \"INVALID_DATA\", \"CART_TO_BOOKABLES_FAILED\", \"CHECKOUT_IN_PROGRESS\", \"CHECKOUT_FAILED\", \"CHECKOUT_COMPLETE\", \"CART_NOT_READY_FOR_CHECKOUT\", \"CART_NOT_CHECKED_OUT\", \"CART_HAS_EXPIRED\", \"CART_NOT_PAID\", \"CART_HAS_TIMED_OUT\", \"CANCELLATION_NOT_POSSIBLE_TOO_LATE\", \"CANCELLATION_NOT_POSSIBLE\", \"CANCELLATION_NOT_POSSIBLE_VOUCHER\", \"CANCELLATION_BAD_QUOTE\", \"CANCELLATION_ALREADY_COMPLETE\", \"CANCELLATION_ALREADY_IN_PROCESS\", \"CANCELLATION_GENERATING_PNR_FAILED\", \"NO_SEARCH_CRITERIA\" ]\n    },\n    \"description\" : {\n      \"type\" : \"string\"\n    },\n    \"ip\" : {\n      \"type\" : \"string\"\n    },\n    \"details\" : {\n      \"type\" : \"array\",\n      \"xml\" : {\n        \"name\" : \"detail\",\n        \"wrapped\" : true\n      },\n      \"items\" : {\n        \"$ref\" : \"#/definitions/ApiExceptionDetail\"\n      }\n    },\n    \"suppressed\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/definitions/Throwable\"\n      }\n    }\n  },\n  \"xml\" : {\n    \"name\" : \"apiException\"\n  }\n}\n. Thanks @kriegerkl for re-opening this ticket. The suggested solution in the original thread appears to be for a different problem, namely how to add multiple resource packages to the same swagger API, rather than how to keep two APIs separated.. Many many thanks to Dherik, who just emailed me this solution to the problem:\n\nDid you try to set the ConfigId and ScannerId in the BeanConfig?\nI have the same issue, but I was using web.xml and add this parameters in my Application: \n\nFor api1:\n<init-param>\n    <param-name>swagger.scanner.id</param-name>\n    <param-value>api1</param-value>\n</init-param>\n<init-param>\n    <param-name>swagger.config.id</param-name>\n    <param-value>api1</param-value>\n</init-param>\n<init-param>\n    <param-name>swagger.use.path.based.config</param-name>\n    <param-value>true</param-value>\n</init-param>\nFor api2:\n<init-param>\n    <param-name>swagger.scanner.id</param-name>\n    <param-value>api2</param-value>\n</init-param>\n<init-param>\n    <param-name>swagger.config.id</param-name>\n    <param-value>api2</param-value>\n</init-param>\n<init-param>\n    <param-name>swagger.use.path.based.config</param-name>\n    <param-value>true</param-value>\n</init-param>\nAdd the above init parameters to the two separate APIs' web.xml servlets.\nThen use setScannerId and setConfigId in your BeanConfig to set these IDs to api1 and api2.\nUsing that approach works! Again, thank you very much for this.. @xmeng1 We aren't using Guice and in fact not even Jersey 2, but the old 1.19, so unfortunately I cannot answer your question, sorry.. ",
    "michael-schnell": "Unfortunately this is not exactly what the OverrideConverter provided:\njava\nOverrideConverter converter = new OverrideConverter();\nconverter.add(className, json);\nThe property was created by using some JSON definition. This way it was also possible to configure the properties as a resource file. \nSo the additional question is: How do I create a property by parsing some JSON property definition?\n. Not really - My question above is still open.. ",
    "JacksonBailey": "@fehguy  was this resolved?. ",
    "sg-ad": "Sorry I wasn't clear.  The JAXRSServerFactoryBean allows you to specify some extension mappings where you map an extension to a content-type.  So you can say that all paths ending with .json extension are mapped to application/json content-type.  These mappings are used by a Jaxrs request pre-processor that will update the Accept header to include application/json as an accepted content-type if the request path ends with that extension.\nJaxrs will follow this update with a removal of the .json extension from the path.  So at the exit of the pre-processor, the request path is now .../swagger instead of .../swagger.json, so it no longer resolves to the resources exposed by ApiListingResource since they explicitly check for the extension.\nSo I wonder whether this would make a candidate for configuration or simply a case of documentation.\nCaveat:  judging from the few hits I get when searching, I don't think that configuring extension mappings in Jaxrs is a very widely used feature.\n. Good point.  I guess if one wants their API to be discoverable by Swagger-knowledgeable tools, changing the usage won't be a very good workaround.  Another (somewhat rudimentary) possibility would be for one to expose the Swagger definitions with a different endpoint on a different root than the rest of the API /spec/swagger.json while the API itself exists under /api/.  This assumes that there are no extension mappings configured on /spec/ endpoint.  Besides being counterintuitive, would this violate any explicit or implicit convention?\n. Thanks for pointing that out.  I'll be curious to see how it develops.  \nI see you also referenced to #1145 - that basically brings in the workaround that I have now into the fold of Swagger directly.  That fix will solve my issue quite nicely.  I'm not very clear on the release process, so any idea when it might make it into a release?  In the meantime I can continue using my workaround, so there's no particular rush for me.\nThanks for the help, and thanks for such a great tool!\n. ",
    "hiteshgupta33": "@webron  Hi Ron: \nThis is my web.xml\n``` xml\n\nresteasy.resources\nio.swagger.jaxrs.listing.ApiListingResource\nio.swagger.jaxrs.listing.SwaggerSerializers\nedu.ucsd.act.academic.ClassWaitlist.rest.WaitlistController\n\n<context-param>\n    <param-name>resteasy.providers</param-name>\n    <param-value>\n            io.swagger.jaxrs.json.JacksonJsonProvider,\n        io.swagger.jaxrs.listing.ApiDeclarationProvider,\n          io.swagger.jaxrs.listing.ResourceListingProvider\n    </param-value>\n</context-param>\n\n<servlet>\n    <servlet-name>javax.ws.rs.core.Application</servlet-name>\n    <load-on-startup>1</load-on-startup>\n</servlet>\n<servlet-mapping>\n    <servlet-name>javax.ws.rs.core.Application</servlet-name>\n    <url-pattern>/v1/*</url-pattern>\n</servlet-mapping>\n\n\nDefaultJaxrsConfig\nio.swagger.jaxrs.config.DefaultJaxrsConfig\n\napi.version\n1.0.0\n\n\nswagger.api.basepath\nhttp://localhost:8080/ClassWaitlist\n\n2\n\n<session-config>\n    <session-timeout>120</session-timeout>\n</session-config>\n\n```\nswagger dependency in POM.xml \nxml\n<dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-jaxrs</artifactId>\n            <version>1.5.0</version>\n        </dependency>\nand also using Jboss jaxrs api \nxml\n<dependency>\n            <groupId>org.jboss.spec.javax.ws.rs</groupId>\n            <artifactId>jboss-jaxrs-api_1.1_spec</artifactId>\n            <scope>provided</scope>\n        </dependency>\nController snippet:\n``` java\n@Path(\"/classes\")\n@Api(value = \"/classes\", description = \"Add classes to waitlist, drop classes from waitlist\")\npublic class WaitlistController {\nprivate Validator                   validator;\n\nprivate IvoryService                ivoryService;\n\nprivate AcademicLevelService        academicLevelService;\n\nprivate RegDateService              regDateService;\n\nprivate ErrorMessageService         errorMessageService;\n\nprivate WaitlistQueueService        waitlistQueueService;\n\nprivate CheckIfClassWaitlistable    preAuthCheckService;\n\nprivate static final Logger         LOGTAG  = LoggerFactory.getLogger(WaitlistController.class);\n\n@Inject\npublic WaitlistController(Validator validator, IvoryService ivoryService, RegDateService regDateService, AcademicLevelService academicLevelService, ErrorMessageService errorMessageService, WaitlistQueueService waitlistQueueService, CheckIfClassWaitlistable preAuthCheckService) {\n    this.validator = validator;\n    this.ivoryService = ivoryService;\n    this.regDateService = regDateService;\n    this.academicLevelService = academicLevelService;\n    this.errorMessageService = errorMessageService;\n    this.waitlistQueueService = waitlistQueueService;\n    this.preAuthCheckService = preAuthCheckService;\n}\n\n@SuppressWarnings(\"boxing\")\n    @POST\n    @Path(\"/{sectionNumber: [0-9][0-9]*}/{pid: (.+)?}\")\n    @Produces(MediaType.APPLICATION_JSON)\n    @Consumes(MediaType.APPLICATION_JSON)\n    @ApiOperation(value = \"Add class to the waitlist\", notes = \"Adding the student on the waiting list for the requested class\", response = WaitlistStatusVo.class)\n    public Response classWaitlist(@ApiParam(value = \"User ID / PID\", required = true) @PathParam(\"pid\") String pid, @ApiParam(value = \"4 characters alphanumeric Term code selected by user\", required = true) @QueryParam(\"termCode\") @NotNull String termCode, @ApiParam(value = \"7 digit number unique for every class\", required = true) @PathParam(\"sectionNumber\") Integer sectionNumber, @ApiParam(value = \"Payload\", required = true) JsonNode jsonNode) {\n} \n```\n. @webron the url says 404...\n. @webron  I tried localhost:8080/ClassWaitlist/v1/api-docs/classes\nlocalhost:8080/ClassWaitlist/api-docs/classes\nlocalhost:8080/ClassWaitlist/api-docs/classes\nNone of these work. \nBut when I hit localhost:8080/ClassWaitlist/v1/api-docs , I get swagger and API version \n. @webron  Thanks for the help . \nWith the above config, I am not even able to deploy it on Jboss. \nCaused by: org.jboss.weld.exceptions.DeploymentException: WELD-001408 Unsatisfied dependencies for type [Set] with qualifiers [@Default] at injection point [[parameter 1] of [constructor] @Inject com.google.common.util.concurrent.ServiceManager(Set)]\"}}\nAnd I think it is because of CDI\n. @webron  I know I got you confused there, Actually I was trying different configs for resteasy swagger config. The one specified above in my question doesn't even let me deploy it on Jboss. \nAs you will notice that I have a constructor of classes with Inject annotation on it and that is the same class acting as resource for me. and that's why I am facing the above mentioned deployment error. \n. EAP 6.2 has CDI 1.0\nThat's the problem.\nOn Tue, Jul 7, 2015 at 10:02 AM, XSR71 notifications@github.com wrote:\n\nIt is my understanding that swagger-core 1.5 requires CDI 2.0. EAP 6.2 has\nCDI 1.1.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1170#issuecomment-119269098\n.\n\n\nHi\nRegards Hitesh Gupta\n. I read a number of posts.\nAnd the error mentioned in the above comments suggest that the reason is\nCDI 1.0 version. Swagger-core doesn't require CDI but we are using CDI in\ngeneral for the other application components.\nOn Tue, Jul 7, 2015 at 10:54 AM, Ron notifications@github.com wrote:\n\nWhere do you see that swagger-core requires any version of CDI?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1170#issuecomment-119283180\n.\n\n\nHi\nRegards Hitesh Gupta\n. How are you configuring it.\nAre you using application class or web.xml config?\nOn Tue, Jul 7, 2015 at 4:07 PM, Diego Armando Gusava \nnotifications@github.com wrote:\n\nWell, I got it working ... just remove guava from dependencies\ncom.wordnik\nswagger-jaxrs_2.10\n1.3.12\ncom.google.guava\nguava\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1170#issuecomment-119370370\n.\n\n\nHi\nRegards Hitesh Gupta\n. How are you configuring it.\nAre you using application class or web.xml config?\nOn Tue, Jul 7, 2015 at 4:07 PM, Diego Armando Gusava \nnotifications@github.com wrote:\n\nWell, I got it working ... just remove guava from dependencies\ncom.wordnik\nswagger-jaxrs_2.10\n1.3.12\ncom.google.guava\nguava\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1170#issuecomment-119370370\n.\n\n\nHi\nRegards Hitesh Gupta\n. ",
    "diegogusava": "I have the same problem ... I got the exception:\n[2015-07-02 09:32:21,953] Artifact rest:war: java.lang.Exception: {\"JBAS014671: Falha de servi\u00e7os\" => {\"jboss.deployment.unit.\\\"rest.war\\\".WeldStartService\" => \"org.jboss.msc.service.StartException in service jboss.deployment.unit.\\\"qualirede-rest.war\\\".WeldStartService: Failed to start service\n    Caused by: org.jboss.weld.exceptions.DeploymentException: WELD-001408 Unsatisfied dependencies for type [Set] with qualifiers [@Default] at injection point [[parameter 1] of [constructor] @Inject com.google.common.util.concurrent.ServiceManager(Set)]\"}}\n. Well, I got it working ... just remove guava from dependencies\nxml\n        <dependency>\n            <groupId>com.wordnik</groupId>\n            <artifactId>swagger-jaxrs_2.10</artifactId>\n            <version>1.3.12</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>com.google.guava</groupId>\n                    <artifactId>guava</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n. I am using class config.\n``` java\n@ApplicationPath(\"/rest\")\npublic class AppConfiguration extends Application {\n@Override\npublic Set<Class<?>> getClasses() {\n    Set<Class<?>> resources = new java.util.HashSet<>();\n    resources.add(com.wordnik.swagger.jaxrs.listing.ApiListingResource.class);\n    resources.add(com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider.class);\n    resources.add(com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON.class);\n    resources.add(com.wordnik.swagger.jaxrs.listing.ResourceListingProvider.class);\n    addRestResourceClasses(resources);\n    return resources;\n}\n\n/**\n * Do not modify addRestResourceClasses() method.\n * It is automatically populated with\n * all resources defined in the project.\n * If required, comment out calling this method in getClasses().\n */\nprivate void addRestResourceClasses(Set<Class<?>> resources) {\n    resources.add(PrestadorEndpointImpl.class);\n}\n\n}\n```\nand\n``` java\n@WebServlet(name = \"SwaggerJaxrsConfig\", loadOnStartup = 1)\npublic class SwaggerJaxrsConfig extends HttpServlet {\n@Override\npublic void init(ServletConfig servletConfig) {\n    try {\n        super.init(servletConfig);\n        SwaggerConfig swaggerConfig = new SwaggerConfig();\n        ConfigFactory.setConfig(swaggerConfig);\n        swaggerConfig.setBasePath(\"http://localhost:8080/qualirede/rest\");\n        swaggerConfig.setApiVersion(\"1.0.0\");\n        ScannerFactory.setScanner(new DefaultJaxrsScanner());\n        ClassReaders.setReader(new DefaultJaxrsApiReader());\n    } catch (ServletException e) {\n        System.out.println(e.getMessage());\n    }\n}\n\n}\n```\n. ",
    "mpodrazik": "same problem. anyone figure this out?\n. ",
    "XSR71": "It is my understanding that swagger-core 1.5 requires CDI 2.0. EAP 6.2 has CDI 1.1.\n. It is my understanding that swagger-core 1.5 requires CDI 2.0. EAP 6.2 has CDI 1.1.\n. ",
    "Rorkal": "Hi ! \nI got the error WELD-001408 trying to deploy on a glassfish3.1.2 server:\n```\n[#|2015-11-06T14:32:13.348+0100|SEVERE|oracle-glassfish3.1.2|javax.enterprise.system.tools.admin.org.glassfish.deployment.admin|_ThreadID=67;_ThreadName=admin-thread-pool-4848(3);|Exception while loading the app : WELD-001408 Unsatisfied dependencies for type [Set] with qualifiers [@Default] at injection point [[parameter 1] of [constructor] @Inject com.google.common.util.concurrent.ServiceManager(Set)]\norg.jboss.weld.exceptions.DeploymentException: WELD-001408 Unsatisfied dependencies for type [Set] with qualifiers [@Default] at injection point [[parameter 1] of [constructor] @Inject com.google.common.util.concurrent.ServiceManager(Set)]\n        at org.jboss.weld.bootstrap.Validator.validateInjectionPoint(Validator.java:311)\n        at org.jboss.weld.bootstrap.Validator.validateInjectionPoint(Validator.java:280)\n        at org.jboss.weld.bootstrap.Validator.validateBean(Validator.java:143)\n        at org.jboss.weld.bootstrap.Validator.validateRIBean(Validator.java:163)\n        at org.jboss.weld.bootstrap.Validator.validateBeans(Validator.java:382)\n        at org.jboss.weld.bootstrap.Validator.validateDeployment(Validator.java:367)\n        at org.jboss.weld.bootstrap.WeldBootstrap.validateBeans(WeldBootstrap.java:379)\n        at org.glassfish.weld.WeldDeployer.event(WeldDeployer.java:199)\n        at org.glassfish.kernel.event.EventsImpl.send(EventsImpl.java:128)\n        at org.glassfish.internal.data.ApplicationInfo.start(ApplicationInfo.java:313)\n        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:461)\n        at com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:240)\n        at org.glassfish.deployment.admin.DeployCommand.execute(DeployCommand.java:389)\n        at com.sun.enterprise.v3.admin.CommandRunnerImpl$1.execute(CommandRunnerImpl.java:348)\n        at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:363)\n        at com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:1085)\n        at com.sun.enterprise.v3.admin.CommandRunnerImpl.access$1200(CommandRunnerImpl.java:95)\n        at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1291)\n        at com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1259)\n        at com.sun.enterprise.v3.admin.AdminAdapter.doCommand(AdminAdapter.java:461)\n        at com.sun.enterprise.v3.admin.AdminAdapter.service(AdminAdapter.java:212)\n        at com.sun.grizzly.tcp.http11.GrizzlyAdapter.service(GrizzlyAdapter.java:179)\n        at com.sun.enterprise.v3.server.HK2Dispatcher.dispath(HK2Dispatcher.java:117)\n        at com.sun.enterprise.v3.services.impl.ContainerMapper$Hk2DispatcherCallable.call(ContainerMapper.java:348)\n        at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:189)\n        at com.sun.grizzly.http.ProcessorTask.invokeAdapter(ProcessorTask.java:850)\n        at com.sun.grizzly.http.ProcessorTask.doProcess(ProcessorTask.java:747)\n        at com.sun.grizzly.http.ProcessorTask.process(ProcessorTask.java:1036)\n        at com.sun.grizzly.http.DefaultProtocolFilter.execute(DefaultProtocolFilter.java:231)\n        at com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(DefaultProtocolChain.java:137)\n        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:104)\n        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:90)\n        at com.sun.grizzly.http.HttpProtocolChain.execute(HttpProtocolChain.java:79)\n        at com.sun.grizzly.ProtocolChainContextTask.doCall(ProtocolChainContextTask.java:54)\n        at com.sun.grizzly.SelectionKeyContextTask.call(SelectionKeyContextTask.java:59)\n        at com.sun.grizzly.ContextTask.run(ContextTask.java:71)\n        at com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:532)\n        at com.sun.grizzly.util.AbstractThreadPool$Worker.run(AbstractThreadPool.java:513)\n        at java.lang.Thread.run(Thread.java:745)\n|#]\n```\nI could resolve the problem switching from version 1.5.0 to version 1.5.4 of swagger-jersey-jaxrs.\n. With the update, the server no longer crash when starting.\nI still have issues with exposing my swagger.json file but I don't think it's related, a problem with my configuration of web.xml maybe. I'll let you know if  I got problems with version 1.5.4. :)\nEdit: it's working well with 1.5.4 !\n. ",
    "kaushalsmile08": "I am using servlet web.xml config. I tried using resteasy and jersery.\nWeb.xml\n \nresteasy.scan\ntrue\n\n\nDefaultJaxrsConfig\nio.swagger.jaxrs.config.DefaultJaxrsConfig\n\napi.version\n1.0.0\n\n\nswagger.api.basepath\nhttp://localhost:8080/ClassWaitlist\n\n2\n\nPom.xml\n\nio.swagger\nswagger-jaxrs\n1.5.8\n\nio.swagger\nswagger-jersey2-jaxrs\n1.5.4\n\nAnd added @API annotation on some java class method. \nPlease help to solve it\n. \nresteasy.resources\nio.swagger.jaxrs.listing.ApiListingResource,\n             io.swagger.jaxrs.listing.SwaggerSerializers,\n            com.walmart.services.api,\n            com.walmart.wrapper.services.promise\n        \n\n<context-param>\n    <param-name>resteasy.providers</param-name>\n    <param-value>\n        io.swagger.jaxrs.json.JacksonJsonProvider,\n        io.swagger.jaxrs.listing.ApiDeclarationProvider,\n        io.swagger.jaxrs.listing.ResourceListingProvider\n    </param-value>\n</context-param>\n<context-param>\n    <param-name>resteasy.scan</param-name>\n    <param-value>true</param-value>\n</context-param>\n\nAlso it is showing no class def found for io.swagger.jaxrs.config.DefaultJaxrsConfig. ",
    "suiwenfeng": "for people who still confused after finish reading the thread.\nto hidden params in controller function\njava\n    @ApiOperation(\"\u8bbe\u5907\u66f4\u65b0\")\n    @PostMapping(\"/update\")\n    @ApiImplicitParams({\n        @ApiImplicitParam(name = \"dType\", dataType = \"DeviceType\", paramType = \"query\", value = \"\u8bbe\u5907\u7c7b\u578b\", required=true),\n        @ApiImplicitParam(name = \"dNo\", dataType = \"string\", paramType = \"query\", value = \"\u8bbe\u5907\u53f7\", required=true),\n        @ApiImplicitParam(name = \"dVer\", dataType = \"string\", paramType = \"query\", value = \"\u7248\u672c\", required=true),\n        @ApiImplicitParam(name = \"simNo\", dataType = \"string\", paramType = \"query\", value = \"sim\u5361\u53f7\", required=true),\n        @ApiImplicitParam(name = \"cardNo\", dataType = \"string\", paramType = \"query\", value = \"\u5b89\u5168\u82af\u7247\u53f7\", required=true),\n        @ApiImplicitParam(name = \"dStatus\", dataType = \"DeviceStatus\", paramType = \"query\", value = \"\u8bbe\u5907\u72b6\u6001\", required=true),\n        @ApiImplicitParam(name = \"dDesc\", dataType = \"string\", paramType = \"query\", value = \"\u8bbe\u5907\u5907\u6ce8\", required=true)\n    })\n    public ApiResponse updateById(Long id,@ApiIgnore @ApiParam(hidden = true) Device device) {\n            Device beforeUpdate = deviceRepository.findOne(id);\n            device.setCreateDate(beforeUpdate.getCreateDate());\n            device.setUpdateDate(System.currentTimeMillis()/1000);\n        Device ret = deviceRepository.saveAndFlush(device);\n        return RestResponseGenerator.genSuccess(ret, \"\u66f4\u65b0\u8bbe\u5907\"+id+\"\u6210\u529f\");\n    }\n@ApiIgnore @ApiParam(hidden = true) will hidden the parameter.\n@ApiImplicitParams to write down your own.\nLong id will be kept as a param.. ",
    "skjegg": "@lugaru1234 -- Thank you for fixing this. I was working on a testcase for it, and got sidetracked.\n. ",
    "blop": "We have the same bug, compiling 1.5.1-SNAPSHOT from branch Develop_2.0 to test ;-)\n. I confirm this is fixed in upcoming 1.5.1-SNAPSHOT version.\nThanks\n. Reopened, same issue : https://github.com/swagger-api/swagger-core/issues/1724\n. Can we have a unit test for this too ? Thank you\n. Still not fixed in 1.5.10 :'(\n. ",
    "xinmeng1": "The bug is fixed on swagger-maven-plugin >3.1.2, I have test it is OK on the swagger-maven-plugin =3.1.2 & swagger-core 1.5.9.\n. ",
    "ctytgat": "At least this one makes sense:\n3. @ApiOperation.code                           @ApiOperation.code\ninstead of this\n3. @ApiOperation.code (IGNORED)             default\nI currently have something like\n@PUT\n@Path(\"path\")\n@ApiOperation(value = \"stuff\", code = HttpStatus.SC_ACCEPTED)\npublic Response doStuff(Payload p) {...}\nBut this just adds 'default' as response code. What's the logic behind this?. At least this one makes sense:\n3. @ApiOperation.code                           @ApiOperation.code\ninstead of this\n3. @ApiOperation.code (IGNORED)             default\nI currently have something like\n@PUT\n@Path(\"path\")\n@ApiOperation(value = \"stuff\", code = HttpStatus.SC_ACCEPTED)\npublic Response doStuff(Payload p) {...}\nBut this just adds 'default' as response code. What's the logic behind this?. ",
    "nikhilw": "Would like to suggest that the same functionality should also be available in @ApiImplicitParam. \n. ",
    "vsvetoslavov": "\"Added to the annotations in 1.5.11.\"\nI am using swagger-core 2.0.0 and I see nothing like this there. Where has this been added?. @webron Thanks. ",
    "nistvan86": "Had the same issue. Confirmed that it solves the issue with Groovy. Please include this fix in the next release. Maybe a switch in the BeanConfig would be handy to disable the filtering if someone wants to override it.\n. ",
    "fmahnke": "+1. We use Groovy in our project and can't upgrade to the latest swagger.\n. ",
    "benken-parasoft": "This is still an issue in 1.5.4.  The JUnit I attached demonstrates no change in behavior between 1.5.0 and 1.5.4.  Can this issue please be re-opened?\nI notice that ArrayProperty now has fields for minItems and maxItems which is great!  However, the values of those fields in ArrayProperty are always null after parsing my Swagger document.  For example, see \"SampleArrayProperty\" from my JUnit.  Instead of parsing, I do notice that if I programmatically create an ArrayProperty and set minItems and maxItems then I can marshal the ArrayProperty to JSON and that's fine.  So, things are only broken in one direction.  Marshing ArrayProperty to JSON is fine but parsing from JSON to ArrayProperty looses the values.\nAdditionally, I notice that ArrayModel still has no fields for minItems and maxItems.  This doesn't help me parse \"SampleArrayModel\" from my Swagger document, as shown in my JUnit.\nI need to be able to parse Swagger documents for my particular use case.  minItems and maxItems are still lost in the example I originally reported.\n. Verified on my end.  Thank you.. On a side note, other consumers don't seem to have a problem.  For example, the online Swagger-editor (http://editor.swagger.io/) is able to display the models.  The swagger-core/models java API is just unable to consume the nested object definition.\n. Also see the example from my JUnit in comment.  \"Model1\" has a nested object definition and can't be parsed completely.  The nested object definition is lost.  In contrast, \"Model2\" uses a \"$ref\" for the nested object definition instead.\nUnfortunately, I can't necessarily tell my users they have to change their document just because my code can't parse it.  Perhaps a workaround could be to pre-process the document somehow to \"normalize\" it before unmarshalling it with swagger-models.  Not sure what would be involved with doing that.  Not sure what would be easier, writing a workaround like that or addressing the problem directly.  :)\n. Can this issue please be re-opened?  I see no changes in the mentioned behavior in the current version (1.5.12).  Please let me know if something in my original description is unclear.  If this helps, I also verified that the code snippet in the original problem description still demonstrates the issue.\nGenericRef.computeRefFormat() still seems to have the same flaw.  Just because a ref starts with \"http\" does not mean it is a URL.  I think it should be checking if the ref starts with \"http:\" (with a colon) or \"https:\" (with a colon).\n. Thank you for your quick reply.  I can submit a PR, just don't know how soon I'll be able to do this.  Perhaps, GenericRefTest could have a couple extra assertions for refs starting with \"http\" but not \"http:\" or \"https:\". Just created https://github.com/swagger-api/swagger-core/pull/2108. Let maven's dependency management mechanism (not swagger-core) control the version of Jackson you want your projects to depend on.  Use this to manage \"jar hell\": https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Management\nEven if your project depends on swagger-core, you can specify a newer version of Jackson in dependency management, provided that its API is compatible.  Jackson doesn't break their API with minor version updates.  In this case, updating to a newer Jackson 2.x should be safe (at your own risk, do your own testing).\nHowever, I am not saying that updating swagger-core's Jackson dependency is necessarily a bad thing.  Jackson 2.4.5 is a bit behind.\n. ",
    "cipresso": "Hi. I'm also loading JSON schemas into the swagger model and need the minItems and maxItems facets to be supported as well.  Thanks! --Ted\n. Hi. The tool that generates format=decimal is doing it to retain some information about the mainframe data structure member the property represents.  Are there any help topics on how to customize the stock swagger-core PropertyDeserializer? For example, DecimalProperty.isType(...) will return false if the format is set to anything but null.  I would like DecimalProperty.isType(...) to return true if format==null  or format==\"decimal\".  Is that possible? Thanks for your help!\n. Hi @fehguy. I have the same issue described in #1201 on both 1.5.8 and 1.5.9.  I need the fix committed by @conorclifford as I'm deserializing JSON schema that has minItems and maxItems and embedding the resultant Model.\n. Hi.  I tried out the fix and it works.  There's an unnecessary import statement \"import com.google.common.collect.Maps;\" you might want to remove.\n. A thought on why this is happening.  \nI think the issue may be with the swagger model itself.  It carries the minimum and maximum of any numeric type in Double objects.  Double objects will get serialized by Jackson with a decimal point, or worse as scientific E notation.  I did try mapper.configure(SerializationFeature.WRITE_BIGDECIMAL_AS_PLAIN, true) to avoid E notation, but it doesn't apply to Doubles.\n\n. Hi.  I changed Double to BigDecimal for the minimum and maximum facets of numerics in the relevant classes (AbstractNumericProperty, DecimalProperty.setExample, PropertyDeserializer) and configured the Json.mapper() with mapper.enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS).  With these changes the original decimal quantity that describes my minimum and maximum survive from deserialization of the JSON schema all the way to serialization of the Swagger model.  I would like to commit the changes for review if that's OK.\n. ",
    "conorclifford": "just noting, this is still present as a limitation in 1.5.8 (we are using it through the swagger-parser project, and need access to various constraints, including at array level.)\nThanks.\n. ",
    "bchazalet": "same issue here. But I wonder then, how do people parse their swagger in scala/java then? Is it that most people don't have the need (or do it in another language)? Or do they rely on the json directly?\nDoesn't that make the whole thing useless if you can't properly read into an ObjectProperty?\n. @fehguy yes naming is probably the most annoying part, but I would argue that this is not something we should care about in core. Core should be as close to the specs as possible and if codegen wants to ignore some parts, that's fair enough but that should happen in the codegen project.\nI am saying all this because in my use case I want to parse the swagger definitions to build internal tools on top of it (think of API gateway such as tyk or Kong) so I need to be able to parse any valid definitions not just the ones that are 'generable'.\n(On a side note I'm sure you could come up with a name derivated from the parent name and the json key pretty easily).\n. @fehguy that's great. I have submitted PR #1314 for it. Let me know if you think it can be improved, I'll be happy to take it even further.\n. to me this is related to #1202 and both together means getSchema can return an ObjectProperty which is useless to continue descending the tree as the children are lost.\nHow does one parse the definition into models at all?\n. @hgwood I think you're then supposed to look it up from swagger.getDefinitions, i.e. swagger.getDefinitions(ref.getSimpleRef) which will get you a ModelImpl on which you can call ModelImpl#getProperties.\nWhat I still don't understand is whether it works at all with 'object'?\n. @hgwood I am not sure changing getSchema to Model is enough because Model is defined in terms of Property see Model#Map<String, Property> getProperties(); so at some point you will reach a place where you will find a ObjectProperty and run into #1202.\nBut my understanding of swagger-core and parser is very limited so I might be wrong.\n. I am not sure it is necessary to check for the reserved property names here, some input would be welcome\n. ",
    "gitblit": "I agree although my needs are obviously more important. :stuck_out_tongue_winking_eye: \nI can live with 2.4 but Jackson already has 2.6 RCs so at some point this will come up again. Thanks for considering the request.\n. ",
    "juergenzimmermann": "@webron I don't agree, because there is also RESTEasy, not only Jersey.\nWhen you are using RESTEasy standalone or JBoss or WildFly, then you cannot use the Jersey module. When using the JAX-RS module then you have to exclude the JAX-RS 1.1 dependency. That's really cumbersome.\n. @webron OK, got it. I successfully changed the WildFly module: the maven exclusion stuff is gone and everything works fine. Thank you!\n. ",
    "jacob-meacham": "Yeah, putting the swagger-core annotations on the interface works as expected. The reason that this isn't as desirable for me is that I publish an API jar which is (by design) very lightweight -- its only dependencies are the jax-rs annotations, and jackson annotations. I'd prefer not pulling swagger into this jar as well. If I'm able to separate the swagger and jax-rs annotations, then my server impl can take the swagger dependency and my consumers don't have to worry about it\n. Yes, will do!\n. Done!\n. Ack, let me fix my import order\n. ",
    "tongda": "Hi, thanks for your reply.\nI found that we are using 1.3.12. And I totally followed this post to set up swagger in our project.\nI hope to update to the latest version. But I did not find any documents talking about it. Is there any configuration difference between the latest version (I found 1.5.0) and 1.3.12?\n. Hi, I have just found this post and configured my project accordingly. It looks good so far.\nBTW, I have encountered another issue. I have added an annotation marking the API response including a header like this:\njava\n@ApiResponses(value = {\n        @ApiResponse(code = 201, message = \"Successfully created.\",\n                     responseHeaders = @ResponseHeader(name = \"location\",\n                                                       description = \"The created template url.\",\n                                                       response = String.class))\n    })\nAnd I found that the http://**/swagger.json contains a node like this:\njson\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created.\",\n            \"headers\": {\n              \"location\": {\n                \"type\": \"string\",\n                \"description\": \"The created template url.\"\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          }\n        }\nBut in swagger ui, this row of response only have the http code and description, without presenting the headers information. Do you have any idea of this?\n. Got it! Thanks!\n. ",
    "MadMatt04": "Sounds great to me.\n. Actually now that I've put further thought into it, I again think my original suggestion is better. The reason for this is that if @SwaggerDefinition is parsed first, the order of the tags on the Swagger object will be the same as the order specified in @SwaggerDefinition, which makes it a simple way to enforce a particular tag order.\n. Yeah, it works. I tried it with Swagger built from the swagger-definition-scan-order-issue_1243 branch, and the descriptions are always there and the tags element in swagger.json has elements in the same order as the annotations in @SwaggerDefinition.\nThe only thing I noticed is that swagger-ui reorders the tags alphabetically anyway, regardless of their order in swagger.json. Does anyone know anything about that? Everything on the swagger-core side seems to work fine, though.\nIs this fix making it into 1.5.1?\n. ",
    "elakito": "Hi Ron,\nAs a temporal workaround that does not break nor change anything, I changed my local copy of SwaggerJersey2Jaxrs to use reflection to get the jersey's FormDataParam's value. With this change, I could use this swagger-jersey2-jaxrs in my cxf-3.x use case having @BeanParam without having any jersey2 dependency. Would you consider this as an option for 1.5.4 until the package is refactored in the future?\nregards, aki\n. Hi @webron @fehguy \nI got another idea about this.\nHow about adding the jaxrs 2.0 BeanParam support into swagger-jaxrs using reflection. It seems we need reflection only for the annotation type check, the rest of the code has no jaxrs-2.0 reference, so it can be directly used there.\nThis means, we can keep the current build dependency for swagger-jaxrs, that is to use jsr311-api.\nBut in runtime, if we find jsr399 on the classpath, we can support BeanParam.\nHere you can see the code in my repo\nhttps://github.com/swagger-api/swagger-core/compare/master...elakito:work-1244b\nBasically, I moved part of the code from SwaggerJersey2Jaxrs into DefaultParameterExtension.\n(I haven't deleted the corresponding code from SwaggerJersey2Jaxrs yet, so technically speaking not \"moved\" but \"copied\" at the moment)\nAs the reflection usage is limited to a few lines, we can get rid of the lines cleanly once we move to jsr399 sometime at a major version update.\nInitially, I created a version of swagger-jersey2-jaxrs using reflection to avoid referencing jersey2 class so that it can be used with or without jersey2. But this approach appears somehow unnatural that one needs to use a jar named swagger-jersey2-jaxrs.jar when actually not using jersey. So, I went for the other way by getting jaxrs 2.0 support in swagger-jaxrs so that it can be used with jsr311 or jsr399.\nHow do you think?\nregards, aki\n. Just wanted to create the issue number to prepare for a commit ;-)\nI wanted to think about one thing before submitting a PR. That is about the lower range for the guava dep.\nBecause of the current situation between SMX's org.reflections-0.9.9 bundle and guava-18.0 bundle not playing each other on OSGi (the problem that I mentioned in the thread), I am thinking of building swagger-core and swagger-jaxrs with guava 18.0 but explicitly setting the allowed lower range of guava down to 15.0 so that when using the out-of-the box org.reflections-0.9.9 bundle, everyone can wire to guava 15.0. This can be switched back to 18.0 once a newer version of org.reflection bundle becomes available.\nAlternatively, if we keep guava's lower range at 18.0, we will need a version of org.reflections-0.9.9 that can be wired to guava-18.0, This can be either done dynamically by using karaf's special wrap installer to set/overwrite its imports manually or by physically creating a new version of org.reflections-0.9.9 bundle. I'll ping the SMX guy tomorrow, as I haven't got any reply to my message posted on their ML.\nHow do you think? We can decide it by tomorrow.\nthanks.\nregards, aki\n. Hi Ron,\nThe SMX guys have just patched their org.reflections bundles (SM-2645). So, the next release versions 0.9.9_2 and 0.9.10_2 will work with guava-18.0. So, we can keep the lower range of swagger-core/jaxrs to the current default 18.0.\nregards, aki\n. Hi Ron,\ncould you merge the above PR?\nSo that we can use the OSGI-enabled version from the snapshot repo?\nthanks.\nregards, aki\n. Hi Ron,\ngreat. It's working nicely. ;-)\nI added a working demo sample in cxf's samples distro\nhttps://github.com/apache/cxf/tree/master/distribution/src/main/release/samples/jax_rs/description_swagger2_osgi\nBefore closing this ticket, I have a questions (my PR mentioned this briefly).\nCurrently, I included the swagger's OSGi deployment descriptors in a temporary features.xml file in the demo project itself to make the installation of swagger bundles simple. This file looks like this\nhttps://github.com/apache/cxf/blob/master/distribution/src/main/release/samples/jax_rs/description_swagger2_osgi/src/test/features/features.xml\nThe first two feature entries demo-swagger-core and demo-swagger-jaxrs install the swagger bundles and the necessary bundles. I think it would be practical to have these descriptors defined in a sub project of the swagger-core project so that everyone can use them from there and does not need to define them on their own as done in the above features.xml.\nHow do you think? If that sound okay, I can open a new ticket to work on it.\nI can also add a non-cxf sample in swagger-samples.\nthanks.\nregards, aki\np.s. I could close this ticket but opted to keep it open until you have a chance to read my message above.\n. Hi Ron,\nYes. It is an XML descriptor used by Karaf.\nI will discuss this with the ServiceMix/Karaf people. We have a general need for other features as well. So, it would be an option to define them somewhere in the ServiceMix/Karaf domains instead (some common features are defined there).\nI'm closing this ticket.\nThanks.\nregards, aki\n. @webron \nokay. i'll look into it.\n. Hi Ron,\nthat is a good question. I noticed this scanner issue when using some test resources included in cxf's system tests. \nIn the case of its wadl generation,  the wadl initially has an resource entry for this subresource unexpanded. And every time when I make a call a step deeper, this entry gets expanded.\nhttp://pastebin.com/5sCbj24y\nI don't think this expanding of the path on demand in this way is nice. \nSo I don't know how swagger should show recursive sub-resources.\nI'll revert the initial PR for now because I don't think it is right to bookkeep sub-resources per reader anyway.\nregards, aki\n. Yes. I agree with you.\nWe should separate the two things and get the infinite loop thing fixed for now.\nSo for fixing the infinite loop, we need to cache the resources seen during the recursive traversal and just stop going deeper. I think we should make a private recursive read method with a resource map. With this approach, we won't stop and come back too early, which could happen when we cache the resources at the reader instance.\nI'll think about it. Let me know how you think.\nthanks.\nregards, aki\np.s. for the displaying part, if swagger can expand the node interactively over its UI, that would be cool. ;-)\n. Hi Ron,\nI attached the new PR for the infinite loop issue, as mentioned earlier.\nregards, aki\n. Thanks Ron and Tony,\nI have verified the merged master.\n. cancel this PR\n. The change that I made for 1.5.4 intended to prevent an infinite recursion by checking for the visited resources while scanning down the path to determine when to stop. So, you can have sub resources recursed along the different paths but you can't visit the same resource along the path more than once.\n@webron @fehguy \nI think, to support what @osx2000 wishes (i.e., to be able to expand from path 0221 down), we will need a new notation for a resource-link in swagger-api, so that the swagger document is bounded but the UI can expand the path down on demand to represent an infinite recursion.\nregards, aki\n. just a moment and correction.\n@osx2000 you mean this X is a leaf resource? We could exclude the leaf resources from this recursive check. In that way, without adding a new notation, we can support such cases.\n. i just looked into it and i think a single liner should probably fix this issue.\ni'll try it out with a test case and see if this is indeed the case...\n. @webron i'll look at it today.\n. @webron it looks okay. \nOne remark that I can make is that the existing two jersey components swagger-jersey-jaxrs and swagger-jersey2-jaxrs are not inherently osgi friendly as they contain the same public packages io.swagger.jersey classes. But assuming only this jersey2 one is becoming an osgi bundle and the other one is not, there will be no conflict.\n. ",
    "colinmccabe": "This is submitted against master, just saw that it should be submitted against develop_2.0\n. I noticed this when trying to hide parameters with a SpecFilter that looked at the access field, as described here: http://stackoverflow.com/questions/22812365/how-to-hide-a-parameter-in-swagger. The parameter I was trying to hide happened to be BodyParam.\n. I'm trying to remove it completely from the generated swagger.json, with a custom SpecFilter similar to the one in the StackOverflow link above.\nMy API takes a session param, which Swagger is interpreting as a BodyParam. I'm aiming to hide it declare the session param an ApiImplicitParam instead.\n. ",
    "wasifshikder": "If I have a class that implements an interface. What is the syntax I have to establish a relationship between the interface and the class that implements the interface? \n. Does swagger automatically recognize that a particular class implements an interface? \n. What versions of swagger support annotations on interfaces? \n. ",
    "tcuje": "@webron Where can I get this snapshot? I checked http://mvnrepository.com/artifact/io.swagger/swagger-jaxrs but there is only release 1.5.0\n. Didn't work with 1.51 either. Output still contains the definitions for ParentClass and any parent class of ParentClass event though they're not annotated in any way.\n. Thank you all. I just tested it with 1.5.4 and it works perfectly! Thanks again!\n. ",
    "marcelalburg": "Maybe it is. but i get with the same configuration an NPE - i didn't debug it yet\nBeanConfig beanConfig = new BeanConfig();\n        beanConfig.setTitle( \"API\" );\n        beanConfig.setContact( \"\" );\n        beanConfig.setVersion( \"0.0.1\" );\n        beanConfig.setDescription( \"API\" );\n        beanConfig.setBasePath( \"/api\" );\n        beanConfig.setResourcePackage( \"<correct base package>\" );\n        /*\n         * SetScan as last line\n         */\n        beanConfig.setScan( true );\njavax.servlet.ServletException: java.lang.NullPointerException\n    at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:397) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:381) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:344) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:221) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter.doFilter(WebSocketUpgradeFilter.java:224) ~[websocket-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:295) ~[spring-boot-actuator-1.2.5.RELEASE.jar:1.2.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at xxx.configuration.SwaggerConfig$SimpleCORSFilter.doFilter(SwaggerConfig.java:62) ~[classes/:?]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:102) ~[spring-boot-actuator-1.2.5.RELEASE.jar:1.2.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:98) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:68) ~[spring-boot-actuator-1.2.5.RELEASE.jar:1.2.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) [jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577) [jetty-security-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) [jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.Server.handle(Server.java:499) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540) [jetty-io-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635) [jetty-util-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555) [jetty-util-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at java.lang.Thread.run(Thread.java:745) [?:1.8.0_45]\nCaused by: java.lang.NullPointerException\n    at com.wordnik.swagger.jaxrs.config.BeanConfig.configure(BeanConfig.java:198) ~[swagger-jaxrs-1.5.3-M1.jar:1.5.3-M1]\n    at com.wordnik.swagger.jaxrs.listing.ApiListingResource.scan(ApiListingResource.java:52) ~[swagger-jaxrs-1.5.3-M1.jar:1.5.3-M1]\n    at com.wordnik.swagger.jaxrs.listing.ApiListingResource.getListingJson(ApiListingResource.java:79) ~[swagger-jaxrs-1.5.3-M1.jar:1.5.3-M1]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_45]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_45]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_45]\n    at java.lang.reflect.Method.invoke(Method.java:497) ~[?:1.8.0_45]\n    at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:151) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:172) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:152) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:104) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:384) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:342) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:101) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:271) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors$1.call(Errors.java:271) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors$1.call(Errors.java:267) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:315) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:297) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:267) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:297) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:254) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1030) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:377) ~[jersey-container-servlet-core-2.14.jar:?]\n    ... 44 more\n[catalog] [WARN ] 2015-07-10 16:39:35,264 [qtp1040882461-23] [o.e.j.s.HttpChannel] [] [] - /api/swagger.json\njavax.servlet.ServletException: java.lang.NullPointerException\n    at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:397) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:381) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:344) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:221) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter.doFilter(WebSocketUpgradeFilter.java:224) ~[websocket-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:295) ~[spring-boot-actuator-1.2.5.RELEASE.jar:1.2.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at xxx.configuration.SwaggerConfig$SimpleCORSFilter.doFilter(SwaggerConfig.java:62) ~[classes/:?]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:102) ~[spring-boot-actuator-1.2.5.RELEASE.jar:1.2.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:98) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:68) ~[spring-boot-actuator-1.2.5.RELEASE.jar:1.2.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577) ~[jetty-security-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.Server.handle(Server.java:499) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540) [jetty-io-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635) [jetty-util-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555) [jetty-util-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at java.lang.Thread.run(Thread.java:745) [?:1.8.0_45]\nCaused by: java.lang.NullPointerException\n    at com.wordnik.swagger.jaxrs.config.BeanConfig.configure(BeanConfig.java:198) ~[swagger-jaxrs-1.5.3-M1.jar:1.5.3-M1]\n    at com.wordnik.swagger.jaxrs.listing.ApiListingResource.scan(ApiListingResource.java:52) ~[swagger-jaxrs-1.5.3-M1.jar:1.5.3-M1]\n    at com.wordnik.swagger.jaxrs.listing.ApiListingResource.getListingJson(ApiListingResource.java:79) ~[swagger-jaxrs-1.5.3-M1.jar:1.5.3-M1]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_45]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_45]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_45]\n    at java.lang.reflect.Method.invoke(Method.java:497) ~[?:1.8.0_45]\n    at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:151) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:172) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:152) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:104) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:384) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:342) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:101) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:271) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors$1.call(Errors.java:271) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors$1.call(Errors.java:267) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:315) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:297) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:267) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:297) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:254) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1030) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:377) ~[jersey-container-servlet-core-2.14.jar:?]\n    ... 44 more\n. Maybe it is. but i get with the same configuration an NPE - i didn't debug it yet\nBeanConfig beanConfig = new BeanConfig();\n        beanConfig.setTitle( \"API\" );\n        beanConfig.setContact( \"\" );\n        beanConfig.setVersion( \"0.0.1\" );\n        beanConfig.setDescription( \"API\" );\n        beanConfig.setBasePath( \"/api\" );\n        beanConfig.setResourcePackage( \"<correct base package>\" );\n        /*\n         * SetScan as last line\n         */\n        beanConfig.setScan( true );\njavax.servlet.ServletException: java.lang.NullPointerException\n    at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:397) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:381) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:344) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:221) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter.doFilter(WebSocketUpgradeFilter.java:224) ~[websocket-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:295) ~[spring-boot-actuator-1.2.5.RELEASE.jar:1.2.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at xxx.configuration.SwaggerConfig$SimpleCORSFilter.doFilter(SwaggerConfig.java:62) ~[classes/:?]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:102) ~[spring-boot-actuator-1.2.5.RELEASE.jar:1.2.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:98) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:68) ~[spring-boot-actuator-1.2.5.RELEASE.jar:1.2.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) [jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577) [jetty-security-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) [jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.Server.handle(Server.java:499) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540) [jetty-io-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635) [jetty-util-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555) [jetty-util-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at java.lang.Thread.run(Thread.java:745) [?:1.8.0_45]\nCaused by: java.lang.NullPointerException\n    at com.wordnik.swagger.jaxrs.config.BeanConfig.configure(BeanConfig.java:198) ~[swagger-jaxrs-1.5.3-M1.jar:1.5.3-M1]\n    at com.wordnik.swagger.jaxrs.listing.ApiListingResource.scan(ApiListingResource.java:52) ~[swagger-jaxrs-1.5.3-M1.jar:1.5.3-M1]\n    at com.wordnik.swagger.jaxrs.listing.ApiListingResource.getListingJson(ApiListingResource.java:79) ~[swagger-jaxrs-1.5.3-M1.jar:1.5.3-M1]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_45]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_45]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_45]\n    at java.lang.reflect.Method.invoke(Method.java:497) ~[?:1.8.0_45]\n    at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:151) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:172) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:152) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:104) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:384) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:342) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:101) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:271) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors$1.call(Errors.java:271) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors$1.call(Errors.java:267) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:315) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:297) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:267) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:297) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:254) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1030) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:377) ~[jersey-container-servlet-core-2.14.jar:?]\n    ... 44 more\n[catalog] [WARN ] 2015-07-10 16:39:35,264 [qtp1040882461-23] [o.e.j.s.HttpChannel] [] [] - /api/swagger.json\njavax.servlet.ServletException: java.lang.NullPointerException\n    at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:397) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:381) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:344) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:221) ~[jersey-container-servlet-core-2.14.jar:?]\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter.doFilter(WebSocketUpgradeFilter.java:224) ~[websocket-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:295) ~[spring-boot-actuator-1.2.5.RELEASE.jar:1.2.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at xxx.configuration.SwaggerConfig$SimpleCORSFilter.doFilter(SwaggerConfig.java:62) ~[classes/:?]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:102) ~[spring-boot-actuator-1.2.5.RELEASE.jar:1.2.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:98) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:68) ~[spring-boot-actuator-1.2.5.RELEASE.jar:1.2.5.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.1.5.RELEASE.jar:4.1.5.RELEASE]\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577) ~[jetty-security-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) ~[jetty-servlet-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.Server.handle(Server.java:499) ~[jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257) [jetty-server-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540) [jetty-io-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635) [jetty-util-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555) [jetty-util-9.2.11.v20150529.jar:9.2.11.v20150529]\n    at java.lang.Thread.run(Thread.java:745) [?:1.8.0_45]\nCaused by: java.lang.NullPointerException\n    at com.wordnik.swagger.jaxrs.config.BeanConfig.configure(BeanConfig.java:198) ~[swagger-jaxrs-1.5.3-M1.jar:1.5.3-M1]\n    at com.wordnik.swagger.jaxrs.listing.ApiListingResource.scan(ApiListingResource.java:52) ~[swagger-jaxrs-1.5.3-M1.jar:1.5.3-M1]\n    at com.wordnik.swagger.jaxrs.listing.ApiListingResource.getListingJson(ApiListingResource.java:79) ~[swagger-jaxrs-1.5.3-M1.jar:1.5.3-M1]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_45]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_45]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_45]\n    at java.lang.reflect.Method.invoke(Method.java:497) ~[?:1.8.0_45]\n    at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:151) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:172) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:152) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:104) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:384) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:342) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:101) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:271) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors$1.call(Errors.java:271) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors$1.call(Errors.java:267) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:315) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:297) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:267) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:297) ~[jersey-common-2.14.jar:?]\n    at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:254) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1030) ~[jersey-server-2.14.jar:?]\n    at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:377) ~[jersey-container-servlet-core-2.14.jar:?]\n    ... 44 more\n. Sorry, my fault. I didn't realize, that there is a newer version under an other names.\nThanks for your work and thanks for swagger integrations. It helps our developers a lot.\nMarcel\n. Sorry, my fault. I didn't realize, that there is a newer version under an other names.\nThanks for your work and thanks for swagger integrations. It helps our developers a lot.\nMarcel\n. Sorry, but i cannot reproduce it in my project anymore. Maybe it's not the problem of the PathParam. \nMarcel\n. Hello,\ni found something and have more information about that.\nIf i run my project into eclipse, it works, but if i run it in the console with \"java -jar\" not.\ni compare the genereaded swagger.json and see one difference:\nworking version:\n\"Category\":{\n         \"type\":\"object\",\n         \"properties\":{\n            \"id\":{\n               \"type\":\"integer\",\n               \"format\":\"int32\"\n            },\n            \"name\":{\n               \"type\":\"string\"\n            },\n            \"parentId\":{\n               \"type\":\"integer\",\n               \"format\":\"int32\"\n            },\n            \"urlPath\":{\n               \"type\":\"object\",\n               \"additionalProperties\":{\n                  \"type\":\"string\"\n               }\n            },\n            \"sortOrder\":{\n               \"type\":\"integer\",\n               \"format\":\"int32\"\n            },\n            \"categories\":{\n               \"type\":\"array\",\n               \"items\":{\n                  \"$ref\":\"#/definitions/Category\"\n               }\n            }\n         }\n      },\nnot working version:\n\"Category\":{\n         \"type\":\"object\",\n         \"properties\":{\n            \"id\":{\n               \"type\":\"integer\",\n               \"format\":\"int32\"\n            },\n            \"name\":{\n               \"type\":\"string\"\n            },\n            \"parentId\":{\n               \"type\":\"integer\",\n               \"format\":\"int32\"\n            },\n            \"urlPath\":{\n               \"type\":\"object\",\n               \"additionalProperties\":{\n                  \"type\":\"string\"\n               }\n            },\n            \"sortOrder\":{\n               \"type\":\"integer\",\n               \"format\":\"int32\"\n            },\n            \"categories\":{\n               \"type\":\"array\"\n            }\n         }\n      },\nin the swagger ui, i get the same error like before..\nThanks Marcel\n. Hello,\ni found something and have more information about that.\nIf i run my project into eclipse, it works, but if i run it in the console with \"java -jar\" not.\ni compare the genereaded swagger.json and see one difference:\nworking version:\n\"Category\":{\n         \"type\":\"object\",\n         \"properties\":{\n            \"id\":{\n               \"type\":\"integer\",\n               \"format\":\"int32\"\n            },\n            \"name\":{\n               \"type\":\"string\"\n            },\n            \"parentId\":{\n               \"type\":\"integer\",\n               \"format\":\"int32\"\n            },\n            \"urlPath\":{\n               \"type\":\"object\",\n               \"additionalProperties\":{\n                  \"type\":\"string\"\n               }\n            },\n            \"sortOrder\":{\n               \"type\":\"integer\",\n               \"format\":\"int32\"\n            },\n            \"categories\":{\n               \"type\":\"array\",\n               \"items\":{\n                  \"$ref\":\"#/definitions/Category\"\n               }\n            }\n         }\n      },\nnot working version:\n\"Category\":{\n         \"type\":\"object\",\n         \"properties\":{\n            \"id\":{\n               \"type\":\"integer\",\n               \"format\":\"int32\"\n            },\n            \"name\":{\n               \"type\":\"string\"\n            },\n            \"parentId\":{\n               \"type\":\"integer\",\n               \"format\":\"int32\"\n            },\n            \"urlPath\":{\n               \"type\":\"object\",\n               \"additionalProperties\":{\n                  \"type\":\"string\"\n               }\n            },\n            \"sortOrder\":{\n               \"type\":\"integer\",\n               \"format\":\"int32\"\n            },\n            \"categories\":{\n               \"type\":\"array\"\n            }\n         }\n      },\nin the swagger ui, i get the same error like before..\nThanks Marcel\n. Hello,\nyour're right. With Version 1.5.0 it's not working, but with 1.5.2 it works. \nThanks\nMarcel\n. Hi, thanks for the answers. \nAs an example: \ntake a look in this file: https://github.com/sczyh30/vertx-blueprint-microservice/blob/master/product-microservice/src/main/java/io/vertx/blueprint/microservice/product/api/RestProductAPIVerticle.java\nThere is no \"common jax\" is used, but it will be nice, if you could this annotate with swagger. But i see, there is no problem to include jsr311-api ...\nThanks\nMarcel. Hi, thanks for the answers. \nAs an example: \ntake a look in this file: https://github.com/sczyh30/vertx-blueprint-microservice/blob/master/product-microservice/src/main/java/io/vertx/blueprint/microservice/product/api/RestProductAPIVerticle.java\nThere is no \"common jax\" is used, but it will be nice, if you could this annotate with swagger. But i see, there is no problem to include jsr311-api ...\nThanks\nMarcel. ",
    "riaqn": "@webron \nI guess I need to define an authentication method first? \nThe problem is that I 'm using springfox to generate swagger spec, rather than hand-writing it. So how can I configure the swagger instance?\n. thanks. I 've found the link on springfox, for future references I post here:\nhttps://github.com/springfox/springfox/issues/821\n. ",
    "hgwood": "It is mentioned in #1271 that the fix for this requires a breaking change that will only be considered for the next major version. Is there any idea of the when of said major version?\n. So if I want to get to the Model, I should check that Response.getSchema() instanceof RefProperty, then cast it, then get the ref and then what? \nHere's the fragment from the Swagger Pet Store definition I'm trying to work with:\njson\n\"responses\": {  \n  \"200\": {  \n    \"description\": \"successful operation\",\n    \"schema\": {  \n      \"type\": \"object\",\n      \"additionalProperties\": {  \n        \"type\": \"integer\",\n        \"format\": \"int32\"\n      }\n    }\n  }\n}\n. I'm afraid there's nothing that corresponds in swagger.getDefinitions. It only contains what's really in the JSON.\nAm I to understand that this project doesn't support inline schemas in responses? If so, that's alright, but the README you should definitely mention it, and more generally how much of the spec is supported.\nIsn't the fix for this issue as simple as changing the type of Response.getSchema from Property to Model?\n. Yes I would soon run into #1202 but I would be able to read top-level properties.\n. ",
    "cbornet": "The field is still serialized as \"securityRequirement\". Do you know if it works with swagger-codegen and swagger-ui ?\n. Also I think the @JsonIgnore that was set on setSecurity() should be removed so that swagger-core can deserialize both security and securityRequirement but only serializes as securityRequirement. That would help for transitionning.\n. To me, this is still not fixed : https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-models/src/main/java/io/swagger/models/Swagger.java#L316\n. To me, this is still not fixed : https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-models/src/main/java/io/swagger/models/Swagger.java#L316\n. Related to #1258 ?\n. ",
    "boillodmanuel": "Any news on this topic? The generated swagger is not valid due to 'security' attribute that's named 'securityRequirement'. Do you have an ETA for this issue?\nI noticed that there were breaking changes in 1.5.8. Could the fix of this issue be included in 1.5.9?\nBest regards\n. I'm not. I' e looked at the unit test and they are using ObjectMapper.\nThanks for pointing this out.\nLe ven. 15 avr. 2016 20:02, Tony Tam notifications@github.com a \u00e9crit :\n\n@boillodmanuel https://github.com/boillodmanuel How are you getting\nsecurityRequirement? The SwaggerSerializers for jackson should address\nthis. Perhaps you're not using them? They are required.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1258#issuecomment-210566656\n. I wrote a simple test:\n\njava\n    @Test\n    public void testSwaggerExport() throws Exception {\n        Swagger swagger = new Swagger();\n        swagger.setSecurity(Arrays.asList(new SecurityRequirement().scope(\"user\").scope(\"movie\")));\n        System.out.println(Json.mapper().writeValueAsString(swagger));\n    }\nwhich produces the following json\n{\"swagger\":\"2.0\",\"securityRequirement\":[{\"scopes\":[\"user\",\"movie\"]}]}\nwhich is invalid because the attribute securityRequirement does not exist is spec. It should be security.\nI'm doing something wrong?\n. Hello there,\nI've open a pull-request to fix this issue: https://github.com/swagger-api/swagger-core/pull/1783\nHope this helps.\n. This fix is not yet in a release. Is it possible to release a new version? \n. I confirm that it was not in 1.5.9.\nI did a manual test and check the sources too.\nMoreover Github commit d24904f says it was only on master, but rebase could create a new sha1. \n\nregards\n. I can wait. Thanks for the update.\nLe jeu. 11 ao\u00fbt 2016 17:57, Ron notifications@github.com a \u00e9crit :\n\nThere are a few more PRs I'd like to merge in before pushing 1.5.10 out -\nhoping to get it all done next week. In the meantime, you can check out\n1.5.10-SNAPSHOT.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1258#issuecomment-239205606,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAl7j73hp5j-6m_6KD22hlxUoBYhnw7Fks5qe0ZygaJpZM4FXk5b\n.\n. Thanks a lot.\n. Unless I'm doing something wrong, I'm using your jackson serializer as you\ncan see in the test case I added in a comment of the original issue.\n\nIf I'm not wrong the current seralizer generates invalid swagger 2, doesn't\nit ?\nLe mer. 11 mai 2016 20:31, Tony Tam notifications@github.com a \u00e9crit :\n\nClosed #1783 https://github.com/swagger-api/swagger-core/pull/1783.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/pull/1783#event-657595992\n. I'm using io.swagger.util.Json like this:\n\njava\nSwagger swagger = new Swagger();\nswagger.setSecurity(Arrays.asList(new SecurityRequirement().scope(\"user\").scope(\"movie\")));\nSystem.out.println(Json.mapper().writeValueAsString(swagger));\nwhich produces:\njson\n{\"swagger\":\"2.0\",\"securityRequirement\":[{\"scopes\":[\"user\",\"movie\"]}]}\n(note that I updated the example in this comment because there was a mistake)\n. I added this PR with a failing unit test: #2180. Hello, any news about this issue?. Hi, is there a fix planned? . The test is currently failing here (see NOTE above). ",
    "naab": "I want to bump up this issue, because the latest swagger-ui can't handle \"securityRequirement\" field generated by this for the authentication feature. (it expects a \"security\" field, like it should be !)\nas per swagger-codegen, its security definitions only work for the \"securityRequirement\" field, not \"security\" as it is based on this code (removing the @JsonIgnore on the setters could fix this tho...)\nThis is a major issue that should be integrated before everyone forks it to fix it... It shouldn't be discussed about for 1 year... \nAnd yes, all swaggers are broken.\nThe previous PR was closed.\nMaybe will you aggree if I do another PR compatible with the existing version but add a security field too ?\n(one of them will be ignored depending on the reader)\nor maybe at least remove the @JsonIgnore on setSecurity  ?\n(to be able to use swagger-codegen with Spec compliant json)\n. ",
    "tommymcglynn": ":+1: \nWe're having the same issue.\n. ",
    "maxime-morand": "@webron - no, i did not find any \n. @webron ok done\n. @webron thanks a lot, but i think you merged my first commit. There is still a NPE because the child is null (that's what my second commit corrected)\n. ",
    "FossiFoo": "Nice. Not breaking the old behaviour is fine with me, as long as we can implement the correct usage in generators with both \"security\" and \"securityRequirements\" for now. Then the \"securityRequirements\" one can be deprecated later in the next major.\nPS: i have code for that lying around. will rebase & PR later :)\n. ",
    "epugh": "Same issue got me with 1.5.0, and upgrading worked.  Thank you!   I put in 1.5.0 because I was just following along with https://github.com/swagger-api/swagger-core/wiki/Swagger-Core-RESTEasy-2.X-Project-Setup-1.5#adding-the-dependencies-to-your-application, which listed in the POM file a 1.5.0.  Maybe update that documentation?\n. ",
    "x2b": "1.5.0 I guess:\n<dependency>\n  <groupId>io.swagger</groupId>\n  <artifactId>swagger-jersey2-jaxrs</artifactId>\n  <version>1.5.0</version>\n</dependency>\n. It is java.time.LocalDateTime. I use these annotations:\nimport com.fasterxml.jackson.databind.annotation.JsonDeserialize;\nimport com.fasterxml.jackson.databind.annotation.JsonSerialize;\nand these classes for (de)-serialization: \nimport com.fasterxml.jackson.databind.JsonDeserializer;\nimport com.fasterxml.jackson.databind.JsonSerializer;\n. Well, I have some LocalDateTime data field and I use annotations like this: \n@ApiModelProperty(value = \"The departure time\", required = false)\n@JsonDeserialize(using = LocalDateTimeDeserializer.class)\n@JsonSerialize(using = LocalDateTimeSerializer.class)\nprivate LocalDateTime departureTime;\nThe deserializer looks like this:\n```\npublic class LocalDateTimeDeserializer extends JsonDeserializer {\n@Override\npublic LocalDateTime deserialize(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException {\n    return LocalDateTime.parse(jp.getText());\n}\n\n}\n```\n. ",
    "dansim": "I also face a similar problem, where I want for consumers of the api to expect strings while I internally want to use LocalDate/Time objects. Is there any solution in Swagger for this?\n. Nice answer @fehguy this is probably the way to go. But I managed to find a easy solution that fitted my needs:\n\nDocket docket = ...; \ndocket.directModelSubstitute(LocalDate.class, String.class); \ndocket.directModelSubstitute(LocalDateTime.class, String.class);\n\nThe problem with this solution though is that when you have costume objects and need to have a mapping to some other data format. And maybe different types of mappings of the same origin datatype. This solution will override all controller methods returning dates and convert them to strings.\n. ",
    "Mowee": "@fehguy Can you give me an example on how I can register such an CustomConverter. I created my own CustomConvert by implementing the ModelConvert. But I'm stuck because I don't now how I can register it so it will be used.. ",
    "mar612": "Here's the code for my model:\n``` java\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\n@ApiModel\npublic class User {\n    @ApiModelProperty(value = \"user id\", allowableValues = \"range[1, 3]\")\n    private int userId;\npublic int getUserId() {\n    return userId;\n}\n\npublic void setUserId(int userId) {\n    this.userId = userId;\n}\n\n}\n```\n. Okay, thanks for letting me know (and for such speedy replies)\n. Looks more like an issue with Swashbuckle.\n. That's fine; I figured as much, but I just thought I'd ask to make sure.  Thanks for the speedy reply!\n. Any ideas?\n. Your issue is due to the misuse of the 'value' property of the @ApiModel annotation.\nIn Swagger 2.0, 'value' is used to assign an alternate name to the model, while 'description' is used to assign a description to the model.\n. This might be helpful: https://github.com/swagger-api/swagger-core/wiki/Annotations-1.5.X\nI have no experience with the older versions of Swagger, so I don't know if there are any other changes to the annotations.  Sorry!\n. Have you tried the latest stable version of swagger-core, i.e. 1.5.3?  It looks like you're using an out-of-date version, because the package name changed with 1.5.0 from com.wordnik.swagger to io.swagger.\n. ",
    "pn279j": "I am using springfox library to generate swagger documentation. it uses 2 swagger libraries - swagger-annotations and swagger-models. the latest version of swagger-annotations (1.5.2) does not seem to fix the issue. Is the fix available there? thanks!\n. ",
    "rojeda-desp-lp": "Sorry for my poor description.\nI want use the clone method of all Swagger Models that implement \"Model\" interface. But i saw that the object \"ComposedModel\" doesn't implement this method. \nThe \"AbstractModel\" returns null in this case. \nFor this reason, I want know if there is a bug.\nI am using the clone method for merging of more than one swagger document.\n. ",
    "despegargcampelo": "+1\nLooks more like a bug than a feature...\n. ",
    "arosenber": "+1 and submitting this solution as it removes a bug that's impairing me. \n. Note that this \"clone\" isn't really cloning as ModelImpl and ArrayModel do not really clone...(their properties are not cloned immutably...couldn't say the consequences in terms of usage)\n. ",
    "srl295": "Looks like the way to set tag descriptions is as per #945\n. @webron sure. The page says \"test\" now, though. \n. We're not trying to modify the spec on every request. We're just trying to switch off some operations based on static (configuration) parameters.  Would it be possible to have some kind of spec filter that's just called one time and then cached? It wouldn't have headers, cookies, etc. \n. @fehguy right, but we need to hide based on the configuration, not just the annotations. Is there any way to get one-time configuration and caching?\n. ",
    "rkosegi": "Added PR, for me it fixed issue, please review and merge if you think it's ok.\n. @fehguy done, I think issue can be closed.\nThanks.\n. ",
    "IgnasD": "Has anyone found the solution, or it's still not possible?. I don't think this is a correct alternative to schema type \"file\". Using @fehguy suggested method, schema gets specified as\ntype: \"string\"\nformat: \"byte\"\nThis makes the generated java client for this resource return byte[], which means file gets stored in-memory. This might not be acceptable for large files. (however, why it works at all is a mystery to me, because Swagger specification says that string/byte combo means \"base64 encoded characters\")\nWhen using schema type \"file\", generated java client method returns File object (which points to a file inside a temporary directory). So I assume the file is downloaded to a temporary location without storing it in memory all at once. Which makes it a preferable method when transferring large files.. ",
    "bstoyanov123": "Yes I do have an JSON payload set up.\n{\n  \"BrokerId\": 0,\n  \"Inventories\": [\n    {\n      \"ProductionID\": \"string\",\n      \"Section\": \"string\",\n      \"Row\": \"string\",\n      \"StartSeat\": \"string\",\n      \"EndSeat\": \"string\",\n      \"InHandDate\": \"string\",\n      \"IsPDFAvailable\": true,\n      \"IsAllowSplit\": true,\n      \"IsSpeculation\": true,\n      \"Quantity\": 0,\n      \"Barcodes\": \"string\",\n      \"Cost\": 0,\n      \"Face\": 0,\n      \"Description\": \"string\",\n      \"InventoryStatus\": \"string\",\n      \"SupplierTIcketID\": 0\n    }\n  ]\n}\nHowever I would like for each field in Inventory array to enter it as its own separate parameter (as if it was a query) instead of directly into the JSON on the body field. \n. ",
    "koh-osug": "I don't know what code is producing it. I'm using the ApiListingResource and see the generated yaml as part of a larger proprietary output when opening a web browser. When this is send to the validator, the validation fails. So, I think there is a unmarshaller producing the YAML output. The string serialization for large numbers seems to have a bug. A short look into the code reveals that Jackson is used. Maybe this problem is related to Jackson. To reproduce this bug a model with a large long value as test data can be used.\n. Well, there are other issues also with matrix parameters. But I think they are not related to this. The code is proprietary, but I can give a stripped down version:\n```\n@Entity\npublic class Profile extends BaseEntity {\n@Column(nullable = false, unique = true, updatable = false)\n@DecimalMin(value = \"1000000000000000000\")\n@Digits(integer = 20, fraction = 0)\nprivate BigInteger iccid;\n\n/**\n * Get the ICCID identifying the profile.\n *\n * @return the ICCID identifying the profile.\n */\npublic BigInteger getIccid() {\n    return iccid;\n}\n\n/**\n * Set the ICCID identifying the profile.\n *\n * @param iccid The ICCID identifying the profile.\n */\npublic void setIccid(BigInteger iccid) {\n    this.iccid = iccid;\n}\n\n}\n```\nWhen this is retrieved by a GET REST call in a service the error is produced when Swagger is building the description.\n. Thanks for the quick response. The validation error is:\n[{\"level\":\"error\",\"domain\":\"validation\",\"keyword\":\"type\",\"message\":\"instance type (string) does not match any allowed primitive type (allowed: [\\\"integer\\\",\\\"number\\\"])\",\"schema\":{\"loadingURI\":\"http://json-schema.org/draft-04/schema#\",\"pointer\":\"/properties/minimum\"},\"instance\":{\"pointer\":\"/definitions/Profile/properties/iccid/minimum\"}}]\n. ",
    "plaeplia": "+1\n. ",
    "lmprice": "We're also seeing this issue.\n. We're also seeing this issue.\n. I can confirm that this is resolved in 1.5.6. \n. I can confirm that this is resolved in 1.5.6. \n. ",
    "mattcarrier": "I'm still seeing this in 1.5.3-M1.\n. Confirmed, when I switched from 1.5.3-M1 to 1.5.3 this issue no longer exists.\n. ",
    "rockxwre": "@webron, on July 31st you wrote It is not intended to be used directly anymore and nowhere in the docs is it suggested to use it.\nhttps://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-1.X-Project-Setup-1.5#package-scanning--concrete-class-selection states you have to add the package io.swagger.jaxrs.json to the Jersey servlet configuration. I think this does suggest you should load the JacksonJsonProvider. Or am I missing something?\n. I agree. It's implicit, however, since the JacksonJsonProvider affects all application/json media types, it does have undesired side effects in my case too: my clients are not compatible with the JSON responses any more.\nSo my point is, it might be a good idea to add to the documentation that the io.swagger.jaxrs.json package is optional to scan and it's used for backward compatibility.\n. ",
    "C0rWin": "Nope, just tried and got same result.\n. ",
    "dustin-johnson": "This issue (or rather #1339) is blocking our upgrade to swagger 1.5.x. How can I aid in a resolution to this issue for the next release?\n. ",
    "OscarF": "Support for booleans would also be nice.\n. ",
    "rowanhill": "I think this is a general problem: I would expect the value you put in the example string to be treated as raw JSON, rather than encoded as a string in the swagger.json. It's not type safe, but it would allow numbers, booleans, arrays, even complex objects; strings would be fine, too, but they'd need quotes adding explicitly within the Java string, e.g.:\njava\n@ApiModelProperty(example = \"\\\"foo\\\"\")\nIs that possible?\n. For what it's worth, swagger-maven-plugin had a similar problem and ended up allowing raw JSON like I suggested above.\nI'm not quite sure what else you could do. Maybe example could take an Object, which gets JSON serialized to form the example? I imagine that would be a bit cumbersome to use, though.\n. ",
    "sheinbergon": "@etyrrill  so we can't give an example of compound types like Lists,Sets or Map ? \nNot sure if you're one of the maintainers or not , but does anybody have a plan for fixing this or changing the example annotation to an object as well?\nToo many issues/prs to keep track of that. ",
    "etyrrill": "I'm just a user of this library like you. It is an open source project, and you can clone the repo, make enhancements, and make a pull request like I did. . ",
    "elrob": "It worked for me once I fully qualified the class. For me:\ndataType = \"java.lang.Long\", example = \"12345678\"\nThis then renders correctly in Swagger as JSON integer type rather than a string.\nI'm using springfox: http://springfox.github.io/springfox/docs/current/#overriding-property-datatypes. ",
    "manjambo": "I think this is a similar issue:\n@JsonProperty(\"year\")\n@ApiModelProperty(required = true, example = \"2020\", dataType = \"java.lang.String\")\nprivate final Year year;\n...\nclass Year {\n  @JsonProperty(\"year\") // this has no effect on the outcome whther present or not\n  private final String year;\n}\ngives me \n...\n\"year\": 2020\n...\nbut I'd like\n...\n\"year\": \"2020\"\n...\n. ",
    "agusgr": "Hi @webron, thank you for classify it. Do you have any idea what version it will be solved?\n. Hi @webron, thank you for classify it. Do you have any idea what version it will be solved?\n. @webron ok, thanks for the reply. \nDo you think that adding \"file\" to PrimitiveType could be a good solution?\nI just made the change in the develop_2.0 branch and adding file to io.swagger.converter.PrimitiveType.java solves the error log and all test are OK so if all of you agree I can send a PR\n. @webron ok, thanks for the reply. \nDo you think that adding \"file\" to PrimitiveType could be a good solution?\nI just made the change in the develop_2.0 branch and adding file to io.swagger.converter.PrimitiveType.java solves the error log and all test are OK so if all of you agree I can send a PR\n. I'm reading right now the announcement in the google group [1] so I suppose that it's better wait that the changes are done in the repo to be sure in what branch I have to test the changes.\nAnyway, I'm available to send the PR if my proposal is correct.\n[1] https://groups.google.com/forum/#!topic/swagger-swaggersocket/dEwm8J5p7Ag\n. I'm reading right now the announcement in the google group [1] so I suppose that it's better wait that the changes are done in the repo to be sure in what branch I have to test the changes.\nAnyway, I'm available to send the PR if my proposal is correct.\n[1] https://groups.google.com/forum/#!topic/swagger-swaggersocket/dEwm8J5p7Ag\n. Hi everybody,\nI know that this is not a critical bug but the fake error in the log is generating some \"controversy\" in our solution and it would be great if can be solved in the next release.\nI suppose that the PR #1363 is yet not accepted because more test are needed or there are another issues related so if we can help doing more changes or tests, we are glad to help you.\nRegards,\nAgus\n. Hi everybody,\nI know that this is not a critical bug but the fake error in the log is generating some \"controversy\" in our solution and it would be great if can be solved in the next release.\nI suppose that the PR #1363 is yet not accepted because more test are needed or there are another issues related so if we can help doing more changes or tests, we are glad to help you.\nRegards,\nAgus\n. Hi @fehguy,\nChanging the dataType to java.io.File solves the log issue, but then in the swagger UI (I'm working with the 2.1.1 version) the file input dissapeared and it becomes a normal text input.\nThis is the JSON fragment with the definition for this input:\njson\n{\n          \"name\" : \"file\",\n          \"in\" : \"formData\",\n          \"description\" : \"File to upload\",\n          \"required\" : true,\n          \"type\" : \"java.io.File\"\n}\nShould I open an issue in the swagger-ui project? \nThanks!!\n. Hi @fehguy,\nChanging the dataType to java.io.File solves the log issue, but then in the swagger UI (I'm working with the 2.1.1 version) the file input dissapeared and it becomes a normal text input.\nThis is the JSON fragment with the definition for this input:\njson\n{\n          \"name\" : \"file\",\n          \"in\" : \"formData\",\n          \"description\" : \"File to upload\",\n          \"required\" : true,\n          \"type\" : \"java.io.File\"\n}\nShould I open an issue in the swagger-ui project? \nThanks!!\n. Hi again @fehguy,\nWith java.io.InputStream as dataType I get the same situation. There are no error in the log but the file input in the IU is  a normal text input.\nThis is the generated JSON:\n{\n          \"name\" : \"file\",\n          \"in\" : \"formData\",\n          \"description\" : \"File to upload\",\n          \"required\" : true,\n          \"type\" : \"java.io.InputStream\"\n        }\nLet me know if you need some more testing and if I should open an issue in the UI project.\nThanks!\n. Hi again @fehguy,\nWith java.io.InputStream as dataType I get the same situation. There are no error in the log but the file input in the IU is  a normal text input.\nThis is the generated JSON:\n{\n          \"name\" : \"file\",\n          \"in\" : \"formData\",\n          \"description\" : \"File to upload\",\n          \"required\" : true,\n          \"type\" : \"java.io.InputStream\"\n        }\nLet me know if you need some more testing and if I should open an issue in the UI project.\nThanks!\n. Hi @fehguy ! \nI've  tested and works fine! (setting java.io.File as the dataType).  Do you have a date (or an aproximate idea) for the 1.5.5 release?\nThanks!\n. Hi @fehguy ! \nI've  tested and works fine! (setting java.io.File as the dataType).  Do you have a date (or an aproximate idea) for the 1.5.5 release?\nThanks!\n. Hi @fehguy, I just see that this PR modifies a file which is removed in #1357.\nNext steps?\nI think that I can try to submit a new PR taking into account #1357 but It depends if it  gonna be accepted.\n. Hi @fehguy, I just see that this PR modifies a file which is removed in #1357.\nNext steps?\nI think that I can try to submit a new PR taking into account #1357 but It depends if it  gonna be accepted.\n. Hi @fehguy,\nI've just seen that #1357 has been accepted. I'm gonna close this PR and propose a new one.\n. Hi @fehguy,\nI've just seen that #1357 has been accepted. I'm gonna close this PR and propose a new one.\n. Fixed in #1519\n. Fixed in #1519\n. Hi @wangzilong, I think that the changes are still not integrated.\nBy the way, we are dealing with a similar situation in our solution (we are using Apache CXF but I think is similar) and our solution is to use @ApiImplicitParam to generate the swagger docs and \"hide\" the @ApiParam by using a custom SwaggerSpecFilter. Here [1] you can find an example (is scala but I think is easy to understand).\nHope this can help you,\n[1] http://stackoverflow.com/questions/22812365/how-to-hide-a-parameter-in-swagger\n. Hi @wangzilong, I think that the changes are still not integrated.\nBy the way, we are dealing with a similar situation in our solution (we are using Apache CXF but I think is similar) and our solution is to use @ApiImplicitParam to generate the swagger docs and \"hide\" the @ApiParam by using a custom SwaggerSpecFilter. Here [1] you can find an example (is scala but I think is easy to understand).\nHope this can help you,\n[1] http://stackoverflow.com/questions/22812365/how-to-hide-a-parameter-in-swagger\n. ",
    "msiemczyk": "I don't know if this was ever pulled in or what happened but the fix for this thing is definitely not in. Was this rejected on purpose or can we still add file as primitive type?\n. I've created pull request here:\nhttps://github.com/swagger-api/swagger-core/pull/1981\n. Can this be merged and released in 1.5.11 please? We have some continuous integration tests that are now failing because this bug is logging an error in our logs.\n. ",
    "catchaag": "Okay..sorry i did not know that.. I tried my application URL http://localhost:8080/RestJersey/rest/hello\n. Thanks a lot webron.. This worked... \nI needed 1 more help.. \nMy requirement is to get swagger.json and swagger.yaml file as part of my build process.\nCan you guide me on how I can get these swagger files as part of the build process.\n. thanks a lot! I will try this...\n. This is url produce after importing swagger file to APIM\n. oh... so there is no way to achieve this??\n. Can anyone here help me out with this?\n. ",
    "emn178": "I found that it supports in latest version.\n. ",
    "thomasmey": "Yes I know. I declare \"meta\" as String and do the JSON mapping in the method. But in swagger-ui I want it to show up as complex type JSONType from the swagger model. But it only shows up as String in swagger-ui.\nI actually tried to define \"meta\" as complex type itself and for this I implemented the fromString (see documentation of FormDataParam) method in JSONType class but swagger-ui still showed it as String if I recall correctly.\nSo any idea how I can display on form data parameter as JSON type in swagger-ui?\n. That's not true for Jersey 1.x:\nSee documentation of the jersey multipart extention: https://jersey.java.net/apidocs/1.11/contribs/jersey-multipart/index.html?com/sun/jersey/multipart/FormDataParam.html\n\"If there is no message body reader available and the type T conforms to a type specified by FormParam then processing is performed as specified by FormParam, where the values of the form parameter are String instances produced by reading the bytes of the named body parts utilizing a message body reader for the String type and the media type \"text/plain\".\nIf there is no named part present then processing is performed as specified by FormParam.\"\nAnd the documentation of FormParam ( https://jersey.java.net/apidocs/1.18/jersey/javax/ws/rs/FormParam.html ).\n\"The type T of the annotated parameter must be one of the following: \n1.    Be a primitive type\n2.    Have a constructor that accepts a single String argument\n3.    Have a static method named valueOf or fromString that accepts a single String argument (see, for example, Integer.valueOf(String))\n4.    Be List, Set or SortedSet, where T satisfies 2 or 3 above. The resulting collection is read-only.\"\nSo the type of formData can be a complex type. Or do I misunderstand somehing here?\nSo If the type of @FormDataParam is \"JSONType\"  which is a java class with swagger annotations and either has a constructor of type String or a method \"fromString()\" Jeresy does correctly transform the body data into a complex type.\nSadly there is now way in swagger-ui to show a formData parameter with as a complex type.\n. ",
    "fpahl": "I can confirm this issue. \nIn our case the following commit in our fork fixed it: https://github.com/synapplix/swagger-core/commit/88243a085677f63299e277ec36f30c8fef859de4\nI will not send a pull request as I guess there must be an nicer solution for the problem...\n. ",
    "Mijathi": "Hello, \nI'm working with @ithora on the swagger implementation in our project.\nAbout your question on the latest version of swagger core. We are using the maven artifact: com.wordnik:swagger-jaxrs_2.10:1.3.12 as a dependency in our project which has dependency com.wordnik:swagger-core_2.10:1.3.12 , which seems to be the latest version.\nWhen you ask if we are able to upgrade to the latest swagger-core, what do you mean? \n. ",
    "ithora": "Updated to io.swagger:swagger-jaxrs:1.5.2 and working now.\nThanks!\n. ",
    "2rs2ts": "Oh, so it deserializes to a MapProperty, not an ObjectProperty. Got it.\n. ",
    "ahl": "sorry to dredge up this old thread, but @fehguy can I ask why this is the right behavior? It seems like it's legal to have swagger like this:\n\"schema\": {\n    \"type\": \"object\",\n    \"properties\": { \n        \"foo\" {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": {\n        \"type\": \"integer\",\n        \"format\": \"int32\"\n    }\n}\nIf that is in fact legal, it would be useful to have additionalProperties on the ObjectProperty.\nAnd forgive me if this is answered elsewhere, but what is the purpose of the MapProperty and/or how does it relate to the Swagger 2.0 spec? Thanks.\n. ",
    "ltsallas": "I have a similar question. I Just downgraded from 1.5.3 to 1.3.12  and I lost the definitions for methods withoud @ApiOperation. Can I get the opposite behaviour in swagger 1.3.12, meaning having the operations scanned without @ApiOperation?\n. I have a similar question. I Just downgraded from 1.5.3 to 1.3.12  and I lost the definitions for methods withoud @ApiOperation. Can I get the opposite behaviour in swagger 1.3.12, meaning having the operations scanned without @ApiOperation?\n. We are dependent on Wildfly 8.1 which includes Jackson 8.3.2, while Swagger 1.5.3 needs Jackson 2.4.2\nWe are now examining these two options:\n- Update Wildfly to version 8.2.1.Final which includes Jackson 2.4.1. (I have already tested that and Swagger 1.5.3 generates the docs without complains although the wiki mentions Jackson 2.4.2 as minimum). \n- Keep Wildfly 8.1 and use a compatible version of Swagger. When I tested this solution with 1.3.12 I noticed I needed the extra @ApiOperation annotations to have the json generated.  \nThis is the case. My preference of course,  is to update Wildfly and use the latest version of Swagger. But If finally this is not possible, can you tell me what additional configuration do I need to get the docs generated without @ApiAnnotation in 1.3.12?\n. We are dependent on Wildfly 8.1 which includes Jackson 8.3.2, while Swagger 1.5.3 needs Jackson 2.4.2\nWe are now examining these two options:\n- Update Wildfly to version 8.2.1.Final which includes Jackson 2.4.1. (I have already tested that and Swagger 1.5.3 generates the docs without complains although the wiki mentions Jackson 2.4.2 as minimum). \n- Keep Wildfly 8.1 and use a compatible version of Swagger. When I tested this solution with 1.3.12 I noticed I needed the extra @ApiOperation annotations to have the json generated.  \nThis is the case. My preference of course,  is to update Wildfly and use the latest version of Swagger. But If finally this is not possible, can you tell me what additional configuration do I need to get the docs generated without @ApiAnnotation in 1.3.12?\n. ",
    "aaronstasis": "I'm faced with the same problem usecase. Configuring through web.xml or BeanConfig in separate apps I can't find a way around it. It seems to be the same as https://github.com/swagger-api/swagger-core/issues/949 filed and closed against 1.3 due to lack of activity.\n. I'm faced with the same problem usecase. Configuring through web.xml or BeanConfig in separate apps I can't find a way around it. It seems to be the same as https://github.com/swagger-api/swagger-core/issues/949 filed and closed against 1.3 due to lack of activity.\n. ",
    "aglisic": "I also have same problem\n. ",
    "scottreisdorf": "ditto.  Same Issue.  I am running using the BeanConfig approach.  Any word on a fix?\n. ",
    "sujithvaddi": "I'm also looking for the same. Setting up multiple packages with the same BeanConfig. Is there support for this? @fehguy Thanks!\n. ",
    "dheerajarora": "I'm also facing the same issue. Any plans for the fix?\n. Thanks @webron . Could you please let me know when is the release data of 1.5.10?\n. ",
    "hijklmno": "thanks @fehguy, comma works.\n. ",
    "kriegerkl": "The Problem that is described in the first comment from andi-livn is still not solved.\nShould I open a new Ticket?. ",
    "fennekit": "I am using 1.5.0\n. Am trying right now. Namespace have changed....\n. Is there a mvn package for 1.5.3?\n. Tried the 1.5.3. Same issue\n. ",
    "wsalembi": "Please look into the other primitive types too. Too bad JAX-RS @DefaultValue only uses strings, so conversions are needed.\n@QueryParam(\"page\") @DefaultValue(\"1\") @ApiParam(value = \"Page to be returned\") Integer page\ngenerates \nparameters:\n        - name: page\n          in: query\n          description: 'Page to be returned'\n          type: integer\n          default: '1'\n          format: int32\nthe default should be without quotes.\n. Yes, I tried 1.5.3 but it didn't resolve the issue. Forgot to mention I use com.github.kongchen:swagger-maven-plugin. I traced the error down to some code in the plugin, so I'll open the issue there.\n. Can you remove the old link http://docs.swagger.io/swagger-core/apidocs/ so it gets removed from Google's indexes?\n. Nothing that URL redirection could resolve?\n301 Moved Permanently -> http://docs.swagger.io/swagger-core/current/apidocs/\n. ",
    "asicignano": "This issue appears to have been fixed for Boolean types in the latest version. However, (unless I am mistaken) the issue still exists for other types, such as integer, as reported by @wsalembi.\nCan you confirm that this issue still exists?\n. Thank you for the response. I can appreciate the desire to keep the PRs\nclean for the sake of documentation.\nI have created a new ticket (\nhttps://github.com/swagger-api/swagger-core/issues/1472) to look into the\nissue with integers specifically.\nThank you,\nAnthony Sicignano\nOn Mon, Oct 5, 2015 at 3:35 PM, Ron notifications@github.com wrote:\n\n@wsalembi https://github.com/wsalembi, @asicignano\nhttps://github.com/asicignano - if the issue indeed exists for other\ntypes as well, please open a new ticket for it. The PR dealt with the issue\nas it was reported, and at least for the sake of documentation, I'd rather\nwe resolve other types in a new ticket rather than opening this one. It\nshould work for at least some other types, even if not all.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1368#issuecomment-145660193\n.\n. \n",
    "rspuler73": "We use wicket as web framework and the wicket REST extension which is not a JAX-RS implementation.\nLooks to me that the dependency on the @Path annotation is the only obstacle that swagger-core can not be used in my case.\n. Ok. Thanks anyway. Does this reader for generic servlets already exist? The only Reader I can find in the source code is io.swagger.jaxrs.Reader which obviously relies on JAX-RS annotations.\n. ",
    "driverpt": "+1\n. Do we have any ETA on this ?\n. @webron , got any suggestions for me where to start? I already have a Custom Jackson JsonSerializer for Link, how do i include it in the swagger-maven-plugin ?\n. @fehguy , what's the ETA on 3.0 Spec ?. ",
    "wakandan": "I'm using 1.5.3-M1\n. Hmm I was using swagger-core from com.wordnik, there was no 1.5.3 version. Changed to io.swagger:swagger-core:1.5.3 but it's still the same\n. is com.wordnik a fork from io.swagger? It's was in the first result that's why I added it in\n. I'm using dropwizard-swagger package to work with dropwizard. This package seems to be using swagger-core:1.5.1-M2. I added io.swagger:swagger-core:1.5.3 it doesn't work. Seems like they can't work together & dropwizard-swagger is the culprit here...\n. :+1: I will try and update this ticket later. Thanks \n. @fehguy I confirm that in 1.5.3 the form for post body shows up with the use of @ApiParam. I'm creating pull-requests on the dropwizard-swagger side. Thanks for your help!\n. @fehguy  https://github.com/federecio/dropwizard-swagger/pull/67\nThat pr would require this one as well (to resolve version conflicting) https://github.com/federecio/dropwizard-junit/pull/7 \n. ",
    "ayushdatt": "If I use @ApiOperation over a servlet doPost Method then the generated JSON file also attaches doPost in the end. Expected URL: \"/v1/document/doc1/\" Generated JSON file has URL \"/v2/document/us_1098/doPost\". Why is it attaching function name in the end? \n. ",
    "KmarAkrout": "@diguage u saved my life friend ! <3 . ",
    "crazySocket": "I have created pull request #1397 with changes that solve above issue.\n. Sorry for late answer but I had urgent assignments.\nYou can always make your custom implementation of ServletConfig and make similar servlet to DefaultJaxrsConfig. If you want to use BeanConfig you have to remove last line from setScan(boolean) (setting the scanner). You would need to make some modifications in ApiListingResource.scan() too (choosing scanner).\nI remember I found changes necessary to make BeanConfig multiinstance extensive (some time ago). But since swagger team is not interested in merging these changes, maybe no code change is too extensive.\nTry to modify BeanConfig as suggested above. I will look into it anyway.\n. ",
    "wangzilong": "Yes, I am using com.wordnik:swagger-jersey2-jaxrs_2.10:1.3.12\n. I'm sorry. I will try the latest right now.\n. I can not find the example of swagger-jersey2-guice in the latest version, can you give it to me. Thank you\n. I have try this project last week.\nWhen I add the same method in PetResource.java.\nit will return JSON is : \njson\n...\n{\n    \"post\": {\n        \"tags\": [\n            \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"consumes\": [\n            \"multipart/form-data\"\n        ],\n        \"produces\": [\n            \"application/json\"\n        ],\n        \"parameters\": [\n            {\n                \"name\": \"petId\",\n                \"in\": \"path\",\n                \"description\": \"ID of pet to update\",\n                \"required\": true,\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n            },\n            {\n                \"in\": \"body\",\n                \"name\": \"body\",\n                \"description\": \"Additional data to pass to server\",\n                \"required\": false,\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            },\n            {\n                \"name\": \"file\",\n                \"in\": \"formData\",\n                \"description\": \"file to upload\",\n                \"required\": false,\n                \"type\": \"file\"\n            },\n            {\n                \"in\": \"body\",\n                \"name\": \"body\",\n                \"description\": \"file detail\",\n                \"required\": false,\n                \"schema\": {\n                    \"$ref\": \"#/definitions/FormDataContentDisposition\"\n                }\n            }\n        ],\n        ...\nBut the FormDataContentDisposition be generated in JSON. \nCan you teach me how to deal with it?\n. Yes, I download this example project, then add those code and run it.\n. OK, thanks\n. OK, thanks\n. Hi webron:\nit does not work, the FormDataContentDisposition still in  JSON.\nI only add register(MultiPartFeature.class). in Application.java\nNeed I add other configuration\uff1f\n. Hi webron:\nit does not work, the FormDataContentDisposition still in  JSON.\nI only add register(MultiPartFeature.class). in Application.java\nNeed I add other configuration\uff1f\n. Yes\uff0c Jersey's version is 2.21\n. Yes\uff0c Jersey's version is 2.21\n. Thank you very much.\n. Thank you very much.\n. I have push the code to https://github.com/wangzilong/java-jersey2-guice.git\npom.xml : https://github.com/wangzilong/java-jersey2-guice/blob/master/pom.xml\n. I have push the code to https://github.com/wangzilong/java-jersey2-guice.git\npom.xml : https://github.com/wangzilong/java-jersey2-guice/blob/master/pom.xml\n. Thanks for fixing this bug so quickly.\nI am a git newer, can you tell me which branch can get the new code?\n. Thanks for fixing this bug so quickly.\nI am a git newer, can you tell me which branch can get the new code?\n. does it cache swgger.json? or cache all annotations?\n. does it cache swgger.json? or cache all annotations?\n. When I debug in local dev server, I find that swagger always run into io.swagger.jaxrs.Reader.read() method to analyse annotations\n. When I debug in local dev server, I find that swagger always run into io.swagger.jaxrs.Reader.read() method to analyse annotations\n. \nthere is the log in appengine\nit is cost much time to generate swagger.json\n. \nthere is the log in appengine\nit is cost much time to generate swagger.json\n. Add a new filter in my web project, and this filter cache swagger.json in memory\nWhen this interface is called repeatedly, the filter will return swagger.json directly.\n. Add a new filter in my web project, and this filter cache swagger.json in memory\nWhen this interface is called repeatedly, the filter will return swagger.json directly.\n. Sorry for \"scan annotations of resources every time\", I did not found this code.\nAll I want to express is\nis there any resolution to cache swagger.json instead of rebuild it.\n. Sorry for \"scan annotations of resources every time\", I did not found this code.\nAll I want to express is\nis there any resolution to cache swagger.json instead of rebuild it.\n. ",
    "ChrisTitos": "At first I thought it was both master and develop, but after doing a clean first, now it only happens in develop_2.0.\nI also get the exception when using swagger-parser v1.0.10\n. The develop_2.0 branch has been merged into codegen master, so now I also get the exception when using the master branch.\nBut like I said, this exception shouldn't even be there right? The spec says nothing about what kind of reference is allowed or not (or am I misinterpreting something?).\n. Any estimate on when this will be merged? :)\n. ",
    "ePaul": "This error message seems to have been introduced in #1271 (commit 59e6b10).\nI didn't find any justification for this in the discussion of the Pull request, nor in the commit comment (which doesn't say much at all).\n. Related to this, there seems to be no responses property of the Swagger object. Maybe this was the reason?\n. @tomtit generalizing your proposal to the other types (the issue also affects number, integer, and possibly array + object), the idea would be to have the isType method for the base-type's processor ignore the format, and then sort the Processor enum items in a way that those format-ignoring processors come last?\n. I added a second pull request #1409 with the alternative implementation. Feel free to decline this one.\n. @ChrisTitos @webron This needs a corresponding change in swagger-parser (at least in ResolverCache, I'll see if somewhere else too), it seems. I'm currently seeing if I can do this, too.\n. @ChrisTitos @webron Parsing response-$refs doesn't work currently, because there is no responses field in the swagger object \u2013 see #1436. I might do a new pull request for this next week, if no one argues that this omission was intentional.\n. I rebased this again to fix any merge conflicts. Is there still anything to do?\n. Hmm, this test looks a bit implementation-specific: we are actually just testing that for each property type \u2039PropertyClass\u203a.isType(property.getType(), property.getFormat()) returns true (and for the other ones this is either not checked or returns false).\nI'm trying with my test to come more from a specification point of view.\nThough I guess I can add your test, too. (The Arrays.asList is not needed here, we can also directly iterate over that array.)\n. I looked into parameterized Tests with TestNG, and implemented both as parameterized test. Now I have 40 tests (by 4 test methods).\nI'll see if I can also cover some corner cases to increase the coverage (currently 67% for PropertyBuilder).\n. ",
    "tminglei": "Close it, since I have found the way and implemented it in binder-swagger-java.\nWelcome to use it. ^^\n. Yes, you're right.\nBut can swagger ui do some support for this?. Got it. Thanks!. ",
    "danigonzalez": "Hi, I've tried and it works, but with this we can only configure swagger instances using init parameters (so web.xml is the only way). Isn't it?\nI would like to be able to configure init-params externally (basepath for example) to be able to deploy my war to any of my servers without needing to change web.xml code.\nI think it's not possible to override web.xml init-params values using variable substitution defined in other files (context.xml for example). I think it's not possible to override web.xml init-params extending the servlet class to override it in ServletConfig.\nIt's BeanConfig the only way to configure it programmatically (so in java we can retrieve environment variables defined in context.xml or wherever we want)?? Can I help you making BeanConfig multi instance?\n. ",
    "arnm": "I am currently implementing vendor extensions on model properties with the ReaderListener functionality. Doing it this way meets all my requirements. Though I'd like to explore alternatives if possible.\n. ",
    "colinpollock": "I was confused reading this at first. @fehguy it sounds like you were saying it's currently possible to use @Extension, but extensions aren't a param for @ApiModelProperty (the spec also says this). \nSo until #1898 is done this won't be possible. Unless I'm misunderstanding something, which would be awesome since it'd be great if this were already possible.. ",
    "karlvr": "@webron thanks, I have now tried that out and it didn't have any impact. \nI added the following after the creation of my BeanConfig in a class that is constructed when my app server starts, and before the Swagger ApiListingResource is created or run.\nJson.mapper().registerModule(new JaxbAnnotationModule());\nYaml.mapper().registerModule(new JaxbAnnotationModule());\nI have @JsonValue on a method in the class in question. I have tried adding @XmlValue additionally. That also didn't work. I've tried investigating a bit further to see what is happening inside the JaxbAnnotationIntrospector but I didn't get very far!\nWhat do you recommend as a course of action? I saw some explicit handling of Jackson annotations (e.g. JsonTypeInfo) in ModelResolver, but perhaps from #960 it appears that you don't want to add more support for these annotations in there?\n. @webron No problem, here is our particular use-case below in code. We have a class Links which wraps a list of Link objects. When serialised to JSON we use @JsonValue so that rather than the JSON including the Links object with an array of Links, the Links object isn't represented in the JSON at all.\nThe @JsonCreator annotation is to support deserialisation from that JSON.\nSo basically what we want Swagger to do is to pretend that the property of type Links in Bean is in fact List<Link>.\n``` java\npublic class Bean {\nprivate Links links;\n\npublic Links getLinks() {\n    return links;\n}\npublic void setLinks(Links links) {\n    this.links = links;\n}\n\n}\n```\n``` java\npublic class Links implements Iterable {\nprivate List<Link> links = new ArrayList<>();\n\npublic Links() {\n    super();\n}\n\n@JsonCreator\npublic Links(List<Link> links) {\n    super();\n    this.links = links;\n}\n\npublic Links(Link link) {\n    super();\n    this.links = new ArrayList<>();\n    this.add(link);\n}\n\n@JsonValue\npublic List<Link> getJsonValue() {\n    return links;\n}\n\npublic List<Link> getLinks() {\n    return links;\n}\n\npublic void setLinks(List<Link> links) {\n    this.links = links;\n}\n\npublic void add(Link link) {\n    this.links.add(link);\n}\n\npublic Link linkWithType(LinkType type) {\n    for (Link link : links) {\n        if (type == link.getType()) {\n            return link;\n        }\n    }\n\n    return null;\n}\n\n@Override\npublic Iterator<Link> iterator() {\n    return links.iterator();\n}\n\n}\n``\n. Doh, sorry!@XmlValueis indeed the JAXB corresponding annotation to@JsonValue`. Given that swagger-core is tightly integrated with Jackson, maybe it's fine just to support the Jackson annotation. However I think some JAXB annotations are already supported? In which case perhaps support both. \n. Just a JSON structure at the moment. \nSent from my iPhone\n\nOn 11/09/2015, at 8:13 pm, Ron notifications@github.com wrote:\nYeah, it is tightly integrated with Jackson. There's some basic manual processing of JAXB annotations but those are rare. The full integration with JAXB should be using Jackson JAXB module, but it looks like it doesn't work for you, which makes me wonder what would be the cause of it. Do you use it to represent an XML structure or a JSON structure (or both)?\n\u2014\nReply to this email directly or view it on GitHub.\n. @webron my sincere apologies! I was using 1.5.0. I have upgraded to 1.5.3 and it is resolved as per your release notes.\n. \n",
    "roykachouh": "Oh sorry bout that. It was late last night, will take a look later today. \n. Fixed the tests. \n. Hi @webron, just rebased.\n\nAlso, the test doesn't seem to cover the MapProperty.\n\nI'm not sure I follow. It looks like it's covering the map property - unless, I'm missing something. If anything, it doesn't seem to be covering the ObjectProperty. I added a test for that, will wait on some clarification on the MapProperty\n. Ok, I was worried about that.\nI probably can do something like this instead, do you agree?\njavascript\ndefinitions:\n  Foo:\n    type: object\n    x-fields-with-my-special-annotation:\n      - fooRef\n      - another one\n    properties:\n      fooString:\n        type: string\n        minLength: 5\n        maxLength: 500\n. Put simply, i wrote a generator that uses the swagger spec and has some of our custom approaches for dealing with value types.\nI'd like to be able to detect items in the spec and add some custom annotations to a property of the field...let's say a custom javax.validation annotation.\nI was able to do this using vendor extensions on all properties of a definition, but couldn't do it with a $ref. I'm thinking if the structure above is vaild, I can use that...similar to how I use the required fields in the spec to slap on some @ NotEmpty annotations on my generated models.\n. ",
    "fritzrichter": "I use swagger-core 1.5.3. The classes are in different packages, as the interface is a shared library (separate jar) for clients and the server just adds the implementation. \n. I did that, problem here was, that the jax-ws annotations were not read, so for example I was not able to see that a certain parameter must be provided as path-param...\nMy current temp solution is to just annotate the interface, thus adding the swagger-annotations.jar as a dependency to the client/shared lib.\n. Of course, here the interface:\n```\npackage com.ads.userservice.client;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport java.util.List;\nimport javax.ws.rs.Consumes;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.POST;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.PathParam;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.MediaType;\nimport com.ads.userservice.client.models.User;\n@Produces(MediaType.APPLICATION_JSON)\n@Consumes(MediaType.APPLICATION_JSON)\n@Path(\"/v1/users\")\npublic interface UserServiceApi {\n@GET\n@Path(\"/{id}\")\nUser findById(@PathParam(\"id\") String id);\n\n}\n```\nand the impl:\n```\npackage com.ads.userservice.api;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport java.util.List;\nimport java.util.stream.Collectors;\nimport javax.ws.rs.PathParam;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\nimport com.ads.userservice.client.UserServiceApi;\nimport com.ads.userservice.client.models.User;\nimport com.ads.userservice.models.UserServiceBean;\nimport com.ads.userservice.models.UserServiceBean.ToUser;\nimport com.ads.userservice.service.UserService;\n@Component\n@Api(value = \"/v1/users\", tags = \"userServiceApi\")\npublic class UserServiceApiImpl implements UserServiceApi {\n@Autowired\nprivate UserService userService;\n\n@Override\n@ApiOperation(value = \"Load by userId\")\n\npublic User findById(String id) {\n    return new ToUser().apply(userService.findOne(id));\n}\n\n}\n```\n. any feedback on that?\n. haha, of course... thanks for the quick reply... this is still an open source project, so I am thankful that someone is taking care of it :)\n. I see... thanks for that help... will close the ticket then\n. ",
    "genthalili": "+1\nsame issue, I'm using @Path(\"{var: client | _Client }\")\nthe json file generated by Swagger-core 1.5.3 is :\n\"paths\" : {\n    \"/{var}\" : {..\nA solution of this could be to let setting (overwrite) manually the path with @ApiOperation annotation, i.e path() and/or paths()\n. ",
    "tedepstein": "Hi @webron, I came across this comment while researching a related issue:\n\nWhile it shouldn't throw NPE, please note that setting additionalProperties: false is not needed as unlike JSON schema, that's the assumption in Swagger. In a way, that's not even supported in the description and the schema validation may soon impose this restriction.\n\nThat's not consistent with the specification, which says additionalProperties \"...is the same as the one from JSON Schema, only where the original definition references the JSON Schema definition, the Schema Object definition is used instead.\"\nAccording to that specification, we would expect additionalProperties to have a default value of true, with the option to override it with a false value, or with a schema.  Please let me know if I am missing anything here.\n. @webron OK.  It looks like this is all getting revisited in OpenAPI 3.0 anyway.\nFor now, I'll assume the following.\n- additionalProperties has a default value of false\n- if specified, additionalProperties must have a value that is a valid OpenAPI Schema Object.\n- additionalProperties cannot have a value of true.\n- additionalProperties can be combined with regular, statically defined properties.\n  - Note that there are some contexts in swagger-models that don't support this:  ObjectProperty doesn't have additionalProperties, and MapProperty doesn't have regular properties.  So in the current implementation, you can only use both regular properties and additionalProperties in a ModelImpl.\n  - We will assume that this is incomplete implementation of the spec in Swagger-Models. We'll work around it where possible, and look to the OpenAPI 3.0 release for a more complete implementation.\nPlease let me know if any of this is not correct.\n. @fehguy , sorry, I meant to post this issue in SwagEdit.  But yes, it would be good for Swagger-Parser to disallow it.. ",
    "tagliola": "Without javax.validation on the classpath, this will throw a ClassNotFoundException. Is that correct?\n. ",
    "andersaa": "@webron I just tried that and it is no different.\n@buremba Ok I see. But with #1445, should LocalDates be serialized to strings without modifying the ObjectMapper? is the ObjectMapper a workaround that we can use until that task is implemented. Just to be clear, I am using Java 8 LocalDate. \nThanks for helping!\n. Awesome, works like a charm!\nClosing this issue since it is covered by #1445.\n. For some strange reason, this workaround does not work after a hot redeployment in Tomcat 8. If I stop and start the server everything is fine, but after the next redeployment it looks like the fix isn't applied.\n. ",
    "ayzenquwe": "And what about Duration?\n. And what about Duration?\n. ",
    "soberich": "@frantuma @webron \nDuration, Period, ZoneId ?\nWhy those not been added while others was. For consistent support of the whole java.time.* package shouldn't all those be added as well as some (maybe ALL) rest from that package. \nAll use-cases in java world with those types when talking about REST APIs are just representing them as strings.. @frantuma @webron \nDuration, Period, ZoneId ?\nWhy those not been added while others was. For consistent support of the whole java.time.* package shouldn't all those be added as well as some (maybe ALL) rest from that package. \nAll use-cases in java world with those types when talking about REST APIs are just representing them as strings.. Latest, and greatest!. 2.0.0. Latest, and greatest!. 2.0.0. @frantuma \nMy use case at least at current stage is just producing correct api definition from jax-rs endpoints. I mean so, that model(-s) which will in .yaml file produced, say, displayed in swagger ui,  will form correct JSON representation, and anyone can POST that JSON as request body. \nAs much automated as possible - means without unnecessary @Schema annotations as well as any other swagger additional annotations.\nI do not know swagger deeply and I thought that inner ObjectMapper being setup with some options will lead to custom api definition produced.\nThat was confirmed (at least I thought so)  by, for example, setting NamingStrategy to snake case\nobjectMapper.setPropertyNamingStrategy(SNAKE_CASE);\n        Json.mapper().setPropertyNamingStrategy(SNAKE_CASE);\nso that produced definition models are in snake case.\nAlso such types as java.time.LocalDate and others in table below are correctly formed JSON properties\n| field        | produced model type               | real java type          | example          |\n|--------------|--------------------|-------------------------|-------------------------|\n| updated_on  | string($date-time)     | java.time.ZonedDateTime| \"2018-04-24T04:58:49.132Z\"\n| valid_from  | string($date)      | java.time.LocalDate     |\n| valid_until* | string($date)      | java.time.LocalDate     |\n| moved_from      | string             | java.lang.String        |\n| created_on   | string($date-time) | java.time.LocalDateTime |\n| creator_id   | integer($int64)    | java.lang.Long          |\nSerialization\n...I mean,  that those types above are NOT being represented as the whole java.time.LocalDate internal structure, but rather just a string($date) so String is awaited as request body property.\nSo, I thought that registering Module like Json.mapper().registerModule(new JavaTimeModule()); will lead to supporting such types as java.time.ZoneId and java.time.Period which is exactly what I am looking for. \n1. If \"registering JavaTimeModule in internal Swagger's ObjectMapper WILL NOT lead\" to correctly produced models then - Why would anyone at all will do so?? For what?? (You said \"seem to work fine\" - What does it do then?)\n2. If I DID understood correctly and \"registering JavaTimeModule in internal Swagger's ObjectMapper WILL lead\" to correct model JSON properties, than.. Why it is that SOME setting applied successfully (like NamingStrategy) and some other (like JavaTimeModule) does not?\nEdit 1\n\"Can you post some more details, along with a test case?\" - \nI wish I could but It is not clear for now what to test. Please, answer the questions above. I am not clear what to test and whether applying JavaTimeModule should change process (form) of produced api defenitions or not?\nEdit 2\nWell I got things now.\nI understood that those data types simply does not correspond to OpenAPI spec.\nIn this regard I have a question if so, then\n1. I aware there was OverrideModel mechanism in 1.5.x version. What are current analogue abilities?\n2. Period and ZoneId are less  complicated cases. What is the option for MonetaryAmount. the most common way to serialize it would be\n{\n  \"amount\": 29.95,\n  \"currency\": \"EUR\"\n}\nHow to specify that then?\n3. Is there an option to specify format rater than pattern.. because pattern is not sufficient for the MonetaryAmount\nEdit 3\nI have referenced this here https://github.com/swagger-api/swagger-core/issues/1445\nAs adding those types as primitives would be quiet what you expect to see when other java.time.* types are already there. @frantuma \nMy use case at least at current stage is just producing correct api definition from jax-rs endpoints. I mean so, that model(-s) which will in .yaml file produced, say, displayed in swagger ui,  will form correct JSON representation, and anyone can POST that JSON as request body. \nAs much automated as possible - means without unnecessary @Schema annotations as well as any other swagger additional annotations.\nI do not know swagger deeply and I thought that inner ObjectMapper being setup with some options will lead to custom api definition produced.\nThat was confirmed (at least I thought so)  by, for example, setting NamingStrategy to snake case\nobjectMapper.setPropertyNamingStrategy(SNAKE_CASE);\n        Json.mapper().setPropertyNamingStrategy(SNAKE_CASE);\nso that produced definition models are in snake case.\nAlso such types as java.time.LocalDate and others in table below are correctly formed JSON properties\n| field        | produced model type               | real java type          | example          |\n|--------------|--------------------|-------------------------|-------------------------|\n| updated_on  | string($date-time)     | java.time.ZonedDateTime| \"2018-04-24T04:58:49.132Z\"\n| valid_from  | string($date)      | java.time.LocalDate     |\n| valid_until* | string($date)      | java.time.LocalDate     |\n| moved_from      | string             | java.lang.String        |\n| created_on   | string($date-time) | java.time.LocalDateTime |\n| creator_id   | integer($int64)    | java.lang.Long          |\nSerialization\n...I mean,  that those types above are NOT being represented as the whole java.time.LocalDate internal structure, but rather just a string($date) so String is awaited as request body property.\nSo, I thought that registering Module like Json.mapper().registerModule(new JavaTimeModule()); will lead to supporting such types as java.time.ZoneId and java.time.Period which is exactly what I am looking for. \n1. If \"registering JavaTimeModule in internal Swagger's ObjectMapper WILL NOT lead\" to correctly produced models then - Why would anyone at all will do so?? For what?? (You said \"seem to work fine\" - What does it do then?)\n2. If I DID understood correctly and \"registering JavaTimeModule in internal Swagger's ObjectMapper WILL lead\" to correct model JSON properties, than.. Why it is that SOME setting applied successfully (like NamingStrategy) and some other (like JavaTimeModule) does not?\nEdit 1\n\"Can you post some more details, along with a test case?\" - \nI wish I could but It is not clear for now what to test. Please, answer the questions above. I am not clear what to test and whether applying JavaTimeModule should change process (form) of produced api defenitions or not?\nEdit 2\nWell I got things now.\nI understood that those data types simply does not correspond to OpenAPI spec.\nIn this regard I have a question if so, then\n1. I aware there was OverrideModel mechanism in 1.5.x version. What are current analogue abilities?\n2. Period and ZoneId are less  complicated cases. What is the option for MonetaryAmount. the most common way to serialize it would be\n{\n  \"amount\": 29.95,\n  \"currency\": \"EUR\"\n}\nHow to specify that then?\n3. Is there an option to specify format rater than pattern.. because pattern is not sufficient for the MonetaryAmount\nEdit 3\nI have referenced this here https://github.com/swagger-api/swagger-core/issues/1445\nAs adding those types as primitives would be quiet what you expect to see when other java.time.* types are already there. Regardless there already were some similar examples in tests, or examples ( I don't remember exactly where) those did not help a lot but your answer did. Maybe there should be a guide to similar solutions and/or this issue can be marked as documented or smth like that. @frantuma Thank you very much. This worked well and we adopted that. \nMy original \"issue\" resolved so I think what else is rest is covered well in https://github.com/swagger-api/swagger-core/issues/1445 \nbecause adding external types as primitives seems to be a highly demanded mechanism.\nso I close this one.\n. Regardless there already were some similar examples in tests, or examples ( I don't remember exactly where) those did not help a lot but your answer did. Maybe there should be a guide to similar solutions and/or this issue can be marked as documented or smth like that. @frantuma Thank you very much. This worked well and we adopted that. \nMy original \"issue\" resolved so I think what else is rest is covered well in https://github.com/swagger-api/swagger-core/issues/1445 \nbecause adding external types as primitives seems to be a highly demanded mechanism.\nso I close this one.\n. backword compatible constructors were added by @yborovikov in pr\nsee\nhttps://github.com/FasterXML/jackson-dataformats-text/issues/81. backword compatible constructors were added by @yborovikov in pr\nsee\nhttps://github.com/FasterXML/jackson-dataformats-text/issues/81. I see Gradle and Maven plugins released and fits this now! Great! Generation at build time makes all that perfect.. It works the way you outlined. Thank you.. It works the way you outlined. Thank you.. @manoswerts no, doesn't work in Gradle either. Where you've find in source files it works??. @manoswerts no, doesn't work in Gradle either. Where you've find in source files it works??. ",
    "hanymorcos": "JsonIdentityReference still doesn't work, using spring fox 2.6.1 version. I'm using JSON Property.  That's working for me through swagger. I'm tweaking jhiptser generated code.. ",
    "Romain-P": "Same for me, I have cyclic dependencies, so I have to use @JsonIdentityInfo.\nI get a stackoverflow. ",
    "veitmichael": "Same issue applies to the produces (and also consumes?) property of the @ApiOperation annotation:\nI am using a comma-separated list of mime-types, and it gets displayed as comma-separated list in Swagger-UI.\nI am not participating in development of Swagger, but looking at the fix above looks like just changing\nmodules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/Reader.java to split the string for api.produces() and api.consumes():\nif (!api.produces().isEmpty()) {\n                 produces = new String[]{api.produces()};\n             }\nBtw., I am just trying to use this property as I am not able to control the sort order of mime types. From @Produces JAX-RS annotation, sort order is not preserved  (most probably lost already in JAX-RS implementation...). Is there any other mechanism to define the sort order, or at least the default value of the \"Response Content Type\", as I don't like duplicating information?\n. Done, see https://github.com/swagger-api/swagger-core/issues/1546\n. Unfortunately I don't have the right to add any tag to the issue. :(\n. ",
    "ndhar-1": "Ok thanks ! I ll try the new Swagger Core version\n. Yes, GET all works well for me now. I did not have to use responseContainer attribute in @ApiResponse, instead just upgrading swagger core version solved the problem.\n. ",
    "HenrikHL": "Actually I wasn't aware of this - thank you for pointing me in that direction.\nAfter experimenting a little with @BeanParam - swagger-core doesn't seem to parse it the way I was expecting. When annotating fields with @QueryParam:\n```\npublic class CollectionParameters {\n    @QueryParam(value=\"sort\")\n    public String sort;\n@QueryParam(value=\"excluded\")\npublic String excluded;\n\n@QueryParam(value=\"included\")\npublic String included;\n\n}\n```\nI was kind of hoping that Swagger would render the above 3 query parameters as QueryParameters. It seems like it is rendering it as a class...?\n\nAm I doing something wrong?\nHere is how I use the CollectionParameters class:\n@GET\n@ApiOperation(\n        value=\"Gets a collection of Feedbacks\",\n        response = Feedback.class,\n        responseContainer = \"List\"\n)\npublic Response getFeedbacks(@BeanParam CollectionParameters collectionParameters, ...) {\n    ...\n}\nIs this a bug or is it supposed to be this way?\n. Actually this is how I was expecting the QueryParameters would turn up in the UI:\n\n(This is programmed using @ApiImplicitParams )\n. I am using latest version 1.5.3\n. It is version 1.5.3\nThe code is as above. I am only using 3 QueryParam annotations in the CollectionParameters class above. I am not using neither PathParams or BodyParams...\n. I can try tomorrow to add a @HeaderParam (or a @PathParam) and let you know if anything changes...\n. It doesn't matter what kind of Params I insert - every time it produces a \"double\"-body in the documentation. Code example:\n```\npublic class CollectionParameters {\n    @QueryParam(value=\"sort\")\n    public String sort;\n@QueryParam(value=\"excluded\")\npublic String excluded;\n\n@QueryParam(value=\"included\")\npublic String included;\n\n@HeaderParam(value=\"xxx\")\npublic String xxx;\n\n@FormParam(value=\"yyy\")\npublic String yyy;\n\n@MatrixParam(value=\"zzz\")\npublic List<String> stringList;\n\n}\n```\nAn example of the use:\n@GET\n@ApiOperation(\n        value=\"Gets a collection of figures\",\n        notes = \"Gets all Figures.\",\n        response = Figure.class,\n        responseContainer = \"List\"\n)\npublic Response getFigure(@BeanParam CollectionParameters collectionParameters, ...) {\n    ...\n}\n...and the result from the Swagger-UI:\n\n. I am pretty sure I am using Jersey2 - otherwise the project wouldn't compile (@BeanParam was added in version 2.0 as far as I can see...)\nI will check the code again on Monday - maybe I can find a reason as to what is wrong...?\n. I am totally mystified as to why this doesn't work in my project. I have copied the code from your example and made a simple class:\n```\nimport io.swagger.annotations.;\nimport javax.ws.rs.;\nimport javax.ws.rs.core.*;\n@Path(\"/figures\")\n@Api(tags = {\"pet\"})\n@Produces({\"application/json\", \"application/xml\"})\npublic class FiguresService {\n    @GET\n    @ApiOperation(\n            value=\"Gets a collection of figures\",\n            responseContainer = \"List\"\n    )\n    public Response getFigure(@BeanParam EntityParameters entityParameters) {\n        return Response.ok().build();\n    }\n}\n```\nThis is what swagger.json produces:\n\"/figures\" : {\n  \"get\" : {\n    \"tags\" : [ \"pet\" ],\n    \"summary\" : \"Gets a collection of figures\",\n    \"description\" : \"\",\n    \"operationId\" : \"getFigure\",\n    \"produces\" : [ \"application/xml\", \"application/json\" ],\n    \"parameters\" : [ {\n      \"in\" : \"body\",\n      \"name\" : \"body\",\n      \"required\" : false,\n      \"schema\" : {\n        \"$ref\" : \"#/definitions/EntityParameters\"\n      }\n    } ],\n    \"responses\" : {\n      \"default\" : {\n        \"description\" : \"successful operation\"\n      }\n    }\n  }\n},\nThe \"schema\" is referring to EntityParameters - is it supposed to? The EntityParameters look like this (it is a little modified compared to your example):\n\"EntityParameters\" : {\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"excluded\" : {\n      \"type\" : \"string\",\n      \"description\" : \"Comma separated list of fields that should be excluded from the result\"\n    },\n    \"included\" : {\n      \"type\" : \"string\",\n      \"description\" : \"Comma separated list of fields that should be included in the result\"\n    },\n    \"print\" : {\n      \"type\" : \"string\",\n      \"description\" : \"PrettyPrint (print=pretty) the result or don't send anything back in the payload (print=silent)\",\n      \"enum\" : [ \"pretty\", \"silent\" ]\n    }\n  }\n},\nIn another place in my swagger.json I code the parameters myself (using @ApiImplicitParam) - then swagger.json looks like this:\n\"parameters\" : [ {\n      \"in\" : \"body\",\n      \"name\" : \"body\",\n      \"required\" : false,\n      \"schema\" : {\n        \"$ref\" : \"#/definitions/InputStream\"\n      }\n    }, {\n      \"name\" : \"included\",\n      \"in\" : \"query\",\n      \"description\" : \"Comma separated list of fields that should be included in the result\",\n      \"required\" : false,\n      \"type\" : \"string\"\n    }, {\n      \"name\" : \"excluded\",\n      \"in\" : \"query\",\n      \"description\" : \"Surround the result with additional information\",\n      \"required\" : false,\n      \"type\" : \"string\"\n    }, {\n      \"name\" : \"page\",\n      \"in\" : \"query\",\n      \"description\" : \"Get a specific page in the result\",\n      \"required\" : false,\n      \"type\" : \"integer\"\n      },\nNotice here that the parameters are defined outside the schema scope (or outside the \"in\" : \"body\")?!?\nCan you please verify that the swagger.json above looks ok?\nAnd my result: :-(\n\n. I am so sorry @lugaru1234 - I didn't read all of your message:\n\"...Please check the swagger dependency. It should include swagger-jersey2-jaxrs:...\"\nI was missing the swagger-jersey2-jaxrs-1.5.3.jar library. After adding this everything is working. Thank you so much for your help - it is much easier now to reuse parameters :-)\nIt might though be easier to find the bug if Swagger displayed an error when the jersey2 jar was missing...\n. Yes - you can close the case. The reason it didn't work was because I forgot to include the swagger-jersey2-jaxrs-1.5.3.jar. My only concern was that I think it should have produced an error instead of wrong output...?\n. I have a similar problem with @ApiParam and InputStream. My endPoints look very much like the ones above - only difference is that my InputStream is not a file. I use Jackson (from fasterxml) to transform (map) the InputStream into an Object (in the following example it maps into a Comparison.class). Here is an example:\n@PUT\n@ApiOperation(value=\"Puts...\",\n        notes = \"Updates...\",\n        response = Comparison.class,\n        responseContainer = \"List\"\n)\n@Consumes( MediaType.APPLICATION_JSON )\n@Produces( MediaType.APPLICATION_JSON )\npublic Response putComparisons(@ApiParam(value=\"The Comparison(s) to update\", required = true) InputStream inputStream) {\n    //Transform the inputStream into a Comparison.class and update the database\n    return ...;\n}\nThis produces the same Swagger documentation as listed in the exmaple provided by @BigSocial - the body parameter is treated like an InputStream (which of course it is)... For documentation purposes I would like to be able to define what the InputStream actually is (in my case a Comparison.class)\nSince we are using an old version of JBoss (which still uses the codehaus version of Jackson) the mapping cannot be done prior to the endPoint call - because the codehaus mapping is done wrong.\nIdeally the above code would look like this:\n@PUT\n@ApiOperation(value=\"Puts...\",\n        notes = \"Updates...\",\n        response = Comparison.class,\n        responseContainer = \"List\"\n)\n@Consumes( MediaType.APPLICATION_JSON )\n@Produces( MediaType.APPLICATION_JSON )\npublic Response putComparisons(@ApiParam(value=\"The Comparison(s) to update\", required = true) Comparison comparison) {\n    //Update the database with the Comparison\n    return ...;\n}\nNotice - InputStream has been replaced with Comparison\nWhat I would like is a \"datatype\" parameter on the @ApiParam:\n@ApiParam(value=\"...\", datatype=\"Comparison.class\", ...)\nIn this way the documentation produced by Swagger would be more correct. The \"datatype\" parameter would always superseed the actual Parameter class\n. ",
    "nknapp": "I won't submit a pull request at the moment. If it would just be about changing a swagger-definition, that would be ok (2 clicks and some editing in the github editor). But cloning a java-project, making the changes and test if the sample is still working. That's too much effort for me at the moment, just to make an example nice.\n. ",
    "arunspec5": "Yes Ron. I have tried with the new version and it is working\nOn Fri, 9 Oct 2015 07:15 Ron notifications@github.com wrote:\n\n@arunspec5 https://github.com/arunspec5 - indeed, please upgrade to the\nlatest version and report back.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1460#issuecomment-146734040\n.\n. \n",
    "wfuertes": "I'm using the follow version\n<dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-jaxrs</artifactId>\n            <version>1.5.3</version>\n        </dependency>\n. Hi @webron, no, I didn't try the 3.1.1-SNAPSHOT, but according @sunandabbytes [https://github.com/kongchen/swagger-maven-plugin/issues/224] it works.\nI will wait for the stable version 3.1.1;\nThanks.\n. ",
    "dherik": "@to-kra , can you provide more details about how resolve the problem?. Detailing my solution.\nDid you try to set the ConfidId and ScannerId in the BeanConfig?\nI have the same issue, but I was using web.xml and add this parameters for my Application:\n    <!-- for api -->\n<init-param>\n    <param-name>swagger.scanner.id</param-name>\n    <param-value>api</param-value>\n</init-param>\n<init-param>\n    <param-name>swagger.config.id</param-name>\n    <param-value>api</param-value>\n</init-param>\n<init-param>\n    <param-name>swagger.use.path.based.config</param-name>\n    <param-value>true</param-value>\n</init-param>\n\n    <!-- for v1 -->\n<init-param>\n    <param-name>swagger.scanner.id</param-name>\n    <param-value>v1</param-value>\n</init-param>\n<init-param>\n    <param-name>swagger.config.id</param-name>\n    <param-value>v1</param-value>\n</init-param>\n<init-param>\n    <param-name>swagger.use.path.based.config</param-name>\n    <param-value>true</param-value>\n</init-param>\n\nThis works because the BaseApiListingResource  class can verify in a static Map if the scan was initialized or not (it's a static attribute) by the configId and scannerId. If this parameters are not setted, the Swagger uses the unique static attribute called initialized.. @andi-livn , I'm glad that work for you! I posted the solution, but after that I thought that your problem is different and I deleted my answer. But you had already received the e-mail from Github :) \nI think I posted the solution in another thread. I'm trying to find where now... lol.\nAll the secret for this works is in BaseApiListingResource (code). By default, the swagger load only one time (see the static initialized variable) and this is the problem that I have: show always the swagger documention from the first endpoint loaded. I can't explain only looking the code your case, in which the second (last) endpoint loaded is mandatory.\nAbout setScannerId  and setConfigId, when you set these variables, Swagger use another mechanism to control what endpoint was already loaded, using the static ConcurrentMap and controlling using a kind of \"key\" for that ConcurrentMap: the scannerId and configId values.\n. ",
    "malinverno": "Hi\nI tried the dherik solution, but seems that the BeanConfig lost parameters like BASEPATH, it'sgenerate a swagger json with not correct url. ",
    "trein": "This issue appears to be relevant still. Can we reopen it? I'm trying to register multiple instances of Swagger and it seems there's no easy solution yet.. Thanks, @frantuma. However, I was looking for a programmatic way to do that (i.e. without the need of xml files). Your examples gave me a nice insight on how to do this though.. @francisdb Sorry about that. Just edited my previous reply.. Hi @TwinHits,\nI'm not sure if this is the optimal approach. I ended up creating a new Servlet that dynamically register Swagger instances according to my needs. Something along the lines:\n```\n@RequiredArgsConstructor\npublic class SwaggerBootstrapServlet extends HttpServlet {\nprivate final Collection<String> apiIds;\n\n@Override\npublic void init(ServletConfig config) throws ServletException {\n    apiIds.forEach(apiId -> new SwaggerContextService()\n        .withServletConfig(config)\n        .withConfigId(apiId)\n        .updateSwagger(createSwagger(apiId))\n    );\n}\n\n}\n```\nThen, I extended BaseApiListingResource to selectively return the swagger instance that has been previously configured.\n```\n@Path(\"/{apiId}/swagger.json\")\npublic class SwaggerApiListingResource extends BaseApiListingResource {\n@Setter\n@Context\nprivate ServletContext context;\n\n@GET\n@Produces({ MediaType.APPLICATION_JSON })\n@ApiOperation(value = \"The swagger definition in JSON \", hidden = true)\npublic Response getListing(@Context ServletConfig config, @PathParam(\"apiId\") String apiId) {\n    Swagger swagger = new SwaggerContextService()\n        .withServletConfig(config)\n        .withConfigId(apiId)\n        .getSwagger();\n\n    if (swagger != null) {\n        return Response.ok().entity(swagger).build();\n    }\n    return Response.status(404).build();\n}\n\n}\n```\n. ",
    "mat-ale": "Hi,\n@frantuma is it possible to do the same from you samples using CXF?\nThanks. Hi,\n@frantuma is it possible to do the same from you samples using CXF?\nThanks. ",
    "TwinHits": "@trein Did you find a way to do this programmatically without xml files?. ",
    "velmuruganvelayutham": "Thanks webron. Is there a way to execute maven goals from gradle Tasks ?. \nOtherwise , I will start converting the above maven-plugin  to gradle-plugin.\n. ",
    "aniruddhadas9": "I also need the same and does not find anything. ",
    "aperinot-orange": "I don't know where you found your \"@ApiDefinition\" annotation, but certainly not in swagger related code.\nSo the only remaining solution, is to write a SwaggerDefinition.\nWe're writing SwaggerDefinition for so much elements is the current version of swagger-annotations, that we start to wonder if swagger-annotations is still the way to go...\n. ",
    "shamseertk": "@Api description attribute was working for me. I dont see any alternative for that. I even tried SwaggerDefinition. Any help would be great.. ",
    "pandyamitesh": "SwaggerDefinition is not working \nTried - \n@SwaggerDefinition(tags = {@Tag(name = \"My Swagger Resource\", description = \"Meaningful stuff in here\")}). ",
    "spyro2000": "Same problem here. Only @Api is working for me, all other annotations are simply ignored when producing the swagger.json/yaml. If you deprecate something, please provide a working alternative.. ",
    "shashi0905": "Yes, and also as per our discussion with the API team following the current scenario, we have decided that our API Publishing tool can handle the task to automatically add the required link at the bottom of the HTML rendering of the SWAGGER documentation loaded.\nBut yes the issue related to external-docs should be looked into.\nWe can close this for now.\n. ",
    "zonorion": "Thanks @webron.\n. ``` json\n{\n  \"id\": String,\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"string\"\n  },\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\"\n    }\n  ],\n  \"status\": \"available\"\n}\nWhen input id is String\npet store swagger result: \n{\n  \"code\": 400,\n  \"type\": \"unknown\",\n  \"message\": \"bad input\"\n}\n```\nHow can i catch same this.\n. @fehguy  You're wellcome. I fixed my problem.\n. Hi all, \nMy code : \n@POST\n    @Path(\"/{userId}/avatar\")\n    @Consumes({ MediaType.MULTIPART_FORM_DATA })\n    @ApiOperation(value = \"Updates users avatar\", notes = \"Provides means to upload new versions of avatar based on username\")\n    @ApiResponses(value = {\n                @ApiResponse(code = 200, message = \"Successful retrieval of users avatar\"),\n                @ApiResponse(code = 404, message = \"User with given username does not exist\"),\n                @ApiResponse(code = 500, message = \"Internal server error\") })\n    public Response updateUsersAvatar(\n            @ApiParam(name = \"userId\", required = true) @PathParam(\"userId\") int userId,\n            @FormDataParam(\"avatar\") InputStream is) {\n        if (userService.updateAvatar(userId, is).equals(Constants.SUCCESS)) {\n            String[] message = new String[] { Constants.SUCCESS };\n            String[] errorMessage = new String[] {};\n            Object[] resource = new Object[] {};\n            return Response.ok()\n                    .entity(new ApiResponseMessage(ApiResponseMessage.SUCCESS, errorMessage, resource, message))\n                    .build();\n        } else {\n            String[] errorMessage = new String[] { Constants.FAIL };\n            String[] message = new String[] {};\n            Object[] resource = new Object[] {};\n            return Response.status(ApiResponseMessage.NO_CONTENT)\n                    .entity(new ApiResponseMessage(ApiResponseMessage.NO_CONTENT, errorMessage, resource, message))\n                    .build();\n        }\n    }\nTell me why i receiver java.lang.NullPointerException\n    at com.sunrise.transport.backend.controller.UserController.updateUsersAvatar(UserController.java:155)?\nThanks very much!\n. I want my api link as: api/login not api/login/{usn}/{password}\nI try more anotation @PathParam, @Query, @Header, @Form but not work :(\n. ",
    "afredlyj": "I use netty + resteasy + swagger, the solution can't not help me.\n. The exception still exist since I change to 1.5.8:\njava\n        <dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-jaxrs</artifactId>\n            <version>1.5.8</version>\n        </dependency>\nand the error log \uff1a\njava\n12:50:08.441 [pool-3-thread-3] INFO  i.s.j.config.SwaggerContextService 69 - Exception caught testing servletConfig. see https://github.com/swagger-api/swagger-core/issues/1691 \n12:50:08.441 [pool-3-thread-3] INFO  i.s.j.config.SwaggerContextService 69 - Exception caught testing servletConfig. see https://github.com/swagger-api/swagger-core/issues/1691 \n12:50:08.441 [pool-3-thread-3] INFO  i.s.j.config.SwaggerContextService 69 - Exception caught testing servletConfig. see https://github.com/swagger-api/swagger-core/issues/1691 \n1\n. I use netty + resteasy + swagger, but still something is wrong when request http://127.0.0.1:12345/swagger.son, the response from server is \uff1a\nRESTEASY003880: Unable to find contextual data of type: javax.servlet.ServletContext\nthis is my spring xml \uff1a\n```\n    \n\n<bean id=\"beanConfig\" class=\"io.swagger.jaxrs.config.BeanConfig\" lazy-init=\"false\">\n    <property name=\"title\" value=\"Swagger Sample App\"/>\n    <property name=\"version\" value=\"1.0.0\" />\n    <property name=\"schemes\" value=\"http\" />\n    <property name=\"host\" value=\"localhost:12345\" />\n    <property name=\"basePath\" value=\"/\"/>\n    <property name=\"resourcePackage\" value=\"io.swagger.resources,afred.javademo.dispatcher\"/>\n    <property name=\"scan\" value=\"true\"/>\n</bean>\n\n```\n. ",
    "andrewtyt": "Finally got it working! swagger-jersey2-jaxrs solves the issue. Thanks a lot!\n. ",
    "rwfaulkner": "Pretty easy to add this feature. I can create a PR for this if it helps.\n. Looks like it was already fixed for 1.5.4. https://github.com/swagger-api/swagger-core/pull/1439\n. ",
    "Download": "It is still not documented though  :(. ",
    "mohitmutha": "1.5.4-SNAPSHOT\nMaster branch\n. Great! Works as expected now.\n. ",
    "ssoltanid": "same problem for me \nversion 1.5.5\n. ",
    "nooruddin": "I have the same issue where swagger won't look for jax-rs annotations in interface.\nHere is the sample code.\nInterface:\n```\npackage com.example.sampleapi;\nimport javax.ws.rs.Consumes;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.QueryParam;\nimport javax.ws.rs.core.MediaType;\nimport javax.ws.rs.core.Response;\n@Path(\"authenticationStuff\")\n@Produces(MediaType.APPLICATION_JSON)\n@Consumes(MediaType.APPLICATION_JSON)\npublic interface ISampleRest {\n@Path(\"getMethod\")\n@GET\npublic Response demoGetMethod(@QueryParam(\"welcomeWho\") final String welcomeWho);\n\n}\n```\nImplementation:\n```\npackage com.example.webapi.sample;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.CacheControl;\nimport javax.ws.rs.core.MediaType;\nimport javax.ws.rs.core.Response;\nimport com.fasterxml.jackson.databind.node.JsonNodeFactory;\nimport com.fasterxml.jackson.databind.node.TextNode;\nimport com.tutelatechnologies.dashboard.DashboardInterfaceEngine.server.sampleapi.ISampleRest;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiParam;\n@Path(\"authenticationStuff\")\n@Produces(MediaType.APPLICATION_JSON)\n@Api(value = \"/authenticationStuff\", tags = \"authenticationStuff\")\npublic class SampleRest implements ISampleRest {\nfinal JsonNodeFactory factory = JsonNodeFactory.instance;\n\n@Override\npublic Response demoGetMethod(@ApiParam(\"welcomeWho\") final String welcomWho) {\n    TextNode textNode = factory.textNode(\"called get method by: \" + welcomWho);\n    return getNoCacheResponseBuilder(Response.Status.OK).entity(textNode).build();\n}\n\nprivate Response.ResponseBuilder getNoCacheResponseBuilder(Response.Status status) {\n    CacheControl cc = new CacheControl();\n    cc.setNoCache(true);\n    cc.setMaxAge(-1);\n    cc.setMustRevalidate(true);\n\n    return Response.status(status).cacheControl(cc);\n}\n\n}\n```\n. I pulled out latest snapshot and plugged it in.  It's seamlessly working now.\nThanks for the update.\n. In jersey, I guess annotation inheritance works for method level.  But one does need to specify the produces and path annotations at implementation class level.  So in that sense, every other annotations are inherited from interface properly now.\n. ",
    "sunlaud": "Upvote this pull request! It really simplifies unobtrusive tuning of documentation generation process.\nAre there any reasons why not to merge?\n. @webron @frantuma guys, are there any reasons why this PR can not be merged? \n. ",
    "iherasymenko": "+1\n. ",
    "botchniaque": "Looking at the PR, seems like a good idea to provide config ID to distinguish between them. What PR is missing, is applying this idea to BeanConfig as well. \n. Looking at the PR, seems like a good idea to provide config ID to distinguish between them. What PR is missing, is applying this idea to BeanConfig as well. \n. I think this issue (2 rest apis in one web.xml) is solved as of 1.5.8. Have a look at that example https://github.com/swagger-api/swagger-samples/tree/master/java/java-jersey-jaxrs-multi\nThe new functionality allows you to set swagger.config.id and swagger.scanner.id as init-params in web.xml to allow swagger to distinguish configurations. \nI am still not sure though whether multiple apis using BeanConfig work.\n. I think this issue (2 rest apis in one web.xml) is solved as of 1.5.8. Have a look at that example https://github.com/swagger-api/swagger-samples/tree/master/java/java-jersey-jaxrs-multi\nThe new functionality allows you to set swagger.config.id and swagger.scanner.id as init-params in web.xml to allow swagger to distinguish configurations. \nI am still not sure though whether multiple apis using BeanConfig work.\n. If you don't want to change your application's mapping you can override Swagger's Resource Mapping - see my answer for more details: http://stackoverflow.com/a/33516888/1680826\n. If you don't want to change your application's mapping you can override Swagger's Resource Mapping - see my answer for more details: http://stackoverflow.com/a/33516888/1680826\n. Ok, I got around 1.5.4 issue by not using the io.swagger.jaxrs.config.BeanConfig which stores config values as statics - instead I use io.swagger.jaxrs.config.DefaultJaxrsConfig configured as servlet in web.xml. \nAs for 1.5.6 - I get swagger.json only for one API (for the one I call first). For others HTTP 404 gets returned. \nI found this commit which declares initialized variable static\nhttps://github.com/swagger-api/swagger-core/commit/e96fc248373c22129d79c394b01509918c39ff67\nI understand the reasons for making it static - in 1.5.4 swagger description is not cached - it's being recalculated for each request (Jersey seems to create new instance of io.swagger.jaxrs.listing.ApiListingResource for each request, therefore initialized variable always returns false). \nBut probably someone did not think of a case where same Swagger code is user for multiple API running in the same JVM. \n. Ok, I got around 1.5.4 issue by not using the io.swagger.jaxrs.config.BeanConfig which stores config values as statics - instead I use io.swagger.jaxrs.config.DefaultJaxrsConfig configured as servlet in web.xml. \nAs for 1.5.6 - I get swagger.json only for one API (for the one I call first). For others HTTP 404 gets returned. \nI found this commit which declares initialized variable static\nhttps://github.com/swagger-api/swagger-core/commit/e96fc248373c22129d79c394b01509918c39ff67\nI understand the reasons for making it static - in 1.5.4 swagger description is not cached - it's being recalculated for each request (Jersey seems to create new instance of io.swagger.jaxrs.listing.ApiListingResource for each request, therefore initialized variable always returns false). \nBut probably someone did not think of a case where same Swagger code is user for multiple API running in the same JVM. \n. ",
    "pixels4nickels": "This is where I am having trouble. I cannot figure out how to do this without web.xml\nDoes anyone know of an example or where there is more information?\n. Is there any workaround for this? Is there any way to exclude packages or something? Servlets using Enterprise Web Objects are invoking this error for me:\njava.lang.IllegalArgumentException: Conflicting setter definitions for property \"userInfo\": com.webobjects.eocontrol.EOObjectStore#setUserInfo(1 params) vs com.webobjects.eocontrol.EOObjectStore#setUserInfo(1 params)\n. ",
    "dsunjka": "@amanteaux This was the only approach that worked for me (without a web.xml) - THANKS A LOT! (just signed up to GitHub to say thank you)\n. @matevarga I couldn't find a relevant example as well. Luckily, in Issue #1514 in the last comment there is an example how to do it without a web.xml (defining own webservices which then use BeanConfig).. ",
    "markvdkerkhof": "Is it? Because this is the generated swagger output when is choosen for output for 'Angular typescript:'\n. Ok, I've moved it to swagger-codegen.\nAngular typescript: basePath always https #1538\n. My issue is about the generated \"Angular typescript\" code from the Swagger yaml-file\n. Oke tnx, I've moved it to the  swagger-codegen project.\nAngular typescript question: $httpParamSerializer #1536\n. I mean to put in the swaggerdefinition some text, which the will put at all generated files at the beginning as comment. Purpose is that developers see that these files are generated so they should not try to adpat them.\n. I moved this to the swagger-codegen project:\nDefault headertext for gererated files #1535\n. ",
    "Inge72": "I have made a small example:\n``` java\npackage com.telenor.no.service.helloworld.rest;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport io.swagger.annotations.Extension;\nimport io.swagger.annotations.ExtensionProperty;\nimport io.swagger.annotations.Info;\nimport io.swagger.annotations.SwaggerDefinition;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.Response;\n@Produces(\"application/json\")\n@Path(\"/rest\")\n@Api(\"hello-world-v1\")\n@SwaggerDefinition(info =\n@Info(title = \"hello-world\",\n        version = \"v1\",\n        extensions = {\n                @Extension(properties = {\n                        @ExtensionProperty(name = \"accessLevel\", value = \"private\"),\n                })}))\npublic class HelloWorldServiceRest {\npublic HelloWorldServiceRest() {\n}\n\n@GET\n@Path(\"/test/\")\n@ApiOperation(value = \"Test\",\n        extensions = {\n                @Extension(properties = {\n                        @ExtensionProperty(name = \"externalPath\", value = \"/hello-world/v1/\")\n                })})\npublic Response getGreeting() {\n    return Response.ok(\"Test\").build();\n}\n\n}\n```\nThis produces this JSON:\njson\n{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"version\": \"Swagger Server\",\n    \"title\": \"\",\n    \"x-accessLevel\": \"private\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"hello-world-v1\"\n    }\n  ],\n  \"schemes\": [\n    \"http\"\n  ],\n  \"paths\": {\n    \"/rest/test\": {\n      \"get\": {\n        \"tags\": [\n          \"hello-world-v1\"\n        ],\n        \"summary\": \"Test\",\n        \"description\": \"\",\n        \"operationId\": \"getGreeting\",\n        \"produces\": [\n          \"application/json\"\n        ],\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    }\n  }\n}\nThe x-accessLevel field is present, but the x-externalPath field is missing.\n. We are running embedded Jetty (version 9.2.10.v20150310) with Jersey 2.22.1 and Jackson 2.6.3.\nI could try to do some debugging, but I am not familiar with the swagger-jaxrs code, could you give me some hints for where in the code I should start looking? Where to set breakpoints?\n. I think I have found the problem. I have a filter defined, and the operation is cloned before the filter is executed. The vendorExtensions are not copied during this clone.\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/main/java/io/swagger/core/filter/SpecFilter.java#L116\n. I have to leave now, but I can do that tomorrow.\n. It's working fine now :-)\n. ",
    "gaalandr": "Hi Iushankin,\nI have updated the requests. Please confirm. \n. I have already imported the coding styles, but I will check and fix.\nThanks!\n. Hi,\ncan you please merge, I have fixed the indentation problems. (the linked ecplise code style does not work, It does not fix the identation issues.)\n. Cool, thank you.\n. Hi,\ncan you please update the SNAPSHOT artifact at https://oss.sonatype.org/content/repositories/snapshots/io/swagger/swagger-core/1.5.5-SNAPSHOT/\nI would need the latest build from swagger-core for the swagger-codegen project. Now my tests are failing. \n..or even better would be a 1.5.5 release. \n. done\n. done\n. I think this is not duplicated\n. done\n. done\n. done\n. java.beans.PropertyDescriptor().getWriteMethod(),\njava.beans.PropertyDescriptor().getReadMethod\nshould handle the problem, and give negative results for non methods. Do you agree?\n. ",
    "YLombardi": "Thanks for your answer.\nI try your solution but with this, it display \"change_time\":\"string\" instead of \"change_time\":\"hh:mm\".\nIs it possible to specify a format for the String ?\n. ",
    "sagar-suri": "Hi Guys,\nI am having a problem related to ModelConverters. My Swagger.json contains a generic class in the expanded form like below:\n\"JsonNode\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"floatingPointNumber\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"valueNode\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"bigInteger\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"textual\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"boolean\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"containerNode\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"missingNode\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"object\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"pojo\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"number\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"integralNumber\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"short\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"int\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"long\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"double\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"bigDecimal\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"float\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"nodeType\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"ARRAY\",\n            \"BINARY\",\n            \"BOOLEAN\",\n            \"MISSING\",\n            \"NULL\",\n            \"NUMBER\",\n            \"OBJECT\",\n            \"POJO\",\n            \"STRING\"\n          ]\n        },\n        \"binary\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"array\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"null\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        }\n      }\n    }\nNow this is definitely what I don't want. In fact what I want is to prevent this specific class (com.fasterxml.jackson.databind.JsonNode) (and any other of my choice) to be ever expanded. So in order to do this I used the inbuilt function provided in the io.swagger.converter.ModelConverters class shown below:\npublic void addClassToSkip(String cls) {\n    LOGGER.warn(\"skipping class \" + cls);\n    this.skippedClasses.add(cls);\n}\nNow having done this I can't seem to figure out where to actually inject the ModelConverters class, as I tried to add it to list of providers along with others but to no result. Can someone please help me with this. I have been looking for the answer for almost 3 days now.. @fehguy @webron \nGuys this is not a singular issue, there is another issue with this class as well: \nhttps://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html. \nSee the screenshots below.\n(https://cloud.githubusercontent.com/assets/19852816/26483708/ffe3a982-420b-11e7-93e3-8f1589b36f89.jpg).\nThese generic classes shouldn't be drilled down or expanded at all. Need input from you.. @fehguy @webron \nGuys this is not a singular issue, there is another issue with this class as well: \nhttps://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html. \nSee the screenshots below.\n(https://cloud.githubusercontent.com/assets/19852816/26483708/ffe3a982-420b-11e7-93e3-8f1589b36f89.jpg).\nThese generic classes shouldn't be drilled down or expanded at all. Need input from you.. Thanks @dantran, which version would that be as I am already on 1.5.8. Also would you know anything about handling the JsonNode Class in any way ?. Thanks @dantran, which version would that be as I am already on 1.5.8. Also would you know anything about handling the JsonNode Class in any way ?. ",
    "rmundkowsky": "Is @ApiParam not well supported?  I noted that it I have one parameter with this annotation, it works, but if I have two parameters with this annotation then I get the error.  If I remove @ApiParam annotations, then seems to load fine.  And I suppose I can likely do a workaround of using one parameter that is an object that contains the two parameters.\n. ",
    "evigeant": "I have a very similar need where I need to both upload and download files in my API and the files are encrypted/decrypted therefore I cannot send Java File objects, I need to work with InputStream. Further, I'm trying to generate the client code and server skeleton from the swagger definition of the API.\nI think the spec needs a way to describe a binary object that shouldn't be handled in memory. In java the corresponding type would be java.io.InputStream.\nI propose this:\nData Types\n| Common Name | type | format | Comments |\n| --- | --- | --- | --- |\n| string | string |  |  |\n| byte | string | byte | base64 encoded characters |\n| binary | string | binary | any sequence of octets |\n| blob | string | blob | a long sequence of octets (treated as a stream) |\n. ",
    "jmdacruz": "What about multiple representations using multipart/related or multipart/mixed? This is useful to upload a binary file which also has metadata, or to upload different representations of the same resource. \n. Thanks, @webron! I'll check https://github.com/OAI/OpenAPI-Specification/issues/555\n. ",
    "HaloFour": "I have a situation similar to that of @HenrikHL .  I am accepting a relatively large blob of JSON containing an array of entities.  I want to be able to accept the request body as an InputStream in Jersey so that I can manually stream through the JSON array and deserialize the elements one-by-one rather than incur the cost of deserialization all up front but I don't see a good way to also have Swagger show that the request body type is the array of typed objects.\n. @fehguy \n... where?\nI'm failing to see anything in io.swagger.jaxrs.Reader that respects any kind of extension for scanning my own annotations during the resource scanning operations.  The only extension I see is ReaderListener which can only post-process the already-generated Swagger model but there's nothing that allows me to then correlate the Operation models back to the parsed Java resource methods.  And aside the top-level Reader::read(Set<Class<?>>) method called by BeanConfig there are no other useful public or protected methods that are called that I could intercept, assuming I would go so far as to overwrite BeanConfig.reader.\n. @fehguy \nYep, looked there too.  The SwaggerExtension::extractOperationMethod at least gets me the Java method, but the ApiOperation instance is immutable (as annotations are) so I couldn't modify the vendor extensions that might be applied there anyway.  But I'm not trying to modify the operation's verb or the list of parameters, I need to add vendor extensions directly to the Operation model.\n. @fehguy Okie dokie, I'll look into doing that.  Thanks.\n. Looks like PR #1513 already covers my use case.\n. Covered by PR #1513 \n. ",
    "RadicalQuiver": "I too have the same problem as @HenrikHL  and @HaloFour . I was looking for the same solution as @HenrikHL as well. he ability to override the datatype via @ApiParam.dataType=Foo.class \nIt would also help solve some problems we have where the resource method needs to consume a concrete class, whereas the actual Resource is best described by an interface.\nI recognize that this is not the same use case as the original one, so would we be better off creating a separate issue for this use case ?. I to am running into this same problem when I attempt to workaround the InputStream issue as I mentionned in 1531. In fact the proposed solution there, which I prefer, is to allow ApiParam to specify dataType= to override the datatype of the actual parameter. Accepting a class is critical for us, because we're in an OSGI environment and Class.forName() or even Thread.getContextClassloader().findClass() doesn't work for us as the class might be in neither of the related classloaders.\nI'm about to attempt the change on my own. . Hey @pjfanning  - I noticed that you've already started on this at https://github.com/pjfanning/swagger-core/commit/c25171974c19ae256918eda7c95ca2ea398305fb\nIs it close ?\nN00b here, so if there's another forum where we should be talking about this let me know.. ",
    "paraglohiya": "Thanks ! Unfortunately I do not have an option to use another Model or a Wrapper object. Is there any other way we can do it ? Like for example adding a flag in APIModelProperty or writing a custom converter ? \n. The application when deployed on Websphere works fine. I can make calls to\nmy rest services without any issues. In Tomcat I am able to use swagger\nwithout any issues.\nBelow is the screen shot from web sphere.\nS Data Service API\nExplore http://localhost:9080/oysinvrecmddev/rmds/#\n500 : Error 500: javax.servlet.ServletException: SRVE0207E: Uncaught\ninitialization exception created by servlet\nhttp://localhost:9080/oysinvrecmddev/rmds/api/swagger.json\nOn Tue, Jan 26, 2016 at 8:54 PM, Ron notifications@github.com wrote:\n\nAre you certain that error relates to swagger-core? Nothing in the\nstacktrace indicates it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1630#issuecomment-175338691\n.\n\n\nThanks and Regards,\nParag Lohiya\n. My bad.\nThe deployment of application is successful in Web sphere. I am able to hit\nmy rest url and receive corresponding responses.\nMy issue is : When application tries to load swagger.json it gives an\nexception in console with above stack trace and on browser I get the below\nerror message.\n500 : Error 500: javax.servlet.ServletException: SRVE0207E: Uncaught\ninitialization exception created by servlet\nhttp://localhost:9080/oysinvrecmddev/rmds/api/swagger.json\nOn Tomcat other than the swagger.json is generated properly and I am able\nto use it to test my services.\nHope this helps! If you want i can do a team viewer session so show the\nerror.\nOn Tue, Jan 26, 2016 at 9:40 PM, Ron notifications@github.com wrote:\n\nYou can't attach images in mail in Github.\nI'm still not following. On one hand, you say the deployment fails with\nthe exception in the original message, and on the second message you say it\nis being deployed just fine.\nPlease try to provide the exact steps you follow up to the point you get\nthe exception.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1630#issuecomment-175355100\n.\n\n\nThanks and Regards,\nParag Lohiya\n. Yes I know its very frustrating :(\nversion\n1.6\n5.0.6.Final\n1.0.0.Final\n4.2.4.RELEASE\n1.7.13\n1.1.3\n2.6\n2.6.4\n2.2.0\n2.13.3\n4.12\n1.9.5\n1.8.7\n1.5.6\n2.9.1\n1.4\n5.0.0.GA\nWebshpere version 8.0.0.5\nI would like to thank you guys for coming with with such a wonderful\nframework. This has helped my team a lot and has drastically reduced our\ndevelopment time a lot.\nOn Tue, Jan 26, 2016 at 10:18 PM, Ron notifications@github.com wrote:\n\nThanks for the details, it clarifies things.\nSo it does looks like a dependency conflict issue, which unfortunately\nseems to be common with WAS.\nTo be sure, which JAX-RS implementation do you use and which version of it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1630#issuecomment-175365191\n.\n\n\nThanks and Regards,\nParag Lohiya\n. I am using Jax-Rs 2.0 and has class loader already set to app lib first\nthat's the reason my app is working. Also if you see i have jpa 2.1 which\nis not supported by WAS 8 but all my application is working perfectly with\nfeatures from those files.\nBut how come its working fine in Tomcat? we have default JDK 1.6 set for\nall our development machines.\nOn Tue, Jan 26, 2016 at 10:40 PM, Ron notifications@github.com wrote:\n\nThanks for the feedback.\nI don't recall why, but officially swagger-core requires Java 7 so that's\nnot good.\nBut! you mentioned that you made sure that JAX-RS 1.1 is excluded from the\npom, however, WAS does come with e default JAX-RS implementation (I believe\nit's Wink in WAS8) and that may still pull in JAX-RS 1.1. In that case,\nyou'd have to play with the classloader settings in WAS to make sure it\nuses the deployed app libraries first. Another thing you can check is the\nshared library folder in WAS as it may contain the dependency that causes\nthe issue. I don't have access to WAS myself, so I can't check that\ndirectly.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1630#issuecomment-175373895\n.\n\n\nThanks and Regards,\nParag Lohiya\n. I am trying this application on WAS 8.5.x.x Liberty (Developer version).\nits free for development version and requires very less effort to setup.\nhttps://developer.ibm.com/assets/wasdev/#asset/runtimes-8.5.5-wlp-runtime\nThis is Java EE 6 certified.\njava -jar wlp-runtime-8.5.5.8.jar\nThis will ask you to extract the jar and will create a wlp folder.\n./bin/server create \n./bin/server start \n./bin/server stop \nYou can than deploy the application using eclipse or IntelliJ\nPlease find the list of jar in lib folder.\nbootstrap-agent.jar\ncom.ibm.crypto.ibmkeycert_1.0.11.jar\ncom.ibm.json4j_1.0.11.jar\ncom.ibm.rls.jdbc_1.0.11.jar\ncom.ibm.tx.jta_1.0.11.jar\ncom.ibm.tx.ltc_1.0.11.jar\ncom.ibm.tx.util_1.0.11.jar\ncom.ibm.webservices.handler_1.0.11.jar\ncom.ibm.websphere.collective_1.3.11.jar\ncom.ibm.websphere.collective.plugins_1.0.11.jar\ncom.ibm.websphere.collective.singleton_1.0.11.jar\ncom.ibm.websphere.filetransfer_1.0.11.jar\ncom.ibm.websphere.jsonsupport_1.0.11.jar\ncom.ibm.websphere.rest.api.discovery_1.0.11.jar\ncom.ibm.websphere.rest.handler_1.0.11.jar\ncom.ibm.websphere.security_1.0.11.jar\ncom.ibm.websphere.security.impl_1.0.11.jar\ncom.ibm.websphere.security.wim.base_1.0.11.jar\ncom.ibm.ws.adaptable.module_1.0.11.jar\ncom.ibm.ws.anno_1.0.11.jar\ncom.ibm.ws.app.manager_1.1.11.jar\ncom.ibm.ws.app.manager.ejb_1.0.11.jar\ncom.ibm.ws.app.manager.esa_1.0.11.jar\ncom.ibm.ws.app.manager.lifecycle_1.0.11.jar\ncom.ibm.ws.app.manager.module_1.0.11.jar\ncom.ibm.ws.app.manager.ready_1.0.11.jar\ncom.ibm.ws.app.manager.wab_1.0.11.jar\ncom.ibm.ws.app.manager.war_1.0.11.jar\ncom.ibm.ws.artifact_1.0.11.jar\ncom.ibm.ws.artifact.bundle_1.0.11.jar\ncom.ibm.ws.artifact.equinox.module_1.0.11.jar\ncom.ibm.ws.artifact.file_1.0.11.jar\ncom.ibm.ws.artifact.loose_1.0.11.jar\ncom.ibm.ws.artifact.overlay_1.0.11.jar\ncom.ibm.ws.artifact.url_1.0.11.jar\ncom.ibm.ws.artifact.zip_1.0.11.jar\ncom.ibm.ws.beanvalidation_1.0.11.jar\ncom.ibm.ws.cdi-1.2.runtime.extension_1.0.11.jar\ncom.ibm.ws.cds.3.0.1_1.0.11.jar\ncom.ibm.ws.channel.ssl_1.0.11.jar\ncom.ibm.ws.channelfw_1.0.11.jar\ncom.ibm.ws.classloader.context_1.0.11.jar\ncom.ibm.ws.classloading_1.1.11.jar\ncom.ibm.ws.classloading.configuration_1.0.11.jar\ncom.ibm.ws.collective.member_1.1.11.jar\ncom.ibm.ws.collective.repository.client_1.1.11.jar\ncom.ibm.ws.collective.routing.member_1.0.11.jar\ncom.ibm.ws.collective.singleton_1.0.11.jar\ncom.ibm.ws.collective.utility_1.0.11.jar\ncom.ibm.ws.compat_1.0.11.jar\ncom.ibm.ws.concurrent_1.0.11.jar\ncom.ibm.ws.config_1.0.11.jar\ncom.ibm.ws.config.ext_1.0.jar\ncom.ibm.ws.config.schemagen_1.0.11.jar\ncom.ibm.ws.config.server.schemagen_1.0.11.jar\ncom.ibm.ws.config.utility_1.0.11.jar\ncom.ibm.ws.connectionpool.monitor_1.0.11.jar\ncom.ibm.ws.container.service_1.0.11.jar\ncom.ibm.ws.context_1.0.11.jar\ncom.ibm.ws.crypto.certificateutil_1.0.11.jar\ncom.ibm.ws.crypto.passwordutil_1.0.11.jar\ncom.ibm.ws.diagnostics_1.0.11.jar\ncom.ibm.ws.dynacache_1.0.11.jar\ncom.ibm.ws.dynacache.monitor_1.0.11.jar\ncom.ibm.ws.dynacache.web_1.0.11.jar\ncom.ibm.ws.dynamic.bundle_1.0.11.jar\ncom.ibm.ws.eba.app.runtime.services_1.0.11.jar\ncom.ibm.ws.eba.blueprint.extensions.interceptors.1.0_1.0.11.jar\ncom.ibm.ws.eba.blueprint.transform_1.0.11.jar\ncom.ibm.ws.eba.bundle.repository_1.0.11.jar\ncom.ibm.ws.eba.fidelity_1.0.11.jar\ncom.ibm.ws.eba.jpa.container.annotations_1.0.11.jar\ncom.ibm.ws.eba.jpa.lookup_1.0.11.jar\ncom.ibm.ws.eba.jpa.wab.integration_1.0.11.jar\ncom.ibm.ws.eba.proxy.control_1.0.11.jar\ncom.ibm.ws.eba.tx.7.0_1.0.11.jar\ncom.ibm.ws.eba.wab.integrator_1.0.11.jar\ncom.ibm.ws.ejbcontainer_1.0.11.jar\ncom.ibm.ws.ejbcontainer.jpa_1.0.11.jar\ncom.ibm.ws.ejbcontainer.security_1.0.11.jar\ncom.ibm.ws.ejbcontainer.session_1.0.11.jar\ncom.ibm.ws.ejbcontainer.war_1.0.11.jar\ncom.ibm.ws.esapi_1.0.11.jar\ncom.ibm.ws.event_1.0.11.jar\ncom.ibm.ws.filetransfer_1.0.11.jar\ncom.ibm.ws.filetransfer.routing.archiveExpander_1.0.11.jar\ncom.ibm.ws.gson.2.2.4_1.0.11.jar\ncom.ibm.ws.injection_1.0.11.jar\ncom.ibm.ws.install_1.0.11.jar\ncom.ibm.ws.install.utility_1.0.11.jar\ncom.ibm.ws.javaee.dd_1.0.11.jar\ncom.ibm.ws.javaee.dd.common_1.1.11.jar\ncom.ibm.ws.javaee.dd.ejb_1.1.11.jar\ncom.ibm.ws.javaee.ddmodel_1.0.11.jar\ncom.ibm.ws.javaee.metadata.context_1.0.11.jar\ncom.ibm.ws.javaee.metadata.context.ejb_1.0.11.jar\ncom.ibm.ws.javaee.persistence.api.2.1_1.0.11.jar\ncom.ibm.ws.javaee.platform.defaultresource_1.0.11.jar\ncom.ibm.ws.javaee.version_1.0.11.jar\ncom.ibm.ws.javassist.3.13.0_1.0.11.jar\ncom.ibm.ws.jaxrpc.stub_1.1.11.jar\ncom.ibm.ws.jaxrs_1.0.11.jar\ncom.ibm.ws.jaxrs.cdi_1.0.11.jar\ncom.ibm.ws.jaxrs.ejb_1.0.11.jar\ncom.ibm.ws.jca.cm_1.0.11.jar\ncom.ibm.ws.jdbc_1.0.11.jar\ncom.ibm.ws.jdbc40_1.0.11.jar\ncom.ibm.ws.jdbc41_1.0.11.jar\ncom.ibm.ws.jmx_1.0.11.jar\ncom.ibm.ws.jmx.connector.client.rest_1.0.11.jar\ncom.ibm.ws.jmx.connector.local_1.0.11.jar\ncom.ibm.ws.jmx.connector.server.rest_1.0.11.jar\ncom.ibm.ws.jmx.request_1.0.11.jar\ncom.ibm.ws.jndi_1.0.11.jar\ncom.ibm.ws.jndi.url.contexts_1.0.11.jar\ncom.ibm.ws.joda-time.1.6.2_1.0.11.jar\ncom.ibm.ws.jpa_1.2.11.jar\ncom.ibm.ws.jpa.container_1.0.11.jar\ncom.ibm.ws.jpa.container.beanvalidation_1.0.11.jar\ncom.ibm.ws.jpa.container.eclipselink_1.0.11.jar\ncom.ibm.ws.jpa.container.v21_1.0.11.jar\ncom.ibm.ws.jpa.container.wsjpa_1.0.11.jar\ncom.ibm.ws.jsf_1.0.11.jar\ncom.ibm.ws.jsp_1.0.11.jar\ncom.ibm.ws.jsp-2.2org.apache.jasper_1.0.11.jar\ncom.ibm.ws.jsp.factories.2.2_1.0.11.jar\ncom.ibm.ws.kernel.boot_1.0.11.jar\ncom.ibm.ws.kernel.cmdline_1.0.11.jar\ncom.ibm.ws.kernel.equinox.module_1.0.11.jar\ncom.ibm.ws.kernel.feature_1.0.11.jar\ncom.ibm.ws.kernel.filemonitor_1.0.11.jar\ncom.ibm.ws.kernel.metatype.helper_1.0.11.jar\ncom.ibm.ws.kernel.service_1.3.11.jar\ncom.ibm.ws.kernel.service.location_1.1.11.jar\ncom.ibm.ws.logging_1.0.11.jar\ncom.ibm.ws.logging.hpel_1.0.11.jar\ncom.ibm.ws.logging.hpel.osgi_1.0.11.jar\ncom.ibm.ws.logging.osgi_1.0.11.jar\ncom.ibm.ws.managedbeans_1.0.11.jar\ncom.ibm.ws.managedobject_1.0.11.jar\ncom.ibm.ws.management.security_1.0.11.jar\ncom.ibm.ws.massive_1.0.11.jar\ncom.ibm.ws.massive.resolver_1.0.11.jar\ncom.ibm.ws.massive.sa.client_1.0.11.jar\ncom.ibm.ws.monitor_1.0.11.jar\ncom.ibm.ws.net.sourceforge.serp.1.15.1_1.0.11.jar\ncom.ibm.ws.openwebbeans-ee-common.1.1.6_1.0.11.jar\ncom.ibm.ws.openwebbeans-ee.1.1.6_1.0.11.jar\ncom.ibm.ws.openwebbeans-ejb.1.1.6_1.0.11.jar\ncom.ibm.ws.openwebbeans-impl.1.1.6_1.0.11.jar\ncom.ibm.ws.openwebbeans-jsf.1.1.6_1.0.11.jar\ncom.ibm.ws.openwebbeans-naming.1.1.6_1.0.11.jar\ncom.ibm.ws.openwebbeans-spi.1.1.6_1.0.11.jar\ncom.ibm.ws.openwebbeans-transaction.1.1.6_1.0.11.jar\ncom.ibm.ws.openwebbeans-validation.1.1.6_1.0.11.jar\ncom.ibm.ws.openwebbeans-web.1.1.6_1.0.11.jar\ncom.ibm.ws.org.apache.aries.application.api.1.0.1_1.1.11.jar\ncom.ibm.ws.org.apache.aries.application.default.local.platform.1.0.1_1.1.11.jar\ncom.ibm.ws.org.apache.aries.application.modeller.1.0.1_1.1.11.jar\ncom.ibm.ws.org.apache.aries.application.resolver.obr.1.0.1_1.1.11.jar\ncom.ibm.ws.org.apache.aries.application.utils.1.0.1_1.1.11.jar\ncom.ibm.ws.org.apache.aries.blueprint.1.3.0_1.0.11.jar\ncom.ibm.ws.org.apache.aries.jmx.api.1.1.2_1.1.11.jar\ncom.ibm.ws.org.apache.aries.jmx.core.whiteboard.1.1.2_1.1.11.jar\ncom.ibm.ws.org.apache.aries.jndi.api.1.1.1_1.1.11.jar\ncom.ibm.ws.org.apache.aries.jndi.core.1.0.3_1.1.11.jar\ncom.ibm.ws.org.apache.aries.jndi.url.1.1.1_1.1.11.jar\ncom.ibm.ws.org.apache.aries.jpa.api.1.0.3_1.1.11.jar\ncom.ibm.ws.org.apache.aries.jpa.blueprint.aries.1.0.5_1.1.11.jar\ncom.ibm.ws.org.apache.aries.jpa.container.1.0.3_1.1.11.jar\ncom.ibm.ws.org.apache.aries.jpa.container.context.1.0.5_1.1.11.jar\ncom.ibm.ws.org.apache.aries.proxy.1.0.2_1.1.11.jar\ncom.ibm.ws.org.apache.aries.quiesce.api.1.0.1_1.1.11.jar\ncom.ibm.ws.org.apache.aries.subsystem.api.1.1.1_1.0.11.jar\ncom.ibm.ws.org.apache.aries.subsystem.core.1.2.1_1.0.11.jar\ncom.ibm.ws.org.apache.aries.subsystem.obr.1.0.2_1.0.11.jar\ncom.ibm.ws.org.apache.aries.util.1.1.1_1.0.11.jar\ncom.ibm.ws.org.apache.bval.0.4.1_1.0.11.jar\ncom.ibm.ws.org.apache.commons.beanutils.1.8.3_1.0.11.jar\ncom.ibm.ws.org.apache.commons.codec.1.4_1.0.11.jar\ncom.ibm.ws.org.apache.commons.collections.3.2.1_1.0.11.jar\ncom.ibm.ws.org.apache.commons.discovery.0.2_1.0.11.jar\ncom.ibm.ws.org.apache.commons.fileupload.1.2.1_1.0.11.jar\ncom.ibm.ws.org.apache.commons.http.4.3_1.0.11.jar\ncom.ibm.ws.org.apache.commons.io.1.4_1.0.11.jar\ncom.ibm.ws.org.apache.commons.lang.2.4_1.0.11.jar\ncom.ibm.ws.org.apache.commons.lang3.3.0.1_1.0.11.jar\ncom.ibm.ws.org.apache.commons.logging.1.0.3_1.0.11.jar\ncom.ibm.ws.org.apache.commons.pool.1.5.4_1.0.11.jar\ncom.ibm.ws.org.apache.felix.bundlerepository.1.6.7_1.0.11.jar\ncom.ibm.ws.org.apache.felix.gogo.command.0.10.0_1.0.11.jar\ncom.ibm.ws.org.apache.felix.gogo.runtime.0.10.0_1.0.11.jar\ncom.ibm.ws.org.apache.felix.gogo.shell.0.10.0_1.0.11.jar\ncom.ibm.ws.org.apache.felix.scr.2.0.3_1.0.11.jar\ncom.ibm.ws.org.apache.jasper.el.2.2_1.0.11.jar\ncom.ibm.ws.org.eclipse.equinox.console.1.1.100_1.0.11.jar\ncom.ibm.ws.org.eclipse.equinox.coordinator.1.3.100_1.0.11.jar\ncom.ibm.ws.org.eclipse.equinox.metatype.1.4.100_1.0.11.jar\ncom.ibm.ws.org.eclipse.equinox.region.1.3.0_1.0.11.jar\ncom.ibm.ws.org.eclipse.jdt.core.3.10.0.v20140902-0626_1.0.11.jar\ncom.ibm.ws.org.objectweb.asm.all.5.0_1.0.11.jar\ncom.ibm.ws.product.utility_1.0.11.jar\ncom.ibm.ws.recoverylog_1.0.11.jar\ncom.ibm.ws.request.probe.jdbc_1.0.11.jar\ncom.ibm.ws.request.probe.servlet_1.0.11.jar\ncom.ibm.ws.request.probes_1.0.11.jar\ncom.ibm.ws.resource_1.0.11.jar\ncom.ibm.ws.rest.handler_1.0.11.jar\ncom.ibm.ws.runtime.update_1.0.11.jar\ncom.ibm.ws.security_1.0.11.jar\ncom.ibm.ws.security.appbnd_1.0.11.jar\ncom.ibm.ws.security.authentication_1.0.11.jar\ncom.ibm.ws.security.authentication.builtin_1.0.11.jar\ncom.ibm.ws.security.authentication.tai_1.0.11.jar\ncom.ibm.ws.security.authorization_1.0.11.jar\ncom.ibm.ws.security.authorization.builtin_1.0.11.jar\ncom.ibm.ws.security.context_1.0.11.jar\ncom.ibm.ws.security.credentials_1.0.11.jar\ncom.ibm.ws.security.credentials.ssotoken_1.0.11.jar\ncom.ibm.ws.security.credentials.wscred_1.0.11.jar\ncom.ibm.ws.security.jaas.common_1.0.11.jar\ncom.ibm.ws.security.java2sec_1.0.11.jar\ncom.ibm.ws.security.jca_1.0.11.jar\ncom.ibm.ws.security.oauth20_1.1.11.jar\ncom.ibm.ws.security.quickstart_1.0.11.jar\ncom.ibm.ws.security.ready.service_1.0.11.jar\ncom.ibm.ws.security.registry_1.0.11.jar\ncom.ibm.ws.security.registry.basic_1.0.11.jar\ncom.ibm.ws.security.token_1.0.11.jar\ncom.ibm.ws.security.token.ltpa_1.0.11.jar\ncom.ibm.ws.security.utility_1.0.11.jar\ncom.ibm.ws.security.wim.adapter.ldap_1.0.11.jar\ncom.ibm.ws.security.wim.core_1.0.11.jar\ncom.ibm.ws.security.wim.registry_1.0.11.jar\ncom.ibm.ws.serialization_1.0.11.jar\ncom.ibm.ws.serverstatus_1.0.11.jar\ncom.ibm.ws.session_1.0.11.jar\ncom.ibm.ws.session.db_1.0.11.jar\ncom.ibm.ws.session.monitor_1.0.11.jar\ncom.ibm.ws.slf4j-api.1.7.7_1.0.11.jar\ncom.ibm.ws.slf4j-jdk14.1.7.7_1.0.11.jar\ncom.ibm.ws.ssl_1.0.11.jar\ncom.ibm.ws.threading_1.1.11.jar\ncom.ibm.ws.timedoperations_1.0.11.jar\ncom.ibm.ws.timedoperations.jdbc_1.0.11.jar\ncom.ibm.ws.timer_1.0.11.jar\ncom.ibm.ws.transaction_1.0.11.jar\ncom.ibm.ws.transaction.cdi_1.0.11.jar\ncom.ibm.ws.transaction.context_1.0.11.jar\ncom.ibm.ws.transport.http_1.0.11.jar\ncom.ibm.ws.tx.embeddable_1.0.11.jar\ncom.ibm.ws.tx.jta.extensions_1.0.11.jar\ncom.ibm.ws.tx.zos_1.0.11.jar\ncom.ibm.ws.ui_1.0.11.jar\ncom.ibm.ws.ui.tool.explore_1.0.11.jar\ncom.ibm.ws.ui.tool.serverConfig_1.0.11.jar\ncom.ibm.ws.webcontainer_1.1.11.jar\ncom.ibm.ws.webcontainer.monitor_1.0.11.jar\ncom.ibm.ws.webcontainer.security_1.0.11.jar\ncom.ibm.ws.webcontainer.security.admin_1.0.11.jar\ncom.ibm.ws.webcontainer.security.app_1.0.11.jar\ncom.ibm.ws.webcontainer.security.feature_1.0.11.jar\ncom.ibm.ws.webcontainer30_1.0.11.jar\ncom.ibm.ws.zos.command.processing_1.0.11.jar\ncom.ibm.ws.zos.core_1.0.11.jar\ncom.ibm.ws.zos.diagnostics_1.0.11.jar\ncom.ibm.ws.zos.logging_1.0.11.jar\nOn Tue, Jan 26, 2016 at 11:19 PM, Ron notifications@github.com wrote:\n\nYeah, that's why I don't think it's a Java 6 issue, but at the same\ntime, it's not a swagger-core issue because indeed it works on Tomcat. It\njust has to be a dependency issue, but I'm not sure how to investigate it\nfurther. You're using the latest swagger-core version (kudos) which\nresolves the issue there was with the Guava dependency on WAS, but other\nthan that, I don't know. Can you perhaps share the list of libraries in the\nshared lib folder of WAS?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1630#issuecomment-175382997\n.\n\n\nThanks and Regards,\nParag Lohiya\n. ",
    "davidvc": "I am not sure which one we are using.  We are basically installing a\nservlet that delivers the Swagger JSON as a separate endpoint on a Tomcat\nweb application, using JerseyJaxrsConfig.  We annotate all of our REST\nendpoints using annotations like @ApiParam and @ApiOperation, and magic\nhappens when we invoke the JerseyJaxrs endpoint below...\nIs there a different way we should be doing this?\n\nJersey2Config\ncom.wordnik.swagger.jersey.config.JerseyJaxrsConfig\n\napi.version\n1.0.0\n\n\nswagger.api.basepath\n${planservice_url}\n\n2\n\nOn Mon, Nov 2, 2015 at 4:02 PM Tony Tam notifications@github.com wrote:\n\nWell I'm quite sure that we are generating valid swagger in our projects.\nFrom what your posting, it looks to me like you may be using the Swagger\nPOJOs from the swagger-models project, but not the SwaggerSerializer class?\nThat's a requirement to turn them into JSON. Please post back here if I'm\nmisreading your intent.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1533#issuecomment-153197551\n.\n. I do see that we have the swagger-models jar in the classpath.  How would we go about using SwaggerSerializer with our servlet?\n. We are following the instructions here:\n\nhttps://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup-1.5\nAnd it is generating the output I described above. \nThis sure seems like a bug because the page above specifically says it is generating Swagger 2.0 output, but in the output from the /swagger.json endpoint, there are fields being added that are not part of the Swagger 2.0 JSON schema.\nSorry if I'm missing something\n. Here in the Swagger 2.0 spec referred to from\nhttps://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup-1.5\nIt has the Info object like this:\nhttps://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#infoObject\nNote there is no field called vendorExtensions, but that is included in the output from the /swagger.json endpoint\nAnd here is the pathItem object\nhttps://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#pathItemObject\nAnd there is no reference to the \"empty\" or \"operations\" fields which show up in the output from the /swagger.json endpoint\n. OK, so this is very strange.  I just pulled down the jersey-jaxrs sample from here\nhttps://github.com/swagger-api/swagger-samples/tree/master/java/java-jersey2\nBuilt it and ran it, and it is producing what appears to be compliant json.\nSadly, swagger-diff still fails with a stupid error\n\"Swagger version swagger is not currently supported\"\nBut now I need to figure out why your example generates different JSON than ours, when the configuration looks to be exactly the same and we are just using the standard annotations...  Clearly some digging is necessary.\n. Yes, thanks, I saw those com.wordnik references just 20 minutes ago and\nfixed them and was sure that would do it, and sadly still got the weird\nresults, even though your sample doesn't generate them.  I have peered\nclosely at the sample code and XML files compared it with my own and can\nfind no difference.  But clearly a difference exists or I wouldn't get\ndifferent output.\nI agree swagger-diff is not an official compliance tester.  But I want to\nuse it :( and so far have been unable to because of the JSON output I'm\ngetting.\nI'll report back any findings\nOn Mon, Nov 2, 2015 at 7:41 PM Tony Tam notifications@github.com wrote:\n\nI'm happy to help, but (a) swagger-diff is not the official way to\nvalidate swagger compliance and (b) you're not following those instructions.\nFirst off, the dependency listed here:\nhttps://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup-1.5#concrete-class-selection\nIs quite different from what you're using. com.wordnik was deprecated\nover a year ago. Please use this as your dependency:\n\nio.swagger\nswagger-jersey2-jaxrs\n1.5.4\n\nThis is the latest release version of swagger-core.\nNext, your web.xml here:\ncom.wordnik.swagger.jersey.config.JerseyJaxrsConfig\nIs pointing to the older version of swagger (note the com.wordnik). Use\nthe proper package, which is shown here:\nhttps://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup-1.5#package-scanning--concrete-class-selection\nFinally, there are samples that do all this for you, which you'll probably\nhave an easier time following. For jersey2:\nhttps://github.com/swagger-api/swagger-samples/tree/master/java/java-jersey2\nI know it can be frustrating getting things working, but if our own tools\ncouldn't validate against our own specification, something would really be\nwrong.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1533#issuecomment-153232321\n.\n. Well, I gave it another try after carefully making sure that the two XML files looked the same.  So this time I had success!  \n\nswagger-diff is still barfing but I think that's a bug in swagger-diff.  Your JSON looks great now.\nThanks for your help (and patience :)).\n. Just so you know, the root cause of the bug was a subtle difference you\nprobably want to document in your migration guide:\nIn the old Swagger you included com.wordnik.swagger.jersey.listing\nIn the new 1.5.4 version of Swagger, you need to include\nio.swagger.jaxrs.listing\nNote the switch from \"jersey\" to \"jaxrs\"\nThat made all the difference.\nAlso, as a note, when a libraries has an incompatible change so that\nexisting compiled code will no longer work (such as changing the package\nnames), that should be considered a major version change, not a patch\nversion change (e.g. from 1.5.3 to 1.5.4).\nSee http://semver.org:\nGiven a version number MAJOR.MINOR.PATCH, increment the:\n1. MAJOR version when you make incompatible API changes,\n2. MINOR version when you add functionality in a backwards-compatible\n   manner, and\n3. PATCH version when you make backwards-compatible bug fixes.\nThanks!\nDavid\nOn Tue, Nov 3, 2015 at 3:05 PM Ron notifications@github.com wrote:\n\nClosed #1533 https://github.com/swagger-api/swagger-core/issues/1533.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1533#event-453814943.\n. Thanks.  I must have missed that, sorry aboutthat.\n\nIt's weird we were using 1.5.3 with the wordnik package and it was working\nfine :(\n1.5.0 is a minor version.  2.0 would be a major version.\nOn Tue, Nov 3, 2015 at 4:28 PM Ron notifications@github.com wrote:\n\nThanks for the feedback. I believe what you mentioned here is covered by\nhttps://github.com/swagger-api/swagger-core/wiki/1.3--1.5-Migration#jax-rs-providers\n.\nAs for the versioning, that change was introduced in 1.5.0 not 1.5.4, a\nmajor version.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1533#issuecomment-153532742\n.\n. LOL yes spilt milk.  As a user though it would reduce surprises.  Thanks\nfor all you do!!\n\nOn Wed, Nov 4, 2015 at 4:40 PM Tony Tam notifications@github.com wrote:\n\nWe probably could have done better with the versioning for 1.5.x but as\nron said, this change is history.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1533#issuecomment-153916472\n.\n. Never mind I didn't want to submit this, my apologies, still learning github\n. Thanks for following up!\n\nI resolved it by providing our own custom ModelResolver.  That part was\neasy.  But it meant I had to upgrade our Swagger implementation, and that\npart was hard.\nWhile I have your ear, we seem to have a problem where swagger-core does\nnot accept extensions.  Is that on the roadmap?\nThanks!\nDavid\nOn Fri, Jan 15, 2016 at 11:51 PM Ron notifications@github.com wrote:\n\nApologies for the delayed reply. Have you managed to resolve the issue in\nthe meantime or should we try and investigate it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1581#issuecomment-172166309\n.\n. Sorry, not upgrade Swagger - we had to upgrade Jackson\n\nOn Sat, Jan 16, 2016 at 1:35 PM David Van Couvering david@vancouvering.com\nwrote:\n\nThanks for following up!\nI resolved it by providing our own custom ModelResolver.  That part was\neasy.  But it meant I had to upgrade our Swagger implementation, and that\npart was hard.\nWhile I have your ear, we seem to have a problem where swagger-core does\nnot accept extensions.  Is that on the roadmap?\nThanks!\nDavid\nOn Fri, Jan 15, 2016 at 11:51 PM Ron notifications@github.com wrote:\n\nApologies for the delayed reply. Have you managed to resolve the issue in\nthe meantime or should we try and investigate it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1581#issuecomment-172166309\n.\n. Thanks for the quick response!\n\n\nPerhaps we're talking about the same thing, but I'm not sure.  Sorry if I\nwasn't clear.\nThe Swagger spec supports extensions --\nhttp://swagger.io/specification/#vendorExtensions\nBut when we tried to add an extension to one of our Swagger-annotated\nendpoints, it fails.  Details at\nhttps://github.com/civisanalytics/swagger-diff/issues/20\nI can open a new bug if that would help, but just wondering what your\nthoughts are first.\nThanks!\nDavid\nOn Sat, Jan 16, 2016 at 1:51 PM Tony Tam notifications@github.com wrote:\n\n@davidvc https://github.com/davidvc I think we have a pretty good\nextension model now. Have you seen how the validations extension\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-hibernate-validations/src/main/java/io/swagger/validator/BeanValidator.java\nworks?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1581#issuecomment-172257075\n.\n. \n",
    "bojanantonovic": "Can confirm: problem is now fixed. Thanks!\n. ",
    "danialfaridsada": "Is there any annotation support for minItems, maxItems, etc?. Is there any annotation support for minItems, maxItems, etc?. ",
    "webtran": "I thought so too but I couldn't figure out.\nHere is a failing case from a debug session; m1 and m2 are the variables in org.glassfish.jersey.server.model.RuntimeResourceModelValidator.checkMethods(RuntimeResource)\n```\nm1\n[ResourceMethod{httpMethod=GET, consumedTypes=[], \nproducedTypes=[application/json, application/yaml], suspended=false, suspendTimeout=0, suspendTimeoutUnit=MILLISECONDS, \ninvocable=Invocable{handler=ClassBasedMethodHandler{handlerClass=class io.swagger.jaxrs.listing.ApiListingResource, handlerConstructors=[org.glassfish.jersey.server.model.HandlerConstructor@65e7aae0]}, \ndefinitionMethod=public javax.ws.rs.core.Response io.swagger.jaxrs.listing.ApiListingResource.getListing(javax.ws.rs.core.Application,javax.servlet.ServletConfig,javax.ws.rs.core.HttpHeaders,javax.ws.rs.core.UriInfo,java.lang.String), \nparameters=[Parameter [type=class javax.ws.rs.core.Application, source=null, defaultValue=null], Parameter [type=interface javax.servlet.ServletConfig, source=null, defaultValue=null], Parameter [type=interface javax.ws.rs.core.HttpHeaders, source=null, defaultValue=null], Parameter [type=interface javax.ws.rs.core.UriInfo, source=null, defaultValue=null], Parameter [type=class java.lang.String, source=type, defaultValue=null]], \nresponseType=class javax.ws.rs.core.Response}, nameBindings=[]}, \nm2\nResourceMethod{httpMethod=GET, consumedTypes=[], \nproducedTypes=[application/json, application/yaml], suspended=false, suspendTimeout=0, suspendTimeoutUnit=MILLISECONDS, \ninvocable=Invocable{handler=ClassBasedMethodHandler{handlerClass=class io.swagger.jersey.listing.ApiListingResourceJSON, handlerConstructors=[org.glassfish.jersey.server.model.HandlerConstructor@4c838c64]}, \ndefinitionMethod=public javax.ws.rs.core.Response io.swagger.jaxrs.listing.ApiListingResource.getListing(javax.ws.rs.core.Application,javax.servlet.ServletConfig,javax.ws.rs.core.HttpHeaders,javax.ws.rs.core.UriInfo,java.lang.String), \nparameters=[Parameter [type=class javax.ws.rs.core.Application, source=null, defaultValue=null], Parameter [type=interface javax.servlet.ServletConfig, source=null, defaultValue=null], Parameter [type=interface javax.ws.rs.core.HttpHeaders, source=null, defaultValue=null], Parameter [type=interface javax.ws.rs.core.UriInfo, source=null, defaultValue=null], Parameter [type=class java.lang.String, source=type, defaultValue=null]], \nresponseType=class javax.ws.rs.core.Response}, nameBindings=[]}, \n```\n. My bad, I had both io.swagger.jaxrs.listing.ApiListingResource and io.swagger.jersey.listing.ApiListingResourceJSON listed in web.xml concrete class selection\n. ",
    "LingLong": "I use a Grizzly-Server, url= http://localhost/simulation/api-docs\nhttp://localhost/simulation/api-docs\nalso http://localhost:8080/simulation http://localhost:8080/simulation \n/api-docs/swagger.json and so on, does not work.\n-----Original-Nachricht-----\nBetreff: Re: [swagger-core] swagger.json is not build with jersery-jaxrs \n(#1544)\nDatum: 2015-11-13T21:00:30+0100\nVon: \"Ron\" notifications@github.com\nAn: \"swagger-api/swagger-core\" swagger-core@noreply.github.com\nWhich URL do you use to open your swagger.json?\nWhich application server do you use to run your application? If it is \ntomcat or tomcat-based, what is the application context that you use?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1544#issuecomment-156542262 \n.\n. ",
    "tzvatot": "Any resolution for this?\n. ",
    "yudaming": "+1. ",
    "jagruti29": "Not able to see polymorphism definitions in documentation\nModel is \n@ApiModel(value = \"MovieBean\" ,discriminator = \"type\", description = \"Prototype for creating movies\", parent = EntertainmentBean.class , subTypes = {DocumentaryMovieBean.class , DramaBean.class})\npublic class MovieBean extends EntertainmentBean {\n    @ApiModelProperty(value = \"movie Id\" , position = 1 , required = true)\n    private int movieId;\n    @ApiModelProperty(value = \"Name of a Movie\",  position = 2)\n    private String name;\n    @ApiModelProperty(value = \"Movie Rating\",  position = 3 , allowableValues = \"1,2,3,4,5\")\n    private int rating;\n    @ApiModelProperty(value = \"language\", position = 4)\n    private String language;\n    @ApiModelProperty(value = \"type\", position = 5 , required = true )\n    private String type;\n}\nand generated doc is \ndefinitions\":{\"MovieBean\":{\"type\":\"object\",\"properties\":{\"language\":{\"type\":\"string\",\"description\":\"language\"},\"movieId\":{\"type\":\"integer\",\"format\":\"int32\",\"description\":\"movie Id\"},\"name\":{\"type\":\"string\",\"description\":\"Name of a Movie\"},\"rating\":{\"type\":\"integer\",\"format\":\"int32\",\"description\":\"Movie Rating\"}},\"description\":\"Prototype for creating movies\"}}}\nI am using swagger 2.4.0. Please advise.\n. apologies Let me correct myself.\nspringfox-swagger2 version 2.4.0 and swagger version 2.0. ",
    "sanjibpramanick": "\n. ",
    "jawher": "@webron Thanks for the reply.\nPR updated accordingly.\n. @webron Any news on this ? :)\n. @fehguy Thank you for accepting this PR, and no worries for the delay :+1: \n. ",
    "JennyMu": "Yes the API calls work fine without swagger. I was wondering if I need to do more than \nservletHolder.setInitParameter(\n            ServerProperties.PROVIDER_PACKAGES,\n            \"rest.service, io.swagger.jaxrs.listing\"\n        );\nto tell the server about swagger.\n. No, everything is under /api/. Is this a problem?\n. src.tar.gz\nYes it is just a sample project so no problem. The source files are attached.\nexample/client is not relevant for this issue.\ndto contains my Data Transfer Object Definition\nrest/service contains the service classes.\nRestServer2.java is my server with no swagger integration.\nserver/swagger/RestServerSwagger is my attempt at a server integrating swagger.\n. I am building and running using Eclipse. So all I could send are the .classpath and .project files ?\n. The target project i want to use swagger for is actually an embedded system. So I compile on one machine and execute on another.\nPrimarily for that reason I am manually managing dependencies which i know is not ideal. But the list of dependencies must be finite and possible to add manually? \nMy .project and  .classpath are attached.\nCLASSPATH.txt\nPROJECT.txt\n. ",
    "rhycce": "Did you resolve this? I seem to be having a similar issue.. Did you resolve this? I seem to be having a similar issue.. ",
    "otonielortega": "found full example here https://gist.github.com/nosmokingpistol/302c4c3ef30f183cf70e\n. ",
    "trallus": "Hi, thanks for your fast reply, it's the second case i have models that are no longer referenced and for me these are \"no longer needed\" inside the json, so I want to get rid of them.\n. Hello, I'm sorry to bother you again with this topic but after testing the new \"isRemovingUnreferencedDefinitions\" method i found two problems:\n1. I have two responses that are just an array of objects, for which the reference is still there but the definition is removed e.g [ Entry{...} ] becomes [ undefined ]\n2. Definitions of Models are not removed when they are inside other models, even if these are removed e.g. MyUserDetails{ User {...} } \"MyUserDetails\" is removed but \"User\" is not\n. ",
    "sberyozkin": "Sorry, this is indeed just repeating some of what is suggested at #1244, \nWhat is wrong with having a swagger-jaxrs20 which would be implementation neutral and a Jersey specific -jersey module that would depend on swagger-jaxrs20 ? \nBeanParam is not Jersey specific. swagger-jaxrs is not called swagger-jersey-jaxrs11. \nWould you consider splitting  this module into two, a neutral and Jersey specific ?\nCheers, Sergey\n. This is a duplicate of 2197. ",
    "ilgrosso": "I recognize now this issue is kind of duplicate of #1244 by @elakito \n. It seems that 2.7.0 accidentally removed the method, which is now back and will be available again in 2.7.1, even though deprecated.\nBy looking at current implementation, though, it seems that the Class<?> argument is ignored, so one could replace the current call in Swagger's Reader from\njava\nfinal Type type = TypeFactory.defaultInstance().constructType(genericParameterTypes[i], cls);\nto\njava\nfinal Type type = TypeFactory.defaultInstance().constructType(genericParameterTypes[i]);\nand have this call working with all Jackson variants (once 2.7.1 will be out, naturally).\n. If you want to keep using the deprecated method, yes, we can leave as-is: I was suggesting the change above for relying on a non-deprecated method which is also available in older releases.\n. Not at all, tomorrow morning I'll send it.\n. It seems I was wrong: the change proposed above makes at least 1 unit test to fail:\nscanModelWithGenericType(io.swagger.GenericsTest)  Time elapsed: 0.017 sec  <<< FAILURE!\njava.lang.AssertionError: expected object to not be null\n        at io.swagger.GenericsTest.scanModelWithGenericType(GenericsTest.java:225\nso it seems that in 2.7 the change should be invariant (not considering deprecation, though) while in 2.4.6 there is a difference.\nI'd leave things as they currently are, then.\n. FYI with Jackson 2.7.1 (fresh release) everything works fine.\n. @eduramiba got the same. thx for your answer @frantuma \nAs you can see from this test setup, the only service classes are BookStore and BookStoreStylesheetsOpenApi - and no operationId conflict should generate from there.. nice catch @frantuma - need to find a way through the tests, though.... Thanks @frantuma for review and merge!. > Responses in components are relevant only if referenced in an operation response, and are not meant to be added to operation responses.\nAh ok, sorry I did not get this; so, what if I want to add some default responses to all operations? With Swagger I could annotate a super-interface to obtain such a result, I thought components.getResponses() was the OpenAPI equivalent.\n\nAlso for parentResponses, actually a cleanup would remove that argument, as subresource locators method consider only responses defined on the subresource\n\nUnderstand.. Thanks @frantuma , indeed.. ",
    "benmccann": "Related: https://github.com/swagger-api/swagger-core/issues/1465\n. If it's too painful to straight up change it or you wanted to ease the migration path, you could deprecate it and create a new field that's a Class\n. ",
    "giupan": "You might want to keep dataType=\"string\" and to create a new field named enum (accepting a enum Class), coherently with the type and enum fields generated in the swagger docs when you annotate with ApiParam a request param declared with that enum Class type.\n. ",
    "Eloberus": "It would be pretty neat if atleast enums would be taken. Even in the official documentation it says that class names can be taken. \nhttp://docs.swagger.io/swagger-core/current/apidocs/index.html?io/swagger/annotations/ApiImplicitParam.html\nHopefully this will be added in the near future ;)\n. ",
    "lloyd31": "Agree with @todd-richmond . I am  facing the same situation, and now have to look for alternatives wherein i use jackson serialization and de-serialization instead of using InputStream, so that i can at-least have a documentation available for my parameters.\n. The schema type does not refer the dataType specified. it always points to be a string. Which is a bug i guess. Refereed the issue which points to the same behavior.\n@POST\n@ApiOperation(value = \"save a user\", response = User.class)\n@ApiImplicitParams({\n        @ApiImplicitParam(name=\"inputObj\", value=\"Input param\", dataType=\"MyObj\")\n    })\npublic Response saveUser( @ApiParam(hidden=true) InputStream message){...}\n. @webron this error occurs only for the first call for swagger.json. But the next calls provides us appropriate json\\yaml files for the next calls. Correct me if my understanding is wrong, but doesn't the swagger scanning trigger for every call?\n. 1. beanConfig.setResourcePackage(\"io.swagger.resources\"); should be replaced with beanConfig.setResourcePackage(\"com.inn.myapp.rest.impl.StateRestImpl.java\"). \nDefines the resources to be scanned.\n\nAdd @Api annotation to your StateRestImpl.java file after the imports.\nAll the resource classes should have the annotation @Api. . \n",
    "jmacauley": "I am doing the same InputStream method that @todd-richmond is doing and running into the same problems. @stoffus I tried the full class path name and it still didn't work for me.  In which version were you using that this was working?  Thanks!\n. I am doing the same InputStream method that @todd-richmond is doing and running into the same problems. @stoffus I tried the full class path name and it still didn't work for me.  In which version were you using that this was working?  Thanks!\n. ",
    "stoffus": "@jmacauley I'm using the latest and greatest - 1.5.10.\n. @lloyd31 Sure. Here's an example:\n@ApiImplicitParams({\n    @ApiImplicitParam(\n        required = true,\n        dataType = \"com.example.project.entities.MyEntity\",\n        paramType = \"body\"\n    )\n}). ",
    "pjfanning": "@RadicalQuiver https://github.com/swagger-api/swagger-core/pull/2068 was merged a few hours ago. @webron can we close this? https://github.com/swagger-api/swagger-core/pull/2068 was merged a while ago.. https://github.com/swagger-api/swagger-core/issues/2068 has been merged so this can probbaly be closed. Thanks Webron for the advise. Using dataType=\"java.io.InputStream\" seems to work well in this case.\nI do have a similar stacktrace for a multipart form param though.\nnew ApiImplicitParam(name = \"file\", value = \"xls[m,x] file\", required = true, dataType = \"file\", paramType = \"formData\")\n. @cowtowncoder would someone in the Jackson team be able to look at the issue in https://github.com/pjfanning/JacksonTest ? If you think this is a bug, I can log an issue for it.\nThis appears to be the only remaining issue with upgrading to Jackson 2.7.8 or 2.8.5 (https://github.com/swagger-api/swagger-core/issues/1998 addresses most of the issues). @cowtowncoder https://github.com/pjfanning/JacksonTest does have a self-contained test case.. Thanks @cowtowncoder based on your feedback - I have a solution in https://github.com/swagger-api/swagger-core/pull/2044 .\nI think there is more work to do, to take the swagger code and make more use of the annotated type classes in jackson-databind but this is a start and all existing tests in swagger-core work.. @fehguy Would it be possible to have someone look at the PR and the broken test? The recent merge in swagger-scala-module to upgrade Jackson-scala-module will possibly not work without a general Jackson upgrade (@sirrochj). I'm afraid I am travelling for a few weeks, so I'm not in a position to debug the test issue here. \nIt seems that to use Jackson 2.8, only joda-time needs a further upgrade.\n. I have created a test project that demonstrates the Jackson TypeFactory change that is affecting the GenericsTest - https://github.com/pjfanning/JacksonTest. @fehguy the same issue occurs with jackson 2.8.4.\nI have this build set up at https://github.com/pjfanning/swagger-core/tree/jackson-2.8.4\nWhen I resycnched with all the merges you did over the last 24 hrs, I hit a compile issue - I have a pull request for that - https://github.com/swagger-api/swagger-core/pull/2038. @fehguy with the recent merges reducing some of the issues with using newer jackson jars, I think it is ok to delay completing this task. I've been able to use a swagger jars based on the latest trunk code with the latest jackson jars. Would it be feasible to release a v1.5.11 in the near future?. I can add a pull request shortly to upgrade to 2.5.5. I tried 2.6.7 but one test in ModelConverterTest failed (processModelWithPairProperties) - this does not appear to fail with jackson 2.8.4 but the test issue in this pull request happens there (GenericsTest).. https://github.com/swagger-api/swagger-core/pull/2041. Superseded by https://github.com/swagger-api/swagger-core/pull/2044. https://mvnrepository.com/artifact/io.swagger/swagger-jaxrs/1.5.10 has the problematic dependency. This is a duplicate of https://github.com/swagger-api/swagger-core/issues/1937. Has been merged. @fehguy this comes from a test case that I have in swagger-akka-http and it was passing until the last set of merges in swagger-core - the NPE guards in this pull request get my test to pass again. @fehguy I'm not wedded to the annotation name, I'm not that happy with it either. If you can think of a better name, then feel free to change it.. @webron I just added https://github.com/swagger-api/swagger-core/pull/2431. @webron I raised a Travis CI bug - https://github.com/travis-ci/travis-ci/issues/8455\nThere seems to be a problem with builds that use oraclejdk7.\nThe 2.0 branch uses oraclejdk8 without issue. I've kicked off a PR build with openjdk7: https://github.com/swagger-api/swagger-core/pull/2432. @webron https://github.com/swagger-api/swagger-core/pull/2432 passed - could you merge that?. @fehguy I tried to make a change in ReflectionUtils to get the test case to pass but it causes the existing override method test case in ReflectionUtilsTest to fail.\nThe parametrizedMethod3 in Child class looks like it should be treated as an override to me but the test case asserts that it isn't an override (the same method appears in the super class, Parent). Is there a reason to treat this method as not being an override?. @fehguy The test case I was referring to was knime's test case from Jan 12.\nThe issue I ran into was with Parent.java and Child.java\nBoth classes implement a method called parametrizedMethod3.\nThere is a test in ReflectionUtilsTest.java that enforces that ReflectionUtils treat this as if the Child implementation of parametrizedMethod3 is not an override of the equivalent method in Parent.. Could you try the latest swagger2markup jar? They had to make some changes to support swagger 1.5.12. eg https://github.com/Swagger2Markup/swagger2markup/issues/235. Swagger-core does not check the XmlSchemaType annotation. It bases the type on the XMLGregorianCalendar class and that class supports datetime. If you can change the type, use Joda LocalDate or Java8 LocalDate.. If you want to generate swagger docs using annotations, I don't believe that there is an alternative to using the JAX-RS annotations. The jsr311-api jar is only 68k. \nThe only alternative, that I know of, would be the build the Swagger object model using the classes in the io.swagger.models package (starting with a Swagger object instance).. This issue is probably best discussed at https://github.com/swagger-api/swagger-play. There hasn't been a release of swagger-play for a while and it would be useful if you could try with the latest swagger-play code and dependencies). Scala Option is handled by swagger-scala-module jar . Have you tried registering the Jackson Java8 module(s)?\nio.swagger.util.Json.mapper().registerModule(new Jdk8Module())\n. @fehguy https://projectlombok.org/download.html describes what you need to install on various IDE environments. Potential contributors would need to know about lombok and how to use it in their IDE. Unless the test is specifically about supporting lombok, I would suggest it is better not to introduce the dependency.. @fehguy the IDE won't compile the particular class with the lombok annotations without the IDE modifications. Could you try dataType = \"java.io.File\" ? That's what I use for similar APIs.. This works for me.\n@ApiOperation(\n    value = \"Upload File\",\n    nickname = \"uploadFile\",\n    httpMethod = \"POST\",\n    consumes = \"application/octet-stream\",\n    response = classOf[FileServiceResponse])\n  @ApiImplicitParams(\n    Array(\n      new ApiImplicitParam(\n        name = \"body\",\n        value = \"binary data, assumed to be CSV in current implementation\",\n        required = true,\n        dataType = \"java.io.File\",\n        paramType = \"body\")\n    ))\n  @ApiResponses(\n    Array(\n      new ApiResponse(code = 200, message = \"Upload File\"),\n      new ApiResponse(code = 500, message = \"Internal server error\")\n    )). @iyerkm could you provide a unit test that demonstrates the issue?\nI suspect we need to check that subtypeProps and baseProps are not the same object instance.\nif (baseProps != null && subtypeProps != null && subtypeProps != baseProps) {\n                    for (Map.Entry<String, Property> entry : baseProps.entrySet()) {\n                        if (entry.getValue().equals(subtypeProps.get(entry.getKey()))) {\n                            subtypeProps.remove(entry.getKey());\n                        }\n                    }\n                }. Maybe this might help.\nhttps://github.com/phiz71/vertx-swagger\nhttps://github.com/vert-x3/vertx-web/issues/113. @aspich could you provide a unit test?. it looks like the upcoming swagger 2 release drops support for jsr311 - https://github.com/swagger-api/swagger-core/tree/feature/3.0.0-rc2/modules. @deki thanks for reviewing - I have pushed a new commit to address the issues you raised. I was unaware of https://github.com/FasterXML/jackson-databind/commit/bf451c0ecd5f68047ef85d9347d9ed92a840c7cf when I added this PR. I just assumed the annoations in jackson-databind had been deprecated.\nIs it not possible to workaround the issue by using jackson 2.8.9 (which swagger is still currently dependent on)?. This is already updated in the 2.0 branch. https://github.com/swagger-api/swagger-scala-module/blob/develop/src/main/scala/io/swagger/scala/converter/SwaggerScalaModelConverter.scala#L65\nThe setRequired(boolean) method is no longer supported in swagger-core v2.0.0. As far as I can work out, the code will need to call setRequired(Collection) on the parent property. I'm not sure how this can be achieved in the ModelConverter and it does not seem to provide access to parent properties.. @frantuma I had a look after the swagger-core 2.0.0 release but still can't work out a way to rewrite the swagger-scala-module ModelConverter to properly support optional properties. Would you be able to review my comment from Dec 18?\nI tried to use the AnnotatedType getParent method and this does seem to return non-null values in some cases - but what I don't have is the name of field so I can't called type.getParent.addRequiredItem(fieldName). The AnnotatedType getName is always null in the test cases that appear in swagger-scala-module. Is there another way to get the name of the field for which the resolve method has been called for?\nFor example if you have case class MyClass(field: String), I need the ModelConverter to have access to the name of the property being resolved, eg field. In this case, field is a required value.. @frantuma @webron would it be possible to some pointers on how I might solve this issue?\nIf I got this solved, I think I'll be in a position to release a swagger 2.0 based version of swagger-akka-http (which contains a copy of swagger-scala-module).. @frantuma thanks for your suggestions\nThe class is https://github.com/swagger-api/swagger-scala-module/blob/develop/src/main/scala/io/swagger/scala/converter/SwaggerScalaModelConverter.scala\nMy partial rewrite for swagger 2.0.0 is https://github.com/pjfanning/swagger-scala-module/blob/swagger-core-2.0.0/src/main/scala/io/swagger/scala/converter/SwaggerScalaModelConverter.scala\nI tried you idea about SwaggerScalaModelConverter extending ModelResolver and overriding decorateModelName but this turns out not to be what I need. decorateModelName gives the model name but I need the fieldName for addRequiredItem.\nIn my example above (case class MyClass(field: String)), the name that I need to get is field not the type name (String in this case).\nIs there any chance that resolve(AnnotatedType annotatedType, ModelConverterContext context, Iterator<ModelConverter> next) could be modified to pass the propertyName too?\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java#L1008. Closing because @frantuma 's has helped me to progress my scala solution. The change seems ok but I think there should be unit tests added to avoid a future regression. @ChristianCiach can you provide a test case or give some indication of how to reproduce the issue being fixed here?. This looks good to merge - @ChristianCiach  could you add a new pull request for the 2.0 branch with your suggested test for that branch?. @frantuma would you be able to review this?. LGTM - Relates to https://github.com/swagger-api/swagger-core/issues/2466. If the plan is to retain jackson 2.8 support for now, would it be better to revert the pom dependency back to jackson 2.8.10?. The Jackson-Databind code is really important to how Swagger core code works - would it be safer to shade a particular jackson-databind jar that swagger builds and tests with? Then, users can have whatever jackson dependencies they like without affecting the swagger code?. @frantuma I think if shading jackson-databind is an option, it is better to do it before the 2.0 release is done.\nSince developers working on tools relating to swagger are expecting things to change in 2.0, they can react to any issues by choosing to add an explicit dependency in their own project to a particular vanilla jackson-databind jar that suits their needs . @frantuma I am asking for it be available on the operation too. Have you tried setting the ApiImplicitParams annotations on the methods themselves? It's possible that they only work when they are on the method declarations,. Closing, as it does look like a big change. I already worked around the issues I saw in swagger-akka-http.. Thanks - what I had missed is the artifact group id is now io.swagger.core.v3. opened pull request against wrong branch. import io.swagger.v3.oas.annotations.{Operation, Parameter} - Operation parameters are the v2.0 annotation equivalent.\nhttps://github.com/pjfanning/swagger-akka-http-sample is written for swagger 2.0 but there is a swagger-1.5 branch with similar code that uses swagger 1.5 annotations. You can compare the 2 implementations to see how the annotations differ between swagger 1.5 and 2.0.. swagger-core module still has this dependency so this will be inherited transitively by swagger-jaxrs. If you prefer, I can add back the depency explicitly here too. It's more useful to remove the other 2 dependencies (jackson-jaxrs-json-provider and jackson-dataformat-xml). Could you useLOGGER.debug(\"response class of method {} is {}\", method, responseType? https://www.slf4j.org/faq.html#logging_performance. I like lombok but it requires IDE setup and would make life a bit more difficult for 1st time contributors - so for this small usage, I think it would be better to avoid lombok and add  the getters and setters explicitly - your IDE will probably generate them for you. ",
    "renannprado": "tried to use springfox version 2.6.1 with the latest swagger-annotations 1.5.13 and it didn't work\njava\n@ApiImplicitParams({\n        @ApiImplicitParam(name = \"test\", required = true, paramType = \"header\")\n})\npublic class Test {\n.\n.\n.\ndoesn't appear in the documentation. @webron you're right, I posted in the wrong repo. Is there a way to use swagger-core2 with Spring MVC without depending on any library (such as springfox)? If I couldn't use swagger-core2 just like it was being used for servlets, but annotating spring MVC methods, that could work for me. I don't want any spring MVC integration, I just want my openapi spec to be generated out of the annotations.. @webron rephrasing: I'd to depend on swagger-core/swagger-annotations alone, without depending on speingfox while it doesn't have support for swagger-core2. ",
    "sumane123": "@stoffus - It's not working. any clue?\nhttps://github.com/springfox/springfox/issues/2183\n. ",
    "jccode": "+1. ",
    "hstaudacher": "moaw, thanks for the hint. The get method for the boolean didn't start with \"is\". Will close this issue.\n. moaw, thanks for the hint. The get method for the boolean didn't start with \"is\". Will close this issue.\n. ",
    "afdia": "Is this issue closed because it should work already or because it won't be fixed?\nI have a similar problem. My object has a list of enum values, but I want to restrict the values which may be used by the API.\njava\nenum MyEnum { VAL1, VAL2, VAL3 }\nThis works:\njava\n@ApiModelProperty(allowableValues = \"VAL1,VAL2\")\nMyEnum myenum;\nThis doesn't work (it ignores the allowableValues and uses all possible enum values instead):\njava\n@ApiModelProperty(allowableValues = \"VAL1,VAL2\")\nList<MyEnum> mylist;. ",
    "mfarid": "Thanks @fehguy, I will start with some small PR following the same structure as already there. \n. Hi @fehguy \nThese changes are not generated automatically. These are written carefully by analysing the existing gaps in the code coverage and addressing those. \nThis entire Pull Request has undergone:\n- Multiple iterations of extensive code reviews by Senior Architects \n- Code quality checks by internal Continuous Integration Server\nHere are some examples of similar contributions made by our team:\n- https://github.com/eclipse/jetty.project/pull/62\n- https://github.com/oblac/jodd/pull/264\n- https://github.com/oblac/jodd/pull/261\nPlease let me know in case of any questions.\nThank you\nFarid\n. ",
    "peterbugiel": "I'm experiencing the same problem when NOT setting a defaultValue in the @ApiParam annotation for an Integer parameter. In this case an empty string gets set as default and the AbstractSerializableParameter#getDefault() method (see swagger-models 1.5.5) tries to create a Long out of \"\" --> NumberFormatException.\njava\npublic Object getDefault() {\n...\n    if(\"integer\".equals(this.type)) {\n        return Long.valueOf(this.defaultValue);\n    }\n...\n}\nMaybe we could add an additional check for an empty string (see above snippet)?\nThanks in advance!.\n. ",
    "garydgregory": "Hm... no unit tests and these are not used from anywhere... say like in PrimitiveTypes.\n. Note that the current version of Jackson is 2.7.2.\n. I see that Travis failed the build: https://travis-ci.org/swagger-api/swagger-core/builds/231706519?utm_source=github_status&utm_medium=notification\nI am not sure what this failure means or what the Swagger Model way is here. Suggestions?. I am going to revisit this convenience method later. I will create a new PR with a narrower footprint to achieve the same goal with a new method PrimitiveType.isSwaggerPrimitive(Property).. +1. Please never break binary compatibility in a minor release and create jar hell for the rest of us. If you do want to break BC, do so in a major release along with a package name and Maven coordinate change. That the only same way to go.. ",
    "kevinmic": "A little more info, I am including in my project the following swagger dependencies\nio.swagger:swagger-jaxrs:1.5.4\nio.swagger:swagger-annotations:1.5.4\nThis is my setup code in our Application file.\npublic MyApplication()\n{\n        BeanConfig beanConfig = new BeanConfig();\n        beanConfig.setVersion(\"1.0.0\");\n        beanConfig.setBasePath(url);\n        beanConfig.setScan(true);\n        ScannerFactory.setScanner(new DefaultJaxrsScanner());\n        beanConfig.setResourcePackage(\"mypath\");\n}\n. In my resources I am doing sub resources and I found that without the scanner it didn't seem to navigate all the way down through all of the sub resources.   With it turned on it does pick up everything (and more).\nI can try removing it again and fiddling with the sub resources to see if I can get them to show up.\n. I am upgrading from com.wordnik:swagger-jaxrs_2.10:1.3.12  and com.wordnik:swagger-annotations:1.3.10\n. Part of the reason I am upgrading is I am converting all of our resources from all having fixed @Path(\"/fixed/location\") to instead chain our resources.    So I will only have one @Path annotation in my root resource, and all other resources will be sub resources.    The swagger I was using didn't seem to support sub-resources \n. I have tried removing the scanner and noticed that the endpoints that do show up, some of them still contain endpoints that are not annotated.   So my assumption is that removing the scanner won't fix my issue.\n. I had tried ApiImplicitParam but wasn't able to get it to work.   I will try again.   If that works then it will fill my need.\n. Thanks, ApiImplicitParam did what I wanted.\n. ",
    "osx2000": "Then I believe there is no point in using Sub-Resources at all if I can't reuse them under a Root / Top Level Resource. \n. ",
    "big-andy-coates": "+1\n. ",
    "amreladawy": "Yes, it is.\nhttps://localhost/api/v1/customers/1234  is an example of get Customer by ID \n. Any idea how can I troubleshoot this. I debugged it and found that my resources were detected by swagger configuration but it continues silently with no generated files\n. Hi, \nThe produced war file has the \"/api\" as context-root in the jboss-web.xml\nI debugged the code, and I figured out that I need to annotate my resources with @Api so they can be picked up by the scanner.\nChanging that for one Resource I got some logs like this \nDEBUG (Reader.java:746) - picking up response class from method public java.lang.String c.e.m.r.a.r.Products.outOfService(long)\nDEBUG (ModelConverterContextImpl.java:74) - resolveProperty class java.lang.String\nDEBUG (ModelResolver.java:110) - resolveProperty [simple type, class java.lang.String]\nDEBUG (Reader.java:849) - getParameters for [simple type, class long]\nDEBUG (Reader.java:852) - trying extension io.swagger.jaxrs.DefaultParameterExtension@4054fcd5\nDEBUG (ModelConverterContextImpl.java:74) - resolveProperty [simple type, class long]\nDEBUG (ModelResolver.java:86) - Can't check class [simple type, class long], long\nDEBUG (ModelResolver.java:110) - resolveProperty [simple type, class long] \nAfter that still getting 404 on https://localhost/api/swagger.json\n. Hi Ron,\nThanks for the prompt response, here is the web.xml \nxml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns=\"http://java.sun.com/xml/ns/javaee\"\n    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n    version=\"3.0\">\n    <display-name>api</display-name>\n    <context-param>\n        <param-name>resteasy.role.based.security</param-name>\n        <param-value>true</param-value>\n    </context-param>\n    <servlet>\n        <servlet-name>RESTEasy JSAPI</servlet-name>\n        <servlet-class>org.jboss.resteasy.jsapi.JSAPIServlet</servlet-class>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>RESTEasy JSAPI</servlet-name>\n        <url-pattern>/rest-js</url-pattern>\n    </servlet-mapping>\n    <security-constraint>\n        <web-resource-collection>\n            <web-resource-name>Resteasy</web-resource-name>\n            <url-pattern>/v1/*</url-pattern>\n        </web-resource-collection>\n        <user-data-constraint>\n            <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n        </user-data-constraint>\n        <auth-constraint>\n            <description>All rolls</description>\n            <role-name>*</role-name>\n        </auth-constraint>\n    </security-constraint>\n    <login-config>\n        <auth-method>BASIC</auth-method>\n        <realm-name>myRealm</realm-name>\n    </login-config>\n    <security-role>\n        <role-name>employee-create</role-name>\n    </security-role>\n    <security-role>\n        <role-name>employee-update</role-name>\n    </security-role>\n    <security-role>\n        <role-name>employee-delete</role-name>\n    </security-role>\n    <security-role>\n        <role-name>employee-view</role-name>\n    </security-role>\n    <security-role>\n        <role-name>login</role-name>\n    </security-role>\n</web-app>\n. By Resource Scanning, do you refer to RESTEasy Resource Scanning, or Swagger Resource Scanning?\nRESTEasy scanning is automatically done due to the annotations on the Application Class and resources Classes\n``` java\n@ApplicationPath(\"/v1\")\npublic class ApiApp extends Application {\n```\njava\n@Path(\"products\")\n@Produces(MediaType.APPLICATION_JSON)\n@Formatted\n@Api\npublic class Products {\nFor swagger, the scanning is done by \njavascript\nbeanConfig.setScan(true);\n. Hi Ron,\nThanks for your support. The file was generated at https://localhost/api/v1/swagger.json\nIt required sending Authorization header but worked fine.\nNo need to annotate the Resources classes with @Api \nThanks again. \n. Hi Ron,\nI am working on another project that uses RESTEasy and Undertow. Should I open another incident or do u have some guide for Swagger on Undertow?\n. ",
    "srinimaharaj": "I am getting java.lang.ClassNotFoundException: io.swagger.jaxrs.config.BeanConfig while deploying the war into jboss.\nI had both resteasy-jaxrs (provided) and swagger-jaxrs (compile) as dependencies.\nI tried removing reasteay-jaxrs dependency, still getting same issue.\n. ",
    "suen": "I ran into same issue. I have several webapps (CXF) running inside Tomcat with ApiListingResource resouce, each configured with different BeanConfig values (configured via spring). I found that every time a new service get deployed during initial deployment, it overwrites the config values for the previously deployed ones. However, if a webapp is redeployed, it does not overwrite config values for the ones already running. \n. ",
    "janhoeve": "Seems to be a duplicate of #1506\n. I just applied that fix locally and those kind of JAX-RS resources are working fine now, thanks!\nHope it get's accepted soon :)\n. (accidentally closed this issue...)\nI created a pull request for this: https://github.com/swagger-api/swagger-core/pull/1747\n. Could your issue be related to #1746 ?\nIf so, try building the master because my PR is accepted; no official 1.5.9 yet.\n. ",
    "raghavendramanandi": "Can you let me know what all information you need? I will try to provide them.\n. Please find my log file content\nJan 06, 2016 1:40:57 PM com.sun.jersey.api.core.PackagesResourceConfig init\nINFO: Scanning for root resource and provider classes in the packages:\n  io.swagger.jaxrs.json\n  io.swagger.jaxrs.listing\n  com.**_._.rest\n  com.*_._.restcleint\nJan 06, 2016 1:40:57 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses\nINFO: Root resource classes found:\n  class com.*_*._.rest.service.ResourceRestService\n  class io.swagger.jaxrs.listing.ApiListingResource\n  class com.*_.__.rest.service.*_*_RestService\n  class com._.*_.rest.service._RestService\n  class com.*_*._.rest.service.*__RestService\n  class com._.*_*.rest.service.HealthCheckRestService\nJan 06, 2016 1:40:57 PM com.sun.jersey.api.core.ScanningResourceConfig logClasses\nINFO: Provider classes found:\n  class io.swagger.jaxrs.json.JacksonJsonProvider\n  class com._.*_.rest.mapper.AuthorizationExceptionMapper\n  class com._.*_*.rest.mapper.ResourceLockingExceptionMapper\n  class com._.*_.rest.mapper._ExceptionMapper\n  class com.*_*._.rest.mapper.DateTimeParseExceptionMapper\n  class com.*_._.rest.mapper.BaseExceptionMapper\n  class com.*_*._.rest.mapper.ParamExceptionMapper\n  class com.*_._.rest.mapper.JsonProcessingExceptionMapper\n  class com.*_*._.rest.mapper.JpaSystemExceptionMapper\n  class com.*_._.rest.mapper.OptimisticLockingFailureExceptionMapper\n  class com.*_*._.rest.mapper.GeneralSecurityExceptionMapper\n  class com.*_._.rest.mapper.WebApplicationExceptionMapper\n  class com.*_*._.rest.mapper.EntityNotFoundExceptionMapper\n  class com.*_._.rest.mapper.IllegalArgumentExceptionMapper\n  class com.*_*._.rest.mapper.*_ExceptionMapper\n  class com._.*_*.rest.mapper.RefundExceptionMapper\n  class com._.*_.rest.mapper._ExceptionMapper\n  class io.swagger.jaxrs.listing.SwaggerSerializers\nJan 06, 2016 1:40:57 PM com.sun.jersey.server.impl.application.WebApplicationImpl _initiate\nINFO: Initiating Jersey application, version 'Jersey: 1.19 02/11/2015 03:25 AM'\nJan 06, 2016 1:40:57 PM com.sun.jersey.spi.inject.Errors processErrorMessages\nSEVERE: The following errors and warnings have been detected with resource and/or provider classes:\n  SEVERE: Conflicting URI templates. The URI template / for root resource class com.*_*..rest.service.HealthCheckRestService and the URI template / transform to the same regular expression (/.)?\n  WARNING: A HTTP GET method, public javax.ws.rs.core.Response com._.*_.rest.service._RestService.dryRefund(java.lang.String,com.*_*._.dto.refund.RefundRequest) throws com.*_._.core.exception.RefundException,com.*_*._.core.exception.*_Exception,com._.*_*.core.exception.AuthorizationException,java.security.GeneralSecurityException, should not consume any entity.\n  WARNING: A sub-resource method, public javax.ws.rs.core.Response com._.*_*_.rest.service.__RestService.get*_(java.lang.String), with URI template, \"\", is treated as a resource method\n. My guess was the same. I removed these(Below) two lines and deployed my\napplication. The application works fine without any issues.\nio.swagger.jaxrs.json\nio.swagger.jaxrs.listing\nOn Wed, Jan 6, 2016 at 7:42 PM, Tony Tam notifications@github.com wrote:\n\nOK the clue is here:\nJan 06, 2016 1:40:57 PM com.sun.jersey.server.impl.application.WebApplicationImpl initiate\nINFO: Initiating Jersey application, version 'Jersey: 1.19 02/11/2015 03:25 AM'\nJan 06, 2016 1:40:57 PM com.sun.jersey.spi.inject.Errors processErrorMessages\nSEVERE: The following errors and warnings have been detected with resource and/or provider classes:\nSEVERE: Conflicting URI templates. The URI template / for root resource class com.._.rest.service.HealthCheckRestService and the URI template / transform to the same regular expression (/.)?\nWARNING: A HTTP GET method, public javax.ws.rs.core.Response com...rest.service._RestService.dryRefund(java.lang.String,com...dto.refund.RefundRequest) throws com...core.exception.RefundException,com...core.exception._Exception,com...core.exception.AuthorizationException,java.security.GeneralSecurityException, should not consume any entity.\nWARNING: A sub-resource method, public javax.ws.rs.core.Response com.._.rest.service._RestService.get**(java.lang.String), with URI template, \"\", is treated as a resource method\nPlease remove these:\nio.swagger.jaxrs.json\nio.swagger.jaxrs.listing\ntemporarily from your scanning to see if it starts up fine. My guess is\nthat you have operations like such:\n/*\nand that the listing for /swagger.json is colliding with it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1587#issuecomment-169332252\n.\n\n\nThanks,\nRaghavendra\n9738212418\n. Thanks Tony Tam and Szymon Bochniak\nOn Tue, Jan 12, 2016 at 1:51 PM, Szymon Bochniak notifications@github.com\nwrote:\n\nIf you don't want to change your application's mapping you can override\nSwagger's Resource Mapping - see my answer for more details:\nhttp://stackoverflow.com/a/33516888/1680826\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1587#issuecomment-170835110\n.\n\n\nThanks,\nRaghavendra\n9738212418\n. ",
    "AdelineJolie": "This will hide it from both input and output model as well (even if it is set on the getter or setter)\n. ",
    "dohoon-oh": "I have same issue. Did you solve it?\n. ",
    "codewinkel": "Does anyone solved it in a nice way?\n. ",
    "yateam": "It would make sense if I provided a configuration for this parameter, but I omitted title attribute in web.xml. \n@Info title attribute is never used.\n. ",
    "delenius": "I have the same problem. I tried adding an api.title entry in web.xml (a guess, based on the comments above -- is there another way?), but that didn't help.\nIn addition, the version attribute in @SwaggerDefinition is ignored. Instead, the api.version from web.xml is used. If api.version is left out, the generated version becomes the string \"Swagger Server\"!\nAlso, the @SwaggerDefinition is not picked up at all if I put it on my ResourceConfig subclass. So, instead, I attached it to my top-level resource class that has @Path(\"/\"). The documentation is a bit vague on where it's supposed to go...\n. Ah, it's swagger.api.title in web.xml. So at least there is a workaround for now.\n. $ curl -I http://localhost:8080/sfweb/rest/swagger.json\nHTTP/1.1 200 OK\nDate: Mon, 11 Jan 2016 22:20:42 GMT\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Methods: GET, POST, DELETE, PUT, OPTIONS\nAccess-Control-Allow-Headers: Content-Type, api_key, Authorization\nContent-Type: application/json\nContent-Length: 0\nServer: Jetty(9.3.5.v20151012)\n. This one:\n<dependency>\n      <groupId>io.swagger</groupId>\n      <artifactId>swagger-jersey2-jaxrs</artifactId>\n      <version>1.5.4</version>\n    </dependency>\n. Yes, I am using the mvn jetty:run method during development. No proxy.\nAnd I can see the swagger file served up in the browser on the right URL... \nBTW, is this normal:\n\nContent-Length: 0\n\n?\nI also see it in the CORS example, so I assume it is...\n. ",
    "henray": "Could someone tell me what the verdict is on this issue? Is there even an issue here or is this intentional?\nI'm trying to use a very simple Bootstrap servlet and I'm encountering the same problem.\n```\npublic class SwaggerBootstrap extends HttpServlet {\n    @Override\n    public void init(ServletConfig config) throws ServletException {\n    LOGGER.info(\"Initialize swagger\");\n    Info info = new Info()\n            .title(\"TITLE\")\n            .version(\"VERSION\")\n            .description(\"DESCRIPTION \");\nSwagger swagger = new Swagger().info(info);\nnew SwaggerContextService().withServletConfig(config).updateSwagger(swagger);\n}\n\n}\n```\nonly the description shows up, because the version number if being overridden by the web.xml and the title just doesn't appear anywhere. As stated above, if you remove the api.version tag from the web.xml then you just get Swagger Server, and the code is never read. Similarly the title is blank even though I've specified it here. Am I doing something wrong?\n. ",
    "englhardt": "@webron @fehguy \nAny update on this one? At the moment I put the title in web.xml but a fix would be nice (using v.1.5.10).\n. ",
    "jbrazdil": "I've added @ApiModelProperty(hidden=true) but the ga is still shown in the model.\n. io.swagger:swagger-core:jar:1.5.6:compile\n. I've did some debugging and found that in ModelResolver#L305\nApiModelProperty mp = member.getAnnotation(ApiModelProperty.class);\nmp is null, even when _annotations in the member is:\n_annotations = (com.fasterxml.jackson.databind.introspect.AnnotationMap) {\ninterface org.codehaus.jackson.annotate.JsonIgnore=@org.codehaus.jackson.annotate.JsonIgnore(value=true),\ninterface io.swagger.annotations.ApiModelProperty=@io.swagger.annotations.ApiModelProperty(reference=, allowableValues=, notes=, access=, hidden=true, dataType=, name=, readOnly=false, position=0, value=, required=false, example=)\n}\n. Ok, I have some classloading issues probably. The ApiModelProperty in _annotations was from different module than ApiModelProperty.class.\n. I have resolved the classloading issue: set swagger-annotation dependency in the module where is GAV to provided. But now it see only @JsonIgnore annotation, and not @ApiModelProperty annotation.\n(Field) f.getDeclaredAnnotations() on the da field returns orny @JsonIgnore.\n. ",
    "nbruno": "@fehguy Is this an issue to add the vendor extensions field to ComposedModel? If so, ComposedModel already inherits it from AbstractModel. \n. @fehguy Is this an issue to add the vendor extensions field to ComposedModel? If so, ComposedModel already inherits it from AbstractModel. \n. ",
    "jontejj": "Is it time to open this up again as it's now defined in version 3.0 of the Open API spec? https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#parameterObject. I see that swagger UI is supporting version 3 of the spec? But I don't see any output in my service.json generated by io.swagger.jaxrs.listing.ApiListingResource for my @MatrixParam annotated parameters. ",
    "jeff9finger": "Will this issue be resolved with jackson being upgraded to 2.7.2?\nI also noticed that the joda packages are old. I updated these to \n<joda-version>1.8.1</joda-version>\n        <joda-time-version>2.9.2</joda-time-version>\nas well in my environment. \nThis jackson upgrade is required by swagger-parser, swagger-codegen, and swagger-inflector to properly handle yaml anchors\n. ",
    "eduramiba": "This seems to be broken again with Jackson 2.9.0.\nUnhandled exception: java.lang.NoSuchMethodError: com.fasterxml.jackson.databind.introspect.AnnotatedMember.annotations()Ljava/lang/Iterable;\n    at io.swagger.jackson.ModelResolver.resolve(ModelResolver.java:379)\n    at io.swagger.jackson.ModelResolver.resolve(ModelResolver.java:185)\n    at io.swagger.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:100)\n    at io.swagger.jackson.ModelResolver.resolve(ModelResolver.java:236)\n    at io.swagger.jackson.ModelResolver.resolve(ModelResolver.java:185)\n    at io.swagger.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:100)\n    at io.swagger.jackson.ModelResolver.resolveProperty(ModelResolver.java:161)\n    at io.swagger.jackson.ModelResolver.resolveProperty(ModelResolver.java:112)\n    at io.swagger.converter.ModelConverterContextImpl.resolveProperty(ModelConverterContextImpl.java:80)\n    at io.swagger.converter.ModelConverters.readAsProperty(ModelConverters.java:58)\n    at io.swagger.jaxrs.DefaultParameterExtension.createProperty(DefaultParameterExtension.java:204)\n    at io.swagger.jaxrs.DefaultParameterExtension.extractParameters(DefaultParameterExtension.java:75)\n    at io.swagger.jaxrs.ext.AbstractSwaggerExtension.extractParameters(AbstractSwaggerExtension.java:33)\n    at io.swagger.jersey.SwaggerJersey2Jaxrs.extractParameters(SwaggerJersey2Jaxrs.java:63)\n    at io.swagger.jaxrs.Reader.getParameters(Reader.java:1036)\n    at io.swagger.jaxrs.Reader.parseMethod(Reader.java:975)\n    at io.swagger.jaxrs.Reader.read(Reader.java:322)\n    at io.swagger.jaxrs.Reader.read(Reader.java:172)\n    at io.swagger.jaxrs.listing.BaseApiListingResource.scan(BaseApiListingResource.java:65)\n    at io.swagger.jaxrs.listing.BaseApiListingResource.process(BaseApiListingResource.java:122)\n    at io.swagger.jaxrs.listing.BaseApiListingResource.getListingJsonResponse(BaseApiListingResource.java:167)\n    at io.swagger.jaxrs.listing.ApiListingResource.getListing(ApiListingResource.java:33)\nJackson 2.8.9 works fine. Works fine again with jackson 2.9.1. ",
    "jcalcote": "https://github.com/FasterXML/jackson-core/issues/395\nThis is likely the cause of the problem in 2.9.0. I'm having it too - can we get swagger updated to use the new 2.9.0 api?. Well, then I guess we'll have to stick with 2.8.9 until 2.9.1 is published (it's not found on maven central).. ",
    "pierredeman": "Ok I see... I reverted the read/write functionnality from the ServletContext.\nBut I kept the SwaggerUtils to store the scanned Swagger.\n. ",
    "chaithu8691": "is there any work around for this issue ?\n. ",
    "sailujanu": "Team,\nCan you please update on this issue. We are kinda block with our swagger integration\n. Thanks for your help. I will pull the jar and test with it and get back to you\n. Thanks Tam. it is working fine. My issue got resolved. When can we expect this jar will be available in mvn repo. I want to put this as dependency.  Currently I added this jar manually into project lib folder.\n. im not using mvn instead using ivy.xml.so not sure how to pull snapshot from sonatype\n. ",
    "Aryadeb": "Sure.I followed the tutorial provided at this link \nhttps://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-1.X-Project-Setup-1.5 and have been successful in creating a java project which generates swagger defination for a restful webservice.I get the swagger.json/yaml file at the root context as explained in this tutorial.\nHowever to view the swagger file I need to fo the the swagger.io where they have an online editor and can view them and test the webservices.\nIs it possible to have a swagger UI client inbuilt so that if I say view the swagger generated file at a webpage hosted in my local webserver?\nANY HELP WILL BE APPRECIATED\n. Thanks..WIll try this out and will revert If I am facing issues.\n. ",
    "mibrahim-iti": "Solving it, and the solution is very simple, just ignored \"dataType \" attribute in @ApiModelProperty\n\n@ApiModelProperty(name =\"data\", notes = \"Data\")\npublic Map getData() {\nreturn data;\n}\n\nand this will generate next json data in swagger.json\n\n\"data\" : {\n          \"type\" : \"object\",\n          \"additionalProperties\" : {\n                  \"type\" : \"number\"\n           }\n    }\n\n. i solved it, and solution in #542\nhttps://github.com/OAI/OpenAPI-Specification/issues/542\n. ",
    "mtraynham": "Ahh looks to be related to #1442 \n. Ya know, after reading what I wrote, you're right, I didn't make the suggestion clear.  \nIt would be nice if there was some way to get annotations from the original method reference in the isOperationAllowed function.  As it stands, it really only has access to the Swagger spec properties on the resource.  In some cases, you may want to extend that functionality to other method properties, such as a visibility annotation that is user owned.  As an example, when a user has some particular credentials, we would have a way to filter out the resources they don't have access to.\nSo changing the signature and adding support for:\npublic boolean isOperationAllowed(java.lang.reflect.Method method, Operation operation, ...\nAt this point though, you have to hack that kind of functionality in with APIImplicitParams.\n. @fehguy No problem, should be available shortly.\n. @fehguy Hey is there something else I need to do to get this accepted?\n. I've encountered this as well.  I think the only place SpecFilter is used is on the API Resource when serving from your own Jaxrs ReST API.\nThe BaseOpenAPIResource performs the filter here.  Unfortunately the maven/gradle plugins use the SwaggerLoader which also builds it's own OpenAPI context and calls read, but never filters.\nI believe the code should instead be moved into the GenericOpenApiContext.read method or even further down into the reader or core classes themselves so the functionality is shared.. ",
    "patrick-m-m": "The final step you're referring to, is that the getClasses() that I mention? Or the BeanConfig bits? For the BeanConfig I have the following:\n@PostConstruct\n    /**\n     * Initializes Swagger Configuration\n     */\n    public void initializeSwaggerConfiguration() {\n        final ReflectiveJaxrsScanner scanner = new ReflectiveJaxrsScanner();\n        scanner.setResourcePackage(\"com.my.project.api\");\n        ScannerFactory.setScanner(scanner);\n        BeanConfig config = new BeanConfig();\n        config.setTitle(\"MyApp\");\n        config.setDescription(\"Description of my App\");\n        config.setVersion(\"1.0\");\n        config.setBasePath(\"/v1.0\");\n        config.setScan(true);\n    }\nThe only thing I was missing from the example was the setResourcePackage \u2013 I'll try that tomorrow. The host and schema bits are option right? I remember reading that somewhere...\n. ",
    "Nogyara": "Thank you guys for implementing #1438, it'll really makes life of some devs easier, helping to remove duplication for REST API defined fully by JEE standard annotations (JAX-RS + Bean Validation)!\nHowever, I just tested the brand new 1.5.7 release and the implementation seems to be working only for some param types - we use both @PathParam and @QueryParam in our APIs and the implementation seems to be supporting @PathParam only. Should I reopen #1438 or is it better to create a separate ticket?\n. ",
    "mikerott": "Related to issue #1647 \n. ",
    "gbenaderet": "I have the same problem, anyone can fix it?\n. ",
    "guyh-tointv": "Hi Ron, Erev Toc Gam Lecha :-)\nI have the resteasy-servlet.xml file, in which I scan the beans as follows:\n<context:component-scan base-package=\"com.company.media.facade.web.rest\" />\nNo default path. An example for the URL is:\nhttp://localhost:8080/media-web/restful/resouce\nBTW: I have moved to use Enunciate. Cool tool :-)\nThanks\nH Guy\n. ",
    "asafbennatan": "any news regarding this?,\nas i understood swagger does not respect jsonview /ignore ,i wanted to manually write a filter that would , but that requires getting the annotations of the property or at least the java class so you could do something like :\n    Method getter = new MappedPropertyDescriptor(arg1.getName(), c).getMappedReadMethod();\n            if(getter.isAnnotationPresent(JsonIgnore.class)){\n                return false;\n            }\n. any news regarding this?,\nas i understood swagger does not respect jsonview /ignore ,i wanted to manually write a filter that would , but that requires getting the annotations of the property or at least the java class so you could do something like :\n    Method getter = new MappedPropertyDescriptor(arg1.getName(), c).getMappedReadMethod();\n            if(getter.isAnnotationPresent(JsonIgnore.class)){\n                return false;\n            }\n. ",
    "nitin02": "Hello, Is there any update on when this \"enhancement\" will be added?\n. ",
    "yuhanz": "Thanks for the quick response! will try out @ApiImplicitParam.\n. worked elegantly. thanks!\n. ",
    "rmannibucau": "Not sure I follow you:\n- yaml support as a feature IS optional. Typically just being interested in swagger-ui makes it optional since default is json.\n- jackson is not needed for serialization and a spi can avoid it.\nMy point is mainly than a .war of 100k becomes a fat war of 5M with swagger stack and most of it is useless at runtime for several cases if swagger is a bit refactored\n. Ok missed the fact jackson is also used as a parser. Do you have any idea if doing a minimized - as the option of the maven plugin - shade would help?\nGoing down to 1 or 2M max would be already awesome.\n. Well with guava PR and the PR allowing to integration without javassist (reflections) or using WebXMLReader with jaxrs module (doesnt need reflections stack) it is 2/3M which is no more a blocker.\nSide note: 5M is a lot most of the time. Today with JavaEE servers we often deploy skinny wars.\nSo only missing thing to this issue is reflection part which I agree is not very easy to replace - understand we can ignore it for this issue.\n. Guava one is for sure, didnt check others but I guess WebXmlReader one will surely need some review anyway cause it changes the config a bit\n. Oh right, seems some of my commits - at least 2 - haven't been pushed not sure why. Will fix the tests and update the branch.\n. ",
    "tandraschko": "Why was it closed? e.g. with CDI you also don't need reflections.\nThe performance would be better and the WAR file smaller in many cases!. ",
    "stianlagstad": "I hope it's ok that I ask about the same problem/use case here. I have this class:\n```\nimport java.util.List;\nimport com.google.gson.JsonElement;\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\n@ApiModel(value = \"MyClass\",\n    description = \"Description.\")\npublic class MyClass {\n@ApiModelProperty(value = \"ID given by the API\")\n  private Long id;\n@ApiModelProperty(value = \"Customizable extra data\")\n  private JsonElement additionalData;\npublic Long getId() {\n    return id;\n  }\npublic void setId(Long id) {\n    this.id = id;\n  }\npublic JsonElement getAdditionalData() {\n    return additionalData;\n  }\npublic void setAdditionalData(JsonElement additionalData) {\n    this.additionalData = additionalData;\n  }\n}\n```\nI have some problems with the resulting swagger.json file because of the JsonElement-type I use for additionalData, so I would like to make it look like additionalData has another type (say String). How can I use @ApiImplicitParam when it's not on a method, but on a field in my class?\nI would like to hide the orignal additionalData (as I've managed to do below), and add a new implicit field additionalData of type String:\n```\nimport java.util.List;\nimport com.google.gson.JsonElement;\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\n@ApiModel(value = \"MyClass\",\n    description = \"Description.\")\npublic class MyClass {\n@ApiModelProperty(value = \"ID given by the API\")\n  private Long id;\n@ApiModelProperty(value = \"Customizable extra data\", hidden = true)\n  private JsonElement additionalData;\npublic Long getId() {\n    return id;\n  }\npublic void setId(Long id) {\n    this.id = id;\n  }\npublic JsonElement getAdditionalData() {\n    return additionalData;\n  }\npublic void setAdditionalData(JsonElement additionalData) {\n    this.additionalData = additionalData;\n  }\n}\n``. Never mind. I just had to do this:@ApiModelProperty(value = \"Customizable extra data\", dataType = \"object\")` :). ^ The previous ghost post was me from a github user that no longer exists.\nAre there any news relating to this issue? Is it possible/will it be possible to have two separate resource methods use the same path but with different media types?. ^ The previous ghost post was me from a github user that no longer exists.\nAre there any news relating to this issue? Is it possible/will it be possible to have two separate resource methods use the same path but with different media types?. Thank you @frantuma! :). Thank you @frantuma! :). ",
    "ed0906": "@fehguy How does Swagger pick that up? Could you should me an example of how I could use an extension with a custom PATCH?\n. ",
    "jiming": "Dear webron,\nDo you mean the User in the example code? I guess I can try. Thanks a log\npublic Response updateUser(\n      @ApiParam(value = \"name that need to be updated\", required = true) @PathParam(\"username\") String username,\n      @ApiParam(value = \"Updated user object\", required = true) User user) {...}\n. Dear webron,\nDo you mean the User in the example code? I guess I can try. Thanks a log\npublic Response updateUser(\n      @ApiParam(value = \"name that need to be updated\", required = true) @PathParam(\"username\") String username,\n      @ApiParam(value = \"Updated user object\", required = true) User user) {...}\n. ",
    "chenlingmin": "+1\n. ",
    "ndebeiss": "Hello everybody\nI started looking at swagger project a few weeks ago.\nThat is very interesting, it is the best documentation generator I found.\nI use swagger in order to generate web services documentation for a medium project (4500 classes) I am working on. I still have a lot of work to do in order to make it generate exactly what I want, but swagger was easy to integrate in the project and I had good results quickly.\nI saw the last commit for 1.5.7 release and I do not agree with the direction you are taking. The problem I am facing is that there are lots of different web services declarations in my application. There are web services declared as : \n- Axis endpoint\n- Spring with annotations\n- Spring with XML\n- jax-rs\nSo I extended some code of swagger in order to be compatible with a maximum of those declarations.\nActually, is it not very difficult to do, the code is clear and it is just a matter of fallback from custom swagger annotations, to jax-rs, to Spring (but declaring the fields and methods as \"protected\" would have helped me :-) ).\nSo I think swagger project should evolve to a maximum compatibility inside the same code instead of being more restrictive like the last commit. I am not sure the modules swagger-jersey-jaxrs, etc... are important.\nThat would simplify the installation, the user would have to add a single dependency and swagger would be able to read any kind of declarations.\nI read the issue https://github.com/swagger-api/swagger-core/issues/1614 and I saw the need for Path annotations looking at class level, in Spring there is an annotation RequestMedia at class level too.\nThanks for reading, tell me what you think frankly.\nRegards\n. Added. Sorry for the code formatting noise.\n. ",
    "ajkerr": "I was able to work around this issue temporarily by adding the com.fasterxml.jackson.annotation.JsonIgnore annotation to my \"extra\" method.\n. ",
    "pdjohe": "The above commits still don't fix the error.\nFixed: modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/DefaultParameterExtension.java\nNot fixed: modules/swagger-jersey2-jaxrs/src/main/java/io/swagger/jersey/SwaggerJersey2Jaxrs.java\nhttps://github.com/frantuma/swagger-core/blob/master/modules/swagger-jersey2-jaxrs/src/main/java/io/swagger/jersey/SwaggerJersey2Jaxrs.java#L80\nAny chance we can get this fixed before the next release?\n. ",
    "rawat-he": "I am also facing same issue. \nPosted here as well http://stackoverflow.com/questions/35215302/swagger-jersey-grizzly\n. +1. ",
    "patrickjamesbarry": "I have tried the following urls:\nhttp://localhost:9000/api\nhttp://localhost:9000/test/api         <- \"test\" is the context root of my jersey resources.\nI don't have any resources that are defined at @Path(\"/api\")\nI have also searched on the file system for swagger.json and that file is not found.\nspring-boot-starter-jersey version 1.3.2-Release\n. Thanks webron, that squared me away!\n. Yes, thank you!\n. ",
    "kiran-headstrong": "I deployed swagger in wildfly server i am not able to see documentation. \nError: not able to read localhost:9090/projectname/swagger-ui.json. ",
    "GoGoris": "Yes, but it doesn't make sense in my opinion if XmlElement is set. I thought that the library was trying to be compliant with the javax annotations, but only for required I have to explicitly set it (again) if I add a description using @ApiModelProperty.\n. Yes but why can't the annoation processor check first that this isn't set in XmlElement ? (swagger-jaxrs I guess?)\n. ",
    "nailtonvieira": "Thanks a lot, @webron\n. Hello guys. What is the address of the snapshot repository? I tried:\n<repository> \n             <Id> Swagger </id>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <Url> https://oss.sonatype.org/content/repositories/snapshots/ </url>\n</repository>\nBut it did not work.\n. Thanks @swag-cxf !\n. ",
    "swag-cxf": "Hi webron,\nis there any update on 1.5.10 release schedule as we really want to use this feature with cxf multiple jax-rs resources.\n. Hi webron,\nis there any update on 1.5.10 release schedule as we really want to use this feature with cxf multiple jax-rs resources.\n. Do we have snapshot version which has this fix? please let me know artifact id?\n. Do we have snapshot version which has this fix? please let me know artifact id?\n. Could you please tell me the snapshot repository location as it seems during build, pom.xml is not coming for modules due to which cxf build is failing.. Let me know snapshot-repo location.\n. Could you please tell me the snapshot repository location as it seems during build, pom.xml is not coming for modules due to which cxf build is failing.. Let me know snapshot-repo location.\n. Hi Webron,\nHow do u expect client to pass on beanconfig with CXF Swagger2Feature? Is below looks correct as it's not working for me?\nxml\n <!-- CXF Swagger2Feature -->  \n    <bean id=\"swagger2Feature\" class=\"org.apache.cxf.jaxrs.swagger.Swagger2Feature\">\n        <property name=\"basePath\" value=\"/cxf/swaggerSample2\"/>\n        <property name=\"usePathBasedConfig\" value=\"true\" />        \n    </bean>\n. Hi Webron,\nHow do u expect client to pass on beanconfig with CXF Swagger2Feature? Is below looks correct as it's not working for me?\nxml\n <!-- CXF Swagger2Feature -->  \n    <bean id=\"swagger2Feature\" class=\"org.apache.cxf.jaxrs.swagger.Swagger2Feature\">\n        <property name=\"basePath\" value=\"/cxf/swaggerSample2\"/>\n        <property name=\"usePathBasedConfig\" value=\"true\" />        \n    </bean>\n. Hi Webron,\nHow do u expect client to pass on beanconfig with CXF Swagger2Feature? Is below looks correct as it's not working for me?\n\n\n\n\n. Hi Webron,\nHow do u expect client to pass on beanconfig with CXF Swagger2Feature? Is below looks correct as it's not working for me?\n\n\n\n\n. Don't know while updating comment, entries getting missed for BeanConfig.\n\n \n. Don't know while updating comment, entries getting missed for BeanConfig.\n\n \n. Not sure as i am not able to update xml elements in comments. Sorry for multiple comments.\nNeed to understand what extra value are expected in BeanConfig.\nshould usePathBasedConfig be passed as true? what else?\n. Not sure as i am not able to update xml elements in comments. Sorry for multiple comments.\nNeed to understand what extra value are expected in BeanConfig.\nshould usePathBasedConfig be passed as true? what else?\n. I have dropped a note on cxf-users list. What extra BeanConfig parameters you expect from 1.5.10 perspective to let multiple base path scannable? For ex, do you expect client to pass usePathBasedConfig true/false, and what other from OSGI perspective?\n. I have dropped a note on cxf-users list. What extra BeanConfig parameters you expect from 1.5.10 perspective to let multiple base path scannable? For ex, do you expect client to pass usePathBasedConfig true/false, and what other from OSGI perspective?\n. Thanks Andriy.\nIt would be great if you can share the patch as I tried modifying Swagger2Feature to consider usePathBasedConfig and passed same in blueprint but seems not working.\nbeanConfig.setUsePathBasedConfig(Boolean.parseBoolean(getUsePathBasedConfig()));\n CXF Swagger2Feature \n<bean id=\"swagger2Feature\" class=\"org.apache.cxf.jaxrs.swagger.Swagger2Feature\">\n    <property name=\"basePath\" value=\"/cxf/swaggerSample\"/>\n    <property name=\"usePathBasedConfig\" value=\"true\" />\n</bean>\n. Thanks Andriy.\nIt would be great if you can share the patch as I tried modifying Swagger2Feature to consider usePathBasedConfig and passed same in blueprint but seems not working.\nbeanConfig.setUsePathBasedConfig(Boolean.parseBoolean(getUsePathBasedConfig()));\n CXF Swagger2Feature \n<bean id=\"swagger2Feature\" class=\"org.apache.cxf.jaxrs.swagger.Swagger2Feature\">\n    <property name=\"basePath\" value=\"/cxf/swaggerSample\"/>\n    <property name=\"usePathBasedConfig\" value=\"true\" />\n</bean>\n. Thanks really appreciate that @reta.\n. Thanks really appreciate that @reta.\n. Thanks @webron i can wait for couple of weeks:) \n. Thanks @webron i can wait for couple of weeks:) \n. \nswagger-snapshot-repo\nApache Maven Plugin Snapshots\nhttps://oss.sonatype.org/content/repositories/snapshots/\n\nfalse\n\n\ntrue\n\n\n. \nswagger-snapshot-repo\nApache Maven Plugin Snapshots\nhttps://oss.sonatype.org/content/repositories/snapshots/\n\nfalse\n\n\ntrue\n\n\n. Hi @webron,\nAny update on deployment of 1.5.10?\nThanks.\n. Hi @webron,\nAny update on deployment of 1.5.10?\nThanks.\n. thanks @webron \n. thanks @webron \n. Hi @webron,\nby any chance 1.5.10 pushed?\n. Hi @webron,\nby any chance 1.5.10 pushed?\n. ",
    "GlennVanSchil": "I found out that it only create the first SmartConfig object it encounters and all the methods (get, post,put, ...) reference to that one object.\nJSON\n{\n    \"swagger\": \"2.0\",\n    \"info\": {\n        \"description\": \"The goal is to design and build a prototype of a Virtual Salesperson, an advanced search engine that combines natural language question-answer and structured product data to assist visitors of a webshop to find and buy products as if they were interacting with a human salesperson.\",\n        \"version\": \"1.0\",\n        \"title\": \"SmartAsk API\",\n        \"contact\": {\n            \"name\": \"Smartspoken\"\n        },\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n        }\n    },\n    \"host\": \"localhost:8080\",\n    \"basePath\": \"/\",\n    \"tags\": [{\n        \"name\": \"SmartConfig\",\n        \"description\": \"Everything you need to manage a SmartConfig\"\n    }],\n    \"paths\": {\n        \"/smartconfigs\": {\n            \"get\": {\n                \"tags\": [\"SmartConfig\"],\n                \"summary\": \"Get the global SmartConfig\",\n                \"operationId\": \"getSmartConfigUsingGET_3\",\n                \"consumes\": [\"application/json\"],\n                \"produces\": [\"application/smartask.smartconfigv1+xml\", \"application/smartask.smartconfigv1+json\"],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/SmartConfig\"\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\"SmartConfig\"],\n                \"summary\": \"Create a global SmartConfig\",\n                \"description\": \"Only one SmartConfig can exist\",\n                \"operationId\": \"createSmartConfigUsingPOST\",\n                \"consumes\": [\"application/smartask.smartconfigv1+xml\", \"application/smartask.smartconfigv1+json\"],\n                \"produces\": [\"*/*\"],\n                \"parameters\": [{\n                    \"in\": \"body\",\n                    \"name\": \"smartConfig\",\n                    \"description\": \"smartConfig\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"$ref\": \"#/definitions/SmartConfig\"\n                    }\n                }],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"201\": {\n                        \"description\": \"Created\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    }\n                }\n            }\n        },\n        \"/smartconfigs/{id}\": {\n            \"get\": {\n                \"tags\": [\"SmartConfig\"],\n                \"summary\": \"Get a global SmartConfig by it's ID\",\n                \"operationId\": \"getSmartConfigUsingGET\",\n                \"consumes\": [\"application/json\"],\n                \"produces\": [\"application/smartask.smartconfigv1+xml\", \"application/smartask.smartconfigv1+json\"],\n                \"parameters\": [{\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"id\",\n                    \"required\": true,\n                    \"type\": \"string\"\n                }],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/SmartConfig\"\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    }\n                }\n            },\n            \"put\": {\n                \"tags\": [\"SmartConfig\"],\n                \"summary\": \"Update a global SmartConfig by it's ID\",\n                \"operationId\": \"updateSmartConfigUsingPUT\",\n                \"consumes\": [\"application/smartask.smartconfigv1+xml\", \"application/smartask.smartconfigv1+json\"],\n                \"produces\": [\"*/*\"],\n                \"parameters\": [{\n                    \"in\": \"body\",\n                    \"name\": \"smartConfig\",\n                    \"description\": \"smartConfig\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"$ref\": \"#/definitions/SmartConfig\"\n                    }\n                }, {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"id\",\n                    \"required\": true,\n                    \"type\": \"string\"\n                }],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"201\": {\n                        \"description\": \"Created\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\"SmartConfig\"],\n                \"summary\": \"Delete a global SmartConfig by it's ID\",\n                \"operationId\": \"deleteSmartConfigUsingDELETE\",\n                \"consumes\": [\"application/smartask.smartconfigv1+xml\", \"application/smartask.smartconfigv1+json\"],\n                \"produces\": [\"*/*\"],\n                \"parameters\": [{\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"id\",\n                    \"required\": true,\n                    \"type\": \"string\"\n                }],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    }\n                }\n            }\n        }\n    },\n    \"definitions\": {\n        \"LinguisticResourcesWordnets\": {\n            \"properties\": {\n                \"linguisticResourcesWordnet\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/LinguisticResourcesWordnet\"\n                    }\n                }\n            }\n        },\n        \"LinguisticResourcesJazzys\": {\n            \"properties\": {\n                \"linguisticResourcesJazzy\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/LinguisticResourcesJazzy\"\n                    }\n                }\n            }\n        },\n        \"SmartConfig\": {\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"linguisticResourcesJazzys\": {\n                    \"$ref\": \"#/definitions/LinguisticResourcesJazzys\"\n                },\n                \"linguisticResourcesWordnets\": {\n                    \"$ref\": \"#/definitions/LinguisticResourcesWordnets\"\n                },\n                \"locationService\": {\n                    \"type\": \"string\"\n                },\n                \"models\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"self\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"LinguisticResourcesJazzy\": {\n            \"properties\": {\n                \"language\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"LinguisticResourcesWordnet\": {\n            \"properties\": {\n                \"language\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}\n. Found it. I had to move the \n\n@ApiModelProperty(value = \"field\", required = true)\n\nfrom the getter to the field\nthis\n``` java\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport java.util.ArrayList;\nimport java.util.List;\n@ApiModel(\"fields\")\npublic class FieldsInfo {\nprotected List<FieldInfo> fieldInfo;\n\n@ApiModelProperty(value = \"field\", required = true)\npublic List<FieldInfo> getFieldInfo() {\n    if (fieldInfo == null) {\n        fieldInfo = new ArrayList<FieldInfo>();\n    }\n    return this.fieldInfo;\n}\n\n}\n```\nbecame\n``` java\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport java.util.ArrayList;\nimport java.util.List;\n@ApiModel(\"fields\")\npublic class FieldsInfo {\n@ApiModelProperty(value = \"field\", required = true)\nprotected List<FieldInfo> fieldInfo;\n\npublic List<FieldInfo> getFieldInfo() {\n    if (fieldInfo == null) {\n        fieldInfo = new ArrayList<FieldInfo>();\n    }\n    return this.fieldInfo;\n}\n\n}\n```\n. ",
    "AlexElin": "Hi, @a-dudko. It's  the bug  in swagger-ui.\n. Hi @fehguy. I've brought back the parameter.\n. ",
    "harish-nagarro": "Is this bug fixed. \nIf so in which version ?. ",
    "vivin": "@fehguy @wing328 This addresses issue #1667. Hope this approach is ok!\n. ",
    "hyperknob": "Hi @webron\nI followed all the steps mentioned in u suggested URL but still getting same error as mentioned by @amreladawy\n\nI ecountered the same problem. ",
    "mashkurm": "Hello, I followed the same pattern, I am getting swagger.json but with only GET request.. There are so many PUT, POST and DELETE requests which are not shown in swagger.json file.\nAny idea how to solve it?\nThanks in advance!. Hello Ron,\nI am not able to see any POST, PUT or PATCH request in my swagger.json after setting up the jetty server..\nWhat can be the cause, I tried the solution given above, but it didn't work..\nI am using the code from here - https://github.com/swagger-api/swagger-samples/tree/master/java/java-resteasy-filter\nThanks in advance..\n-Mashkur. ",
    "emirkin": "Created https://github.com/OAI/OpenAPI-Specification/issues/584\n. ",
    "eniniz": "thank you for responding; \nmy configuration is : \nI'm using resteasy so I followed the configuration :Swagger Core RESTEasy 2.X Project Setup 1.5: \nhttps://github.com/swagger-api/swagger-core/wiki/Swagger-Core-RESTEasy-2.X-Project-Setup-1.5\n- First,I added the dependency to my project :\n  <dependency>\n  <groupId>io.swagger</groupId>\n  <artifactId>swagger-jaxrs</artifactId>\n  <version>1.5.0</version>\n  </dependency>\n- then I Hooked up Swagger-Core in your Application :  using the application class : \n  public Set<Class<?>> getClasses() {\n      Set<Class<?>> resources = new HashSet();\n      //resources.add(FirstResource.class);\n      //resources.add(SecondResource.class);\n      //...\n      resources.add(io.swagger.jaxrs.listing.ApiListingResource.class);\n      resources.add(io.swagger.jaxrs.listing.SwaggerSerializers.class);\n      return resources;\n  }\n- Finally I Configured and Initialized Swagger Using the Application class:\n  public SampleApplication() {\n      BeanConfig beanConfig = new BeanConfig();\n      beanConfig.setVersion(\"1.0.2\");\n      beanConfig.setSchemes(new String[]{\"http\"});\n      beanConfig.setHost(\"localhost:8080\");\n      beanConfig.setBasePath(\"/api\");\n      beanConfig.setResourcePackage(\"io.swagger.resources\");\n      beanConfig.setScan(true);\n  }\nand to run the app, I downloaded Swagger UI, in the dist folder I changed the url in the index.html to my app(localhost:8080/MayApp/api)\n. > did you register your Application in web.xml?\nI  didn't register it in web.xml, because I have done this using the Application class,\nI taught that we can choose between theses choices\n-  Manual registration using configuration switches\n-  Automatic scanning and registration\n-  Using the Application class\n-  Using Spring\n\ncan you deploy/run and do your apis work ok\n\nnope my application doesn't work any more \n\nand can you access ../../swagger.json?\n\nI dont know how to access it :( \n. ",
    "jllado": "Hi @frantuma, which configuration files whould you like to check?\nAny way, here you are some of them:\npom.xml\n<dependency>\n            <groupId>org.apache.tomee</groupId>\n            <artifactId>javaee-api</artifactId>\n            <version>7.0</version>\n            <scope>provided</scope>\n        </dependency>               \n        <dependency>\n            <groupId>org.apache.tomcat</groupId>\n            <artifactId>tomcat-catalina</artifactId>\n            <version>8.0.29</version>\n            <scope>provided</scope>            \n        </dependency>\n        <dependency>\n            <groupId>org.apache.tomee</groupId>\n            <artifactId>apache-tomee</artifactId>\n            <version>7.0.0-M1</version>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.tomee</groupId>\n            <artifactId>tomee-jaxrs</artifactId>\n            <version>7.0.0-M1</version>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.tomee</groupId>\n            <artifactId>openejb-cxf</artifactId>\n            <version>7.0.0-M1</version>\n            <scope>provided</scope>\n        </dependency>\n     <dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-jaxrs</artifactId>\n            <version>1.5.7</version>\n            <exclusions>\n                <!-- API are useless since in javaee-api -->\n                <exclusion>\n                    <groupId>javax.ws.rs</groupId>\n                    <artifactId>jsr311-api</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>javax.validation</groupId>\n                    <artifactId>validation-api</artifactId>\n                </exclusion>\n                <!-- not useful for the GUI -> only json for us -->\n                <exclusion>\n                    <groupId>com.fasterxml.jackson.dataformat</groupId>\n                    <artifactId>jackson-dataformat-xml</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>com.fasterxml.jackson.datatype</groupId>\n                    <artifactId>jackson-datatype-joda</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>com.fasterxml.jackson.datatype</groupId>\n                    <artifactId>jackson-annotations</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>com.fasterxml.jackson.core</groupId>\n                    <artifactId>jackson-core</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>com.fasterxml.jackson.datatype</groupId>\n                    <artifactId>jackson-databind</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>com.fasterxml.jackson.datatype</groupId>\n                    <artifactId>jackson-jaxrs-json-provider</artifactId>\n                </exclusion>\n                <!-- we don't use reflections so no need of javassist -->\n                <exclusion>\n                    <groupId>org.javassist</groupId>\n                    <artifactId>javassist</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.reflections</groupId>\n                    <artifactId>reflections</artifactId>\n                </exclusion>\n                 <!--we'll reuse the container one or add an impl as well to your app -->\n                <exclusion>\n                    <groupId>org.slf4j</groupId>\n                    <artifactId>slf4j-api</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\nweb.xml\n```\n    \nswagger\nio.swagger.jaxrs.config.DefaultJaxrsConfig\n\napi.version\n1.0.0\n\n\nswagger.api.basepath\n/resources\n\n\nswagger.api.title\nXXXXXX API\n\n1\n\n```\n. ",
    "weisebrazil": "I opened a new issue, because I use resteasy with google guice and I dont use the default implementation of resteasy servlet dispatcher. You can see how I resolved this in #2239 . Is a issue to fix when I use filter to control my services. The workaround is this code added here. But I believe the better solution is change how the SwaggerContextService class works.. ",
    "jasonmevans": "I think I've figured it out. \nThe issue occurs when you have no reference YAML spec file, but do have the config in your POM file (api.spec.reference). I was working on annotating my Java code, and ran into this issue before adding the file referenced by the POM config. Since I had not yet added my base api.spec.reference YAML file I believe that Swagger could not find what version to use for the diff. It looks like in that case the version defaults to \"swagger\". \nI think there could be some better error messaging for this case. Maybe, an error stating, \"The file referenced in api.spec.reference could not be found\" would be useful.\n. ",
    "sunandabbytes": "I achieved it by putting provided for Swagger annotations dependency. Thanks.\n. ",
    "bytemybits": "I should clarify, I'm mapping an XML response from an HTTP request.\n. I was expressing myself wrong. I've added a snippet of the generated class do the original post. That's what I think is causing my issue.\n. Now that you mention it, I would say yes, since that's what generates the model classes. Thank you for your help. \n. ",
    "X3Cutor": "Ok, that probably solves it then! I was apparently reading old docs for some reason: http://docs.swagger.io/swagger-core/apidocs/com/wordnik/swagger/annotations/ApiModelProperty.html#allowableValues()\nSorry about reporting a non-issue.\n. ",
    "QueryParam": ":+1: \n. :+1: \n. ",
    "xaviarias": "Hi, \nIt'd also be interesting to support custom constraints (http://beanvalidation.org/1.1/spec/#constraintsdefinitionimplementation) to recognize the NotNull, Size, Min and Max annotations, at least at one level (a custom Constraint annotated with one of the standard constraints), e.g.\n```\n@NotNull\n@Documented\n@Retention(RUNTIME)\n@Size(min = Country.SIZE, max = Country.SIZE)\n@Constraint(validatedBy = { Country.Validator.class })\n@Target({ METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER })\npublic @interface Country {\nint SIZE = 2;\nString message() default \"{domain.constraints.Country.message}\";\nClass<?>[] groups() default {};\nClass<? extends Payload>[] payload() default {};\nclass Validator implements ConstraintValidator {\n  @Override\n  public void initialize(Country constraintAnnotation) {\n  }\n\n  @Override\n  public boolean isValid(String value, ConstraintValidatorContext context) {\n        return 0 <= Arrays.binarySearch(Locale.getISOCountries(), value);\n  }\n\n}\n}\n```\nThanks\n. ",
    "SwingGuy1024": "The example provided by fehguy is no longer a valid link. I'm actually looking for something in the docs telling me exactly which validations are supported.. ",
    "JohnAnderton": "Could anyone merge that pull request please?\n. Could anyone merge that pull request please?\n. ",
    "Kvezon": "NPE was fixed. But the problems is not fixed completely. For example we have definitions 'def1' and 'def2', 'def1' has a link to 'def2' and this two definitions are not used anywhere. 'def1' will be deleted, 'def2' will not because there were links in 'def1'.\n. @frantuma Looks like fixed\n. ",
    "liq05": "someone have the same problem?\n. someone have the same problem?\n. Edit again.\n. Edit again.\n. what's the Kooujk meaning?\n. what's the Kooujk meaning?\n. my userinfo class:\n``` java\n@ApiModel(value = \"UserInfo\",discriminator = \"phoneNum\")\npublic class UserInfo// implements Serializable\n{\n    @ApiModelProperty(value = \"user id\")\n    private int id;\n    @ApiModelProperty(value = \"user name\")\n    private String name;\n    @ApiModelProperty(value = \"user age\")\n    private int age;\n    @ApiModelProperty(value = \"user phone num\")\n    private PhoneNum phoneNum;\npublic PhoneNum getPhoneNum() {\n    return phoneNum;\n}\n\npublic void setPhoneNum(PhoneNum phoneNum) {\n    this.phoneNum.setHomeNum(phoneNum.getHomeNum());\n    this.phoneNum.setMobileNum(phoneNum.getMobileNum());\n}\n\npublic int getId() {\n    return id;\n}\n\npublic void setId(int id) {\n    this.id = id;\n}\n\npublic String getName() {\n    return name;\n}\n\npublic void setName(String name) {\n    this.name = name;\n}\n\npublic int getAge() {\n    return age;\n}\n\npublic void setAge(int age) {\n    this.age = age;\n}\n\npublic UserInfo(int id,String name,int age)\n{\n    this.id  =id;\n    this.name=name;\n    this.age =age;\n}\n\npublic UserInfo()\n{}\n\n@Override\npublic String toString()\n{\n    return \"UserInfo [id=\" + id + \", name=\" + name + \", age=\" + age + \"]\";\n}\n\n}\nmy PhoneNum class:\npublic class PhoneNum implements Serializable{\n    @ApiModelProperty(value = \"phone num of home\")\n    private String homeNum;\n    @ApiModelProperty(value = \"mobile phone num\")\n    private String mobileNum;\npublic String getHomeNum() {\n    return homeNum;\n}\n\npublic void setHomeNum(String homeNum) {\n    this.homeNum = homeNum;\n}\n\npublic String getMobileNum() {\n    return mobileNum;\n}\n\npublic void setMobileNum(String mobileNum) {\n    this.mobileNum = mobileNum;\n}\n\npublic PhoneNum(){}\n\n}\nmy api class:\n@Api(basePath = \"/\", value = \"\u7528\u6237\u4fe1\u606f\u7ba1\u7406\")\n@Controller(value=\"UserController\")\npublic class UserController extends BaseController\n{\n    @RequestMapping(value = \"addUser\", method = RequestMethod.POST, produces = \"application/json; charset=utf-8\")\n    @ApiOperation(value = \"\u6dfb\u52a0\u7528\u6237\", httpMethod = \"POST\", response = String.class ,notes = \"\u6dfb\u52a0\u7528\u6237\")\n    public @ResponseBody String addUser(\n            @ApiParam(required = true, name = \"userInfo\" , value = \"\u7528\u6237\u4fe1\u606fjson\u6570\u636e\")\n            @RequestBody\n            UserInfo userInfo)\n    {\n        return \"\";\n    }\n}\nsawgger ui api model:\n{\n  \"description\": \"\",\n  \"id\": \"UserInfo\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"user id\",\n      \"required\": false,\n      \"format\": \"int32\",\n      \"type\": \"integer\"\n    },\n    \"name\": {\n      \"description\": \"user name\",\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"age\": {\n      \"description\": \"user age\",\n      \"required\": false,\n      \"format\": \"int32\",\n      \"type\": \"integer\"\n    },\n    \"phoneNum\": {\n      \"description\": \"user phone num\",\n      \"required\": false,\n      \"type\": \"PhoneNum\"//PhoneNum is class type,has Property description,but not show anywhere\n    }\n  }\n}\n```\n. my userinfo class:\n``` java\n@ApiModel(value = \"UserInfo\",discriminator = \"phoneNum\")\npublic class UserInfo// implements Serializable\n{\n    @ApiModelProperty(value = \"user id\")\n    private int id;\n    @ApiModelProperty(value = \"user name\")\n    private String name;\n    @ApiModelProperty(value = \"user age\")\n    private int age;\n    @ApiModelProperty(value = \"user phone num\")\n    private PhoneNum phoneNum;\npublic PhoneNum getPhoneNum() {\n    return phoneNum;\n}\n\npublic void setPhoneNum(PhoneNum phoneNum) {\n    this.phoneNum.setHomeNum(phoneNum.getHomeNum());\n    this.phoneNum.setMobileNum(phoneNum.getMobileNum());\n}\n\npublic int getId() {\n    return id;\n}\n\npublic void setId(int id) {\n    this.id = id;\n}\n\npublic String getName() {\n    return name;\n}\n\npublic void setName(String name) {\n    this.name = name;\n}\n\npublic int getAge() {\n    return age;\n}\n\npublic void setAge(int age) {\n    this.age = age;\n}\n\npublic UserInfo(int id,String name,int age)\n{\n    this.id  =id;\n    this.name=name;\n    this.age =age;\n}\n\npublic UserInfo()\n{}\n\n@Override\npublic String toString()\n{\n    return \"UserInfo [id=\" + id + \", name=\" + name + \", age=\" + age + \"]\";\n}\n\n}\nmy PhoneNum class:\npublic class PhoneNum implements Serializable{\n    @ApiModelProperty(value = \"phone num of home\")\n    private String homeNum;\n    @ApiModelProperty(value = \"mobile phone num\")\n    private String mobileNum;\npublic String getHomeNum() {\n    return homeNum;\n}\n\npublic void setHomeNum(String homeNum) {\n    this.homeNum = homeNum;\n}\n\npublic String getMobileNum() {\n    return mobileNum;\n}\n\npublic void setMobileNum(String mobileNum) {\n    this.mobileNum = mobileNum;\n}\n\npublic PhoneNum(){}\n\n}\nmy api class:\n@Api(basePath = \"/\", value = \"\u7528\u6237\u4fe1\u606f\u7ba1\u7406\")\n@Controller(value=\"UserController\")\npublic class UserController extends BaseController\n{\n    @RequestMapping(value = \"addUser\", method = RequestMethod.POST, produces = \"application/json; charset=utf-8\")\n    @ApiOperation(value = \"\u6dfb\u52a0\u7528\u6237\", httpMethod = \"POST\", response = String.class ,notes = \"\u6dfb\u52a0\u7528\u6237\")\n    public @ResponseBody String addUser(\n            @ApiParam(required = true, name = \"userInfo\" , value = \"\u7528\u6237\u4fe1\u606fjson\u6570\u636e\")\n            @RequestBody\n            UserInfo userInfo)\n    {\n        return \"\";\n    }\n}\nsawgger ui api model:\n{\n  \"description\": \"\",\n  \"id\": \"UserInfo\",\n  \"properties\": {\n    \"id\": {\n      \"description\": \"user id\",\n      \"required\": false,\n      \"format\": \"int32\",\n      \"type\": \"integer\"\n    },\n    \"name\": {\n      \"description\": \"user name\",\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"age\": {\n      \"description\": \"user age\",\n      \"required\": false,\n      \"format\": \"int32\",\n      \"type\": \"integer\"\n    },\n    \"phoneNum\": {\n      \"description\": \"user phone num\",\n      \"required\": false,\n      \"type\": \"PhoneNum\"//PhoneNum is class type,has Property description,but not show anywhere\n    }\n  }\n}\n```\n. yes,swagger-springmvc 1.0.2\n. yes,swagger-springmvc 1.0.2\n. IE and Chrome get the same web page of swagger ui model.\n. IE and Chrome get the same web page of swagger ui model.\n. @webron thks for your answer.\n. ",
    "Sineaggi": "That means instead of\njava\n@ApiImplicitParams({\n    @ApiImplicitParam(name = \"name\", value = \"User's name\"),\n    @ApiImplicitParam(name = \"email\", value = \"User's email\")\n})\nin java 8 you can stack multiple repeatable annotations onto the same method\njava\n@ApiImplicitParam(name = \"name\", value = \"User's name\")\n@ApiImplicitParam(name = \"email\", value = \"User's email\"). That means instead of\njava\n@ApiImplicitParams({\n    @ApiImplicitParam(name = \"name\", value = \"User's name\"),\n    @ApiImplicitParam(name = \"email\", value = \"User's email\")\n})\nin java 8 you can stack multiple repeatable annotations onto the same method\njava\n@ApiImplicitParam(name = \"name\", value = \"User's name\")\n@ApiImplicitParam(name = \"email\", value = \"User's email\"). ",
    "asteriosm": "Yes @webron I experience the same problems after upgrading to 1.5.8.\nYes I am using hot-deployments. If I restart WebLogic (without redeployment) I experience the same randomness. \nIs fixed and get broken or\nIs broken and get fixed or\nIs fixed and remain fixed or\nIs broken and remain broken.\nI am not seeing any pattern.\nIf I forgot to mention, not all the rest service get fixed or broken at the same time (everything, it's seems random).\nAn example:\nDeploy or Restart 1:\n- Rest 1: Fixed\n- Rest 2: Fixed\n- Rest 3: Broken\n- Rest 4: Broken\nDeploy or Restart 2:\n- Rest 1: Broken\n- Rest 2: Fixed\n- Rest 3: Fixed\n- Rest 4: Broken\nDeploy or Restart 3:\n- Rest 1: Broken\n- Rest 2: Broken\n- Rest 3: Broken\n- Rest 4: Broken\nDeploy or Restart 4:\n- Rest 1: Fixed\n- Rest 2: Fixed\n- Rest 3: Fixed\n- Rest 4: Fixed\nI know, it is a nightmare of determinism!\n. Sorry for the delay!\n@webron when I get the broken spec I can't operate my API from swagger-ui, although the API is working fine if I call the services from postman.\nI also think that this is more of a WebLogic issue. I will try to deploy my app in tomcat and see the behavior there (I believe that is going to be ok and the problem is indeed with weblogic). Also I will try to build some prototype to reproduce the problem with weblogic and swagger.\nIf I see the same behaviour with tomcat I will come back!\nThanks for the help so far!\n. Just an update in this old issue: This was indeed a WebLogic issue than swagger-core. With a fresh installation of the WebLogic everything is ok with swagger! Thanks again for the help!\n. ",
    "rainerwei": "Hi @frantuma, Yes i think that should do the trick.\n. ",
    "johnament": "I believe it's 1.5.7.\n. Oh ok.  jaxrs.\n. That doesn't make sense, why would I use a jersey library when I'm not using jersey?\nCan support for BeanParam be moved into jaxrs instead of jersey?  This is a core capability of JAX-RS, not a feature unique to jersey.\n. The problem is that jersey2-jaxrs has a hard dependency on jersey.  I'm using resteasy.  I can't bring in jersey.\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jersey2-jaxrs/pom.xml#L74\n. ",
    "ivansky": "Useless tool then...\n. ",
    "lwojtysiak": "I figured out that version 1.5.8 did some unexpected behaviour.\nWhen I changed verison to 1.5.7 json and yaml are generated.\nWhat I found with verisn 1.5.8:\n1. when using:\n \nonly /swagger.yaml works (no /swagger and no /swagger.json)\n1. when using \n   \nonly /swagger.json and /swagger works (no /swagger.yaml)\nIs it really what you wanted? As I read:\nhttps://groups.google.com/forum/#!topic/swagger-swaggersocket/LzWEoAW_m4k\nIt shouldn't work like this...\n. Could you please provide more information?\n. ",
    "tomzo": "I think you have misconfigured BeanConfig when using 1.5.8. See release notes https://github.com/swagger-api/swagger-core/releases/tag/v1.5.8\n. I too had undefined behavior when I used io.swagger.jersey.listing instead of new io.swagger.jaxrs.listing in package scanning. I am using swagger and jersey2 and spring and I a can access both /swagger.json and /swagger.yaml\nHere is how I configure it:\n``` java\npublic class JerseyConfig extends ResourceConfig {\npublic JerseyConfig() {\n    // https://github.com/swagger-api/swagger-core/wiki/Swagger-Core-Jersey-2.X-Project-Setup-1.5#using-swaggers-beanconfig\n    BeanConfig config = new BeanConfig();\n    config.setResourcePackage(\"my.package\");\n    config.setVersion(\"0.1.0\");\n    config.setTitle(\"MyTitle\");\n    config.setScan(true);\n\n    // create a resource config that scans for JAX-RS resources and providers\n    // in com.ai_traders.gpd.api package\n    String[] packages = {\"my.package\", \"io.swagger.jaxrs.listing\"};\n\n    packages(packages);\n    property(\"contextConfig\", new AnnotationConfigApplicationContext(SpringAnnotationConfig.class));\n\n    register(MultiPartFeature.class);\n    register(RequestContextFilter.class);\n    register(LoggingFilter.class);\n}\n\n}\n```\nI only meant that I doubt there is a bug in 1.5.8. But usage has changed.\n. ",
    "mingkaili": "How to generate swagger html document\n1.swagger core installation is complete\n2. The addition was complete annotation interface\n3. how to generate API documentation\nMy English is not very good, please help.\n. sad\n. please help me! please ! please !\nplease help me! please ! please !\nplease help me! please ! please !\nplease help me! please ! please !\nplease help me! please ! please !\nplease help me! please ! please !\n. sad!!!!\n. ",
    "crankydillo": "Sorry, I thought I linked to the relevant code, which would treat the above as an internal (to the document) reference.\n. ",
    "kennywk": "I just tried version 1.5.7 and it still occurs.\n. Understand, I am migrating from version 1.3, where i have all the method parameters mapped to @ApiImplicitParam. Migrating to the new version will require that i move all of those to the method or add an additional param to the method.\nAlso the method level parameters muddy up the source where as the @ApiImplicitParam looks cleaner and easier to mantain imo.\nSo migrating to the newest version seems as if it will be more of a task then expected. I suppose i'll have to wait. \nThanks. \n. ",
    "Pluggables": "Webron: If you read my original content, you'll see that I said I wasn't sure if it was specific to Amazon API Gateway.  That was the very first line.\n. ",
    "roni-frantchi": "@fehguy see my PR here:\nhttps://github.com/swagger-api/swagger-core/issues/1741\nThere's also a unit test included to demonstrate the behavior.\nLet me know if that's what you've been looking for \n. @arpit8403 my PR here: #1741 fixed the issue for us.\nWe've been using our fork ever since -\nI'm waiting for @webron, @frantuma, or @fehguy to approve it.\n. @fehguy ?... anyone...?\nIt's been almost 6 months now... \nAny reason not to merge?.. Any changes that I should make?..\n. @webron will get right on resolving those pesky conflicts and push for reviewal\nShana Tova :)\n. @webron @frantuma @fehguy any news on this one?.... @fehguy wait, what?\nFirst, wasn't 'parent' an attribute that was already available?\nSecond, isn't the spec extendible so that one can add further metadata?\nThird, how about a suggestion of what would be a valid approach?. > There is a difference between having a property in the java pojo and in the JSON/YAML description. \n@fehguy that's understood. Looking for recommendation of what fixes I may apply here that would make the approach valid.. @fehguy the spec says:\n\nWhile the Swagger Specification tries to accommodate most use cases, additional data can be added to extend the specification at certain points.\nThe extensions properties are always prefixed by \"x-\" and can have any valid JSON format value.\n\nhttps://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#specification-extensions\nSo, if I add that prefix, meaning parent would become x-parent, that would become a valid approach, right?\nWould you like me to open another PR with that change in place?. @morpheus9999 still waiting for someone to review my work.. it's now been more than 6 months.... @ErikGrimes Yes they do. \nBut one would have to use the API annotations in this particular case.\ne.g.\n```java\ninterface I {...};\n@ApiModel(parent = I.class)\nabstract class A implements I {...};\n@ApiModel(parent = A.class)\nclass B extends A {...};\n``. @ErikGrimes: \n1. I'm not sure what you mean bysubTypes;\nSetting the parent is then used to inverse and add child (subTypes`?) nodes to the specified parent. See this line: https://github.com/swagger-api/swagger-core/pull/2037/files#diff-b96cf6dc444f477102be00b2ab470836R109\n\nI'm not entirely sure what you mean by that... Could you provide an example?. @ErikGrimes Say your project has n+1 modules.\nA single core module, and set of extension-0...extension-n modules who depend on your core.\nIn your core module you would have a Base class and your extensions have an Extension0...ExtensionN classes, all of which inherit from your Base class.\n\nYou cannot use the subtypes property, as it would:\n1. Be impossible to list them as Classes, due to compile time dependencies.\n2. A nightmare to list and maintain their fully qualified String representation.\n3. Impossible to add an n+1 extension without recompiling your core.\n. ",
    "morpheus9999": "Any news?. Any news on this issue?. ",
    "arpit8403": "hi Roni-frantchi ,i have the same use case , where Child model schema does not contain parent model . Even after making a dummy reference of Parent in teh child class it does not work . Which swagger-core version i need to use to make it work ,is it swagger-core-1.5.8 or swagger-core-1.5.7?. ",
    "swartzrock": "Using 1.5.8. Also updated the description.\n. ",
    "nightkc": "Hi. I also encountered the same issue,\nI took a look at the functions, and found the cause in side the method: io.swagger.core.filter.SpecFilter.filterDefinitions(...)\nclonedModel.getProperties() returns Map which was referencing to the statically shared swagger definitions before filtering. The code below is taken from the method,\n```\n        Model clonedModel = (Model) definition.clone();      // -- clone is not actually copying\n        if (clonedModel.getProperties() != null) {\n            clonedModel.getProperties().clear();         // -- removes the original copy\n        }\n    if( definition.getVendorExtensions() != null && clonedModel.getVendorExtensions() != null ){\n        clonedModel.getVendorExtensions().putAll( definition.getVendorExtensions());\n    }\n\n    clonedModel.setProperties(clonedProperties);        // -- this method is only adding, not setting\n    clonedDefinitions.put(key, clonedModel);\n\n```\nI think the clonedModel.getProperties().clear(); was called to fix bugs in setProperties which clonedModel.setProperties calls addProperty in loop (As a result, clonedModel has all properties before filtering, and clonedModel.setProperties(clonedProperties) does \"add\" instead of \"set\" ). However, Model clonedModel = (Model) definition.clone() cloned the original reference into the clone obj, so that when clonedModel.getProperties().clear() is called, the original properties (none-filtered cache shared by all threads) get erased, and overwritten by clonedModel.setProperties(...) . \n. ",
    "enlait": "Our API always responds with status code 200 and json response body with success boolean. Except for some common values like success, models for successful and erroneous responses are completely different. So it turns out that one response model always has true for success and another has false.\nWe can't map two different response models for the same code, but that's another problem.\n. ",
    "DenEwout": "Thanks, that did it.\n. ",
    "blommish": "Sorry, this can be closed. Found our by reading the wiki here that I might need to exclude jersey version. That was the solution.\nCan be closed\n. ",
    "adetlefsen-rms": "+1. ",
    "bikerunner": "Created a fix Pull Request: #1754 \n. As I see the REPORT method is registered in the HTTP method registry. The usage of the REPORT method is limited to RFC 3253 (Versioning Extensions to WebDAV) which is not a general HTTP spec. Needs swagger support for this kind of methods?\n. Hi, it sound more like a conflict of class loading. The class in the application ( part \"(Swagger)\" )is loaded by another classloader as the instance \"sc.getServletContext().getAttribute(\"swagger\")\" to cast.\nPlease try:\n- before the cast save the \"sc.getServletContext().getAttribute(\"swagger\")\" to an object\n- get the class from the instance and the class loader and display the hash code\n- next use \"Swagger.class.getClassloader().getHashCode()\" from the internal class and compare both class loaders\nIt looks like one of the classes is loaded by a class loader from the application server and the second one from a class loader of the web application. Each (mostly) web application uses an own class loader to isolate for security. You need to remove the \"swagger\" JAR files from the web application if these exist already within the context of the application server.\n. ",
    "andyskw": "+1\n. ",
    "twan-ewx": "This would be very nice to have implemented. Is there any progress on this? Or is there a known work-around?\n. ",
    "scsynergy": "I tried everything described in this issue but it just will not work. I am trying to use Swagger for documenting our WebDav interface which, naturally, uses HTTP methods PROPFIND, PROPPATCH, MKCOL, LOCK, UNLOCK, COPY and MOVE (http://www.webdav.org/specs/rfc4918.html). Seems like I will have to resort to WADL instead because Swagger is missing the ability to have its list of HTTP methods extended.\n. ",
    "Hades32": "@fehguy why hasn't this been merged yet?\n. Good to know, I already feared there might be valid reasons to refuse it. \nIt's really strange how the swagger online editor and cli generate Java8 time types, but the swagger UI doesn't properly support it...\n. @webron it's not shown as a timestamp but instead a large json object with many fields. so pretty useless...\n. ",
    "danny-zegel-zocdoc": "@fehguy @webron any ETA on merging this?\n. ",
    "xunnanxu": "+1 for this. ",
    "dwhu": "+1. ",
    "malcolmsparks": "I can't see how swagger can call itself RESTful and not allow additional methods.. ",
    "Mejari": "I'm also in need of support for other methods, specifically COPY.. ",
    "carlspring": "@webron,\nThanks for clearing this out! I hadn't noticed! Much appreciated! :)\n. ",
    "gaeljw": "I disagree with you on what documentation says. Have you looked at https://github.com/swagger-api/swagger-core/wiki/Annotations-1.5.X ?\n. ",
    "dandronchik": "Thanks. I guess I checked old version\n. ",
    "sdragoff": "@fehguy , thanks, I'm going to create my project from scratch and add all dependencies for both my project and swagger one by one in order to figure out what's wrong with it. \nFor now, I just added service requests interceptor and put there \ncontext.setAttribute(\"swagger\", null);\nNow I can see swagger json but without  my service docks. I debugged solution and found out that there is no possible way to scan service beans with javax.ws.rs.Path having \"bundle://\" URL. \n. Guys, thanks for your responses. \nI used to work with swagger on regular and already implemented applications, but now it's osgi cxf jax-rs. I'm going to close this \"issue\". \n. ",
    "GADNT": "Also me, I can reproduce this issue. It's a simple resource/service class and one config class and the result is the same. Anybody can provide some approach to handle this error?. @webron I'm using swagger-core 1.5.0. @webron Thanks for your suggestions, but no luck with 1.5.12. I am trying to deploy to a Weblogic and yes is with jersey 1.18 provided by Weblogic.. Any thoughts related my issue?\n. ",
    "maggu2810": "Handle the jersey2-jaxrs jar similar to the other ones that already brings OSGi support.\n. Hi @webron, @elakito do you see any change to get this merged in front of the next release?\n. done\n. I have compared v1.5.5 to v1.5.7:\nThe previous call to the factory has been changed:\nhttps://github.com/swagger-api/swagger-core/compare/v1.5.5...v1.5.7#diff-5b72a0a48c0069409834b1cd6ce38282L48\nThe getScanner function uses the ScannerFactory only if the value is null.\nhttps://github.com/swagger-api/swagger-core/compare/v1.5.5...v1.5.7#diff-55650387ef7908bb46e3b090ee8460b7R232\nBut SwaggerScannerLocator will create a default scanner if there is no one defined and never returns null.\nhttps://github.com/swagger-api/swagger-core/compare/v1.5.5...v1.5.7#diff-fc757da4002c12bba84c73f26e1be755R29\n. Hm, I could try to rephrase my question:\nThe scanner set by the ScannerFactory.setScanner method is not (has not been on v1.5.7) used anymore (see explanation in the previous two comments).\nSo, code that relies on the fact the the scanner set by setScanner is used if there is no one for the given scanner id has been broken with the linked changes.\nIf the scanner set by the resp. method is not used and the behaviour has been changed, too, wouldn't it be better to remove the function so third party code knows, that this method to force a special default scanner does not work anymore?. ",
    "cjolif": "My use-case is arbitrary JSON I know that's not Swagger focus. But I do have some APIs that return arbitray JSON (type-less type basically ;)). So ideally I like to have either type: \"json\" or no type at all (but with no type at all the parser is stripping out entirely the info).\n. @webron ok, sorry maybe I was not clear enough, what I had in mind is not arbitrary JSON but arbitrary JSON value. So not necessarily an object but maybe a string etc... A particular API call is very generic, and can take any JSON value thus my issue. That said maybe I should still go with object even if that did not seem to me like the correct option. Opinion?\n. Basically yes.\n. ",
    "ebelanger": "Everything seems in order.  Thank you very much :)\n. Everything seems in order.  Thank you very much :)\n. ",
    "afkham": "What I was thinking is, since WTFPL allows you to do what you want, it may be possible to make a copy of that code into the swagger-jaxrs repo, and then license the code under Apache Software License. \nI have also raised an issue in the reflections project https://github.com/ronmamo/reflections/issues/134\nLet's wait & see what they have to say.\n. This has been fixed with https://github.com/ronmamo/reflections/pull/107\n. Is there any issue with merging that PR?\nOn Tue, May 31, 2016 at 8:43 AM, Kevin Cooney notifications@github.com\nwrote:\n\nThe issue hasn't been fixed; ronmamo/reflections#107\nhttps://github.com/ronmamo/reflections/pull/107 has not been merged\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1779#issuecomment-222583471,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ACiBtaFM0QgsqmYEd1ZsKQWLRQ-64cupks5qG6dbgaJpZM4IW2gw\n.\n\n\nAfkham Azeez\nDirector of Architecture; WSO2, Inc.; http://wso2.com\nMember; Apache Software Foundation; http://www.apache.org/\n- http://www.apache.org/\n  _email: _azeez@wso2.com* azeez@wso2.com\n- cell: +94 77 3320919blog: http://blog.afkham.org\n  http://blog.afkham.org\n  _twitter: _http://twitter.com/afkham_azeez\n  http://twitter.com/afkham_azeez\n  _linked-in: _http://lk.linkedin.com/in/afkhamazeez\n  http://lk.linkedin.com/in/afkhamazeez*\nLean . Enterprise . Middleware\n. Sorry that PR wasn't merged :(\n. ",
    "kcooney": "The issue hasn't been fixed; https://github.com/ronmamo/reflections/pull/107 has not been merged\n. @afkham I am not a maintainer.for Reflections so I can't merge pull requests \n. ",
    "b0c1": "Ohh and version swagger 1.5.8 (spring boot with jersey)\n. I try to investigate the problem.\nI think it's in swagger-jaxrs Reader class.\njava\n            for (Method method : methods) {\n                AnnotatedMethod annotatedMethod = bd.findMethod(method.getName(), method.getParameterTypes());\n                if (ReflectionUtils.isOverriddenMethod(method, cls)) {\n                    continue;\n                }\nSo I Can't implement a method? ??? more exactly the implemented method can't be exposed to outside?\nThe JAX-RS specification allow to use inheritance (and it's works, just not exposed to jersey):\nJAX-RS annotations may be used on the methods and method parameters of a super-class or an implemented interface. Such annotations are inherited by a corresponding sub-class or implementation class method provided that the method and its parameters do not have any JAX-RS annotations of their own. Annotations on a super-class take precedence over those on an implemented interface. The precedence over conflicting annotations defined in multiple implemented interfaces is implementation specific. Note that inheritance of class or interface annotations is not supported.\nhttp://download.oracle.com/otn-pub/jcp/jaxrs-2_0_rev_A-mrel-eval-spec/jsr339-jaxrs-2.0-final-spec.pdf\n. ",
    "marcoslisboa": "+\n. ",
    "MadeInChina": "thx!. ",
    "borillo": "Hi guys, Any workaround for this @sirianni?. Thx a lot for the workaround @StevenChoo!!. ",
    "StevenChoo": "@borillo \nToday,I ran also into this problem by coincidence. Unfortunately I can`t spend lots of time atm looking for the correct fix, but as a quick workaround that seems to work is to manually override the version of the Jackson libraries using maven.\nMaybe to need to try several versions. 2.7.4 didn`t work but 2.5.4 for some reason does. I will check later what the difference is in the source code.\nThe proper fix for this project would be to update the version of Jackson\nexample of the fix in the pom.xml using Maven:\nxml\n<dependencies>\n   <dependency>\n      <groupId>io.swagger</groupId>\n      <artifactId>swagger-jaxrs</artifactId>\n      <exclusions>\n         <exclusion>\n            <groupId>com.fasterxml.jackson.module</groupId>\n            <artifactId>jackson-module-jaxb-annotations</artifactId>\n         </exclusion>\n         <exclusion>\n            <groupId>com.fasterxml.jackson.dataformat</groupId>\n            <artifactId>jackson-dataformat-xml</artifactId>\n         </exclusion>\n         <exclusion>\n            <groupId>com.fasterxml.jackson.jaxrs</groupId>\n            <artifactId>jackson-jaxrs-json-provider</artifactId>\n         </exclusion>\n         <exclusion>\n            <groupId>com.fasterxml.jackson.dataformat</groupId>\n            <artifactId>jackson-dataformat-yaml</artifactId>\n         </exclusion>\n         <exclusion>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-annotations</artifactId>\n         </exclusion>\n         <exclusion>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-databind</artifactId>\n         </exclusion>\n         <exclusion>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-core</artifactId>\n         </exclusion>\n         <exclusion>\n            <groupId>com.fasterxml.jackson.datatype</groupId>\n            <artifactId>jackson-datatype-joda</artifactId>\n         </exclusion>\n         <exclusion>\n            <groupId>com.fasterxml.jackson.jaxrs</groupId>\n            <artifactId>jackson-jaxrs-base</artifactId>\n         </exclusion>\n      </exclusions>\n   </dependency>\n   <dependency>\n      <groupId>com.fasterxml.jackson.module</groupId>\n      <artifactId>jackson-module-jaxb-annotations</artifactId>\n      <version>2.5.4</version>\n   </dependency>\n   <dependency>\n      <groupId>com.fasterxml.jackson.dataformat</groupId>\n      <artifactId>jackson-dataformat-xml</artifactId>\n      <version>2.5.4</version>\n   </dependency>\n   <dependency>\n      <groupId>com.fasterxml.jackson.jaxrs</groupId>\n      <artifactId>jackson-jaxrs-json-provider</artifactId>\n      <version>2.5.4</version>\n   </dependency>\n   <dependency>\n      <groupId>com.fasterxml.jackson.dataformat</groupId>\n      <artifactId>jackson-dataformat-yaml</artifactId>\n      <version>2.5.4</version>\n   </dependency>\n   <dependency>\n      <groupId>com.fasterxml.jackson.core</groupId>\n      <artifactId>jackson-annotations</artifactId>\n      <version>2.5.4</version>\n   </dependency>\n   <dependency>\n      <groupId>com.fasterxml.jackson.core</groupId>\n      <artifactId>jackson-databind</artifactId>\n      <version>2.5.4</version>\n   </dependency>\n   <dependency>\n      <groupId>com.fasterxml.jackson.core</groupId>\n      <artifactId>jackson-core</artifactId>\n      <version>2.5.4</version>\n   </dependency>\n   <dependency>\n      <groupId>com.fasterxml.jackson.datatype</groupId>\n      <artifactId>jackson-datatype-joda</artifactId>\n      <version>2.5.4</version>\n   </dependency>\n   <dependency>\n      <groupId>com.fasterxml.jackson.jaxrs</groupId>\n      <artifactId>jackson-jaxrs-base</artifactId>\n      <version>2.5.4</version>\n   </dependency>\n</dependencies>\n. ",
    "tpavs": "I am trying to use this plugin:\nhttps://github.com/gigaSproule/swagger-gradle-plugin\nAnd I am seeing this error. Anyone know a clever way to work around it? Seems like the trick is getting the plugin to use the correct version of Jackson?. ",
    "p1Machado": "@StevenChoo looks like the problem is related to the method been overloaded and it can't pick one of them.. ",
    "peterkendlbacher": "Dear Tony!\nI am using this dependency:\n\nio.swagger\nswagger-jaxrs\n1.5.8\n\nAlso Version 1.5.9 is not working.\nI moved now back to this dependency and everything works fine.\n\ncom.wordnik\nswagger-jaxrs_2.10\n1.3.13\n\nRegards\nPeter\nAm 24.05.2016 18:41 schrieb \"Tony Tam\" notifications@github.com:\n\nWhat dependency are you using?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1804#issuecomment-221331122\n. I am using ibm liberty profile as application server and have never used the jersey framework, as all of the jax-rs stuff is provided from liberty. Do you see a problem, if I combine the swagger-jersey-jaxrs framework with this?\n\nThanks\nPeter\n. ",
    "ajay-kmr": "Hi,\nI am still facing this issue while using below dependencies:-\ncompile group: 'io.swagger', name: 'swagger-models', version: \"1.5.15\"\ncompile group: 'io.swagger', name: 'swagger-servlet', version: \"1.5.15\". Hi,\nI am still facing this issue while using below dependencies:-\ncompile group: 'io.swagger', name: 'swagger-models', version: \"1.5.15\"\ncompile group: 'io.swagger', name: 'swagger-servlet', version: \"1.5.15\". ",
    "datagitlies": "I'm also facing this issue. I see in the pom file for swagger-servlet the <exclude>logback.xml</exclude> but swagger-servlet contains a logback-test.xml file in /src/main/resources . @phomlish that doesn't work or change anything because swagger-servlet defines its logback dependencies with <scope>provided</scope>.  That being said, it's not even the logback dependency causing the problem, it's the physical file logback-test.xml that exists in /src/main/resources which is then being packaged with swagger-servlet-1.5.16.jar. If I have time I'll fork swagger-core and open a pull request that simply moves the file from /src/main/resources to /test/main/resources in the swagger-servelet module which will fix the problem.. @fehguy since you were last to close this issue... I'm wondering, given the information here and the pull request, whether you still believe the issue should be considered \"closed\". Sonatype somehow fixed the issue on their end.  Closing this issue.. ",
    "phomlish": "try this:\n'      <dependency>\n            <groupId>io.swagger</groupId>\n            <artifactId>swagger-servlet</artifactId>\n            <version>${swagger.version}</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>ch.qos.logback</groupId>\n                    <artifactId>logback-api</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>ch.qos.logback</groupId>\n                    <artifactId>logback-core</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>ch.qos.logback</groupId>\n                    <artifactId>logback-access</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>. ",
    "binlecode": "@fehguy is there any update on this issue... it would be great to have a fix so that the hosting application no longer needs to override logback config file location... Thanks.. ",
    "youkuan": "but it is Spring Boot + Swagger2.0 , Not have Jersey, Not is Jersey's tage.\nI want Spring Boot + Jersey +swagger. \n. ",
    "mikek33": "I suggest you get your resource from spring context before registering in your Jersey config.  If you want to run an aspect you'll need spring to be aware.\nWebApplicationContext springFactory = WebApplicationContextUtils.getWebApplicationContext(servletContext);\n        register(springFactory.getBean(UserController.class));\n. ",
    "JaviRpo": "@youkuan I have the same problem. Did you find a solution?. ",
    "kishoretangudu": "hi\nThank you for the reply.\nNow I have one more Question.\nclass MyModelClass {\nString name;\nString address;\n@XmlElement https://github.com/XmlElement(name = \"resources\")\n@ApiModelProperty(value = \"resources\")\nMap resources= new HashMap();\n//settters and getters of \"resource\" Map\n//setter andd getter for name and address\n}\nNow when we load our application in swagger my input JSON shows exactly\nbelow .For map this is the default behavior that shows by swagger I guess.\n{\n\"name\":\"\",\n\"address\":\"\",\n\"resource\":\"Map[String,String]\"\n}\nNow I need the above map like below::\n{\n\"name\":\"\",\n\"address\":\"\",\n\"resource\":{SOmecontent which I can enter as K:V}\n}\nWhat is the configuration I am missing to get the above JSON like that??\nPlease help me.\nRegards,\nKishore Tangudu\n- Banglore.*\nThink twice before take a print. Save trees.\nOn Sun, Jun 5, 2016 at 4:23 AM, Tony Tam notifications@github.com wrote:\n\nSimply override the dataType for your JSONObject value like such:\npublic class MyModel {\n  @ApiModelProperty(value=\"dummyAttrib\", dataType = \"java.util.Map\")\n  public JsonNode getDummyAttrib() {\n    return null;\n  };\n  public void setDummyAttrib(JsonNode node) {}\n}\nThen your definition looks like it accepts a Map:\n{\n  \"MyModel\" : {\n    \"type\" : \"object\",\n    \"properties\" : {\n      \"dummyAttrib\" : {\n        \"type\" : \"object\",\n        \"description\" : \"dummy\",\n        \"additionalProperties\" : {\n          \"type\" : \"object\"\n        }\n      }\n    }\n  }\n}\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1818#issuecomment-223782708,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/APfIWwyd4a-qklmPh7DdzdA93M7VRLqSks5qIgIBgaJpZM4ItPCb\n.\n. Hi Tony,\nVery good morning. Hope you are doing good. I have a question.\n\nWhen I am updating swagger com.wordnik(1.3.12) to io.swagger API's as show below.\n``` xml\n\nio.swagger\nswagger-jaxrs\n1.5.0\n\n\nio.swagger\nswagger-jersey2-jaxrs\n1.5.9\n\n```\nweb.xml:\n``` xml\n \nAuthentication and Authorization Web Service\norg.glassfish.jersey.servlet.ServletContainer\n\njavax.ws.rs.Application\nmypackage.name.classname.MyJaxRsApplication\n\n\n1\n\n\nAuthentication and Authorization Web\nService\n/auth/*\n\n Swagger for REST api documentation \n\nJersey2Config\nio.swagger.jersey.config.JerseyJaxrsConfig\n\napi.version\n1.0.0\n\n\nswagger.api.basepath\n/Abcde/auth\n\n2\n\n```\nMyJaxRsApplication:\njava\npublic class AnAJaxRsApplication extends ResourceConfig {\n  public AnAJaxRsApplication() {\n    packages( \"*io.swagger.jaxrs.listing*;different.Packages.ofmyproject;\");\n    register(JacksonFeature.class);\n    register(AppExceptionMapper.class);\n    register(GenericExceptionMapper.class);\n    register(MultiPartFeature.class);\n    register(SecurityInterceptor.class);\n  }\nThis is the configuration I made in my project. While loading the\napplication URL I am getting the following Error message:  Can't read\nswagger JSON from http://localhost:8081/Abcde/auth/api-docs\nCan you please let me know where I am doing wrong??  Please help me to come\nout of this problem.\nRegards,\nKishore Tangudu\n- Banglore.*\nThink twice before take a print. Save trees.\nOn Fri, Jun 10, 2016 at 11:12 PM, Tony Tam notifications@github.com wrote:\n\nPlease look at my example above again. You're missing the dataType\nannotation above\n@ApiModelProperty(value=\"dummyAttrib\", dataType = \"java.util.Map\")\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1818#issuecomment-225247968,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/APfIWyuNPIo8n3mUrdtq9OtXSKFiBjTGks5qKaHygaJpZM4ItPCb\n.\n. \n",
    "dsmiley": "My work-around is of course to make the state be set via setters.  I'd rather not do that though, and the IAE from Swagger is arguably something that should be dealt with somehow.\n. Why was this closed?. ",
    "DerEineDa": "I second this request! I can't even imagine that the current state is the expected behavior.\nWe are using Jetty, so all operations would currently have the path \"/handle\" (for Jetty handlers) or \"/doGet\" or \"/doPost\" (for servlets), as these are the methods names for handlers and servlets. To avoid this, for each operation I currently have to create a second method with the intended name that only exists for its name and to carry the @ApiOperation and @ApiImplicitParams annotations.\nIf I already have to create methods that only exists for the purpose of generating the swagger specification, I fail to see the purpose of the @ApiImplicitParam annotations, as I could just add actual java parameters to the \"only for swagger documentation\"-methods and annotate them with @ApiParam annotations. Unfortunately, the \"Reader\" class for servlets currently doesn't parse @ApiParam annotations. \nAnother problem with the current state is that it is complicated to create two operations with the same path but with different HTTP methods. As the java methods must have the same name, I currently have to put the methods for GET and POST into different classes (or make them have different parameter overloads, which is even more hacky).\nDo I miss something here? Is there a better solution or are all operations supposed to have the same name?\n. Also, currently @Api.value() becomes part of the path, which shoudn't happen, as stated by the JavaDoc:\n\nIn swagger-core 1.3.X, this was used as the 'path' that is to host the API Declaration of the resource. This is no longer relevant in swagger-core 1.5.X.\n. Sorry, me again.\n\nThe sample at https://github.com/swagger-api/swagger-samples/blob/master/java/java-servlet/src/main/java/io/swagger/sample/servlet/SampleServlet.java seems outdated. It uses both @Api.value() (which shouldn't be used, see above) and @ApiOperation.nickname() (which doesn't work anymore, see first comment) to set the path of the operation.\nBecause of this, the unit test at https://github.com/swagger-api/swagger-samples/blob/master/java/java-servlet/src/test/java/io/swagger/sample/ResourceListingIT.java currently fails at the line\nAssert.assertNotNull(swagger.getPath(\"/sample/users/getUser\"));\n. The method name is also used as the unique operationId, but that doesn't make sense, as the method name is always the same for servlets. Because of this, @ApiOperation.nickname() is pretty much mandatory to set, because the default is guaranteed to lead to non unique operationIds.\n. I am sorry, I mixed up the versions. Of course I meant the latest swagger-core 1.5.9.\n. package io.swagger.jersey.SwaggerJersey2Jaxrs does call the super-method if it can't extract parameters on its own.\n. Sorry, this ticket is invalid. I overlooked that \"DefaultParameterExtension\" is always the last element of the chain, so it is okay for this class to not delegate to the next extension (because there is none). \n. I am sorry, but could you please elaborate? \nBeanParam annotations are completely handled by the module \"swagger-jaxrs\" inside class \"~~Reader.java~~  DefaultParameterExtension.java\" (referenced by reflection). The module \"swagger-jersey2-jaxrs\" doesn't reference BeanParam at all, except for an unused import statement. \nIn fact, we are using BeanParam in our project without using Jersey or any Jersey-Swagger-modules at all. \nI am missing something here? \n. Yes, but the swagger-mule module depends on the swagger-jaxrs module and uses its Reader (and its DefaultParameterExtension that handles BeanParam), thus should handle BeanParam annotations just fine. \nIn fact, swagger-mule contains nothing else than the class ApiListingJSON to serve the swagger.json.\nMaybe I am missing something essential here... \n. Nope, we aren't using any Jax-RS implementation. Our webservice implementations just happen to look a lot like Jax-RS services, so we are only using swagger-jaxrs together with a tiny Jax-RS annotations library (javax.ws.rs-api).  The annotations are only used to be parsed by swagger.\nEven without using swagger-jersey(2), BeanParam annotations are handled by swagger-jaxrs just fine.\n. nothing, but my case is that the one thing has nothing to do with the other. The question of this issue is bad. \nYes, swagger-mule may not work with new versions of mule, but that has absolutely nothing to do with the support of BeanParam. BeanParam is supported by swagger-jaxrs, thus it is supported by any module depending on it, even swagger-mule. \nswagger-mule does only provide the api listing anyway. \"support of BeanParam\"  and \"support of mule 3.6\", these issues have nothing in common. This is my point. \n. To add to this: The first sentence of this issue was \"Support of BeanParam annotation was implemented in swagger-jersey2-jaxrsmodule\". At least with the current code base, this statement is false. Support of BeanParam is currently not handled by swagger-jersey2. I just wanted to correct this obviously wrong assumption. \n. ",
    "rajajain": "Is it going to be fixed in next release as we are also facing same issue.. ",
    "cleankod": "Any news on this one?. ",
    "caipivara": "Any update on this?. ",
    "thebeeber": "I could really use this as well. Any update on the merge?\n. ",
    "jivimberg": "Hi Ron! I'm using swagger-core version 1.5.9 . You're right about the annotated path param that doesn't exist in the path, I completely missed that. I'll give it another try with that parameter in the path to check if it's still reproducible and post the results. Thanks!\n. You were completely right, adding the correct amount of variables in the path fixed the issue for me. Thanks for your help!\n. ",
    "marcellodesales": "Is this related to https://github.com/springfox/springfox/issues/1345#issuecomment-245782111? The authors of SpringFox claim that the reason why their Swagger UI integration does not take default body is that your API is not taking the default body. \n@jeevanhr7 Is this related to your issue?\n@webron Can you please confirm that? For the case of Swagger UI, wouldn't we need to have the support for default values?\n. ",
    "Alin-Barsan": "@webron Hi Ron, thanks for the response!  By 'web view' I meant the Swagger UI, I'll go ahead and search for a relevant ticket (or open a new one if none exists) on that project.\n. ",
    "frojasg": "If I define severals responses. How can I know what's the 'successful' of the @APIOperation?\n. you only have one \"successful\" response, but you can have severals to describe different kinds of errors. \nLet's use this example: \njava\n@POST\n    @ApiOperation(value = \"User\",\n                  notes = \"Blah\",\n                  code = 201,\n                  response = User.class,\n                  nickname = \"createUser\")\n    @ApiResponses(value = {@ApiResponse(code = 201,\n                                        message = \"user created\",\n                                        response = UserRequest.class),\n            @ApiResponse(code = 400,\n                         message = \"blah1\",\n                         response = ErrorResponse.class)},\n                  @ApiResponse(code = 422,\n                               message = \"blah2\",\n                               response = ErrorResponse.class) })\nOperation's responses will return a map with three entries. How can I know which one is the \"successful\" response? \n. That's something the client of the Operation class has to assume. what if My API returns a 3XX as \"successful\". \nI think it would be nice to have a way to specify the \"successful\" response in the @APIOperation annotation. \n. As API designer I want to use swagger to explain to my clients how to use my API. For some endpoints a success status will be a 2xx, for some other a 3xx.\nThe current swagger implementation just list possible responses.  You're delegating the reposability of knowing what's a success status to the client. \nI was wondering if it make sense allow to the API designer to specify what's the success status of an endpoint \n. got it. Thanks! \n. BTW: this is the Ticket I created in the spec\n. ",
    "clovis-guillemot": "Same issue for me. Any workaround for this ? . @fehguy can you please merge this PR #2409 to fix this issue. Thanks !. ",
    "wapolinar": "Annotate with XmlElement instead. This should work.. ",
    "kotak25krishna": "Thanks. What would be the way to customize or extend swagger behavior. Looking if there is a way to customize to meet the specification \n. Are there any annotations or document generator can be extended?\n. ",
    "kellerassel007": "+1. ",
    "smalik2043": "+1. ",
    "nandana": "+1. ",
    "Satyricon": "+1. ",
    "QuasiSoDo": "+1. +1. just stumbled back on this issue, afaik this was fixed on the  CXF side. I'll close the issue. just stumbled back on this issue, afaik this was fixed on the  CXF side. I'll close the issue. ",
    "SIDSSIDS": "+1. ",
    "mcicu": "+1\n. ",
    "yana2301": "+1. ",
    "timstegeman": "+1. ",
    "euclidean": "+1. ",
    "kusan-thana": "+1 : it's quite bothering since arrays are pretty common in REST API.... ",
    "modulo-": "+1. ",
    "jonherrmann": "+1. ",
    "sarojkv": "+1. When is the release due for this version?. ",
    "zinaliev": "+1. ",
    "Gatoke": "+1. +1. ",
    "Mihail74": "+1. ",
    "trorvillelim": "+1\n. ",
    "nmsakos": "@fehguy What should I see on branch feature/3.0.0-rc2 regarding this? I can't find any related commit.\nThanks!. ",
    "Sjworks": "+1. +1. ",
    "justforadblock": "\nit's work. ",
    "americk0": "+1. ",
    "eugenemiretsky": "+1. ",
    "shendrix": "+1\n. ",
    "Kotsyubinsky": "+1. ",
    "SariAlalem": "+1. ",
    "CadibroTools": "+1. ",
    "biniama": "A working solution:\n@ApiModelProperty(value = \"Address\", name = \"addLines\", dataType = \"List\",\n    example = \"[AddLine1,AddLine2,AddLine3,AddLine4]\")\nWhen I render the swagger page, I get the following output:\n\"addLines\": [\n      \"AddLine1\",\n      \"AddLine2\",\n      \"AddLine3\",\n      \"AddLine4\"\n    ],\nCredit @dane_griffiths https://stackoverflow.com/a/50132642/2245264. > @biniama, can you please send your swagger version, because i tried the above solution, and it doesn't work for me.\nHere are the maven dependencies I used. \n Swagger 2 Doc Dependency \n\nio.springfox\nspringfox-swagger2\n2.9.2\n\n    <!-- Swagger 2 UI -->\n    <dependency>\n        <groupId>io.springfox</groupId>\n        <artifactId>springfox-swagger-ui</artifactId>\n        <version>2.9.2</version>\n    </dependency>\n\n    <!-- Swagger 2 JSR-303 based documentation -->\n    <dependency>\n        <groupId>io.springfox</groupId>\n        <artifactId>springfox-bean-validators</artifactId>\n        <version>2.9.2</version>\n    </dependency>.\n",
    "martinKosturkov": "@biniama, can you please send your swagger version, because i tried the above solution, and it doesn't work for me.. @biniama, can you please send your swagger version, because i tried the above solution, and it doesn't work for me.. > > @biniama, can you please send your swagger version, because i tried the above solution, and it doesn't work for me.\n\nHere are the maven dependencies I used.\n```\n    \nio.springfox\nspringfox-swagger2\n2.9.2\n\n<!-- Swagger 2 UI -->\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger-ui</artifactId>\n    <version>2.9.2</version>\n</dependency>\n\n<!-- Swagger 2 JSR-303 based documentation -->\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-bean-validators</artifactId>\n    <version>2.9.2</version>\n</dependency>\n\n```\n\nThanks.. > > @biniama, can you please send your swagger version, because i tried the above solution, and it doesn't work for me.\n\nHere are the maven dependencies I used.\n```\n    \nio.springfox\nspringfox-swagger2\n2.9.2\n\n<!-- Swagger 2 UI -->\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger-ui</artifactId>\n    <version>2.9.2</version>\n</dependency>\n\n<!-- Swagger 2 JSR-303 based documentation -->\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-bean-validators</artifactId>\n    <version>2.9.2</version>\n</dependency>\n\n```\n\nThanks.. ",
    "gjong": "As it stands this 'bug' makes swagger less useful to us in our code as the documentation that is generated is incorrect and misleading to the consumer of the API. They expect the fields annotated with any composed annotation extending @NotNull (like @NotBlank) to be optional when in truth the application server will return an exception that the field is required.\n. ",
    "sandello-alkr": "Hi @m-radzikowski @fehguy I have similar problem with javax.validation.constraints.NotEmpty annotation. How could I make it required?. ",
    "keir-rex": "This has cost me a major headache too.\n. ",
    "adamzr": "@benken-parasoft I used dependency management to fix a conflict with Jackson 5. So, this is not an immediate blocking problem for me. But, I feel that it's best to stay up to date with all dependency versions which is why I opened this ticket.\n. @benken-parasoft I used dependency management to fix a conflict with Jackson 5. So, this is not an immediate blocking problem for me. But, I feel that it's best to stay up to date with all dependency versions which is why I opened this ticket.\n. ",
    "bodycombathuang": "I solved this by using a newest version of google reflection jar\n. I solved this by using a newest version of google reflection jar\n. I added the annotation, but still cannot see resource in the generated swagger.json, have uploaded the project zip through email\n. I added the annotation, but still cannot see resource in the generated swagger.json, have uploaded the project zip through email\n. ",
    "kshitizbht": "What version of reflection worked for you? i tried the latest didn't help.. ",
    "viachm": "Hi @kshitizbht, have you fixed a problem? \nUsed the different version of org.reflections (v0.9.11, 0.9.10) - does not help.. @denisgmarques Finally, I downgraded org.reflections to 0.9.10 (excluding com.google.guava and com.google.code.findbugs) and it worked for me.\nI guess in you'r case, while downgrading swagger to 1.5.9 - under the hood version of org.reflections was downgraded and that fixed you'r problem.\n. Having the same issue, but building an application with Maven:\nNFO  [2018-01-08 20:10:00,837] org.reflections.Reflections: Reflections took 2279 ms to scan 1 urls, producing 35716 keys and 62812 values \nWARN  [2018-01-08 20:10:00,852] org.reflections.Reflections: could not get type for name javax.cache.management.CacheStatisticsMXBean from any class loader\n! java.lang.ClassNotFoundException: javax.cache.management.CacheStatisticsMXBean\n! at java.net.URLClassLoader.findClass(URLClassLoader.java:381)\n! at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n! at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)\n! at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n! at org.reflections.ReflectionUtils.forName(ReflectionUtils.java:388)\n! ... 14 common frames omitted\n! Causing: org.reflections.ReflectionsException: could not get type for name javax.cache.management.CacheStatisticsMXBean\n! at org.reflections.ReflectionUtils.forName(ReflectionUtils.java:390)\n! at org.reflections.Reflections.expandSuperTypes(Reflections.java:381)\n! at org.reflections.Reflections.<init>(Reflections.java:126)\n! at io.swagger.jaxrs.config.BeanConfig.classes(BeanConfig.java:276)\n! at io.swagger.jaxrs.config.BeanConfig.scanAndRead(BeanConfig.java:240)\n! at io.swagger.jaxrs.config.BeanConfig.setScan(BeanConfig.java:221)\n! at io.federecio.dropwizard.swagger.SwaggerBundleConfiguration.build(SwaggerBundleConfiguration.java:287)\n! at io.federecio.dropwizard.swagger.SwaggerBundle.run(SwaggerBundle.java:66)\n! at io.federecio.dropwizard.swagger.SwaggerBundle.run(SwaggerBundle.java:33)\n! at io.dropwizard.setup.Bootstrap.run(Bootstrap.java:200)\n! at io.dropwizard.cli.EnvironmentCommand.run(EnvironmentCommand.java:42)\n! at io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:85)\n! at io.dropwizard.cli.Cli.run(Cli.java:74)\n! at io.dropwizard.Application.run(Application.java:89)\n! at com.test.server.ServerApplication.main(ServerApplication.java:84)\nWARN  [2018-01-08 20:10:00,853] org.reflections.Reflections: could not get type for name org.springframework.beans.factory.FactoryBean from any class loader\n! java.lang.ClassNotFoundException: org.springframework.beans.factory.FactoryBean\n! at java.net.URLClassLoader.findClass(URLClassLoader.java:381)\n! at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n! at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)\n! at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n! at org.reflections.ReflectionUtils.forName(ReflectionUtils.java:388)\n! ... 14 common frames omitted\n! Causing: org.reflections.ReflectionsException: could not get type for name org.springframework.beans.factory.FactoryBean\n! at org.reflections.ReflectionUtils.forName(ReflectionUtils.java:390)\n! at org.reflections.Reflections.expandSuperTypes(Reflections.java:381)\n! at org.reflections.Reflections.<init>(Reflections.java:126)\n! at io.swagger.jaxrs.config.BeanConfig.classes(BeanConfig.java:276)\n! at io.swagger.jaxrs.config.BeanConfig.scanAndRead(BeanConfig.java:240)\n! at io.swagger.jaxrs.config.BeanConfig.setScan(BeanConfig.java:221)\n! at io.federecio.dropwizard.swagger.SwaggerBundleConfiguration.build(SwaggerBundleConfiguration.java:287)\n! at io.federecio.dropwizard.swagger.SwaggerBundle.run(SwaggerBundle.java:66)\n! at io.federecio.dropwizard.swagger.SwaggerBundle.run(SwaggerBundle.java:33)\n! at io.dropwizard.setup.Bootstrap.run(Bootstrap.java:200)\n! at io.dropwizard.cli.EnvironmentCommand.run(EnvironmentCommand.java:42)\n! at io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:85)\n! at io.dropwizard.cli.Cli.run(Cli.java:74)\n! at io.dropwizard.Application.run(Application.java:89)\n! at com.test.server.ServerApplication.main(ServerApplication.java:84)\nWhat is interesting, it says could not get type for name org.springframework.beans.factory.FactoryBean - I do not use spring at all, I'm using dropwizard.\n@sebawagner Do you have some ideas?\n  . @sebawagner Yeap, but conceptually Swagger should not scan all these dependencies, since I've specified to scan only mine resources:\nswagger:\n  resourcePackage: com.test.server.resources\n  enabled: true\nI suspect there is a problem with my configuration, but can't figure out where exactly. \n  . @sebawagner Hmm, is there are a way to force Swagger to ignore scanning such a references?. Had do downgrade org.reflections with some exclusions. Here is a pom.xml that worked for me:\nxml\n<dependency>\n    <groupId>org.reflections</groupId>\n    <artifactId>reflections</artifactId>\n    <version>0.9.10</version>\n    <exclusions>\n        <exclusion>\n            <groupId>com.google.guava</groupId>\n            <artifactId>guava</artifactId>\n        </exclusion>\n        <exclusion>\n            <groupId>com.google.code.findbugs</groupId>\n            <artifactId>annotations</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>\n<dependency>\n    <groupId>com.smoketurner</groupId>\n    <artifactId>dropwizard-swagger</artifactId>\n    <version>1.1.2-1</version>\n    <exclusions>\n        <exclusion>\n            <groupId>org.reflections</groupId>\n            <artifactId>reflections</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>. ",
    "denisgmarques": "viachm, using swagger version 1.5.18 this aproach does not worked for me too, but I downgraded to swagger 1.5.9 and works.. ",
    "sunsus": "What was the solution?. ",
    "ahasall": "I am also in desperate need of this feature.\n. I am also in desperate need of this feature.\n. ",
    "spyninja": "Yes, I've come to that conclusion, it just felt bad. Thank you for the response.\n. ",
    "dsounded": "Basically I just need to declare my @ImplicitApiParam the way it could work with such a Json representation. I know that my example looks more than query string, I've just tried couple of declaration ways.\n. ",
    "JamieMagee": "Is it possible to get this merged in for v1.5.11?\nIt is a very small change, and would allow for reusable @ApiImplicitParams annotations. As far as I can see there isn't currently a way to achieve this.\n. Actually, testing this locally I don't think this change is enough to allow for reusable annotations. There need to be changes made to either Reader.java or ReflectionUtils.java in order to correctly find meta-annotations.\n. Looks like #1867 fixes this. It's been open for a few months now.\n. Is it possible to have this reviewed for merge?\n. ",
    "espiegel": "I would also like this feature. Having to repeat the same annotation on many methods is annoying.\n. ",
    "clementdevos": "This would be a much appreciated feature for us as well, would be very useful for ranges, limits and such.\n. ",
    "guser11": "API Controller(Resource)\n@GET\n@Produces( { MediaType.APPLICATION_JSON })\n@Path(\"id\")\n@ApiOperation(value = \"Get user's Account by userId\")\npublic User get(@BeanParam UserParam params)\n{\n  //looks for user id\n}\nAnd UserParam Class:\n```\npublic class UserParam {\nprivate int offset;\npublic int getOffset() {\nreturn offset;\n\n}\n@QueryParam(\"offset\")\n@DefaultValue(\"0\")\npublic void setOffset(int count) {\n    this.offset = count;\n}\n```\n. API Controller(Resource)\n@GET\n@Produces( { MediaType.APPLICATION_JSON })\n@Path(\"id\")\n@ApiOperation(value = \"Get user's Account by userId\")\npublic User get(@BeanParam UserParam params)\n{\n  //looks for user id\n}\nAnd UserParam Class:\n```\npublic class UserParam {\nprivate int offset;\npublic int getOffset() {\nreturn offset;\n\n}\n@QueryParam(\"offset\")\n@DefaultValue(\"0\")\npublic void setOffset(int count) {\n    this.offset = count;\n}\n```\n. I tried with integer also:\nprivate Integer offset;\npublic Integer getOffset() {\n        return offset;\n    }\n@QueryParam(\"offset\")\n@DefaultValue(\"0\")\npublic void setOffset(Integer count) {\n    this.offset = count;\n}\nbut no luck ! still getting 0.0 in swagger.json\n{\"name\":\"offset\",\"in\":\"query\",\"required\":false,\"type\":\"integer\",\"default\":0.0,\"format\":\"int32\"}\n. ",
    "djivko": "ver. 1.5.9. I tried with Long, java.lang.Long, int64 - it has the same result. The type in the json response is exactly the same as the one in dataType and there is no 'format' property.\n. As there is a way now to provide a format when overriding I do not think there is a need to merge this specific case. It's up to you to decide that. Thanks.. ",
    "oakesk": "The described behaviour is also observed for paramType = \"query\". However paramType=\"body\" produces the expected output. \nPerhaps the conversion from the common type name to the expected data type + format performed here should also be invoked in the other parameter processing call paths?\n. ",
    "cretz": "This occurs for me too. It should be noted the wiki at https://github.com/swagger-api/swagger-core/wiki/Annotations-1.5.X#apiimplicitparam-apiimplicitparams specifically says it does to the integer/int64 thing instead of what it actually does (as this issue shows).\n. ",
    "jelaby": "I think that this is a duplicate of #1290. The answer appears to be \"no\" at the moment.\n. ",
    "fabm22": "Gosh sorry it is the wrong github repo :( , I meant  https://github.com/wcandillon/swagger-js-codegen \n. ",
    "jtorres-viavansi": "Sorry, here goes the annotations:\n@POST\n@Path(\"/document\")\n@Consumes(MediaType.MULTIPART_FORM_DATA)\n@Produces(MediaType.APPLICATION_JSON)\n@ApiOperation(value = \"Verifies the signature in the passed document\",\n    notes = \"Verifies the signature in the passed document\",\n    response = VerifierDocumentResponseDTO.class)\n@ApiResponses(value = {\n    @ApiResponse(code = 200, message = \"ResponseVerifierDocumentDTO with verification result\", response = VerifierDocumentResponseDTO.class),\n    @ApiResponse(code = 401, message = \"Unauthorized\", response = VerifierDocumentResponseDTO.class),\n    @ApiResponse(code = 403, message = \"Forbidden\", response = VerifierDocumentResponseDTO.class),\n    @ApiResponse(code = 500, message = \"Internal server error\", response = VerifierDocumentResponseDTO.class)\n})\npublic VerifierDocumentResponseDTO verifyDocument(\n        @ApiParam(value = \"Authentication string\", required = true) @HeaderParam(\"Authorization\") String authString,\n        @ApiParam(value = \"VerificationRequestDTO object\", required = true) @FormDataParam(\"verificationRequestDTO\") VerificationRequestDTO verificationRequestDTO, \n        @ApiParam(value = \"Original document to verify\", required = true) @FormDataParam(\"originalDocument\") InputStream originalDocument, \n        @ApiParam(value = \"Signed document\", required = true) @FormDataParam(\"signedDocument\") InputStream signedDocument) {\nThanks.\n. Hi @webron , I thought in that solution, a filter to replace only that strings since the rest of the spec is correctly generated.\nThanks for your help.\n. Replacing it works, I've tried it. I've created swagger_fixed.json replacing manually the original json for the fixed one and I get good results:\n1. swagger-ui works fine with fixed json and methods are correctly invoked. In fact, the beans in MULTIPART-FORM-METHODs are correctly presented.\n2. swagger-codegen generates fine the code. With not fixed one I get errors generating objc model for example.\nThe fixed swagger.json is supossely a valid one, isn't it? Thanks.\n. Ok, we can close this issue. Thanks for your help.\n. ",
    "devendra-kr": "object NetworksDataModel {\ncase class ClientBanner(id: Long, webImageUrl: String, mobileImageUrl: String)\n  case class ClientGeoFilter(contentType: Long, contentId: Long, filterType: Long, countryCodes: String)\n}\nI want to access ClientBanner, which is presented in package com.adminserver.dto\n. ",
    "yami12376": "If it is not possible - could you make it possible?\nYou have got information in swagger what is optional and what not so i think it is doable.\n. ",
    "tofflos": "Very similar.\nMy plugin uses your Reader whereas that plugin provides its' own implementation. So my plugin produces the same output as your JAX-RS based solution whereas that plugin does not. Otherwise I would say that the maven-swagger-plugin is better at pretty much everything. It provides more features, it supports more frameworks and has had more testing. I just happened to run into some problems with their Reader and decided to write a plugin that utilizes your Reader instead.\nI could see my plugin as being interesting for you if you want to offer a provide time solution without much of an initial effort followed by continuous minimal effort for maintenance. It's a single-page-of-code-wrapper around your existing work and will therefor automatically benefit from the improvements you make to your core product.\nAnyway. Let me know and I'll zip you my project and send it to you. I do believe that many users will appreciate a build time solution.\n... and if not... just close the issue. No hard feelings. :)\n. @lalpert I couldn't find it but it seems someone has created something similar at https://github.com/openapi-tools/swagger-maven-plugin.. ",
    "lalpert": "@tofflos I could really use this! Any chance you still have this plugin that you could share?. @tofflos Thanks, I'll check it out!. ",
    "vanta": "Not so easy as ReaderConfig has package-private access... I can implement ReaderListener with:\n@Override\n    public void beforeScan(Reader reader, Swagger swagger) {\n        ((DefaultReaderConfig) reader.getConfig()).setScanAllResources(true); \n    }\nbut this is dirty... \nAny ideas how to do it better without dealing with servlet properties (I don't have access to them)?. Not so easy as ReaderConfig has package-private access... I can implement ReaderListener with:\n@Override\n    public void beforeScan(Reader reader, Swagger swagger) {\n        ((DefaultReaderConfig) reader.getConfig()).setScanAllResources(true); \n    }\nbut this is dirty... \nAny ideas how to do it better without dealing with servlet properties (I don't have access to them)?. I already filed PR for it... Just merge it.\nOn pt., 15.09.2017, 14:38 Chaouki Dhib notifications@github.com wrote:\n\nPlease reopen this issue: it should be possible to easily set up that\nvariable, even when using Swagger's BeanConfig.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1884#issuecomment-329770882,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ACDbmidBvDZtfGw-el9a5sZ3zGRiUCUGks5sim-1gaJpZM4Jk9CV\n.\n-- \nKrzysztof Wolny\n. I already filed PR for it... Just merge it.\n\nOn pt., 15.09.2017, 14:38 Chaouki Dhib notifications@github.com wrote:\n\nPlease reopen this issue: it should be possible to easily set up that\nvariable, even when using Swagger's BeanConfig.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/1884#issuecomment-329770882,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ACDbmidBvDZtfGw-el9a5sZ3zGRiUCUGks5sim-1gaJpZM4Jk9CV\n.\n-- \nKrzysztof Wolny\n. I have not checked latest release where it was added!. Is anyone reviewing PRs here? @fehguy ?. How about attaching stacktrace...?. How about attaching stacktrace...?. \n",
    "chaodhib": "Please reopen this issue: it should be possible to easily set up that variable, even when using Swagger's BeanConfig.. ",
    "fdelsert": "I understand.\nI pushed a sample maven project to reproduce the issue :\nhttps://github.com/fdelsert/swagger-issue-1886\nI excluded Jersey dependencies 1.13 of swagger-jersey-jaxrs because I use Jersey 1.11 provided by Glassfish server. Maybe the problem comes from an incompatibility with the Jersey version.\nDirect links : \n- pom.xml\n- web.xml\n- configuration servlet class\n- endpoint\n. The exclusions in the pom.xml are useless because ClassLoader avoid overriding of embedded packages (https://jersey.java.net/nonav/documentation/1.13/glassfish.html#d4e1938).\nUpgrading Jersey to 1.13 in Glassfish give the same result.\n. @lemoncolly It works like a charm. But you are right, it's not the most convenient way. . ",
    "ChaitaliRK": "I uplifted swagger-core to 1.5.11, but I still see the minimum and maximum values as decimals. Am I missing something here?. ",
    "raghala": "Version 1.5.8\n. ",
    "michaelkourlas": "@webron: Sorry, I don't follow. What do you mean when you say that \"by default jax-rs implementations treat these parameters as multi\"? Shouldn't all implementations be using \"csv\" by default (i.e. if no collectionFormat is provided) since that's what the spec says?\n. I'm sorry, but I'm still confused. My understanding is that swagger-core is an implementation of the Swagger specification, and so the models for parameters must behave in accordance with the specification, including any default values for properties defined by the specification. I don't understand what any of this has to do with JAX-RS.\nLet me explain why I opened this issue in the first place. I was using swagger-codegen to generate a Java API library from an API specification file. swagger-codegen uses swagger-parser to parse the API specification file. swagger-parser in turn uses swagger-models (part of swagger-core) to represent the specification using Java objects.\nThe API specification that I am using defines a particular query parameter that looks something like this:\njson\n\"testParam\": {\n  \"name\": \"testParam\",\n  \"in\": \"query\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"string\"\n  }\n}\nAs you can see, the parameter is of type \"array\" but has no explicitly defined collectionFormat. The authors of the API specification relied on the default behaviour being \"csv\", as defined in the Swagger specification. \nHowever, when swagger-parser parsed this API specification, it returned a parameter object with a collectionFormat of \"multi\", which caused problems with the generated Java API. I believe this happened because swagger-parser relies on swagger-models to provide the default values for unspecified properties, and the QueryParameter class in swagger-models defines the default collectionFormat to be \"multi\", even though it is supposed to be \"csv\".\n. Ah, I think I've figured out what's going on here. You're saying that swagger-core is used to generate an API specification from an existing JAX-RS web service, so that's why the \"default\" value for collectionFormat is just whatever JAX-RS does, in this case \"multi\".\nHowever, swagger-core is used by swagger-parser to go in the opposite direction - to parse an existing specification. In this case, the default value should be whatever the Swagger specification says, in this case \"csv\".\nIs swagger-core supposed to be used to parse Swagger specifications? If not, then this is a problem with swagger-parser; if so, then this is a problem with swagger-core.\n. ",
    "shaun-willows": "+1\n. @fehguy I have merged the master into the branch involved in the pull request. Would it be possible to merge it into master in time for the 1.5.11 release?. @fehguy Any thoughts regarding this pull request? Apologies for asking, I know you are busy and there are many pull requests to review on this project. We are somewhat reliant on this pull request being accepted to be able to use Swagger Annotations. Likewise for the following pull requests:\n- https://github.com/swagger-api/swagger-core/pull/1895\n- https://github.com/swagger-api/swagger-core/pull/1905\nIf it helps, I can create a single pull request that combines all three of these. Again, I apologise for being forward and asking for thoughts.\n. Checks are failing on this pull request due a bug in pull request 1959. A correction has been provided in pull request 1991.. @fehguy Pull request 1991  does not resolve issue 1896. Pull request 1991 was blocking this pull request, which is intended to resolve that issue. Please can this pull request be re-opened. I will be merging master into this branch and pushing soon.\nEdit: I see that the release of 1.5.11 seems to be ramping up. Would it be possible to get this merged in if I push today? . @fehguy I have merged master into the branch involved in this merge request and pushed. Is there any chance this pull request could be re-opened or should I submit a new one, which references this one?. @fehguy I have investigated a strange NullPointerException, and I am pretty sure this pull request breaks io.swagger.jaxrs.Reader when parsing methods on interfaces. The commit that introduced the bug was 7878cfde405042465dcf3e65135e77ff34b40275. Please see the code block starting at line 764 from this class below:\nString operationId = null;\n// check if it's an inherited method.\nif(ReflectionUtils.findMethod(method, cls.getSuperclass()) == null) {\n   operationId = method.getName();\n} else {\n   operationId = this.getOperationId(method.getName());\n}\nReferring in particular ReflectionUtils.findMethod(method, cls.getSuperclass()) above, cls.getSuperclass() will return null for an interface. ReflectionUtils.findMethod does not expect this parameter to be null and throws a NullPointerException when attempting to access the methods on this Class parameter.\n. ",
    "tobilarscheid": "Please look at #2424 for an implementation on @ApiModelProperty. maven wrapper is awesome!. This is strange, the build seems to be stalled or something, can someone please check what's wrong?. Hi @fehguy, I like your idea. The problem is that the serialization does not really happen in the class you linked to - this only generates the jax-rs response which is then serialized into JSON by jackson. I really like that this is the absolute java standard way and I feel we should not change this.\nI know that annotating everything with @JsonInclude (like I did for the path) is a lot of work, it is however consistent with how @Json-something annotations are used in the model - they are all over the place already. Also, when looking closer at the 'swagger-models' module and all classes under 'io.swagger.models' it is probably about 10 classes we would actually need to touch - everything else is then dealt with by inheritance.. sorry, accidentally closed. Well, you are right. It may not be most beautiful from the JAX-RS standard point of view, but it sure is the safest solution. If you don't mind I will provide another PR with a customized object mapper used in the BaseApiListingResource. Thanks for your feedback!. Thank you! I will open a corresponding PR in the swagger-samples repo to update the example.. https://github.com/swagger-api/swagger-samples/pull/71 there it is. I see the issue with #2320, and I absolutely understand how this commit fixes it. However, your fix now introduces a regression to #2105 \n/cc @fehguy . @fehguy . @fehguy Travis is running smoothly now, would you mind having a look again?. Hi @jasperkremer, thank you for your approval. When can we expect this to get merged / released?. ",
    "rainabba": "@fehguy Wish I could have done more with this, but as I said; there were no errors or anything I could trace aside from that red error icon so I don't know how I'd have spec'd it without giving you my entire project or spending who-knows how much time pulling routes out and testing until I found some cause/effect pattern.\nHopefully someone else will find this later and have more to run with than I did :/. ",
    "arvinsebastian": "https://github.com/swagger-api/swagger-ui#parameters is not listing any parameters. can u mention what parameter i should use. found it here : https://swagger.io/docs/swagger-tools/#parameters-37\nthe parameter name in validatorUrl . set it to null.\neg:\n// Build a system\n  const ui = SwaggerUIBundle({\n    url: specdocurl,\n    dom_id: '#swagger-ui',\n    deepLinking: true,\n    validatorUrl: null,\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n    ],\n    layout: \"StandaloneLayout\"\n  })\n. ",
    "sivaraman-subbiah": "i am using swagger ui webjar . is there a way to access the validatorUrl parameter. i am using swagger ui webjar . is there a way to access the validatorUrl parameter. ",
    "scop": "Ok, see #1919 (untested)\n. ",
    "dastoikov": "Here is a simplified example:\n```\n... post(@FormDataParam(\"propertyName\") Collection propertyNames,\n            @FormDataParam(\"propertyValue\") Collection propertyValues) {}\n```\nwhere each individual propertyName or propertyValue can be obtained by calling getValue() on the respective form-data-body-part instance.\nWhen enriched with Swagger Annotations, the example would become:\n```\n@ApiImplicitParams(value={\n  @ApiImplicitParam(value=\"Name of the property to store\", name=\"propertyName\", paramType=\"form\", dataType=\"string\", required=true, allowMultiple=true),\n  @ApiImplicitParam(value=\"Value of the property to store\", name=\"propertyValue\", paramType=\"form\", dataType=\"string\", required=true, allowMultiple=true)\n})\n... post(@FormDataParam(\"propertyName\") Collection propertyNames,\n            @FormDataParam(\"propertyValue\") Collection propertyValues) {}\n```\nAt this time, the Jersey2 extension will not skip the collection-typed parameters and references to a FormDataBodyPart Swagger model will be placed in individual parameter descriptions.\n. @umangkedia I remember installing a Swagger Jersey2 extension. These are custom processors that can be plugged in.\nSorry for not providing links: I am on a holiday and will be back on Tuesday. . @umangkedia On a second thought, I seemingly misunderstood your post.\nAnyway, please find below links to the swagger extensions I was talking about:\n1. The contract for extensions:\nhttps://github.com/swagger-api/swagger-core/tree/master/modules/swagger-jaxrs/src/main/java/io/swagger/jaxrs/ext\n2.The stock Swagger Jersey2 extension that the library ships with:\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jersey2-jaxrs/src/main/java/io/swagger/jersey/SwaggerJersey2Jaxrs.java\nTo solve my problem, I installed an extension that assumes control before [2], and handles the case of MultiPart and collections of FormDataBodyPart parameters.\nHope this helps!. ",
    "umangkedia": "@dastoikov I am using the same construct. But after taking input from swagger, I am not getting a list of values in Collection. Any idea how to solve this?. @dastoikov Sure. Can you post the links once you are back? It's working fine from Postman but not working from Swagger. . ",
    "s-metzger": "Had the same issue, it worked once I added @Path and @Api annotation to the class that implements ReaderListener (albeit Jersey will complain with a warning if that class does not specify an endpoint).. ",
    "ajayyadava": "Hi @fehguy\nI ran into the same problem. I am using GrizzlyServer. I would like to avoid switching the server. Is it possible to use swagger without switching away from Grizzly? If yes, then what dependency should I add to my pom.xml? . Adding the following dependency worked for me.\n    <dependency>\n        <groupId>org.glassfish.jersey.containers</groupId>\n        <artifactId>jersey-container-grizzly2-servlet</artifactId>\n    </dependency>\n\n. ",
    "AngryPirate": "+1. I did follow #1107 and I don't see anything there telling me how to implement this so it works.\nCould someone provide me with an example how I can show an example of a Map[string,string] to the end user?. ",
    "martijnburger": "BUMP\n. BUMP\n. BUMP\n. BUMP BUMP. BUMP BUMP. Working on it!. Working on it!. ",
    "eoftedal": "As pointed out in #2023 jackson-dataformat-xml 2.4.5 has a known security vulnerability. It would be nice to get rid of that.. Reference to the bug:\nhttps://github.com/FasterXML/jackson-dataformat-xml/issues/199. ",
    "HugoMario": "This Pull Request has been created in order to fix the issue. It checks for operationIds related to inherited method and renames if it finds the operationId is duplicated. \n. ",
    "dasevilla": "I'll give it a try early next week\n. ",
    "dnsbtchr": "That's true. Yesterday I tried it using the Maven Swagger Plugin and it also didn't worked.\nI tried it again today and now it is working. Don't know what the problem was. Thanks for your help. I will create a ticket at Springfox and until they fix it I will switch to the Maven Plugin instead of Springfox.\n. ",
    "pjajara": "Same issue with 1.5.16.. Same issue with 1.5.16.. Doesn't work, still closed!. Doesn't work, still closed!. ",
    "meydominic": "Any updates on here?\nSame problem with latest, 1.5.18\n@ApiParam(value = \"Printer config in json format\", required = false, examples = @Example(value = @ExampleProperty(mediaType = MediaType.APPLICATION_JSON, value = ApiDocuExamples.PRINTER_CONFIG)))\n        @FormParam(\"config\") String configJson,\n        @ApiParam(value = \"Id of an existing printer config\", required = false, example = ApiDocuExamples.PRINTER_CONFIG_ID)\n        @FormParam(\"configId\") Integer configId)\nexample and examples not working.\nIf I open my swagger.json in editor.swagger.io it will be displayed.. Can confirm, still not working -.-\". ",
    "jrauschenbusch": "Why this issue was closed? Imho the issue still exists.. ",
    "rafeeqalishaik": "Hey even for me @ApiImplicitParam attribute example and examples are not showing up in swagger UI. Did anyone found solution for above issue?\n@dominicE @JessieGit  Is it working for you guys?\nThanks Much!. ",
    "yboychev": "Does not work for me too. ",
    "kuldip-chalo": "Not working for me too. \nAs per this thread it should work for path and query parameters (not body parameters), but still no luck.\nhttps://stackoverflow.com/questions/46584658/how-can-i-set-a-description-and-an-example-in-swagger-with-swagger-annotations/51382735#51382735. ",
    "wojciech-soltys": "defaultValue from @RequestParam could be used as workaround. But for me example and examples don't work too.. ",
    "f1sherox": "The problem apears only with swagger mule module. https://github.com/swagger-api/swagger-core/tree/master/modules/swagger-mule\n. ",
    "martingy": "With my last commit, I changed the version back to 1.6, and travis succeeded as well.. @fehguy no affect on that as far as I can work out. classmate is another library from fasterxml, it is independent of Jackson.  . ",
    "jpc4242": "Am I right assuming that that the fix only solves the \"operationId collision due to inheritance\" if the operationId came from the method name, but the collisions will still be there if I set the operationId by using  \"nickname\"? . ",
    "ewanmellor": "@webron Here's the specification wording that I found:\nhttp://swagger.io/specification/#schemaObject:\n\nFurther information about the properties can be found in JSON Schema Core and JSON Schema Validation. Unless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\nThe following properties are taken directly from the JSON Schema definition and follow the same specifications:\n[Bulleted list of properties]\n- type\n\nhttp://json-schema.org/latest/json-schema-validation.html:\n\n5.5.2.  type\n5.5.2.1.  Valid values\nThe value of this keyword MUST be either a string or an array. If it is an array, elements of the array MUST be strings and MUST be unique.\n\nThat seems pretty clear to me.  A schema object contains a property called type, which is by definition the same as the JSON Schema one, and the JSON Schema validation allows it to be an array.  Am I missing something?\n. @webron Here's the specification wording that I found:\nhttp://swagger.io/specification/#schemaObject:\n\nFurther information about the properties can be found in JSON Schema Core and JSON Schema Validation. Unless stated otherwise, the property definitions follow the JSON Schema specification as referenced here.\nThe following properties are taken directly from the JSON Schema definition and follow the same specifications:\n[Bulleted list of properties]\n- type\n\nhttp://json-schema.org/latest/json-schema-validation.html:\n\n5.5.2.  type\n5.5.2.1.  Valid values\nThe value of this keyword MUST be either a string or an array. If it is an array, elements of the array MUST be strings and MUST be unique.\n\nThat seems pretty clear to me.  A schema object contains a property called type, which is by definition the same as the JSON Schema one, and the JSON Schema validation allows it to be an array.  Am I missing something?\n. ",
    "akrestan": "Hi,\nwhat is the status of this issue? It's not clear why it has been closed. I am experiencing a situation that looks  similar to what is described above in Java when nested objects, whose classes are annotated with @ApiModel, are not generated in swagger JSON client API definition. It makes no difference if the Java classes of the nested objects are placed in their own compilation unit are declared as nested classes of the API argument class for which the JSON is generated.\nThanks for letting me know. ",
    "wizye": "Working great ! Thanks\n. ",
    "atdiff": "@fehguy Is it possible using the basic security type or does it have to be oauth2?\n. @fehguy  After looking over the specs, I'm still not sure how to accomplish the ability to display the user roles/permissions required for an API and have that info appear in the resulting Swagger documentation.  My ideal is for each path could indicate the user role and permissions required to access it.  Basically something very roughly along the lines of \"api/someCall\" roles: [\"admin\",\"specialist\"] and permissions: [\"view_screen\", \"edit_screen\"].\nThere are 2 avenues I've tried at the moment:\n- Description field.  Just listing the roles in the description field (not ideal and in some markup only gets displayed at the security section in the bottom)\n\"securityDefinitions\": {\n        \"baseUserSecurity\": {\n          \"type\": \"basic\",\n          \"description\": \"Roles required: Admin, Specialist\",\n        }\n    },\nDescription rendered:\n\n- Scope. Providing a scope for the security object.  It's not allowed in the spec and throws an error in the editor, but swagger2markup still allows and parses it.\n  \"security\": [{\"baseUserSecurity\": [\"Admin\", \"MarketSpecialist\"]}],\nScope rendered: \n\nScope seems to fit better to some degree, but it goes against the spec which doesn't seem like a good idea overall.  So I'm not sure how this would best be documented.\n. Thanks!\n. ",
    "SamOrozco": "@aciganj I had the same exact issue using Ebean and the swagger annotations were adding _ebean_intercept to my documentation. I solved this by adding a getter to my model \n@ApiModelProperty(hidden = true)\n    public boolean get_ebean_intercept() {\n        return false;\n    }\nYou can also use @JsonIgnore. ",
    "ebourg": "Well, it affects the usability of the API though. This change is rather harmless, it's backward compatible and saves a few characters for the developers. Only pull requests fixing actual bugs are accepted?. Sorry I don't get it, the change proposed also works with arrays, you can use both syntaxes:\nsetSchemes(new String[] {\"http\", \"https\"})\n\nand\nsetSchemes(\"http\", \"https\")\n\nYou can only make more developers happy with this.. ",
    "gilbode": "@fehguy - any suggestions on a better approach?\n. ",
    "westy92": "I tried the following with no luck:\n``` yaml\nswagger: '2.0'\ninfo:\n  title: Title\n  version: 1.0.0\npaths:\n  /a:\n    post:\n      parameters:\n        - in: body\n          name: A\n          required: true\n          schema:\n            $ref: '#/definitions/A'\n      responses:\n        201:\n          description: Success\ndefinitions:\n  A:\n    type: object\n    properties:\n      b1:\n        $ref: '#/definitions/C'\n      b2:\n        $ref: '#/definitions/D'\n  B:\n    type: object\n    properties:\n      num:\n        type: integer\n      str:\n        type: string\n  C:\n    allOf:\n      - $ref: '#/definitions/B'\n    required:\n    - num\nD:\n    allOf:\n      - $ref: '#/definitions/B'\n    required:\n    - str\n```\n. I tried the following with no luck:\n``` yaml\nswagger: '2.0'\ninfo:\n  title: Title\n  version: 1.0.0\npaths:\n  /a:\n    post:\n      parameters:\n        - in: body\n          name: A\n          required: true\n          schema:\n            $ref: '#/definitions/A'\n      responses:\n        201:\n          description: Success\ndefinitions:\n  A:\n    type: object\n    properties:\n      b1:\n        $ref: '#/definitions/C'\n      b2:\n        $ref: '#/definitions/D'\n  B:\n    type: object\n    properties:\n      num:\n        type: integer\n      str:\n        type: string\n  C:\n    allOf:\n      - $ref: '#/definitions/B'\n    required:\n    - num\nD:\n    allOf:\n      - $ref: '#/definitions/B'\n    required:\n    - str\n```\n. ",
    "dmitrysenkovich": "@fehguy But I can't specify a default list value with the @DefaultValue annotation.. ",
    "bouskaJ": "It is not possible to fix it in Arquillian so if you want to swagger will be testable with Arquillian you have to change something in swagger core.\n. ",
    "GPrathap": "So in order to read @SwaggerDefinition I have used this approach. Just adding to know whether is the proper way parse @SwaggerDefinition annotation. \n@SwaggerDefinition(\n        info = @Info(\n                description = \"Gets the weather\",\n                version = \"V12.0.12\",\n                title = \"The Weather API\",\n        ),\n        tags = {\n                @Tag(name = \"Private\", description = \"Tag used to denote operations as private\")\n        })\n)\n```\n    private static final String SWAGGER_ANNOTATIONS_INFO = \"info\";\n    private static final String SWAGGER_ANNOTATIONS_TAGS = \"tags\";\n    private static final String SWAGGER_ANNOTATIONS_EXTENSIONS = \"extensions\";\n    private static final String SWAGGER_ANNOTATIONS_PROPERTIES = \"properties\";\n    private static final String SWAGGER_ANNOTATIONS_PROPERTIES_NAME = \"name\";\n    private static final String SWAGGER_ANNOTATIONS_PROPERTIES_VERSION = \"version\";\n    private static final String SWAGGER_ANNOTATIONS_PROPERTIES_CONTEXT = \"context\";\n    private static final String SWAGGER_ANNOTATIONS_PROPERTIES_VALUE = \"value\";\n   InvocationHandler methodHandler = Proxy.getInvocationHandler(annotation);\n    Annotation info = (Annotation) methodHandler.invoke(annotation, apiClazz\n            .getMethod(SWAGGER_ANNOTATIONS_INFO,null),null);\n    Annotation[] tags = (Annotation[]) methodHandler.invoke(annotation, apiClazz\n            .getMethod(SWAGGER_ANNOTATIONS_TAGS,null),null);\n    String[] tagNames = new String[tags.length];\n    for(int i=0; i<tags.length; i++){\n        methodHandler = Proxy.getInvocationHandler(tags[i]);\n        tagNames[i]=(String)methodHandler.invoke(tags[i], tagClass\n                .getMethod(SWAGGER_ANNOTATIONS_PROPERTIES_NAME, null),null);\n    }\n    methodHandler = Proxy.getInvocationHandler(info);\n    String version = (String)methodHandler.invoke(info, infoClass\n            .getMethod(SWAGGER_ANNOTATIONS_PROPERTIES_VERSION,null),null);\n    if(\"\".equals(version))return null;\n    Annotation[] apiInfo = (Annotation[])methodHandler.invoke(info, infoClass\n            .getMethod(SWAGGER_ANNOTATIONS_EXTENSIONS,null),null);\n    methodHandler = Proxy.getInvocationHandler(apiInfo[0]);\n    Annotation[] properties =  (Annotation[])methodHandler.invoke(apiInfo[0], extensionClass\n                    .getMethod(SWAGGER_ANNOTATIONS_PROPERTIES,null), null);\n    APIResourceConfiguration apiResourceConfig = new APIResourceConfiguration();\n    for (Annotation property : properties) {\n        methodHandler = Proxy.getInvocationHandler(property);\n        String key = (String) methodHandler.invoke(property, extensionPropertyClass\n                        .getMethod(SWAGGER_ANNOTATIONS_PROPERTIES_NAME, null),\n                null);\n        String value = (String) methodHandler.invoke(property, extensionPropertyClass\n                        .getMethod(SWAGGER_ANNOTATIONS_PROPERTIES_VALUE, null),null);\n        if (\"\".equals(key)) return null;\n        switch (key) {\n            case SWAGGER_ANNOTATIONS_PROPERTIES_NAME:\n                if (\"\".equals(value)) return null;\n                apiResourceConfig.setName(value);\n                break;\n            case SWAGGER_ANNOTATIONS_PROPERTIES_CONTEXT:\n                if (\"\".equals(value)) return null;\n                apiResourceConfig.setContext(value);\n                break;\n            default:\n                break;\n        }\n    }\n\n```. ",
    "sworisbreathing": "@fehguy what @Examples annotation? I can't find it in this repo.. @chaojungc which @Examples annotation exactly did you use? I'm having trouble finding it.. ",
    "agairing": "Is this already supported? Would be very nice.. ",
    "mikkoi": "Yes, the example does that: replaces the parameter \"query\" with another definition (including datatype). The parameter type stays same (query, not body/header/etc.).\nI think you are right. We get the same result by setting hidden=true. I had not considered that. I wonder if replace=* would be any clearer...\n. The suggested functionality can be achieved by other ways already implemented.. ",
    "yinzara": "Nevermind. It's actually not a defect. Discovered something wrong with how I was using it.  Anyway build is still failing right now for reasons unrelated to my change.  Looks like travis-cs is having a certificate error contacting the maven repository central.  I've tweeted the CI Status twitter.\n. ",
    "ganeshs": "I'm waiting for this as well. Any update on the next release?. ",
    "jplock": "This release has been pending for quite some time.  There are downstream dependent libraries that I'd rather not deploy to Maven Central referencing snapshot builds of swagger-core (not even sure if that's possible).   Is there a list of open issues that you are waiting to address before the next release?  This is only a patch release we're talking about here, not a minor version bump.. Thanks for the update.. I see the Jackson upgrade landed.  Are there any other large changes currently blocking a release?. Has 1.5.12 been published to maven central?. Cool thanks.  I just hadn't seen it on http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22io.swagger%22%20AND%20a%3A%22swagger-core%22 yet. ",
    "amolsolanke": "@lloyd31 I have made changes suggested by you. You can see update code above\nBUt still getting 404 when accessing as follows (actually tried in many ways as not sure which one is correct)\n\n\nhttp://localhost:8080/myapp/rest/api/swagger.json\n\n\nhttp://localhost:8080/myapp/api/swagger.json\n\n\nhttp://localhost:8080/myapp/rest/swagger.json\n\n\nhttp://localhost:8080/myapp/swagger.json\n\n\nhttp://localhost:8080/swagger.json\n\n\nPlease let me know if more information required. ",
    "Mikosz91": "This is a simple null check I wrote because I was running into NPEs when using removeBrokenReferenceDefinitions(). A few of the body parameters for resources I have documented are a list of strings @ApiOperation(response = String.class, responseContainer = \"List\") which is of type StringProperty.\nThese are resolved in getPropertyRef() as null which eventually causes the filter to try and add null values to a TreeSet of referenced definitions.. ",
    "raderio": "Where can I find information about interdependent requirements,?. https://github.com/OAI/OpenAPI-Specification/issues/256. Thanks. In v3.0 it will be something different from \"allOf\"? . Thanks. In v3.0 it will be something different from \"allOf\"? . Ok, thanks.. Ok, thanks.. ",
    "andreaformica": "Ok, thanks a lot, what I did as a \"patch\" was to put the following annotations on top of the method:\n@ApiImplicitParams({\n        @ApiImplicitParam(name = \"payload\", value = \"Json body for payloaddto\", required = true, dataType = \"string\", paramType = \"formData\"),\n    })\nand this seems to do the job...\nIs this an acceptable solution ?\nAndrea. ",
    "rajucet11": "\nOk, thanks a lot, what I did as a \"patch\" was to put the following annotations on top of the method:\n@ApiImplicitParam(name = \"payload\", value = \"Json body for payloaddto\", required = true, dataType = \"string\", paramType = \"formData\"),\n  })\nand this seems to do the job...\nIs this an acceptable solution ?\nAndrea\n\nI tried the same, but not working for me... Can you please add the full code snippet ... ",
    "andreas-fey": "So, how does this fix showing a password in swagger as **** ?. ",
    "ErikGrimes": "@roni-frantchi Will your changes cover the case where there are multiple abstract subtypes in the inheritance hierarchy? For example: \nabstract class A {};\nabstract class B extends A {};\nclass C extends B {};. 1. How does parent relate to subtypes?\n2. Will this fix apply to swagger-core's native understanding of jackson's annotations? . @roni-frantchi \n1. ApiModel has a subtypes attribute that's used to describe inheritance.\n```\n@ApiModel(value=\"RootType\", discriminator = \"type\", subTypes = {AbstractType1.class, ConcreteType1.class})\npublic class RootType {\n}\n@ApiModel\npublic class AbstractType1 extends RootType {\n    @ApiModelProperty\n    public String value;\n}\n@ApiModel\npublic class ConcreteType1 extends AbstractType1 {\n}\n```\nI expect swagger-core to mirror Jackson's behavior, where you list the concrete subtypes using @ApiModel(subTypes={}) and it walks the inheritance tree, creating definitions for each subtype in the tree.   Instead, it produces a definition for each leaf in the tree, pushing the properties for intermediate types down into the leaf type.\ndefinitions:\n  AbstractType1:\n    allOf:\n    - $ref: \"#/definitions/RootType\"\n    - type: \"object\"\n      properties:\n        value:\n          type: \"string\"\n  ConcreteType1:\n    allOf:\n    - $ref: \"#/definitions/RootType\"\n    - type: \"object\"\n      properties:\n        value:\n          type: \"string\"\n  RootType:\n    type: \"object\"\n    discriminator: \"type\"\nI haven't really found a description of how parent is intended to be used or how it differs from subtypes. \nSo, I'm trying to understand:\nWill this patch fix the problems with using intermediate subtypes defined using the subtypes attribute described above?\nHow is the parents attribute intended to differ from subtypes?  What should it be used for?\n\nAs I understand it, swagger-core consumes Jackson annotations to create the specification.  So, you don't need to replicate the information already contained in the Jackson annotations by adding Swagger annotations. Here is an example of Jackson annotations\n\n```\n@JsonTypeInfo(\n          use = JsonTypeInfo.Id.NAME,\n          include = JsonTypeInfo.As.PROPERTY, \n          property = \"type\")\n        @JsonSubTypes({ \n          @Type(value = ConcreteType1.class, name = ConcreteType1\")\n        })\nclass ParentType {}\nclass AbstractType1 extends ParentType {}\nclass ConcreteType1 extends AbstractType1 {}\n```\nWill this patch generate definitions for subtypes as expected when the information is contained in the Jackson annotations instead of in ApiModel annotations?\n. ",
    "ssahni30": "@RequestMapping(value = \"/orders/labels\", method = RequestMethod.GET, produces = MediaType.APPLICATION_OCTET_STREAM)\nI am already using octet_stream. just have added response = byte.class . Still i am receiving corrupted pdf file. Also tried @Produces(\"application/pdf\") even this didn't worked. \napplication-pdf-labels-orderItemsId=ff-blob-http---localhost-8080-f1e0b4e0-7b63-439b-8eeb-1a281524bfa1.pdf\n\n. I am using springfox-swagger2 - version 2.5.0 with springfox-swagger-ui - version 2.5.0.. it points to swagger-annotation version 1.5.9 and yes just tried using petstore.swagger.io\n\n. Iissue persist if i populate my swagger.json in http://petstore.swagger.io (Not sure which version petsore link uses). Above screenshot was taken with petstore only.  Moreover springfox 2.5.0 uses swagger-ui version 2.2.6 (just confirmed)\nPS - I have started shifting to swagger ui. I am also working to fix this issue. Any way around this ? . ",
    "ahatzz11": "@fehguy Thanks for the quick reply! They appear in reverse alphabetical order in the JSON as well. \n\"responses\":{\n  \"200\":{\n    \"description\":\"OK\",\n    \"schema\":{\n      \"type\":\"object\"\n    },\n    \"headers\":{\n      \"zX-RateLimit-Remaining\":{\n        \"type\":\"integer\",\n        \"format\":\"int32\",\n        \"description\":\"The number of calls remaining before the limit is enforced and requests are bounced.\"\n      },\n      \"dX-RateLimit-zLimit\":{\n        \"type\":\"integer\",\n        \"format\":\"int32\",\n        \"description\":\"The defined maximum number of requests available to the consumer for this API.\"\n      },\n      \"aX-RateLimit-Reset\":{\n        \"type\":\"integer\",\n        \"format\":\"int32\",\n        \"description\":\"The time, in seconds, until the limit expires and another request will be allowed in. This header will only be present if the limit is being enforced.\"\n      }\n    }\n  },. Great, thanks!\nAlso, I couldn't find any good examples of having multiple @ResponseHeader annotations in the documentation or online after a bit of searching. If there is a better way of doing it than what I have above, let me know. Maybe something with the responseContainer attribute? I don't quite understand what that does yet. . Oh nice, I found an example here. \nIf there is any other information you need from me on this issue, let me know. . @fehguy I have another odd ordering issue. I can put this in a new issue if you want. \nWe're sending many of our params using a custom object, so most of them don't appear in the method params directly. To get these to show up in the documentation, I'm using @ApiImplicitParam. The order of these parameters is quite confusing to me. Maybe you can shed some light on what is going on. \n@ApiImplicitParams( {\n        @ApiImplicitParam(name = \"product_id\", paramType = \"query\", dataType = \"string\", required = true, value = \"Product ID to lookup.\"),\n        @ApiImplicitParam(name = \"key\", paramType = \"query\", dataType = \"string\", required = true, value = \"Valid API Key.\"),\n        @ApiImplicitParam(name = \"channel_id\", paramType = \"query\", dataType = \"string\"),\n        @ApiImplicitParam(name = \"disable_location_filter\", paramType = \"query\", dataType = \"boolean\"),\n        @ApiImplicitParam(name = \"esfs_locations\", paramType = \"query\", dataType = \"int\"),\n        @ApiImplicitParam(name = \"multichannel_option\", paramType = \"query\", dataType = \"string\"),\n        @ApiImplicitParam(name = \"field_groups\", paramType = \"query\", dataType = \"string\"),\n        @ApiImplicitParam(name = \"inventory_type\", paramType = \"query\", dataType = \"string\"),\n        @ApiImplicitParam(name = \"is_parent_id\", paramType = \"query\", dataType = \"string\"),\n        @ApiImplicitParam(name = \"limit\", paramType = \"query\", dataType = \"int\"),\n        @ApiImplicitParam(name = \"location_available_to_promise_quantity\", paramType = \"query\", dataType = \"double\"),\n        @ApiImplicitParam(name = \"location_available_to_release_quantity\", paramType = \"query\", dataType = \"double\"),\n        @ApiImplicitParam(name = \"location_ids\", paramType = \"query\", allowMultiple = true, dataType = \"string\"),\n        @ApiImplicitParam(name = \"mixed_cart\", paramType = \"query\", dataType = \"boolean\"),\n        @ApiImplicitParam(name = \"onlyGetEligibilitiesForSpecifiedMCOption\", paramType = \"query\", dataType = \"boolean\"),\n        @ApiImplicitParam(name = \"ignoreComputedLocationEligibility\", paramType = \"query\", dataType = \"boolean\"),\n        @ApiImplicitParam(name = \"nearby\", paramType = \"query\", dataType = \"string\"),\n        @ApiImplicitParam(name = \"radius\", paramType = \"query\", dataType = \"double\"),\n        @ApiImplicitParam(name = \"requested_quantity\", paramType = \"query\", dataType = \"double\"),\n        @ApiImplicitParam(name = \"skip_sameday_route_calculation\", paramType = \"query\", dataType = \"boolean\"),\n        @ApiImplicitParam(name = \"sort\", paramType = \"query\", dataType = \"string\"),\n        @ApiImplicitParam(name = \"stores_limit\", paramType = \"query\", dataType = \"int\")\n    }\n)\nAnd here's how it ends up in the JSON, and the ui. \n\nI'd like product_id and key to be at the top, since they are both required. It doesn't take the order of my annotations, it doesn't go alphabetical, it doesn't prioritize params with a description (value in @ApiImplicitParam). \nThe only thing that might cause this, is that product_id is the only param that appears in the method itself. \npublic ResponseEntity<?> networkAvailabilityJsonResponse(\n            @RequestHeader HttpHeaders headers,\n            @PathVariable(\"product_id\") String productId,\n            @Valid NetworkAvailabilityCmd cmd,\n            BindingResult result)\n            throws Exception {\n            [...]\n            }\nAny ideas?. Currently on 1.5.10. I'll try the newest snapshot.. @fehguy I have updated to 1.5.12, and this issue is still occurring. \n@ApiResponses(\n        value = {\n                @ApiResponse(code = 200,\n                        message = \"OK\",\n                        responseHeaders = {\n                                @ResponseHeader(name = \"A-X-RateLimit-Limit\", description = \"The defined maximum number of requests available to the consumer for this API.\", response = Integer.class),\n                                @ResponseHeader(name = \"B-X-RateLimit-Remaining\", description = \"The number of calls remaining before the limit is enforced and requests are bounced.\", response = Integer.class),\n                                @ResponseHeader(name = \"C-X-RateLimit-Reset\", description = \"The time, in seconds, until the limit expires and another request will be allowed in. This header will only be present if the limit is being enforced.\", response = Integer.class)\n                        }\n                )\n        })\nHere is the JSON output: \n\"responses\":{\n  \"200\":{\n    \"description\":\"OK\",\n    \"schema\":{\n      \"type\":\"object\"\n    },\n    \"headers\":{\n      \"C-X-RateLimit-Reset\":{\n        \"type\":\"integer\",\n        \"format\":\"int32\",\n        \"description\":\"The time, in seconds, until the limit expires and another request will be allowed in. This header will only be present if the limit is being enforced.\"\n      },\n      \"B-X-RateLimit-Remaining\":{\n        \"type\":\"integer\",\n        \"format\":\"int32\",\n        \"description\":\"The number of calls remaining before the limit is enforced and requests are bounced.\"\n      },\n      \"A-X-RateLimit-Limit\":{\n        \"type\":\"integer\",\n        \"format\":\"int32\",\n        \"description\":\"The defined maximum number of requests available to the consumer for this API.\"\n      }\n    }\n  }\n\nI've tested this at both the method level, and the class level. The odd ordering issue with my @ApiImplicitParam annotations is still happening as well. \nswagger-annotations, swagger-core and swagger-models are all on 1.5.12. I've been doing some more playing with this, and now I'm running into other odd situations. \n@ApiResponse(code = 200,\n                        message = \"OK\",\n                        responseHeaders = {\n                                @ResponseHeader(name = \"aaa\", description = \"The defined maximum number of requests available to the consumer for this API.\", response = Integer.class),\n                                @ResponseHeader(name = \"bbb\", description = \"The number of calls remaining before the limit is enforced and requests are bounced.\", response = Integer.class),\n                                @ResponseHeader(name = \"ccc\", description = \"The time, in seconds, until the limit expires and another request will be allowed in. This header will only be present if the limit is being enforced.\", response = Integer.class)\n                        }\n                )\ngives me...\n\"responses\":{\n  \"200\":{\n    \"description\":\"OK\",\n    \"schema\":{\n      \"type\":\"object\"\n    },\n    \"headers\":{\n      \"aaa\":{\n        \"type\":\"integer\",\n        \"format\":\"int32\",\n        \"description\":\"The defined maximum number of requests available to the consumer for this API.\"\n      },\n      \"ccc\":{\n        \"type\":\"integer\",\n        \"format\":\"int32\",\n        \"description\":\"The time, in seconds, until the limit expires and another request will be allowed in. This header will only be present if the limit is being enforced.\"\n      },\n      \"bbb\":{\n        \"type\":\"integer\",\n        \"format\":\"int32\",\n        \"description\":\"The number of calls remaining before the limit is enforced and requests are bounced.\"\n      }\n    }\n  }\n\n@ApiResponse(code = 200,\n                        message = \"OK\",\n                        responseHeaders = {\n                                @ResponseHeader(name = \"b\", description = \"The defined maximum number of requests available to the consumer for this API.\", response = Integer.class),\n                                @ResponseHeader(name = \"a\", description = \"The number of calls remaining before the limit is enforced and requests are bounced.\", response = Integer.class),\n                                @ResponseHeader(name = \"c\", description = \"The time, in seconds, until the limit expires and another request will be allowed in. This header will only be present if the limit is being enforced.\", response = Integer.class)\n                        }\n                ),\ngives me...\n\"responses\":{\n  \"200\":{\n    \"description\":\"OK\",\n    \"schema\":{\n      \"type\":\"object\"\n    },\n    \"headers\":{\n      \"a\":{\n        \"type\":\"integer\",\n        \"format\":\"int32\",\n        \"description\":\"The number of calls remaining before the limit is enforced and requests are bounced.\"\n      },\n      \"b\":{\n        \"type\":\"integer\",\n        \"format\":\"int32\",\n        \"description\":\"The defined maximum number of requests available to the consumer for this API.\"\n      },\n      \"c\":{\n        \"type\":\"integer\",\n        \"format\":\"int32\",\n        \"description\":\"The time, in seconds, until the limit expires and another request will be allowed in. This header will only be present if the limit is being enforced.\"\n      }\n    }\n  }\nI'm not sure what happening, but it doesn't seem to be preserving the order.. @fehguy Any ideas on the odd examples above?. I am using SpringFox, and I ended up using the @ModelAttribute annotation (from Spring) to get it working properly.\nMost of the classes I have use different params, so the class level @ApiImplicitParams` doesn't do much for my current project. Thanks!. @fehguy I am using SpringFox, if that might have any effect on this. I'm not sure what you mean by \"Resource Class\".  Here is another example: \n@RestController\n@RequestMapping(\"available_to_promise/v2\")\n@Profile(\"!disable-controllers\")\n@ApiResponses(\n    value = {\n        @ApiResponse(code = 200, message = \"OK\",\n            responseHeaders = {\n                @ResponseHeader(name = \"X-RateLimit-Limit\", description = \"The defined maximum number of requests available to the consumer for this API.\", response = Integer.class),\n                @ResponseHeader(name = \"X-RateLimit-Remaining\", description = \"The number of calls remaining before the limit is enforced and requests are bounced.\", response = Integer.class),\n                @ResponseHeader(name = \"X-RateLimit-Reset\", description = \"The time, in seconds, until the limit expires and another request will be allowed in. This header will only be present if the limit is being enforced.\", response = Integer.class)\n            }\n        )\n    }\n)\n@Api(tags = {\"ATP Controller\", \"Public Endpoints\"})\npublic class AvailableToPromiseController extends AvailableToPromiseBaseController {\n    // logic and endpoints\n}\n\"headers\":{\n    \"X-RateLimit-Reset\": {\n        \"type\": \"integer\",\n        \"format\": \"int32\",\n        \"description\": \"The time, in seconds, until the limit expires and another request will be allowed in. This header will only be present if the limit is being enforced.\"\n    },\n    \"X-RateLimit-Remaining\": {\n        \"type\": \"integer\",\n        \"format\": \"int32\",\n        \"description\": \"The number of calls remaining before the limit is enforced and requests are bounced.\"\n    },\n    \"X-RateLimit-Limit\": {\n        \"type\": \"integer\",\n        \"format\": \"int32\",\n        \"description\": \"The defined maximum number of requests available to the consumer for this API.\"\n    }\n}. That's what I feared. I've had a few issues that have kinda been abandoned over there, maybe I'll try again with this one. Thanks!\n. Sorry, I'm not totally sure what you mean. I updated the original comment with a little more information. The value attribute is properly being put into description in swagger, but the name isn't being being set. . ",
    "dpeger": "I can confirm this is still an issue with 1.5.12.\nI got a slightly different setup where I create a BeanConfig bean with base path set and am using @SwaggerDefinition with basePath at a service level. But the base path from the @SwaggerDefinition seems to be ignored when creating the API yaml/json.. ",
    "ChristianCiach": "I can confirm this, too, using Swagger 1.5.16.. I could be wrong, but i think you also need to add the @Api annotation to the Interface. . I can confirm this using Swagger 1.5.16. As BaseApiListingResource.java calls Json.mapper().writeValueAsString(swagger) directly, there is absolutely no point in registering SwaggerSerializers.class to the JAX-RS implementation, as SwaggerSerializers isn't used anyway.. I now use my own listing resource instead of ApiListingResource as a workaround:\n```\n/\n\n * Hack-class to use until https://github.com/swagger-api/swagger-core/issues/2320 is fixed.\n \n * @author christianc\n \n/\n@Path(\"/swagger.{type:json|yaml}\")\npublic class HackApiListingResource extends BaseApiListingResource {\n@Context\nServletContext context;\n\n@GET\n@Produces({ MediaType.APPLICATION_JSON, \"application/yaml\" })\n@ApiOperation(value = \"The swagger definition in either JSON or YAML\", hidden = true)\npublic Response getListing(@Context Application app, @Context ServletConfig sc, @Context HttpHeaders headers,\n        @Context UriInfo uriInfo, @PathParam(\"type\") String type) throws JsonProcessingException {\n    Swagger swagger = process(app, context, sc, headers, uriInfo);\n    if (swagger == null) {\n        return Response.status(Status.NOT_FOUND).build();\n    }\n    if (\"json\".equals(type)) {\n        return Response.ok(swagger, MediaType.APPLICATION_JSON).build();\n    }\n    if (\"yaml\".equals(type)) {\n        return Response.ok(swagger, \"application/yaml\").build();\n    }\n    return Response.status(Status.NOT_FOUND).build();\n}\n\n}\n```\n~~I propose this as a fix for the current ApiListingResource.java~~ (Not anymore, see two comments below). Of course, this only works if SwaggerSerializers is also registered as a JAX-RS resource, but according to the official documentation this needs to be done anyway (but wasn't necessary before because of this bug).. Wtf is this anyway?\nString yaml = Yaml.mapper().writeValueAsString(swagger);\n                StringBuilder b = new StringBuilder();\n                String[] parts = yaml.split(\"\\n\");\n                for (String part : parts) {\n                    b.append(part);\n                    b.append(\"\\n\");\n                }\n                return Response.ok().entity(b.toString()).type(\"application/yaml\").build();\nWhy first split the yaml and then reconstruct it again?. The bug of this issue has been introduced with 3ad759596f321ffb195256e045ec5803c00ee53c. I propose a complete revert of this commit, as I don't see the point of it. The commit message is \"use custom object mapper to serialize json in order to avoid null values\", but I don't see any null handling that would differ from the current implementation of SwaggerSerializers.java. Please revert this commit! . I've added a second commit to remove a similar issue for YAML documents, where SwaggerSerializers.java has been ignored, too. Also, I've removed some split-and-then-rejoin-code that has been pointless since ages. . @webron \nPlease consider this pull request for the next 1.5-release.. An identical pull request for the 2.0 branch has already been merged. . @pjfanning I will try to create a test case. . I've committed a unit test. It's pretty ugly, because there is no BeanParam annotation in JAX-RS-API < 2.0, so I had to introduce my own annotation called \"MyBeanParam\". I tried to contain the ugliness in the class BeanParamTest.java. \nTo apply this test to the 2.0 branch, MyBeanParam can be removed in favour of the real BeanParam.. sigh :D. Pull request for 2.0: https://github.com/swagger-api/swagger-core/pull/2546\nBy the way: There are multiple instances where a class extends a standard collection like LinkedHashMap, like Paths.java and Callback.java. This is considered bad practice, because there are many pitfalls. The mentioned classes override equals(), so there is the problem that anyMap.equals(paths) can be true, but paths.equals(anyMap) can not, which violates the contract of equals(). Also, I would never expect the classes Paths and Callback to be Maps.. Why does Swagger core depend on guava-android? This conflicts with our server application, which (of course) depends on guava-jre. . > How it's possible to exclude this guava-android transitive dependency from build.gradle ?\nThis is one of the possibilities:\ndependencies {\n    compile('io.swagger:swagger-jaxrs:1.5.22') {\n        exclude group: 'com.google.guava', module: 'guava'\n    }\n    compile 'com.google.guava:guava:27.0.1-jre'\n}\nThere are other ways that I prefer in this case: https://docs.gradle.org/current/userguide/customizing_dependency_resolution_behavior.html#sec:dependency_substitution_rules\n\nSo why swagger code opted for android flavor instead of jre ones?\n\n@frantuma answered that already, and he is right:\n\nas 1.5 supports Java 1.7, it reference guava-android as the flavor supporting 1.7\n\nguava-jre requires Java 1.8. If swagger-core would depend on guava-jre, this would make swagger-core require Java 1.8. Because Swagger 1.* promises to be compatible with Java 1.7, depending on guava-jre is not an option.\n. ",
    "demotodo": "Hi @webron, it's working when annotating @ApiModelProperty(hidden = true) on getter.\nLooking over the source codes of io.swagger.jackson.ModelResolver#resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator<io.swagger.converter.ModelConverter>) and io.swagger.jackson.ModelResolver#ignore, it doesn't handle the @ApiModelProperty(hidden = true) on field.. Hi @webron, I was trying to fix this issue, and digging a bit more deeply into Jackson. \nFound, the metadata of fields are removed in com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector#_removeUnwantedProperties.\nSince I used the Lombok, which will generate getter and setter methods. As a result, Jackson will ignore the metadata of field, and then use getter instead on its priority order...\nBut another case is the description defined by @ApiModelProperty(value = \"MUST be same as work type email address\", required = true), it's captured by Swagger. That means the annotations on field are handled by Swagger someway.\nWhat's your suggestion on handling 'hidden' flag annotated on field when the getter/setter also exist?\nThanks.. ",
    "ahartoto": "+1 \ud83d\udc4d . ",
    "RoccoMathijn": "Hidden parameter also does not seem to work on scala case classes.. ",
    "krisso-b": "We had the same issue.\nThe fix was easy - setters were missing.. ",
    "s101d1": "I can't find type and format on the documentation of ApiParam: http://docs.swagger.io/swagger-core/current/apidocs/index.html?io/swagger/annotations/ApiParam.html\nIs the documentation not updated yet?\n. ",
    "blalasaadri": "Same problem here with Swagger v1.5.10 (via Springfox-Swagger2 v2.6.1) and Immutables v2.4.3.. Ah sorry, my mistake. I've corrected my post, it's Swagger (annotations and models) v1.5.10.\nThe problem seems to be, that Swagger is trying to scan for fields rather than for getters; using the @Value.Immutable annotation, I'm only defining getters in an abstract class or interface though, the fields are automatically generated in a separate implementing class.. @fehguy Actually, I disagree. Swagger wouldn't need a further dependency; instead there could be a mode where Swagger will scan beans not for fields but rather for getters. That would solve the problem not just for this case but potentially for many others too.. I disagree with the notion, that solving this problem would introduce a further dependency. The solution doesn't have to be (and probably shouldn't be) specific to Value.Immutables.. ",
    "dongshengbc": "Any updates on this? . @webron Thanks for reply. I meant to ask how we could combine using Value.Immutable (immutables.github.io) with swagger? \nIs that a solved problem? That will be great if that is the case. . ",
    "msmerc": "[For context: Value.Immutable refers to the  immutables.github.io project which uses annotations to create POJOs, I'm sure you've figured this much out]\nI have the same issue. It seems that the Jackson io.swagger.jackson.ModelResolver expects everything to be bean-like. However it's perfectly possible to stream non-bean methods into JSON so really the ModelResolver should look at those methods too.\nIt doesn't look too tricky to fix, the question really is how best to resolve it? I can think of a few ideas:\n\n\nEnhance the jackson ModelResolver so that it will pull in every method that gets streamed into the JSON, not just bean-like methods.\n\n\nRefactor the jackson ModelResolver so that it has some extension points - for example you'd want all ModelResolvers to respect the swagger annotations.\n\n\nCreate an Immutables specific ModelResolver. This is clean but the problem with this is that it would need to see the immutables annotations, which adds a dependency. Is it possible to somehow do this optionally? I've no idea?\n\n\n(2 & 3 kinda go together as you can see)\nIf someone who knows about swagger  / ModelResolvers (@Webron? @fehguy?) has any suggestions on how best to provide a solution I don't mind taking a look at writing a patch (no promises though :p )\n. [For context: Value.Immutable refers to the  immutables.github.io project which uses annotations to create POJOs, I'm sure you've figured this much out]\nI have the same issue. It seems that the Jackson io.swagger.jackson.ModelResolver expects everything to be bean-like. However it's perfectly possible to stream non-bean methods into JSON so really the ModelResolver should look at those methods too.\nIt doesn't look too tricky to fix, the question really is how best to resolve it? I can think of a few ideas:\n\n\nEnhance the jackson ModelResolver so that it will pull in every method that gets streamed into the JSON, not just bean-like methods.\n\n\nRefactor the jackson ModelResolver so that it has some extension points - for example you'd want all ModelResolvers to respect the swagger annotations.\n\n\nCreate an Immutables specific ModelResolver. This is clean but the problem with this is that it would need to see the immutables annotations, which adds a dependency. Is it possible to somehow do this optionally? I've no idea?\n\n\n(2 & 3 kinda go together as you can see)\nIf someone who knows about swagger  / ModelResolvers (@Webron? @fehguy?) has any suggestions on how best to provide a solution I don't mind taking a look at writing a patch (no promises though :p )\n. Upon further inspection, I think the root cause here is that the ModelResolver doesn't respect the @JsonSerialize(as=...) annotation. If we can add this it might JustWork(tm).\nHere's the extra test I'm using (to be added to SimpleGenerationTest.java):\n@Test //passes\npublic void testNotBeanlike() throws Exception {\n    final Model model = context.resolve(NotBeanlike.class);\n    final Map<String, Property> props = model.getProperties();\n    assertEquals(props.size(), 1);\n\n    final Property prop = props.values().iterator().next();\n    assertEquals(prop.getName(), \"notGetter\");\n}\n\nstatic class NotBeanlike {\n    @JsonProperty(\"notGetter\")\n    public String notGetter() {return \"Not a getter\";}\n}\n\n@Test //fails\npublic void testEvenLessBeanlike() throws Exception {\n    final Model model = context.resolve(EvenLessBeanlike.class);\n    final Map<String, Property> props = model.getProperties();\n    assertEquals(props.size(), 1);\n\n    final Property prop = props.values().iterator().next();\n    assertEquals(prop.getName(), \"notGetter\");\n}\n\n@JsonSerialize(as = NotBeanlike.class)\n@JsonDeserialize(as = NotBeanlike.class)\nstatic interface EvenLessBeanlike {\n    public String notGetter();\n}. Upon further inspection, I *think* the root cause here is that the ModelResolver doesn't respect the `@JsonSerialize(as=...)` annotation. If we can add this it might JustWork(tm).\n\nHere's the extra test I'm using (to be added to SimpleGenerationTest.java):\n@Test //passes\npublic void testNotBeanlike() throws Exception {\n    final Model model = context.resolve(NotBeanlike.class);\n    final Map<String, Property> props = model.getProperties();\n    assertEquals(props.size(), 1);\n\n    final Property prop = props.values().iterator().next();\n    assertEquals(prop.getName(), \"notGetter\");\n}\n\nstatic class NotBeanlike {\n    @JsonProperty(\"notGetter\")\n    public String notGetter() {return \"Not a getter\";}\n}\n\n@Test //fails\npublic void testEvenLessBeanlike() throws Exception {\n    final Model model = context.resolve(EvenLessBeanlike.class);\n    final Map<String, Property> props = model.getProperties();\n    assertEquals(props.size(), 1);\n\n    final Property prop = props.values().iterator().next();\n    assertEquals(prop.getName(), \"notGetter\");\n}\n\n@JsonSerialize(as = NotBeanlike.class)\n@JsonDeserialize(as = NotBeanlike.class)\nstatic interface EvenLessBeanlike {\n    public String notGetter();\n}. @fehguy I've updated my PR to include an immutables test.\n\nIt also has a proposed fix ;). @fehguy I've updated my PR to include an immutables test.\nIt also has a proposed fix ;). @fehguy Any thoughts?. @fehguy Any thoughts?. Thanks - much appreciated!\nWhen are you guys next planning to release?. ",
    "hoereth": "I see that it has been a year. I am currently struggling with a LocalDateTime @ApiModelProperty and would like to add a format manually. Is this possible already?. ",
    "yaobaobao": "Thanks for your reply! But I don't have actual field, so I use @ApiImplicitParam to solve it. In the case, How do I do?. ",
    "JoopBL": "Is there a way to prevent taking over an attribute?. The now generated XML object contains an element (in this case version), which is surely not valid. So I prefer to have no element instead of an wrong element.\nSo the question is: is it possible to not generate an element for an attribute?. This issue is solved in the 1.5.12 version. version 1.5.12 has the same problem. I found your discussion, it concerned issue #3.\nIn my example code I already use @XmlEnumValue. The value in SwaggerUI is VALUE_1 instead of 1.\nShould I use my own ObjectMapper as described in your solution?. The JSON output does not contain the correct value (1). I will have to look for an ObjectMapper example and see if this solves the problem.. I wrote a custom ObjectMapper but the getContext is never called when refreshing from SwaggerUI. The constructor is called during startup. Any idea's? \n`import javax.ws.rs.ext.ContextResolver;\nimport javax.ws.rs.ext.Provider;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.SerializationFeature;\nimport com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule;\n@Provider\npublic class EnumObjectMapperProvider implements ContextResolver {\nprivate static final ObjectMapper OBJECTMAPPER = new ObjectMapper();\n\nstatic {\n    JaxbAnnotationModule module = new JaxbAnnotationModule();\n    OBJECTMAPPER.registerModule(module);\n    OBJECTMAPPER.configure(SerializationFeature.WRITE_ENUMS_USING_TO_STRING, true);\n}\n\n@Override\npublic ObjectMapper getContext(Class<?> type) {\n    return OBJECTMAPPER;\n}`. I have got this working. Thanks.\n\nI had to go back jackson* dependencies version 2.6.7 due to error: \njava.lang.NoSuchMethodError: com.fasterxml.jackson.databind.introspect.AnnotatedMember.getType()Lcom/fasterxml/jackson/databind/JavaType;\nalready mentioned here: https://github.com/FasterXML/jackson-module-jaxb-annotations/issues/57\nNow in swagger.json the output is OK. A minor issue in SwaggerUI remains:\n<Name> (string) = ['1', '2', '3']stringEnum:\"1\", \"2\", \"3\"\nBoth a String and stringEnum are shown. The swagger-ui issue is solved in 2.2.10 indeed. The Java class is being generated with xjc, so it is not possible to change this easily.. The Java class is being generated with xjc, so it is not possible to change this easily.. ",
    "rwalkerands": "+1 ... sort of.\nThe parameter of @XmlEnumValue() should be used. Usually that is the same as the value().\nSee also https://groups.google.com/d/topic/swagger-swaggersocket/r3slMd2-fys/discussion\n. In the case that JSON generated from the application (i.e., not the Swagger output) is coming from Jackson, does JSON output contain the correct value (1)? If not, you need a custom ObjectMapper that has the JaxbAnnotationModule registered.. Using Jersey? Follow their instructions: https://jersey.java.net/documentation/latest/media.html#json.jackson\nSample class:\n```\nimport javax.ws.rs.ext.ContextResolver;\nimport javax.ws.rs.ext.Provider;\nimport com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;\nimport com.fasterxml.jackson.annotation.JsonInclude.Include;\nimport com.fasterxml.jackson.annotation.PropertyAccessor;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule;\n/* Custom Jackson {@link ObjectMapper} provider for JSON deserialiation.\n * The customizations applied are:\n * (a) JAXB annotations are taken into account; (b) only non-null values\n * are included (c) only properties with getter methods are taken into account.\n * Note that despite (c), Jackson uses reflection to get values, rather\n * than calling getter methods. The difference is apparent for JAXB-generated\n * properties of List types, in which the getter method initializes the value\n * to an empty list, if the value is null.\n /\n@Provider\npublic class ObjectMapperContextResolver\n    implements ContextResolver {\n/** Singleton ObjectMapper for JSON generation. It is OK for\n * this to be a singleton, as ObjectMappers are thread-safe. */\nprivate static final ObjectMapper OBJECTMAPPER = new ObjectMapper();\n\nstatic {\n    JaxbAnnotationModule module = new JaxbAnnotationModule();\n    OBJECTMAPPER.registerModule(module);\n    OBJECTMAPPER.setSerializationInclusion(Include.NON_NULL);\n\n//        OBJECTMAPPER.configure(SerializationFeature.WRITE_EMPTY_JSON_ARRAYS,\n//                false);\n        OBJECTMAPPER.setVisibility(PropertyAccessor.FIELD, Visibility.NONE);\n    }\n/** Returns the singleton ObjectMapper instance to be used for\n * JSON deserialization.\n * @return The singleton ObjectMapper instance.\n */\n@Override\npublic ObjectMapper getContext(final Class<?> type) {\n    return OBJECTMAPPER;\n}\n\n}\n``\n. The code I included in the previous comment was about getting your _service_ itself (not Swagger) to produce the correct JSON. If you mean that the generatedswagger.json` is still wrong, then yes.\nHere's a sample workaround.\nThe \"problem\" is the AbstractModelConverter constructor, which registers Swagger's own introspector, so that \"our\" JAXB introspector doesn't then get used to extract enum values.\nSo we override ModelResolver's _addEnumProps() method by creating an instance of an anonymous class. (Or, create your own subclass in a separate file if you prefer.)\n```\npackage ;\nimport javax.servlet.ServletConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport com.fasterxml.jackson.databind.AnnotationIntrospector;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.SerializationFeature;\nimport com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector;\nimport com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule;\nimport io.swagger.converter.ModelConverters;\nimport io.swagger.jackson.ModelResolver;\nimport io.swagger.jaxrs.config.BeanConfig;\nimport io.swagger.models.properties.Property;\nimport io.swagger.models.properties.StringProperty;\nimport io.swagger.util.Json;\n/* Class to bootstrap the configuration of the Swagger view of the API.\n /\npublic class SwaggerBootstrapper extends HttpServlet {\n/** Generated UID for serialization. */\nprivate static final long serialVersionUID = <put a long value here>L;\n\n/** Initialize the settings of the Swagger view of the API.\n */\n@Override\npublic void init(final ServletConfig config) throws ServletException {\n    super.init(config);\n\n    // This makes Swagger honor JAXB annotations. Well,\n    // not _all_ of them. It seems it doesn't respect\n    // @XmlEnumValue.\n    ObjectMapper mapper = Json.mapper();\n    mapper.registerModule(new JaxbAnnotationModule());\n\n    // Create a customized ModelResolver that uses the\n    // JaxbAnnotationModule to get values of enumerated types.\n    // Need to create an instance of an anonymous class that\n    // overrides the _addEnumProps() method!\n    final AnnotationIntrospector introspector =\n            new JaxbAnnotationIntrospector(mapper.getTypeFactory());\n    mapper.setAnnotationIntrospector(introspector);\n\n    ModelResolver modelResolver = new ModelResolver(mapper) {\n        @Override\n        protected void _addEnumProps(final Class<?> propClass,\n                final Property property) {\n            final boolean useIndex = _mapper.isEnabled(\n                    SerializationFeature.WRITE_ENUMS_USING_INDEX);\n            final boolean useToString = _mapper.isEnabled(\n                    SerializationFeature.WRITE_ENUMS_USING_TO_STRING);\n\n            @SuppressWarnings(\"unchecked\")\n            Class<Enum<?>> enumClass = (Class<Enum<?>>) propClass;\n            for (Enum<?> en : enumClass.getEnumConstants()) {\n                String n;\n                if (useIndex) {\n                    n = String.valueOf(en.ordinal());\n                } else if (useToString) {\n                    n = en.toString();\n                } else {\n                    // This is the original code, which gets the \"first\"\n                    // introspector, which is Swagger's, not ours.\n\n//                        n = _intr.findEnumValue(en);\n                        // Instead, use the introspector we created above.\n                        n = introspector.findEnumValue(en);\n                    }\n                    if (property instanceof StringProperty) {\n                        StringProperty sp = (StringProperty) property;\n                        sp._enum(n);\n                    }\n                }\n            }\n        };\n    // Have Swagger use our custom ModelConverter when generating\n    // swagger.json.\n    ModelConverters.getInstance().addConverter(modelResolver);\n\n    // Now define the top-level Swagger properties.\n    BeanConfig beanConfig = new BeanConfig();\n    beanConfig.setTitle(\"Vocabulary Registry API\");\n    beanConfig.setVersion(\"0.1.0\");\n\n    <set the reset of the beanConfig properties here>\n\n    // Without scan=true, the top-level properties set in the previous\n    // lines don't make their way into the generated swagger.json!\n    beanConfig.setScan(true);\n}\n\n}\n```\nThen use it in your web.xml:\n<!-- Swagger API. -->\n  <servlet>\n    <servlet-name>Jersey2Config</servlet-name>\n    <servlet-class><put your package here>.SwaggerBootstrapper</servlet-class>\n    <load-on-startup>2</load-on-startup>\n  </servlet>\n. 1. I'm using Jackson 2.4.4, so didn't have that problem.\n\nI don't see any instance of \"stringEnum\". This seems to be the same as: https://github.com/springfox/springfox/issues/1533\nDoes indeed seem to be a swagger-ui thing. Try updating to the latest swagger-ui? I think that problem may go away.\n. The swagger-ui issue was also reported directly here: https://github.com/swagger-api/swagger-ui/issues/2656\n\nDespite that issue being for swagger-ui 2.2.10, I am using 2.2.10 and not observing that problem.\n. Well, the original issue remains in the swagger-core code: it should use the values of the @XmlEnumValue() annotations when generating swagger.json. It may be that one has to do some configuration beforehand, e.g., what I do in the above init() method up to and including the line\nmapper.setAnnotationIntrospector(introspector);\nbut, I believe, you shouldn't have to create a subclass of ModelResolver to get it to work.\nWhat I've done is to provide a workaround that gives (me) what I believe should be the correct behaviour.\n. I've been adding authentication to my API, and came across an issue with my SwaggerBootstrapper class given above, namely, the enums that are inside swagger-core aren't serialized correctly.\nThe enums inside swagger-core (e.g., io.swagger.models.auth.In) are specified using Jackson annotations, and my original SwaggerBootstrapper doesn't respect those Jackson annotations.\nSo you get in\": \"HEADER\" instead ofin\": \"header\" in your swagger.json.\nPlease use this version instead:\n```\npackage ;\nimport javax.servlet.ServletConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport com.fasterxml.jackson.databind.AnnotationIntrospector;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.SerializationFeature;\nimport com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector;\nimport com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector;\nimport com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule;\nimport io.swagger.converter.ModelConverters;\nimport io.swagger.jackson.ModelResolver;\nimport io.swagger.jaxrs.config.BeanConfig;\nimport io.swagger.models.properties.Property;\nimport io.swagger.models.properties.StringProperty;\nimport io.swagger.util.Json;\n/* Class to bootstrap the configuration of the Swagger view of the API.\n /\npublic class SwaggerBootstrapper extends HttpServlet {\n/** Generated UID for serialization. */\nprivate static final long serialVersionUID = <put a long value here>L;\n\n/** Initialize the settings of the Swagger view of the API.\n */\n@Override\npublic void init(final ServletConfig config) throws ServletException {\n    super.init(config);\n\n    // This makes Swagger honor JAXB annotations. Well,\n    // not _all_ of them. It seems it doesn't respect\n    // @XmlEnumValue.\n    ObjectMapper mapper = Json.mapper();\n    mapper.registerModule(new JaxbAnnotationModule());\n\n    // The problem is the constructor of Swagger's AbstractModelConverter\n    // class, which \"overrides\" our introspector with Swagger's own.\n    // At least, the \"override\" comes into play at a point we don't\n    // want it to, i.e., when values of enums are extracted.\n\n    // So, create a customized ModelResolver that uses the\n    // JaxbAnnotationModule to get values of enumerated types.\n    // Need to create an instance of an anonymous class that\n    // overrides the _addEnumProps() method!\n    // (Could also be done as a separate subclass, of course.)\n    final AnnotationIntrospector jaxbIntrospector =\n            new JaxbAnnotationIntrospector(mapper.getTypeFactory());\n    // Also need Jackson's introspector, as it is used for\n    // swagger-core's own enums (e.g., io.swagger.models.auth.In).\n    final AnnotationIntrospector jacksonIntrospector =\n            new JacksonAnnotationIntrospector();\n    mapper.setAnnotationIntrospector(\n            AnnotationIntrospector.pair(jacksonIntrospector,\n                    jaxbIntrospector));\n\n    ModelResolver modelResolver = new ModelResolver(mapper) {\n        @Override\n        protected void _addEnumProps(final Class<?> propClass,\n                final Property property) {\n            final boolean useIndex = _mapper.isEnabled(\n                    SerializationFeature.WRITE_ENUMS_USING_INDEX);\n            final boolean useToString = _mapper.isEnabled(\n                    SerializationFeature.WRITE_ENUMS_USING_TO_STRING);\n\n            @SuppressWarnings(\"unchecked\")\n            Class<Enum<?>> enumClass = (Class<Enum<?>>) propClass;\n            for (Enum<?> en : enumClass.getEnumConstants()) {\n                String n;\n                if (useIndex) {\n                    n = String.valueOf(en.ordinal());\n                } else if (useToString) {\n                    n = en.toString();\n                } else {\n                    // This is the original code, which gets the \"first\"\n                    // introspector, which is Swagger's, not ours.\n\n//                        n = _intr.findEnumValue(en);\n                        // Instead, use the introspector we created above.\n                        n = jaxbIntrospector.findEnumValue(en);\n                    }\n                    if (property instanceof StringProperty) {\n                        StringProperty sp = (StringProperty) property;\n                        sp._enum(n);\n                    }\n                }\n            }\n        };\n    // Have Swagger use our custom ModelConverter when generating\n    // swagger.json.\n    ModelConverters.getInstance().addConverter(modelResolver);\n\n    // Now define the top-level Swagger properties.\n    BeanConfig beanConfig = new BeanConfig();\n    beanConfig.setTitle(\"Vocabulary Registry API\");\n    beanConfig.setVersion(\"0.1.0\");\n\n    <set the reset of the beanConfig properties here>\n\n    // Without scan=true, the top-level properties set in the previous\n    // lines don't make their way into the generated swagger.json!\n    beanConfig.setScan(true);\n}\n\n}\n```\n. ",
    "phirzel": "I also get an Exception if use springfox-swagger2 v2.8.0 (with 2.7.0 it is ok!). I assume there is a nasty BUG in 2.8.0:\nCaused by: java.lang.NoSuchMethodError: io.swagger.annotations.ApiParam.collectionFormat()Ljava/lang/String;\n    at springfox.documentation.swagger.readers.parameter.ApiParamParameterBuilder.apply(ApiParamParameterBuilder.java:66)\n    at springfox.documentation.spring.web.plugins.DocumentationPluginsManager.parameter(DocumentationPluginsManager.java:106)\n    at springfox.documentation.spring.web.readers.operation.OperationParameterReader.readParameters(OperationParameterReader.java:103)\n    at springfox.documentation.spring.web.readers.operation.OperationParameterReader.apply(OperationParameterReader.java:75)\n    at springfox.documentation.spring.web.plugins.DocumentationPluginsManager.operation(DocumentationPluginsManager.java:120)\n    at springfox.documentation.spring.web.readers.operation.ApiOperationReader.read(ApiOperationReader.java:73)\n    at springfox.documentation.spring.web.scanners.CachingOperationReader$1.load(CachingOperationReader.java:50)\n    at springfox.documentation.spring.web.scanners.CachingOperationReader$1.load(CachingOperationReader.java:48)\n    at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3708)\n    at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2416)\n    at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2299)\n    at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2212). I also get an Exception if use springfox-swagger2 v2.8.0 (with 2.7.0 it is ok!). I assume there is a nasty BUG in 2.8.0:\nCaused by: java.lang.NoSuchMethodError: io.swagger.annotations.ApiParam.collectionFormat()Ljava/lang/String;\n    at springfox.documentation.swagger.readers.parameter.ApiParamParameterBuilder.apply(ApiParamParameterBuilder.java:66)\n    at springfox.documentation.spring.web.plugins.DocumentationPluginsManager.parameter(DocumentationPluginsManager.java:106)\n    at springfox.documentation.spring.web.readers.operation.OperationParameterReader.readParameters(OperationParameterReader.java:103)\n    at springfox.documentation.spring.web.readers.operation.OperationParameterReader.apply(OperationParameterReader.java:75)\n    at springfox.documentation.spring.web.plugins.DocumentationPluginsManager.operation(DocumentationPluginsManager.java:120)\n    at springfox.documentation.spring.web.readers.operation.ApiOperationReader.read(ApiOperationReader.java:73)\n    at springfox.documentation.spring.web.scanners.CachingOperationReader$1.load(CachingOperationReader.java:50)\n    at springfox.documentation.spring.web.scanners.CachingOperationReader$1.load(CachingOperationReader.java:48)\n    at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3708)\n    at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2416)\n    at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2299)\n    at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2212). ",
    "kirankonerukewill": "Any solution for this, even I am facing the same problem.. ",
    "xmeng1": "@andi-livn Are you use the Guice with the servlet? if I use the Guice like the official demo https://github.com/swagger-api/swagger-samples/blob/master/java/java-jersey2-guice/src/main/webapp/WEB-INF/web.xml , how to config it?. according to my test, which servlet module is configured firstly, the corresponding beanConfig will be enabled.. ",
    "arcuri82": "done at https://github.com/swagger-api/swagger-parser/issues/390. to clarify: I did report this issue here as PropertyDeserializer is part of swagger-core. ",
    "catspirit": "@pjfanning has found the solution. @ApiOperation(code=201) \nThis behavior is defined in ApiOperation instead of ApiResponse. \nHere's the correct configuration that would fix the problem.\nscala\n  @ApiOperation(\n    value = \"Create new user record\",\n    notes = \"\",\n    code = 201,\n    httpMethod = \"POST\",\n    consumes = \"application/json\",\n    produces = \"application/json\"\n  )\nThanks a lot and have a nice evening!. ",
    "emobtech": "I'm facing the same issue here. Based on the highlighted code snippet, the solution for that seems very easy. :-/. ",
    "grantyb": "@xonox I had the same issue as you when upgrading from 1.5.3 to 1.5.15. The solution for me was to simply remove the @BeanParam annotation. \nWith this annotation:\npublic FilmContributionsResponse contributions(@ApiParam(value = \"The LID of the contributor.\") @PathParam(\"id\") String id, @BeanParam FilmContributionsRequest req) throws APIException {\u2026\nThe swagger.json produces this for parameters:\n\"parameters\": [\n  {\n    \"name\": \"id\",\n    \"in\": \"path\",\n    \"description\": \"The LID of the contributor.\",\n    \"required\": true,\n    \"type\": \"string\"\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"string\"\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"integer\",\n    \"format\": \"int32\"\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"string\",\n    \"default\": \"FilmPopularity\",\n    \"enum\": [\n      \"FilmName\",\n      \"ReleaseDateLatestFirst\",\n      \"ReleaseDateEarliestFirst\",\n      \"AuthenticatedMemberRatingHighToLow\",\n      \"AuthenticatedMemberRatingLowToHigh\",\n      \"MemberRatingHighToLow\",\n      \"MemberRatingLowToHigh\",\n      \"AverageRatingHighToLow\",\n      \"AverageRatingLowToHigh\",\n      \"RatingHighToLow\",\n      \"RatingLowToHigh\",\n      \"FilmDurationShortestFirst\",\n      \"FilmDurationLongestFirst\",\n      \"FilmPopularity\",\n      \"FilmPopularityThisWeek\",\n      \"FilmPopularityThisMonth\",\n      \"FilmPopularityThisYear\"\n    ]\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"string\",\n    \"enum\": [\n      \"Director\",\n      \"Actor\",\n      \"Producer\",\n      \"Writer\",\n      \"Editor\",\n      \"Cinematography\",\n      \"ArtDirection\",\n      \"VisualEffects\",\n      \"Composer\",\n      \"Sound\",\n      \"Costumes\",\n      \"MakeUp\",\n      \"Studio\"\n    ]\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"string\"\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"integer\",\n    \"format\": \"int32\"\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"integer\",\n    \"format\": \"int32\"\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"string\"\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"object\"\n    },\n    \"collectionFormat\": \"multi\"\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"string\"\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"string\",\n    \"default\": \"Watched\",\n    \"enum\": [\n      \"Ignore\",\n      \"Watched\",\n      \"NotWatched\",\n      \"Liked\",\n      \"NotLiked\",\n      \"InWatchlist\",\n      \"NotInWatchlist\",\n      \"Favorited\"\n    ]\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"string\",\n    \"default\": \"None\",\n    \"enum\": [\n      \"None\",\n      \"All\",\n      \"Only\"\n    ]\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"string\"\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"string\"\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"string\"\n  },\n  {\n    \"name\": \"req\",\n    \"in\": \"query\",\n    \"description\": \"body\",\n    \"required\": true,\n    \"type\": \"string\",\n    \"default\": \"None\",\n    \"enum\": [\n      \"None\",\n      \"All\",\n      \"Only\"\n    ]\n  }\n],\nBut with this annotation (simply remove the @BeanParam annotation):\npublic FilmContributionsResponse contributions(@ApiParam(value = \"The LID of the contributor.\") @PathParam(\"id\") String id, FilmContributionsRequest req) throws APIException {\u2026\nThe swagger.json produces this for parameters:\n\"parameters\": [\n  {\n    \"name\": \"id\",\n    \"in\": \"path\",\n    \"description\": \"The LID of the contributor.\",\n    \"required\": true,\n    \"type\": \"string\"\n  },\n  {\n    \"in\": \"body\",\n    \"name\": \"body\",\n    \"required\": false,\n    \"schema\": {\n      \"$ref\": \"#/definitions/FilmContributionsRequest\"\n    }\n  }\n],\nThis is the expected result, and is what was output before upgrading to 1.5.15 (specifically, this change occurred in 1.5.10)\nHope that helps!. ",
    "sirnewton01": "I am running into the same problem with Jersey 2 and Jackson in WebLogic container. One work around I have found is to annotate the getters in your BeanParam class with the QueryParam instead of the fields. I discovered this after debugging and found that in the swagger reader Jackson is not returning annotated fields even though the annotations are present. Instead, it is able to find them on the getters.\nThe relevant code from the swagger side is here, but I'm not sure if this is in fact a Jackson bug.\nhttps://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs2/src/main/java/io/swagger/v3/jaxrs2/DefaultParameterExtension.java. ",
    "x20mar": "I've noticed this too. I guess something changed between 1.5.12 and 1.5.13 to cause this to break.. ",
    "Gingol": "Hi @marcelalburg,\ndid you find a way to set the Path value for a non-annotated method, without including jax-rs?\nThanks\n--\nMauro. ",
    "ustaDAH": "Same issue happening for me. Maybe SwaggerContextService.USE_PATH_BASED_CONFIG needs to be used.. ",
    "ATBO": "Same issue here. i already tried setting usePathBasedConfig. But there wasn't any noticeable change.\nThe Problem occurs not only on nested root-contexts. same error comes along when removing same root context. e.G. \"/v1\" and \"/v2\" without the \"/api\".\nare there any other tipps?\nEDIT:\nMy fault. The Solution is like @ustaDAH said... make sure you set following properties using annotations, web.xml or any other mechanism. \n\nswagger.scanner.id\nswagger.config.id\nswagger.use.path.based.config\n\nIn my case the web.xml was the solution due the lack of a newer Version of jboss-jaxrs-api which supports annotations. I think this is also the reason why BeanConfig in Application never worked out for me.\nI'm now pretty sure, that you @puneet-warikoo might have a problem with your dependencies and/or servlet and servlet config setup. I would recommend downloading the sources and start debugging BaseApiListingResource to check which Config is beeing loaded.\nSome further information..\nExample of web.xml for one instance\n<servlet>\n    <servlet-name>inumbers-application</servlet-name>\n    <servlet-class>de.[..].YourApplicationOrServletClass</servlet-class>\n    <init-param>\n        <param-name>swagger.scanner.id</param-name>\n        <param-value>inumbers</param-value>\n    </init-param>\n    <init-param>\n        <param-name>swagger.config.id</param-name>\n        <param-value>inumbers</param-value>\n    </init-param>\n    <init-param>\n        <param-name>swagger.use.path.based.config</param-name>\n        <param-value>true</param-value>\n    </init-param>\n    <load-on-startup>1</load-on-startup>\n</servlet>\n<servlet-mapping>\n    <servlet-name>inumbers-application</servlet-name>\n    <url-pattern>/*</url-pattern>\n</servlet-mapping>\nThe Reason for all of this can be found in io.swagger.jaxrs.listing.BaseApiListingResource. Swagger \"Caches\" the Data in an ConcurrentHashMap which is accessed in following ways.\nif (SwaggerContextService.isScannerIdInitParamDefined(sc)) {\n    if (!initializedScanner.containsKey(sc.getServletName() + \"_\" + SwaggerContextService.getScannerIdFromInitParam(sc))) {\n        swagger = scan(app, servletContext, sc, uriInfo);\n    }\n} else {\n    if (SwaggerContextService.isConfigIdInitParamDefined(sc)) {\n        if (!initializedConfig.containsKey(sc.getServletName() + \"_\" + SwaggerContextService.getConfigIdFromInitParam(sc))) {\n            swagger = scan(app, servletContext, sc, uriInfo);\n        }\n    } else if (SwaggerContextService.isUsePathBasedConfigInitParamDefined(sc)) {\n        if (!initializedConfig.containsKey(sc.getServletName() + \"_\" + ctxService.getBasePath())) {\n            swagger = scan(app, servletContext, sc, uriInfo);\n        }\n    } else if (!initialized) {\n        swagger = scan(app, servletContext, sc, uriInfo);\n    }\n}\nfull source\n. ",
    "petercatalin": "@ATBO Thanks a lot for the tip on debugging BaseApiListingResource. By doing that I got to see that I had some dependencies problems. My code accessed the 1.5.0 version that didn't had scanner.id, config.id etc. \nI was driving me mad, thanks!!! :). ",
    "achirita": "@webron Strictly from technical point of view, I think you can. \nIf you add vendor extensions to the RefProperty object in PropertyDeserializer.propertyFromNode(...), line 214, they are propagated to the swagger-codegen module and from there to the templates.\nAlthough this seems to work from a technical point of view, I'm not sure if it's in line with the philosophy behind the JSON Reference standard.\nI will contribute a pull request tomorrow morning when I get back to my office.. Thanks @fehguy! \nI was afraid that was the reason behind it, since it was already mentioned in a couple of other issues.\nUnder these conditions, the pull request will never be accepted, right?\nThe problem is that our main use case revolves around us being able to add custom vendor extensions to all the fields of an object, including those that reference other objects.\nSince this is a limitation imposed by the JSON Reference standard, I guess there's no way for us to achieve our goal. \nProbably our last resort would be to have all object declarations inline, but this comes with it's own set of issues (the Spring MVC generator doesn't work properly in that case and the resulting specification file is hard to maintain).\nCan you see any other workarounds for this?\n. ",
    "nickreevesuk": "As all the issues above mention there are genuine use cases when you need to attach vendor extensions to the original reference, rather than the referenced one. My particular one relates to versioning. I want to express meta data regarding at which version a parent object definition gained a property whose value is a child object definition. This genuinely a concern of the parent only and should not pollute the child definition. Also with multiple parent objects referring to the same child it is not appropriate to push all of these down into the child definition.\nThe fundamental problem is the modelling decision of Swagger to model these as JSON References because JSON References do not have any identity beyond the thing they refer to. They are simply a shorthand for textual inclusion.\nAs this shows the root of the problem is the Swagger modelling decision to model these as JSON references. My proposal would be to also allow a different JSON syntactic construct to represent references in cases that have this need. That would allow those with these needs to stay within the Swagger community rather than being forced to move to other tools or fork.\nOnly the parsing phase of the tool chain would change, downstream data representations could use a common object to represent both kinds of references.\nThe JSON Reference standard is also in draft status and has never been approved.. As all the issues above mention there are genuine use cases when you need to attach vendor extensions to the original reference, rather than the referenced one. My particular one relates to versioning. I want to express meta data regarding at which version a parent object definition gained a property whose value is a child object definition. This genuinely a concern of the parent only and should not pollute the child definition. Also with multiple parent objects referring to the same child it is not appropriate to push all of these down into the child definition.\nThe fundamental problem is the modelling decision of Swagger to model these as JSON References because JSON References do not have any identity beyond the thing they refer to. They are simply a shorthand for textual inclusion.\nAs this shows the root of the problem is the Swagger modelling decision to model these as JSON references. My proposal would be to also allow a different JSON syntactic construct to represent references in cases that have this need. That would allow those with these needs to stay within the Swagger community rather than being forced to move to other tools or fork.\nOnly the parsing phase of the tool chain would change, downstream data representations could use a common object to represent both kinds of references.\nThe JSON Reference standard is also in draft status and has never been approved.. ",
    "shmerskawven07": "I am sorry, I have read the ticket but it does not respond to my question...\nlet me simplify my question again : \nI have this xsd : \n    \n\n\n\n\n\n\nwhen I generate the java classe the result is this : \n@XmlRootElement(name = \"createItem\")\npublic class CreateItem {\n@XmlElement(required = true)\n@NotNull\nprotected String name;\n}\nBut actually I need to generate this : \n@XmlRootElement(name = \"createItem\")\n@ApiModel(value = \"CreateItem\", description = \"description goes here\")\npublic class CreateItem {\n@XmlElement(required = true)\n@NotNull\n@ApiModelProperty(value = \"name\", required = true)\nprotected String name;\n}\nHow?\nNB :  I used jhipster to generate my (spring boot) project. and \"swagger2markup-maven-plugin\" to generate the swagger doc\nThanks \n. This is more like a question than an ticket :) as I don't find much doc on the net but ok I will. Thanks anyway. ",
    "tamilmanam1": "I am also generating the model using jaxb2-maven-plugin for spring boot application. The swagger documentation generated for the model class has the below. I would like add a description and remove the bold text. Any help will be appreciated.\ndecision     string\n                   xml: OrderedMap { \"name\": \"decision\", \"attribute\": false, \"wrapped\": false }\n                    xml:\n                    name: decision\n                    attribute: false\n                   wrapped: false\n. ",
    "mhaefele": "Looks like the name is coming out of TypeNameResolver, which uses .getSimpleName().\nNot sure how to make it use a different TypeNameResolver.\nI can probably also use @ApiModel to override the generated names.\nMy biggest worry is that it's failing silently when there are name conflicts, so it's really easy for a dev to not realize they have to provide a unique name.\nI'm assuming you'd have the same issue if you had classes with the same name in two different packages.. ",
    "PavelJ": "I have just encountered this behaviour and was really suprised because I would assume that this would be a serious issue. For example I have one User model and have multiple request and response classes for multiple operations with User - each containing only a subset of User's attributes. \nFor example I have class CreateUserRequest (in one package) annotated with @JsonRootName(value = \"user\") and another class UpdateUsersStateRequest (may be even in the same package) again with annotation @JsonRootName(value = \"user\"). Swagger definition has only one of those definitions and ignoring others so basically most of the generated examples which I see in swagger UI are wrong.\nI would assume that swagger would have different definition for each REST method, am I missing something? It is extremely important to be able to define same object with different attributes in different API methods.\n. ",
    "seanmmills": "I have a problem where two DTOs have the same name, but different package names.  As @mhaefele noted above, the TypeNameResolver uses Class.getSimpleName(), which makes resolution ambiguous and sometimes nondeterministic between swagger-core versions.  Using the @ApiModel has been our solution thus far, however it seems that simply changing the TypeNameResolver to use Class.getName() will solve both problems.\nWith this change, assuming the CustomerDTO above is in the test package, the definition names would resolve to:\ntest.CustomerDTO$In\ntest.CustomerDTO$Out\nI've tested this change locally: \n```\nsmills@smills-mac:~/Development/src/swagger-core (master *)$ git diff\ndiff --git a/modules/swagger-core/src/main/java/io/swagger/jackson/TypeNameResolver.java b/modules/swagger-core/src/main/java/io/swagger/jackson/TypeNameResolver.java\nindex c1dfdd2f..adafffef 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/jackson/TypeNameResolver.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/jackson/TypeNameResolver.java\n@@ -41,11 +41,11 @@ public class TypeNameResolver {\n protected String nameForClass(Class<?> cls, Set<Options> options) {\n     if (options.contains(Options.SKIP_API_MODEL)) {\n\n\nreturn cls.getSimpleName();\nreturn cls.getName();\n         }\n         final ApiModel model = cls.getAnnotation(ApiModel.class);\n         final String modelName = model == null ? null : StringUtils.trimToNull(model.value());\nreturn modelName == null ? cls.getSimpleName() : modelName;\n\nreturn modelName == null ? cls.getName() : modelName;\n     }\nprotected String nameForGenericType(JavaType type, Set options) {\nsmills@smills-mac:~/Development/src/swagger-core (master *)$ \n```\nThis change seems to work in my functional application testing, however I had to build with skipTests=true because this change breaks several unit tests.  An official PR would need to resolve the tests as well.  I can submit a PR if this is an approved change.\n\n\nNote:  This does not solve the @JsonRootName issue noted by @PavelJ.. @arzath, @io.swagger.annotations.ApiModel only supports TYPE targets so you won't be able to use it.. ",
    "masc3d": "confirming this issue. using simpleName in this context looks defective to me. @ApiModel can be applied as a workaround.. ",
    "arzath": "Can you provide example on @ApiModel workaround?\nMy current issue is the model comes from imported jar library, hence I cannot apply @ApiModel on the class name that needs to be changed.. Thanks @seanmmills, do you know if any fix is on its way/projected in the future?. ",
    "p4ali": "One thing need to mention is: based on the snakeyaml - the max length of a key of a map better not be longer than 128, otherwise snakeyaml will generate a VALID yaml with complex mapping key which cannot be recognized by swagger editor.\n. There is one limitation based on the snakeyaml - the key length of a map cannot be longer than 128, so in the definitions map, if a schema name longer than 128, it will generate an yaml with complexed mapping key (http://www.yaml.org/spec/1.2/spec.html#id2760695) which is not recognized by swagger. \nHowever, after discuss with the Andrey Somov - the snakeyaml maintainer, the generated yaml is actually valid (https://bitbucket.org/asomov/snakeyaml/issues/399/is-there-any-reason-why-checksimplekey-has). So this means Swagger editor has a more strict syntax requirement than a valid yaml.\n. ",
    "pgodzin": "The list of values should be generated in the swagger.json in the \"enum\" field. If MyEnum is defined with those allowable values, you don't need to add them in the annotation at all. It comes in handy if field was a String, and you wanted it to have discrete values.. The list of values should be generated in the swagger.json in the \"enum\" field. If MyEnum is defined with those allowable values, you don't need to add them in the annotation at all. It comes in handy if field was a String, and you wanted it to have discrete values.. ",
    "yinonavraham": "There is no issue or test to write - the code is correct. \nThis is a simple slight performance improvement - there is no need to continue checking acceptable packages if we already know it is acceptable (since we found at least one matching).. ",
    "KeldOelykke": "Sure, i'll try to make 1 in the weekend.. According to test shouldDeepScanPakagesPer1011() in https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-jaxrs/src/test/java/io/swagger/BeanConfigTest.java all classes within the list of packages should be allowed.\nI guess I will just stick with the startsWith check, but ensure it is viable packages that are tested against each others.. Btw. after this fix here is how I ended up getting the 3 different servlets presented correctly with 3 different swagger.json. From searching the web I am not the only one unable to get multiple servlets to work with swagger in an embedded jetty :)\nIn jetty setup:\n```\n...\n        ArrayList tempHandlerList = new ArrayList();\n    boolean enableFeBe = true;\n    if(enableFeBe)\n    {\n        FeBeResourceV1 rc = new FeBeResourceV1();\n        ServletContainer servletContainer = new ServletContainer(rc);\n        ServletHolder holder = new ServletHolder(servletContainer);\n        holder.setInitParameter(\"swagger.scanner.id\", \"febe\"); // <-- This is the glue trick\n        ServletContextHandler servletContext = new ServletContextHandler(ServletContextHandler.SESSIONS);\n        servletContext.setContextPath(\"/rest/febe/v1\");\n        servletContext.addServlet(holder,\"/*\");\n        tempHandlerList.add(servletContext);\n    }\n\n    boolean enableFe = true;\n    if(enableFe)\n    {\n        FeResourceV1 rc = new FeResourceV1();\n        ServletHolder holder = new ServletHolder(new ServletContainer(rc));\n        holder.setInitParameter(\"swagger.scanner.id\", \"fe\"); // <-- This is the glue trick\n        ServletContextHandler servletContext = new ServletContextHandler(ServletContextHandler.SESSIONS);\n        servletContext.setContextPath(\"/fe/v1\");\n        servletContext.addServlet(holder,\"/*\");\n        tempHandlerList.add(servletContext);\n    }\n\n    boolean enableDataDefs = true;\n    if(enableDataDefs)\n    {\n        DataDefsResourceV1 rc = new DataDefsResourceV1();\n        ServletHolder holder = new ServletHolder(new ServletContainer(rc));\n        holder.setInitParameter(\"swagger.scanner.id\", \"datadefs\"); // <-- This is the glue trick\n        ServletContextHandler servletContext = new ServletContextHandler(ServletContextHandler.SESSIONS);\n        servletContext.setContextPath(\"/datadefs/v1\");\n        servletContext.addServlet(holder,\"/*\");\n        tempHandlerList.add(servletContext);\n    }\n\n    boolean enableSwaggerUIContext = true;\n    if(enableSwaggerUIContext)\n    {\n        ResourceHandler rh = new ResourceHandler();\n        rh.setResourceBase(AJettyWebServer.class.getClassLoader()\n            .getResource(\"META-INF/resources/webjars/swagger-ui/2.2.2\")\n            .toURI().toString());\n        ContextHandler context = new ContextHandler();\n        context.setContextPath(\"/docs\");\n        context.setHandler(rh);\n        tempHandlerList.add(context);\n    }\n\n    // Add the ResourceHandler to the server.\n    HandlerList handlers = new HandlerList();\n    Handler[] tempHandlerArray = tempHandlerList.toArray(new Handler[]{});\n    handlers.setHandlers(tempHandlerArray);\n    server.setHandler(handlers);\n\n...\nIn each ResourceConfig:\n...\npublic class FeBeResourceV1 extends ResourceConfig {\npublic FeBeResourceV1() {\n\n    BeanConfig beanConfig = new BeanConfig();\n    beanConfig.setScannerId(\"febe\"); // <-- This is the glue trick\n    beanConfig.setVersion(\"1.0.0\");\n    beanConfig.setSchemes(new String[]{\"http\"});\n\n    String apiLocation = Globals.ConfigValue(\"FeBe.Api.Location\", \"http://localhost:8082/rest/febe/v1\");\n    int indexOfDoubleSlash = apiLocation.indexOf(\"//\");\n    int indexOfRelativeUrlStart = apiLocation.indexOf(\"/\", indexOfDoubleSlash+2);\n    if(indexOfDoubleSlash < 0 || indexOfRelativeUrlStart < indexOfDoubleSlash)\n    {\n        throw new RuntimeException(\"Can't parse config key 'FeBe.Api.Location' with value '\" + apiLocation + \"'\");\n    }\n    String host = apiLocation.substring(indexOfDoubleSlash + 2, indexOfRelativeUrlStart);\n    String relativeUrl = apiLocation.substring(indexOfRelativeUrlStart); \n    beanConfig.setHost(host);\n    beanConfig.setBasePath(relativeUrl);\n    beanConfig.setResourcePackage(FeBeRestV1.class.getPackage().getName());\n    beanConfig.setPrettyPrint(true);\n    beanConfig.setScan(true);\n\n    this.packages(FeBeRestV1.class.getPackage().getName() + \";\" \n            + GsonProvider.class.getPackage().getName() + \";\"\n\n//              + JacksonFeature.class.getPackage().getName() + \";\"\n                + JaxbAutoDiscoverable.class.getPackage().getName() + \";\"\n                + io.swagger.jaxrs.listing.ApiListingResource.class.getPackage().getName());\n}\n\n}\n...\n```\n. The actual swagger instance still accumulates apis, if config is not set, so config ALSO needs to be set:\nIn jetty setup:\n...\n            holder.setInitParameter(\"swagger.scanner.id\", \"febe\");\n            holder.setInitParameter(\"swagger.config.id\", \"febe\");\n...\nIn each ResourceConfig:\n...\n        beanConfig.setConfigId(\"febe\");\n        beanConfig.setScannerId(\"febe\");\n...\nI have no idea if this is the intended use of these ids... I guess they are meant to be set from within a web.config file. The big question now is whether I will end up setting ContextId too :)\n. Maybe. The issue is #2127. How do I \"add\" the issue... except from linking to it as above?\nYes. I can make a test case that will break without the fix.. ",
    "sprba": "Hi @webron ,I tried using the latest version as you suggested.Its still throwing the same error.Please let me know if there is any other way to get rid of it.\nThanks,\nSushma. ",
    "ivoleitao": "Hi @webron  I'm also having this issue in the latest version of swagger. The log if full of this exceptions :-S. Hi @webron  I'm also having this issue in the latest version of swagger. The log if full of this exceptions :-S. ",
    "sdoeringNew": "Is this an error in your example?\nIf you use\nconverters.add(0 /* list index */, converter)\n\nit is always inserted on the head because you specified the index 0.\nDoes it work, if you simply use:\nconverters.add(converter)\n\n. Is this an error in your example?\nIf you use\nconverters.add(0 /* list index */, converter)\n\nit is always inserted on the head because you specified the index 0.\nDoes it work, if you simply use:\nconverters.add(converter)\n\n. Seems to be fixed in v1.5.20. Isn't it?. Seems to be fixed in v1.5.20. Isn't it?. ",
    "devshorts": "@sdoeringNew my example is showing code in swagger-core. I don't have access to the converters object otherwise I would have done so. That's kind of the whole root cause of the issue :). ",
    "StoneCat": "Yes it is true, the name and position variable in @ApiModelProperty have no effects.\nI noticed it when I worked with my own classes.\nInterestingly, for own classes, the JSON key name is oriented to the name of the Get method. \n(dirty fix for this problem -> if you want in an other class an other JSON Key name, you have to work with extends and a new (sub)class)\n```\n@ApiModelProperty(required = true, name = \"this_value_does_not_work\") //position too\nprivate GrafanaQueryRangeRaw raw = new GrafanaQueryRangeRaw();\npublic GrafanaQueryRangeRaw getRaw() {\n    return this.raw;\n}\n```\nJSON as Model Input (POST);\n\"raw\": {\n      \"from\": \"now-6h\",\n      \"to\": \"now\"\n    }\nVS \n```\n@ApiModelProperty(required = true, name = \"this_value_does_not_work\") //position too\nprivate GrafanaQueryRangeRaw raw = new GrafanaQueryRangeRaw();\npublic GrafanaQueryRangeRaw getGrafanaQueryRangeRaw() {\n    return this.raw;\n}\n```\nJSON as Model Input (POST);\n\"grafanaQueryRangeRaw\": {\n      \"from\": \"now-6h\",\n      \"to\": \"now\"\n    }\nGrafanaQueryRangeRaw.java:\n```\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\n@ApiModel(description = \"raw\",\n        value = \"raw.\")\npublic class GrafanaQueryRangeRaw {\n@ApiModelProperty(value = \"now-6h\", required = true, example = \"now-6h\")\nprivate String from;\n\n@ApiModelProperty(value = \"now\", required = true, example = \"now\")\nprivate String to;\n\npublic String getFrom() {\n    return this.from;\n}\n\npublic String getTo() {\n    return this.to;\n}\n\npublic void setFrom(String s) {\n    this.from = s;\n}\n\npublic void setTo(String s) {\n    this.to = s;\n}\n\n}\n```\n. ",
    "jasonHzq": "@dpr-rec but it's not working for me.. ",
    "Nileshsachin10": "On trying to use the @ApiAnnotation or anything related to @api annotation , i am being asked to create it . how do i do that could you help me with that ?. ",
    "mkistler": "Just found swagger-api/swagger-core#1977 which is more or less a dup of this.\nUnfortunately, the fix (in swagger-api/swagger-parser#307) appears to only work for properties, and not paths, parameters, definitions, or responses.  . I wrote the bug against this project because It is theGenericRef class in this project that is broken, and this can be seen by adding tests for the cases I described to the GenericRefsTests.  E.g., \n```\n    @Test(description = \"it should correctly identify relative refs\")\n    public void identifyRelativeRefs() {\n        assertRefFormat(new GenericRef(RefType.DEFINITION, \"./path/to/model.json\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.DEFINITION, \"./path/to/model.json#/thing\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.DEFINITION, \"../path/to/model.json\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.DEFINITION, \"../path/to/model.json#/thing\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.DEFINITION, \"path/to/model.json\"), RefFormat.RELATIVE);   // fails\n        assertRefFormat(new GenericRef(RefType.DEFINITION, \"path/to/model.json#/thing\"), RefFormat.RELATIVE); // fails\n        assertRefFormat(new GenericRef(RefType.PARAMETER, \"./path/to/model.json\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.PARAMETER, \"./path/to/model.json#/thing\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.PARAMETER, \"../path/to/model.json\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.PARAMETER, \"../path/to/model.json#/thing\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.PARAMETER, \"path/to/model.json\"), RefFormat.RELATIVE);  // fails\n        assertRefFormat(new GenericRef(RefType.PARAMETER, \"path/to/model.json#/thing\"), RefFormat.RELATIVE);  // fails\n        assertRefFormat(new GenericRef(RefType.RESPONSE, \"./path/to/model.json\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.RESPONSE, \"./path/to/model.json#/thing\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.RESPONSE, \"../path/to/model.json\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.RESPONSE, \"../path/to/model.json#/thing\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.RESPONSE, \"path/to/model.json\"), RefFormat.RELATIVE);  // fails\n        assertRefFormat(new GenericRef(RefType.RESPONSE, \"path/to/model.json#/thing\"), RefFormat.RELATIVE);  // fails\n        assertRefFormat(new GenericRef(RefType.PATH, \"./path/to/model.json\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.PATH, \"./path/to/model.json#/thing\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.PATH, \"../path/to/model.json\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.PATH, \"../path/to/model.json#/thing\"), RefFormat.RELATIVE);\n        assertRefFormat(new GenericRef(RefType.PATH, \"path/to/model.json\"), RefFormat.RELATIVE);  // fails\n        assertRefFormat(new GenericRef(RefType.PATH, \"path/to/model.json#/thing\"), RefFormat.RELATIVE);  // fails\n    }\n```\nAnd, yes, I am parsing an existing specification.  So fixing this in the parser as was done for #1977 is sufficient for my purposes ... as long as it is implemented for all the element types.. ",
    "marcelstoer": "\nI'm not sure why this would be in this project [...] please open this on the parser.\n\nIt actually started over in the parser project. For affected users it doesn't matter much where it's fixed - as long as it gets fixed at all.. ",
    "jessemcdowell-AI": "I've experienced this issue as well. Using swagger-jaxrs 1.5.10.\nWe have an abstract class that implements common operations inherited by concrete resources. We sometimes override the methods in a concrete resource to use a different return type or provide an extra comment through an @ApiOperation annotation.\nIt seems that the reader is not correctly determining when a method is being overridden, and evaluating the methods found in some arbitrary order. If it happens to evaluate the abstract class's method first, the documentation comes out fine. If it evaluates the concrete resource first, it gets stomped with the abstract class's method.\nI was able to overcome this by using @ApiOperation(value = \"\", hidden = true) on the abstract class methods, and @ApiOperation(value = \"\") on the concrete resource class methods. It'd prefer to get rid of this code, though.\nHere's a little (freehand) code to show what I'm talking about:\n````\npublic  abstract class BaseResource {\n    @GET\n    @Path(\"/{id}\")\n    public T getById(@PathParam(\"id\") String id) { //... }\n@GET\npublic List<T> getAll() { //... }\n\n}\n@Api\n@Path(\"/item\")\npublic class ItemResource extends BaseResource {\n    @GET\n    @Path(\"/{id}\")\n    @Override\n    public ItemWithChildren getById(@PathParam(\"id\") String id) { //... }\n}\n````\nIn the example above, sometimes /item/{id} would be documented as returning ItemWithChildren, and sometimes it would be documented as returning BaseDto. It was always the same for the same resource, but I'd see a different behavior in different resources that were very similar in implementation.\n. ",
    "gustavoms11": "Oh hey! Thanks for your answer.\nYes, I thought of that too, however I can't hide the abstract method, so I had to just create a phantom path who throws a 501. Not the most beauty of things as you can see.\nI thought that I could overhide the way that swagger read the annotations so I could adjust to make it do just as RestEasy does =(\nThank you.. ",
    "cpage-nexway": "Ok thanks for your answer.\nIs there a way to add them by overriding some stuff ?. Have you got any sample for let say ApiModel ?\nIt will help me to figure out how it isn't pretty :). ",
    "AndreyErokhin": "I faced with the same issue.\nI want to use a io.swagger.jaxrs.Reader to generate a documentation for my API.\nBut if you are not using JAX-RS it's currently not possible. If you don't have a @Path annotation the reader will not be able to parse your class. \njavax.ws.rs.Path methodPath = ReflectionUtils.getAnnotation(method, javax.ws.rs.Path.class);\n String operationPath = getPath(apiPath, methodPath, parentPath);\n Map<String, String> regexMap = new LinkedHashMap<String, String>();\n operationPath = PathUtils.parsePath(operationPath, regexMap);\n **if (operationPath != null) {...do processing...}**\nreturn swagger;\nAt the same time for HTTP Method it can be handled by using the SwaggerExtensions.\nString httpMethod = extractOperationMethod(apiOperation, method, SwaggerExtensions.chain());\n. ",
    "GreGosPhaTos": "I ve exactly the same issue did you find any workarround / way to solve the issue @chenbaga ?. ",
    "rsbCodeZ": "Facing same issue.\nOn contrary, we have @ApiModelProperty(access = readyOnly) which can restrict property to appear only for GET responses but if we have to restrict the properties only for POST & hide for GET do we have any way? . ",
    "daniil-dubin": "For what sake at all was that ModelConverters made a static singleton? Why not to have single ModelConverterContext per Reader object, for example?\nAt the moment we have several JAX-RS applications running in the same container and there is no way to set different ModelConverter-s for different JAX-RS applications since they all share the same ModelConverters.INSTANCE.\nThe only hack is in controlling ModelConverters state and reinitializing it appropriately before the initialization of the particular Swagger instance but it's thread unsafe, obscure and error-prone approach.. ",
    "blueabysm": "@webron \nI'm so sorry for replying you sooooo late. I was drown in the notification flood and didn't notice this one. \ud83d\ude13\nI wrote a yml file and pasted its content into swagger editor to get a nodejs-server back, and deployed it on my own server to serve RESTful API documents.. ",
    "navidsh": "equals(Object) and hashCode() need to be updated once vendor extensions is added.. Since this is fixed in v3 (/io/swagger/models/info/Contact.java), I'll close this issue.. equals(Object) and hashCode() need to be updated once vendor extensions is added.. @fehguy Sounds good. I'll close this one and #2162 that is similar to this issue. Thanks. This PR is invalid.\nNew PR created : #2307. Committed changes to address comments 2 and 4 above + removed the filter interface.. Hi @frantuma - I made some changes to the integration module interfaces based on the descussion in the PR #2307. Can you please review this PR?. Created #2398 to point to 2.0 branch.. Hi @frantuma - I made some changes to the integration module interfaces based on the discussion in the PR #2307. Can you please review this PR?. ",
    "alexwei": "These properties should not be treated as read-only, as you can always instantiate a new instance of the object by passing modified properties to it. Please fix this.\n@rtomsick The workaround doesn't seem to work when the constructor parameters are annotated with @JsonProperty.. ",
    "bill-okara": "thanks Ron, opened in swagger-ui #2907.. ",
    "saguinav": "Same issue here. I agree with @boillodmanuel 's resolution proposal: add the missing attributes in DecimalProperty and BaseIntegerProperty. . ",
    "orientzc": "Thanks. i edit them as your  suggestions, like:\n```java\n//@ApiModel\npublic class BlackNameResult {\n    //X_RESULTCODE\uff1a0 \u8c03\u7528\u8d26\u6d41\u7a0b\u8fd4\u56de\u6210\u529f\uff0c ACT_TAG\uff1a\u503c\u662f1\uff0c\u4ee3\u8868\u9ed1\u540d\u5355\n    //@ApiModelProperty(name = \"TEST1\", value = \"\u8fd4\u56de\u7f16\u7801\", required = true, example = \"00000\")\n    private String xrESULTCODE;\n    //@ApiModelProperty(name = \"TEST2\", value = \"\u8fd4\u56de\u7f16\u7801\", required = true, example = \"11111\")\n    private String ACT_TAG;\n@JSONField(name = \"X_RESULTCODE\")\npublic String getXrESULTCODE() {\n    return xrESULTCODE;\n}\npublic void setXrESULTCODE(String x_RESULTCODE) {\n    xrESULTCODE = x_RESULTCODE;\n}\n@JSONField(name = \"ACT_TAG\")\npublic String getACT_TAG() {\n    return ACT_TAG;\n}\npublic void setACT_TAG(String aCT_TAG) {\n    ACT_TAG = aCT_TAG;\n}\n\n}\n```\n\n\nbut i use @ApiModelProperty to show the example and so on. if the annotation is not used, the swagger.json doesnt work. \nso @ApiModelProperty is needed to be use. but uppercase to lowercase?. Thanks. i edit them as your  suggestions, like:\n```java\n//@ApiModel\npublic class BlackNameResult {\n    //X_RESULTCODE\uff1a0 \u8c03\u7528\u8d26\u6d41\u7a0b\u8fd4\u56de\u6210\u529f\uff0c ACT_TAG\uff1a\u503c\u662f1\uff0c\u4ee3\u8868\u9ed1\u540d\u5355\n    //@ApiModelProperty(name = \"TEST1\", value = \"\u8fd4\u56de\u7f16\u7801\", required = true, example = \"00000\")\n    private String xrESULTCODE;\n    //@ApiModelProperty(name = \"TEST2\", value = \"\u8fd4\u56de\u7f16\u7801\", required = true, example = \"11111\")\n    private String ACT_TAG;\n@JSONField(name = \"X_RESULTCODE\")\npublic String getXrESULTCODE() {\n    return xrESULTCODE;\n}\npublic void setXrESULTCODE(String x_RESULTCODE) {\n    xrESULTCODE = x_RESULTCODE;\n}\n@JSONField(name = \"ACT_TAG\")\npublic String getACT_TAG() {\n    return ACT_TAG;\n}\npublic void setACT_TAG(String aCT_TAG) {\n    ACT_TAG = aCT_TAG;\n}\n\n}\n```\n\n\nbut i use @ApiModelProperty to show the example and so on. if the annotation is not used, the swagger.json doesnt work. \nso @ApiModelProperty is needed to be use. but uppercase to lowercase?. oh, i am sorry. and i edit it like this:\n@ApiModel\npublic class BlackNameResult {\n    //X_RESULTCODE\uff1a0 \u8c03\u7528\u8d26\u6d41\u7a0b\u8fd4\u56de\u6210\u529f\uff0c ACT_TAG\uff1a\u503c\u662f1\uff0c\u4ee3\u8868\u9ed1\u540d\u5355\n    @ApiModelProperty(name = \"TEST1\", value = \"\u8fd4\u56de\u7f16\u7801\", required = true, example = \"00000\")\n    private String xrESULTCODE;\n    @ApiModelProperty(name = \"TEST2\", value = \"\u8fd4\u56de\u7f16\u7801\", required = true, example = \"11111\")\n    private String ACT_TAG;\n@JSONField(name = \"X_RESULTCODE\")\npublic String getXrESULTCODE() {\n    return xrESULTCODE;\n}\npublic void setXrESULTCODE(String x_RESULTCODE) {\n    xrESULTCODE = x_RESULTCODE;\n}\n\n//  @JSONField(name = \"ACT_TAG\")\n    public String getACT_TAG() {\n        return ACT_TAG;\n    }\n    public void setACT_TAG(String aCT_TAG) {\n        ACT_TAG = aCT_TAG;\n    }\n}\nright? but the swagger.json doesnt work. and the same as above.\n\n\nand @JSONField(name = \"ACT_TAG\") is FastJson.. oh, i am sorry. and i edit it like this:\n@ApiModel\npublic class BlackNameResult {\n    //X_RESULTCODE\uff1a0 \u8c03\u7528\u8d26\u6d41\u7a0b\u8fd4\u56de\u6210\u529f\uff0c ACT_TAG\uff1a\u503c\u662f1\uff0c\u4ee3\u8868\u9ed1\u540d\u5355\n    @ApiModelProperty(name = \"TEST1\", value = \"\u8fd4\u56de\u7f16\u7801\", required = true, example = \"00000\")\n    private String xrESULTCODE;\n    @ApiModelProperty(name = \"TEST2\", value = \"\u8fd4\u56de\u7f16\u7801\", required = true, example = \"11111\")\n    private String ACT_TAG;\n@JSONField(name = \"X_RESULTCODE\")\npublic String getXrESULTCODE() {\n    return xrESULTCODE;\n}\npublic void setXrESULTCODE(String x_RESULTCODE) {\n    xrESULTCODE = x_RESULTCODE;\n}\n\n//  @JSONField(name = \"ACT_TAG\")\n    public String getACT_TAG() {\n        return ACT_TAG;\n    }\n    public void setACT_TAG(String aCT_TAG) {\n        ACT_TAG = aCT_TAG;\n    }\n}\nright? but the swagger.json doesnt work. and the same as above.\n\n\nand @JSONField(name = \"ACT_TAG\") is FastJson.. ",
    "smrutimo": "@fehguy Sure. So which branch should I be fixing ?. ",
    "SamSuffit": "Hello, I had the same probl\u00e8me. Si I make a PR which correct it. \nI'll have to used it in my product, any idea if it will be included ?\nAnd if so then when the next 1.5 release is due ?. ",
    "sebeard": "There's nothing missing. Its the way the endpoint method has been interpreted. Effectively there are duplicate descriptors generated;\n\"UpsertPet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"type\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Pet Name\"\n        }\n      }\n    },\n    \"UpsertPetPet\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Pet Name\"\n        }\n      }\n    }\nUpsertPet describes the hierarchy (i.e the parent class of UpsertCat and UpsertDog).\nUpsertPetPet describes the body parameter of the update method on the pet endpoint.\nBased on the annotation used I would expect it to be UpsertPet to describe the body parameter as well as the hierarchy (i.e. Body Parameters should also respect the type attribute of the annotation). Alternatively it could look at the type of the body parameter (in this case UpsertPet) realize it's a parameterized type and use UpsertPet as the raw class name.\nI think respecting the annotation's type property is the better solution as it's already handled for PathParam/QueryParam/FormParam based parameters, just not Body parameters.\nThe problem here is when using Swagger CodeGen to process the JSON output and generate a Client stub, I end up with UpsertPet and UpsertPetPet. UpsertPet I can't do anything with in terms of interacting with the API, only UpsertPetPet is accepted on any endpoint. To fix it I have to manually edit the JSON by removing UpsertPetPet and changing any references to UpsertPetPet to UpsertPet.. ",
    "krysz": "I have the same issue. I use Swagger 1.5.16 and Jackson 2.9.1\nFor example:\n```java\n@JsonProperty(\"e_fakt\")\nprivate boolean eFakt;\npublic boolean geteFakt() {\n     return eFakt;\n}\npublic void seteFakt(boolean eFakt) {\n     this.eFakt = eFakt;\n}\n```\nAnd this is the result:\n\"geteFakt\":{\"type\":\"boolean\"}\nAfter some debugging I have found out that following code is responsible for that:\n```java\nString propName = propDef.getName();\nAnnotation[] annotations = null;\n// hack to avoid clobbering properties with get/is names\n// it's ugly but gets around https://github.com/swagger-api/swagger-core/issues/415\nif (propDef.getPrimaryMember() != null) {\n    java.lang.reflect.Member member = propDef.getPrimaryMember().getMember();\n    if (member != null) {\n        String altName = member.getName();\n        if (altName != null) {\n            final int length = altName.length();\n            for (String prefix : Arrays.asList(\"get\", \"is\")) {\n                final int offset = prefix.length();\n                if (altName.startsWith(prefix) && length > offset\n                    && !Character.isUpperCase(altName.charAt(offset))) { // this\n                    propName = altName; // and this\n                    break;\n                }\n            }\n        }\n    }\n}\n``\nFromswagger-core/src/main/java/io/swagger/jackson/ModelResolver.java`\nAnd also I found other comment related to this issue.\nhttps://github.com/swagger-api/swagger-core/issues/415#issuecomment-277947538\nIn my opinion this is a bug, because standard Java naming convention required the first letter after 'get' prefix to be lowercase in getters if the related field has second letter uppercased and here Swagger not recognize it as getter method.\nAnd it is not only related to the Boolean type - probably (as author of issue mentioned)\nAs workaround I had to use another Jackson annotation for getter:\n@JsonGetter(\"e_fakt\")\nand renamed the getter to:\npublic boolean getEFakt(). ",
    "leochr": "After more discussion, we think it's better to further simplify the interface.\ninterface OpenAPIController\n\nOpenAPIConfig bootstrap();\n\nwhere bootstrap() can be used to return an OpenAPIConfig object which encapsulates all configurations (for Reader, Scanner, OpenAPI, etc) along with a predefined OpenAPI definition (optional) to start-off (similar to beforeScan in v2). \nOpenAPIConfig class will have getters and setters for configurable items:\ngetOpenAPI()\nsetOpenAPI(OpenAPI)\ngetClasses()\nsetClasses(Set>)\nisScan()\nsetScan(boolean)\ngetFilterClass()\nsetFilterClass(String)\nisPrettyPrint()\nsetPrettyPrint(boolean)\ngetIgnoredRoutes()\nsetIgnoredRoutes(Collection)\n.....\n.....\nAll setters will return the OpenAPIConfig back to allow users to set more configurations easily.\nOpenAPIConfig should ideally only use exposed classes / interfaces and avoid using internal / heavy-lifting classes (more dependency),  so it can be exposed to users easily.\nAny other methods that needs to be invoked by Reader/Scanner can be added to OpenAPIController. Dropped 'afterScan' method, since it seems users can instead use the OpenAPIConfig to control the generated OpenAPI definition (by setting which packages / classes to scan / ignore) instead of overwriting the generated definition. @fehguy your thoughts?\n. A sample implementation of OpenAPIController : \n```\npublic class OpenAPIControllerImpl implements OpenAPIController {\n@Override\npublic OpenAPIConfig bootstrap() {\n    return new OpenAPIConfig()\n            .setOpenAPI(new OpenAPI()\n                    .info(new Info()\n                        .contact(new Contact()\n                                    .email(\"mail@sample.org\")\n                                    .name(\"Sample Name\")\n                                    .url(\"https://foo.bar\")))\n                    .externalDocs(new ExternalDocumentation()\n                        .description(\"read more here\")\n                        .url(\"http://swagger.io\"))\n                    .addTagsItem(new Tag()\n                        .name(\"sample tag\")\n                        .description(\"all about neat things\")))\n            .setFilterClass(\"com.sample.FilterClassImpl\")\n            .setScan(true)\n            .setPrettyPrint(true);\n}\n\n}\n```. The OpenAPIConfig will consolidate all configurations that can be specified by users. It's sole purpose would be to get the user settings to control the generated OpenAPI definition. We'll use default values for configurations not set by users.\nThe list of methods mentioned above are from existing interfaces (Scanner, ReaderConfig, SwaggerConfig, etc). We can modify the methods to make it easier for users to pass in the configuration values. I was thinking that the 'setClasses' method would be used by users to provide the classes to scan, so instead of list of Classes, we can accept packages and/or classes by names (strings) for scanning. If user didn't specify the classes, then we'll scan all.\nSimilar to ReaderListener in v2, we will find the user's implementation of OpenAPIController and invoke the bootstrap() method to get the OpenAPIConfig and then use its settings to scan and generate OpenAPI definition. In v2, I believe the implementations of ReaderListener had to be annotated in order for it to be found and its methods to be invoked (I could be wrong), but we should find the implementation of OpenAPIController even if it doesn't have any annotations. Unlike ReaderListener, which could have multiple implementations, we should only accept one implementation of OpenAPIController.. ",
    "ukiome": "I have a similar problem and would also love to hear of any solution to this as I store my response data in a hashmap and returns it as json without a java model.. ",
    "rim-wood": "@webron \nthis is part of my swagger.json\n\n\"/surviveevent/external/info\": {\n            \"post\": {\n                \"tags\": [\n                    \"surviveevent\"\n                ],\n                \"summary\": \"test\",\n                \"description\": \"\",\n                \"operationId\": \"postTest\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"in\": \"body\",\n                        \"name\": \"test\",\n                        \"description\": \"test\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"x-examples\": {\n                            \"application/json\": \"[\\\"a\\\",\\\"b\\\"]\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"default\": {\n                        \"description\": \"successful operation\"\n                    }\n                }\n            }\n        },\n\nand x-examples is exist,but swagger-ui is not show.\notherwise\uff0cuse @ApiImplicitParam, for example,@ApiImplicitParam(name=\"id\",value=\"\u5e78\u514d\u4e8b\u4ef6id\",dataType = \"String\").the swagger.json does not exist description in parameters. @webron \nyes,if i provide the example through the model,this is work.\nbut you know,\nThe add and modified is different\uff0cadd method may be need more param.\nif i use @ApiModelProperty , That means add and modified show the some param in swagger-ui.\nfor example\uff0c\nthe model hava 4 param in add method,and is required in addition to facilityCode.\n\n\nbut in edit method, facilityCode is required,the other is not.\n\n\nI do not know whether you understand what I mean\uff0cif you hava solution\uff0cplease tell me . @webron  ok\uff0ci see\uff0c thank you very much. ",
    "TopDstar": "@webron I meet the same issue. I don't want to show the model schema because of to large. I try to use @example annotation but not work.\nswagger-jersey2-jaxrs:1.5.16\nswaggerUI:3.3.2\nswagger.json generated by annotation:\n\ncode:\npublic Response registerApp(@HeaderParam(\"X-Auth-Token\")String token, @PathParam(\"registeredSystem\") RegisteredSystem registeredSystem,\n                                 @ApiParam(value = \"request\",\n                                        examples = @Example(value = {\n                                                @ExampleProperty(mediaType=\"application/json\", value=\"[\\\"a\\\",\\\"b\\\"]\")\n                                        })) ApplicationRegistrationCreateRequest request) {...}. ",
    "liqiaolin520": "\u8bf7\u95ee\u4e0b\u6709\u4ec0\u4e48\u89e3\u51b3\u65b9\u6848\u6ca1\u6709\nWould you please tell me what the solution under no. ",
    "arturdzm": "Also some other fields that are recently added also are missing as well in some cases . Looks like this PR fixes @RequestBody schema scanning, but ignores examples now\nWouldn't it be  easier to call getContent() for each @Content inside getContents() and then merge contents together?. Still some issues with RequestBody #2403 \n. ",
    "tdudzik": "@webron Thank you for the quick answer. Could I also ask when I can expect the next version?. ",
    "swyadav": "@pjfanning I tried using \"java.io.File\" but than it changes my REST API definition from \"application/octet-stream\" to \"multipart\" which is not what I am looking for. Is there any other way to avoid this.. @pjfanning I tried using \"java.io.File\" but than it changes my REST API definition from \"application/octet-stream\" to \"multipart\" which is not what I am looking for. Is there any other way to avoid this.. @pjfanning As per the example provided by you I implemented the same in my code but it changed my content-type header from \"application/octet-stream\" to \"mulitpart/form-data\". Below are the changes to my code that I made and also the curl command presented by tryout functionality of swagger. I commented out my jersey @consumes annotation and tried the swagger consumes annotation.\n@POST\n    //@Consumes(MediaType.APPLICATION_OCTET_STREAM)\n@ApiOperation(\n            value = \"Upload a new file\",\n            notes =\"upload binary stream\",\n            consumes = \"application/octet-stream\",\n            code = 201\n    )\n@apiimplicitparams({\n@apiimplicitparam(name = \"foo\", value = \"description of api.\",\nparamType = \"body\", dataType = \"java.io.File\", required = true)}\n)\npublic Response uploadApi(@context final HttpServletRequest request,\n@apiparam(value = \"description of pathparam\", required = true)\n@pathparam(\"Id\") final String Id) throws Exception\n{}\n---Swagger curl command from the tryout button----\ncurl -X POST --header 'Content-Type: multipart/form-data' --header 'Accept: application/json' -d '{}' '{URI}'\n. @pjfanning As per the example provided by you I implemented the same in my code but it changed my content-type header from \"application/octet-stream\" to \"mulitpart/form-data\". Below are the changes to my code that I made and also the curl command presented by tryout functionality of swagger. I commented out my jersey @consumes annotation and tried the swagger consumes annotation.\n@POST\n    //@Consumes(MediaType.APPLICATION_OCTET_STREAM)\n@ApiOperation(\n            value = \"Upload a new file\",\n            notes =\"upload binary stream\",\n            consumes = \"application/octet-stream\",\n            code = 201\n    )\n@apiimplicitparams({\n@apiimplicitparam(name = \"foo\", value = \"description of api.\",\nparamType = \"body\", dataType = \"java.io.File\", required = true)}\n)\npublic Response uploadApi(@context final HttpServletRequest request,\n@apiparam(value = \"description of pathparam\", required = true)\n@pathparam(\"Id\") final String Id) throws Exception\n{}\n---Swagger curl command from the tryout button----\ncurl -X POST --header 'Content-Type: multipart/form-data' --header 'Accept: application/json' -d '{}' '{URI}'\n. ",
    "iyerkm": "I got this issue resolved. It was something to do with configuring REST security correctly. . ",
    "dantran": "with latest swagger-core, ZoneDateTime generated definition now becomes  string type, and 'date-time' format. swagger-core 1.5.9 has it.  I have no idea about JsonNode. for my case, replace generic class with String class   ( one size fix all). ",
    "jochenhebbrecht": "I created a pull request for this problem: https://github.com/swagger-api/swagger-core/pull/2346. Thanks, it works :-). Thanks, it works! :-). ",
    "dlandis": "Is there any workaround for this issue?. ",
    "Wattos": "This seems like a bug in the spec. Rendering tools do not have the sufficient information to render the items in the right order. How would a tool know what order makes logically sense?\nNow it just looks random which does not make sense:\n. ",
    "bogdanlupashko": "Repeating the model with same name is simply not supported for same package.\nBut I have different ones.\nThis case could be reproduced when two libraries uses same class name( \"User\" for example, and sure they located in different packages)\nand developer needs to return both with own api. \nFor example in first comment expected:\n\n\"relatives\":[\n{\n // fields from org.another.User\n},\n...\n]. \n",
    "gracekarina": "Thanks!. I found the discriminator object only in the AllOfShema, should it be only there or also in the OneOfSchema and AnyOfSchema? @fehguy . getOperationsMap() also and an enum HttpMethod. rename to readOperations and readOperationMap\n. haha sorry about that\n. ",
    "derekdecesare": "https://github.com/swagger-api/swagger-editor/issues/1356. ",
    "zak905": "same here. I got it to work, you should add @Provider annotation on the interface, otherwise it will not be picked up by Jersey container. ",
    "pravin-jadhav": "Same issue, cannot get it to generate the securtiyDefinitions, tried  @ChristianCiach suggestion as well, doesn't work.. ",
    "kinow": "Had exactly the same issue, and @zak905 's suggestion worked for me.\nThanks!. ",
    "ssoffline": "Would you accept a patch for providing support for javax.money.MonetaryAmount instead?. Changes committed https://github.com/swagger-api/swagger-core/pull/2269.. BeanConfig solves it, my bad. Its major minor version, are you guys on Java 6/7, seems to be depend on java 8.\nIf its on java 5 then it will be impossible to support this.\n. Will give you a java 7 fix. Build has passed now, after adding java-money-bp. I need to pull it back, will contribute again, this may lead to certain violations.. I can check in this fix/feature in from my company portal, are you ready to accept this PR or you guys have different plans to implement this? . ",
    "aniruthmp": "This is my dependency\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger2</artifactId>\n    <version>2.7.0</version>\n</dependency>\nAnd this points gets ApiParam.class from \n<dependency>\n   <groupId>io.swagger</groupId>\n   <artifactId>swagger-annotations</artifactId>\n   <version>1.5.13</version>\n</dependency>. ",
    "erikvanelsas": "Sorry.. not at all my intention to issue a pull request.\nPlease ignore. ",
    "danigulyas": "Hi Webron!\nI'm using dropwizard-swagger, the package the class was in were in the \"resource packages\".\nConfiguration:\nyml\nswagger:\n  resource_package: com.ourcompany.service.retailer.resources,com.ourcompany.dropwizard.commons.swagger\n  title: OurCompany Service\n  description: This service provides endpoints to.... Yes, a fork of that, i think this may be  relatively easy to be tested by a test case with:\n1. ResourceWithConfigAndExtensions duplicated without  any annotations. (SwaggerDefinition maybe at some other class added to the list of classes to be scanned)\n2. ConfigAndExtensionScannerTest duplicated only checking for Tag-added-before-read and Tag-added-after-read.. ",
    "melloware": "Looks like FasterXML has more CVE Security issues:\nhttps://www.cvedetails.com/vulnerability-list/vendor_id-15866/product_id-34008/Fasterxml-Jackson.html\nhttps://www.cvedetails.com/vulnerability-list/vendor_id-15866/product_id-42991/Fasterxml-Jackson-databind.html\nEven affects the latest version 2.9.8 available by internet.. ",
    "debashisdeb": "Thanks @pjfanning  ! Seems like there are no tools around this corner yet !. ",
    "ckaratzas": "You can try this also:\nhttps://github.com/ckaratzas/vertx-openapi-spec-generator. ",
    "bkimbrou": "@pjfanning I honestly don't understand why you guys went with a run time model for this instead of compile time. What is gained by evaluating the annotations at run time? Are those annotations going to magically change after the app is compiled?\nIt seems if you simply gave us the option to output the json or yaml at compile time, you would no longer have to support the various ways people are hosting their apps!\nI know there is the swagger-maven-plugin that is supposed to be able to do this, but they state that the don't support OpenAPI 3.0 and honestly why is it even necessary?. ",
    "ralphdoe": "This issue has been resolved @webron @fehguy.. This issue has been resolved @webron @fehguy.. It seems the Response Code isn't an integer, is a natural String.\n. It seems the Response Code isn't an integer, is a natural String.\n. Closed because it was treated in other PR. Yaml options #2303. Closed because it was treated in other PR. Yaml options #2303. You're totally right, @arturdzm. I have solved this here: https://github.com/swagger-api/swagger-core/pull/2404. You're totally right, @arturdzm. I have solved this here: https://github.com/swagger-api/swagger-core/pull/2404. You both are right. The ApiModelProperty doesn't exist in the new version. Everything related with the models is now handled with the @Schema annotation. \nThanks a lot for this observation!\nWe updated the wiki with this: \nAnd/Or a schema property:\n@Schema(description = \"pet status in the store\", allowableValues =  {\"available\",\"pending\",\"sold\"})\n  public String getStatus() {\n    return status;\n  }. You both are right. The ApiModelProperty doesn't exist in the new version. Everything related with the models is now handled with the @Schema annotation. \nThanks a lot for this observation!\nWe updated the wiki with this: \nAnd/Or a schema property:\n@Schema(description = \"pet status in the store\", allowableValues =  {\"available\",\"pending\",\"sold\"})\n  public String getStatus() {\n    return status;\n  }. Added in this PR: https://github.com/swagger-api/swagger-core/pull/2609. Added in this PR: https://github.com/swagger-api/swagger-core/pull/2609. The logic of the ParameterParser was implement, but i wasn't using it. Now the Parameter is being builded by the Param Annotations of JaxRS, and the rest of the info is taken from the Open API Parameter Annotation. I added a test to prove this functionality. . Validation Added.. Validation added.. StringUtils.isNotBlank validations added.. Changed. . Done! I have added new validations. . Done. I made a refactor of that methods.. Validation added in the ParameterProcessor, there was functioning correctly here.. The type of value property was changed, now is an object, and JSonNode parsing added.. Done!. Done!. Done! The Enums are now in lower case: mapper.configure(SerializationFeature.WRITE_ENUMS_USING_TO_STRING, true);\n. Sure, there's a method that handles the style values. This line was deleted. . Done!. Done and also changed some other version in a json file.. In the current behavior we are setting both fields individually, there's no exclusivity restriction. Issue created to treat this: #2395. I think it must be also ignored when it's not a number. We need to add this behavior, also added to the issue: #2395 . This isn't implemented yet, also added to the issue: #2395. Changed!. Changed!. Removed!. Removed!. Replaced by parameterObject.setExample and test added.. Done!. This is now treated inside the getContent method, the consumes and produces are now treated as String[] mediaTypes. . https://github.com/swagger-api/swagger-core/pull/2416 Suggested by Ron in this PR.. #2416 Suggested by Ron in this PR.. I meant this PR: https://github.com/swagger-api/swagger-core/pull/2333.\nwebron 28 days ago Owner\nWe should specify this, schema and content are mutually exclusive, and describe the behavior if more than one is specified. I'd suggest content > array > schema. @ralphdoe - what's the current behavior of the reader?. This is the getRequestBody method in OperationParser: https://github.com/swagger-api/swagger-core/blob/bugfx/2395-reader-annotations-improvent/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/OperationParser.java#L341-L360.                           \nAlso you can see, the applyTypes method: https://github.com/swagger-api/swagger-core/blob/bugfx/2395-reader-annotations-improvent/modules/swagger-jaxrs2/src/main/java/io/swagger/jaxrs2/OperationParser.java#L452-L465. My bad, code recovered.. Done!. Added when reformatting code. Updated. . Sure. Now I have added this functionality. . The line is so long. Divided in two lines.. Sure. Added.. It has been extracted from the nickname property:\n@ApiOperation(\n        value = \"Meta Uber Annotation\",\n        notes = \"Test description\",\n        consumes = \"multipart/form-data\",\n        produces = \"multipart/form-data\",\n        httpMethod = \"GET\",\n        **nickname = \"users\",**. Test added to JaxRS module. Test added to JaxRS module. Test added to JaxRS module. I'm going to push this in another PR.. Renamed to testThatApiOperationMightBeInType.. SerializableParameter extends Parameter Interface, so there's no need to remove it here. It was being inherited from the Parameter Interface.. Deleted else. The condition of allowEmptyValue must not be dependent on the uniqueItems one. . This attribute must be valid only to QueryParameter and FormParameter as the documentation says: This is valid only for either query or formData parameters and allows you to send a parameter with a name only or an empty value. . Now I've understood the change. Thanks! Changed to SerializableParameter.. Methods moved.. ",
    "starinfor": "Can't share exact code but a similar sample would look like this:\n```\npublic class Test extends HttpServlet\n{ \n    @Override\n    public void init(ServletConfig config) throws ServletException\n    {\n        super.init(config);\n        //init code\n}\n\n@Override\npublic void doGet(HttpServletRequest req, HttpServletResponse res)\n        throws IOException, ServletException\n{\n        String pathInfo = req.getPathInfo();\n\n        if (pathInfo != null && !\"\".equals(pathInfo))\n        {\n            //based on different values call methods/classes accordingly\n            //ex: I want to create api for /Test/Ex/test1 , /Test/Example/test2\n                           //and both calls would have different set of query parameters\n        }\n\n}\n\n@Override\npublic void doPost(HttpServletRequest req, HttpServletResponse res)\n        throws IOException, ServletException\n{\n    doGet(req, res);\n}\n\n@Override\npublic void destroy()\n{\n    //destroy context\n}\n\n}\n\n```. The above servlet serves multiple web services based on value of pathinfo.. ",
    "eddified": "I'm seeing this as well.. ",
    "sjelen": "I'm also seeing this, had to downgrade to 1.5.9 from 1.5.16. Any updates on a fix?. ",
    "anilnandigam": "( @webron @fehguy )  Could you please look into this issue.. ",
    "Darshan-shivashankar": "Hi @fehguy @webron ,\nEven we are seeing the same issue while we trying to save the swagger objects to mongodb. \nIs there any fix being planned for this ? \n. Hi @fehguy @webron ,\nEven we are seeing the same issue while we trying to save the swagger objects to mongodb. \nIs there any fix being planned for this ? \n. ",
    "andreybleme": "Any idea to improve this documentation section?\nWhat supported values should be on the documentation? @HaithamMaya . ",
    "janamanoharan": "It would also be helpful if each of the annotations had examples on how to use them so users can have a better understanding of their purpose. https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#responseObject. ",
    "mobreza": "See #2316. Also, if array items $ref another object, the XML declaration is ignored.\nyaml\n    ...\n    properties:\n      collectors:\n        type:                       array\n        xml:\n          wrapped:                  true\n          name:                     cols\n        items:\n          $ref:                     '#/definitions/Actor'\n          xml:\n            name:                   collector\nwhere Actor is a declared object type in definitions.. @zregvart \ud83e\udd1e . ",
    "zregvart": "There is now a pull request rebased against the master in #2674. ",
    "runjia1987": "Hi, thanks for reply.\nIt is my mistake, I defined both @ApiModel(value = \"xxx\"), where xxx is identical in both classes. after modifying the value, the swagger output is fine.\nyou may close this issue.\n. ",
    "agogs": "There is already an unit test for this feature at swagger-core\\modules\\swagger-core\\src\\test\\java\\io\\swagger\\ResponseExamplesTest.java. Sure, I will change that.. Sure.. ",
    "a-saf": "Also: \n- added missing $ref from Header's equals and hashCode\n- discriminator to equals and hashCode in Schema\n- $ref to equals and hashCode in Parameter. PR for issue #2339 . This PR is for issue #2328 . This PR is for issue #2455 . ",
    "jorge-sanz": "Same issue here: https://github.com/swagger-api/swagger-play/issues/134. ",
    "dranuhl": "Even if the response and responseContainer values of @ApiOperation are not used at all and trust in the ability of Swagger to determine them on its own, the result is incorrect.\n```\n  @ApiOperation(value=\"Return List\",\n                notes=\"Let Jersey/JAXB do the element wrapping\")\n  @GET\n  @Path(\"list\")\n  @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n  public List getModels() {\n    return Arrays.asList(new Item(\"1\", \"foo\"), new Item(\"2\", \"bar\"));\n  }\n```\nWith the following model:\n```\n@XmlRootElement\n@XmlAccessorType(XmlAccessType.NONE)\npublic final class Item extends Object {\n    @XmlAttribute(required=true)\n    @XmlSchemaType(name=\"ID\")\n    private String id;\n@XmlElement(required=true)\nprivate String value;\n\n...\n}\n```\nWill the JSON/YAML generated by Swagger will be incorrect as noted in the original post.  It does not matter if you use Jersey 1.x or 2.x framework.\nTested with swagger-jersey-jaxrs-1.5.16 and swagger-jersey2-jaxrs-1.5.16.\n. Even if the response and responseContainer values of @ApiOperation are not used at all and trust in the ability of Swagger to determine them on its own, the result is incorrect.\n```\n  @ApiOperation(value=\"Return List\",\n                notes=\"Let Jersey/JAXB do the element wrapping\")\n  @GET\n  @Path(\"list\")\n  @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n  public List getModels() {\n    return Arrays.asList(new Item(\"1\", \"foo\"), new Item(\"2\", \"bar\"));\n  }\n```\nWith the following model:\n```\n@XmlRootElement\n@XmlAccessorType(XmlAccessType.NONE)\npublic final class Item extends Object {\n    @XmlAttribute(required=true)\n    @XmlSchemaType(name=\"ID\")\n    private String id;\n@XmlElement(required=true)\nprivate String value;\n\n...\n}\n```\nWill the JSON/YAML generated by Swagger will be incorrect as noted in the original post.  It does not matter if you use Jersey 1.x or 2.x framework.\nTested with swagger-jersey-jaxrs-1.5.16 and swagger-jersey2-jaxrs-1.5.16.\n. The following diff resolves the above described issue with v1.5.16:\n```\ndiff --git a/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java b/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java\nindex 035d49f..ac36489 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java\n@@ -54,6 +54,7 @@ import javax.validation.constraints.Pattern;\n import javax.validation.constraints.Size;\n import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlAttribute;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlSchema;\n@@ -617,7 +618,8 @@ public class ModelResolver extends AbstractModelConverter implements ModelConver\n             return false;\n         }\n         if (xmlAccessorTypeAnnotation.value().equals(XmlAccessType.NONE)) {\n-            if (!member.hasAnnotation(XmlElement.class)) {\n+            if (!member.hasAnnotation(XmlElement.class) &&\n+                !member.hasAnnotation(XmlAttribute.class)) {\n                 return true;\n             }\n         }\n. The following diff resolves the above described issue with v1.5.16:\ndiff --git a/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java b/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java\nindex 035d49f..ac36489 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java\n@@ -54,6 +54,7 @@ import javax.validation.constraints.Pattern;\n import javax.validation.constraints.Size;\n import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlAttribute;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlSchema;\n@@ -617,7 +618,8 @@ public class ModelResolver extends AbstractModelConverter implements ModelConver\n             return false;\n         }\n         if (xmlAccessorTypeAnnotation.value().equals(XmlAccessType.NONE)) {\n-            if (!member.hasAnnotation(XmlElement.class)) {\n+            if (!member.hasAnnotation(XmlElement.class) &&\n+                !member.hasAnnotation(XmlAttribute.class)) {\n                 return true;\n             }\n         }\n```\n. See also pull request #2409, which even includes some tests.\n. See also pull request #2409, which even includes some tests.\n. This issue duplicates #1847.. This issue duplicates #1847.. ",
    "aspich": "adressing issue https://github.com/swagger-api/swagger-core/issues/2335. Hello @pjfanning , these methods are already covered by \"ImplicitParametersTest\" \nhttps://github.com/swagger-api/swagger-core/blob/bc6815fa67ef06bd49f0845c45f41532c93ebfe8/modules/swagger-servlet/src/test/java/io/swagger/servlet/extensions/ImplicitParametersTest.java. @webron let me know if you need any further input. . guys, I understand we are all busy but  it's been nearly an year with this simple small PR open.... is there anything that is blocking it? @webron  @pjfanning . ",
    "grimly": "I would not consider it a fix, it's even worse if we look at the new swagger-jaxrs2 module.\nThe later depends on Jersey which is an implementation of JaxRS.\nWhat happen if we use it on TomEE (uses CXF), Wildfly (uses RestEasy), WebSphere or WebLogic ?\nThe force of application servers is to let the server handle the implementations and not to have it in your WAR, this module is going the other way.. ",
    "ttiurani": "+1. I'm also in jar hell because of the jackson-databind mess, and unfortunately 2.9.0 already sneaked in as a dependendency to my project. Any rough estimates on when this might be merged & released?. ",
    "plelevier": "+1. Jar hell for me too. +1. Jar hell for me too. ",
    "deki": "I created a PR for Jackson to reintroduce the method for 2.9.1 release for the meantime: https://github.com/FasterXML/jackson-databind/pull/1752. Jackson 2.9.1 was released in the meantime. My fix is included. So in case you are in jar hell, you can solve it now.. 3.6 is latest release. a null check should be added. a null check should be added. a null check should be added. a null check should be added. a null check should be added. ",
    "zkendall": "This would be a god-send. Our api has 11 implicit params that are on every single API call. It's ugly as sin.\nUpdate: This looks like it would help too: https://github.com/swagger-api/swagger-core/pull/1926. ",
    "red61wjt": "I have also spent quite a bit of time banging my head off a desk with this one. I think I possibly managed something when overriding getClasses in Application, but this is not really workable going forward. I have it working with resteasy 3.x by using the BeanConfig\n@ApplicationPath(\"/rest/\")\npublic class JaxRsActivator extends Application {\npublic JaxRsActivator() {\n    BeanConfig beanConfig = new BeanConfig();\n    beanConfig.setVersion(\"v1\");\n    beanConfig.setTitle(\"My app\");\n    beanConfig.setBasePath(\"/example/rest/\");\n    beanConfig.setScan(true);\n}\n\n}\nAnd \n    <dependency>\n        <groupId>org.jboss.resteasy</groupId>\n        <artifactId>resteasy-jaxrs</artifactId>\n        <version>1.5.8</version>\n    </dependency>. You are using the wrong version of Guava, check the version that is required by swagger is the version being bundled into your deployment or it might be that swagger is forcing an upgrade of guava that other parts of your codebase can't handle, you are not including enough of the stack to tell.\n",
    "jbarrett732": "I have a very simple API that was working great with resteasy 2.x, but have failed miserably trying to get any possible solution working with resteasy 3.x. I am amazed that there has not been more interest or documentation on this topic. Somebody please help!. ",
    "rodislav": "@red61wjt , did you meant ?\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-jaxrs</artifactId>      \n    <version>1.5.8</version>    \n</dependency>. ",
    "LafsarColdwalker": "I had a similar issue on WildFly 10 and RestEasy 3.0.16.\nI used the BeanConfig as suggested by @red61wjt but I had to set also the ResourcePackage into the BeanConfig. It doesn't work without ResourcePackage.\nMy configuration is the follow:\n`\n@ApplicationPath(\"/api\")\npublic class JaxRsActivator extends Application {\npublic JaxRsActivator() {\n    BeanConfig beanConfig = new BeanConfig();\n    beanConfig.setVersion(\"v1\");\n    beanConfig.setDescription(\"My Description\");\n    beanConfig.setTitle(\"My Title\");\n    beanConfig.setBasePath(\"/api\");\n    beanConfig.setResourcePackage(\"my.package.with.rest.controllers\");\n    beanConfig.setScan(true);\n}\n\n}\n`\nIn the pom I have:\n<dependency>\n  <groupId>io.swagger</groupId>\n  <artifactId>swagger-jaxrs</artifactId>\n  <version>1.5.19</version>\n</dependency>\nI hope it could help you ;)\n. ",
    "fjakop": "Maybe not 100% correct thread, but using configuration from https://github.com/swagger-api/swagger-core/issues/2351#issuecomment-387078313 on JBoss EAP 7 gives\njava.lang.NoSuchMethodError: com.google.common.collect.Sets$SetView.iterator()Lcom/google/common/collect/UnmodifiableIterator;\nHas anyone similar problems?. Well, guava 19 is bundled with JBoss 7.0.9 EAP, but even including version 23 in the deployment and excluding the module named \"com.google.guava\" via jboss-deployment-structure.xml leads to the same error.\n```\n[2018-09-24 10:50:11,588] Artifact foo:war exploded: Artifact is being deployed, please wait...\n10:50:16,412 WARN  [org.hibernate.orm.deprecation] (ServerService Thread Pool -- 275) HHH90000014: Found use of deprecated [org.hibernate.id.SequenceIdentityGenerator] sequence-based id generator; use org.hibernate.id.enhanced.SequenceStyleGenerator instead.  See Hibernate Domain Model Mapping Guide for details.\n10:50:16,413 WARN  [org.hibernate.orm.deprecation] (ServerService Thread Pool -- 275) HHH90000014: Found use of deprecated [org.hibernate.id.SequenceIdentityGenerator] sequence-based id generator; use org.hibernate.id.enhanced.SequenceStyleGenerator instead.  See Hibernate Domain Model Mapping Guide for details.\n10:50:21,796 ERROR [org.jboss.msc.service.fail] (ServerService Thread Pool -- 279) MSC000001: Failed to start service jboss.undertow.deployment.default-server.default-host./foo: org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./foo: com.google.common.util.concurrent.ExecutionError: java.lang.NoSuchMethodError: com.google.common.collect.Sets$SetView.iterator()Lcom/google/common/collect/UnmodifiableIterator;\n    at org.wildfly.extension.undertow.deployment.UndertowDeploymentService$1.run(UndertowDeploymentService.java:85) [wildfly-undertow-7.0.9.GA-redhat-3.jar:7.0.9.GA-redhat-3]\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [rt.jar:1.8.0_144]\n    at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) [rt.jar:1.8.0_144]\n    at java.util.concurrent.FutureTask.run(FutureTask.java) [rt.jar:1.8.0_144]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [rt.jar:1.8.0_144]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [rt.jar:1.8.0_144]\n    at java.lang.Thread.run(Thread.java:748) [rt.jar:1.8.0_144]\n    at org.jboss.threads.JBossThread.run(JBossThread.java:320)\nCaused by: com.google.common.util.concurrent.ExecutionError: java.lang.NoSuchMethodError: com.google.common.collect.Sets$SetView.iterator()Lcom/google/common/collect/UnmodifiableIterator;\n    at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2201)\n    at com.google.common.cache.LocalCache.get(LocalCache.java:3937)\n    at com.google.common.cache.LocalCache.getOrLoad(LocalCache.java:3941)\n    at com.google.common.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4824)\n    at org.jboss.weld.util.cache.LoadingCacheUtils.getCacheValue(LoadingCacheUtils.java:49)\n    at org.jboss.weld.util.cache.LoadingCacheUtils.getCastCacheValue(LoadingCacheUtils.java:74)\n    at org.jboss.weld.bean.proxy.ClientProxyProvider.getClientProxy(ClientProxyProvider.java:233)\n    at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:736)\n    at org.jboss.weld.manager.BeanManagerImpl.getReference(BeanManagerImpl.java:765)\n    at org.jboss.weld.util.ForwardingBeanManager.getReference(ForwardingBeanManager.java:61)\n    at org.jboss.weld.bean.builtin.BeanManagerProxy.getReference(BeanManagerProxy.java:85)\n    at org.jboss.resteasy.cdi.CdiConstructorInjector.construct(CdiConstructorInjector.java:65)\n    at org.jboss.resteasy.spi.ResteasyProviderFactory.createProviderInstance(ResteasyProviderFactory.java:2280)\n    at org.jboss.resteasy.spi.ResteasyDeployment.createApplication(ResteasyDeployment.java:304)\n    at org.jboss.resteasy.spi.ResteasyDeployment.start(ResteasyDeployment.java:245)\n    at org.jboss.resteasy.plugins.server.servlet.ServletContainerDispatcher.init(ServletContainerDispatcher.java:113)\n    at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.init(HttpServletDispatcher.java:36)\n    at io.undertow.servlet.core.LifecyleInterceptorInvocation.proceed(LifecyleInterceptorInvocation.java:117)\n    at org.wildfly.extension.undertow.security.RunAsLifecycleInterceptor.init(RunAsLifecycleInterceptor.java:78) [wildfly-undertow-7.0.9.GA-redhat-3.jar:7.0.9.GA-redhat-3]\n    at io.undertow.servlet.core.LifecyleInterceptorInvocation.proceed(LifecyleInterceptorInvocation.java:103)\n    at io.undertow.servlet.core.ManagedServlet$DefaultInstanceStrategy.start(ManagedServlet.java:239)\n    at io.undertow.servlet.core.ManagedServlet.createServlet(ManagedServlet.java:133)\n    at io.undertow.servlet.core.DeploymentManagerImpl.start(DeploymentManagerImpl.java:527)\n    at org.wildfly.extension.undertow.deployment.UndertowDeploymentService.startContext(UndertowDeploymentService.java:101) [wildfly-undertow-7.0.9.GA-redhat-3.jar:7.0.9.GA-redhat-3]\n    at org.wildfly.extension.undertow.deployment.UndertowDeploymentService$1.run(UndertowDeploymentService.java:82) [wildfly-undertow-7.0.9.GA-redhat-3.jar:7.0.9.GA-redhat-3]\n    ... 7 more\nCaused by: java.lang.NoSuchMethodError: com.google.common.collect.Sets$SetView.iterator()Lcom/google/common/collect/UnmodifiableIterator;\n    at org.reflections.Reflections.expandSuperTypes(Reflections.java:380)\n    at org.reflections.Reflections.(Reflections.java:126)\n    at io.swagger.jaxrs.config.BeanConfig.classes(BeanConfig.java:276)\n    at io.swagger.jaxrs.config.BeanConfig.scanAndRead(BeanConfig.java:240)\n    at io.swagger.jaxrs.config.BeanConfig.setScan(BeanConfig.java:221)\n    at com.foo.bar.rs.JaxRsActivator.(JaxRsActivator.java:18)\n    at com.foo.bar.rs.JaxRsActivator$Proxy$_$$_WeldClientProxy.(Unknown Source)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) [rt.jar:1.8.0_144]\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) [rt.jar:1.8.0_144]\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) [rt.jar:1.8.0_144]\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423) [rt.jar:1.8.0_144]\n    at java.lang.Class.newInstance(Class.java:442) [rt.jar:1.8.0_144]\n    at org.jboss.weld.bean.proxy.DefaultProxyInstantiator.newInstance(DefaultProxyInstantiator.java:43)\n    at org.jboss.weld.bean.proxy.ProxyFactory.run(ProxyFactory.java:332)\n    at org.jboss.weld.bean.proxy.ProxyFactory.create(ProxyFactory.java:324)\n    at org.jboss.weld.bean.proxy.ClientProxyFactory.create(ClientProxyFactory.java:83)\n    at org.jboss.weld.bean.proxy.ClientProxyProvider.createClientProxy(ClientProxyProvider.java:209)\n    at org.jboss.weld.bean.proxy.ClientProxyProvider.createClientProxy(ClientProxyProvider.java:199)\n    at org.jboss.weld.bean.proxy.ClientProxyProvider.access$100(ClientProxyProvider.java:47)\n    at org.jboss.weld.bean.proxy.ClientProxyProvider$CreateClientProxy.load(ClientProxyProvider.java:55)\n    at org.jboss.weld.bean.proxy.ClientProxyProvider$CreateClientProxy.load(ClientProxyProvider.java:51)\n    at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3527)\n    at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2319)\n    at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2282)\n    at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2197)\n    ... 31 more\n10:50:21,817 ERROR [org.jboss.as.controller.management-operation] (management-handler-thread - 11) WFLYCTL0013: Operation (\"deploy\") fehlgeschlagen - Adresse: ([(\"deployment\" => \"foo-master-SNAPSHOT\")]) - Fehlerbeschreibung: {\"WFLYCTL0080: Fehlgeschlagene Dienste\" => {\"jboss.undertow.deployment.default-server.default-host./foo\" => \"org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./foo: com.google.common.util.concurrent.ExecutionError: java.lang.NoSuchMethodError: com.google.common.collect.Sets$SetView.iterator()Lcom/google/common/collect/UnmodifiableIterator;\n    Caused by: com.google.common.util.concurrent.ExecutionError: java.lang.NoSuchMethodError: com.google.common.collect.Sets$SetView.iterator()Lcom/google/common/collect/UnmodifiableIterator;\n    Caused by: java.lang.NoSuchMethodError: com.google.common.collect.Sets$SetView.iterator()Lcom/google/common/collect/UnmodifiableIterator;\"}}\n10:50:21,818 ERROR [org.jboss.as.server] (management-handler-thread - 11) WFLYSRV0021: Deploy von Deployment \"foo-master-SNAPSHOT.war\" wurde mit folgender Fehlermeldung zur\u00fcckgesetzt: \n{\"WFLYCTL0080: Fehlgeschlagene Dienste\" => {\"jboss.undertow.deployment.default-server.default-host./foo\" => \"org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./foo: com.google.common.util.concurrent.ExecutionError: java.lang.NoSuchMethodError: com.google.common.collect.Sets$SetView.iterator()Lcom/google/common/collect/UnmodifiableIterator;\n    Caused by: com.google.common.util.concurrent.ExecutionError: java.lang.NoSuchMethodError: com.google.common.collect.Sets$SetView.iterator()Lcom/google/common/collect/UnmodifiableIterator;\n    Caused by: java.lang.NoSuchMethodError: com.google.common.collect.Sets$SetView.iterator()Lcom/google/common/collect/UnmodifiableIterator;\"}} \n[2018-09-24 10:50:22,084] Artifact foo:war exploded: Error during artifact deployment. See server log for details.\n[2018-09-24 10:50:22,084] Artifact foo:war exploded: java.lang.Exception: {\"WFLYCTL0080: Fehlgeschlagene Dienste\" => {\"jboss.undertow.deployment.default-server.default-host./foo\" => \"org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./foo: com.google.common.util.concurrent.ExecutionError: java.lang.NoSuchMethodError: com.google.common.collect.Sets$SetView.iterator()Lcom/google/common/collect/UnmodifiableIterator;\n    Caused by: com.google.common.util.concurrent.ExecutionError: java.lang.NoSuchMethodError: com.google.common.collect.Sets$SetView.iterator()Lcom/google/common/collect/UnmodifiableIterator;\n    Caused by: java.lang.NoSuchMethodError: com.google.common.collect.Sets$SetView.iterator()Lcom/google/common/collect/UnmodifiableIterator;\"}}\n```. ",
    "acez": "I have basically the same issue. I am using Spring-Boot 2.1 and io.swagger.core.v3.swagger-annotations and try to generate the swagger.json file with io.swagger.core.v3.swagger-maven-plugin. But the paths section in the resulting file is also missing. Would be great to have a solution for this.. ",
    "carlosjunior": "Problem solved. The problem was that I was using a version of the outdated swagger-maven-plugin. I changed the version and it is now working correctly.\n. ",
    "bjchambers": "This also comes up if you're using any kind of immutable-POJO (eg., AutoValue, Immutables, Lombok). You end up with a POJO like:\n@Immutable.Value // or @AutoValue, etc.\npublic abstract class Foo {\n  public abstract int bar();\n}\nYou can modify the values using the generated builder, but the properties in the model are reported as readOnly even if you explicitly set them to readonly in the annotation.. It looks like there are several problems causing this, any of which could fix it:\n\n\nA variable readOnly is set based on whether or not a setter is defined in the model:\nhttps://github.com/bjchambers/swagger-core/blob/master/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java#L371\n\n\nThis variable is updated based on the value of the readOnly field in the annotattion:\nhttps://github.com/bjchambers/swagger-core/blob/master/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java#L391\n\n\nNote that this only happens if the value of the readOnly field is true, so this doesn't help.\n\nThe value of read only in the property is set using the _findReadOnly method.\n\nhttps://github.com/bjchambers/swagger-core/blob/master/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java#L496\nNote that this duplicates the lookup that happened in 2. It also correctly calls setReadOnly(false).\n\n\nThen, if the property currently has a value of null for getReadOnly, it is overwritten with the field.\nhttps://github.com/bjchambers/swagger-core/blob/master/modules/swagger-core/src/main/java/io/swagger/jackson/ModelResolver.java#L501\n\n\nAbstractProperty.setReadOnly(...) has the following:\n\n\npublic void setReadOnly(Boolean readOnly) {\n        if (Boolean.FALSE.equals(readOnly)) {\n            this.readOnly = null;\n        } else {\n            this.readOnly = readOnly;\n        }\n    }\nhttps://github.com/bjchambers/swagger-core/blob/master/modules/swagger-models/src/main/java/io/swagger/models/properties/AbstractProperty.java#L207 \n\nSo, there seems to be two places where the value of the property is looked up is considered, but in both places the value is ignored. \nIn the first, the variable readOnly is only set to true if the annotation has a true value, so it is impossible to use the annotation to set the desired value.\nIn the second, we extract and pass the right value to setReadOnly, but since it is false we turn it into null, and then overwrite it with the incorrect value of the field.\nNot being familiar with the intentions of this code, it seems like there are several possibilities:\n\n\nTreat null and false differently in AbstractProperty. One can be \"not explicitly set\" and the other \"explicitly set to false\". I have verified that changing the behavior of setReadOnly to be this.readOnly = readOnly fixes the problem.\n\n\nChange the logic in ModelResolver to be something like:\n\n\nBoolean isReadOnly = _findReadOnly(member);\nif (isReadOnly == null) {\n  isReadOnly = !hasSetter;\n}\nproperty.setReadOnly(isReadOnly);\nThe first option seems to be the smallest fix but affects the semantics of the read only property, while the second is a bit larger, but removes duplication of some logic and seems to generally clean things up.\nI'm happy to send a quick PR to fix this someone familiar with the intentions can suggest the proper fix?. One problem with fixing this is that it changes the behavior of the default value. For instance:\n@ApiModelParameter(value = \"foo\")\npublic int getFoo() { ... }\nThe default value has readOnly = false, which was previously being ignored, resulting in an API that indicated read only is true. Now it would respect the default, so the resulting API indicates it is not read only.. ",
    "zjedi": "\ncreate custom class extends TypeNameResolver, nameForType(JavaType) is what you want to override\ncreate and use custom ModelResolver\noverride _findTypeByName(JavaType, BeanDescription) in order to used yourTypeNameResolver - This could have been easier if there was a getter for it instead of plain protected property.\n. \n",
    "pawsaw": "It have been a while... any updates on this?\nRegards, Pawel. In version 2.0.0-rc2\nHaving a resource...\n@Path(\"/persons\")\nclass PersonResource { ... }\nand\n@ApplicationPath(\"/api\")\nclass JerseyConfig extends ResourceConfig {\n    public JerseyConfig() {\n        super();\n        register(PersonResource.class);\n        // ...\n    }\n}\n... I would expect the URIs for each GET, POST, ... annotated method to be /api/persons\nBest regards, Pawel\n. @webron Than you for your answer...\nHow? The @Content annotation doesn't accept @ArraySchema. I can't find anything in the documentation (Wiki) about this.... I think it's related to 2397. @frantuma Great! Thanks!. ",
    "Spectrality": "Any reason this hasn't been approved/pulled? This file is causing major issues for anyone using Swagger that also wants to use their own logback file. Seems to me the logback-test.xml file is currently in the wrong place, since it would seem it should be in the test resources.. @frantuma . @frantuma @fehguy  any chance you could update the swagger-project/swagger-servlet version to 1.5.17 to push the change to Maven repo? Or do you have a timeframe for when that might happen?. ",
    "alexeytokar": "requires java 8 . ",
    "sinboun": "I met you, too. ",
    "willcain": "If you are using SpringFox, a work-around is:\nimport springfox.documentation.spring.web.plugins.Docket;\n...\ndocket.ignoredParameterTypes(ErsEntity.class);\nCredit: https://github.com/springfox/springfox/issues/1139#issuecomment-171005465. ",
    "Sridhar-1987": "Raised the issue wrongly on Swagger-core. Moving issue to Swagger-codegen.\nhttps://github.com/swagger-api/swagger-codegen/issues/6434. ",
    "stemar87": "Sorry, did the report in a rush on the train and forgot the most important thing :/\nHere it is, although I'm afraid it isn't of much help...\nFYI omitted trace is simply the call to beanConfig.setScan(true); in my implementation.\nException in thread \"main\" java.lang.NullPointerException\n    at io.swagger.jaxrs.config.BeanConfig.classes(BeanConfig.java:304)\n    at io.swagger.jaxrs.config.BeanConfig.scanAndRead(BeanConfig.java:240)\n    at io.swagger.jaxrs.config.BeanConfig.setScan(BeanConfig.java:221)\nPS: I edited the original post which contained an inconsistency in registered package names.. ",
    "chaudhryfaisal": "Please restart or rerun the build. I pulled these changes locally to test end to end and I have no issues. Would love to see this in swagger core soon. \n. Please restart or rerun the build. I pulled these changes locally to test end to end and I have no issues. Would love to see this in swagger core soon. \n. ",
    "jasperkremer": "@tobilarscheid I am not involved with this project so also don't know when it will be merged.\nBut like you, I am also eagerly waiting for this to be merged.. ",
    "cunhazera": "@webron yes, without having to add nickname to @ApiOperation.\nI want that in the moment when swagger.json is being generated I can intercept the generation to put some custom operationId (just a random string). Because I'm facing a problem: when there are two methods with same name (even in different classes) it uses the method name as operationId, and it causes conflicts in the file.. I think I used the wrong term. It should be in compile time, when swagger scan classes to make the swagger.json file.. Is there any chance to adopt another generation strategy?. I created another issue: https://github.com/swagger-api/swagger-core/issues/2433\nif you need anything else just tell me.. 1.5.16. ",
    "CN-jaycee": "I have the same problem.. ",
    "reftel": "We have a similar use case. Our resource methods do not change, but we use a SwaggerListener to produce a layering on top of the resource methods, which can be thought of as being a profile of the methods - raising the semantic level, even though it's the same resource methods handling the requests. The profile is based on a metamodel that we can refresh, but since we can't refresh the Swagger object built from reading from our SwaggerListener, it gets out of date.\nA way of invalidating the results of a previous scan would really be appreciated.. Fixed. Thanks!. ",
    "ymohdriz": "Hi @rtomsick,\nI can see that removing the 'response = void.class' is the workaround.\nThanks,\nMohammed Rizwan\n. Hi @rtomsick,\nFrom the example and the spec produced posted by you, I can see that \n@ApiResponse(code = 404, message = \"no such user or identity\") produces the below spec without the schema field\n\"404\" : {\n            \"description\" : \"no such user or identity\"\n  }\nThis behavior of 404 is applicable to 204 status code because the field 'schema' generation is not related to status code, but related to 'response' attribute of the @ApiResponse annotation.\nThanks,\nMohammed Rizwan. Can you specify the version of swagger-annotation jar to reproduce this issue?. Hi @itachizhu,\nRegex is not supported in the path. So alternatively you can specify the path as \"/{anyPath}\" where anyPath is the path parameter and you can use @ApiImplicitParam as below:\n@ApiImplicitParam(value = \"Any path\",\n                                                             name = \"anyPath\",\n                                                             required = true,\n                                                             paramType = \"path\",\n                                                             dataType = \"string\")\nThanks,\nMohammed Rizwan. Hi @Kporal,\nWhen additionalProperties is provided in the response schema, MapProperty is mapped where the field 'properties' (Map) is missing which cause this issue. \nI am not sure is it intentional, but it looks like issue as field 'properties' info is missing and it should to be added. \nThanks,\nMohammed. Hi @webron,\nShall I add the properties field in MapProperty and go ahead with the pull request?\nThanks,\nMohammed. Hi @konyaj,\nYou can use the method getOperationMap() in Path.java which returns a map Map and the keys in the returned map indicate the operations.\nRefer https://github.com/swagger-api/swagger-core/blob/master/modules/swagger-models/src/main/java/io/swagger/models/Path.java#L169\nThanks,\nMohammed. Hi @giuliopulina,\nWhen a property is defined as required, it has to be in the 'properties' list. Here 'unassigned' is missing in the 'properties' list.\nData type for the field 'required' is boolean in 'Property' interface whereas it's List in ModelImpl.java. \nHandling required in Property and ModelImpl is different due to historic reasons. Please find the similar question here https://groups.google.com/forum/#!topic/swagger-swaggersocket/Z0-Tfd6MOIw which may be useful.\nThanks,\nMohammed Rizwan\n. Hi @giuliopulina,\nAdding a property as required without defining it will not add any value.\nDefine the 'unexisting' field in the 'properties' list as below and address.getRequiredProperties() will contain the 'unexisting' also\n      **unexisting:\n        type: string**\n\nThanks,\nMohammed Rizwan. Hi @giuliopulina,\nYou can use a swagger-validator to validate a swagger. Swagger parser does not guarantee about the validation as per https://github.com/swagger-api/swagger-parser\nCome back to the original issue 'ObjectProperty doesn't retain 'original' required properties'. It will retain only if that property 'unexisting' is defined in the properties list. You can close this issue as it's not useful to store the requiredProperties and requiredProperties is calculated when address.getRequiredProperties() is called based on the required field of all the properties.\nThanks,\nMohammed. Method name should be setVendorExtensions. We have a similar method in AbstractParameter.java. Hi @AresS31,\ngetType() is available in AbstractSerializableParameter.java\nThanks,\nMohammed. Hi @frantuma,\nOn which swagger-core lib version, this change will be available as it's not available in 1.5.20 version.\nThanks,\nMohammed. Required field is not possible in composed model as it contains the field List allOf where each element in the allOf is a sub class of Model.\nPlease check your spec against swagger-editor.\nThanks,\nMohammed. Required field is not possible in composed model as it contains the field List allOf where each element in the allOf is a sub class of Model.\nPlease check your spec against swagger-editor.\nThanks,\nMohammed. Hi @KK0690,\nYou can find the getItems() in io.swagger.models.properties.ArrayProperty as the type of the properties serviceCharacteristic and serviceRelationship is array.\nThanks,\nMohammed. Hi @KK0690,\nYou can find the getItems() in io.swagger.models.properties.ArrayProperty as the type of the properties serviceCharacteristic and serviceRelationship is array.\nThanks,\nMohammed. Hi @frantuma,\nThanks for the clarification.\nThanks,\nMohammed. Hi @frantuma,\nThanks for the clarification.\nThanks,\nMohammed. Hi team,\nCan you please ignore one commit (Add summary property in ApiResponse ) out of 3 commits and consider the remaining 2 commits for merge.\nThanks,\nMohammed. Hi team,\nCan you please ignore one commit (Add summary property in ApiResponse ) out of 3 commits and consider the remaining 2 commits for merge.\nThanks,\nMohammed. Hi @sdnkhla,\nThis is expected as form parameters are replaced with request body in OAI 3.0.\nThanks,\nMohammed. Hi @sdnkhla,\nThis is expected as form parameters are replaced with request body in OAI 3.0.\nThanks,\nMohammed. ",
    "rycler": "Hi, did you manage to fix this?\n@ApiParam(value = \"vars\", required = true, allowableValues=\"projects, issueTypes\")\nthis swagger generated client code accepts any value in Controller, so it seems like allowable values are not working as intended.\nMy comment is not solution :( I'm just demonstrating the problem.\nI added a manual if statement in the controller, where I check the value and throw an exception if it doesnt match any of the desired values.. ",
    "clouless": "no i used some placeholders to transform projects;;;issueTypes to projects,issueTypes\n@ApiParam(allowableValues = \"projects,issueTypes,projects;;;issueTypes\", required = false, value = \"You can specify one or more keys as comma separated list\")\nTherefore the maven-replacer-plugin runs after the swagger plugin to replace the string on the produced swagger.json files.\nxml\n            <plugin>\n                <groupId>com.google.code.maven-replacer-plugin</groupId>\n                <artifactId>replacer</artifactId>\n                <version>1.5.3</version>\n                <executions>\n                    <execution>\n                        <!-- EXECUTE RIGHT AFTER SWAGGER!!! -->\n                        <!-- NOTE: since Maven 3.0.3, for two plugins bound to the same phase, the order of execution is the same as the order in which you define them in the pom.xml!!! -->\n                        <!-- http://maven.apache.org/ref/3.3.3/maven-core/lifecycles.html -->\n                        <phase>compile</phase>\n                        <goals>\n                            <goal>replace</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <includes>\n                        <include>${basedir}/src/main/resources/api/swagger.json</include>\n                        <include>${basedir}/target/swagger.json</include>\n                    </includes>\n                    <token>projects;;;issueTypes</token>\n                    <value>projects,issueTypes</value>\n                </configuration>\n            </plugin>\nWhich produces the result I want:\njson\n       {\n          \"name\" : \"expand\",\n          \"in\" : \"query\",\n          \"description\" : \"You can specify one or more keys as comma separated list\",\n          \"required\" : false,\n          \"type\" : \"string\",\n          \"enum\" : [ \"projects\", \"issueTypes\", \"projects,issueTypes\" ]\n        }\nYour solution will not produce the desired result. ",
    "hardeepkaur17": "Hi\nYes, this is specific to Java. In swagger spec, we can do it but unable to\nachieve same with java annotations. How to specify referenced schema in\njava for request body.\nThanks\nOn Sat, Nov 11, 2017 at 1:48 AM, Francesco Tumanischvili \nnotifications@github.com wrote:\n\nHi, which version of the spec are you referring to? and is this specific\nto swagger-core java project?\ne.g in version 2.0 a request body schema reference is supported, as in the\nexample in the spec\nhttps://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/2.0.md#body-parameters\n{\n  \"name\": \"user\",\n  \"in\": \"body\",\n  \"description\": \"user to add to the system\",\n  \"required\": true,\n  \"schema\": {\n    \"$ref\": \"#/definitions/User\"\n  }\n}\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/2477#issuecomment-343653115,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AfBciMEgaBMhSaKH30ghh4hQQquQGsNdks5s1W1ngaJpZM4PuZcB\n.\n. \n",
    "hanrattyjen": "Having the same issue. Any workaround? I need to have the slash included in the generated JSON.. ",
    "giuliopulina": "Hello @ymohdriz, thank you for your answer.\nI completely understand your point, but I think that \"original\" required properties should be retained somewhere in ObjectProperty, in order to be able to verify them in a later stage.\nswagger-parser is not failing when a not-existing required property is declared, so I have no way to validate it after the parsing has been completed.\nAnyway, if you don't think it won't be possible/useful I'll close the issue.. Hello @ymohdriz, thank you for your answer.\nI completely understand your point, but I think that \"original\" required properties should be retained somewhere in ObjectProperty, in order to be able to verify them in a later stage.\nswagger-parser is not failing when a not-existing required property is declared, so I have no way to validate it after the parsing has been completed.\nAnyway, if you don't think it won't be possible/useful I'll close the issue.. Hi @ymohdriz ,\nthe issue is that I want to validate such errors before code generation: I want to be able to say \"Required property \"unexisting\" is not defined among object properties\" and then fail.\nGiven the current status, I can't do such a validation.. Hi @ymohdriz ,\nthe issue is that I want to validate such errors before code generation: I want to be able to say \"Required property \"unexisting\" is not defined among object properties\" and then fail.\nGiven the current status, I can't do such a validation.. Hi @ymohdriz I'm actually trying to implement a Java validator that acts after swagger has been parsed from swagger-parser: losing the information about 'original' required field, I can't do one specific type of validation I want to implement.\nI'll try another way, thanks for helping.\nGiulio. Hi @ymohdriz I'm actually trying to implement a Java validator that acts after swagger has been parsed from swagger-parser: losing the information about 'original' required field, I can't do one specific type of validation I want to implement.\nI'll try another way, thanks for helping.\nGiulio. ",
    "lhauspie": "is there someone to help me please ?. is there someone to help me please ?. ",
    "simonamc": "@lhauspie Yeah I think this is a bug too, ApiModelProperty defaults example to the empty string, for all numeric Properties this is being mapped to null as parse is throwing NumberFormatException and not modifying the null example.  However Boolean#parseBoolean behaves differently parsing the empty string (and null) as false.  I believe that BooleanProperty#setExample needs to treat these as special cases.. I've created the following pull request\nhttps://github.com/swagger-api/swagger-core/pull/2561. ",
    "ktalebian": "@webron is there a timeline for when more complex types can be included? Also, then what is the point of the type in @ApiParam?. ",
    "62mkv": "May I ask if codegen has had any progress on this, or how do I find out ?. ",
    "rpgayatri": "Thanks a lot @webron \nIt worked with the latest version.. ",
    "davidmerrick": "Ah, I see it now. Most of what used to be under ApiModelProperty now lives under Schema.. The thing is, the properties aren't parsing within the ref, either. i.e. there's no \"example\" parameter inside the Foo object. Is there something I need to do to get those to parse correctly?. Or is there another way to define an example for a $ref?. I didn't. Will give that a try.. That worked! Thanks.. ",
    "NicolaSpreafico": "I actually solved the first problem, the @Provider was indeed needed in the interface to make the @SwaggerDefinition annotation working properly, my mistake was not adding the interface package to the jersey.config.server.provider.packages configuration.\nThe second problem (version and title attribute not considered) is still unsolved.. ",
    "gibson042": "Ping.. ",
    "archenroot": "@webron - thank you very much, it is actually as I expected...\nActually the more I work on design, the more I am completely getting rid of any kind of REST, the only remaining REST user was UI service, but I am now i working on POC where UI service will be also completely async...so... \n. Just to add something. In pure event driven architecture there is even nothing like async response/callback. There exists only series of events. When you dive deeply into this, even the CQRS pattern is not something what should be exposed to any client or service.\nIt is only sequence of:\n1 - A did this -> let the world know\n2 - B listen to what A did -> B does function on what A did -> let the world know\n3 - C listen to what B did > C does function on what B did -> let the world know\nnothing like async response/callback...\nThe more I think about pure async event arch, it is not about API at all, it is like history processing, where one event is implemented completely independently.\nThe real binding things together is actually the definition of event chain in so called event storming sessions and required sharing DTO. What event-driven architecture implemented with UI together brings to the world is merged platform of middleware with BPM engine together (all is stateless including UI, but event sourcing serves as process sequence tracker and replayer if required..). \nThe current microservice architectures I read on internet or books are all kind of mixture of what happend(pure history event) and of what I ask to happen(commands) and in large scale this is creating confusion (I don't talk about fact that symbols like CRUD should be completely removed). If I talk about event driven, there is no space for what will happen, or what I ask to happen, no request, async response/callbacks, it is simply only about what happened and if I am interested use this information, end of story :-))\nI will write some blog about this.... ",
    "Splash34": "+1. ",
    "ccosentino": "+100\nThis is a huge issue for us.  We have hundreds of APIs and add more every month.  The fact that swagger silently overwrites models if they have duplicate names has caused a lot of issues; most importantly of which is that we cannot trust the swagger documentation. It would be nice if the scanner would at least log when it finds a duplicate api model. \nKeep in mind this is only manifests itself if you have two models with the same value but have different structures. In our case, we had many models with duplicate values, but the structures were the same. However, for many models with the same value, the models were similar but not identical, which caused further confusion since things looks mostly correct.\nFor those struggling with this, our solution was to write our own annotation scanner and search for apimodel annotations with a duplicate value, then going into the code and manually making them unique.  We are working this process into our pre-promote workflow. But it would be better if the tool didn't allow this to happen in the first place.. ",
    "amontenegro": "+1. ",
    "redmitry": "Great!\nI see there are many changes in annotations since RC2 ;-).\nIt works.\nThank you very much.\nD.. ",
    "naveenkumar-007": "Sir\nI am using 1.5.6. ",
    "flavienlaurent": "Hi there,\nI need the same thing (swagger with authorize on Keycloak using openID). Any news on this?\nThanks in advance. ",
    "langecode": "Yeah, that could also be the case. Its just that the current stack trace is rather confusing - took a little debugging to figure out what was happening :-). ",
    "olemartin": "In order to make it work, as I expected it should, I had to do this:\n```\npublic class MyApiListingResource extends ApiListingResource {\n@Override\nprotected Swagger process(Application app, ServletContext servletContext, ServletConfig sc, HttpHeaders headers, UriInfo uriInfo) {\n    Swagger swagger = super.process(app, servletContext, sc, headers, uriInfo);\n    swagger.setHost(uriInfo.getBaseUri().getHost() + \":\" + uriInfo.getBaseUri().getPort());\n    return swagger;\n}\n\n}\n```. ",
    "pavlos163": "Thanks for the answer. I did, yes, and I got the same result.. That was it, thanks. As they are basically wrappers for strings, I entered type=\"string\" instead. However, they do follow a specific pattern (for example the Country is a two character country code). Is there a way to show that somehow in the Swagger spec?. I am getting the same issue after upgrading my Jackson to 2.9.5:\n<dependency>\n    <groupId>com.fasterxml.jackson.core</groupId>\n    <artifactId>jackson-annotations</artifactId>\n    <version>2.9.5</version>\n</dependency>\n| Q                                 | A\n| --------------------------------- | -------\n| Which Swagger-Core version?       | 1.5.19\n| Which Java version?               | Kotlin 1.2.40\n| Which JAX-RS framework & version? | 1.19\nI have a payload for a POST endpoint that has such annotations inside:\nfun call(payload: Payload): Response\ndata class Payload(\n        @JsonProperty(\"name\") val firstName: FirstName,\n        @JsonProperty(\"surname\") val surname: Surname)\nIt seems like these properties will always be firstName and surname in the resulting Swagger spec.\nIs this because of the code being Kotlin?. Related issue: #2578 . ",
    "sullis": "cc: @frantuma . ping @frantuma . ",
    "gte619n": "Has anyone been able to verify this? I am getting the behavior as documented by @pk1914 . I'm using swagger-core and swagger-jaxrs 1.5.18 with jackson-core and jackson-databind 2.9.4.. ",
    "loudbrightraj": "Tried with @JsonbProperty it works.. ",
    "duerrm": "Appreciate your work! Thank you very much!!!. ",
    "darylfoster": "@frantuma, I have created a test project that reproduces the issue. It appears that the key to reproducing the issue lies in the scope of my dependency declaration in the pom file.\nI have a SampleEntityLibrary project which defines an artifact called Sample-model packaged as a jar. This project has my SampleModelEntity class which has been annotated with ApiModel and ApiModelProperty.\nI have a separate SampleApi project which defines two artifacts:\n\n\nSample-rest - defines REST endpoints for retrieving the SampleModelEntity type. It defines a war package.\n\n\nSampleApi-ear - A deployment package for Sample-rest. It defines a deployable ear package.\n\n\nI have included the Sample-model artifact as a dependency in the SampleApi-ear pom file. As a result, I have labeled the scope of the Sample-model dependency as provided in the pom file for Sample-rest. The provided scope seems to be causing the issue.\nYou can view my projects here:\nSampleEntityLibrary\nSampleApi\n  . @frantuma, the key issue is in this file:\nSampleApi/sampleApi/pom.xml\nThat file includes the following dependency:\n<dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>Sample-model</artifactId>\n            <version>1.0.0</version>\n            <scope>provided</scope>\n        </dependency>\nOnce deployed, it produces the following yaml:\ndefinitions:\n  SampleModelEntity:\n    type: \"object\"\n    properties:\n      level:\n        type: \"integer\"\n        format: \"int32\"\n      description:\n        type: \"string\"\n      time:\n        type: \"string\"\n        format: \"date-time\"\n      sampleModelEntityId:\n        type: \"string\"\n        format: \"uuid\"\nHowever if I remove the scope from the dependency declaration and redeploy, I get the expected yaml:\ndefinitions:\n  SampleModelEntity:\n    type: \"object\"\n    required:\n    - \"level\"\n    - \"time\"\n    properties:\n      level:\n        type: \"integer\"\n        format: \"int32\"\n        description: \"level\"\n      description:\n        type: \"string\"\n        description: \"description\"\n      time:\n        type: \"string\"\n        format: \"date-time\"\n        description: \"time\"\n      sampleModelEntityId:\n        type: \"string\"\n        format: \"uuid\"\n        example: \"123e4567-e89b-12d3-a456-426655440000\"\n        description: \"id\"\n        readOnly: true\n    description: \"This is a sample entity from the Model package.\"\n  . That fixed it. Thanks for the help.. ",
    "thoduerr": "Hi - is something unclear? Is there an ETA for this fix?\nThanks, Thomas.. Hi - is something unclear? Is there an ETA for this fix?\nThanks, Thomas.. ",
    "duerr": "I saw that there is a Pull request that seems to be related and provides a fix for this issue. Can you please verify and give an ETA we need this fixed asap.\nhttps://github.com/swagger-api/swagger-core/pull/2284\nThanks, Thomas.. ",
    "sebawagner": "@viachm That is a different class not found \"javax.cache.management.CacheStatisticsMXBean\". But it usually simply means the class is not in the classpath of your application. So just make sure the Jar and all dependencies are available to the application that runs the swagger command at runtime.. swagger will also inspect the input and output objects of all methods at run time. That is how it came to try to resolve that class you describe. So actually your package com.test.server.resources => It will have a reference to javax.cache.management.CacheStatisticsMXBean at runtime. It's just not so obvious as application servers enhance beans with caching and other features.. I don't think so. It is your web app that is the problem. So if any alternative (but you should really rather fix the classpath issue) is to get your Webapp to somehow not use the cached version of the bean. Maybe by simply removing the JAR altogether. But really, it is a web app configuration. Not swagger.. ",
    "tyagiakhilesh": "This works for me as well.\n<dependency>\n                <groupId>io.swagger</groupId>\n                <artifactId>swagger-jaxrs</artifactId>\n                <version>1.5.18</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.reflections</groupId>\n                        <artifactId>reflections</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.reflections</groupId>\n                <artifactId>reflections</artifactId>\n                <version>0.9.10</version>\n            </dependency>\nNow, I am not sure if my App is problem or reflection is ? I guess reflection needs some reflection now.. :-). ",
    "myok12": "+1. The swagger spec defines this, but it's not available: https://swagger.io/docs/specification/2-0/describing-parameters/. ",
    "AresS31": "Thanks @ymohdriz!. ",
    "lociko": "Thank you for your quick response.\nI like the idea to use the ReaderListener, but it hard to write a handler for a case when I want to replace all external examples to real value. For example: \n```\n@OpenAPIDefinition\npublic class BasePathModifier implements ReaderListener {\n    @Override\n    public void beforeScan(Reader reader, OpenAPI openAPI) {}\n@Override\npublic void afterScan(Reader reader, OpenAPI openAPI) {\n    initExternalExamples(openAPI);\n}\n\nprivate void initExternalExamples(OpenAPI openAPI) {\n    for (PathItem pathItem : openAPI.getPaths().values()) {\n        for (ApiResponse apiResponse : pathItem.getGet().getResponses().values()) {\n            if (apiResponse.getContent() == null) continue;\n\n            for (MediaType mediaType : apiResponse.getContent().values()) {\n                for (Example example : mediaType.getExamples().values()) {\n                    example.getExternalValue();\n                    // external value contains a path to local resource\n                    // get that resource and set it to values as JSON\n                    example.setValue(\"{\\\"someExampleParam\\\": 1}\");\n                }\n            }\n        }\n    }\n}\n\n}\n```\nMaybe I can create a listener to exact @ExampleObject annotation avoiding that code mash. Does it possible? \n  . Any updates? . Thank you to the quick fix! . Can someone remove this bug, it is duplicate of https://github.com/swagger-api/swagger-core/issues/2619. ",
    "JWood48": "Great! Is there a roadmap or release schedule for swagger-core with OpenAPI support?. ",
    "derekm": "I was able to get this working with only a bean-discovery-mode=\"all\" CDI 2.0 META-INF/beans.xml file in Swagger 2.0's swagger-jaxrs2.\nWould you please accept a pull request this 2.0 release candidate cycle to include a beans.xml so your integration can be nicely auto-discovered?\nAnother thing about swagger-jaxrs2: it doesn't transitively include Guava & Jackson, so you have to discover those dependencies through failure.... PS: this beans.xml is helping me seamlessly integrate with @johnament's @hammock-project. Removing swagger-jersey2-jaxrs because CDI-enabling a well-integrated release version could break existing integrations.. I don't know if a CDI 1.1 beans.xml would be preferred or is necessary for broader compatibility or not, but here is info on CDI 1.1 beans.xml: https://blogs.oracle.com/theaquarium/default-cdi-enablement-in-java-ee-7. Yes, I could add a unit test... The unit test would need to use Weld or Arquillian. I'll see about coming up with something ASAP. Thanks!. @pjfanning -- I've added tests that use a portable CDI Extension to watch for @Path and @Provider annotations during CDI container lifecycle events. The tests interrogate this extension to check what classes were registered by the CDI container, confirming that the desired classes have been discovered.. @bcluap -- This change could break existing swagger-jaxrs2 integrations in CDI-enabled environments. Single-coordinate Swagger integrations should be able to simplify themselves with this change, most likely by deleting wrapper objects or support code.. @pjfanning & @frantuma -- Swagger 2.0.0-rc4 release notes should indicate that swagger-jaxrs2 is now CDI-enabled with a bean-discovery-mode=\"all\" CDI 2.0 beans.xml. System integrators & early adopters will need to simplify their pre-rc4 Swagger integrations to accommodate this change.\nI'm not sure how to mark this on a milestone somewhere so that the release note is sure to be created.\nThanks!. PS: I commented on this breakage in the corresponding Issue and recommended against breaking Swagger 1.5's swagger-jersey2-jaxrs: https://github.com/swagger-api/swagger-core/issues/2617#issuecomment-358414376. Here is what the change in Hammock will look like if CDI-enablement holds:\n  https://github.com/hammock-project/hammock/pull/125/files\n(minus .addPackage(\"io.swagger.v3.jaxrs2.integration.resources\") in the tests). I think 2.0.0-rc4 actually does have the CDI-enablement in it.\nHere's how I was able to upgrade Hammock: https://github.com/hammock-project/hammock/pull/125/files\nNotice how integrators using CDI should be able to delete pointless code since swagger-jaxrs2 now includes CDI support.. Oops, sorry, I was wrong... My test is lying to me! This is what our final upgrade will look like if CDI-enablement lasts until rc5, except without the .addPackage(\"io.swagger.v3.jaxrs2.integration.resources\") part in the Arquillian @Deployment.. ",
    "jessemillar": "While my problem is still not solved, I found another issue here discussing the same thing with no resolution.. While my problem is still not solved, I found another issue here discussing the same thing with no resolution.. It appears that when manually writing a swagger.json/openapi.json file, the standard is to define each response by hand. $ref allows for reuse of parameters and responses (e.g. $ref: '#/components/schemas/ArrayOfUsers') which is essentially the same as defining a parameter's description with a Java String variable (e.g. @Parameter(description = nodeIdParam)). Closing this issue because I'm no longer convinced that this is a shortcoming of the swagger-core library.. It appears that when manually writing a swagger.json/openapi.json file, the standard is to define each response by hand. $ref allows for reuse of parameters and responses (e.g. $ref: '#/components/schemas/ArrayOfUsers') which is essentially the same as defining a parameter's description with a Java String variable (e.g. @Parameter(description = nodeIdParam)). Closing this issue because I'm no longer convinced that this is a shortcoming of the swagger-core library.. ",
    "lipgnick2017": "The way to tell swagger which resource class to be scanned is : I pass the instance of my jax-rs Application sub class to BaseOpenApiResource.getOpenApi  method,  so swagger will get all my resource class from the Application instance.. Previously, I was using swagger-jaxrs2 2.0.0-rc1 , it did not display any of models of swagger itslef.. Hi , \n Thank you for the quick reply, following the key classes to bootstrap swagger.\n========Application : ===============================\n@ApplicationPath(\"/restapi\")\npublic class RestApplicationv1 extends Application {\n    @Override\n    public Set> getClasses() {\n        Set> resources = new HashSet>();\n    resources.add(MyTestOpenApiResource.class);\n    resources.add(TestResource.class);\n    return resources;\n}\n\n=========================================\n=====MyTestOpenApiResource=================\n@Path(\"/apidocdata.{type:json|yaml}\")\npublic class MyTestOpenApiResource extends BaseOpenApiResource {\n    private static GbmsLogger logger = GbmsLogger.getLogger(GbmsOpenApiResource.class);\n//\n\n@GET\n@Produces({ MediaType.APPLICATION_JSON, \"application/yaml\" })\n@Hidden\npublic Response getOpenApi(@Context Application app, @Context HttpHeaders headers,\n        @Context UriInfo uriInfo, @PathParam(\"type\") String type) throws Exception {\n    //generate my own open api by java\n    this.setOpenApiConfiguration(Constant.geOASConfig(version));\n  //<servletConfig > , I created an inner implementation of ServletConfig interface to pass \n  //my api version as serverlet name,  also provided init param value\n    return super.getOpenApi(headers,  <servletConfig >, app, uriInfo, type);\n}\n\n=========================. all the libs for swagger are runtime  dependencies of  swagger-jaxrs2-2.0.0-rc3.jar\nanimal-sniffer-annotations-1.14.jar\naopalliance-repackaged-2.5.0-b32.jar\ncommons-lang3-3.6.jar\nerror_prone_annotations-2.0.18.jar\nguava-23.0.jar\nj2objc-annotations-1.1.jar\njackson-annotations-2.9.1.jar\njackson-core-2.9.1.jar\njackson-databind-2.9.1.jar\njackson-dataformat-yaml-2.9.1.jar\njsr305-1.3.9.jar\nosgi-resource-locator-1.0.1.jar\nreflections-0.9.11.jar\nslf4j-api-1.7.25.jar\nslf4j-log4j12-1.7.22.jar\nsnakeyaml-1.18.jar\nswagger-annotations-2.0.0-rc3.jar\nswagger-core-2.0.0-rc3.jar\nswagger-integration-2.0.0-rc3.jar\nswagger-jaxrs2-2.0.0-rc3.jar\nswagger-models-2.0.0-rc3.jar\nvalidation-api-1.1.0.Final.jar. ok, thanks,  I'll try,  let you know the result once it's done.. tried 2.0.0-SNAPSHOT version,  the problem still exists, \nif I roll back to 2.0.0-rc1, the problem dispears. Actually, I tried that before reaching for help,  add the @Hidden to MyTestOpenApiResource ,  originally, the path for the MyTestOpenApiResource  will be displayed on swagger UI, after adding the @Hidden, the path for MyTestOpenApiResource   is hidden, but models for swagger specification still are there. \nCurrently, I rolled back to 2.0.0-rc1 in this project,  I'll create another test project to test 2.0.0-rc3 again, will let you know once I get any result, thank you very much, . I tried again in a new test project with 2.0.0-rc3 +@Hidden,  yes, it works,  thank you very much,. ",
    "bcluap": "Since this change I am getting a NPE in TomEE when retrieving openapi.json:\njava.lang.NullPointerException\n    at org.apache.openejb.core.ivm.naming.MapObjectReference.getObject(MapObjectReference.java:34)\n    at org.apache.openejb.core.ivm.naming.IvmContext.lookup(IvmContext.java:183)\n    at org.apache.openejb.core.ivm.ContextHandler.lookup(ContextHandler.java:58)\n    at org.apache.openejb.cdi.CdiResourceInjectionService.lookup(CdiResourceInjectionService.java:200)\n    at org.apache.openejb.cdi.CdiResourceInjectionService.fillInjectionProperties(CdiResourceInjectionService.java:170)\n    at org.apache.openejb.cdi.CdiResourceInjectionService.injectJavaEEResources(CdiResourceInjectionService.java:130)\n    at org.apache.webbeans.portable.InjectionTargetImpl.injectResources(InjectionTargetImpl.java:278)\n    at org.apache.webbeans.portable.InjectionTargetImpl.inject(InjectionTargetImpl.java:209)\n    at org.apache.webbeans.portable.InjectionTargetImpl.inject(InjectionTargetImpl.java:205)\n    at org.apache.webbeans.portable.InjectionTargetImpl.inject(InjectionTargetImpl.java:196)\n    at org.apache.webbeans.component.AbstractOwbBean.create(AbstractOwbBean.java:126)\n    at org.apache.webbeans.component.ManagedBean.create(ManagedBean.java:67)\n    at org.apache.webbeans.context.DependentContext.getInstance(DependentContext.java:68)\n    at org.apache.webbeans.context.AbstractContext.get(AbstractContext.java:125)\n    at org.apache.webbeans.container.BeanManagerImpl.getReference(BeanManagerImpl.java:799)\n    at org.apache.openejb.server.cxf.rs.CdiResourceProvider$PseudoScopedCdiBeanCreator.create(CdiResourceProvider.java:286)\n    at org.apache.openejb.server.cxf.rs.CdiResourceProvider.getInstance(CdiResourceProvider.java:173)\n    at org.apache.cxf.jaxrs.JAXRSInvoker.getServiceObject(JAXRSInvoker.java:393)\n    at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:98)\n    at org.apache.openejb.server.cxf.rs.AutoJAXRSInvoker.invoke(AutoJAXRSInvoker.java:68)\n    at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:59)\n    at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:96)\n    at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:308)\n    at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)\n    at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:267)\n    at org.apache.openejb.server.cxf.rs.CxfRsHttpListener.doInvoke(CxfRsHttpListener.java:253)\n    at org.apache.tomee.webservices.CXFJAXRSFilter.doFilter(CXFJAXRSFilter.java:94)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    at org.apache.openejb.server.httpd.EEFilter.doFilter(EEFilter.java:65)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n    . Hi Irvin,\nI worked around it by telling the CDI implementation (openejb in TomEE) to\nignore the swagger package by\npassing: -Dopenejb.additional.exclude=swagger-jaxrs\nPaul Carter-Brown\n. ",
    "irvinhg": "@bcluap Thanks , the same worked for me.. ",
    "tsiq-karold": "Does anyone have any thoughts on this?  Or should I submit a PR before discussing this further?. ",
    "JayeshS": "@tsiq-karold, I have the same problem and your proposal makes sense to me.. ",
    "Evanthx": "@tsiq-karold Just a +1 to having your PR!. ",
    "jmilkiewicz": "@tsiq-karold  When can we expect your PR ? . ",
    "fuweichin": "Same issue in swagger-jaxrs2 2.0.0-rc4\nJava documentation says that javax.ws.rs.Path\n\nIdentifies the URI path that a resource class or class method will serve requests for. \nPaths are relative. For an annotated class the base URI is the application path, see ApplicationPath. For an annotated method the base URI is the effective URI of the containing class. For the purposes of absolutizing a path against the base URI , a leading '/' in a path is ignored and base URIs are treated as if they ended in '/'. e.g.:\n\n```java\n@Path(\"widgets\")\npublic class WidgetsResource {\n  @GET\n  String getList() {...}\n@GET @Path(\"{id}\")\n  String getWidget(@PathParam(\"id\") String id) {...}\n}\n```\nso I followed the example but swagger doesn't support it.\n. Sorry, it's my fault. Now the problem is gone.\nI didn't realized that groupId of artifact swagger-jaxrs2 was changed from io.swagger to io.swagger.core.v3 since version 2.0.0-rc3.\n. ",
    "JohneDoe": "```\n@XmlElement(name = \"MyPrOperTyName\")\n@XmlAttribute(name = \"MyPrOperTyName\")\n``\nshould work like@Schema(name=\"MyPrOperTyName\")`. ",
    "noltedx": "Hi,\nyou are right, it is in 2.0.0-SNAPSHOT and rc3 works well. But switching to rc4 leads to another issue: while trying to open Swagger UI in a browser it failed with: Failed to load spec! The related Stacktrace on server side looks like this: \n11:53:59,701 ERROR [de.ser.sedna.publicrs.ExceptionHandler] (default task-5) java.lang.IllegalStateException: Unsupported annotated member: io.swagger.v3.core.converter.ModelConverterContextImpl$1: java.lang.IllegalStateException: Unsupported annotated member: io.swagger.v3.core.converter.ModelConverterContextImpl$1\n        at com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector.findAnnotation(JaxbAnnotationIntrospector.java:1363)\n        at com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector.findSubtypes(JaxbAnnotationIntrospector.java:637)\n        at com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findSubtypes(AnnotationIntrospectorPair.java:258)\n        at com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findSubtypes(AnnotationIntrospectorPair.java:259)\n        at io.swagger.v3.core.jackson.ModelResolver.getSchemaAnnotation(ModelResolver.java:1425)\n        at io.swagger.v3.core.jackson.ModelResolver.resolveTitle(ModelResolver.java:1065)\n        at io.swagger.v3.core.jackson.ModelResolver.resolveSchemaMembers(ModelResolver.java:1333)\n        at io.swagger.v3.core.jackson.ModelResolver.resolveAnnotatedType(ModelResolver.java:203)\n        at io.swagger.v3.core.converter.ModelConverterContextImpl.resolveAnnotatedType(ModelConverterContextImpl.java:196)\n        at io.swagger.v3.core.converter.ModelConverters.resolveAnnotatedType(ModelConverters.java:59)\n        at io.swagger.v3.jaxrs2.Reader.parseMethod(Reader.java:838)\n        at io.swagger.v3.jaxrs2.Reader.parseMethod(Reader.java:663)\n        at io.swagger.v3.jaxrs2.Reader.read(Reader.java:391)\n        at io.swagger.v3.jaxrs2.Reader.read(Reader.java:167)\n        at io.swagger.v3.jaxrs2.Reader.read(Reader.java:194)\n        at io.swagger.v3.oas.integration.GenericOpenApiContext.read(GenericOpenApiContext.java:349)\n        at io.swagger.v3.jaxrs2.integration.resources.BaseOpenApiResource.getOpenApi(BaseOpenApiResource.java:49)\n        at io.swagger.v3.jaxrs2.integration.resources.OpenApiResource.getOpenApi(OpenApiResource.java:32)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:497)\n        at org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:179)\n        at org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:96)\n        at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:192)\n        at org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:103)\n        at org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:59)\n        at org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:96)\n        at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:308)\n        at org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)\n        at org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:267)\n        at org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:234)\n        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:208)\n        at org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)\n        at org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:191)\n        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:301)\n        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.doGet(AbstractHTTPServlet.java:225)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)\n        at org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:276)\n        at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)\n        at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)\n        at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)\n        at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)\n        at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\n        at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)\n        at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)\n        at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\n        at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)\n        at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)\n        at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)\n        at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)\n        at io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)\n        at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)\n        at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\n        at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)\n        at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\n        at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\n        at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:284)\n        at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:263)\n        at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)\n        at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:174)\n        at io.undertow.server.Connectors.executeRootHandler(Connectors.java:202)\n        at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:793)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\nI tried to debug and also simplified my project, to get an idea what's wrong, because it seems to be an problem while scanning the annotations, but i can't figure it out. May be you have an hint for me? . After switching to version 2.9.3 (we have 2.8.6) of jackson, 2.0.0-rc4 works well. \nRegarding the original issue, I' am not so familar with the CDI stuff and therefore, I'am not sure what exactly the point is. So I have to start further investigation to understand.. Hi,\nI have found a solution for me here: \nhttps://stackoverflow.com/questions/48107926/managed-bean-with-a-parameterized-bean-class-must-be-dependent-class-org-apach \n. ",
    "supercr7": "Hi @webron, thanks for the reply. I was not able to see a newline in the description. It's probably a swagger-ui version issue, as pointed out in the SO thread as well. I am using an earlier version and this issue might be because of that.. ",
    "eradford": "I've already crafted a test that stresses the bad logic and implemented the code fix. I will be submitting a pull request for this shortly.\nJust wanted to create this issue to document the problem and track work on it.. ",
    "maksymgendin": "I am facing the same problem here and found your issue via Google \ud83d\ude04 \nAfter some debugging I found the reason in io.swagger.jaxrs.Reader.\nIt happens only if you have in your classes-to-scan a combination of SomeInterface interface and for example SomeInterfaceImpl implementaion.\nSwagger is able to correctly read the definiton from SomeInterface but then he reads the definiotion from SomeInterfaceImpl and overwrites the consumes and produces fields in that same operation with null (because your SomeInterfaceImpl for sure will not have any @Consumes and @Produces annotations).\nTo fix this issue the definitions from the interface should be somehow merged with those from implementation. There is even a possibility to provide parentConsumes and parentProduces in io.swagger.jaxrs.Reader#read(...).. ",
    "abhisheklakra007": "Moreover is swagger-annotation included in swagger-core.. As per the project README, I should be using 2.X because my project is written in Java8, right ?\n. ",
    "denny99": "I finally found the solution.\nGlassfish has its own Guava Version which is not compatible with Swagger.\nTo fix it:\nCreate a glassfish-web.xml\nAnd add <class-loader delegate=\"false\"/>. Weird. It seems i've forgot to add the xml code or it got deleted?\nThe Glassfish xml should contain this option:\n<glassfish-web-app>\n    <class-loader delegate=\"false\"/>\n</glassfish-web-app>. ",
    "peteclark3": "@denny99 add what?  Seeing this issue too.... ",
    "vikrantk365": "I'm using spring boot with jersey.\nI got the same error with the latest version of guava.\nI could see that older version was clearly not getting added to the classpath.\nSo I tried multiple versions of guava. And the version that worked was com.google.guava:guava:24.1-jre ( <= 24.1-jre).. I'm using spring boot with jersey.\nI got the same error with the latest version of guava.\nI could see that older version was clearly not getting added to the classpath.\nSo I tried multiple versions of guava. And the version that worked was com.google.guava:guava:24.1-jre ( <= 24.1-jre).. Found the cause. I was using super.resolve in my converter for resolving part of the model which I think marks processed types and hence my code wasn't working. \nI replaced that part with new instance of ModelConverterContextImpl and it started working.\nThanks for such a quick response. Really apprecite it!. Found the cause. I was using super.resolve in my converter for resolving part of the model which I think marks processed types and hence my code wasn't working. \nI replaced that part with new instance of ModelConverterContextImpl and it started working.\nThanks for such a quick response. Really apprecite it!. ",
    "kilsbo": "Ah, you're right, thanks for quick feedback.. ",
    "rbsilva": "Thanks :). Thanks :). ",
    "roxanaghenea": "Thanks! I tried using this version but it seems our compiler is too old to support it.\n. I'm using Java 7.. When I compile the project I receive the warning:\n/home/rghenea/swagger-jaxrs-1.5.18.jar/io/swagger/jaxrs/listing/SwaggerSerializers.class: major version 51 is newer than 50, the highest major version supported by this compiler.\nAnd when I try to deploy the application the following error comes up: \n       Caused By: java.lang.UnsupportedClassVersionError: io/swagger/jaxrs/config/DefaultJaxrsConfig : Unsupported major.minor version 51.0.. Sorry, I just checked again and we are using Java version 1.6..\nI tried with all the swagger versions from 1.5.11 upward and the problem is the same.\nWhile for versions 1.5.6 - 1.5.10 the initial problem appears, with the getListing method.\nI suppose in this case we have to wait until we upgrade to a newer Java version? \n. Ok, thank you.. ",
    "billyblackmon": "The newest version doesn't help.. ",
    "ghsatpute": "@webron, I tried that using writing annotations\n@ApiModelProperty(value = \"Start time of launch\", required=true, dataType = \"long\")\n    private Date createdOn;\nI'm getting the same output as above.\nAm I missing something?. ",
    "sergeda": "I've checked also 1.5.17 version. The same issue. It was issue with play-swagger module. ",
    "PeaceInColour": "I started to look through the code base and found the bug. In ModelResolver.java from lines 127 - 155 there is this chunk of code:\njava\n        Property property = null;\n        if (propType.isContainerType()) {\n            JavaType keyType = propType.getKeyType();\n            JavaType valueType = propType.getContentType();\n            if (keyType != null && valueType != null) {\n                property = new MapProperty().additionalProperties(context.resolveProperty(valueType, new Annotation[]{}));\n            } else if (valueType != null) {\n                Property items = context.resolveProperty(valueType, new Annotation[]{});\n                // If property is XmlElement annotated, then use the name provided by annotation | https://github.com/swagger-api/swagger-core/issues/2047\n                if(annotations != null && annotations.length > 0) {\n                    for (Annotation annotation : annotations) {\n                        if(annotation instanceof XmlElement) {\n                            XmlElement xmlElement =   (XmlElement)annotation;\n                            if(xmlElement != null && xmlElement.name() != null && !\"\".equals(xmlElement.name()) && !\"##default\".equals(xmlElement.name())) {\n                                Xml xml = items.getXml() != null ? items.getXml() : new Xml();\n                                xml.setName(xmlElement.name());\n                                items.setXml(xml);\n                            }\n                        }\n                    }\n                }\n                ArrayProperty arrayProperty =\n                        new ArrayProperty().items(items);\n                if (_isSetType(propType.getRawClass())) {\n                    arrayProperty.setUniqueItems(true);\n                }\n                property = arrayProperty;\n            }\n        } \nUp until this point propType has the correct information in it which looks like: [collection type; class FooList, contains [simple type, class Foo]]. However, the above chunk is only checking for the key type (for Maps) and the content type. The content type (valueType) will be set to Foo and the else if will set the Property object to be an ArrayProperty object. The FooList data is dropped completely creating a response object of a Foo array.. I've been playing around with the code and have gotten some results (although my code at the moment is a bit hacky). I'm not 100% sure though what the end result should look like. As in, what's the correct formatting in the OpenAPI file for the response?\nThis is the best format I've got so far for displaying an object that inherits from ArrayList is this:\njson\n\"responses\": {\n                    \"200\": {\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"title\": \"FooList\",\n                            \"properties\": {\n                                \"FooList\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/definitions/Foo\"\n                                    }\n                                }\n                            }\n                        }\n                    },\nHowever, this format still doesn't accurately represent an object which inherits from ArrayList. Would using allOf be the correct way to go? I've only seen examples of allOf being used with definitions that can be referenced instead of Java classes like ArrayList.. Closing this issue since it isn't worth fixing right now. Swagger Core could handle this issue better but the 2.0 spec also doesn't have a perfect way to document an object which inherits an ArrayList object. The best solution is to use composition instead of inheritance as both Swagger Core doesn't have any issues with composition and it makes the code cleaner.. Running mvnw install still results in the above test failures. My environment details are:\n- OS: Windows 10 Pro version 1703\n- Java Version: 1.8.0 update 151\n- Maven Version: 3.5.2\n- Branch: master\nLet me know if there's any other details you want.. I noticed that the failed tests only run for mvn install. Running mvn package still runs the main test suite with 143 tests but skips the 4 tests above. . I've ran the swagger-jaxrs jar I generated using mvn package and everything seems to be working properly. Maybe I'm getting a false-positive?. I am running maven from the command line and mvn clean install produces the same result. I  also tried both at the root level and at modules/swagger-jaxrs but there was no change. I checked the testing-results.xml file I generated with mvn clean install and compared it to what I posted above. Both files are identical minus the expected differences in runtimes.. Are you able to tell me specifically what you'd be looking for? There's a decent amount of sensitive information in that output.. I'm getting a permission denied message when trying to push my branch. Do I need to get permission to push my branch or is there something wrong on my end?. For PRs do we have to assign someone to them ourselves?. Once I get permission to push (or figure out what's wrong if the issue is on my end) I can push a fix for this.. Would I be able to get someone to review this PR?. Would be really nice to get this fix in (or some feedback at least) since this issue is important for me. Otherwise, I'd have to keep using snapshots where I've manually added this change to the code.. There's an issue with my PR. By using @ApiResponse(code = 200) at the class level the response object will also be overwritten. This is because annotations overwrite instead of merging with any previously added data. This makes overwriting 200 responses at the class level useless. \nBeing able to change the 200/default response message/other properties at the class level is a really nice feature to have since the alternative is to add 200/default ApiResponse annotations to every method. The logic on applying response annotations would have to be changed for this PR to work though. I'd lean towards having the method response class assigned to the default response code at all times unless overwritten by annotations.. Thanks @frantuma! This is definitely on my list of things to fix right now. I was hoping to avoid requiring the use of an annotation for this but I don't think it's a big deal if I have to. I'll give that a shot and see what happens!. Looking through the code base and some of the test cases it looks like the situations being considered assume that anytime a method appears twice then it is a duplicate. This shows in Reader.java's getOperationId method which assumes that anytime a method with the same name appears it must be a duplicate. This makes sense for the test cases and examples where both the interface and implementation class contain JAX-RS annotations (eg. ReaderFixFor1959Test's testClassWithImplementedInterface test). I can only speak for RESTEasy but scenarios such as this can occur:\njava\npublic interface SomeInterface {\n    @GET\n    @Path(\"/example\")\n    @ApiOperation (value = \"Example\")\n    SomeResponse getExample();\n}\njava\npublic class SomeClass implements SomeInterface {\n    @Override\n    public SomeResponse getExample() {\n        ...\n    }\n}\njson\n\"/example\": {\n            \"get\": {\n                \"summary\": \"Example\",\n                \"operationId\": \"getExample_1\"\n}\nHere there should not be any duplicate endpoints as RESTEasy interprets there being only one getExample endpoint. However, Swagger Core mistakenly thinks there is a duplicate getExample endpoint. This is because Swagger Core would scan both SomeInterface and SomeClass, see the identically named methods, and mark whichever method gets scanned second as a duplicate. \nI'd suggest that Swagger Core should not mark a method as being a duplicate if it's implementing a method from an interface or a base class, and the method does not contain any additional JAX-RS annotations which will change the functionality of the method (eg. no @Path). If there are Swagger Annotations on the method in the derived/implemented method but no overriding JAX-RS annotations then the Swagger Annotations should overwrite the Swagger Annotations in the interface or base class. Thoughts?. After looking through the logic for determining when a duplicate endpoint exists I don't believe this is worth fixing immediately. It's easy to write a fix for this issue but an overhaul to the logic will be required to fix this case without breaking any other scenarios (eg. ReaderFixFor1959Test).  This fix doesn't seem worth it right now when the workaround to just have Swagger Core ignore any implementation classes (@Api(hidden = true)) works.. ",
    "tpruthi": "Thanks @webron . that solved the issue.. ",
    "jmini": "With swagger v3 (openapi: 3.0.1 spec), you can create an extension called x-example like this:\n@Operation(extensions = {\n    @Extension(properties = {\n            @ExtensionProperty(name = \"example\", value = \"[07768170, 04911945]\", parseValue = true)\n    })\n})\nSee https://github.com/swagger-api/swagger-core/issues/2723\n. Nice to know. Thank you.. Thank you for the link to the PR. \nI have searched only for issues mentionning ExtensionProperty I could have looked in the PR as well.. Work around until this is solved:\nI am using MapperFeature.SORT_PROPERTIES_ALPHABETICALLY feature like this:\njava\n Yaml.mapper()\n    .configure(MapperFeature.SORT_PROPERTIES_ALPHABETICALLY, true)\n    .writeValueAsString(openAPI);\nAnd because this is not suitable for the OpenAPI instance (the root object) itself, an OpenAPISerializer is registered (to force order for the OpenAPI serialization)\n```java\nimport com.fasterxml.jackson.core.JsonGenerator;\nimport com.fasterxml.jackson.databind.JsonSerializer;\nimport com.fasterxml.jackson.databind.SerializerProvider;\nimport io.swagger.v3.oas.models.OpenAPI;\nimport java.io.IOException;\nimport java.util.Map.Entry;\npublic class OpenAPISerializer extends JsonSerializer {\n@Override\npublic void serialize(OpenAPI value, JsonGenerator gen, SerializerProvider serializers) throws IOException {\n    if (value != null) {\n        gen.writeStartObject();\n        gen.writeStringField(\"openapi\", value.getOpenapi());\n        if(value.getInfo() != null) {\n            gen.writeObjectField(\"info\", value.getInfo());\n        }\n        if(value.getExternalDocs() != null) {\n            gen.writeObjectField(\"externalDocs\", value.getExternalDocs());\n        }\n        if(value.getServers() != null) {\n            gen.writeObjectField(\"servers\", value.getServers());\n        }\n        if(value.getSecurity() != null) {\n            gen.writeObjectField(\"security\", value.getSecurity());\n        }\n        if(value.getTags() != null) {\n            gen.writeObjectField(\"tags\", value.getTags());\n        }\n        if(value.getPaths() != null) {\n            gen.writeObjectField(\"paths\", value.getPaths());\n        }\n        if(value.getComponents() != null) {\n            gen.writeObjectField(\"components\", value.getComponents());\n        }\n        if(value.getExtensions() != null) {\n            for (Entry<String, Object> e : value.getExtensions().entrySet()) {\n                gen.writeObjectField(e.getKey(), e.getValue());\n            }\n        }\n        gen.writeEndObject();\n    }\n}\n\n}\n```\nLike this:\n```java\nSimpleModule module = new SimpleModule(\"OpenAPIModule\");\nmodule.addSerializer(OpenAPI.class, new OpenAPISerializer());\nYaml.mapper()\n    .registerModule(module)\n    .configure(MapperFeature.SORT_PROPERTIES_ALPHABETICALLY, true)\n    .writeValueAsString(openAPI);\n```\nI think a solution for stable serialization should be provided in the core.\nAny feedback?\n. I guess your question refers to a java backend (spring or jaxrs) and you are calling the URL that displays the spec corresponding to the running server.\nThe answer is no.\nExplanation: Javadoc is a comment in the code and the JVM can not access it at runtime.\n\nHave you a lot of those?\nI guess writing a small tool that copy Javadoc content into the @apioperation and @apiresponses annotation could a good solution.... This can be closed as it is fixed with #3091. I messed up during git fetch sorry for the noise and thank you!. ",
    "joyfulelement": "Q|A\n-- | --\nWhich Java version? | Java(TM) SE Runtime Environment (build 1.8.0_162-b12)\nWhich swagger-codegen used?  | swagger-codegen-cli-2.3.1.jar\nI've encountered the same issue as @PeaceInColour with the generated SDK for JavaScript (with swagger-codegen-cli-2.3.1.jar) via the annotated interface along with the implementation class in Java.\nUnlike #2643 , all the method names of the given API endpoint has 1 appended to it without any exception.\nThe result impacts all the generated markdown readme files *.md as well as the underlying source code.\ne.g.\nIn *.md files: \ncreateFileList1\nlistFileLists1\ndeleteFileList1\nIn *.js files:\nthis.createFileList1 = function(...) {...}\n...\nthis.listFileLists1 = function(...) {...}\n...\nthis.deleteFileList1 = function(...) {...}\nI suspect this might be a common issue, any suggestions or workaround would be much appreciated.. +1 Would be great if this enhancement gets in.. ",
    "iKrushYou": "I've found a workaround (although I don't think this should be the permanent solution:\n```\n    public class TestObject {\n    private String var1;\n\n    public TestObject() {\n    }\n\n    @JsonGetter(\"var\")\n    public String getVar1() {\n        return var1;\n    }\n\n    @JsonSetter(\"var\")\n    public void setVar1(String var1) {\n        this.var1 = var1;\n    }\n\n    @JsonSetter(\"newvar\")\n    public void setVar1x(String var1) {\n        setVar1(var1);\n    }\n}\n\n```\nAdding a second setter with the mapping from the input. ",
    "supersonicclay": "Looks like this actually a change from how 1.5 worked. You have to place the parameter annotations (@Parameter and @PathParam) on the implementing class in order for it to work. In 1.5, it would pick up the parameter annotations from the interface. The same is true if your method accepts a @Context argument. Without annotating the parameter with @Context in the implementing class, it treats it as the request body.. Definitely using 2.0.0:\n$ mvn dependency:tree -Dverbose | grep -i swagger\n[INFO] +- io.swagger.core.v3:swagger-jaxrs2:jar:2.0.0:compile\n[INFO] |  +- io.swagger.core.v3:swagger-models:jar:2.0.0:compile\n[INFO] |  +- (io.swagger.core.v3:swagger-annotations:jar:2.0.0:compile - omitted for duplicate)\n[INFO] |  +- io.swagger.core.v3:swagger-integration:jar:2.0.0:compile\n[INFO] |  |  +- io.swagger.core.v3:swagger-core:jar:2.0.0:compile\n[INFO] |  |  |  +- (io.swagger.core.v3:swagger-annotations:jar:2.0.0:compile - omitted for duplicate)\n[INFO] |  |  |  +- (io.swagger.core.v3:swagger-models:jar:2.0.0:compile - omitted for duplicate)\n[INFO] |  |  \\- (io.swagger.core.v3:swagger-models:jar:2.0.0:compile - omitted for duplicate)\n[INFO] +- io.swagger.core.v3:swagger-annotations:jar:2.0.0:compile\nWe use dropwizard (0.9.3) and register our controllers with jersey through Spring annotations:\n```\n    public void run(MyConfiguration configuration, Environment environment) throws Exception {\n        JerseyEnvironment jersey = environment.jersey();\n    // Register controllers.\n    for (Map.Entry entry : applicationContext.getBeansWithAnnotation(Controller.class).entrySet()) {\n        jersey.register(entry.getValue());\n    }\n\n``\nOur implementation classes are the ones with theControllerSpring annotation.. Ok, I managed to pin it down to the use of a@Context` parameter. I updated my repro steps above.. Related: https://github.com/OAI/OpenAPI-Specification/issues/771#issuecomment-242553014. ",
    "ssalinas": "Thank you for the quick fix here! I'll give the new version a try \ud83d\udc4d . ",
    "ylemoigne": "Well, I use the 2.0.1-SNAPSHOT version and still have the issue.\nI did not succeed to extract the case for now, but it wasn't happening on 2.0.0-rc4.\nInit code\n```\nObjectMapper objectMapper = new ObjectMapper();\n        objectMapper.setVisibility(\n            objectMapper.getSerializationConfig().getDefaultVisibilityChecker()\n                .withFieldVisibility(JsonAutoDetect.Visibility.ANY)\n                .withIsGetterVisibility(JsonAutoDetect.Visibility.NONE)\n                .withGetterVisibility(JsonAutoDetect.Visibility.NONE)\n                .withSetterVisibility(JsonAutoDetect.Visibility.NONE)\n                .withCreatorVisibility(JsonAutoDetect.Visibility.NONE)\n        );\n        ModelResolver resolver = new ModelResolver(objectMapper);\n    ModelConverters modelConverters = ModelConverters.getInstance();\n    modelConverters.addConverter(resolver);\n\n    modelConverters.readAll(SomeClass.class);\n\n```\nException in thread \"main\" java.lang.StackOverflowError\n    at java.security.AccessController.doPrivileged(Native Method)\n    at sun.reflect.annotation.AnnotationParser.annotationForMap(AnnotationParser.java:303)\n    at sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:293)\n    at sun.reflect.annotation.AnnotationParser.parseAnnotation(AnnotationParser.java:226)\n    at sun.reflect.annotation.AnnotationParser.parseParameterAnnotations2(AnnotationParser.java:184)\n    at sun.reflect.annotation.AnnotationParser.parseParameterAnnotations(AnnotationParser.java:161)\n    at java.lang.reflect.Executable.parseParameterAnnotations(Executable.java:80)\n    at java.lang.reflect.Executable.sharedGetParameterAnnotations(Executable.java:555)\n    at java.lang.reflect.Constructor.getParameterAnnotations(Constructor.java:523)\n    at com.fasterxml.jackson.databind.util.ClassUtil$Ctor.getParameterAnnotations(ClassUtil.java:1295)\n    at com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector.constructNonDefaultConstructor(AnnotatedCreatorCollector.java:269)\n    at com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector._findPotentialConstructors(AnnotatedCreatorCollector.java:171)\n    at com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector.collect(AnnotatedCreatorCollector.java:56)\n    at com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector.collectCreators(AnnotatedCreatorCollector.java:47)\n    at com.fasterxml.jackson.databind.introspect.AnnotatedClass._creators(AnnotatedClass.java:381)\n    at com.fasterxml.jackson.databind.introspect.AnnotatedClass.getConstructors(AnnotatedClass.java:286)\n    at com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._addCreators(POJOPropertiesCollector.java:460)\n    at com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.collectAll(POJOPropertiesCollector.java:313)\n    at com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.getJsonValueAccessor(POJOPropertiesCollector.java:196)\n    at com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.getJsonValueMethod(POJOPropertiesCollector.java:183)\n    at com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findJsonValueMethod(BasicBeanDescription.java:246)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:314)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:376)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\n    at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n    at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:575)\nI'm still searching if I can extract a sample case..... I can't share the current class. And the class dependency graph is quite long. I'm still trying to extract a simple case as I understand that without it, it's hard to track/fix for you.. I did not succeed to reproduce a model which go up to the stackoverflow. However, with debug log level, there is some strange with the following test case\n```\nprivate static void testMain(){\n        ObjectMapper objectMapper = new ObjectMapper();\n        objectMapper.setVisibility(\n            objectMapper.getSerializationConfig().getDefaultVisibilityChecker()\n                .withFieldVisibility(JsonAutoDetect.Visibility.ANY)\n                .withIsGetterVisibility(JsonAutoDetect.Visibility.NONE)\n                .withGetterVisibility(JsonAutoDetect.Visibility.NONE)\n                .withSetterVisibility(JsonAutoDetect.Visibility.NONE)\n                .withCreatorVisibility(JsonAutoDetect.Visibility.NONE)\n        );\n        ModelResolver resolver = new ModelResolver(objectMapper);\n    ModelConverters modelConverters = ModelConverters.getInstance();\n    modelConverters.addConverter(resolver);\n\n    modelConverters.readAll(FakeModel.class);\n\n    System.exit(-1);\n}\n\nstatic class FakeModel {\n    private List<A> a = null;\n    private List<B> b= null;\n    private List<C> c= null;\n    private List<D> d= null;\n    private List<E> e= null;\n    private List<F> f= null;\n    private List<G> g= null;\n    private List<H> h= null;\n    private List<I> i= null;\n    private List<J> j = null;\n    private List<K> k = null;\n    private List<L> l = null;\n    private List<M> m = null;\n}\n\nstatic class A {\n    private List<AAtt> attributes;\n    private FakeModel parent;\n}\n\nstatic class AAtt {\n    private A parent;\n}\n\nstatic class B {\n    private List<BAtt> attributes;\n    private FakeModel parent;\n}\n\nstatic class BAtt {\n    private B parent;\n}\n\nstatic class C {\n    private List<CAtt> attributes;\n    private FakeModel parent;\n}\n\nstatic class CAtt {\n    private C parent;\n}\n\nstatic class D {\n    private List<DAtt> attributes;\n    private FakeModel parent;\n}\n\nstatic class DAtt {\n    private D parent;\n}\n\nstatic class E {\n    private List<EAtt> attributes;\n    private FakeModel parent;\n}\n\nstatic class EAtt {\n    private E parent;\n}\n\nstatic class F {\n    private List<FAtt> attributes;\n    private FakeModel parent;\n}\n\nstatic class FAtt {\n    private F parent;\n}\n\nstatic class G {\n    private List<GAtt> attributes;\n    private FakeModel parent;\n}\n\nstatic class GAtt {\n    private G parent;\n}\n\nstatic class H {\n    private List<HAtt> attributes;\n    private FakeModel parent;\n}\n\nstatic class HAtt {\n    private H parent;\n}\n\nstatic class I {\n    private List<IAtt> attributes;\n    private FakeModel parent;\n}\n\nstatic class IAtt {\n    private I parent;\n}\nstatic class J {\n    private List<JAtt> attributes;\n    private FakeModel parent;\n}\n\nstatic class JAtt {\n    private J parent;\n}\nstatic class K {\n    private List<AAtt> attributes;\n    private FakeModel parent;\n}\n\nstatic class KAtt {\n    private K parent;\n}\nstatic class L {\n    private List<LAtt> attributes;\n    private FakeModel parent;\n}\n\nstatic class LAtt {\n    private L parent;\n}\nstatic class M {\n    private List<MAtt> attributes;\n    private FakeModel parent;\n}\n\nstatic class MAtt {\n    private M parent;\n}\n\n```\nIn the following example, there is multiple resolve [simple type, class GenerateOpenApiYaml$A]\n\n20:13:44.537 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve class GenerateOpenApiYaml$FakeModel\n20:13:44.646 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [collection type; class java.util.List, contains [simple type, class GenerateOpenApiYaml$A]]\n20:13:44.646 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [simple type, class GenerateOpenApiYaml$A]\n20:13:44.646 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [collection type; class java.util.List, contains [simple type, class GenerateOpenApiYaml$AAtt]]\n20:13:44.646 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [simple type, class GenerateOpenApiYaml$AAtt]\n20:13:44.646 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [simple type, class GenerateOpenApiYaml$A]\n20:13:44.646 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [simple type, class GenerateOpenApiYaml$FakeModel]\n20:13:44.646 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [collection type; class java.util.List, contains [simple type, class GenerateOpenApiYaml$B]]\n20:13:44.646 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [simple type, class GenerateOpenApiYaml$B]\n20:13:44.646 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [collection type; class java.util.List, contains [simple type, class GenerateOpenApiYaml$BAtt]]\n20:13:44.646 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [simple type, class GenerateOpenApiYaml$BAtt]\n20:13:44.646 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [simple type, class GenerateOpenApiYaml$B]\n20:13:44.874 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [collection type; class java.util.List, contains [simple type, class GenerateOpenApiYaml$C]]\n20:13:44.874 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [simple type, class GenerateOpenApiYaml$C]\n20:13:44.874 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [collection type; class java.util.List, contains [simple type, class GenerateOpenApiYaml$CAtt]]\n20:13:44.874 [DEBUG] [main                     ] i.s.v.c.c.ModelConverterContextImpl  - resolve [simple type, class GenerateOpenApiYaml$CAtt]\n\nIs it normal, if not, is it enough for you to track the issue ?. Finally it was far more easier to run swagger in debug that extracting the case.\nI have same type which don't share identity. \nIn AnnotatedType, method equals replacing if(type != that.type) by if(!type.equals(that.type)) fixed the issue.. ",
    "radai-rosenblatt": "i've removed my test application and resource classes as they were causing issues with integration tests.\ncurrently it looks like there's a test vulnerable to definitions order (1/2 builds succeeded) - i've copied the failing test diff for convenience: https://www.diffchecker.com/qMDbzop3. digging into the test failure some more, i've opened a separate issue for what i think the problem is (https://github.com/swagger-api/swagger-core/issues/2752) - schema for class class Tag may be discovered with xml name \"Tag\" (if discovered directly) or xml name \"tag\" (if discovered through Pet.tags property). @andi5 - i think (hope?) so. me running into a similar problem is what triggered this PR. ",
    "andi5": "Would that fix #2751 ?. ",
    "kimtiago": "Thanks a lot @frantuma !!!! \\o/\nWorked!. ",
    "Tejansh": "To add to this issue, I can see that you are using Jackson for deserialization which is identifying the data type based on the value. However, we would have expected perhaps another property to denote the data type explicitly that we expect in the sample response or if you can allocate the value based on the data type of the variable (ideal), the annotation is used upon.. ",
    "ouya2": "The issue is actually in springfox. ",
    "bibiwan": "I want to get an api description in swagger format for Oracle's Policy\nModeling projects, that's why I use CSV files : they describe my api and\ndata I need to use to communicate with webservices designed with Oracle\nproduct. So, I create a swagger object with your api, and populate this\nobject with informations stored inside my CSV files to create operations,\nproperties,... It's working perfectly well, except for this sort issue. So\nI'd like to know if there's a way to disable the alphabetical sort of the\nyaml output, or if this feature could be planned into the future releases.\nLe sam. 21 avr. 2018 \u00e0 16:29, Ron notifications@github.com a \u00e9crit :\n\nWhere does the CSV come to play here? The use case is a bit unclear.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/swagger-api/swagger-core/issues/2775#issuecomment-383300851,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AZPKNLjUPuzVdK0hqtVZQ0u6UsVbo-aMks5tq0IzgaJpZM4TaT9c\n.\n. Hi,\n\nI'm back about my request. Could we just forget the CSV part ? Let's focus about this : is it possible that elements added to a Swagger instance are not sorted alphabetically when calling the method Yaml.pretty().writeValueAsString(factory); ?. ",
    "eduzol": "hi @frantuma  is there a workaround?. ",
    "patrykpacewicz": "Hi, I found a solution to that problem - javax.ws.rs annotations\nI added javax.ws.rs dependency\nsbt\n  \"javax.ws.rs\" % \"javax.ws.rs-api\" % \"2.0.1\",\nand changed everything to their annotations\n```sbt\nimport io.swagger.annotations.\nimport javax.ws.rs.{Path, }\n@Api(\"/echoenum\")\nobject EchoEnumService extends Directives   {\n...\n@GET\n  @Path(\"/echoenum\")\n  @ApiOperation(value = \"end1\", response = classOf[String])\n  @ApiResponses(Array(new ApiResponse(code = 200, message = \"OK\")))\n  def echo(@BeanParam q: ModelToQuery) = path(\"echo\") { get { complete { \"Hello World\" } } }\n}\ncase class ModelToQuery(\n                         @QueryParam(\"param1\") param1: String,\n                         @QueryParam(\"param2\") param2: String\n                       )\n```. ",
    "ackintosh": "https://travis-ci.org/swagger-api/swagger-core/builds/370936121?utm_source=github_status&utm_medium=notification\nThe currently failing tests is asserting 'whole of the spec' with the 'whole of the Swagger object'.\nParameterSerializationTest.java#L392\n[ERROR] testIssue1765(io.swagger.parameter.ParameterSerializationTest)  Time elapsed: 0.01 s  <<< FAILURE!\njava.lang.AssertionError: \nSerialized object:\n{\"swagger\":\"2.0\",\"paths\":{\"/test\":{\"get\":{\"parameters\":[{\"name\":\"days\",\"in\":\"path\",\"required\":true,\"type\":\"integer\",\"format\":\"int32\",\"enum\":[1,2,3,4,5]}],\"responses\":{\"default\":{\"description\":\"great\"}},\"deprecated\":false}}}}\ndoes not equal to expected serialized string:\n{\"swagger\":\"2.0\",\"paths\":{\"/test\":{\"get\":{\"parameters\":[{\"name\":\"days\",\"in\":\"path\",\"required\":true,\"type\":\"integer\",\"format\":\"int32\",\"enum\":[1,2,3,4,5]}],\"responses\":{\"default\":{\"description\":\"great\"}}}}}}\nBy this PR, Swagger object is deserialized deprecated: false as default, and caused the failures.\n. ",
    "rainoko": "should change the code \nIn AbstractSerializableParameter.java\n```\n@JsonProperty(\"x-example\")\n    public Object getExample() {\n        if (example == null) {\n            return null;\n        }\n```\nThis should check also that if example is empty string should return null.\nEmpty string is default value for example in annotation \nApiParam.java\nSo it causing lot of warnings in log.. ",
    "breeze02": "I am also suffering for a similar problem.\nI think that this problem isn't caused by empty string.\nPlease see the following log message.\n\"i.s.m.p.AbstractSerializableParameter    : Illegal DefaultValue 1 for parameter type integer\"\nAlthough 1 is legal DefaultValue for integer, swagger couldn't recognize it.\nIt doesn't happen with swagger-models 1.5.14. And It happens with swagger-models 1.5.20.. ",
    "PascalSchumacher": "Thanks for fixing this! \ud83d\udc4d . ",
    "anachronoxLF": "Hi,\ni faced the same problem. Simple, but very ugly workaround is to add @Schema annotation\ne.g. \njava\npublic static final String JSON_ATTRIBUTE_ID = \"_id\";\n...\n@Schema(name = JSON_ATTRIBUTE_ID)\n@JsonbProperty(JSON_ATTRIBUTE_ID)\nprivate Long id;\nOther solution I found was to use Jackson annotations instead of JSON-B annotations. The JAX-RS implementation I work with (RESTEasy in Wildfly) can use Jackson annotations for JSON serialization/deserialization out-of-the-box (without any configuration needed).\nBut I try to be not dependent on specific implementations of EE 8 API technologies, therefore I use the solution with @Schema. ",
    "Vishwaas": "Any update on this. ",
    "shauera": "What are the chances of getting this PR into 1.5.20?. Thanks for merging this change. I was about to add a unit test but I see you have added one. Would you still want another one?. ",
    "rienafairefr": "Very clear and complete explanation, thanks, that fixed it :+1: \n. Very clear and complete explanation, thanks, that fixed it :+1: \n. Thanks. From git tags I'm guessing this fix is included in 2.0.2 ?. Thanks. From git tags I'm guessing this fix is included in 2.0.2 ?. ",
    "fabwid": "Hi @ptiswitz: I am currently having the same issue. Did you succeed to solve it?\nThanks a lot in advance.. Hi @ptiswitz: I am currently having the same issue. Did you succeed to solve it?\nThanks a lot in advance.. ",
    "kostya-lnk-ms": "Yes, I am using Kotlin, I guess that Java should be the same.\nHere is a basic repro:\n    @Path(\"/\")\n    class Api {\n    @GET\n    fun getter() : Pet = Pet(\"\")\n}\n\ndata class Pet(\n        @Schema( required=true, pattern=\"[0-9]{8}\" )\n        val bornAt: String\n)\n\n@Test\nfun gg() {\n    val reader = Reader()\n    val api = reader.read(Api::class.java)\n    val json = ObjectMapper().setSerializationInclusion(JsonInclude.Include.NON_NULL).writerWithDefaultPrettyPrinter().writeValueAsString(api)\n}\n\njson yields the following:\n{\n  \"openapi\" : \"3.0.1\",\n  \"paths\" : {\n    \"/\" : {\n      \"get\" : {\n        \"operationId\" : \"getter\",\n        \"responses\" : {\n          \"default\" : {\n            \"description\" : \"default response\",\n            \"content\" : {\n              \"/\" : {\n                \"schema\" : {\n                  \"$ref\" : \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\" : {\n    \"schemas\" : {\n      \"Pet\" : {\n        \"type\" : \"object\",\n        \"properties\" : {\n          \"bornAt\" : {\n            \"type\" : \"string\"\n          }\n        }\n      }\n    }\n  }\n}. Thanks for workaround suggestion, that indeed helps in Kotlin.. ",
    "zenglian": "it should avoid duplicate info\nit should do it in an intrusive way\nit does not have not be at runtime. ",
    "Marek00Malik": "This would be a good feature, I have a very similar case in my project. I either need to add the information about this special implicit header in each new endpoint or (and that would be done on the filter) add this information on the filter description. . ",
    "parameshjava": "Even I am interested in it. @GuruTom Can you please post the reason for the closer.. ",
    "guan25": "yes ,I have same problem. ",
    "huangmiao": "sorry ,I use springfox-swagger2 .the close . ",
    "msymons": "Closing and will resubmit together with jackson,version update. ",
    "SharathPS": "Hello @wing328,\nAny update on this issue?. ",
    "eddsteel": "I have the almost exact opposite problem, of wanting to add custom properties to a schema with fixed fields, i.e. to add additionalProperties to an object with properties already correctly generated.\nI think a solution to this would be to allow setting additionalProperties inside @Schema, as well as allowing adding properties there.\n. ",
    "PoonamGargAgarwal": "Can some one reply on this open issue.. ",
    "JonathanParrilla": "please build. please build. please build. please build. please build. ",
    "maaland": "Thanks for the quick response @frantuma !\nUnfortunately, I'm not really at liberty to rely on snapshots in my application. I also need my dependencies to be in maven central. Any ETA on the release of 2.0.3 in central?\nIf I understand you correctly, the solution you propose in your last paragraph relies on #2902 , right? . ",
    "svella": "Looks like the @XmlAttribute  part of this was fixed by #1847, but because 2.x development renamed all the packages before that merge never happened into that line.. working on a set of PR's for 1.5 and 2.x branches. ",
    "simenflatby": "@frantuma Is there anything I can do differently for you to reply to my question or consider merging this pr.?. ",
    "markusdemetz": "I extend from org.glassfish.jersey.server.ResourceConfig and annotate my class as follows:\n@ApplicationPath(\"/api/v1\")\n@Path(\"/\")\n@OpenAPIDefinition(\n  info = @Info(title = \"MyTitle\", version = \"v1\", description = \"My Description\"),\n  security = @SecurityRequirement(name = \"apiKey\"))\n@SecurityScheme(type = SecuritySchemeType.APIKEY, name = \"apiKey\", in = securitySchemeIn.HEADER)\npublic class MyApplication extends ResourceConfig {\n    public MyApplication() {\n        ResourceConfig resourceConfig = packages(\"com.mypackage.resources\");\n        register(resourceConfig.getClasses());\n        register(OpenApiResource.class);\n    }\n}\nSo I can make a call to http://localhost:8080/api/v1/openapi.json and the JSON OpenAPI spec is produced.\nUsing swagger-core-2.0.0 (swagger-annotations-2.0.0) everything works fine. The relevant part produced is:\n\"securitySchemes\": {\n  \"apiKey\": {\n    \"type\":\"apiKey\",\n    \"name\":\"apiKey\",\n    \"in\":\"header\"\n   }\n}\nLoading the JSON into Swagger UI lets me make an API call.\n\nWhen upgrading to a newer version (2.0.1, 2.0.2 or 2.0.3), the JSON regarding securitySchemes is missing the name attribute:\n\"securitySchemes\": {\n  \"apiKey\": {\n    \"type\":\"apiKey\",\n    \"in\":\"header\"\n   }\n}\nUsing Swagger UI to make an API call is not working, because the header name for the apiKey is undefined.\n\nThanks!. It solved the issue, thank you!. ",
    "tomq42": "Second that. I've done something super crude that uses some extra annotations, but it would be much better it this was built in. \nWriting meaningful documentation within a string literal with an annotation just isn't practical, so this is really the only means by which it's practical to have meaningful documentation as part of your openapi spec generated from annotations.\n. ",
    "hosswald": "The reason for the current behaviour is this line.. ",
    "scadgek": "I'm aware of the workarounds, but ideally I'd like to avoid them. Having version 2.9.6 in the swagger-core itself will provide a better guarantee that it's an acceptable version for proper work of the library. Although I understand that it's not an issue in this specific case (where the version mismatch is 2.9.5. vs 2.9.6).. ",
    "sgdesmet": "Seems to be caused by addResponse(Operation operation, ApiResponse apiResponse, JsonView jsonView) in io.swagger.jaxrs.Reader calling appendModels instead of appendModelsWithJsonView. \nBut it might be usefull to add an ignoreJsonView attribute to ApiResponse as well? It may not always make sense to apply the views to for example error response message.. ",
    "devoto13": "The Reflections library also has several other bugs affecting Swagger users and haven't had a release for more than a year. I also would like to migrate to something more alive.\nTo name a few: \n- https://github.com/ronmamo/reflections/issues/205 which causes Reflections to attempt to read from all files types and print lots of parsing exceptions (fixed a year ago and not released since than).\n- https://github.com/ronmamo/reflections/issues/171 and https://github.com/ronmamo/reflections/issues/190 which causes bunch of java.lang.ClassNotFoundException exceptions in some setups (in particular when using shadow plugin).\n- https://github.com/ronmamo/reflections/issues/241 seems to have issues with newer versions of Java, but I haven't faced this myself.. ",
    "guymills": "+1 - Am having a similar issue - using springfox to document a REST interface using swagger annotations (with version 1.5.21 to pick up the polymorphism enhancement), and was just about to ask the same thing.  Thanks Yve!\nGuy. Hi Frantuma,\nThanks for the reply.  I'm slightly confused however.  \nWith version 1.5.20 the swagger output doesn't include originalRef, but after upgrading to 1.5.21 originalRef now appears.  I'm using a standard SpringMVC implementation with no bespoke mapper.  Are you saying that I should now add some additional annotations and/or code in order to make these originalRef's disappear?\nMany thanks\nGuy. Hi Frantuma, thanks for the reply.  \nYes, I'm using springfox.  \nI've just been following the code through - I see you created the ReferenceSerializationConfigurer class as part of your commit, and I understand if I get the mapper that springfox is using, then I can call your new serializeAsComputedRef() function, and that should then mean the originalRef's are not output.\nHowever, AFAIK, I'm using a vanilla springfox configuration.  So are you saying that ideally, springfox should change their project to take into account your change for 1.5.21?  Otherwise, any other springfox users who upgrade to swagger 1.5.21 (and beyond) will start getting originalRef's as well.\nThanks, Guy. ",
    "timbuethe": "Came here to find frantuma's answer about Json.mapper() to get an already configured mapper. Works like a charm.. ",
    "tylerbobella": "I am coming across the same issue. Can anyone post an example of how to solve this? Thanks! Im slightly confused still as I use springfox as well. . ",
    "dalbrx-forcam": "I solved it by adding \n```\npublic class SwaggerJacksonModuleRegistrar implements JacksonModuleRegistrar {\n@Override\npublic void maybeRegisterModule(ObjectMapper objectMapper) {\n    ReferenceSerializationConfigurer.serializeAsComputedRef(objectMapper);\n}\n\n}\n```\nsee https://github.com/springfox/springfox/issues/2917#issuecomment-470568394. ",
    "goxr3plus": "No answers :( ?\n. No answers :( ?\n. ",
    "chatelao": "Step 1: I want to specifiy the API (changes) in YAML\nStep 2: The development team will implement the service with Java / JAX-RS etc.\nStep 3: I will a minimal annotations to the code\nStep 4: I would like to copy the specification as-easy-as possible to the sourcecode\nStep 5: The /openapi.yaml should return the merged implementation information from the code and the documentation from the added xxx.yaml. Thank die the explanations. I would really like to Mercedes hand written descriptions without needing to touch the code.\nI will post it, if there ist any good solution tothis question.. ",
    "nelsongraca": "Ok, I will work on it and submit it ASAP since this would be useful for me.. ",
    "peetzen": "@frantuma I gave it a try with the latest released version 2.0.6 and I run into a problem when running the resolve task.\nI have implemented the ObjectMapperProcessor in default gradle buildSrc project.\nIn my main project I specify the ObjectMapper class as part of the resolve configuration:\nobjectMapperProcessorClass = 'de.peetzen.build.swagger.SnakeCaseObjectMapperProcessor'.\nWhen I run the resolve task I get an ClassNotFoundException.\n> Task :service:resolve FAILED\n07:35:20.620 [Task worker for ':'] ERROR io.swagger.v3.oas.integration.GenericOpenApiContext - error initializing context: de.peetzen.build.swagger.SnakeCaseObjectMapperProcessor\njava.lang.ClassNotFoundException: de.peetzen.build.swagger.SnakeCaseObjectMapperProcessor\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:381)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at io.swagger.v3.oas.integration.GenericOpenApiContext.buildObjectMapperProcessor(GenericOpenApiContext.java:267)\n    at io.swagger.v3.oas.integration.GenericOpenApiContext.init(GenericOpenApiContext.java:361)\n    at io.swagger.v3.oas.integration.GenericOpenApiContext.init(GenericOpenApiContext.java:28)\n    at io.swagger.v3.jaxrs2.integration.JaxrsOpenApiContextBuilder.buildContext(JaxrsOpenApiContextBuilder.java:44)\n    at io.swagger.v3.jaxrs2.integration.SwaggerLoader.resolve(SwaggerLoader.java:214)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at io.swagger.v3.plugins.gradle.tasks.ResolveTask.resolve(ResolveTask.java:388)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\nI would expect that the resolve task uses this special gradle buildSrc project by default to search for the class to load. How is this supposed to work? How do I have to define the dependency for the implementing class to be able to use it?\n. Thanks! I got a little bit further. Now I have the problem, that the change to the mapper actually affects the swagger internal json serialization schema as well and not just the payload data.\nThe swagger keyword additionalProperties (and any other swagger schema related parts) should not be handled with the same mapper instance, I guess. This is happening for me and causes an exception due to the affect on the keyword additional_properties. I use your suggested SampleObjectMapperProcessor code.\nCaused by: java.lang.reflect.InvocationTargetException\n        at io.swagger.v3.plugins.gradle.tasks.ResolveTask.resolve(ResolveTask.java:388)\n        ... 43 more\nCaused by: java.lang.Exception: Error resolving API specification: additionalProperties must be either a Boolean or a Schema instance\n at [Source: UNKNOWN; line: -1, column: -1] (through reference chain: io.swagger.v3.oas.models.media.ObjectSchema[\"additional_properties\"])\n        at io.swagger.v3.jaxrs2.integration.SwaggerLoader.resolve(SwaggerLoader.java:240)\n        ... 44 more\nCaused by: java.lang.IllegalArgumentException: additionalProperties must be either a Boolean or a Schema instance\n at [Source: UNKNOWN; line: -1, column: -1] (through reference chain: io.swagger.v3.oas.models.media.ObjectSchema[\"additional_properties\"])\n        at com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:3738)\n        at com.fasterxml.jackson.databind.ObjectMapper.convertValue(ObjectMapper.java:3656)\n        at io.swagger.v3.core.util.ModelDeserializer.deserializeObjectSchema(ModelDeserializer.java:106)\n        at io.swagger.v3.core.util.ModelDeserializer.deserialize(ModelDeserializer.java:76)\n        at io.swagger.v3.core.util.ModelDeserializer.deserialize(ModelDeserializer.java:28)\n        at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4001)\n        at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2992)\n        at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:624)\n        at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n        at io.swagger.v3.core.jackson.ModelResolver.resolve(ModelResolver.java:617)\n        at io.swagger.v3.core.converter.ModelConverterContextImpl.resolve(ModelConverterContextImpl.java:90)\n        at io.swagger.v3.core.converter.ModelConverters.readAllAsResolvedSchema(ModelConverters.java:99)\n        at io.swagger.v3.core.util.AnnotationsUtils.getSchema(AnnotationsUtils.java:1091)\n        at io.swagger.v3.core.util.AnnotationsUtils.getSchema(AnnotationsUtils.java:1076)\n        at io.swagger.v3.core.util.AnnotationsUtils.getContent(AnnotationsUtils.java:1032)\n        at io.swagger.v3.jaxrs2.OperationParser.getApiResponses(OperationParser.java:91)\n        at io.swagger.v3.jaxrs2.Reader.setOperationObjectFromApiOperationAnnotation(Reader.java:1125)\n        at io.swagger.v3.jaxrs2.Reader.parseMethod(Reader.java:912)\n        at io.swagger.v3.jaxrs2.Reader.parseMethod(Reader.java:772)\n        at io.swagger.v3.jaxrs2.Reader.read(Reader.java:446)\n        at io.swagger.v3.jaxrs2.Reader.read(Reader.java:169)\n        at io.swagger.v3.jaxrs2.Reader.read(Reader.java:196)\n        at io.swagger.v3.oas.integration.GenericOpenApiContext.read(GenericOpenApiContext.java:469)\n        at io.swagger.v3.jaxrs2.integration.SwaggerLoader.resolve(SwaggerLoader.java:215)\n        ... 44 more\nCaused by: com.fasterxml.jackson.databind.JsonMappingException: additionalProperties must be either a Boolean or a Schema instance\n at [Source: UNKNOWN; line: -1, column: -1] (through reference chain: io.swagger.v3.oas.models.media.ObjectSchema[\"additional_properties\"])\n        at com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:277)\n        at com.fasterxml.jackson.databind.deser.SettableBeanProperty._throwAsIOE(SettableBeanProperty.java:598)\n        at com.fasterxml.jackson.databind.deser.SettableBeanProperty._throwAsIOE(SettableBeanProperty.java:586)\n        at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:134)\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n        at com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:3733)\n        ... 67 more\nCaused by: java.lang.IllegalArgumentException: additionalProperties must be either a Boolean or a Schema instance\n        at io.swagger.v3.oas.models.media.Schema.setAdditionalProperties(Schema.java:546)\n        at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:132)\n        ... 70 more. Using the modelConverterClasses implementation worked as expected. Looking forward to 2.0.7!. ",
    "wcicola": "I have been dealing with this issue for the better part of a week and finally managed to nail down the root. The issue begins at line 613 of ModelResolver:\nproperty = context.resolve(aType);\nModelConverterContextImpl  (line 77) returns a cached Schema instance if it has already been processed:\nif (processedTypes.contains(type)) {\n            return modelByType.get(type);\n}\nModelResolver at line 666 changes the name of that instance and adds it to the list of properties:\nproperty.setName(propName);\n...\nprops.add(property); \nIf you use a debugger and inspect props after this line, you can see that it actually contains multiple Schema instances--each with the name of the most recently parsed field. Then at line 674, each instance gets added to modelProps :\nfor (Schema prop : props) {\n            modelProps.put(prop.getName(), prop);\n        } \nAnd of course, since they have all been assigned the same name, this results in only the final one being retained in the map. \nI changed ModelConverterContextImpl to return a clone of the cached instance, and it now includes all fields:\n{\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"stringsMap1\" : {\n      \"type\" : \"object\",\n      \"additionalProperties\" : {\n        \"@class\" : \"io.swagger.v3.oas.models.media.StringSchema\",\n        \"type\" : \"string\"\n      }\n    },\n    \"stringsMap2\" : {\n      \"type\" : \"object\",\n      \"additionalProperties\" : {\n        \"@class\" : \"io.swagger.v3.oas.models.media.StringSchema\",\n        \"type\" : \"string\"\n      }\n    }\n  }\n} \nI will refine this code to only do the cloning when the AnnotatedType is of a Map and do some more testing, and can then create a PR if no other issues arise.. My pleasure; thanks to the entire community for building something so useful! It's a privilege to be able to give something back!. ",
    "camlane": "Hi,\nLooks like you've nailed it. Thanks for the investigation and the dev effort!. ",
    "ly641921791": "I also encountered the same problem, I found that swagger-models-1.5.21.jar has solved this problem, like this\njava\n    @JsonProperty(\"x-example\")\n    public Object getExample() {\n        if (example == null || example.isEmpty()) {\n            return example;\n        }\n        ....\n    }\nSo you can exclude the 1.5.20 version of the jar and import the 1.5.21 version of the jar, like this\nxml\n            <dependency>\n                <groupId>io.springfox</groupId>\n                <artifactId>springfox-swagger2</artifactId>\n                <version>2.9.2</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>io.swagger</groupId>\n                        <artifactId>swagger-models</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>io.swagger</groupId>\n                <artifactId>swagger-models</artifactId>\n                <version>1.5.21</version>\n            </dependency>\nBut I have not tried this method because I don't know if there will be version compatibility issues. So I fork this code and modify this line of code to compile it. I think you can do the same to solve the problem.. ",
    "valasatava": "@james-r-smith, were you been able to solve your problem? I am facing the same issue.. @james-r-smith, I ended up adding an openapi configuration file with server url as defined: \nhttps://github.com/swagger-api/swagger-core/wiki/Swagger-2.X---Integration-and-configuration#known-locations. @padmakaraa, I followed this one: https://github.com/swagger-api/swagger-core/wiki/Swagger-2.X---Integration-and-configuration#jax-rs-application . ",
    "padmakaraa": "\n@james-r-smith, thanks for your suggestion! I ended up implementing programmatic configuration using io.swagger.v3.oas.models.OpenAPI object.\n\n@valasatava Do you have reference documents for this implementation (programmatic configuration)? . ",
    "adrianboimvaser": "Do you have an ETA for 2.0.6? Thanks.. ",
    "emigioria": "org.joda.time.LocalDateTime should be added to DATE_TIME group.. ",
    "zsoltherpai": "I've always had @FormDataParam as the last annotation - although only accidentally through a convention of doc annotations first.. \nBut a similar jersey bug might be the culprit. I keep my workaround for a while and keep an eye on the related jersey issues, thanks.. ",
    "just-moth": "but i use postman and login-cookie can get what i want\ncurl -X GET \"http://localhost:10060/address/index\" -H \"accept: /\" -H \"authorization: Bearer ebd45cfe-1c94-4283-bd85-88ff7f10f762\"\n\n\n\ni sent request without login cookie ,  redirect to login page \n\n\ni get login cookie,and sent request. its suprise that i get what i want.\nso i suspect that 'api-gateway' swagger can't hold the login cookie\nthere are  little chinese troduction to fix it ,and i wated too much time \ni try to use simple sentence and picture\nhope someone can understand  to help me \nif need code details, i will reply on the monday ~ friday in 9:00~18:00. find other interesting thing\nfirst i open swagger-ui without zuul\n\n\nthen i click  'execute' ,the chorme send one request and success\n\n\n. next i open swagger-ui with zuul  and select 'address'\n\nclean cookie and authorize again\n\nthen i click 'execute' ,the chorme send  more than one request and redirect to login page\n\n\n i open a new chrome page,and Access to \"http://localhost:10060/address/index\"\ni got i want\n\nin the swagger-ui with zuul i click 'execute' again\ni got i want too\n\nso where is the problems??\n. ",
    "mtamme": "I just cloned the master branch (51bfc35facc819b26a9d8604be6354c1dbf60c15, Version 2.0.6-SNAPSHOT) and built the whole swagger-core project and it worked as expected.\n. ",
    "catbref": "Looking at the OpenAPI v3.0 spec it might be better, or even easier, to add a @Components annotation for use inside @OpenAPIDefinition. Then inside @Components any number of @Parameter or @Schema or anything else as mentioned here: https://swagger.io/specification/#componentsObject\n[Edit: quoting annotations]. If you need a work-around \"yesterday\" then you can declare your 'global' parameters on some unused endpoint like this:\n@GET\n    @Path(\"/dud\")\n    @Parameter(in = ParameterIn.QUERY, name = \"limit\", description = \"Maximum number of entries to return\", schema = @Schema(type = \"integer\", defaultValue = \"10\"))\n    @Parameter(in = ParameterIn.QUERY, name = \"offset\", description = \"Starting entry in results\", schema = @Schema(type = \"integer\"))\n    public String globalParameters() {\n        return \"\";\n    }\nThen use a custom annotation processor to find the parameters and add them to the components section:\npublic class AnnotationPostProcessor implements ReaderListener {\n    @Override\n    public void afterScan(Reader reader, OpenAPI openAPI) {\n        // Populate Components section with reusable parameters, like \"limit\" and \"offset\"\n        // We take the reusable parameters from path \"/dud\"\n        Components components = openAPI.getComponents();\n        PathItem globalParametersPathItem = openAPI.getPaths().get(\"/dud\");\n        if (globalParametersPathItem != null)\n            for (Parameter parameter : globalParametersPathItem.getGet().getParameters())\n                components.addParameters(parameter.getName(), parameter);\n    }\n}\nOnce this is done, you can refer to your 'global' parameters simply:\n@GET\n    @Path(\"/pets/all\")\n    public List<Pet> getPets(@Parameter(ref = \"limit\") int limit, @Parameter(ref = \"offset\") int offset) {\n        ...\n    }\nIt's not pretty but in the future you would only need to replace the annotation processor and move the global @Parameter entries to some other location, like @Components.. ",
    "brpeterman": "After poking around, I've discovered two distinct issues:\n\nThe format expected by ref in @Parameter is not the same as the one expected elsewhere. In my example above, I used #/components/parameters/lang, but Swagger actually expected just lang.\nref does work if I use it for an annotated method parameter. For example:\n    java\n    AddressListResponse getAllAvailableAddresses(@Parameter(ref = \"lang\") String lang);\n    It does not work in the parameters field of the @Operation or on @Parameter annotations applied to the method.\n\nI believe these are both bugs.. Those two responses are in fact the same response. The description field should describe what the header represents, not what its value is.\nYour 412 response should probably look more like this:\njava\n@ApiResponse(responseCode = \"412\", description = \"Validation failed\",\n    headers = {\n        @Header(name = \"Reason\", description = \"Reason validation failed\", schema = @Schema(type = \"string\")),\n        @Header(name = \"Code\", description = \"Error code indicating how validation failed\", schema = @Schema(type = \"string\"))\n    })\nKeep in mind that OpenAPI describes what a response looks like, not what each individual response actually contains.. ",
    "sathyakumarseshachalam": "I ended up using Yaml utility class to deserialize string into OpenAPI before filtering it myself. . ",
    "geekrumper": "I have the same issue. I can puposely configure gradle to not find the file (openapi-configuration.yam) and the expected result is printed:\n\n\n\nWhat went wrong:\nA problem was found with the configuration of task ':resolve'.\n\nFile 'Q:............\\openapi-configuration.yam' specified for property 'openApiFile' does not exist.\n\n\n\nTry:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n\n\nGet more help at https://help.gradle.org\n\n\nBUILD FAILED in 7s\n38 actionable tasks: 3 executed, 35 up-to-date\n\nWhen gradle is configured correctly, no error is printed. Which means that the configuration file can be found. But still the content is not being merged at all. It doesn't matter if the configuration is YAML or JSON.\nHere are the configuration examples that I used:\nJSON\njson\n{\n  \"prettyPrint\" : true,\n  \"openAPI\": {\n    \"info\": {\n      \"version\": \"1.0\",\n      \"title\": \"Swagger Pet Sample App\",\n      \"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\n      \"termsOfService\": \"http://swagger.io/terms/\",\n      \"contact\": {\n        \"email\": \"apiteam@swagger.io\"\n      },\n      \"license\": {\n        \"name\": \"Apache 2.0\",\n        \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n      }\n    }\n  }\n}\nYAML\nyaml\nprettyPrint: true\ncacheTTL: 0\nopenAPI:\n  info:\n    version: '1.0'\n    title: Swagger Pet Sample App Config File\n    description: 'This is a sample server Petstore server.  You can find out more\n      about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\n      #swagger](http://swagger.io/irc/).  For this sample, you can use the api key\n      `special-key` to test the authorization filters.'\n    termsOfService: http://swagger.io/terms/\n    contact:\n      email: apiteam@swagger.io\n    license:\n      name: Apache 2.0\n      url: http://www.apache.org/licenses/LICENSE-2.0.html\nIf something is wrong with the format, I would like to be notified by gradle. The gradle task is being executed with the --debug parameter, but I never was able to see any logs about the merging process.. I don't think this issue can be ignored, since I get the following error in swagger editor:\n\nSchema error \nshould have required property 'info'\nmissingProperty: info\nJump to line 0\n\nWe would like to use this solution for public documentation of our API. I know we can we have alternatives like producing configuration programmatically. But our goal is to reduce the amount of swagger code to an aboslute minimum. Therefore having an external configuration file referenced by gradle is prefered.. Here's what I've tried:\nbuild.gradle\nresolve {\n    outputFileName = 'API'\n    classpath = sourceSets.main.runtimeClasspath\n    outputPath =  \"${buildDir}/api\"\n    outputFormat = 'JSONANDYAML'\n    resourcePackages = ['com.example.package']\n    prettyPrint = true\n    openApiFile = file('openapi-configuration.json')\n}\nopenapi-configuration.json\njson\n{\n  \"openAPI\": {\n    \"info\": {\n      \"version\": \"1.0\",\n      \"title\": \"Swagger Pet Sample App\",\n      \"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\n      \"termsOfService\": \"http://swagger.io/terms/\",\n      \"contact\": {\n        \"email\": \"apiteam@swagger.io\"\n      },\n      \"license\": {\n        \"name\": \"Apache 2.0\",\n        \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n      }\n    }\n  }\n}\nAs you can see, just like you mentioned only the openApi instance is provided. All other configuration properties are in my build.gradle and still no luck.. @frantuma you're absolutely right, that change did the trick! I guess this knowledge has to be reflected in the README, because atm it's only referring to configuration properties which does not mention openApiFile but rather openAPI and that's how many devs are being missguided to think that this file is the configuration. They also search for a configuration example and stumble upon the ones I mentioned before.\nAlso, thank you for your support.. ",
    "betrcode": "@frantuma Thanks for responding. I had the same issue @geekrumper describes above. I worked around in by not using that feature. Havn't tested it since. I will try it next time I need to setup Swagger for a project. (Don't have time right now.). @frantuma Thanks for responding. I had the same issue @geekrumper describes above. I worked around in by not using that feature. Havn't tested it since. I will try it next time I need to setup Swagger for a project. (Don't have time right now.). My use case was primarily to keep the openAPI.info.version outside of the service code, and keep that part controlled by Gradle since it controls which version is being built.. My use case was primarily to keep the openAPI.info.version outside of the service code, and keep that part controlled by Gradle since it controls which version is being built.. @frantuma Not sure I understand. Could you provide an example of a instance of the OpenAPI spec?. @frantuma Not sure I understand. Could you provide an example of a instance of the OpenAPI spec?. ",
    "atkawa7": "@blackat Checkout https://github.com/atkawa7/httpsnippet for generating code snippets with springfox and redoc with an example on how to use x-logo. ",
    "tdudgeon": "Yes, that is right. If I use the Yaml class rather than a standard Jackson ObjectMapper I get the correct yaml. Thanks.. ",
    "rhnewtron": "Yes, we see this issue in twistlock for swagger enabled applications. Please update to a later guava version. . ",
    "andrejpetras": "I check the Reader class in the jaxrs module. The parameter types are taken from the AnnotatedMethod object. For the return type, the type from the java method is used. \nI create simple fix and a pull request.\nCould you please look at it if it is ok or create another solution for this issue.\nThanks\nAndrej. ",
    "mduesterhoeft": "Hi there, what do you think? Does this have a chance to be merged soon? @frantuma . Thanks for merging.. @frantuma do you already have plans to release the next 1.5 version? . ",
    "Ramprabu1983": "Hey Fran, Thanks for your time. So we are enabling Swagger in Spring Boot application using Springfox dependency as below by using Gradle build.xml\ncompile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'\ncompile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'\nAfter Gradle build I see below Jars pulled from Maven artifactory.\nspringfox-swagger2-2.8.0.jar\nspringfox-swagger-ui-2.8.0.jar\nspringfox-spi-2.8.0.jar\nspringfox-schema-2.8.0.jar\nspringfox-swagger-common-2.8.0.jar\nspringfox-spring-web-2.8.0.jar\nspringfox-core-2.8.0.jar\nAlso I am seeing there are some other swagger jar in the classpath, I think it comes with Spring Boot.\nswagger-annotations-1.5.14.jar\nswagger-models-1.5.14.jar\nJava Swagger configuration as below\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;\nimport com.google.common.base.Predicates;\nimport springfox.documentation.builders.ApiInfoBuilder;\nimport springfox.documentation.builders.PathSelectors;\nimport springfox.documentation.builders.RequestHandlerSelectors;\nimport springfox.documentation.service.ApiInfo;\nimport springfox.documentation.service.Tag;\nimport springfox.documentation.spi.DocumentationType;\nimport springfox.documentation.spring.web.plugins.Docket;\nimport springfox.documentation.swagger2.annotations.EnableSwagger2;\n@Configuration\n@EnableSwagger2\n@EnableWebMvc\npublic class SwaggerConfig extends WebMvcConfigurerAdapter {\n    @Bean\n    public Docket api() {\n        return new Docket(DocumentationType.SWAGGER_2)\n                .select()\n                .apis(RequestHandlerSelectors.basePackage(\"test\"))\n                .paths(System.getProperty(CONFIG_ENV).contains(\"prod\") ?  Predicates.not(PathSelectors.ant(test)) : PathSelectors.any())\n                .build()\n                .apiInfo(apiInfo())\n                .tags(new Tag(test1,\"Microservices\"),\n                        new Tag(test2, \"Microservices\"),\n                        new Tag(\"test3\", microservices\"));\n    }\nprivate ApiInfo apiInfo() {\n    return new ApiInfoBuilder()\n            .title(\"Title\")\n            .description(\"Description\")\n            .termsOfServiceUrl(\"terms.com\")\n            .license(\"Test\")\n            .licenseUrl(\"Licence\")\n            .version(\"2.0\")\n            .build();\n}\n\n@Override\npublic void addResourceHandlers(ResourceHandlerRegistry registry) {\n    registry.addResourceHandler(\"swagger-ui.html\")\n    .addResourceLocations(\"classpath:/META-INF/resources/\");\n\n    registry.addResourceHandler(\"/webjars/**\")\n    .addResourceLocations(\"classpath:/META-INF/resources/webjars/\");\n}\n\n}\nAre you seeing any problem in the configuration, but this the constant configuration for all Spring Boot application. Please let me know your suggestions.\nFYI. We deployed the application in Production without Swagger this time, and performance quite good.\nRegards\nRam\n. Thanks for the right direction.. ",
    "padamstx": "@frantuma Thanks for replying...   I have some local changes that are basically what you've suggested above.   I'll submit a PR soon for this.. Please disregard the name of my bug branch.   I don't know where I got \"342\".  Should have named it \"issue-3094\" :). cc: @frantuma . ",
    "timemanx": "Added PR that throws JsonParseException when Parameter location and Schema data types are invalid. ",
    "sabomichal": "I am having the same problem when specifying the @ApiParam annotation for primitive long type (as well as the object form Long):\n@ApiParam(value = \"some value\", required = true) @PathVariable final long id,. ",
    "geethaharika": " My web.xml:\n    <servlet>\n      <servlet-name>Jersey Web Application</servlet-name>\n      <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>\n      <init-param>\n        <param-name>jersey.config.server.provider.packages</param-name>\n        <param-value>com.mongo,io.swagger.jaxrs.listing</param-value>\n      </init-param>\n      <load-on-startup>1</load-on-startup>\n    </servlet>\n    <servlet>\n        <servlet-name>SwaggerBootstrap</servlet-name>\n        <servlet-class>com.mongo.SwaggerConfiguration</servlet-class>\n        <load-on-startup>2</load-on-startup>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>Jersey Web Application</servlet-name>\n        <url-pattern>/rest/*</url-pattern>\n    </servlet-mapping>\n\nMy SwaggerConfiguration.java:\npackage com.mongo;\n\nimport javax.servlet.ServletConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\n\nimport io.swagger.jaxrs.config.BeanConfig;\n\npublic class SwaggerConfiguration extends HttpServlet{\n    public void init(ServletConfig config) throws ServletException {\n        super.init(config);\n        BeanConfig beanConfig = new BeanConfig();\n        beanConfig.setTitle(\"Swagger UI\");\n        beanConfig.setVersion(\"1.0\");\n        beanConfig.setSchemes(new String[]{\"http\"});\n        beanConfig.setHost(\"localhost:8080\");\n        beanConfig.setBasePath(\"/MongoWeb/rest\");\n        beanConfig.setResourcePackage(\"com.mongo\");\n        beanConfig.setScan(true);\n        beanConfig.setDescription(\"Swagger Integration\");\n        System.out.println(\"Swagger\");\n    }\n}\n\nwhen i type my url: http://localhost:8080/MongoWeb/\nI am getting \nFetch error: undefined http://localhost:8080/MongoWeb/rest/api-docs\n\nAnd when i clicked on inspect i am getting error as:\n\n404 http://localhost:8080/MongoWeb/rest/api-docs not found...\n\nCan Anyone Tell where i went wrong?\n\nAnd what changes should me made in my web.xml to rum the application. ",
    "stauvel": "So why in are the following lines for, in AnnotationUtils.java ?\nif (schemaImplementation.getName().startsWith(\"java.lang\")) {\n            schemaObject.setType(schemaImplementation.getSimpleName().toLowerCase());\n        . OK. I'm going to apply same logic on `resolveSchemaFromType` and to add some tests for String and Objects types.\n\nBut I've currently broken my local swagger-jaxrs2 module for implementing the springBoot module which I need (#3058).\nMaybe I could edit ReaderTest later ?. Well @frantuma, I did it : #3112 \nI also suggested you to mix implementation with format attribute : #3114. ",
    "albertotn": "How it's possible to exclude this guava-android transitive dependency from build.gradle ?\nI mean the following jar 'guava-27.0.1-android' and also related dependecies, my example build.gradle:\n```\nbuildscript {\n    repositories {\n        mavenCentral()\n        jcenter()\n    }\n}\nplugins {\n    id 'war'\n    id \"org.hidetake.swagger.generator\" version \"2.12.0\"\n}\ndef defaultEncoding = 'UTF-8'\ncompileJava   {\n  sourceCompatibility = '1.8'\n  targetCompatibility = '1.8'\n  options.encoding = defaultEncoding\n}\nrepositories {\n    //mavenLocal()\n    mavenCentral()\n    jcenter()\n}\ndependencies {\n    compile         'io.swagger:swagger-annotations:1.5.21',\n                    'io.swagger:swagger-jaxrs:1.5.22'  \n}\nsourceSets {\n    main {\n        java {\n            srcDir 'src/gen/java'\n        }\n    }\n}\n```\nand here dependency tree:\n```\n:dependencies\n\nRoot project\nannotationProcessor - Annotation processors and their dependencies for source set 'main'.\nNo dependencies\napiElements - API elements for main. (n)\nNo dependencies\narchives - Configuration for archive artifacts.\nNo dependencies\ncompile - Dependencies for source set 'main' (deprecated, use 'implementation ' instead).\n+--- io.swagger:swagger-annotations:1.5.21 -> 1.5.22\n--- io.swagger:swagger-jaxrs:1.5.22\n     +--- com.fasterxml.jackson.core:jackson-databind:2.9.8\n     |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     +--- io.swagger:swagger-core:1.5.22\n     |    +--- org.apache.commons:commons-lang3:3.2.1\n     |    +--- org.slf4j:slf4j-api:1.7.22\n     |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    +--- com.fasterxml.jackson.core:jackson-databind:2.9.8 ()\n     |    +--- com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8\n     |    |    +--- org.yaml:snakeyaml:1.23\n     |    |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     |    +--- io.swagger:swagger-models:1.5.22\n     |    |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    |    +--- org.slf4j:slf4j-api:1.7.22\n     |    |    --- io.swagger:swagger-annotations:1.5.22\n     |    +--- com.google.guava:guava:27.0.1-android\n     |    |    +--- com.google.guava:failureaccess:1.0.1\n     |    |    +--- com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava\n     |    |    +--- com.google.code.findbugs:jsr305:3.0.2\n     |    |    +--- org.checkerframework:checker-compat-qual:2.5.2\n     |    |    +--- com.google.errorprone:error_prone_annotations:2.2.0\n     |    |    +--- com.google.j2objc:j2objc-annotations:1.1\n     |    |    --- org.codehaus.mojo:animal-sniffer-annotations:1.17\n     |    --- javax.validation:validation-api:1.1.0.Final\n     +--- javax.ws.rs:jsr311-api:1.1.1\n     +--- org.reflections:reflections:0.9.11\n     |    +--- com.google.guava:guava:20.0 -> 27.0.1-android ()\n     |    --- org.javassist:javassist:3.21.0-GA\n     --- com.google.guava:guava:27.0.1-android (*)\ncompileClasspath - Compile classpath for source set 'main'.\n+--- io.swagger:swagger-annotations:1.5.21 -> 1.5.22\n--- io.swagger:swagger-jaxrs:1.5.22\n     +--- com.fasterxml.jackson.core:jackson-databind:2.9.8\n     |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     +--- io.swagger:swagger-core:1.5.22\n     |    +--- org.apache.commons:commons-lang3:3.2.1\n     |    +--- org.slf4j:slf4j-api:1.7.22\n     |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    +--- com.fasterxml.jackson.core:jackson-databind:2.9.8 ()\n     |    +--- com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8\n     |    |    +--- org.yaml:snakeyaml:1.23\n     |    |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     |    +--- io.swagger:swagger-models:1.5.22\n     |    |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    |    +--- org.slf4j:slf4j-api:1.7.22\n     |    |    --- io.swagger:swagger-annotations:1.5.22\n     |    +--- com.google.guava:guava:27.0.1-android\n     |    |    +--- com.google.guava:failureaccess:1.0.1\n     |    |    +--- com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava\n     |    |    +--- com.google.code.findbugs:jsr305:3.0.2\n     |    |    +--- org.checkerframework:checker-compat-qual:2.5.2\n     |    |    +--- com.google.errorprone:error_prone_annotations:2.2.0\n     |    |    +--- com.google.j2objc:j2objc-annotations:1.1\n     |    |    --- org.codehaus.mojo:animal-sniffer-annotations:1.17\n     |    --- javax.validation:validation-api:1.1.0.Final\n     +--- javax.ws.rs:jsr311-api:1.1.1\n     +--- org.reflections:reflections:0.9.11\n     |    +--- com.google.guava:guava:20.0 -> 27.0.1-android ()\n     |    --- org.javassist:javassist:3.21.0-GA\n     --- com.google.guava:guava:27.0.1-android (*)\ncompileOnly - Compile only dependencies for source set 'main'.\nNo dependencies\ndefault - Configuration for default artifacts.\n+--- io.swagger:swagger-annotations:1.5.21 -> 1.5.22\n--- io.swagger:swagger-jaxrs:1.5.22\n     +--- com.fasterxml.jackson.core:jackson-databind:2.9.8\n     |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     +--- io.swagger:swagger-core:1.5.22\n     |    +--- org.apache.commons:commons-lang3:3.2.1\n     |    +--- org.slf4j:slf4j-api:1.7.22\n     |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    +--- com.fasterxml.jackson.core:jackson-databind:2.9.8 ()\n     |    +--- com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8\n     |    |    +--- org.yaml:snakeyaml:1.23\n     |    |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     |    +--- io.swagger:swagger-models:1.5.22\n     |    |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    |    +--- org.slf4j:slf4j-api:1.7.22\n     |    |    --- io.swagger:swagger-annotations:1.5.22\n     |    +--- com.google.guava:guava:27.0.1-android\n     |    |    +--- com.google.guava:failureaccess:1.0.1\n     |    |    +--- com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava\n     |    |    +--- com.google.code.findbugs:jsr305:3.0.2\n     |    |    +--- org.checkerframework:checker-compat-qual:2.5.2\n     |    |    +--- com.google.errorprone:error_prone_annotations:2.2.0\n     |    |    +--- com.google.j2objc:j2objc-annotations:1.1\n     |    |    --- org.codehaus.mojo:animal-sniffer-annotations:1.17\n     |    --- javax.validation:validation-api:1.1.0.Final\n     +--- javax.ws.rs:jsr311-api:1.1.1\n     +--- org.reflections:reflections:0.9.11\n     |    +--- com.google.guava:guava:20.0 -> 27.0.1-android ()\n     |    --- org.javassist:javassist:3.21.0-GA\n     --- com.google.guava:guava:27.0.1-android (*)\nimplementation - Implementation only dependencies for source set 'main'. (n)\nNo dependencies\nprovidedCompile - Additional compile classpath for libraries that should not be part of the WAR archive.\nNo dependencies\nprovidedRuntime - Additional runtime classpath for libraries that should not be part of the WAR archive.\nNo dependencies\nruntime - Runtime dependencies for source set 'main' (deprecated, use 'runtimeOnly ' instead).\n+--- io.swagger:swagger-annotations:1.5.21 -> 1.5.22\n--- io.swagger:swagger-jaxrs:1.5.22\n     +--- com.fasterxml.jackson.core:jackson-databind:2.9.8\n     |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     +--- io.swagger:swagger-core:1.5.22\n     |    +--- org.apache.commons:commons-lang3:3.2.1\n     |    +--- org.slf4j:slf4j-api:1.7.22\n     |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    +--- com.fasterxml.jackson.core:jackson-databind:2.9.8 ()\n     |    +--- com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8\n     |    |    +--- org.yaml:snakeyaml:1.23\n     |    |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     |    +--- io.swagger:swagger-models:1.5.22\n     |    |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    |    +--- org.slf4j:slf4j-api:1.7.22\n     |    |    --- io.swagger:swagger-annotations:1.5.22\n     |    +--- com.google.guava:guava:27.0.1-android\n     |    |    +--- com.google.guava:failureaccess:1.0.1\n     |    |    +--- com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava\n     |    |    +--- com.google.code.findbugs:jsr305:3.0.2\n     |    |    +--- org.checkerframework:checker-compat-qual:2.5.2\n     |    |    +--- com.google.errorprone:error_prone_annotations:2.2.0\n     |    |    +--- com.google.j2objc:j2objc-annotations:1.1\n     |    |    --- org.codehaus.mojo:animal-sniffer-annotations:1.17\n     |    --- javax.validation:validation-api:1.1.0.Final\n     +--- javax.ws.rs:jsr311-api:1.1.1\n     +--- org.reflections:reflections:0.9.11\n     |    +--- com.google.guava:guava:20.0 -> 27.0.1-android ()\n     |    --- org.javassist:javassist:3.21.0-GA\n     --- com.google.guava:guava:27.0.1-android (*)\nruntimeClasspath - Runtime classpath of source set 'main'.\n+--- io.swagger:swagger-annotations:1.5.21 -> 1.5.22\n--- io.swagger:swagger-jaxrs:1.5.22\n     +--- com.fasterxml.jackson.core:jackson-databind:2.9.8\n     |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     +--- io.swagger:swagger-core:1.5.22\n     |    +--- org.apache.commons:commons-lang3:3.2.1\n     |    +--- org.slf4j:slf4j-api:1.7.22\n     |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    +--- com.fasterxml.jackson.core:jackson-databind:2.9.8 ()\n     |    +--- com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8\n     |    |    +--- org.yaml:snakeyaml:1.23\n     |    |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     |    +--- io.swagger:swagger-models:1.5.22\n     |    |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    |    +--- org.slf4j:slf4j-api:1.7.22\n     |    |    --- io.swagger:swagger-annotations:1.5.22\n     |    +--- com.google.guava:guava:27.0.1-android\n     |    |    +--- com.google.guava:failureaccess:1.0.1\n     |    |    +--- com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava\n     |    |    +--- com.google.code.findbugs:jsr305:3.0.2\n     |    |    +--- org.checkerframework:checker-compat-qual:2.5.2\n     |    |    +--- com.google.errorprone:error_prone_annotations:2.2.0\n     |    |    +--- com.google.j2objc:j2objc-annotations:1.1\n     |    |    --- org.codehaus.mojo:animal-sniffer-annotations:1.17\n     |    --- javax.validation:validation-api:1.1.0.Final\n     +--- javax.ws.rs:jsr311-api:1.1.1\n     +--- org.reflections:reflections:0.9.11\n     |    +--- com.google.guava:guava:20.0 -> 27.0.1-android ()\n     |    --- org.javassist:javassist:3.21.0-GA\n     --- com.google.guava:guava:27.0.1-android (*)\nruntimeElements - Elements of runtime for main. (n)\nNo dependencies\nruntimeOnly - Runtime only dependencies for source set 'main'. (n)\nNo dependencies\nswaggerCodegen\nNo dependencies\nswaggerTemplate\nNo dependencies\nswaggerUI\nNo dependencies\ntestAnnotationProcessor - Annotation processors and their dependencies for source set 'test'.\nNo dependencies\ntestCompile - Dependencies for source set 'test' (deprecated, use 'testImplementation ' instead).\n+--- io.swagger:swagger-annotations:1.5.21 -> 1.5.22\n--- io.swagger:swagger-jaxrs:1.5.22\n     +--- com.fasterxml.jackson.core:jackson-databind:2.9.8\n     |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     +--- io.swagger:swagger-core:1.5.22\n     |    +--- org.apache.commons:commons-lang3:3.2.1\n     |    +--- org.slf4j:slf4j-api:1.7.22\n     |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    +--- com.fasterxml.jackson.core:jackson-databind:2.9.8 ()\n     |    +--- com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8\n     |    |    +--- org.yaml:snakeyaml:1.23\n     |    |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     |    +--- io.swagger:swagger-models:1.5.22\n     |    |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    |    +--- org.slf4j:slf4j-api:1.7.22\n     |    |    --- io.swagger:swagger-annotations:1.5.22\n     |    +--- com.google.guava:guava:27.0.1-android\n     |    |    +--- com.google.guava:failureaccess:1.0.1\n     |    |    +--- com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava\n     |    |    +--- com.google.code.findbugs:jsr305:3.0.2\n     |    |    +--- org.checkerframework:checker-compat-qual:2.5.2\n     |    |    +--- com.google.errorprone:error_prone_annotations:2.2.0\n     |    |    +--- com.google.j2objc:j2objc-annotations:1.1\n     |    |    --- org.codehaus.mojo:animal-sniffer-annotations:1.17\n     |    --- javax.validation:validation-api:1.1.0.Final\n     +--- javax.ws.rs:jsr311-api:1.1.1\n     +--- org.reflections:reflections:0.9.11\n     |    +--- com.google.guava:guava:20.0 -> 27.0.1-android ()\n     |    --- org.javassist:javassist:3.21.0-GA\n     --- com.google.guava:guava:27.0.1-android (*)\ntestCompileClasspath - Compile classpath for source set 'test'.\n+--- io.swagger:swagger-annotations:1.5.21 -> 1.5.22\n--- io.swagger:swagger-jaxrs:1.5.22\n     +--- com.fasterxml.jackson.core:jackson-databind:2.9.8\n     |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     +--- io.swagger:swagger-core:1.5.22\n     |    +--- org.apache.commons:commons-lang3:3.2.1\n     |    +--- org.slf4j:slf4j-api:1.7.22\n     |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    +--- com.fasterxml.jackson.core:jackson-databind:2.9.8 ()\n     |    +--- com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8\n     |    |    +--- org.yaml:snakeyaml:1.23\n     |    |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     |    +--- io.swagger:swagger-models:1.5.22\n     |    |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    |    +--- org.slf4j:slf4j-api:1.7.22\n     |    |    --- io.swagger:swagger-annotations:1.5.22\n     |    +--- com.google.guava:guava:27.0.1-android\n     |    |    +--- com.google.guava:failureaccess:1.0.1\n     |    |    +--- com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava\n     |    |    +--- com.google.code.findbugs:jsr305:3.0.2\n     |    |    +--- org.checkerframework:checker-compat-qual:2.5.2\n     |    |    +--- com.google.errorprone:error_prone_annotations:2.2.0\n     |    |    +--- com.google.j2objc:j2objc-annotations:1.1\n     |    |    --- org.codehaus.mojo:animal-sniffer-annotations:1.17\n     |    --- javax.validation:validation-api:1.1.0.Final\n     +--- javax.ws.rs:jsr311-api:1.1.1\n     +--- org.reflections:reflections:0.9.11\n     |    +--- com.google.guava:guava:20.0 -> 27.0.1-android ()\n     |    --- org.javassist:javassist:3.21.0-GA\n     --- com.google.guava:guava:27.0.1-android (*)\ntestCompileOnly - Compile only dependencies for source set 'test'.\nNo dependencies\ntestImplementation - Implementation only dependencies for source set 'test'. (n)\nNo dependencies\ntestRuntime - Runtime dependencies for source set 'test' (deprecated, use 'testRuntimeOnly ' instead).\n+--- io.swagger:swagger-annotations:1.5.21 -> 1.5.22\n--- io.swagger:swagger-jaxrs:1.5.22\n     +--- com.fasterxml.jackson.core:jackson-databind:2.9.8\n     |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     +--- io.swagger:swagger-core:1.5.22\n     |    +--- org.apache.commons:commons-lang3:3.2.1\n     |    +--- org.slf4j:slf4j-api:1.7.22\n     |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    +--- com.fasterxml.jackson.core:jackson-databind:2.9.8 ()\n     |    +--- com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8\n     |    |    +--- org.yaml:snakeyaml:1.23\n     |    |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     |    +--- io.swagger:swagger-models:1.5.22\n     |    |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    |    +--- org.slf4j:slf4j-api:1.7.22\n     |    |    --- io.swagger:swagger-annotations:1.5.22\n     |    +--- com.google.guava:guava:27.0.1-android\n     |    |    +--- com.google.guava:failureaccess:1.0.1\n     |    |    +--- com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava\n     |    |    +--- com.google.code.findbugs:jsr305:3.0.2\n     |    |    +--- org.checkerframework:checker-compat-qual:2.5.2\n     |    |    +--- com.google.errorprone:error_prone_annotations:2.2.0\n     |    |    +--- com.google.j2objc:j2objc-annotations:1.1\n     |    |    --- org.codehaus.mojo:animal-sniffer-annotations:1.17\n     |    --- javax.validation:validation-api:1.1.0.Final\n     +--- javax.ws.rs:jsr311-api:1.1.1\n     +--- org.reflections:reflections:0.9.11\n     |    +--- com.google.guava:guava:20.0 -> 27.0.1-android ()\n     |    --- org.javassist:javassist:3.21.0-GA\n     --- com.google.guava:guava:27.0.1-android (*)\ntestRuntimeClasspath - Runtime classpath of source set 'test'.\n+--- io.swagger:swagger-annotations:1.5.21 -> 1.5.22\n--- io.swagger:swagger-jaxrs:1.5.22\n     +--- com.fasterxml.jackson.core:jackson-databind:2.9.8\n     |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     +--- io.swagger:swagger-core:1.5.22\n     |    +--- org.apache.commons:commons-lang3:3.2.1\n     |    +--- org.slf4j:slf4j-api:1.7.22\n     |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    +--- com.fasterxml.jackson.core:jackson-databind:2.9.8 ()\n     |    +--- com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8\n     |    |    +--- org.yaml:snakeyaml:1.23\n     |    |    --- com.fasterxml.jackson.core:jackson-core:2.9.8\n     |    +--- io.swagger:swagger-models:1.5.22\n     |    |    +--- com.fasterxml.jackson.core:jackson-annotations:2.9.8\n     |    |    +--- org.slf4j:slf4j-api:1.7.22\n     |    |    --- io.swagger:swagger-annotations:1.5.22\n     |    +--- com.google.guava:guava:27.0.1-android\n     |    |    +--- com.google.guava:failureaccess:1.0.1\n     |    |    +--- com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava\n     |    |    +--- com.google.code.findbugs:jsr305:3.0.2\n     |    |    +--- org.checkerframework:checker-compat-qual:2.5.2\n     |    |    +--- com.google.errorprone:error_prone_annotations:2.2.0\n     |    |    +--- com.google.j2objc:j2objc-annotations:1.1\n     |    |    --- org.codehaus.mojo:animal-sniffer-annotations:1.17\n     |    --- javax.validation:validation-api:1.1.0.Final\n     +--- javax.ws.rs:jsr311-api:1.1.1\n     +--- org.reflections:reflections:0.9.11\n     |    +--- com.google.guava:guava:20.0 -> 27.0.1-android ()\n     |    --- org.javassist:javassist:3.21.0-GA\n     --- com.google.guava:guava:27.0.1-android (*)\ntestRuntimeOnly - Runtime only dependencies for source set 'test'. (n)\nNo dependencies\n(*) - dependencies omitted (listed previously)\nA web-based, searchable dependency report is available by adding the --scan option.\nBUILD SUCCESSFUL in 3s\n1 actionable task: 1 executed\n```. Update on previous question: I've found the change that guava maintainers does, more info on guava and in particular: https://github.com/google/guava/issues/2914 \nSo why swagger code opted for android flavor instead of jre ones?. ",
    "radup": "Proposed patch attached (tests needs to be patched as well - PojoTest.java). This is also in conjunction with a little patch for SwaggerDeserializer.java in swagger-parser project (branch v1) - patch attached as well.\nswagger-core-patch.txt\nswagger-parser-patch.txt\n. ",
    "patrickfav": "Alright, then Id prepare the PR in the next couple of days. I would start with the maven plugin. When we agree on the exact requirement and behaviour, this can then be ported to the Gradle plugin.\n\nMaybe the config name could be configurationFilePath\n\nYou are right, this is probably better.. Hi, I've updated the Readme. Please let me know if there is anything you feel needs to be changed.. Correct. That is why I left it with package visibility. Do you have a suggestion to better mark it as test method (Im familiar with a @VisibleForTesting annotation found in com.google.common.annotations)?. Yours is probably clearer, will change.. Done.. ",
    "josephlbarnett": "Thanks for the reply, looks like JaxrsApplicationScanner does what we want.  Was this an intended default behavior change or was it a bug in Reflections that JaxrsApplicationAndAnnotationScanner wasn't working properly before?. ",
    "step76": "getName is available on the TypeVariable interface so the TypeVariableImpl by sun is useless.\n. ",
    "shadidchowdhury": "Yeah I confirm it is fixed in 1.5.4, closing this pr.\n. ",
    "ritesh-garg": "I agree with both the points. I did not change them earlier because they were part of the existing code. Have made changes now. Thanks!. ",
    "jbau": "This is the test that would fail if the change is not present.  The value would be #/definitions/AbstractEntity. This is the test that would fail if the change is not present. The failing value would be #/definitions/AbstractEntity. ",
    "mrglavas": "Guessing this got changed in the package renaming. Shouldn't this be \"javax.ws.rs.core.Response\"?. ",
    "liam-jackson-hpe": "I believe it should be acceptable to trust the name if its been set in mi.\nHowever, I'm not 100% confident because I'm not aware of the intention behind the below re-introspection of propType to get name. Also the tests still pass if I completely remove this if and just rely on mi.getName().\nThis feature does require using the name from mi and not the one from _typeName(propType, beanDesc) as it would be wrong for classes using @JsonValue.. Hi @webron, please could you elaborate on the problem here?. I've been advised that if I wrote a portion of the code, then that portion is owned by my employer.  They are happy to contribute the code to your project, but feel that an appropriate copyright notice needs to be present for two reasons:\n\nRegardless of whether the copyright line is included, the code I wrote is really owned by them.\nNot notifying other potential users of the complete copyright ownership can only lead to misunderstandings down the road.. \n"
}